Creo®Parametric TOOLKIT
User’sGuide
7.0.2.0Copyright ©2020 PTC Inc. and/or ItsSubsidiary Companies. AllRights Reserved.
Userandtrainingguidesandrelateddocumentation fromPTCInc.anditssubsidiary companies (collectively
"PTC")aresubjecttothecopyrightlawsoftheUnitedStatesandothercountriesandareprovidedundera
licenseagreement thatrestrictscopying,disclosure, anduseofsuchdocumentation. PTCherebygrantstothe
licensedsoftwareusertherighttomakecopiesinprintedformofthisdocumentation ifprovidedonsoftware
media,butonlyforinternal/personal useandinaccordance withthelicenseagreement underwhichthe
applicable softwareislicensed.AnycopymadeshallincludethePTCcopyrightnoticeandanyother
proprietary noticeprovidedbyPTC.Trainingmaterialsmaynotbecopiedwithouttheexpresswrittenconsent
ofPTC.Thisdocumentation maynotbedisclosed, transferred, modified,orreducedtoanyform,including
electronic media,ortransmitted ormadepubliclyavailablebyanymeanswithoutthepriorwrittenconsentofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofPTC.Thisdocumentation maynotbedisclosed, transferred, modified,orreducedtoanyform,including
electronic media,ortransmitted ormadepubliclyavailablebyanymeanswithoutthepriorwrittenconsentof
PTCandnoauthorization isgrantedtomakecopiesforsuchpurposes.Information describedhereinis
furnishedforgeneralinformation only,issubjecttochangewithoutnotice,andshouldnotbeconstruedasa
warrantyorcommitment byPTC.PTCassumesnoresponsibility orliabilityforanyerrorsorinaccuracies
thatmayappearinthisdocument.
Thesoftwaredescribedinthisdocument isprovidedunderwrittenlicenseagreement, containsvaluabletrade
secretsandproprietary information, andisprotectedbythecopyrightlawsoftheUnitedStatesandother
countries.Itmaynotbecopiedordistributed inanyformormedium,disclosedtothirdparties,orusedinany
mannernotprovidedforinthesoftwarelicensesagreement exceptwithwrittenpriorapprovalfromPTC.
UNAUTHORIZED USEOFSOFTWAREORITSDOCUMENT ATIONCANRESULTINCIVIL
DAMAGES ANDCRIMINAL PROSECUTION.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmannernotprovidedforinthesoftwarelicensesagreement exceptwithwrittenpriorapprovalfromPTC.
UNAUTHORIZED USEOFSOFTWAREORITSDOCUMENT ATIONCANRESULTINCIVIL
DAMAGES ANDCRIMINAL PROSECUTION.
PTCregardssoftwarepiracyasthecrimeitis,andweviewoffendersaccordingly .Wedonottoleratethe
piracyofPTCsoftwareproducts,andwepursue(bothcivillyandcriminally) thosewhodosousingalllegal
meansavailable,includingpublicandprivatesurveillance resources. Aspartoftheseefforts,PTCusesdata
monitoring andscouringtechnologies toobtainandtransmitdataonusersofillegalcopiesofoursoftware.
Thisdatacollection isnotperformed onusersoflegallylicensedsoftwarefromPTCanditsauthorized
distributors. Ifyouareusinganillegalcopyofoursoftwareanddonotconsenttothecollection and
transmission ofsuchdata(including totheUnitedStates),ceaseusingtheillegalversion,andcontactPTCto
obtainalegallylicensedcopy.
Important Copyright, Trademark, Patent, andLicensing Information: SeetheAboutBox,orcopyright
notice,ofyourPTCsoftware.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxobtainalegallylicensedcopy.
Important Copyright, Trademark, Patent, andLicensing Information: SeetheAboutBox,orcopyright
notice,ofyourPTCsoftware.
UNITED STATES GOVERNMENT RIGHTS
PTCsoftwareproductsandsoftwaredocumentation are“commercial items”asthattermisdefinedat48C.F.
R.2.101.PursuanttoFederalAcquisition Regulation (FAR)12.212(a)-(b)(Computer Software) (MAY2014)
forcivilianagenciesortheDefenseFederalAcquisition Regulation Supplement (DFARS)at227.7202-1(a)
(Policy)and227.7202-3 (a)(Rightsincommercial computersoftwareorcommercial computersoftware
documentation) (FEB2014)fortheDepartment ofDefense,PTCsoftwareproductsandsoftware
documentation areprovidedtotheU.S.Government underthePTCcommercial licenseagreement. Use,
duplication ordisclosure bytheU.S.Government issubjectsolelytothetermsandconditions setforthinthe
applicable PTCsoftwarelicenseagreement.
PTCInc.,121SeaportBlvd,Boston,MA02210USAContentsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxduplication ordisclosure bytheU.S.Government issubjectsolelytothetermsandconditions setforthinthe
applicable PTCsoftwarelicenseagreement.
PTCInc.,121SeaportBlvd,Boston,MA02210USAContents
AboutThisGuide......................................................................................................19
Fundamentals ...........................................................................................................22
Introduction toCreoParametricTOOLKIT............................................................23
OnlineDocumentation inCreoParametricTOOLKITAPIWizard.............................23
CreoParametricTOOLKITStyle..........................................................................24
InstallingCreoParametricTOOLKIT....................................................................27
DevelopingaCreoParametricTOOLKITApplication.............................................35
CreoParametricTOOLKITSupportforCreoApplications ......................................54xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDevelopingaCreoParametricTOOLKITApplication.............................................35
CreoParametricTOOLKITSupportforCreoApplications ......................................54
User-Supplied Main............................................................................................55
Asynchronous Mode...........................................................................................56
CreoParametricTOOLKITTechniques................................................................56
VisitFunctions....................................................................................................62
SupportforCreoModelNamesandFilesPaths....................................................64
WideStrings.......................................................................................................65
StringandWidestringFunctions..........................................................................66xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxStringandWidestringFunctions..........................................................................66
SupportforIPv6.................................................................................................68
AccessingLearningConnector .............................................................................68
Core:ModelsandModelItems...................................................................................69
Modes...............................................................................................................70
Models...............................................................................................................70
ModelItems.......................................................................................................80
VersionStamps..................................................................................................82xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVersionStamps..................................................................................................82
Layers...............................................................................................................84
Notebook...........................................................................................................89
VisitingDisplayedEntities...................................................................................89
Core:Solids,Parts,andMaterials...............................................................................91
SolidObjects......................................................................................................92
PartObjects.....................................................................................................116
MaterialObjects...............................................................................................117xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMaterialObjects...............................................................................................117
Core:SolidBody.....................................................................................................125
Introduction toSolidBody..................................................................................126
Statesofbodies................................................................................................126
CreatingaBody................................................................................................127
ListingFeatures................................................................................................128
MultibodyOperations........................................................................................129
Core:Features........................................................................................................130xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCore:Features........................................................................................................130
FeatureObjects................................................................................................131
VisitingFeatures...............................................................................................131
3FeatureInquiry.................................................................................................131
FeatureGeometry............................................................................................137
Manipulating Features.......................................................................................137
Manipulating FeaturesbasedonRegeneration Flags..........................................140
FeatureDimensions..........................................................................................142xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFeatureDimensions..........................................................................................142
Manipulating Patterns.......................................................................................142
CreatingLocalGroups......................................................................................144
ReadAccesstoGroups....................................................................................145
UpdatingorReplacingUDFs.............................................................................148
PlacingUDFs...................................................................................................148
TheUDFInputDataStructureProUdfdata..........................................................150
ReadingUDFProperties...................................................................................157
NotificationonUDFLibraryCreation..................................................................160xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNotificationonUDFLibraryCreation..................................................................160
MultibodySupportinaUDFandaCopyfeature..................................................160
Core:3DGeometry.................................................................................................168
GeometryObjects.............................................................................................169
VisitingGeometryObjects.................................................................................170
Tessellation......................................................................................................179
EvaluatingGeometry........................................................................................182
GeometryEquations.........................................................................................185
RayTracing......................................................................................................192xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRayTracing......................................................................................................192
Measurement ...................................................................................................193
GeometryasNURBS........................................................................................196
Interference......................................................................................................196
FacetedGeometry............................................................................................200
Core:Relations.......................................................................................................202
Relations..........................................................................................................203
AddingaCustomized FunctiontotheRelationsDialoginCreoParametric............206xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRelations..........................................................................................................203
AddingaCustomized FunctiontotheRelationsDialoginCreoParametric............206
Core:Parameters....................................................................................................208
ParameterObjects............................................................................................209
ParameterValues.............................................................................................210
AccessingParameters......................................................................................210
Designating Parameters WindchillServers.........................................................216
RestrictedParameters ......................................................................................216
Table-Restricted Parameters.............................................................................217xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTable-Restricted Parameters.............................................................................217
DrivenParameters............................................................................................218
Core:CoordinateSystemsandTransformations ........................................................220
CoordinateSystems.........................................................................................221
CoordinateSystemTransformations ..................................................................223
Core:FamilyTables.................................................................................................228
FamilyTableObjects.........................................................................................229
FamilyTableUtilities.........................................................................................229
VisitingFamilyTables........................................................................................229xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVisitingFamilyTables........................................................................................229
OperationsonFamilyTableInstances................................................................230
OperationsonFamilyTableItems......................................................................232
4 Creo®Parametric TOOLKIT User’sGuideCore:ExternalData.................................................................................................233
Introduction toExternalData.............................................................................234
StoringExternalData........................................................................................235
RetrievingExternalData...................................................................................237
Core:CrossSections...............................................................................................239xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCore:CrossSections...............................................................................................239
ListingCrossSections.......................................................................................240
ExtractingCross-Sectional Geometry.................................................................240
VisitingCrossSections......................................................................................244
CreatingandModifyingCrossSections..............................................................244
MassPropertiesofCrossSections.....................................................................250
LinePatternsofCrossSectionComponents .......................................................251
Core:Utilities..........................................................................................................257
Configuration Options.......................................................................................258xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxConfiguration Options.......................................................................................258
RegistryFileData.............................................................................................258
TrailFiles.........................................................................................................259
CreoParametricLicenseData...........................................................................259
CurrentDirectory..............................................................................................259
FileHandling....................................................................................................259
WideStrings.....................................................................................................263
FreeingIntegerOutputs....................................................................................264xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFreeingIntegerOutputs....................................................................................264
RunningCreoModelCHECK .............................................................................264
Core:Asynchronous Mode.......................................................................................273
Overview..........................................................................................................274
SimpleAsynchronous Mode..............................................................................275
FullAsynchronous Mode...................................................................................278
UserInterface:Messages........................................................................................280
WritingaMessageUsingaPopupDialog...........................................................281
WritingaMessagetotheMessageWindow........................................................281xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxWritingaMessageUsingaPopupDialog...........................................................281
WritingaMessagetotheMessageWindow........................................................281
MessageClassification .....................................................................................284
WritingaMessagetoanInternalBuffer..............................................................285
GettingKeyboardInput.....................................................................................285
UsingDefaultValues.........................................................................................286
UserInterface:RibbonTabs,Groups,andMenuItems...............................................288
CreatingRibbonTabs,Groups,andMenuItems.................................................289
AbouttheRibbonDefinitionFile.........................................................................291
LocalizingtheRibbonUserInterfaceCreatedbyCreoParametricTOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAbouttheRibbonDefinitionFile.........................................................................291
LocalizingtheRibbonUserInterfaceCreatedbyCreoParametricTOOLKIT
Applications ..................................................................................................294
TabSwitchingEvents........................................................................................295
SupportforLegacyPro/TOOLKITApplications ....................................................295
MigrationofLegacyPro/TOOLKITApplications ...................................................296
UserInterface:Menus,Commands, andPopupmenus ...............................................297
Introduction......................................................................................................298
MenuButtonsandMenus..................................................................................298xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMenuButtonsandMenus..................................................................................298
Designating Commands....................................................................................306
PopupMenus...................................................................................................311
Contents 5MenuManagerButtonsandMenus....................................................................316
Customizing theCreoParametricNavigationArea..............................................331
EnteringCreoParametricCommands................................................................335
UserInterface:Dialogs............................................................................................339
Introduction......................................................................................................341
UIComponents ................................................................................................342xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUIComponents ................................................................................................342
CascadeButton................................................................................................353
Checkbutton .....................................................................................................354
DrawingArea...................................................................................................356
InputPanel.......................................................................................................365
Label...............................................................................................................368
Layout.............................................................................................................370
List..................................................................................................................372xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxList..................................................................................................................372
Menubar..........................................................................................................375
Menupane........................................................................................................376
Optionmenu .....................................................................................................378
Progressbar .....................................................................................................380
Pushbutton.......................................................................................................382
Radiogroup......................................................................................................384
Separator.........................................................................................................386xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSeparator.........................................................................................................386
Slider...............................................................................................................387
Spinbox...........................................................................................................389
Tab..................................................................................................................391
Table...............................................................................................................394
Textarea...........................................................................................................402
Thumbwheel ....................................................................................................405
Tree.................................................................................................................407xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTree.................................................................................................................407
MasterTableofResourceFileAttributes.............................................................419
UsingResourceFiles........................................................................................438
UserInterface:Dashboards .....................................................................................461
Introduction toDashboards................................................................................462
Dashboard.......................................................................................................462
DashboardPage..............................................................................................465
UserInterface:BasicGraphics.................................................................................468xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserInterface:BasicGraphics.................................................................................468
Manipulating Windows......................................................................................469
FlushingtheDisplayCommandstoWindow.......................................................474
SolidOrientation...............................................................................................474
GraphicsColorsandLineStyles........................................................................477
DisplayingGraphics..........................................................................................481
DisplayingText.................................................................................................483
ValidatingTextStyles........................................................................................484
DisplayLists.....................................................................................................485xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDisplayLists.....................................................................................................485
GettingMouseInput..........................................................................................486
CosmeticProperties.........................................................................................487
Creating3DShadedDataforRendering.............................................................492
6 Creo®Parametric TOOLKIT User’sGuideUserInterface:Selection..........................................................................................495
TheSelectionObject.........................................................................................496
InteractiveSelection.........................................................................................499
Highlighting......................................................................................................503xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxHighlighting......................................................................................................503
SelectionBuffer................................................................................................504
UserInterface:CurveandSurfaceCollection............................................................508
Introduction toCurveandSurfaceCollection......................................................509
InteractiveCollection.........................................................................................510
AccessingCollectionobjectfromSelectionBuffer...............................................513
AddingaCollectionObjecttotheSelectionBuffer...............................................514
Programmatic AccesstoCollections..................................................................514
AccessofCollectionObjectfromFeatureElementTrees.....................................524xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProgrammatic AccesstoCollections..................................................................514
AccessofCollectionObjectfromFeatureElementTrees.....................................524
Programmatic AccesstoLegacyCollections......................................................525
Example1:InteractiveCurveCollectionusingCreoParametricTOOLKIT.............526
Example2:InteractiveSurfaceCollectionusingCreoParametric
TOOLKIT......................................................................................................526
UserInterface:Animation.........................................................................................527
Introduction......................................................................................................528
AnimationObjects............................................................................................529
AnimationFrames............................................................................................529xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnimationFrames............................................................................................529
PlayingAnimations...........................................................................................530
Annotations: AnnotationFeaturesandAnnotations....................................................533
OverviewofAnnotationFeatures.......................................................................534
CreatingAnnotationFeatures............................................................................534
RedefiningAnnotationFeatures.........................................................................535
VisitingAnnotationFeatures..............................................................................536
CreatingDatumTargets....................................................................................536
VisitingAnnotationElements.............................................................................537xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVisitingAnnotationElements.............................................................................537
AccessingAnnotationElements.........................................................................538
Modification ofAnnotationElements..................................................................540
AutomaticPropagation ofAnnotationElements...................................................543
DetailTree.......................................................................................................544
AccesstoAnnotations.......................................................................................545
ConvertingAnnotations toLatestVersion...........................................................549
AnnotationTextStyles.......................................................................................549
AnnotationOrientation......................................................................................550xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotationOrientation......................................................................................550
AnnotationAssociativity ....................................................................................553
InteractiveSelection.........................................................................................555
DisplayModes..................................................................................................555
Designating Dimensions andSymbols................................................................555
Dimensions......................................................................................................556
Notes...............................................................................................................586
GeometricTolerances.......................................................................................595xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGeometricTolerances.......................................................................................595
AccessingSetDatumTags................................................................................595
AccessingSetDatumsforDatumAxesorPlanes................................................599
SurfaceFinishAnnotations................................................................................600
Contents 7SymbolAnnotations..........................................................................................602
Annotations: GeometricTolerances..........................................................................605
GeometricToleranceObjects.............................................................................606
VisitingGeometricTolerances............................................................................606
ReadingGeometricTolerances..........................................................................607xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxReadingGeometricTolerances..........................................................................607
CreatingaGeometricTolerance.........................................................................611
DeletingaGeometricTolerance.........................................................................617
ValidatingaGeometricTolerance.......................................................................617
GeometricToleranceLayout..............................................................................617
AdditionalTextforGeometricTolerances............................................................618
GeometricToleranceTextStyle..........................................................................619
PrefixandSuffixforGeometricTolerances.........................................................620
Parameters forGeometricToleranceAttributes...................................................621xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPrefixandSuffixforGeometricTolerances.........................................................620
Parameters forGeometricToleranceAttributes...................................................621
Annotations: DesignatedAreaFeature......................................................................622
Introduction toDesignatedAreaFeature............................................................623
FeatureElementTreefortheDesignatedArea....................................................623
AccessingDesignatedAreaProperties...............................................................625
DataManagement: WindchillOperations..................................................................627
Introduction......................................................................................................628
AccessingaWindchillServerfromaCreoParametricSession.............................628xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingaWindchillServerfromaCreoParametricSession.............................628
AccessingtheWorkspace.................................................................................631
WorkflowtoRegisteraServer............................................................................633
AliasedURL.....................................................................................................633
ServerOperations............................................................................................634
UtilityAPIs.......................................................................................................648
SampleBatchWorkflow....................................................................................649
Interface:DataExchange.........................................................................................650
ExportingInformationFiles................................................................................651xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExportingInformationFiles................................................................................651
Exporting2DModels.........................................................................................653
AutomaticPrintingof3DModels........................................................................658
Exporting3DModels.........................................................................................664
ShrinkwrapExport............................................................................................680
ExportingtoPDFandU3D................................................................................684
ImportingParameterFiles.................................................................................692
Importing2DModels.........................................................................................694
Importing3DModels.........................................................................................695xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxImporting3DModels.........................................................................................695
ValidationScoreforImports...............................................................................703
Interface:ImportingFeatures...................................................................................705
CreatingImportFeaturesfromFiles...................................................................706
CreatingImportFeaturesfromArbitraryGeometricData......................................709
RedefiningtheImportFeature...........................................................................722
ImportFeatureProperties..................................................................................723
ExtractingCreoParametricGeometryasInterfaceData......................................725
AssociativeTopologyBusEnabledInterfaces.....................................................726xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExtractingCreoParametricGeometryasInterfaceData......................................725
AssociativeTopologyBusEnabledInterfaces.....................................................726
AssociativeTopologyBusEnabledModelsandFeatures.....................................727
8 Creo®Parametric TOOLKIT User’sGuideInterface:Customized PlotDriver.............................................................................730
UsingthePlotDriverFunctionality ......................................................................731
WorkingwithMulti-CADModelsUsingCreoUnite.....................................................733
Overview..........................................................................................................734
SupportforFileNamesinNon-CreoModels.......................................................735
CharacterSupportforFileNamesinNon-CreoModels........................................735xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSupportforFileNamesinNon-CreoModels.......................................................735
CharacterSupportforFileNamesinNon-CreoModels........................................735
WorkingwithMulti-CADModelsinCreoParametricTOOLKIT.............................736
FunctionsthatSupportMulti-CADAssemblies....................................................739
Superseded Functions......................................................................................741
Restrictions onCharacterLengthforMulti-CADFunctions...................................743
FunctionalAreasinCreothatdonotSupportMulti-CADAssemblies....................747
SampleApplications forMulti-CADAssemblies...................................................747
MigratingApplications UsingTools.....................................................................748
ElementTrees:PrinciplesofFeatureCreation...........................................................749xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:PrinciplesofFeatureCreation...........................................................749
OverviewofFeatureCreation............................................................................750
FeatureInquiry.................................................................................................771
FeatureRedefine..............................................................................................773
XMLRepresentation ofFeatureElementTrees...................................................773
ElementTrees:References......................................................................................787
OverviewofReferenceObjects..........................................................................788
ReadingReferences.........................................................................................788
ModifyingReferences.......................................................................................791xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxModifyingReferences.......................................................................................791
ElementTrees:DatumFeatures...............................................................................792
DatumPlaneFeatures......................................................................................793
DatumPointFeatures.......................................................................................804
DatumAxisFeatures........................................................................................818
DatumCoordinateSystemFeatures...................................................................825
ElementTrees:DatumCurves..................................................................................834
DatumCurveFeatures......................................................................................835
DatumCurveTypes..........................................................................................835xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDatumCurveTypes..........................................................................................835
OtherDatumCurveTypes.................................................................................839
ElementTrees:EditMenuFeatures..........................................................................840
MirrorFeature..................................................................................................841
MoveFeature...................................................................................................843
FillFeature.......................................................................................................846
IntersectFeature..............................................................................................848
MergeFeature..................................................................................................848xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMergeFeature..................................................................................................848
PatternFeature................................................................................................851
WrapFeature...................................................................................................851
TrimFeature.....................................................................................................851
OffsetFeature..................................................................................................857
ThickenFeature...............................................................................................857
SolidifyFeature................................................................................................860
RemoveFeature...............................................................................................863xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRemoveFeature...............................................................................................863
AttachFeature..................................................................................................868
Contents 9ElementTrees:Replace..........................................................................................871
Introduction......................................................................................................872
TheFeatureElementTree.................................................................................872
ElementTrees:DraftFeatures..................................................................................873
DraftFeature....................................................................................................874
VariablePullDirectionDraftFeature...................................................................881xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVariablePullDirectionDraftFeature...................................................................881
ElementTrees:RoundandChamfer.........................................................................888
RoundFeature.................................................................................................889
ModifyRoundRadiusFeature...........................................................................900
AutoRoundFeature..........................................................................................902
ChamferFeature..............................................................................................903
CornerChamferFeature...................................................................................915
ElementTrees:Hole................................................................................................918
Overview..........................................................................................................919xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOverview..........................................................................................................919
FeatureElementTreeforHoleFeatures.............................................................919
FeatureElementDataTypes.............................................................................922
CommonElementValues..................................................................................925
PRO_E_HLE_COM Values...............................................................................925
ValidPRO_E_HLE_COM Sub-Elements ............................................................930
HolePlacementTypes......................................................................................934
Miscellaneous Information.................................................................................939
ElementTrees:Shell...............................................................................................942xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:Shell...............................................................................................942
Introduction toShellFeature..............................................................................943
FeatureElementTreefortheShellFeature.........................................................944
CreatingaShellFeature....................................................................................945
RedefiningaShellFeature................................................................................946
AccessingaShellFeature.................................................................................946
ElementTrees:Patterns..........................................................................................947
Introduction......................................................................................................948
TheElementTreeforPatternCreation...............................................................948xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheElementTreeforPatternCreation...............................................................948
ObtainingtheElementTreeforaPattern............................................................969
VisitingandCreatingaPattern...........................................................................969
ElementTrees:Sections..........................................................................................971
Overview..........................................................................................................972
CreatingSectionModels...................................................................................972
ElementTrees:SketchedFeatures...........................................................................987
Overview..........................................................................................................988
CreatingFeaturesContainingSections..............................................................989xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatingFeaturesContainingSections..............................................................989
CreatingFeatureswith2DSections...................................................................990
VerifyingSectionShapes...................................................................................991
CreatingFeatureswith3DSections...................................................................992
ReferenceEntitiesandUseEdge......................................................................992
ReusingExistingSketches................................................................................994
ElementTrees:ExtrudeandRevolve........................................................................996
10 Creo®Parametric TOOLKIT User’sGuideTheElementTreeforExtrudedFeatures............................................................997
TheElementTreeforRevolvedFeatures..........................................................1008xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheElementTreeforRevolvedFeatures..........................................................1008
TheElementTreeforFirstFeatures.................................................................1017
ElementTrees:Ribs..............................................................................................1020
TheElementTreeforRibFeatures..................................................................1021
ElementTrees:Sweep...........................................................................................1025
SweepsinCreoParametricTOOLKIT..............................................................1026
SweepFeature...............................................................................................1026
CreatingaSweepFeature...............................................................................1034
SimpleSweepFeature....................................................................................1035xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSimpleSweepFeature....................................................................................1035
ElementTrees:SolidBody.....................................................................................1038
Introduction....................................................................................................1039
TheElementTreeforBodyOptions..................................................................1039
TheElementTreeforBodyCopyFeature.........................................................1040
TheElementTreeforBodySplitFeature..........................................................1041
TheElementTreeforBodyRemoveFeature....................................................1044
TheElementTreeforBooleanBodyOperations................................................1045
ElementTrees:CreoFlexibleModelingFeatures.....................................................1050xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheElementTreeforBooleanBodyOperations................................................1045
ElementTrees:CreoFlexibleModelingFeatures.....................................................1050
MoveandMove-CopyFeatures.......................................................................1051
3DTransformation SetFeature........................................................................1057
AttachmentGeometryFeature.........................................................................1065
OffsetGeometryFeature.................................................................................1076
ModifyAnalyticSurfaceFeature......................................................................1078
TangencyPropagation ....................................................................................1081
MirrorFeature................................................................................................1086xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMirrorFeature................................................................................................1086
SubstituteFeature..........................................................................................1088
PlanarSymmetryRecognition Feature.............................................................1091
AttachFeature................................................................................................1093
Example1:CreatingaFlexibleModelFeature..................................................1097
ElementTrees:BushingLoad................................................................................1098
Introduction....................................................................................................1099
TheFeatureElementTreeforBushingLoads...................................................1099
ElementTrees:CosmeticThread...........................................................................1102xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheFeatureElementTreeforBushingLoads...................................................1099
ElementTrees:CosmeticThread...........................................................................1102
Introduction....................................................................................................1103
TheElementTreeforCosmeticThread............................................................1103
ElementTrees:ECADAreaFeature.......................................................................1107
Introduction toECADAreaFeature..................................................................1108
Assembly:BasicAssemblyAccess..........................................................................1112
StructureofAssembliesandAssemblyObjects..................................................1113
VisitingAssemblyComponents .........................................................................1115xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxStructureofAssembliesandAssemblyObjects..................................................1113
VisitingAssemblyComponents .........................................................................1115
LocationsofAssemblyComponents. .................................................................1119
Assembling Components ................................................................................1120
RedefiningandReroutingComponents ............................................................1120
DeletingComponents .....................................................................................1120
Contents 11FlexibleComponents ......................................................................................1120
ExplodedAssemblies......................................................................................1122
MergeandCutout...........................................................................................1125xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMergeandCutout...........................................................................................1125
AutomaticInterchange ....................................................................................1125
Assembly:Top-downDesign..................................................................................1127
Overview........................................................................................................1128
SkeletonModelFunctions...............................................................................1130
AssemblyComponent Functions......................................................................1131
ExternalReferenceControlFunctions..............................................................1131
FeatureandCopyGeomFeatureFunctions......................................................1133
ExternalReferenceDataGathering..................................................................1135xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFeatureandCopyGeomFeatureFunctions......................................................1133
ExternalReferenceDataGathering..................................................................1135
Assembly:Assembling Components .......................................................................1140
Assembling Components byFunctions.............................................................1141
Assembling aComponent Parametrically .........................................................1142
RedefiningComponents Interactively ...............................................................1146
Assembling Components byElementTree.......................................................1147
TheElementTreeforanAssemblyComponent ................................................1147
Assembling Components UsingIntentDatums..................................................1155
Assembly:KinematicDraggingandCreatingSnapshots..........................................1157xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAssembling Components UsingIntentDatums..................................................1155
Assembly:KinematicDraggingandCreatingSnapshots..........................................1157
ConnectingtoaKinematicDragSession..........................................................1158
PerformingKinematicDrag..............................................................................1160
CreatingandModifyingSnapshots...................................................................1160
SnapshotConstraints......................................................................................1161
SnapshotTransforms......................................................................................1163
SnapshotsinDrawingViews...........................................................................1164
Assembly:SimplifiedRepresentations ....................................................................1165xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAssembly:SimplifiedRepresentations ....................................................................1165
Overview........................................................................................................1166
SimplifiedRepresentations inSession..............................................................1167
RetrievingSimplifiedRepresentations ..............................................................1169
RetrievingandExpandingLightWeightGraphicsSimplified
Representations ..........................................................................................1170
CreatingandDeletingSimplifiedRepresentations .............................................1171
ExtractingInformationAboutSimplifiedRepresentations ...................................1172
ModifyingSimplifiedRepresentations ...............................................................1173
GatheringComponents byRule.......................................................................1175xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGatheringComponents byRule.......................................................................1175
Assembly:DataSharingFeatures..........................................................................1179
CopyGeometry,PublishGeometry,andShrinkwrapFeatures............................1180
GeneralMerge(Merge,CutoutandInheritanceFeature)...................................1191
InheritanceFeatureandFlexibleComponent VariantItems................................1195
Drawings..............................................................................................................1206
CreatingDrawingsfromTemplates...................................................................1207
DiagnosingDrawingCreationErrors................................................................1208
DrawingSetup................................................................................................1209xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDrawingSetup................................................................................................1209
ContextinDrawingMode................................................................................1210
AccessDrawingLocationinGrid......................................................................1211
12 Creo®Parametric TOOLKIT User’sGuideDrawingTree..................................................................................................1211
MergeDrawings.............................................................................................1212
DrawingSheets..............................................................................................1212
DrawingFormatFiles......................................................................................1215
DrawingViewsandModels..............................................................................1216xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDrawingViewsandModels..............................................................................1216
DetailItems....................................................................................................1234
DrawingSymbolGroups.................................................................................1264
DrawingEdges...............................................................................................1266
DrawingTables...............................................................................................1268
CreatingBOMBalloons...................................................................................1277
DrawingDimensions.......................................................................................1278
ProductionApplications: Sheetmetal.......................................................................1288
GeometryAnalysis..........................................................................................1290xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGeometryAnalysis..........................................................................................1290
BendTablesandDimensions ..........................................................................1293
BendAllowanceParameters. ...........................................................................1294
UnattachedPlanarWallFeature......................................................................1295
FlangeWallFeature........................................................................................1305
ExtendWallFeature.......................................................................................1321
SplitAreaFeature...........................................................................................1325
PunchandDieFormFeatures.........................................................................1327
QuiltFormFeature..........................................................................................1334xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxQuiltFormFeature..........................................................................................1334
FlattenFormFeature......................................................................................1337
ConvertFeatures............................................................................................1339
RipFeatures..................................................................................................1343
CornerReliefFeature......................................................................................1352
EditingCornerReliefFeature...........................................................................1357
EditingCornerSeams.....................................................................................1359
BendFeature.................................................................................................1364
EditingBendReliefs........................................................................................1376xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEditingBendReliefs........................................................................................1376
EdgeBendFeature.........................................................................................1379
UnbendFeature.............................................................................................1382
FlatPatternFeature........................................................................................1386
BendBackFeature.........................................................................................1387
SketchFormFeature......................................................................................1389
JoinFeature...................................................................................................1395
TwistWallFeature..........................................................................................1398
MergeWallFeature........................................................................................1402xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMergeWallFeature........................................................................................1402
Recognizing SheetMetalDesignObjects.........................................................1404
ProductionApplications: Manufacturing ..................................................................1411
Manufacturing Models.....................................................................................1412
CreatingaManufacturing Model......................................................................1412
AnalyzingaManufacturing Model....................................................................1413
CreatingManufacturing Objects.......................................................................1416
AnalyzingManufacturing Features...................................................................1430
ProductionApplications: Customized ToolDatabase................................................1431xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProductionApplications: Customized ToolDatabase................................................1431
Overview........................................................................................................1432
Contents 13SettinguptheDatabaseandCustomSearchParameters..................................1432
RegisteringtheExternalDatabase...................................................................1433
QueryingtheExternalDatabase......................................................................1434
ReturningtheSearchResults..........................................................................1436
ProductionApplications: CreoNCSequences, OperationsandWorkCenters............1438
Overview........................................................................................................1440
ElementTrees:RoughingStep........................................................................1440xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:RoughingStep........................................................................1440
ElementTrees:Reroughing Step.....................................................................1445
ElementTrees:FinishingStep.........................................................................1451
ElementTrees:CornerFinishingStep..............................................................1455
ElementTrees:3–AxisTrajectoryMillingStep...................................................1461
Manufacturing 2–AxisCurveTrajectoryMillingStep..........................................1467
ElementTrees:ManualCycleStep..................................................................1472
ElementTrees:ThreadMilling.........................................................................1478
ElementTrees:TurningStep...........................................................................1494xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:TurningStep...........................................................................1494
ElementTrees:ThreadTurningStep................................................................1500
ElementTrees:CreoNCOperationDefinition..................................................1505
ElementTrees:WorkcellDefinition...................................................................1510
ElementTrees:Manufacturing MillWorkcell......................................................1513
ElementTrees:Manufacturing Mill/TurnWorkcell..............................................1517
ElementTrees:Manufacturing LatheWorkcell..................................................1525
ElementTrees:Manufacturing CMMWorkcell...................................................1529
ElementTrees:ProfileMillingStep...................................................................1531
ElementTrees:FaceMillingStep.....................................................................1538xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:FaceMillingStep.....................................................................1538
ElementTrees:FixtureDefinition.....................................................................1547
Manufacturing Holemaking Step......................................................................1549
ShutoffSurfaceFeatureElementTree.............................................................1588
ElementTrees:Manufacturing RoundandChamfer..........................................1591
ElementTrees:EngravingStep.......................................................................1598
ElementTrees:Manufacturing CutlineMillingSequence....................................1606
ElementTrees:Manufacturing DrillGroupFeature............................................1622
Manufacturing VolumeMillingFeature..............................................................1628
ElementTrees:SkirtFeature...........................................................................1635xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:SkirtFeature...........................................................................1635
Sub-Element Trees:CreoNCSteps.................................................................1643
ProductionApplications: ProcessPlanning..............................................................1755
ProcessStepObjects......................................................................................1756
VisitingProcessSteps....................................................................................1756
ProcessStepAccess......................................................................................1756
CreatingProcessSteps...................................................................................1757
ProductionApplications: NCProcessManager........................................................1760
Overview........................................................................................................1761xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOverview........................................................................................................1761
AccessingtheProcessManager......................................................................1761
Manufacturing ProcessItems..........................................................................1763
Parameters....................................................................................................1767
Manufacturing Features..................................................................................1770
ImportandExportofProcessTableContents....................................................1770
14 Creo®Parametric TOOLKIT User’sGuideNotification.....................................................................................................1771
ProductionApplications: Cabling............................................................................1786xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProductionApplications: Cabling............................................................................1786
Cabling..........................................................................................................1787
ProductionApplications: Piping..............................................................................1803
PipingTerminology.........................................................................................1804
LinestockManagement Functions....................................................................1804
PipelineFeatures............................................................................................1807
PipelineConnectivity Analysis.........................................................................1810
ProductionApplications: Welding...........................................................................1821
ReadAccesstoWeldFeatures........................................................................1822xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxReadAccesstoWeldFeatures........................................................................1822
Customizing WeldDrawingSymbols................................................................1823
CreoSimulate:Items.............................................................................................1825
EnteringtheCreoSimulateEnvironment ..........................................................1827
EnteringtheCreoSimulateEnvironment withFailedFeatures...........................1828
SelectionofCreoSimulateItems.....................................................................1828
AccessingCreoSimulateItems.......................................................................1829
CreoSimulateObjectReferences....................................................................1830
GeometricReferences....................................................................................1831xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGeometricReferences....................................................................................1831
Y-directions....................................................................................................1834
Functions.......................................................................................................1835
CreoSimulateExpressions .............................................................................1838
AccessingthePropertiesusedforLoadsandConstraints..................................1839
CreoSimulateLoads......................................................................................1843
CreoSimulateLoadSets.................................................................................1855
CreoSimulateConstraints...............................................................................1856
CreoSimulateConstraintSets.........................................................................1866xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulateConstraintSets.........................................................................1866
CreoSimulateMatrixFunctions.......................................................................1867
CreoSimulateVectorFunctions.......................................................................1867
CreoSimulateBeams.....................................................................................1868
CreoSimulateBeams:Sections,SketchedSections,andGeneral
Sections.....................................................................................................1871
CreoSimulateBeamSections.........................................................................1877
SketchedBeamSection..................................................................................1881
GeneralBeamSection....................................................................................1882xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGeneralBeamSection....................................................................................1882
BeamOrientations ..........................................................................................1884
BeamReleases..............................................................................................1887
CreoSimulateSpringItems.............................................................................1888
CreoSimulateSpringPropertyItems...............................................................1890
CreoSimulateMassItems...............................................................................1892
CreoSimulateMassProperties........................................................................1895
CreoSimulateMaterialAssignment .................................................................1897
MaterialOrientations .......................................................................................1898xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMaterialOrientations .......................................................................................1898
CreoSimulateShells......................................................................................1902
ShellProperties..............................................................................................1904
ShellPairs......................................................................................................1910
Interfaces.......................................................................................................1913
Contents 15Gaps.............................................................................................................1920
MeshControl..................................................................................................1922
Welds............................................................................................................1935xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxWelds............................................................................................................1935
CreoSimulateFeatures..................................................................................1939
ValidatingNewandModifiedSimulationObjects...............................................1939
CreoSimulate:Geometry.......................................................................................1941
Introduction....................................................................................................1942
ObtainingCreoSimulateGeometryfromCreoParametricTOOLKIT..................1943
ToCreateaSurfaceRegionFeature................................................................1957
CreoSimulate:FiniteElementModeling(FEM)........................................................1959
Overview........................................................................................................1960xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOverview........................................................................................................1960
ExportinganFEAMesh..................................................................................1960
MechanismDesign:MechanismFeatures...............................................................1963
MechanismSpringFeature..............................................................................1964
MechanismDamperFeature...........................................................................1966
MechanismBeltFeature.................................................................................1967
Mechanism3DContactFeature.......................................................................1970
MechanismMotorFeatures.............................................................................1974
Event-driven Programming: Notifications ................................................................1982xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEvent-driven Programming: Notifications ................................................................1982
UsingNotify....................................................................................................1983
NotificationTypes...........................................................................................1983
Event-driven Programming: ExternalObjects..........................................................1992
SummaryofExternalObjects..........................................................................1993
ExternalObjectsandObjectClasses...............................................................1993
ExternalObjectData.......................................................................................1996
ExternalObjectReferences.............................................................................2003
CallbacksforExternalObjects.........................................................................2004xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCallbacksforExternalObjects.........................................................................2004
WarningMechanismforExternalObjects.........................................................2006
Example1:CreatinganExternalObject...........................................................2008
Event-driven Programming: Toolkit-Based Analysis.................................................2009
Overview........................................................................................................2010
InteractiveCreationofToolkit-Based Analysis...................................................2010
InteractiveCreationofToolkit-Based AnalysisFeature.......................................2011
StorageofToolkit-Based AnalysisFeatureinCreoParametric...........................2011
RegisteringaToolkit-Based AnalysiswithCreoParametric................................2012
AnalysisCallbacks..........................................................................................2012xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRegisteringaToolkit-Based AnalysiswithCreoParametric................................2012
AnalysisCallbacks..........................................................................................2012
CreoParametricTOOLKITAnalysisInformation................................................2015
ResultsData..................................................................................................2015
AnalysisAttributes..........................................................................................2017
VisitingSavedToolkit-Based Analyses.............................................................2018
VisitingToolkit-Based AnalysesFeatures.........................................................2018
UsingtheModelwithoutCreoParametricTOOLKIT..........................................2018
Event-driven Programming: ForeignDatumCurves.................................................2020xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsingtheModelwithoutCreoParametricTOOLKIT..........................................2018
Event-driven Programming: ForeignDatumCurves.................................................2020
ForeignDatumCurves....................................................................................2021
16 Creo®Parametric TOOLKIT User’sGuideTaskBasedApplicationLibraries............................................................................2025
ProArgument andArgumentManagement ........................................................2026
CreatingCreoParametricTOOLKITDLLTaskLibraries.....................................2027
LaunchingSynchronous J-LinkApplications .....................................................2033
TechnicalSummaryofChanges.............................................................................2035
TechnicalSummaryofChangesforCreo4.0F000............................................2036xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChanges.............................................................................2035
TechnicalSummaryofChangesforCreo4.0F000............................................2036
TechnicalSummaryofChangesforCreo4.0M010...........................................2112
TechnicalSummaryofChangesforCreo4.0M020...........................................2114
TechnicalSummaryofChangesforCreo4.0M030...........................................2117
TechnicalSummaryofChangesforCreo4.0M040...........................................2119
TechnicalSummaryofChangesforCreo4.0M050...........................................2120
TechnicalSummaryofChangesforCreo4.0M060...........................................2121
TechnicalSummaryofChangesforCreo4.0M070...........................................2122
TechnicalSummaryofChangesforCreo4.0M080...........................................2123
TechnicalSummaryofChangesforCreo4.0M090...........................................2125xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChangesforCreo4.0M080...........................................2123
TechnicalSummaryofChangesforCreo4.0M090...........................................2125
TechnicalSummaryofChangesforCreo4.0M100...........................................2126
TechnicalSummaryofChangesforCreo4.0M110...........................................2128
TechnicalSummaryofChangesforCreo4.0M110...........................................2129
TechnicalSummaryofChangesforCreo4.0M120...........................................2130
TechnicalSummaryofChangesforCreo4.0M130...........................................2130
TechnicalSummaryofChangesforCreo4.0M140...........................................2132
TechnicalSummaryofChangesforCreo5.0.0.0...............................................2133
TechnicalSummaryofChangesforCreo5.0.1.0...............................................2136
TechnicalSummaryofChangesforCreo5.0.2.0...............................................2137xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChangesforCreo5.0.1.0...............................................2136
TechnicalSummaryofChangesforCreo5.0.2.0...............................................2137
TechnicalSummaryofChangesforCreo5.0.3.0...............................................2138
TechnicalSummaryofChangesforCreo5.0.4.0...............................................2140
TechnicalSummaryofChangesforCreo5.0.5.0...............................................2141
TechnicalSummaryofChangesforCreo6.0.0.0...............................................2142
TechnicalSummaryofChangesforCreo6.0.1.0...............................................2145
TechnicalSummaryofChangesforCreo6.0.2.0...............................................2145
TechnicalSummaryofChangesforCreo6.0.3.0...............................................2148
TechnicalSummaryofChangesforCreo6.0.4.0...............................................2149
TechnicalSummaryofChangesforCreo6.0.5.0...............................................2149xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChangesforCreo6.0.4.0...............................................2149
TechnicalSummaryofChangesforCreo6.0.5.0...............................................2149
TechnicalSummaryofChangesforCreo7.0.0.0...............................................2152
TechnicalSummaryofChangesforCreo7.0.1.0...............................................2165
TechnicalSummaryofChangesforCreo7.0.2.0...............................................2168
AppendixA.UnicodeEncoding...............................................................................2170
Introduction toUnicodeEncoding.....................................................................2171
UnicodeEncodingandCreoParametricTOOLKIT............................................2172
NecessityofUnicodeCompliance....................................................................2173
ExternalInterfaceHandling.............................................................................2173xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExternalInterfaceHandling.............................................................................2173
AppendixB.UpdatingOlderApplications .................................................................2177
Overview........................................................................................................2178
ToolsAvailableforUpdatingApplications..........................................................2178
AppendixC.MigratingtoCreoObjectTOOLKITC++................................................2181
Contents 17Overview........................................................................................................2182
MigratingApplications UsingTools...................................................................2182
AppendixD.MigratingtotheMultibodyEnvironment. ................................................2185
Overview........................................................................................................2186xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOverview........................................................................................................2186
AppendixE.CreoParametricTOOLKITRegistryFile................................................2192
RegistryFileFields.........................................................................................2193
SampleRegistryFiles.....................................................................................2194
AppendixF.CreoParametricTOOLKITLibraryTypes..............................................2196
Overview........................................................................................................2197
StandardLibraries..........................................................................................2198
AlternateLibraries..........................................................................................2198
AppendixG.CreoParametricTOOLKITSampleApplications ....................................2199xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAppendixG.CreoParametricTOOLKITSampleApplications ....................................2199
InstallingSampleApplications .........................................................................2200
DetailsonSampleApplications ........................................................................2201
AppendixH.AdvancedLicensingOptions................................................................2206
AdvanceLicensingOptionsforCreoParametricTOOLKIT................................2207
AppendixI.Pro/DEVELOPtoCreoParametricTOOLKITFunctionMapping...............2208
TheRelationship BetweenCreoParametricTOOLKITandPro/
DEVELOP..................................................................................................2209
ConvertingfromPro/DEVELOP .......................................................................2209
EquivalentPro/DEVELOP Functions................................................................2221xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEquivalentPro/DEVELOP Functions................................................................2221
AppendixJ.GeometryTraversal.............................................................................2235
Overview........................................................................................................2236
GeometryTerms.............................................................................................2236
AppendixK.GeometryRepresentations ..................................................................2240
DomainofEvaluation......................................................................................2241
SurfaceDataStructures..................................................................................2241
EdgeandCurveDataStructures......................................................................2253
AppendixL.DebuggingCreoParametricTOOLKITApplications ................................2257xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEdgeandCurveDataStructures......................................................................2253
AppendixL.DebuggingCreoParametricTOOLKITApplications ................................2257
BuildingaCreoParametricTOOLKITApplicationforDebugging........................2258
DebuggingTechniques....................................................................................2258
DebuggingaMultiprocess Application..............................................................2260
Glossary...............................................................................................................2261
Index....................................................................................................................2265
18 Creo®Parametric TOOLKIT User’sGuideAboutThisGuide
CreoParametric TOOLKITistheC-language customization toolkitforCreo
Parametric. Itprovidescustomers andthird-parties theabilitytoexpandCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx18 Creo®Parametric TOOLKIT User’sGuideAboutThisGuide
CreoParametric TOOLKITistheC-language customization toolkitforCreo
Parametric. Itprovidescustomers andthird-parties theabilitytoexpandCreo
Parametric capabilities bywritingC-language codeandseamlessly integrating the
resultingapplication intoCreoParametric. ItprovidesalargelibraryofC
functionsthatenablestheexternalapplication toaccesstheCreoParametric
databaseanduserinterfaceinacontrolled andsafemanner.
Note
CreoParametric TOOLKITissupported onlywithCreoParametric. Itisnot
supported withtheotherCreoapplications.
CreoParametric TOOLKITisaimedatsoftwareengineerswithexperience inC
programming. TheyshouldalsobetrainedinthebasicuseofCreoParametric.
19TheCreoParametric TOOLKIT User’sGuidedescribeshowtouseCreo
Parametric TOOLKIT. Thismanualintroduces CreoParametric TOOLKIT,the
featuresitoffers,andthetechniques andbackground knowledge usersrequireto
useit.
Note
Thecodeexamplesincludedinthisguidehavebeenreformatted forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturesitoffers,andthetechniques andbackground knowledge usersrequireto
useit.
Note
Thecodeexamplesincludedinthisguidehavebeenreformatted for
presentation purposes,andthereforemaycontainhiddeneditingcharacters,
suchastabsandend-of-line characters, andextraneous spaces.Donotcutand
pastesampleapplication codeorcodefragments fromtheUser’sGuideasthe
additional formatting characters couldbreakthecode;alwaysusethesample
codeprovidedintheCreoParametric TOOLKITinstallation directoryat
<creo_loadpoint>\<datecode>\Common Files\protoolkit\
protk_appls.
Thedocumentation forCreoParametric TOOLKITincludesanonlinebrowser
thatcontainstheCreoParametric TOOLKIT User’sGuideanddescribesCreo
Parametric TOOLKITfunctionsyntax.
Thefollowingtablelistsconventions andtermsusedthroughout thisbook.
Convention Description
UPPERCASE CreoParametric-type menuname(forexample,
PART).
Boldface Windows-type menunameormenuordialogbox
option(forexample,View),orutility(forexample,
promonitor ).FunctionnamesalsoappearinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUPPERCASE CreoParametric-type menuname(forexample,
PART).
Boldface Windows-type menunameormenuordialogbox
option(forexample,View),orutility(forexample,
promonitor ).Functionnamesalsoappearin
boldfacefont.
Monospace(Courier) Codesamplesappear
Emphasis Important information appearsinitalics.Italicfont
alsoindicatesfilenamesandfunctionarguments.
Choose Highlightamenuoptionbyplacingthearrowcursor
ontheoptionandpressingtheleftmousebutton.
Select Asynonymfor“choose”asabove,Selectalso
describestheactionsofselectingelementsona
modelandcheckingboxes.
Element Anelementdescribesredefinable characteristics ofa
featureinamodel.
Mode Anenvironment inCreoParametric inwhichyou
canperformagroupofcloselyrelatedfunctions
(Drawing, forexample).
Model Anassembly,part,drawing,format,notebook, case
study,sketch,andsoon.
Option Aniteminamenuoranentryinaconfiguration file
orasetupfile.
Solid Apartoranassembly.
20 Creo®Parametric TOOLKIT User’sGuideConvention Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstudy,sketch,andsoon.
Option Aniteminamenuoranentryinaconfiguration file
orasetupfile.
Solid Apartoranassembly.
20 Creo®Parametric TOOLKIT User’sGuideConvention Description
<creo_loadpoint> ThelocationwheretheCreoapplications are
installed,forexample, C:\Program Files\
PTC\Creo 1.0.
<creo_toolkit_loadpoint> ThelocationwheretheCreoParametric TOOLKIT
application isinstalled,thatis,<creo_
loadpoint>\<datecode>\Common Files\
protoolkit.
Note
•Important information thatshouldnotbeoverlooked appearsinnoteslike
this.
•Allreferences tomouseclicksassumeuseofaright-handed mouse.
SoftwareProductConcernsandDocumentation Comments
ForresourcesandservicestohelpyouwithPTCsoftwareproducts,pleasevisit
theCustomerSupportGuideintheeSupportPortalat:
http://support.ptc.com/appserver/support/csguide/csguide.jsp
YoumusthaveaServiceContractNumber(SCN)beforeyoucanreceiveassisted
technicalsupport.Ifyoudonothaveaservicecontractnumberpleasecontact
PTCCustomerCarebyclickingtheContacttabontheCustomerSupportGuidexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoumusthaveaServiceContractNumber(SCN)beforeyoucanreceiveassisted
technicalsupport.Ifyoudonothaveaservicecontractnumberpleasecontact
PTCCustomerCarebyclickingtheContacttabontheCustomerSupportGuide
page.
Inregardtodocumentation, PTCwelcomes yoursuggestions andcomments. You
cansendfeedbackinthefollowingways:
•Sendcomments electronically toMCAD-documentation@ptc.com.
•FilloutandmailthePTCDocumentation Surveyinthecustomerservice
guide.
AboutThisGuide 211
Fundamentals
Introduction toCreoParametricTOOLKIT...................................................................23
OnlineDocumentation inCreoParametricTOOLKITAPIWizard...................................23
CreoParametricTOOLKITStyle.................................................................................24
InstallingCreoParametricTOOLKIT...........................................................................27
DevelopingaCreoParametricTOOLKITApplication....................................................35xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDevelopingaCreoParametricTOOLKITApplication....................................................35
CreoParametricTOOLKITSupportforCreoApplications .............................................54
User-Supplied Main...................................................................................................55
Asynchronous Mode..................................................................................................56
CreoParametricTOOLKITTechniques.......................................................................56
VisitFunctions...........................................................................................................62
SupportforCreoModelNamesandFilesPaths...........................................................64
WideStrings.............................................................................................................65
StringandWidestringFunctions.................................................................................66xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxStringandWidestringFunctions.................................................................................66
SupportforIPv6........................................................................................................68
AccessingLearningConnector ....................................................................................68
Thischapterdescribesfundamental CreoParametric TOOLKITconceptsand
functions.
22 Creo®Parametric TOOLKIT User’sGuideIntroduction toCreoParametric TOOLKIT
CreoParametric TOOLKITisthecustomization toolkitforCreoParametric from
Parametric Technology Corporation (PTC).Itgivescustomers andthird-parties
theabilitytoexpandCreoParametric capabilities bywritingCprogramming
languagecodeandthenseamlessly integrating theresultingapplication intoCreo
Parametric.
CreoParametric TOOLKITprovidesalargelibraryofCfunctionstoprovidethe
externalapplication safeandcontrolled accesstotheCreoParametric databasexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric.
CreoParametric TOOLKITprovidesalargelibraryofCfunctionstoprovidethe
externalapplication safeandcontrolled accesstotheCreoParametric database
andapplications. CreoParametric TOOLKITistheprimaryPTCapplication
programmer's interface(API)forCreoParametric.
OnlineDocumentation inCreoParametric
TOOLKITAPIWizard
CreoParametric TOOLKITprovidesanonlinebrowsercalledtheAPIWizardthat
displaysdetaileddocumentation data.Thisbrowserdisplaysinformation fromthe
CreoParametric TOOLKIT Users’ GuideandAPIspecifications derivedfrom
CreoParametric TOOLKITheaderfiledata.
TheCreoParametric TOOLKITAPIWizardcontainsthefollowing:
•Definitions ofCreoParametric TOOLKITobjectsandtheirhierarchical
relationships
•Definitions ofCreoParametric TOOLKITfunctions
•Declarations ofdatatypesusedbyCreoParametric TOOLKITfunctions
•TheCreoParametric TOOL KITUsers’ Guide,whichuserscanbrowseby
topicorbyobject
•CodeexamplesforCreoParametric TOOLKITfunctions(takenfromxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Declarations ofdatatypesusedbyCreoParametric TOOLKITfunctions
•TheCreoParametric TOOL KITUsers’ Guide,whichuserscanbrowseby
topicorbyobject
•CodeexamplesforCreoParametric TOOLKITfunctions(takenfrom
applications providedaspartoftheCreoParametric TOOLKITinstallation)
ReviewtheReleaseNotesforthemostup-to-date information ondocumentation
changes.
Note
•TheUser’sGuideisalsoavailableinPDFformat.Thisfileislocated
at:<creo_toolkit_loadpoint>\tkuse.pdf
•FromCreoParametric 4.0F000,theappletbasedAPIWizardisnolonger
supported. Usethenon-applet basedAPIWizardinstead.
Fundamentals 23ToInstalltheAPIWizard
TheCreoParametric productCDinstallation procedure automatically installsthe
CreoParametric TOOLKITAPIWizard.Thefilesresideinadirectoryunderthe
CreoParametric loadpoint.ThelocationfortheCreoParametric TOOLKIT
APIWizardfilesis<creo_toolkit_loadpoint>\protkdoc
ToloadtheAPIWizardmanually,copyallfilesfrom<creo_toolkit_
loadpoint>\protkdoc toyourtargetdirectory.
APIWizardOverviewxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAPIWizardfilesis<creo_toolkit_loadpoint>\protkdoc
ToloadtheAPIWizardmanually,copyallfilesfrom<creo_toolkit_
loadpoint>\protkdoc toyourtargetdirectory.
APIWizardOverview
TheAPIWizardsupportsInternetExplorer,Firefox,andChromium browsers.
StarttheCreoParametric TOOLKITAPIWizardbypointingyourbrowserto:
<creo_toolkit_loadpoint>\protkdoc\index.html
Apagecontaining linkstotheCreoParametric TOOLKITAPIWizardandUser’s
Guidewillopeninthewebbrowser.
APIWizard
ClickAPIWizardtoopenthelistofCreoParametric TOOLKITObjectsandthe
relatedfunctions. Clickafunctionnametoreadmoreaboutit.
Usethesearchfieldatthetopoftheleftpanetosearchforfunctions. Youcan
searchusingthefollowingcriteria:
•SearchbyAPInames
•Searchusingwildcardcharacter*,where*(asterisk)matcheszeroormore
nonwhitespacecharacters
ThesearchdisplaystheresultingAPInameswithembedded linksinadropdown
list.Thedeprecated APIsarehighlighted inyellow.
User’sGuide
ClickUser’sGuidetoaccesstheCreoParametric Toolkit User’sGuide.
CreoParametric TOOLKITStylexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlist.Thedeprecated APIsarehighlighted inyellow.
User’sGuide
ClickUser’sGuidetoaccesstheCreoParametric Toolkit User’sGuide.
CreoParametric TOOLKITStyle
CreoParametric TOOLKITusesanobject-oriented programming style.Data
structuresforthetransferinformation betweenCreoParametric andthe
application arenotdirectlyvisibletotheapplication. Thesedatastructuresare
accessible onlywithCreoParametric TOOLKITfunctions.
24 Creo®Parametric TOOLKIT User’sGuideObjectsandActions
ThemostbasicCreoParametric TOOLKITconceptsareobjectsandactions.
EachCreoParametric TOOLKITlibraryCfunctionperformsanactionona
specifictypeofobject.TheCreoParametric TOOLKITconvention forfunction
namesistheprefix“Pro”thenameoftheobjecttype,andthenameoftheactionit
performs,forexample:
ProSectionLocationGet()
ACreoParametric TOOLKITobjectisawell-defined andself-contained C
structureusedtoperformactionsrelevanttothatobject.Mostobjectsareitemsin
theCreoParametric database,suchasfeaturesandsurfaces.Others,however,arexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructureusedtoperformactionsrelevanttothatobject.Mostobjectsareitemsin
theCreoParametric database,suchasfeaturesandsurfaces.Others,however,are
moreabstractortransient,suchastheinformation resultingfromaselectaction.
InCreoParametric TOOLKIT, eachtypeofobjecthasastandardnameconsisting
ofa“Pro”pluscapitalized wordthatdescribestheobject.Simpleexamplesof
CreoParametric TOOLKITobjecttypesandtheirCreoParametric equivalents are
asfollows:
•ProFeature—A feature
•ProSurface—A surface
•ProSolid—An abstractobjectcreatedtoexploitthecommonality between
partsandassemblies
•ProWcell—A workcellfeatureinamanufacturing assembly
CreoParametric TOOLKITprovidesaCtypedefforeachobjectusedfor
variablesandargumentsthatrefertothoseobjects.CreoParametric TOOLKIT
objectshaveahierarchical relationship thatreflectstheCreoParametric database.
Forexample,aProFeature objectcancontainobjectsoftypeProSurface
(amongothers).
Forexample,thefollowingfunctionshaveactionsthataresingleverbs:
ProSolidRegenerate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxForexample,aProFeature objectcancontainobjectsoftypeProSurface
(amongothers).
Forexample,thefollowingfunctionshaveactionsthataresingleverbs:
ProSolidRegenerate()
ProFeatureDelete()
SomeCreoParametric TOOLKITfunctionsrequirenamesthatincludemorethan
oneobjecttype.Thefunctionnameshavetheobjecttypesfirst,thentheaction.
Forexample:
ProFeatureParentsGet()
ProWcellTypeGet()
Theactionverbsindicatethetypeofactionbeingperformed, asshowninthe
followingtable.
Fundamentals 25ActionVerb TypeofAction
Get Readinformation directlyfromtheCreoParametric
database.
Eval Providetheresultofasimplecalculation.
Compute Providetheresultofacomputation thattypically
involvesnumerical analysisofthemodelgeometry.
Examples are:
•ProEdgeLengthEval()
•ProSurfaceAreaEval()
•ProSolidRayIntersectionCompute()
Toillustratefurther,function ProSolidOutlineGet() readsfromCreo
Parametric thecurrentlystoredsolidoutline,but
ProSolidOutlineCompute() invokesarecomputation ofthatinformation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxToillustratefurther,function ProSolidOutlineGet() readsfromCreo
Parametric thecurrentlystoredsolidoutline,but
ProSolidOutlineCompute() invokesarecomputation ofthatinformation.
UseProSolidOutlineCompute() tocomputeanaccurateoutlineofasolid.
Note
DonotuseProSolidOutlineGet() tocalculatetheoutlineofasolid.It
willnotreturnaproperlycalculated outline.
OtherCreoParametric TOOLKITfunctionconventions arethatthefirstargument
identifiestheobject,andinputargumentscomebeforeoutputarguments.
FunctionPrototyping
EachCreoParametric TOOLKITfunctionhasanANSIfunctionprototype. (The
Ccompilers onplatformssupported byCreoParametric TOOLKITprovideat
leasttheoptionoffunctionprototypechecking.) Allfunctionprototypes fora
particularCreoParametric TOOLKITobjectresideinaheaderfilenamedforthat
object.Forexample,theprototypeforfunction ProEdgeLengthEval() is
locatedintheheaderfileProEdge.h.
Note
PTCstronglyrecommends thatyouuseprototyping. Makesureyouincludexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxobject.Forexample,theprototypeforfunction ProEdgeLengthEval() is
locatedintheheaderfileProEdge.h.
Note
PTCstronglyrecommends thatyouuseprototyping. Makesureyouinclude
theappropriate headerfilesinyourCreoParametric TOOLKITapplication.
26 Creo®Parametric TOOLKIT User’sGuideFunctionErrorStatuses
ThereturntypeofmostCreoParametric TOOLKITfunctionsisProError.
ProError isanenumerated typewithavalueforeachcommoncasewhereCreo
Parametric TOOLKITfunctionssucceedsorfails.
ThenormalvalueforsuccessisPRO_TK_NO_ERROR. Theother“failure”
statusesoccurwhenthereisagenuineproblem,orformorebenignreasons.For
example,theseerrorstatusesdenotegenuineproblems:
•PRO_TK_BAD_INPUTS—The CreoParametric TOOLKITprogramcalled
thefunctionincorrectly .
•PRO_TK_OUT_OF_MEMORY orPRO_TK_COMM_ERROR—System failure.
Thefollowingstatusesaremorebenign:
•PRO_TK_USER_ABORT—A functionthatsupportsuserinteraction was
abortedbytheCreoParametric user.
•PRO_TK_E_NOT_FOUND—A functionattempted operationonanempty
objectlist.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingstatusesaremorebenign:
•PRO_TK_USER_ABORT—A functionthatsupportsuserinteraction was
abortedbytheCreoParametric user.
•PRO_TK_E_NOT_FOUND—A functionattempted operationonanempty
objectlist.
UsersmustpaycarefulattentiontohowtheirprogramreactstoaCreoParametric
TOOLKITfunctionerrorstatus—there canbeseveraltypesoffailureandsuccess,
eachrequiringdifferenthandling.
ThesubsetofProError valuesthataparticularCreoParametric TOOLKIT
functioncanreturnisdescribedinthebrowserunderthatfunction.Possibleerrors
arealsoincludedinacommentundereachfunctionprototypeinthe
corresponding CreoParametric TOOLKITheaderfile.
InstallingCreoParametric TOOLKIT
ThenextsectionsdescribehowtoinstallCreoParametric TOOLKIT.
Overview
CreoParametric TOOLKITisonthesameDVDasCreoParametric, soyoudo
notneedtoarrangeaspecialdeliveryfromyoursupplier.WhenCreoParametric
isinstalledusingPTC.Setup, oneoftheoptionalcomponents isAPIToolkits.
ThisincludesCreoParametric TOOLKIT,Pro/WebLink,J-Link,VB,andCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisinstalledusingPTC.Setup, oneoftheoptionalcomponents isAPIToolkits.
ThisincludesCreoParametric TOOLKIT,Pro/WebLink,J-Link,VB,andCreo
ObjectTOOLKITC++andCreoObjectTOOLKITJava.
IfyouselectCreoParametric TOOLKIT,itisinstalledundertheloadpointof
CreoParametric atthelocation <creo_loadpoint>\<datecode>\Common
Files\protoolkit. Theprotoolkit directorycontainsalltheheaders,
libraries,exampleapplications, anddocumentation specifictoCreoParametric
TOOLKIT.
Fundamentals 27Thefollowingfigureshowsthetreeofdirectories foundundertheCreo
Parametric TOOLKITloadpointafterinstallation.
CreoParametric TOOLKITInstallation DirectoryTree
Thedirectory protk_appls containssampleCreoParametric TOOLKIT
applications. Formoreinformation regardingthesampleapplications refertothe
Appendix onSampleApplications.
AddorUpdateCreoParametric TOOLKIT
Installation
AddaCreoParametric TOOLKITinstallation toanexistingCreoParametric
installation usingtheUpdateoptioninPTC.Setup. Foradescription ofusingPTC.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAddorUpdateCreoParametric TOOLKIT
Installation
AddaCreoParametric TOOLKITinstallation toanexistingCreoParametric
installation usingtheUpdateoptioninPTC.Setup. Foradescription ofusingPTC.
Setup,refertotheCreoParametric Installation andAdministration Guide.
Besureyoursystemadministrator reinstallsCreoParametric TOOLKITeachtime
theyupdateyourCreoParametric installation fromanewCD.PTCrecommends
that,whenpossible,youuseaCreoParametric TOOLKITfromthesamebuild
numberasCreoParametric.
Note
TheCreoParametric libraryfunctionsworkbyinvokingfunctionsinsidethe
CreoParametric executable, soanupdatetoCreoParametric TOOLKIToften
involvesachangetoCreoParametric ratherthanCreoParametric TOOLKIT
itself.SowhenyoureceiveaCreoParametric DVDthatcontainsanupdateto
CreoParametric TOOLKIT, alwaysreinstallCreoParametric fromthatDVD.
28 Creo®Parametric TOOLKIT User’sGuideInmanysituationsitwillbeinconvenient orimpossible toensurethattheusersof
yourCreoParametric TOOLKITapplication willusethesamebuildofCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx28 Creo®Parametric TOOLKIT User’sGuideInmanysituationsitwillbeinconvenient orimpossible toensurethattheusersof
yourCreoParametric TOOLKITapplication willusethesamebuildofCreo
Parametric thatyouusedtocompileandlinktheCreoParametric TOOLKIT
application. RefertosectionVersionCompatibility: CreoParametric andCreo
Parametric TOOLKITonpage41fortherulestomixversionsofCreoParametric
andCreoParametric TOOLKIT.
TestingtheCreoParametric TOOLKITInstallation
Afteryoursystemadministrator hasinstalledCreoParametric TOOLKIT, you
shouldcompile,link,andrunasimpleCreoParametric TOOLKITapplication as
soonaspossibleoneachmachineyouintendtousefordevelopment. This
providesanindependent testofthefollowingitems:
•Theinstallation ofCreoParametric TOOLKITispresent,complete,and
visiblefromyourmachine.
•TheversionofCreoParametric youplantouseduringdevelopment hasthe
CreoParametric TOOLKITlicenseoptionaddedtoit.
•Themachineyouwillusefordevelopment hasaccesstoallthenecessaryCxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvisiblefromyourmachine.
•TheversionofCreoParametric youplantouseduringdevelopment hasthe
CreoParametric TOOLKITlicenseoptionaddedtoit.
•Themachineyouwillusefordevelopment hasaccesstoallthenecessaryC
programdevelopment tools,inversionssupported byCreoParametric
TOOLKIT(especially ,ofcourse,theCcompilerandlinker).
RunningtheMicrosoftVisualStudioSolution
PTCprovidesaready-to-use VisualStudiosolutionontheWindowsplatformto
buildandtestCreoParametric TOOLKITapplications byusinganappropriate
makefile.FortheversionofVisualStudiocompatible withthereleaseofCreo
Parametric TOOLKIT, refertothehardwarenotesatCreoFuturePlatform
SupportSummary.
Thisready-to-use VisualStudiosolutionhasthefollowingadvantages:
•Providesaneffectivewaytobuildandtestsampleapplications providedby
PTC.
•Providesapreconfigured VisualStudiodevelopment environment forusewith
CreoParametric TOOLKIT.
•Supports Intellisense forCreoParametric TOOLKITfunctions.
Fundamentals 29NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPTC.
•Providesapreconfigured VisualStudiodevelopment environment forusewith
CreoParametric TOOLKIT.
•Supports Intellisense forCreoParametric TOOLKITfunctions.
Fundamentals 29Note
○Thesupported versionofVisualStudiochangeswitheveryreleaseofCreo
Parametric TOOLKIT,andhencethecompilerflagsandlibrariesalso
change.Foreveryrelease,youmustdownload thelatestversionofthe
ready-to-use VisualStudiosolutionfromthecreo_toolkit_
loadpoint.
○FromCreoParametric 4.0M010onward,CreoParametric TOOLKIT
supportsVisualStudio2015.Thecompilerflagsandlibrariesareavailable
forVisualStudio2015.CreoParametric TOOLKITnolongersupports
VisualStudio2012.
WhenyouinstallCreoParametric TOOLKIT, thefileprotk_install_
example.zip isinstalledunderthe<creo_toolkit_loadpoint> at
$<machine_type>\obj. Tousethissolution:
1.Unzip protk_install_example.zip. Thefollowingfilesand
directories areavailable:
DirectoryorFile Description
make_install.sln Specifiestheready-to-use VisualStudiosolution
file.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1.Unzip protk_install_example.zip. Thefollowingfilesand
directories areavailable:
DirectoryorFile Description
make_install.sln Specifiestheready-to-use VisualStudiosolution
file.
make_install Containsthemakefileprojectandthe
creotk.dat file.
2.OpenMicrosoft VisualStudio.
3.ClickFile▶▶Open▶▶Project/Solution .TheOpenProjectdialogopens.
4.Browsetheprotk_install_example directoryandselect make_
install.sln.
5.ClickOpentoaccessthesolutionfile.
Themake_install makefileprojectisavailableinVisualStudio.
RunningtheMakefileProject
1.ClickBuild▶▶Buildmake_install .Theapplication shouldbuildwithouterrors.
ThiscreatestheCreoParametric TOOLKITDLLfilecalled pt_inst_
test.dll. Iftheapplication fails,checkthattheenvironment variable
PROTOOL_SRC issetcorrectly.
2.Modifytheexec_file andtext_dir fieldsinthecreotk.dat file
locatedinthemake_install directorytospecifythefullpathtopt_
inst_test.dll and\text,respectively .Forexample,
exec_file <full_path>\pt_inst_test.dll
text_dir <full_path>\textxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocatedinthemake_install directorytospecifythefullpathtopt_
inst_test.dll and\text,respectively .Forexample,
exec_file <full_path>\pt_inst_test.dll
text_dir <full_path>\text
30 Creo®Parametric TOOLKIT User’sGuide3.Unlocktheapplication, usingthefollowingcommand:
<creo_loadpoint>\<datecode>\Parametric\bin\protk_unlock.bat
<path toexecutables orDLLs tounlock>
4.StartCreoParametric.
5.OntheToolstab,intheUtilitiesgroup,clickAuxiliaryApplications .The
AuxiliaryApplications dialogboxopens.
6.ClickRegistertoregistertheupdated creotk.dat file.TheRegister
auxiliaryapplication dialogboxopens.
7.Browsetothe<full_path> andselect creotk.dat.
8.ClickOpen.TheCreoParametric TOOLKITapplication addsthecommand
InstallTestundertheTools▶▶FilemenuintheTOOLKITgroupintheHometab
ontheCreoParametric ribbonuserinterface.
Note
RefertotheCreoParametric Helpformoreinformation oncustomizing
theRibbon.
9.ClickToolsandthenclickFile▶▶InstallTest.TheCreoParametric TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxontheCreoParametric ribbonuserinterface.
Note
RefertotheCreoParametric Helpformoreinformation oncustomizing
theRibbon.
9.ClickToolsandthenclickFile▶▶InstallTest.TheCreoParametric TOOLKIT
InstallTestResultsmessagewindowopens,indicating thattheinstallation test
hassucceeded.
10.ClickOK.
Torunothersampleapplications providedbyPTC,followthesesteps:
1.Copytherequiredmakefilefrom<creo_toolkit_loadpoint>\
$<machine_type>\obj tothemake_install directoryoftheready-
to-useVisualStudiosolution.
Fundamentals 31Ifyouareworkingona64-bitWindowsplatform,copythefilefrom<creo_
toolkit_loadpoint>\x86e_win64\obj.
2.Copythetextdirectoryassociated withthesampleapplication from<creo_
toolkit_loadpoint>\protk_appls\<app_name>\text tothe
make_install directory.
3.OpenVisualStudioandsetthevaluesofthefollowingvariablesinthe
makefile:
PROTOOL_SRC =../../../../../protoolkit
PROTOOL_SYS =$(PROTOOL_SRC)/$(PRO_MACHINE_TYPE)
4.ClickProject▶▶Properties toupdatetheNMakeproperties oftheproject.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmakefile:
PROTOOL_SRC =../../../../../protoolkit
PROTOOL_SYS =$(PROTOOL_SRC)/$(PRO_MACHINE_TYPE)
4.ClickProject▶▶Properties toupdatetheNMakeproperties oftheproject.
5.ClickBuild▶▶Rebuildmake_install .Theapplication buildsandcreatesanew
.dllfile.
6.Updatethecreotk.dat filelocatedinthemake_install directorywith
thenameofthesampleapplication andtheDLLfile.
7.Modifytheexec_file andtext_dir fieldsinthecreotk.dat fileto
specifythefullpathtothe.dllfileand\textdirectory,respectively .
8.StartCreoParametric.
9.OntheHometab,intheUtilitiesgroup,clickAuxiliaryApplications orclick
Tools▶▶AuxiliaryApplications .TheAuxiliaryApplications dialogboxopens.
10.ClickRegistertoregistertheupdated creotk.dat file.TheRegister
auxiliaryapplication dialogboxopens.
11.Browsetothefullpathandselect creotk.dat.
12.ClickOpen.TheCreoParametric TOOLKITapplication runs.
BuildingaSampleApplication
TheCreoParametric TOOLKITloadpointincludesthesourceofasimple
application designedspecifically totesttheCreoParametric TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBuildingaSampleApplication
TheCreoParametric TOOLKITloadpointincludesthesourceofasimple
application designedspecifically totesttheCreoParametric TOOLKIT
installation. Thestepsrequiredtobuildandrunthetestapplication aredescribed
inthefollowingsections.
Inthisexplanation, <creo_toolkit_loadpoint> referstothedirectorythat
formstheloadpointofCreoParametric TOOLKIT, and<machine_type>
referstothenameofthetypeofplatformyouareusing(forexample, i486_nt).
Step1—Compile andLink
CompileandlinktheCreoParametric TOOLKITinstallation testapplication
usingthemakefile <creo_toolkit_loadpoint>\$<machine_type>\
obj\make_install
32 Creo®Parametric TOOLKIT User’sGuideThemakefileisdesignedtoberuninthatlocation,andcreatesaCreoParametric
TOOLKITapplication fileinthedirectoryfromwhichitisrun.Ifyoudonothave
rootprivileges, youprobablyneedtocopythemakefiletoadirectoryofyourown
sotheoutputfilecanbecreated.Ifyoudothis,youalsoneedtoeditthemakefile
tocorrectthemacrothatreferstotheCreoParametric TOOLKITloadpoint.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsotheoutputfilecanbecreated.Ifyoudothis,youalsoneedtoeditthemakefile
tocorrectthemacrothatreferstotheCreoParametric TOOLKITloadpoint.
Ifyoucopythemakefiletoanotherdirectory,replacetheline:
PROTOOL_SRC =../..
with:
PROTOOL_SRC =<creo_toolkit_loadpoint>
Inthisline,<creo_toolkit_loadpoint> istheloadpointforyourCreo
Parametric TOOLKITinstallation.
Torunthemakefile,typethefollowingcommand:
nmake -fmake_install
Thiscreatesafilecalled pt_inst_test.exe.
Ifyouexperience anyerrormessagesatthisstage,itmightbeduetotheCreo
Parametric TOOLKITinstallation beingincomplete, or,morelikely,theC
compilerandlinkerbeingunavailable orunsupported byCreoParametric
TOOLKIT.
Step2—Register
Inthesamedirectory,createatextfilecalled creotk.dat. Thisfileisthe
“registryfile”thattellsCreoParametric abouttheCreoParametric TOOLKIT
application. RefertotheRegistering aCreoParametric TOOLKITApplication on
page38andSampleRegistryFilesonpage2194sectionsforsyntaxrequirementsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplication. RefertotheRegistering aCreoParametric TOOLKITApplication on
page38andSampleRegistryFilesonpage2194sectionsforsyntaxrequirements
forthisfile.Thecreotk.dat fileshouldcontainthefollowinglines:
name install_test
exec_file pt_inst_test.exe
text_dir <creo_toolkit_loadpoint>/protk_appls/pt_install_test
end
Note
Usethedelimitercharacter \increotk.dat.
Step3—RunCreoParametric
RunCreoParametric fromthedirectorythatcontainsthecreotk.dat file;Creo
Parametric startstheCreoParametric TOOLKITapplication inmultiprocess mode
(seethesectionHowCreoParametric TOOLKITWorksonpage35formore
information onmultiprocess mode).YoushouldseethattheInstallTestcommand
hasbeenaddedintheTOOLKITgroupintheHometabontheCreoParametric
Fundamentals 33ribbonuserinterface.ClickToolsandthenclickFile▶▶InstallTest.TheCreo
Parametric TOOLKITapplication displaysacustomdialogindicating whetherthe
installation testhassucceeded:
InstallTestResultsDialogBox
Failureorerrormessagesatthisstagecouldbeduetothefollowingreasons:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKITapplication displaysacustomdialogindicating whetherthe
installation testhassucceeded:
InstallTestResultsDialogBox
Failureorerrormessagesatthisstagecouldbeduetothefollowingreasons:
•Youmadeamistakewhencreatingthecreotk.dat file.Ifthesyntaxor
contentsarewrong,youshouldseeaself-explanatory messageinthewindow
fromwhichyoustartedCreoParametric.
•TheCreoParametric youranisnotlicensedforCreoParametric TOOLKIT.
Thisalsocausesanexplanatory messagetobedisplayedinthestartup
window.
•TheCreoParametric TOOLKITexecutable youcreatedinStep1iswrongin
someway:itisforthewrongplatform,forexample,ormightnothaveexecute
access.Youcancheckthisbytryingtoexecutethefiledirectlybytypingits
name.Ifthefileiscorrect,theprogramprintsthefollowingmessagesandthen
terminates:
pt_inst_test: insufficient arguments; need 2
arguments:
(1) own RPC program #
(2) root directory path for Pro/TOOLKIT
text files.
Ifthefileisincorrect,theexactmessagewilldependonwhichplatformyouarexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpt_inst_test: insufficient arguments; need 2
arguments:
(1) own RPC program #
(2) root directory path for Pro/TOOLKIT
text files.
Ifthefileisincorrect,theexactmessagewilldependonwhichplatformyouare
using,butshouldexplainthecauseoftheproblem.
Step4—RepeattheTestinDLLMode
TobuildforDLLmode,usethesamemakefile,butusethefollowinglineinstead
ofthelinenmake -fmake_install:
nmake -fmake_install dll
34 Creo®Parametric TOOLKIT User’sGuideThiscreatesafilecalled pt_inst_test.dll, whichisthelibrarytobe
dynamically linked.
Next,makethesetwochangestothecreotk.dat file:
Addthislineafterthefirstline:
startup dll
Changetheexec_file statementtoreferencethenewCreoParametric
TOOLKITfile.Usetheexecutable name pt_inst_test.exe inthesecond
line,andtheWindowsdirectorysyntaxinthethirdline.
YoucanrunCreoParametric andlookatthebehavioroftheCreoParametric
TOOLKITapplication exactlyasinStep3.
SeethesectionHowCreoParametric TOOLKITWorksonpage35formore
information onDLLmode.
Developing aCreoParametric TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKITapplication exactlyasinStep3.
SeethesectionHowCreoParametric TOOLKITWorksonpage35formore
information onDLLmode.
Developing aCreoParametric TOOLKIT
Application
ThissectiondescribeshowCreoParametric TOOLKITworksandthestepsyou
needtotakeafterinstallingCreoParametric TOOLKITtocreateaCreo
Parametric TOOLKITapplication. Thetopicsareasfollows:
•HowCreoParametric TOOLKITWorksonpage35
•Compiling andLinkingaCreoParametric TOOLKITApplication onpage37
•Registering aCreoParametric TOOLKITApplication onpage38
•VersionCompatibility: CreoParametric andCreoParametric TOOLKITon
page41
•StoppingandRestarting aCreoParametric TOOLKITApplication onpage42
•StructureofaCreoParametric TOOLKITApplication onpage47
•User-SuppliedMainonpage55
•CreoParametric TOOLKITTechniques onpage56
HowCreoParametric TOOLKITWorks
ThestandardmethodbywhichCreoParametric TOOLKITapplication codeis
integrated intoCreoParametric isthroughtheuseofdynamically linkedlibrariesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxHowCreoParametric TOOLKITWorks
ThestandardmethodbywhichCreoParametric TOOLKITapplication codeis
integrated intoCreoParametric isthroughtheuseofdynamically linkedlibraries
(DLLs).WhenyoucompileyourCreoParametric TOOLKITapplication Ccode
andlinkitwiththeCreoParametric TOOLKITlibrary,youcreateanobject
libraryfiledesignedtobelinkedintotheCreoParametric executable whenCreo
Parametric startsup.ThismethodisreferredtoasDLLmode.
Fundamentals 35CreoParametric TOOLKITalsosupportsasecondmethodofintegration: the
“multiprocess,” orspawnedmode.Inthismode,theCreoParametric TOOLKIT
application codeiscompiledandlinkedtoformaseparateexecutable. This
executable isdesignedtobespawnedbyCreoParametric andrunsasachild
processoftheCreoParametric session.InDLLmode,theexchanges betweenthe
CreoParametric TOOLKITapplication andCreoParametric aremadethrough
directfunctioncalls.Inmultiprocess mode,thesameeffectiscreatedbyaninter-
processmessaging systemthatsimulatesdirectfunctioncallsbypassingthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdirectfunctioncalls.Inmultiprocess mode,thesameeffectiscreatedbyaninter-
processmessaging systemthatsimulatesdirectfunctioncallsbypassingthe
information necessarytoidentifythefunctionanditsargumentvaluesbetweenthe
twoprocesses.
Multiprocess modeinvolvesmorecommunications overheadthanDLLmode,
especially whentheCreoParametric TOOLKITapplication makesfrequentcalls
toCreoParametric TOOLKITlibraryfunctions, becauseofthemorecomplex
methodofimplementing thosecalls.However,itoffersthefollowingadvantage: it
enablesyoutoruntheCreoParametric TOOLKITapplication withasource-code
debuggerwithoutalsoloadingthewholeCreoParametric executable intothe
debugger.SeethesectionUsingaSource-Code Debugger onaCreoParametric
TOOLKITApplication onpage44formoredetails.
YoucanuseaCreoParametric TOOLKITapplication ineitherDLLmodeor
multiprocess modewithoutchanginganyoftheCsourcecodeintheapplication.
(Themethodsofsettingthemodearedescribedindetaillaterinthischapter.)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanuseaCreoParametric TOOLKITapplication ineitherDLLmodeor
multiprocess modewithoutchanginganyoftheCsourcecodeintheapplication.
(Themethodsofsettingthemodearedescribedindetaillaterinthischapter.)
ItisalsopossibletousemorethanoneCreoParametric TOOLKITapplication
withinasinglesessionofCreoParametric, andthesecanuseanycombination of
modes.
Ifyouusemultiprocess modeduringdevelopment ofyourapplication todebug
moreeasily,youshouldswitchtoDLLmodewhenyouinstalltheapplication for
yourendusersbecausetheperformance isbetterinthatmode.However,takecare
totestyourapplication thoroughly inDLLmodebeforeyoudeliverit.Any
programming errorsinyourapplication thatcausecorruption tomemoryusedby
CreoParametric orCreoParametric TOOLKITarelikelytoshowquitedifferent
symptoms ineachmode,sonewbugsmayemergewhenyouswitchtoDLL
mode.
Althoughmultiprocess modeinvolvestwoprocessesrunninginparallel,these
processesdonotprovidegenuineparallelprocessing. Thereis,however,anotherxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmode.
Althoughmultiprocess modeinvolvestwoprocessesrunninginparallel,these
processesdonotprovidegenuineparallelprocessing. Thereis,however,another
modeofintegrating aCreoParametric TOOLKITapplication thatprovidesthis
ability,called“asynchronous mode.”(Asynchronous modeisdescribedindetailin
thechapterCore:Asynchronous Modeonpage273.)TheDLLandmultiprocess
modesaregiventhegeneralname“synchronous mode.”Anasynchronous Creo
Parametric TOOLKITapplication isfundamentally differentinitsarchitecture
fromasynchronous modeapplication, soyoushouldchoosebetweenthese
methodsbeforewritinganyapplication code.Asageneralrule,synchronous
modeshouldbethedefaultchoiceunlessthereissomeunavoidable reasontouse
asynchronous mode,becausethelattermodeismorecomplextouse.
36 Creo®Parametric TOOLKIT User’sGuideNote
•AllCreoParametric TOOLKITcallsrunningineithersynchronous (DLLor
multiprocess) modeorasynchronous modealwayscleartheUndo/Redo
stackintheCreoParametric session.TheCreoParametric userinterfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•AllCreoParametric TOOLKITcallsrunningineithersynchronous (DLLor
multiprocess) modeorasynchronous modealwayscleartheUndo/Redo
stackintheCreoParametric session.TheCreoParametric userinterface
reflectsthisbymakingtheUndoandRedomenuoptionsunavailable.
•WhenyouinvoketheCreoParametric TOOLKITapplication, ensurethatno
dialogsareopeninCreoParametric session.IfCreoParametric dialogisopen,
theresultsmaybeunpredictable.
CompilingandLinkingaCreoParametric TOOLKIT
Application
Thissectiondescribescompiling andlinkingCreoParametric TOOLKIT
applications.
Makefiles
TheCcompileroptionsandsystemlibrariesneededtocompileandlinkaCreo
Parametric TOOLKITapplication aredifferentoneachplatform.Toensurethat
themakefileyouuseforbuildingyourCreoParametric TOOLKITapplication
usesthecorrectoptions,youshouldbaseyourmakefileononeofthemakefiles
locatedunderthe<creo_toolkit_loadpoint>. Thesearedesignedfor
buildingthevariousCreoParametric TOOLKITapplications whosesourceis
includedintheCreoParametric TOOLKITinstallation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocatedunderthe<creo_toolkit_loadpoint>. Thesearedesignedfor
buildingthevariousCreoParametric TOOLKITapplications whosesourceis
includedintheCreoParametric TOOLKITinstallation.
AnexampleofoneoftheCreoParametric TOOLKITapplications providedisthe
installation test,whosesourcecodeisunderthedirectory <creo_toolkit_
loadpoint>\protk_appls\pt_install_test, where <creo_
toolkit_loadpoint> istheloadpointdirectoryoftheCreoParametric
TOOLKITinstallation. Themakefilefortheinstallation testapplication is
<creo_toolkit_loadpoint>\$<machine_type>\obj\make_
install.
Tousethisasthemodelforyourownmakefile,copyittothedirectorythatwill
containyourCreoParametric TOOLKITsourcecode,thenmakethefollowing
changestoit:
•Changethemacro MAKEFILENAME torefertothemakefilebyitsnewname.
•Changethemacros EXEandEXE_DLL todefineoutputfilenamesmore
suitableforyourownapplication.
•Changethemacro PROTOOL_SRC torefertotheloadpointofCreo
Parametric TOOLKIT.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Changethemacros EXEandEXE_DLL todefineoutputfilenamesmore
suitableforyourownapplication.
•Changethemacro PROTOOL_SRC torefertotheloadpointofCreo
Parametric TOOLKIT.
Fundamentals 37•Changethemacro OBJStorefertotheobjectfilesthatwillresultfrom
compiling yourCreoParametric TOOLKITsourcefiles.
•Addtargetsforthoseobjectfiles.Thesecontaininstructions for
•compiling yourCsourcefiles.Theformofthesetargetdefinitions canbe
copiedfromtheonesintheoriginalmakefile.Theygenerallytakethe
followingform:
myfile.o: myfile.c
$(CC) $(CFLAGS) myfile.c
Note
Thesecondlinemuststartwithatabcharacter.
IfyouwanttouseadebuggerwithyourCreoParametric TOOLKITapplication,
youcanalsoaddtheappropriate compilerswitch(usually“-g”)totheCCFLAGS
macro.
Ifyouarerebuilding anexistingPro/TOOLKITapplication withanewversionof
CreoParametric TOOLKIT,remember torepeatthesestepstosetupanew
makefile—do notcontinuetouseamakefilecreatedforthepreviousversion.You
mustdothisincasethecompilerswitchesorsystemlibrariesneededtobuildaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKIT,remember torepeatthesestepstosetupanew
makefile—do notcontinuetouseamakefilecreatedforthepreviousversion.You
mustdothisincasethecompilerswitchesorsystemlibrariesneededtobuilda
CreoParametric TOOLKITapplication havechangedinthenewversion.
Registering aCreoParametric TOOLKITApplication
Registering aCreoParametric TOOLKITapplication meansprovidingCreo
Parametric withinformation aboutthefilesthatformtheCreoParametric
TOOLKITapplication. Todothis,createasmalltextfilecalledtheCreo
Parametric TOOLKITregistryfile,thatCreoParametric willfindandread.
CreoParametric searchesfortheregistryfileasfollows:
•Intheabsolutepathspecifiedinthecreotkdat, protkdat, prodevdat,
andtoolkit_registry_file statements intheCreoParametric
configuration file.
•Forthefilesnamed creotk.dat, protk.dat, orprodev.dat inthe
followinglocations:
1.Thestartingdirectory
2.<creo_loadpoint>\<datecode>\Common Files\
$<machine_type>\text\<language>
3.<creo_loadpoint>\<datecode>\Common Files\textxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowinglocations:
1.Thestartingdirectory
2.<creo_loadpoint>\<datecode>\Common Files\
$<machine_type>\text\<language>
3.<creo_loadpoint>\<datecode>\Common Files\text
4.<creo_loadpoint>\<datecode>\Common Files\text\
<language>
38 Creo®Parametric TOOLKIT User’sGuideInthepreceding locations,thevariablesareasfollows:
•<creo_loadpoint>—The CreoParametric loadpoint(nottheCreo
Parametric TOOLKITloadpoint).
•<machine_type>—The machine-specific subdirectory ,suchas,i486_nt
orx86e_win64. Settheenvironment variable PRO_MACHINE_TYPE to
definethetypeofmachineonwhichCreoParametric isinstalled.
Ifmorethanoneregistryfilehavingthesamefilenameexistsinthissearchpath,
CreoParametric stopssearchingafterfindingthefirstinstanceofthefileand
startsalltheCreoParametric TOOLKITapplications specifiedinit.Ifmorethan
oneregistryfilehavingdifferentfilenamesexistinthissearchpath,Creo
Parametric stopssearchingafterfindingoneinstanceofeachofthemandstartsall
theCreoParametric TOOLKITapplications specifiedinthem.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoneregistryfilehavingdifferentfilenamesexistinthissearchpath,Creo
Parametric stopssearchingafterfindingoneinstanceofeachofthemandstartsall
theCreoParametric TOOLKITapplications specifiedinthem.
Note
•Option1isnormallyusedduringdevelopment, becausetheCreoParametric
TOOLKITapplication isseenonlyifyoustartCreoParametric fromthe
specificdirectorythatcontainstheregistryfile.
•Option3isrecommended whenmakinganend-userinstallation, becauseit
makessurethattheregistryfileisfoundnomatterwhatdirectoryisusedto
startCreoParametric.
Theregistryfileisasimpletextfile,whereeachlineconsistsofoneofa
predefined setofkeywords, followedbyavalue.
ThestandardformoftheregistryfileinDLLmodeisasfollows:
name YourApplicationName
startup dll
exec_file $LOADDIR/$MACHINE_TYPE/obj/filename.dll
text_dir $LOADDIR
end
Thefieldsoftheregistryfileareasfollows:
•name—Assigns auniquenametothisCreoParametric TOOLKIT
application.
•startup—Specifies themethodCreoParametric shouldusetocommunicatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtext_dir $LOADDIR
end
Thefieldsoftheregistryfileareasfollows:
•name—Assigns auniquenametothisCreoParametric TOOLKIT
application.
•startup—Specifies themethodCreoParametric shouldusetocommunicate
withtheCreoParametric TOOLKITapplication. Theexampleabovespecifies
theDLLmode.
•exec_file—Specifies thefullpathandnameofthefileproducedby
compiling andlinkingtheCreoParametric TOOLKITapplication. The
exampleaboveshowsatypicaluseofenvironment variablestomakethe
referencetotheexecutable filemoreflexible.
Fundamentals 39•text_dir—Specifies thefullpathnametotextdirectorythatcontainsthe
language-specific directories. Thelanguage-specific directories containthe
messagefiles,menufiles,resourcefilesandUIbitmapsinthelanguage
supported bytheCreoParametric TOOLKITapplication.
Note
Thefields exec_file andtext_dir haveacharacterlimitofPRO_
PATH_SIZE-1 widecharacters (wchar_t).
•end—Indicates theendofthedescription ofthisCreoParametric TOOLKIT
application.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Thefields exec_file andtext_dir haveacharacterlimitofPRO_
PATH_SIZE-1 widecharacters (wchar_t).
•end—Indicates theendofthedescription ofthisCreoParametric TOOLKIT
application.
Ifyouwanttoruntheapplication inmultiprocess mode,makethefollowing
changestotheregistryfile:
•Changethestartup statementto:
startup spawn
•Maketheexec_file statementrefertotheCreoParametric TOOLKIT
programexecutable.
Note
ForallCreoParametric TOOLKITplugins,theregistryfileprotk.dat
islocatedinsidethe%ProgramData%\PTC\<Creo Parametric
Toolkit version>\Plugins subdirectories. Allregistryfileslocated
inthislocationmustusetheabsolutepathinalltheirentries.
Formoreinformation abouttheregistryfile,refertotheappendixCreo
Parametric TOOLKITRegistryFileonpage2192.
LimitontheNumberofLoadedApplications
PreviousversionsofPro/ENGINEER limitedthenumberofapplications that
couldbespecifiedintheregistryfiles;thereisnosuchlimitforPro/ENGINEER
Wildfire2.0onwards.However,mostplatformsdohavelimitsforthesizeofaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcouldbespecifiedintheregistryfiles;thereisnosuchlimitforPro/ENGINEER
Wildfire2.0onwards.However,mostplatformsdohavelimitsforthesizeofa
process,thetotalsizeofallprocesses, andthenumberofprocessesthatasingle
processcanspawn.PTCrecommends thatyoucombinerelatedapplications into
thesamebinaryfilewhereverpossibletoavoidrunningintotheselimits.
40 Creo®Parametric TOOLKIT User’sGuideVersionCompatibility: CreoParametric andCreo
Parametric TOOLKIT
Inmanysituationsitwillbeinconvenient orimpossible toensurethattheusersof
yourCreoParametric TOOLKITapplication usethesamebuildofCreo
Parametric usedtocompileandlinktheCreoParametric TOOLKITapplication.
Thissectionsummarizes therulesformixingCreoParametric TOOLKITand
CreoParametric versions.TheCreoParametric TOOLKITversionistheCreo
Parametric CDversionfromwhichtheuserinstalledtheCreoParametric
TOOLKITversionusedtocompileandlinktheapplication.
Functions Introduced:
•ProEngineerReleaseNumericversionGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric CDversionfromwhichtheuserinstalledtheCreoParametric
TOOLKITversionusedtocompileandlinktheapplication.
Functions Introduced:
•ProEngineerReleaseNumericversionGet()
ThisfunctionreturnstheversionnumberoftheCreoParametric executable to
whichtheCreoParametric TOOLKITapplication isconnected. Thisnumberisan
absolutenumberandrepresents themajorreleaseoftheproduct.Theversion
numberofCreoParametric 1.0is30.
Note
FromPro/ENGINEER Wildfire4.0onwardsapplications builtwithlibraries
olderthanPro/ENGINEER 2001willnotrun.Youmustrecompile these
applications withlaterversionsofthePro/TOOLKITlibraries.
Thefollowingpointssummarize therulesformixingCreoElements/Pro
TOOLKITandCreoElements/Pro versions.
•Pro/ENGINEER releaseolderthanPro/TOOLKITrelease:
Notsupported
•CreoParametric releasenewerthanaCreoParametric TOOLKITrelease:
Thisworksinmany,butnotall,cases.Thecommunication methodusedto
linkCreoParametric TOOLKITtoCreoParametric providesfullcompatibilityxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•CreoParametric releasenewerthanaCreoParametric TOOLKITrelease:
Thisworksinmany,butnotall,cases.Thecommunication methodusedto
linkCreoParametric TOOLKITtoCreoParametric providesfullcompatibility
betweenreleases.However,thereareoccasional caseswherechangesinternal
toCreoParametric mayrequirechangestothesourcecodeofaCreo
Parametric TOOLKITapplication inorderthatitcontinuetoworkcorrectly.
WhetheryouneedtoconvertCreoParametric TOOLKITapplications depends
onwhatfunctionality itusesandwhatfunctionality changedinCreo
Parametric andCreoParametric TOOLKIT. PTCmakeseveryefforttokeep
theseeffectstoaminimum. TheReleaseNotesforCreoParametric TOOLKIT
detailanyconversion workthatcouldbenecessaryforthatrelease.
•CreoParametric buildnewerthanCreoParametric TOOLKITbuild
Thisisalwayssupported.
Fundamentals 41Application Compatibility: CreoParametric and
CreoParametric TOOLKITonDifferentArchitecture
Insomesituationsitwillbeinconvenient orimpossible toensurethattheusersofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFundamentals 41Application Compatibility: CreoParametric and
CreoParametric TOOLKITonDifferentArchitecture
Insomesituationsitwillbeinconvenient orimpossible toensurethattheusersof
yourCreoParametric TOOLKITapplication useamachinewiththesame
operatingsystemandarchitecture asthemachineonwhichitwascompiled. An
examplemightbeanapplication integrating withathirdpartylibrarywhichis
onlyavailableas32-bitarchitecture, butneedstoberunwithCreoParametric on
a64-bitarchitecture machinewiththesameoperatingsystem.CreoParametric
TOOLKITprovideslimitedcapability tosupportthesesituationsinspawnand
asynchronous modeonly.DLLapplications mustalwaysbecompiledon
machineswiththesameoperatingsystemandarchitecture astheCreoParametric
executable.
Thefollowingsituationsmightoccur:
•CreoParametric TOOLKITapplication compiledonthesamearchitecture and
operatingsystemasCreoParametric. Thisisalwayssupported.
•CreoParametric TOOLKITapplication compiledonamachinewithasmallerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•CreoParametric TOOLKITapplication compiledonthesamearchitecture and
operatingsystemasCreoParametric. Thisisalwayssupported.
•CreoParametric TOOLKITapplication compiledonamachinewithasmaller
pointersize(nativedatasize)thanthemachineonwhichtheapplication isrun
Forexample,aCreoParametric TOOLKITapplication builtonWindows32-
bitrunningonanWindows-64 bitinstallation ofCreoParametric. Thisis
supported forspawnandasynchronous modeonly.
•CreoParametric TOOLKITapplication compiledonamachinewithalarger
pointersize(nativedatasize)thanthemachineonwhichtheapplication is
run.Forexample,aCreoParametric TOOLKITapplication builtonWindows-
64bitmachinerunningonanWindows-32 bitinstallation ofCreoParametric.
Thisisnotsupported.
StoppingandRestartingaCreoParametric
TOOLKITApplication
CreoParametric TOOLKITsupportstheabilitytostopandrestartasynchronous
application withinasinglesessionofCreoParametric. Thisisparticularly useful
duringdevelopment ofanapplication becauseitenablesyoutomakechangestoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplication withinasinglesessionofCreoParametric. Thisisparticularly useful
duringdevelopment ofanapplication becauseitenablesyoutomakechangesto
yoursourcecodeandretestitwithouthavingtorestartCreoParametric andreload
yourtestmodels.UsetheAuxiliaryApplications dialogboxtostopandrestart
applications.
Tomakethisoptionavailable,theregistryfile(defaultname protk.dat should
containoneofthefollowinglines:
Multiprocess mode:
startup spawn
DLL mode:
startup DLL
42 Creo®Parametric TOOLKIT User’sGuideIfyouwanttobeabletostopandrestartyourCreoParametric TOOLKIT
application withinCreoParametric, youmustalsoaddthefollowingstatementto
thedefinitionoftheapplication intheregistryfile:
allow_stop TRUE
ToaccesstheAuxiliaryApplications dialogbox,ontheHometab,intheUtilities
group,clickAuxiliaryApplications orclickTools▶▶AuxiliaryApplications .The
dialogboxdisplaysalistofCreoParametric TOOLKITapplications identifiedby
thenamedefinedinthenamestatementinitsregistryfile.Onlyapplications thatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdialogboxdisplaysalistofCreoParametric TOOLKITapplications identifiedby
thenamedefinedinthenamestatementinitsregistryfile.Onlyapplications that
ausercanstartorstoparedisplayed. Thisdialogboxalsoshowsthecurrentstate
ofanapplication andallowsanapplication tobestartedorstopped.
Whenauserstartsanapplication fromtheAuxiliaryApplications dialogbox,Creo
Parametric freezestheuserinterfaceuntiltheapplication connectstoit.
Ifyouusetheallow_stop option,youmightalsosetCreoParametric tonot
starttheCreoParametric TOOLKITapplication untilyouexplicitlyrequestit.To
dothis,youmustaddthefollowingstatementinyourregistryfile:
delay_start TRUE
Tostartyourapplication inCreoParametric, chooseAuxiliaryApplications from
theToolstab,selectyourapplication fromthelist,thenclicktheStartbutton.
InadditiontoStart,Stop,andClose,thedialogboxincludesthefollowing
buttons:
•Register—Enables youtoregisteraCreoParametric TOOLKITapplication
whoseregistryfilewasnotpresentwhenCreoParametric wasstarted.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxInadditiontoStart,Stop,andClose,thedialogboxincludesthefollowing
buttons:
•Register—Enables youtoregisteraCreoParametric TOOLKITapplication
whoseregistryfilewasnotpresentwhenCreoParametric wasstarted.
•Info—Reports thefollowinginformation abouteachcurrentlyregistered Creo
Parametric TOOLKITapplication:
○Thenamesoftheexecutable fileandtextdirectory
○Theversionnumberusedtobuildtheapplication
○Whethertheapplication iscurrentlyrunning
Thereareafewother,lesscommonly usedoptionsintheregistryfile.Allthe
optionsaredescribedfullyintheCreoParametric TOOLKITRegistryFileon
page2192appendix.
Note
Youcandeleteregistration information onanyapplication thatisnotrunning.
Whenstoppinganapplication, makesurethatnoapplication-created menu
buttonsarecurrent.Todothis,beforeyouexitanapplication youmustchoosea
command thatinterruptsthecurrentmenucommand.
Fundamentals 43UsingaSource-Code DebuggeronaCreoParametric
TOOLKITApplication
Forafulldescription ofhowtodebugCreoParametric TOOLKITapplications,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcommand thatinterruptsthecurrentmenucommand.
Fundamentals 43UsingaSource-Code DebuggeronaCreoParametric
TOOLKITApplication
Forafulldescription ofhowtodebugCreoParametric TOOLKITapplications,
seeappendixDebugging CreoParametric TOOLKITApplications onpage2257.
Thissectionalsodescribesoptionalmethodsofdebugging aCreoParametric
TOOLKITapplication.
UnlockingaCreoParametric TOOLKITApplication
Beforeyoudistributeyourapplication executable totheenduser,youmustunlock
it.Thisenablestheenduser(yourcustomer) torunyourapplications without
havingCreoParametric TOOLKITasanoption.InCreoParametric 6.0.0.0and
lateryoucandigitallysignyourapplication.
Tounlockyourapplication, enterthefollowingcommand:
<creo_loadpoint>/<datecode>/Parametric/bin/protk_unlock [-c]
[-cd]
<path toexecutables orDLLs tounlock>
Note
•TheCreoParametric TOOLKITapplication isunlockedevenifyoudonot
specifythe-coption.
•Tounlockanddigitallysignyourapplication, specifythe-cdoption.Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[-cd]
<path toexecutables orDLLs tounlock>
Note
•TheCreoParametric TOOLKITapplication isunlockedevenifyoudonot
specifythe-coption.
•Tounlockanddigitallysignyourapplication, specifythe-cdoption.Note
thatitismandatory tosignyourapplication ifyouusethe-cdoption.Seethe
sectionDigitallySigningtheApplication onpage45,formoreinformation on
digitallysigningyourapplication.
MorethanoneCreoParametric TOOLKITbinaryfilemaybesuppliedonthe
command line.
Note
Onceyouhaveunlockedtheexecutable, youcandistributeyourapplication
programtoCreoParametric usersinaccordance withthelicenseagreement.
Using protk_unlock requiresavalidCreoParametric TOOLKITlicensebe
presentandunusedonyourlicenseserver.IftheCreoParametric licenseserveris
configured toaddaCreoParametric TOOLKITlicenseasaStartupoption,
protk_unlock willcausethelicenseservertoholdonlytheCreoParametric
TOOLKIToptionfor15minutes.Thelicensewillnotbeavailableforanyother
development activityorunlocking duringthisperiod.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprotk_unlock willcausethelicenseservertoholdonlytheCreoParametric
TOOLKIToptionfor15minutes.Thelicensewillnotbeavailableforanyother
development activityorunlocking duringthisperiod.
44 Creo®Parametric TOOLKIT User’sGuideIfyouuse-cdoptiontounlockyourapplication, amessageappearsaskingyou
todigitallysignyourapplication beforeusingitinCreo.
IftheonlyavailableCreoParametric TOOLKITlicenseislockedtoaCreo
Parametric license,theentireCreoParametric licenseincludingtheCreo
Parametric TOOLKIToptionwillbeheldfor15minutes.PTCrecommends you
configureyourCreoParametric TOOLKITlicenseoptionasstartupoptionsto
avoidtyingupyourCreoParametric licenses.
Note
Onlyonelicensewillbeheldforthespecifiedtimeperiod,evenifmultiple
applications weresuccessfully unlocked.
Unlocking theapplication mayalsorequireoneormoreadvancedlicensing
options.Theprotk_unlock application willdetectwhetheranyfunctions
usingadvancedlicensesareinuseintheapplication, andifso,willmakeacheckxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoptions.Theprotk_unlock application willdetectwhetheranyfunctions
usingadvancedlicensesareinuseintheapplication, andifso,willmakeacheck
fortheavailability oftheadvancedlicenseoption.Ifthatoptionisnotpresent,
unlocking willnotbepermitted. Iftheyarepresent,theunlockwillproceed.
Advanced optionsarenotheldonthelicenseserverforanylengthoftime.For
moreinformation refertotheAdvanced Licensing Optionsonpage2206chapter.
Iftherequiredlicensesareavailable,theprotk_unlock application willunlock
theapplication immediately .Anunlockedapplication doesnotrequireanyofthe
CreoParametric TOOLKITlicenseoptionstorun.Depending onthefunctionality
invokedbytheapplication, itmaystillrequirecertainCreoParametric optionsto
workcorrectly.
Note
Onceanapplication binaryhasbeenunlocked,itshouldnotbemodifiedin
anyway(whichincludesstaticallylinkingtheunlockedbinarywithother
librariesaftertheunlock).Theunlockedbinarymustnotbechangedorelse
CreoParametric willagainconsiderit"locked".
DigitallySigningtheApplicationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlibrariesaftertheunlock).Theunlockedbinarymustnotbechangedorelse
CreoParametric willagainconsiderit"locked".
DigitallySigningtheApplication
InCreoParametric 6.0.0.0andlater,youcandigitallysignyourapplication. Use
thestandardMicrosoft utilitySignTooltodigitallysignyourapplication. Seethe
Microsoft documentation formoreinformation onthisutilityandtocreatethe
digitalcertificate.
InCreoParametric 7.0.0.0andlater,Creocheckssignatures ofCreoParametric
TOOLKITapplications atloadtime.
Fundamentals 45Thefollowingconfiguration optionscontrolwhethertoalwaysallowtheusersor
administrator todetermine whethersignedorunsignedCreoParametric
TOOLKITapplications shouldbeallowedtoalwaysrun,toneverrun,orto
prompttheuserbeforerunning:
•open_protk_unsigned_apps—Controls whetherunsignedapplications
canbeloadedinaCreosession.Itcanhavethefollowingvalues:
○Always—Always loadsunsignedapplications.
○Never—Never loadunsignedapplications.
○Prompt—Asks theuserwhethertoloadunsignedapplications.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcanbeloadedinaCreosession.Itcanhavethefollowingvalues:
○Always—Always loadsunsignedapplications.
○Never—Never loadunsignedapplications.
○Prompt—Asks theuserwhethertoloadunsignedapplications.
•open_protk_signed_apps—Controls whethersignedapplications can
beloadedinaCreosession.Itcanhavethefollowingvalues:
○Always—Always loadssignedapplications.
○Never—Never loadsignedapplications.
○Prompt—Asks theuserwhethertoloadsignedapplications.
UnlockMessages
Thefollowingtableliststhemessagesthatcanbereturnedwhenyouunlocka
CreoParametric TOOLKITapplication.
Message Cause
<application name>:Successfully unlocked
application.Theapplication isunlockedsuccessfully .
Usage: protk_unlock <oneormoreCreo
Parametric TOOLKITexecutables orDLLs>Noargumentssupplied.
<application name>:ERROR: NoREADaccess
<application name>:ERROR: NoWRITEaccessYoudonothaveREAD/WRITE accessforthe
executable.
<application name>:Executable isnotaCreo
Parametric TOOLKITapplication.Theexecutable isnotlinkedwiththeCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<application name>:ERROR: NoWRITEaccessYoudonothaveREAD/WRITE accessforthe
executable.
<application name>:Executable isnotaCreo
Parametric TOOLKITapplication.Theexecutable isnotlinkedwiththeCreo
Parametric TOOLKIT libraries,ordoesnotuseany
functionsfromthoselibraries.
<application name>:Executable isalreadyunlocked. Theexecutable isalreadyunlocked.
Error:LicensesdonotcontainCreoParametric
TOOLKIT LicenseCode.Arequirement forunlocking aCreoParametric
TOOLKITapplication.
ERROR:NoCreoParametric licensesareavailable
forthestartupcommand specifiedCouldnotcontactthelicenseserver.
<application name>:Unlocking thisapplication
requiresoptionTOOLKIT-for-3D_Drawings.Theapplication usesfunctionsrequiringanadvanced
option;andthisoptionisnotavailable.
Thelicenseoption222,thatis,theTOOLKIT-for-
3D_Drawings licenseisnotavailable.
<application name>:Unlocking thisapplication
requiresoptionTOOLKIT-for-Mechanica.Theapplication usesfunctionsrequiringanadvanced
option;andthisoptionisnotavailable.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3D_Drawings licenseisnotavailable.
<application name>:Unlocking thisapplication
requiresoptionTOOLKIT-for-Mechanica.Theapplication usesfunctionsrequiringanadvanced
option;andthisoptionisnotavailable.
Thelicenseoption223,thatis,theTOOLKIT-for-
Mechanica licenseisnotavailable.
46 Creo®Parametric TOOLKIT User’sGuideStructureofaCreoParametric TOOLKITApplication
Thecontentsofthissectionrefertotheuseofsynchronous mode.Forinformation
onasynchronous modeapplications, seethechapterCore:Asynchronous Modeon
page273.
EssentialCreoParametric TOOLKITIncludeFiles
TheonlyheaderfileyoumustalwaysincludeineverysourcefileofyourCreo
Parametric TOOLKITapplication isProToolkit.h. Thisfilemustalwaysbe
present,andmustbethefirstincludefilebecauseitdefinesthevalueofwchar_
t,thetypeforcharacters inawidestring,referenced frommanyotherinclude
files.ProToolkit.h alsoincludesthesestandardincludefiles:
•stdio.h
•string.h
•stddef.h
•stdlib.h
Therefore, youdonotneedtoincludetheseheaderfilesexplicitlyinyour
application.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfiles.ProToolkit.h alsoincludesthesestandardincludefiles:
•stdio.h
•string.h
•stddef.h
•stdlib.h
Therefore, youdonotneedtoincludetheseheaderfilesexplicitlyinyour
application.
WhenyouusefunctionsforaparticularCreoParametric TOOLKITobject,you
shouldalwaysincludetheheaderfilethatcontainsthefunctionprototypes for
thosefunctions. Ifyoudonotdothis,oromitsome,youlosethebenefitof
functionargumenttype-checking duringcompilation. Theheaderfile
ProObjects.h, whichcontainsthedeclarations oftheobjecthandles,is
includedindirectlyineachoftheheaderfilesthatcontainsfunctionprototypes,
andsodoesnotneedtobeincludedexplicitly.
Forexample,ifyouareusingthefunction ProSurfaceAreaEval(), you
shouldincludethefileProSurface.h, whichcontainstheprototypeofthat
function,butyoudonotneedtoinclude ProObjects.h inordertoseethe
definitionofProSurface, because ProObjects.h isincludedin
ProSurface.h.
CoreofaCreoParametric TOOLKITApplication
Functions Introduced:
•user_initialize()
•ProEngineerDisplaydatecodeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinitionofProSurface, because ProObjects.h isincludedin
ProSurface.h.
CoreofaCreoParametric TOOLKITApplication
Functions Introduced:
•user_initialize()
•ProEngineerDisplaydatecodeGet()
•user_terminate()
Fundamentals 47ACreoParametric TOOLKITapplication mustalwayscontainthefunctions
user_initialize() anduser_terminate(). Thesefunctionshavethe
prefix“user_”becausetheyarewrittenbytheCreoParametric TOOLKIT
application developer,buttheyarecalledfromwithinCreoParametric atthestart
andendofthesession.
Thefunction user_initialize() initializesasynchronous-mode Creo
Parametric TOOLKITapplication. Thisfunctionmustbepresentinany
synchronous modeapplication inorderforittobeloadedintoCreoParametric.
Usethisfunctiontosetupuserinterfaceadditions,ortorunthecommands
requiredforanon-interactive application. user_initialize() iscalledafter
theCreoParametric application hasbeeninitialized andthegraphicswindowhas
beencreated.Itshouldcontainanyinitializations thatyourCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheCreoParametric application hasbeeninitialized andthegraphicswindowhas
beencreated.Itshouldcontainanyinitializations thatyourCreoParametric
TOOLKITapplication needs,includinganymodification ofCreoParametric
menus(suchasaddingnewbuttons).
Note
•user_initialize() mustcontainatleastoneCreoParametric
TOOLKITAPIcall.FailuretodosocausestheCreoParametric TOOLKIT
application tofailandreturn PRO_TK_GENERAL_ERROR.
•WhencodingaCreoParametric TOOLKITapplication inC++youmust
declarethefunction user_initialize() asextern "C".
Theuser_initialize() functioniscalledwithanumberofoptional
argumentsthatcanaddtoyourfunctiondefinition. Allinputandoutputarguments
tothisfunctionareoptionalanddonotneedtobeinthefunctionsignature.These
argumentsprovideinformation aboutcommand-line argumentsenteredwhen
CreoParametric wasinvoked,andtherevisionandbuildnumberoftheCreo
Parametric insession.Refertosectionthesectionuser_initialize() Argumentson
page50formoreinformation onthefunctionarguments.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric wasinvoked,andtherevisionandbuildnumberoftheCreo
Parametric insession.Refertosectionthesectionuser_initialize() Argumentson
page50formoreinformation onthefunctionarguments.
Theinitialization functionmustreturn0toindicatethattheCreoParametric
TOOLKITapplication wasinitialized successfully .Anyotherreturnvaluewillbe
interpreted asafailure,andthesystemwillnotifytheCreoParametric userthat
theCreoParametric TOOLKITapplication failed.Usetheoptionaloutput
argumenttouser_initialize() tospecifythewordingofthiserror
message.
ThecalltoCreoParametric TOOLKITapplication usingthefunction user_
initialize() isdelayeduntilCreoPlatformAgentisloaded.Whenyou
installaCreoapplication, anappropriate versionoftheCreoPlatformAgentalso
getsinstalled.ThePlatformAgentisusedforallbrowser-relatedfunctionalities,
whichincludesinteraction withWindchill.So,torunaCreoParametric
48 Creo®Parametric TOOLKIT User’sGuideTOOLKITapplication whichinteractswithWindchillusingfunctions, Creoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichincludesinteraction withWindchill.So,torunaCreoParametric
48 Creo®Parametric TOOLKIT User’sGuideTOOLKITapplication whichinteractswithWindchillusingfunctions, Creo
PlatformAgentmustbeinitialized firstbeforerunningtheCreoParametric
TOOLKITapplication.
TheCreoPlatformAgentisalwaysinitialized firstbydefault.TheCreo
Parametric TOOLKITapplications aredelayeduntilthePlatformAgentisfully
initialized. ThePlatformAgentmustloadinamaximum of60seconds,beyond
whichtheagentwilltimeout.IfthePlatformAgentfailstoload,theCreo
Parametric TOOLKITapplication willnotstartandanerrormessageisdisplayed.
YoucanoverridethisbehaviorandstarttheCreoParametric TOOLKIT
application, evenifthePlatformAgenthasnotloadedusingthefollowing
environment variables.Thevalidvaluesforthesevariablesaretrueandfalse.
•PROTK_DELAYINIT_NO_DELAY—Initiates CreoPlatformAgent.
However,CreoParametric TOOLKITapplications areinitiated,without
waitingforPlatformAgenttoload.
•PROTK_DELAYINIT_ALWAYS_INIT—W aitsforCreoPlatformAgenttoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxHowever,CreoParametric TOOLKITapplications areinitiated,without
waitingforPlatformAgenttoload.
•PROTK_DELAYINIT_ALWAYS_INIT—W aitsforCreoPlatformAgentto
load.However,itinitiatestheCreoParametric TOOLKITapplication evenif
CreoPlatformAgentfailstoloadortimesout.
Note
Ifboththevariablesareset,thentheenvironment variable PROTK_
DELAYINIT_NO_DELAY takesprecedence.
Note
TheCreoParametric visibledatecodeformathaschanged. user_
initialize() continuestoreceivetheclassicformatbasedontheyear
andweekoftheCreoParametric build.
Thefunction ProEngineerDisplaydatecodeGet() returnstheuser-
visibledatecodestringfromCreoParametric. Applications thatpresentadatecode
stringtousersinmessagesandinformation shouldusethenewformatforthe
CreoParametric displayeddatecode.
Thefunction user_terminate() iscalledattheendoftheCreoParametric
session,aftertheuserselectsYesontheExitconfirmation dialogbox.Itsreturn
typeisvoid.
Fundamentals 49Note
WhencodingaCreoParametric TOOLKITapplication inC++youmustxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsession,aftertheuserselectsYesontheExitconfirmation dialogbox.Itsreturn
typeisvoid.
Fundamentals 49Note
WhencodingaCreoParametric TOOLKITapplication inC++youmust
declarethefunction user_terminate() asextern "C".
ThefollowingexampleistheemptycoreofaCreoParametric TOOLKIT
application. Thiscodeshouldalwaysbethestartingpointofeachnewapplication
youdevelop.
#include "ProToolkit.h"
int user_initialize()
{
return (0);
}
void user_terminate()
{
}
Ifyouusetheoptionstostartandstopamultiprocess-mode CreoParametric
TOOLKITapplication withinaCreoParametric session, user_
initialize() anduser_terminate() arecalleduponstartingand
stoppingtheCreoParametric TOOLKITprocessonly.However,anymenu
modifications definedinuser_initialize() willbemade,evenifthis
involvesrepainting menusthatarealreadydisplayed. Allofthesemodifications
willberesetwhentheCreoParametric TOOLKITapplication isstopped.
user_initialize() Arguments
user_initialize() iscalledwithanumberofinputandoutputarguments.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwillberesetwhentheCreoParametric TOOLKITapplication isstopped.
user_initialize() Arguments
user_initialize() iscalledwithanumberofinputandoutputarguments.
AsalwaysinC,ifyoudon'tneedtouseanargument,yourfunctiondoesnotneed
todeclareit,providedthatitdeclaresalltheargumentsuptothelastoneused.
Theinputargumentsare:
intarg_num Numberofcommand-line arguments.
char *argc[] Command-line argumentspassedbyCreo
Parametric. (Seefurtherexplanation below.)
char* version ReleasenameoftheCreoParametric beingused.
Note:FromPro/ENGINEER Wildfire4.0onwards
applications builtwithlibrariesolderthanPro/
ENGINEER 2001willnotrun.Youmustrecompile
theseapplications withlaterversionsofthePro/
TOOLKITlibraries.
char* build ThebuildnumberoftheCreoParametric beingused.
Theoutputargumentis:
50 Creo®Parametric TOOLKIT User’sGuidewchar_t err_buff[80] ThetextofanerrormessagepassedtoCreo
Parametric iftheCreoParametric TOOLKITfailsto
initialize.CreoParametric displaysthistextwhenitxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx50 Creo®Parametric TOOLKIT User’sGuidewchar_t err_buff[80] ThetextofanerrormessagepassedtoCreo
Parametric iftheCreoParametric TOOLKITfailsto
initialize.CreoParametric displaysthistextwhenit
reportstheCreoParametric TOOLKITfailure(if
user_initialize() returnsnon-zero).
Thefirstcommand-line argumentpassedtoCreoParametric TOOLKITisthe
sameoneseenbyCreoParametric; thatis,itisthenameoftheCreoParametric
executable. Theremaining command-line argumentspassedtouser_
initialize() areasubsetofthosegivenonthecommand linethatinvoked
CreoParametric. TheruleisthatCreoParametric passesontouser_
initialize() anycommand-line argumentthatstartswitha“+”,orwitha“-”
followedbyanupper-casecharacter.
Forexample,thesecommand-line argumentswillbepassedtoCreoParametric
TOOLKIT:
+batch=mybatchfile.txt
-Level=expert
Command-line argumentssuchas-g:no_graphics areinterpreted byCreo
Parametric butnotpassedontoCreoParametric TOOLKIT.
ThreadinginCreoParametric TOOLKITApplicationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx+batch=mybatchfile.txt
-Level=expert
Command-line argumentssuchas-g:no_graphics areinterpreted byCreo
Parametric butnotpassedontoCreoParametric TOOLKIT.
ThreadinginCreoParametric TOOLKITApplications
CallingCreoParametric TOOLKITapplications fromwithinmultiplethreadsof
anyapplication inanymodeisnotsupported. Extrathreadscreatedbythe
application aretobeusedonlyforcompletion oftasksthatdonotdirectlycallthe
CreoParametric TOOLKITfunctions.
FunctionIntroduced:
•ProEngineerMultithr eadModeEnable()
FromCreoParametric 3.0onward,thefunction
ProEngineerMultithreadModeEnable() hasbeendeprecated.
Multithreading isnowalwayssupported inCreoParametric TOOLKIT
applications, withouttheneedtocallthemultithreading function,whenthe
application createsadditional threadsforprocessing.
Callthefunction ProEngineerMultithreadModeEnable() fromwithin
theinitialization function user_initialize(), ifyourCreoParametric
TOOLKITapplication createsadditional threadsforprocessing. ThisfunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCallthefunction ProEngineerMultithreadModeEnable() fromwithin
theinitialization function user_initialize(), ifyourCreoParametric
TOOLKITapplication createsadditional threadsforprocessing. Thisfunction
notifiesCreoParametric toexecuteinthemultithread enabledmode.Runningin
thismodeeliminates thepossibility ofamemorycorruption duetointeraction
betweenCreoParametric’ sthreadlibrariesandthethreadscreatedbyyour
application. Thisfunctiondoesnotworkformultiprocess andasynchronous mode
applications.
Fundamentals 51Note
RunningCreoParametric inthemultithread enabledmodemayslowdown
performance. Therefore, ProEngineerMultithreadModeEnable()
shouldbeusedonlyforapplications thatactuallycreatemultiplethreads.
UsingCreoParametric TOOLKITtoMakeaBatchCreo
Parametric Session
FunctionIntroduced:
•ProEngineerEnd()
IfyouwanttouseyourCreoParametric TOOLKITapplication toperform
operations onCreoParametric objectsthatdonotrequireinteraction withtheuser,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric Session
FunctionIntroduced:
•ProEngineerEnd()
IfyouwanttouseyourCreoParametric TOOLKITapplication toperform
operations onCreoParametric objectsthatdonotrequireinteraction withtheuser,
youcanmakeallthenecessarycallstoCreoParametric TOOLKITfunctionsin
user_initialize(). Whenyouroperations arecomplete,callthefunction
ProEngineerEnd() toterminatetheCreoParametric session.
Ausefultechniquewhendesigningabatch-mode CreoParametric TOOLKIT
application istousecommand-line argumentstoCreoParametric asawayof
signalingthebatchmodeandpassinginthenameofabatchcontrolfile.Consider
thefollowingcommand tostartCreoParametric:
pro +batch=<filename>
Inthisexample,theoptionwillbeignoredbyCreoParametric, butwillbepassed
asaninputargumenttouser_initialize(). Insidethatfunction,yourcode
canrecognizetheswitch,andgetthenameofthefilethatcouldcontain,for
example,thenamesofCreoParametric modelstobeprocessed, andoperations to
beperformed oneachone.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcanrecognizetheswitch,andgetthenameofthefilethatcouldcontain,for
example,thenamesofCreoParametric modelstobeprocessed, andoperations to
beperformed oneachone.
Abatch-mode operationshouldalsorunwithoutdisplaying anygraphics.To
ensurethattheCreoParametric mainGraphicsWindowandMessageWindoware
notdisplayed, youshoulduseeitherthecommand-line option -g:no_
graphics (ortheconfiguration fileoption“graphics NO_GRAPHICS”) to
turnofftheCreoParametric graphics.SeetheCreoParametric Helpformore
detailsoftheseoptions.
Example1:BatchModeOperation
Thisexampleshowshowtousetheargumentstouser_initialize() and
thefunction ProEngineerEnd() tosetupabatchmodesessionofCreo
Parametric. Theapplication retrievesapartspecifiedintheCreoParametric
command line,performsanactiononit(usingthedummyfunction
UserAddHoles()), savestheparts,andterminates CreoParametric.
/*===============================================================-
=*\
52 Creo®Parametric TOOLKIT User’sGuideFUNCTION: UserAddHolesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserAddHoles()), savestheparts,andterminates CreoParametric.
/*===============================================================-
=*\
52 Creo®Parametric TOOLKIT User’sGuideFUNCTION: UserAddHoles
PURPOSE: Find the circular datum curves and replace them with
holes.
\*===============================================================-
=*/
UserAddHoles (ProMdl p_part)
{
/* .
.
.
*/
}
/*===============================================================-
=*\
Load the part specified bythe command line argument, and
replace its datum curves with holes.
\*===============================================================-
=*/
int user_initialize (int argc, char *argv[])
{
ProMdl p_part;
ProName name_wchar;
ProError err;
char *part_name;
/-
*----------------------------------------------------------------*
\
Set upthe part name from the argument list. Note that the
Creo Parametric arguments for Creo Parametric TOOLKIT have a
leading
"+" or"-."
\-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
Set upthe part name from the argument list. Note that the
Creo Parametric arguments for Creo Parametric TOOLKIT have a
leading
"+" or"-."
\-
*-----------------------------------------------------------------
*/
part_name =argv[1];
part_name++;
ProStringToWstring (name_wchar, part_name);
/-
*----------------------------------------------------------------*
\
Retrieve the part.
\-
*-----------------------------------------------------------------
*/
err =ProMdlRetrieve (name_wchar, PRO_PART, &p_part);
if(err !=PRO_TK_NO_ERROR)
{
printf ("*** Failed toretrieve part %s\n", part_name);
ProEngineerEnd();
}
Fundamentals 53/-
*----------------------------------------------------------------*
\
Add the holes tothe part.
\-
*-----------------------------------------------------------------
*/
UserAddHoles (p_part);
/-
*----------------------------------------------------------------*
\
Save the part.
\-
*-----------------------------------------------------------------
*/
ProMdlSave (p_part);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/-
*----------------------------------------------------------------*
\
Save the part.
\-
*-----------------------------------------------------------------
*/
ProMdlSave (p_part);
/-
*----------------------------------------------------------------*
\
Terminate the Creo Parametric session.
\-
*-----------------------------------------------------------------
*/
ProEngineerEnd();
return (0);
}
/*===============================================================-
=*\
FUNCTION: user_terminate()
PURPOSE: Report successful termination ofthe program.
\*===============================================================-
=*/
void user_terminate()
{
printf ("Creo Parametric TOOLKIT application terminated
successfully\n");
}
CreoParametric TOOLKITSupportfor
CreoApplications
CreoParametric TOOLKITapplications insynchronous andasynchronous modes
aresupported onlywiththeCreoParametric application. Theyarenotsupported
withtheotherCreoapplications, suchas,CreoDirect,CreoLayout,Creo
Simulate,andsoon.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaresupported onlywiththeCreoParametric application. Theyarenotsupported
withtheotherCreoapplications, suchas,CreoDirect,CreoLayout,Creo
Simulate,andsoon.
Intheasynchronous mode,thefunctions ProEngineerConnect() and
ProEngineerStart() returnanerrorwhentheCreoParametric TOOLKIT
application attemptstoconnecttoaCreoapplication otherthanCreoParametric.
54 Creo®Parametric TOOLKIT User’sGuideForCreoParametric TOOLKITapplications insynchronous mode,thenon-Creo
Parametric applications ignoretheToolkitregistryfileswithoutanywarnings.The
AuxiliaryApplications dialogboxisalsonotavailablewithinthenon-Creo
Parametric applications.
User-Supplied Main
FunctionIntroduced:
•ProToolkitMain()
Insynchronous mode,themain()functionoftheCreoParametric TOOLKIT
programisnotwrittenbyyou,theapplication developer.InDLLmode,the
main()istherootoftheCreoParametric programitself;inmultiprocess
synchronous mode,themain()istakenfromtheCreoParametric TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprogramisnotwrittenbyyou,theapplication developer.InDLLmode,the
main()istherootoftheCreoParametric programitself;inmultiprocess
synchronous mode,themain()istakenfromtheCreoParametric TOOLKIT
library,anditsjobistosetupthecommunication channelwiththeseparateCreo
Parametric executable.
IfyouareusingalanguagesuchasC++inyourCreoParametric TOOLKIT
application, itcanbeadvantageous tocompilethemain()functionwiththeC++
compilertoensurethattheprogramstructureiscorrectforC++.InDLLmode,
youcannotdothisbecauseyoudonothaveaccesstotheCreoParametric
main().Butinmultiprocess mode,youcansubstitutetheCreoParametric
TOOLKIT main()withyourown,ifyouobservethefollowingrules:
•Yourmain()mustcallthefunction ProToolkitMain() asitslast
statement. Thisfunctioncontainsallthenecessarysetupcodethatneedstobe
runwhentheCreoParametric TOOLKITapplication startsupinmultiprocess
mode.
•Youmustpassontheargcandargvargumentsinputtomain()astheinput
argumentstoProToolkitMain() withoutmodifying theminanyway.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrunwhentheCreoParametric TOOLKITapplication startsupinmultiprocess
mode.
•Youmustpassontheargcandargvargumentsinputtomain()astheinput
argumentstoProToolkitMain() withoutmodifying theminanyway.
•YoucannotmakecallstoanyotherCreoParametric TOOLKITfunctions
beforethecalltoProToolkitMain(), becausethecommunications with
CreoParametric havenotyetbeensetup.Youmay,however,makeothernon-
CreoParametric TOOLKITfunctioncallsbeforecalling
ProToolkitMain().
Thefollowingexampleshowsauser-defined main()foruseinmultiprocess
mode.
#include "ProToolkit.h"
main(
int argc,
char *argv[])
{
.
.
.
Fundamentals 55ProToolkitMain (argc, argv);
/*The program exits from within ProToolkitMain().
Any code here isnot executed. */
}
Asynchronous Mode
Formoreinformation ontheasynchronous mode,seethechapterCore:
Asynchronous Modeonpage273.
CreoParametric TOOLKITTechniques
Thissectiondescribesthebasictechniques youusewhenwritingCreoParametric
TOOLKITapplications. Thetopicsareasfollows:
•ObjectHandlesonpage56xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAsynchronous Modeonpage273.
CreoParametric TOOLKITTechniques
Thissectiondescribesthebasictechniques youusewhenwritingCreoParametric
TOOLKITapplications. Thetopicsareasfollows:
•ObjectHandlesonpage56
•Expandable Arraysonpage59
AlsoseetheVisitFunctions onpage62sectionforinformation ontechniques
usedwhenwritingCreoParametric TOOLKITapplications.
ObjectHandles
EachobjectinCreoParametric TOOLKIThasacorresponding Ctypedef,calleda
“handle”,whosenameisalwaysthenameoftheobjectitselfwiththeprefix
“Pro.”Thehandleisusedasthetypeforallvariablesandargumentsthatreferto
anobjectofthattype.Forexample,anyCreoParametric TOOLKITfunctionthat
performsanactiononasolidhasaninputargumentoftypeProSolid.
Handlesareclassifiedintotwotypes,depending onthewayinwhichtheyare
definedandhavetobeused.Thetwotypesareopaquehandle(OHandle) and
databasehandle(DHandle). Thefollowingsectionsdescribethesehandlesin
detail.
OHandles
ThesimplestwaytoreferenceanobjectinCreoParametric istousethememoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatabasehandle(DHandle). Thefollowingsectionsdescribethesehandlesin
detail.
OHandles
ThesimplestwaytoreferenceanobjectinCreoParametric istousethememory
addressoftheCreoParametric datastructurethatdescribesthatobject.Toprevent
theCreoParametric TOOLKITapplication fromaccessingthecontentofthedata
structurefortheobjectdirectly,thedeclaration ofthestructureisnotprovided.
Forexample,theobjecthandle ProSurface isdefinedasfollows:
typedef struct geom* ProSurface;
Thestructure struct geomisusedtodescribeasurfaceinCreoParametric, but
thedeclaration ofthestructureisnotincludedinCreoParametric TOOLKIT.This
typeofhandleiscalledanopaquehandleoropaquepointerforthisreason.
56 Creo®Parametric TOOLKIT User’sGuideOpaquehandleshavetheadvantage ofsimplicity andefficiency—they canbe
directlydereferenced insidetheCreoParametric TOOLKITfunctionwithoutany
searching. TheycanalsoreferenceitemsthataretransientandnotintheCreo
Parametric databaseatall,suchasthesurfacesandedgesthatresultfromanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsearching. TheycanalsoreferenceitemsthataretransientandnotintheCreo
Parametric databaseatall,suchasthesurfacesandedgesthatresultfroman
interference volumecalculation.
OtherexamplesofCreoParametric TOOLKITobjectsthataregivenOHandles
areasfollows:
typedef void* ProMdl;
typedef struct curve_header* ProEdge;
typedef struct sld_part* ProSolid;
typedef struct entity* ProPoint;
typedef struct entity* ProAxis;
typedef struct entity* ProCsys;
typedef struct entity* ProCurve;
Becauseopaquehandlesarejustmemorypointers,theysufferthedisadvantage of
allpointersinthattheyarevolatile—they becomeinvalidifthedatabaseobject
theyrefertomovestoadifferentmemorylocation.Forexample,aProSurface
handle(apointertoaCreoParametric surface)maybecomeinvalidafter
regeneration oftheowningpart(becauseitsmemoryhasbeenreallocated).
However,mostoftheCreoParametric structuresreferenced byopaquehandles
containanintegeridentifierthatisuniqueforitemsofthattypewithintheowningxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxHowever,mostoftheCreoParametric structuresreferenced byopaquehandles
containanintegeridentifierthatisuniqueforitemsofthattypewithintheowning
model.Thisidentifierretainsitsvaluethroughthewholelifeofthatitem,even
betweensessionsofCreoParametric. CreoParametric TOOLKITprovides
functionssuchasProSurfaceIdGet() andProAxisIdGet() thatenable
yourapplication tousetheseidentifiers asapersistentwaytoreferenceobjects.
Theseintegeridentifiers arealsousedinDHandles, describedinthefollowing
section.
Inthecaseofmodels,itisthenameandtypethatarepersistent. Thefunctions
ProMdlMdlnameGet() andProMdlTypeGet() providethenameandtype
ofamodel,givenitsopaquehandle.
DHandles
Afurtherlimitationofopaquehandlesisthattheycanbetoospecificincases
wheretheactionyouwanttoperformismoregeneric.Forexample,afunction
thatprovidesthenameofageometrical itemshould,ideally,beabletoactonany
ofthegeometryobjects(ProSurface, ProEdge, ProCsys, andsoon).
However,theopaquehandlesforthosedifferentgeometryitemsarenotmutuallyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatprovidesthenameofageometrical itemshould,ideally,beabletoactonany
ofthegeometryobjects(ProSurface, ProEdge, ProCsys, andsoon).
However,theopaquehandlesforthosedifferentgeometryitemsarenotmutually
compatible, sotheCreoParametric TOOLKITfunctionwouldalsoneedtoknow
thetypeoftheobjectbeforeitcouldinternallyde-reference theopaquepointer.
Tosolvethisproblem,CreoParametric TOOLKITdefinesanew,genericobject
typeinthesecasesanddeclaresitusingadatahandle,orDHandle.ADHandleis
anexplicitdatastructurethatcarriesjustenoughinformation toidentifya
Fundamentals 57databaseitemuniquely:thetype,integeridentifier,andhandletotheowning
model.BecausetheDHandlemustcontaintheintegeridentifier(notthetoo-
specificopaquehandle),italsohastheadvantage ofbeingpersistent.
ThemostimportantexamplesofDHandles areProGeomitem, whichisthe
generictypeforthegeometryitemspreviously mentioned, andProModelitem,
whichisanevenmoregenericobjectthatincludes ProGeomitem.
Thedeclaration isasfollows:
typedef struct pro_model_item
{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgenerictypeforthegeometryitemspreviously mentioned, andProModelitem,
whichisanevenmoregenericobjectthatincludes ProGeomitem.
Thedeclaration isasfollows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProModelitem, ProGeomitem;
Note
AlthoughthefieldownerisdefinedusingtheOHandle ProMdl,andis
thereforestrictlyspeakingvolatile,thishandleisguaranteed toremainvalid
whiletheCreoParametric modelitreferstoremainsinmemory.
Thegenericobject ProGeomitem canrepresentanyofthegeometrical objects
inasolidmodel,suchasProSurface, ProEdge, ProCurve, andProCsys.
Thespecificobjecttypesaresaidtobe“derivedfrom”themostgenerictype,and
alsotobe“instances” ofthattype.TheobjecttypeProGeomitem isinturnan
instanceofProModelitem, whichcanrepresentdatabaseitemsotherthan
geometrical ones.
ThegenericobjecttypessuchasProModelitem andProGeomitem areused
asinputstoCreoParametric TOOLKITfunctionswhoseactionsareapplicable to
allofthemorespecifictypesofobjectthatareinstancesofthegenerictype.ForxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasinputstoCreoParametric TOOLKITfunctionswhoseactionsareapplicable to
allofthemorespecifictypesofobjectthatareinstancesofthegenerictype.For
example,thefunction ProGeomitemFeatureGet() hasthatnamebecauseit
canactonanytypeofobjectthatisaninstanceofProGeomitem
ProSurface, ProEdge, ProCsys, andsoon.Thefunction
ProModelitemNameGet() isapplicable toawiderrangeofdatabaseobjects,
notjustgeometrical ones.
IfyouhavetheOHandletoanobject,suchasProSurface, andyouwanttocall
agenericfunctionsuchasProGeomitemFeatureGet(), youneedtoconvert
theOHandletothemoregenericDHandle.Functions suchas
ProGeomitemInit() andProModelitemInit() providethiscapability.
Similarly,youcanconvertaProGeomitem toaProSurface usingthe
function ProSurfaceInit(). Thesetechniques areillustrated inExample3:
ListingHolesinaModelonpage64,intheVisitFunctions onpage62section.
58 Creo®Parametric TOOLKIT User’sGuideWorkspaceHandles
WhenyouuseCreoParametric TOOLKITtocreateanobjectinCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxListingHolesinaModelonpage64,intheVisitFunctions onpage62section.
58 Creo®Parametric TOOLKIT User’sGuideWorkspaceHandles
WhenyouuseCreoParametric TOOLKITtocreateanobjectinCreoParametric
thatcontainsalotofinformation, suchasafeature,itisimportanttobeabletoset
upallofthatinformation beforeaddingtheobjecttotheCreoParametric
database.Theobject-oriented styleofCreoParametric TOOLKITdoesnotallow
explicitaccesstothecontentsofsuchastructure,however.Instead,youmustuse
aspecialworkspace objectthatisallocatedandfilledbytheCreoParametric
TOOLKITapplication usingfunctionsprovidedforthatpurpose.
The“workspace” isamemoryareainCreoParametric thatcontainsdata
structuresnotyetpartofthedesigndatabase.
Theworkspace objectisidentifiedbyahandlethatcontainstheaddressofthe
memoryfortheobject,whichisthereforesimilartoanOHandle.Todistinguish
thisfromhandlesthatrefertoobjectsintheCreoParametric database,such
handlesarecalledworkspace handles(WHandles).
Expandable Arrays
Functions Introduced:
•ProArrayAlloc()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthisfromhandlesthatrefertoobjectsintheCreoParametric database,such
handlesarecalledworkspace handles(WHandles).
Expandable Arrays
Functions Introduced:
•ProArrayAlloc()
•ProArrayFr ee()
•ProArraySizeGet()
•ProArraySizeSet()
•ProArrayMaxCountGet()
•ProArrayObjectAdd()
•ProArrayObjectRemove()
Thefunctionsinthissectionenableyoutoaccessasetofprogramming utilitiesin
generalusewithinCreoParametric. TheutilitiesfillaneedthatiscommoninC
andPascalprogramming—to provideastoragemethodthatprovidesthe
advantages ofanarray,butwithoutitslimitations.
Whenyouuseanarrayforstorageforagroupofitems,youhavetheadvantage
overalinkedlistinthatthemembersarecontiguous inmemory.Thisenablesyou
toaccessagivenmemberusingitsindexinthearray.However,ifyouneedto
makefrequentadditionstothemembersinawaythatcannotbepredicted(a
commonsituationinMCAEapplications), youmustreallocatethememoryforthe
arrayeachtime.
Acommoncompromise istoallocatethememoryinblockslargeenoughtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcommonsituationinMCAEapplications), youmustreallocatethememoryforthe
arrayeachtime.
Acommoncompromise istoallocatethememoryinblockslargeenoughto
containseveralarraymembers,thenreallocatethememoryonlywhenablock
becomesfull.Youwouldchoosethesizeoftheblockssuchthatthefrequency of
reallocation issignificantly reduced,whiletheamountofunusedmemoryinthe
lastblockisacceptably small.Thedifficultyofthissolutionisthatyouwould
Fundamentals 59normallyneedanewsetofutilitiesforeachitemyouwanttostoreasanarray,
andadditional staticdataforeacharraytokeeptrackofthenumberofblocksand
thenumberofmembers.
The“expandable array”utilitiesprovideasetoffunctionsthatcanbeappliedto
itemsofanysize.Theutilitiesdothisbykeepingaprivateheaderatthestartof
thearraymemorytowhichthe“bookkeeping” information (thenumberandsize
ofitsmembers,andoftheblocks)iswritten.Thepointeryourapplication seesis
theaddressofthefirstblock,nottheaddressofthepreceding header.
Theimportance oftheexpandable arrayutilitiesinaCreoParametric TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheaddressofthefirstblock,nottheaddressofthepreceding header.
Theimportance oftheexpandable arrayutilitiesinaCreoParametric TOOLKIT
application isnotonlythatyoucanusethemforyourownarrays,butthatyou
mustusethemforarraysofdatapassedbetweenyourapplication andtheinternals
ofCreoParametric throughtheCreoParametric TOOLKITfunctions.
Notethatbecausethearraypointerisnotthestartofthecontiguous memory
claimedbythearrayutility,thispointerisnotrecognized bytheoperatingsystem
asavalidlocationfordynamicmemory.Therefore, youwillcauseafatalerrorif
youtrytousethememorymanagement libraryfunctions, suchasrealloc()
andfree().
Thebasictypeusedforreferringtoexpandable arraysisProArray, declaredas
avoid*.
Thefunction ProArrayAlloc() setsupanewexpandable array.Itsinputsare
asfollows:
•Theinitialnumberofmembersinthearray
•Thesize,inbytes,ofeacharraymember
•NumberofobjectsaddedtoProArray ateachmemoryreallocation. A
highernumbermeansmorememoryispreallocated andfewerreallocations of
theProArray arerequired.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Thesize,inbytes,ofeacharraymember
•NumberofobjectsaddedtoProArray ateachmemoryreallocation. A
highernumbermeansmorememoryispreallocated andfewerreallocations of
theProArray arerequired.
Thefunctionoutputsapointertothecontiguous memorythatwillcontainthe
arraymembers.Youcanwritetothatmemorytofillthearrayusingtheusual
memoryfunctions(suchasmemcpy() andmemset()). Ifyouincreasethe
arraysizebeyondthelimitreturnedbyProArrayMaxCountGet(), this
functionreturnsanout-of-memory message.
Themaximum memoryallocatedis2MB,exceptfor64–bitplatformswherethe
maximum istwicethat.
Thefunction ProArrayFree() releasesthememoryforthespecified
ProArray.
Thefunction ProArraySizeGet() tellsyouhowmanymembersarecurrently
inthespecifiedarray.
TheProArraySizeSet() functionenablesyoutochangethenumberof
membersintheexpandable array.Thisfunctionisequivalent torealloc().
60 Creo®Parametric TOOLKIT User’sGuideFunction ProArrayMaxCountGet(), whengiventhespecifiedstructuresizexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmembersintheexpandable array.Thisfunctionisequivalent torealloc().
60 Creo®Parametric TOOLKIT User’sGuideFunction ProArrayMaxCountGet(), whengiventhespecifiedstructuresize
inbytes,returnsthemaximum numberofstructureelementsaProArray can
supportforthatstructuresize.
Thefunction ProArrayObjectAdd() addsacontiguous setofnewmembers
toanarray,thoughnotnecessarily totheendofthearray.Thefunctionalsosets
thecontentsofthenewmembers.Ifyouincreasethearraysizebeyondthelimit
returnedbyProArrayMaxCountGet(), thisfunctionreturnsanout-of-
memorymessage.
Thefunction ProArrayObjectRemove() removesamemberfromthearray.
Thememberdoesnotnecessarily havetobethelastmemberofthearray.
Functions ProArraySizeSet(), ProArrayObjectAdd(), and
ProArrayObjectRemove() changethesizeofthearray,andmighttherefore
alsochangeitslocation.
TheCreoParametric TOOLKITfunctionsuseexpandable arraysinthefollowing
circumstances:
•Thefunctioncreatesafilled,expandable arrayasitsoutput.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalsochangeitslocation.
TheCreoParametric TOOLKITfunctionsuseexpandable arraysinthefollowing
circumstances:
•Thefunctioncreatesafilled,expandable arrayasitsoutput.
•Thefunctionneedsafilled,expandable arrayasitsinput.
•Thefunctionneedsanexistingexpandable arraytowhichtowriteitsoutput.
Anexampleofthefirsttypeoffunctionisthegeometryfunction
ProEdgeVertexdataGet(), whichprovidesalistoftheedgesandsurfaces
thatmeetataspecifiedsolidvertex.Whenyouhavefinishedusingtheoutput,you
shouldfreethearraysofedgesandsurfaces(usingthefunction
ProArrayFree()).
AnexampleofthesecondtypeoffunctionisProSolidNoteCreate(),
whichcreatesadesignnoteinasolid.Becausethetextlinestoaddtothenoteare
passedintheformofanexpandable array,yourapplication mustcreateandfillthe
arrayusingthefunctions ProArrayAlloc() andProArrayObjectAdd()
beforeyoucallProSolidNoteCreate().
AnexampleofthethirdtypeoffunctionisProElementChildrenGet(),
whichgetsthenumberoffeatureelementsthatarethechildrenofthespecifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeforeyoucallProSolidNoteCreate().
AnexampleofthethirdtypeoffunctionisProElementChildrenGet(),
whichgetsthenumberoffeatureelementsthatarethechildrenofthespecified
compound element.Thefeatureelementsformatreethatcontainsallthe
necessaryinformation aboutaparticularfeature.(Thisfunctionisthereforeused
inbothfeatureanalysisandfeaturecreation.)Beforecalling
ProElementChildrenGet(), youmustcallProArrayAlloc() tocreate
anemptyarray.YoucanthenuseProArraySizeGet() tofindouthowmany
elementswereaddedtothearray.
Thereisafourthcase,whichisavariationofthefirst,inwhichaCreoParametric
TOOLKITfunctioncreatesanexpandable arrayasitsoutputthefirsttimeitis
calledinanapplication, butoverwrites thesamearrayonsubsequent calls.An
exampleofthisisProSelect(), whoseoutputarrayofProSelection
Fundamentals 61structuresmustnotbefreedusing ProArrayFree(). Youmustalsomakesure
tocopythecontentsofthearrayifyouneedtouseittomakeanothercallto
ProSelect().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFundamentals 61structuresmustnotbefreedusing ProArrayFree(). Youmustalsomakesure
tocopythecontentsofthearrayifyouneedtouseittomakeanothercallto
ProSelect().
Theconventions arechosenforeachfunctionaccording toitsindividual needs.
Forexample, ProElementChildrenGet() istypicallycalledinarecursive
looptotraverseatree,sothefourthmethodofallocation wouldbeinconvenient.
TherulesforeachCreoParametric TOOLKITfunctionaredocumented inthe
browser.
Example2:Expandable Arrays
ThesamplecodeinUgFundExpArrays.c locatedat<creo_toolkit_
loadpoint>\protk_appls\pt_userguide\ptu_fundament shows
howtouseexpandable arrays,notasinputoroutputforaCreoParametric
TOOLKITfunction,buttocreateautilitythatprovidesanalternative toaCreo
Parametric TOOLKITvisitfunction.TouseCreoParametric TOOLKITtoaccess
allthefeaturesinasolid,youcallthefunction ProSolidFeatVisit().
However,youmightprefertouseafunctionthatprovidesanarrayofhandlesto
allofthefeatures,thentraversethisarray.Thiskindoffunctioniscalledaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallthefeaturesinasolid,youcallthefunction ProSolidFeatVisit().
However,youmightprefertouseafunctionthatprovidesanarrayofhandlesto
allofthefeatures,thentraversethisarray.Thiskindoffunctioniscalleda
“collection” function,todistinguish itfromavisitfunction.AlthoughCreo
Parametric TOOLKITdoesnotprovidecollection functions, youcanusethe
techniquedemonstrated intheexampletowriteyourown.
Theutilityfunction UserFeatureCollect() passesanempty,expandable
arrayoffeaturehandlesastheapplication datatoProSolidFeatVisit().
Thevisitfunction FeatVisitAction() addsthehandletothevisitedfeature
tothearrayusing ProArrayObjectAdd().
VisitFunctions
InaCreoParametric TOOLKITapplication, youoftenwanttoperforman
operationonalltheobjectsthatbelongtoanotherobject,suchasallthefeaturesin
apart,orallthesurfacesinafeature.Foreachcase,CreoParametric TOOLKIT
providesanappropriate “visitfunction.” Avisitfunctionisanalternative to
passingbackanarrayofdata.
Youwriteafunctionthatyouwanttobecalledforeachitem(referredtoasthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprovidesanappropriate “visitfunction.” Avisitfunctionisanalternative to
passingbackanarrayofdata.
Youwriteafunctionthatyouwanttobecalledforeachitem(referredtoasthe
“visitaction”function)andpassitspointertotheCreoParametric TOOLKITvisit
function.Thevisitfunctionthencallsyourvisitactionfunctiononceforeach
visiteditem.
Mostvisitfunctionsalsoprovideforasecondcallbackfunction,thefilter
function,whichiscalledforeachvisiteditembeforetheactionfunction.The
returnvalueofthefilterfunctioncontrolswhethertheactionfunctioniscalled.
Youcanusethefilterfunctionasawayofvisitingonlyaparticularsubsetofthe
itemsinthelist.
62 Creo®Parametric TOOLKIT User’sGuideForexample,thevisitfunctionforvisitingthefeaturesinasolidisdeclaredas
follows:
ProError ProSolidFeatVisit (
ProSolid solid,
ProFeatureVisitAction visit_action,
ProFeatureFilterAction filter_action,
ProAppData app_data);
Thefirstargumentisthehandletothesolid(thepartorassembly) whosefeatures
youwanttovisit.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSolid solid,
ProFeatureVisitAction visit_action,
ProFeatureFilterAction filter_action,
ProAppData app_data);
Thefirstargumentisthehandletothesolid(thepartorassembly) whosefeatures
youwanttovisit.
Thesecondandthirdargumentsarethevisitactionfunctionandfilterfunction,
respectively .
Thetypeofthefinalargument, ProAppData, isatypedeftoavoid*.This
argumentisusedtopassanytypeofuser-definedapplication datadowntothe
visit_action andfilter_action functionsthroughtheintervening Creo
Parametric TOOLKITlayer.Youmightwanttousethisasanalternative to
allowingglobalaccesstothenecessarydata.
Althoughyouwritethevisitactionandfilterfunctions, theyarecalledfrom
withintheCreoParametric TOOLKITvisitfunction,sotheirargumentsare
definedbyCreoParametric TOOLKIT. ToenabletheCcompilertocheckthe
arguments,CreoParametric TOOLKITprovidesatypedefforeachofthese
functions.
Forexample,thetypefortheactionfunctionforProSolidFeatVisit() isas
follows:
typedef ProError (*ProFeatureVisitAction)(
ProFeature *feature,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctions.
Forexample,thetypefortheactionfunctionforProSolidFeatVisit() isas
follows:
typedef ProError (*ProFeatureVisitAction)(
ProFeature *feature,
ProError status,
ProAppData app_data);
Ittakesthreearguments:
•Thehandletothefeaturebeingvisited
•Thestatusreturnedbythepreceding calltothefilterfunction
•Theapplication datapassedasinputtothevisitfunctionitself
Thetypeforthefilterfunctionisasfollows:
typedef ProError (*ProFeatureFilterAction)(
ProFeature *feature,
ProAppData app_data);
Itstwoargumentsarethehandletothefeaturebeingvisitedandtheapplication
data.
Thefilteractionfunctionshouldreturnoneofthefollowingvalues:
•PRO_TK_CONTINUE—Do notcallthevisitactionforthisobject,but
continuetovisitthesubsequent objects.
Fundamentals 63•Anyothervalue—Call thevisitactionfunctionforthisobjectandpassthe
returnvalueasthestatusinputargument.
Thevisitactionfunctionshouldreturnoneofthefollowingvalues:
•PRO_TK_NO_ERROR—Continue visitingtheotherobjectsinthelist.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreturnvalueasthestatusinputargument.
Thevisitactionfunctionshouldreturnoneofthefollowingvalues:
•PRO_TK_NO_ERROR—Continue visitingtheotherobjectsinthelist.
•PRO_TK_E_NOT_FOUND—For visitfunctions, thisvalueindicatesthatno
itemsofthedesiredtypewerefoundandnofunctionscouldbevisited.
•Anyothervalue(including PRO_TK_CONTINUE)—T erminatethevisits.
Typicallythisstatusisreturnedfromthevisitfunctionupontermination, so
thatthecallingfunctionknowsthereasonthatvisitingterminated abnormally .
Example3:ListingHolesinaModel
ThesamplecodeinUgFundVisit.c locatedat<creo_toolkit_
loadpoint>\protk_appls\pt_userguide\ptu_fundament
demonstrates severaloftheprinciples usedinCreoParametric TOOLKIT,
includingvisitfunctions, theuseofOhandlesandDhandles, andthe
ProSelection object.
Theexampleshowsthefunction UserDemoHoleList(), whichvisitstheaxes
inthecurrentpartthatbelongtofeaturesoftypeHOLE.Itthenwritestheaxis
namesandfeatureidentifiers toafile,andhighlights theholefeatures.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheexampleshowsthefunction UserDemoHoleList(), whichvisitstheaxes
inthecurrentpartthatbelongtofeaturesoftypeHOLE.Itthenwritestheaxis
namesandfeatureidentifiers toafile,andhighlights theholefeatures.
Thetopfunction, UserDemoHoleList(), callsProSolidAxisVisit().
ThefunctionusestheProAppData argumenttopasstothevisitactionfunction,
UserDemoAxisAct(), astructurethatcontainsthefilepointerandhandleto
theowningsolid.
SupportforCreoModelNamesandFiles
Paths
CreoParametric supportsamaximum lengthof31characters forfilenamesof
nativeCreomodels.Thisexcludesthefileextension. Thelocalfilepathscan
containamaximum of260characters. Filepathssupportsomemulti-byte
characters.
FromCreoParametric 4.0F000onward,filenamessupportmulti-byte characters.
Thefilenamesandfilepathssupportthefollowingmulti-byte characters:
•Allcharacters fromUnicodenumber0800onward.
•Thefollowingcharacters fromUnicodenumbers0000to0070Faresupported.
AlltheotherUnicodecharacters between0000to0070Farenotsupported.
○AtoZ
○atozxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Allcharacters fromUnicodenumber0800onward.
•Thefollowingcharacters fromUnicodenumbers0000to0070Faresupported.
AlltheotherUnicodecharacters between0000to0070Farenotsupported.
○AtoZ
○atoz
64 Creo®Parametric TOOLKIT User’sGuide○0to9
○_Underscore
○–Hyphen
AlltheCreoParametric TOOLKITfunctionssupportmulti-byte characters infile
namesandfilepathsofthemodels.
WideStrings
CreoParametric TOOLKIT,likeCreoParametric, hastoworkinenvironments
wherecharacterstringsusecodesotherthanASCII,andmightuseabigger
charactersetthancanbecodedintotheusual1-bytechartype,forexample,the
Japanese KANJIcharacterset.
Forthisreason,CreoParametric TOOLKITusesthetypewchar_t insteadof
charforallcharacters andstringsthatmaybevisibletotheCreoParametric
user.Thisincludesalltextmessages, keyboardinput,filenames,andnamesofall
dimensions, parameters, andsoon,usedwithinaCreoParametric object.
Definingwchar_t
Althoughmostplatformssupported byCreoParametric TOOLKITprovideaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdimensions, parameters, andsoon,usedwithinaCreoParametric object.
Definingwchar_t
Althoughmostplatformssupported byCreoParametric TOOLKITprovidea
definitionofwchar_t inasystemincludefile,notalldo.Thosethatdouse
definitions ofdifferentlengths;someprovidedefinitions thatarenotsuitablefor
allthecharactercodessupported byCreoParametric. Therefore, CreoParametric
takesconsiderable caretomakesureitusesasuitabledefinitionofwchar_t on
eachsupported platform.
ItisessentialtomakesureyourCreoParametric TOOLKITapplication isusing
thesamedefinitionofwchar_t asCreoParametric oneachplatformyour
application supports.Tomakethiseasier,CreoParametric TOOLKITsuppliesthe
includefilepro_wchar_t.h. Thisfileensuresthat,ifadefinitionofwchar_
t.hhasnotalreadybeenmadeinanearlierincludefile,oneisprovidedthatis
consistent withtheCreoParametric definitionofthetype.Becausethisfileis
includedbythefileProToolkit.h, youshouldinclude ProToolkit.h as
theveryfirstincludefileineachsourcefile.
SettingtheHardwareTypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconsistent withtheCreoParametric definitionofthetype.Becausethisfileis
includedbythefileProToolkit.h, youshouldinclude ProToolkit.h as
theveryfirstincludefileineachsourcefile.
SettingtheHardwareType
Tomakethehandlingofthewidecharactertypewchar_t acrossdifferent
platformssimplerandmorereliable,theincludefilepro_wchar_t.h is
hardwaredependent. Itknowswhichplatformisbeingusedfromthesettingofthe
environment variable PRO_MACHINE; therecognized valuesarelistedinthe
includefilepro_hardware.h, includedbypro_wchar_t.h.
Fundamentals 65Youmustmakesurethattheenvironment variable PRO_MACHINE issetto
indicatethetypeofhardwareyouareusing.Setittosamevalueusedforthe
makefilemacro PRO_MACHINE inthemakefiletakenfromtheCreoParametric
TOOLKITloadpoint.
CheckingYourDeclaration ofwchar_t
FunctionIntroduced:
•ProWcharSizeV erify()
Thefunction ProWcharSizeVerify() checkstomakesureyouhavethe
correctdeclaration ofwchar_t. PTCrecommends thatyoualwayscallthisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctionIntroduced:
•ProWcharSizeV erify()
Thefunction ProWcharSizeVerify() checkstomakesureyouhavethe
correctdeclaration ofwchar_t. PTCrecommends thatyoualwayscallthis
functionatthebeginning oftheuser_initialize() function(ormain()in
asynchronous mode).
Youpassasinputthesizeofyourwchar_t definition, inbytes,andthefunction
outputsthecorrectsize.Itreturns PRO_TK_NO_ERROR ifyoursizeiscorrect,
andPRO_TK_GENERAL_ERROR otherwise. Youcancheckforcorrectness as
follows:
int proe_wchar_size;
int protk_wchar_size =sizeof (wchar_t);
if(ProWcharSizeVerify (protk_wchar_size, &proe_wchar_
size) !=
PRO_TK_NO_ERROR)
{
ProMessageDisplay (msgfil, "USER wchar_t size is%
0d,
should be%1d", &protk_wchar_size, &proe_wchar_
size);
return (1);
}
StringandWidestring Functions
CreoParametric providesmanyfunctionstakingasinputsafixed-length character
orwidecharacterarrayasastring.Duetosomeplatform-specific behavior,PTC
recommends thatyoudonotusestringliteralsinlieuoffixedlengtharrays.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorwidecharacterarrayasastring.Duetosomeplatform-specific behavior,PTC
recommends thatyoudonotusestringliteralsinlieuoffixedlengtharrays.
Alwayscopytheliteralstringstothefullsizearraythatthefunctionsacceptsas
theinput.
Forexamplethefollowingfunctionwillgetwarningsoncertainplatforms
becausethecodeexpectsthattheargumentscanbemodified.
ProEngineerStart("proe_path","text_path");
where ProCharPath proe_path=”proe_path”;
ProCharPath text_path=”text_path”;
66 Creo®Parametric TOOLKIT User’sGuideToovercome thiserror,itisrecommended thatyoureplacetheliteralstringsinthe
functionwithdefinedarraysasfollows:
ProEngineerStart(proe_path,text_path);
Functions Introduced:
•ProStringT oWstring()
•ProWstringT oString()
•ProWstringLengthGet()
•ProWstringCopy()
•ProWstringCompar e()
•ProWstringConcatenate()
Widecharacterstringsarenotaseasytomanipulate inCasordinarycharacter
strings.Ingeneral,therearenofunctionsforwidestringsthatcorrespond tothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProWstringCompar e()
•ProWstringConcatenate()
Widecharacterstringsarenotaseasytomanipulate inCasordinarycharacter
strings.Ingeneral,therearenofunctionsforwidestringsthatcorrespond tothe
standardCstr*()functions. printf()doesnothaveaformatforwidestrings,and
youcannotsetawidestringtoaliteralvalueinasimpleassignment. Becauseof
this,itisfrequently convenient toconvertwidestringstocharacterstrings,and
viceversa.Thisisthepurposeofthefunctions ProStringToWstring() and
ProWstringToString().
Thefunction ProWstringLengthGet() isusedtofindthelengthofa
widestring.
Thefunction ProWstringCopy() copiesawidestring intoanotherbuffer.You
shouldallocateenoughmemoryinthetargetsettingtoperformthecopy
operation. Thenumberofcharacters tobecopiedisprovidedasinputthrough
num_chars. UsePRO_VALUE_UNUSED tocopytheentirestring.
Thefunction ProWstringCompare() comparestwowidestrings forequality.
Thetwowidestrings tobecompared aregivenasinputs.Theargumentnum_charsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnum_chars. UsePRO_VALUE_UNUSED tocopytheentirestring.
Thefunction ProWstringCompare() comparestwowidestrings forequality.
Thetwowidestrings tobecompared aregivenasinputs.Theargumentnum_chars
allowscomparison ofportionsofthestring,passPRO_VALUE_UNUSED to
comparetheentirestrings.
Thefunction ProWstringConcatenate() concatenates twowidestrings.
Youshouldallocateenoughmemoryinthetargetstringforthecopyoperation.
Thenumberofcharacters toconcatenate isgivenasinputthroughnum_chars. Use
PRO_VALUE_UNSED toaddtheentiresourcestringtothetargetstring.
Thesourcecodeforotherusefulutilitiesislocatedinthefile<TK_
LOADPOINT>protk_appls\pt_examples\pt_utils\UtilString.c
Example4:StringConversion
ThesamplecodeinUgFundStringConv.c locatedat<creo_toolkit_
loadpoint>\protk_appls\pt_userguide\ptu_fundament usesthe
function UsrModelFilenameGet() toconvertwidestringstocharacter
strings.
Fundamentals 67SupportforIPv6
Creo6.0.0.0andlaterreleaseshavecompletesupportforInternetProtocolversionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction UsrModelFilenameGet() toconvertwidestringstocharacter
strings.
Fundamentals 67SupportforIPv6
Creo6.0.0.0andlaterreleaseshavecompletesupportforInternetProtocolversion
6(IPv6).BydefaultCreousesIPv6forIPaddressing overthenetwork.
Settheenvironment variable PTC_IPV6_MODE toyesforCreotousetheIPv6
protocolforaddressing. TouseIPv4communication protocol,settheenvironment
variabletono.
Ifyouwanttorunapplications createdinCreoParametric 5.0.0.0andprevious
releasesinCreoParametric 6.0.0.0withIPv6enabled,youmustrebuildthe
applications.
Iftheenvironment variableissettono,thatisforIPv4protocol,these
applications continuetoworkinCreoParametric 6.0.0.0withoutrebuilding.
AccessingLearningConnector
FunctionIntroduced:
•ProLearningconnectorNotify()
LearningConnector (LC)isafeatureinCreothatallowsuserstoaccesstheCreo
trainingdirectlyfromaCreoapplication. AneventtriggeredintheCreouser
interfacenotifiestheLearningConnector, whichdisplaystherelevanttraining
topicsforthecurrentactivity.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtrainingdirectlyfromaCreoapplication. AneventtriggeredintheCreouser
interfacenotifiestheLearningConnector, whichdisplaystherelevanttraining
topicsforthecurrentactivity.
Thefunction ProLearningconnectorNotify() notifiesthe
LearningConnector thataneventhasbeentriggeredfromaCreoParametric
TOOLKITapplication. Thefunctionalsoallowsuserstonotifycustom-made
trainingsotherthanthestandardtrainingprovidedbyPTCforthespecified
module.TheLearningConnector displaystherelevanttrainingtopicsforthe
specifiedinputarguments.YoumustreadtheLearningConnector documentation
beforeusingthisfunction.Theinputargumentsare:
•module—This isamandatory argument.SpecifiesthenameoftheCreo
modulethattriggerstheevent.
•module_info—This isanoptionalargument.Specifiesadditional information
abouttheCreomodulethattriggerstheevent.Thisadditional information is
usedbytheevent-handling functionofLearningConnector.
Youcanusethefunctiononcustomized CreoParametric TOOLKITwidgetsalso.
68 Creo®Parametric TOOLKIT User’sGuide2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusedbytheevent-handling functionofLearningConnector.
Youcanusethefunctiononcustomized CreoParametric TOOLKITwidgetsalso.
68 Creo®Parametric TOOLKIT User’sGuide2
Core:ModelsandModelItems
Modes......................................................................................................................70
Models.....................................................................................................................70
ModelItems..............................................................................................................80
VersionStamps.........................................................................................................82
Layers......................................................................................................................84
Notebook..................................................................................................................89xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNotebook..................................................................................................................89
VisitingDisplayedEntities..........................................................................................89
ThischapterdescribesCreoParametric TOOLKITmodes,models,andmodel
items.
69Modes
Functions Introduced:
•ProModeCurr entGet()
•ProSectionIsActive()
Theterm“mode”inCreoParametric referstothetypeofmodelcurrentlybeing
editedbytheuser.Thepossiblemodesaregivenbytheoptionslistedunderthe
commandFile▶▶New.
TheProMode objectinCreoParametric TOOLKITisanenumerated type,
declaredinthefileProMode.h, asaretheprototypes forthemodefunctions.
Findthenameofthemodeusingthefunction ProModeCurrentGet(). The
function ProModeCurrentGet() outputsthemodeinwhichCreoParametric
isbeingused,intheformoftheProMode enumerated type.Ifthereisnocurrent
model—for example,becausenomodelhasbeenretrieved,orbecausetheuser
hasselectedFile▶▶Close—thefunctionreturnsanerrorstatus(PRO_TK_BAD_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodel—for example,becausenomodelhasbeenretrieved,orbecausetheuser
hasselectedFile▶▶Close—thefunctionreturnsanerrorstatus(PRO_TK_BAD_
CONTEXT).
Thefunction ProSectionIsActive() checksifthesketcheriscurrently
activeevenifthecurrentmodeispartorassembly.
Models
ThissectiondescribesCreoParametric TOOLKITmodels.Thetopicsareas
follows:
•TheProMdlObjectonpage70
•CreatingModelsonpage71
•Identifying Modelsonpage72
•ModelsinSessiononpage77
•FileManagement Operations onpage78
TheProMdlObject
Amodelisatop-levelobjectinaCreoParametric mode.Forexample,inPart
mode,themodelisapart;inAssembly mode,themodelisanassembly.
Theobject ProMdlisthereforeusedforallthosefunctionswhoseactionapplies
tomodelsofanytype,suchasfilemanagement operations andversionstamps.
Thedeclaration ofProMdlisasfollows:
typedef void* ProMdl;
70 Creo®Parametric TOOLKIT User’sGuideInstancesoftheProMdlobjectareobjectsforthemorespecificCreoParametric
modes.Forexample, ProSolid isaninstanceofProMdl,andProAssemblyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypedef void* ProMdl;
70 Creo®Parametric TOOLKIT User’sGuideInstancesoftheProMdlobjectareobjectsforthemorespecificCreoParametric
modes.Forexample, ProSolid isaninstanceofProMdl,andProAssembly
andProPart areinstancesofProSolid. Alltheseobjecttypesarerepresented
inCreoParametric TOOLKITbyopaquehandles,andyoucanmakeconversions
betweenthetypesbycasting.
CreatingModels
Functions Introduced
•ProSolidMdlnameCr eate()
•ProMfgMdlCre ate()
•ProSection2DAlloc()
•ProDrawingFro mTmpltCre ate()
•ProDrawingFro mTemplateCr eate()
•ProMdlStartAction()
CreoParametric TOOLKITsupportscreationofmodelsforSolids,
Manufacturing, Section(two-dimensional only),andDrawing.
SeeCreatingaSolidonpage92foracompletedescription of
ProSolidMdlnameCreate().
Formoreinformation onProMfgMdlCreate() seeCreatingaManufacturing
Modelonpage1412.
Allocating aTwo-Dimensional Sectiononpage973givesmoredetailson
ProSection2DAlloc().
CreatingDrawingsfromTemplatesonpage1207hasmoreinformation onthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxModelonpage1412.
Allocating aTwo-Dimensional Sectiononpage973givesmoredetailson
ProSection2DAlloc().
CreatingDrawingsfromTemplatesonpage1207hasmoreinformation onthe
function ProDrawingFromTemplateCreate().
Note
Thefunction ProDrawingFromTmpltCreate() willbedeprecated ina
futurerelease.Usethefunction ProDrawingFromTemplateCreate()
instead.
Thenotification function ProMdlStartAction() isatypeforacallback
functionforPRO_MDL_START. Thisfunctionchangesthewayuserscancreate
modelsbyreplacingtheCreoParametric modeltemplatedialogboxwithauser-
specifiedaction.
Theuser-specified actioncontainsuser-programmed activitiesthatallow
customization ofnewmodelsbyapplyingtemplateswithmoreinputsthanmodel
creation“on-the-fly” orthestandardCreoParametric template.
Core:ModelsandModelItems 71ThecallbackfunctionisactivatedaftertheuserselectsOKfromtheFile▶▶New
dialogbox,butonlyiftheUseDefaultTemplatecheckboxisnotselected.The
user’sapplication mustcreateanewmodelofthesametypeandsubtypespecifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdialogbox,butonlyiftheUseDefaultTemplatecheckboxisnotselected.The
user’sapplication mustcreateanewmodelofthesametypeandsubtypespecified
bythecallbackfunction.
Settingtheconfiguration option force_new_file_options_dialog to
yesforcestheUseDefaultTemplatebuttontobehidden,andcallsthecallbackfor
allmodelscreatedthroughtheFile▶▶Newdialog.
Thisfunctionsupportsallmodeltypes.
SeeEvent-driven Programming: Notifications onpage1982formoredataon
usingcallbackfunctions.
IdentifyingModels
Functions Introduced:
•ProMdlMdlnameGet()
•ProMdlOriginGet()
•ProMdlExtensionGet()
•ProMdlDire ctoryPathGet()
•ProMdlT ypeGet()
•ProMdlDisplaynameGet()
•ProMdlCommonnameGet()
•ProMdlCommonnameSet()
•ProMdlObjectdefaultnameGet()
•ProMdlnameInit()
•ProMdlIdGet()
•ProMdlActiveGet()
•ProMdlSubtypeGet()
•ProMdlFiletypeGet()
•ProFileSubtypeGet()
•ProMdlT oModelitem()
Theobject ProMdlisanopaquehandle,andisthereforevolatile.Itcannotbe
usedtorefertomodelsthatarenotinmemoryinCreoParametric, forexample.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMdlFiletypeGet()
•ProFileSubtypeGet()
•ProMdlT oModelitem()
Theobject ProMdlisanopaquehandle,andisthereforevolatile.Itcannotbe
usedtorefertomodelsthatarenotinmemoryinCreoParametric, forexample.
Toreferenceamodelinawaythatisvalidformodelsnotinmemory,andalso
persistentacrosssessionsofCreoParametric, usethemodelnameandtype.
Thefunctions ProMdlMdlnameGet() andProMdlTypeGet() providethe
nameandtypeofamodel,givenitsProMdlhandle.Thetypeofamodelis
expressed intermsoftheenumerated typeProMdlType. FromCreoParametric
72 Creo®Parametric TOOLKIT User’sGuide3.0onward,thisenumerated datatypecontainsanadditional value PRO_MDL_
CE_SOLID thatrepresents aLayoutmodel.CreoParametric TOOLKITfunctions
willonlybeabletoreadmodelsoftypeLayout,butwillnotbeabletopass
Layoutmodelsasinputtootherfunctions. PTCrecommends thatyoureviewall
CreoParametric TOOLKITapplications thatusetheenumerated type
ProMdlType andmodifythecodeasappropriate toensurethattheapplications
workcorrectly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKITapplications thatusetheenumerated type
ProMdlType andmodifythecodeasappropriate toensurethattheapplications
workcorrectly.
Thefunction ProMdlOriginGet() retrievesthefullsourcepathofthemodel,
thatis,thepathfromwherethespecifiedmodelhasbeenopened.Itreturns NULL
ifthespecifiedmodelisnewinthesession,andhasnotbeensaved.Forinstances,
itreturnsthefullpathofthegenericmodel.
Thefunction ProMdlExtensionGet() retrievesthefileextensionforthe
specifiedmodel.
Thefunction ProMdlDirectoryPathGet() returnsthefilepathwherethe
specifiedmodelwouldbesaved.Itspecifiesthetargethomedirectoryforthe
model.
Thefunction ProMdlDisplaynameGet() returnsthenameofthemodel,
whichisdisplayedintheCreoParametric userinterface.Thenameisdisplayedin
thegraphicsarea,suchas,themodeltree,windowtitle,andsoon.Ifthemodelis
aninstanceofnativeCreomodel,thedisplaynameistheinstancename.For
configurations orinstancesofnon-native models,thedisplaynameconsistsofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaninstanceofnativeCreomodel,thedisplaynameistheinstancename.For
configurations orinstancesofnon-native models,thedisplaynameconsistsofthe
modelnamealongwiththeconfiguration nameorinstancename.Ifyouspecify
theinputargument include_ext asPRO_B_TRUE, thenthedisplaynamereturned
bythefunctionalsoincludesthefileextensionofthemodel.
Thefunctions ProMdlCommonnameGet() andProMdlCommonnameSet()
obtainandassignthecommonnameofamodel,respectively .Thisnameisusedto
identifythemodelinaProductDatabaseManagement systemsuchasWindchill
PDMLink.
Note
ProMdlCommonnameSet() canmodifythenameonlyformodelsthatare
notyetownedbyWindchillPDMLink, orincertainsituationsifthe
configuration option let_proe_rename_pdm_objects issettoyes.
Thefunction ProMdlObjectdefaultnameGet() returnsthenextavailable
defaultnameforagivenmodeltype.Thetypeofthemodelisspecifiedbythe
enumerated typeProType andhasoneofthefollowingvalues:
•PRO_PART
•PRO_ASSEMBLY
•PRO_CABLE
Core:ModelsandModelItems 73•PRO_DRAWING
•PRO_REPORT
•PRO_2DSECTIONxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxenumerated typeProType andhasoneofthefollowingvalues:
•PRO_PART
•PRO_ASSEMBLY
•PRO_CABLE
Core:ModelsandModelItems 73•PRO_DRAWING
•PRO_REPORT
•PRO_2DSECTION
•PRO_3DSECTION
•PRO_LAYOUT
•PRO_DWGFORM
•PRO_MARKUP
Note
Foreachoftheabovetypes, ProMdlObjectdefaultnameGet() returns
thenextavailabledefaultname,forexample PRT00#forPRO_PART or
DRW00#forPRO_DRAWING, where #specifiesthepartordrawingnumber.
Thisnumberdependsonthefollowingfactors:
•ModelspresentintheactiveCreoParametric session
•Filesinthecurrentworkingdirectory
•Connection toanactiveserverwiththeautonumber optionenabled
Thus,ifnoobjectwiththespecifiednameisactuallycreated,thenexttimethe
samenameisreturned;otherwisethenextavailablenameisreturned.
Thefunction ProMdlnameInit() doestheopposite,andprovidesavalid
ProMdlhandleforagivennameandtype.Thefunctionfailsifthespecified
modelisnotinmemoryintheCreoParametric session.
Athirdwaytoidentifyamodelisbyanintegeridentifier.UnliketheintegerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMdlhandleforagivennameandtype.Thefunctionfailsifthespecified
modelisnotinmemoryintheCreoParametric session.
Athirdwaytoidentifyamodelisbyanintegeridentifier.Unliketheinteger
identifiers ofobjectswithinamodel,suchassurfacesandedges,theidentifierofa
modelisnotpersistentbetweenCreoParametric sessions.Thefunction
ProMdlIdGet() providestheidentifierofamodel,givenitsProMdlhandle.
Thefunction ProMdlActiveGet() retrievesthemodelhandle ProMdlforan
activeCreoParametric object.
Thefunction ProMdlSubtypeGet() providesthesubtype(suchassheet
metal)ofaspecifiedmodel.ValidmodelsubtypesarePart,Assembly,or
Manufacturing. ThisislikefindingsubtypesattheCreoParametric File▶▶New▶▶
ModelTypemenu.
Thefunction ProMdlFiletypeGet() retrievesthefiletypeofthespecified
modelusingtheenumerated datatypeProMdlfileType.
74 Creo®Parametric TOOLKIT User’sGuideThefunction ProFileSubtypeGet() retrievesthefollowinginformation
whenyouspecifythepathtoafileastheinputargument. Theoutputarguments
are:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx74 Creo®Parametric TOOLKIT User’sGuideThefunction ProFileSubtypeGet() retrievesthefollowinginformation
whenyouspecifythepathtoafileastheinputargument. Theoutputarguments
are:
•file_type—Specifies thefiletypeusingtheenumerated datatype
ProMdlfileType. FornativeCreomodels,thefiletypeandmodeltypeare
thesame.
•type—Specifies themodeltypeusingtheenumerated datatype
ProMdlType.
•subtype—Specifies thesubtypeofthemodelusingtheenumerated datatype
ProMdlsubtype. Formodeltypesthatdonothavesubtypes,theargument
returns PROMDLSTYPE_NONE.
Thefunction ProMdlToModelitem() isusedonlywhenyouneedtorepresent
themodelasaProModelitem object—the firststepinbuildinga
ProSelection objectthatdescribestheroleofamodelinaparentassembly.
Modelitemobjectsaredescribedlaterinthischapter.Seethechapter
Fundamentals onpage22forinformation ontheProSelection object.
Example1:FindingtheHandletoaModel
Thefollowingexampleshowshowtofindamodelhandle,givenitsnameand
type.
ProName name;
ProType type;
ProMdl part;
ProError status;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExample1:FindingtheHandletoaModel
Thefollowingexampleshowshowtofindamodelhandle,givenitsnameand
type.
ProName name;
ProType type;
ProMdl part;
ProError status;
ProStringToWstring (name, "PRT0001");
type =PRO_PART;
status =ProMdlnameInit (name, type, &);
SurfacePropertiesofModels
Functions Introduced:
•ProMdlV isibleSideAppearancepro psGet()
•ProMdlV isibleSideAppearancepro psSet()
•ProMdlV isibleSideT extur epropsGet()
•ProMdlV isibleSideT extur epropsSet()
•ProMdlLockGet()
•ProMdlLockSet()
•ProMdlV isibleSideT extur eplacementpr opsGet()
•ProMdlV isibleSideT extur eplacementpr opsSet()
Core:ModelsandModelItems 75FromCreoParametric5.0.0.0 onwards,thefollowingfunctionshavebeen
deprecated:
•ProMdlVisibleAppearancepropsGet()
•ProMdlVisibleAppearancepropsSet()
•ProMdlVisibleTexturepropsGet()
•ProMdlVisibleTexturepropsSet()
•ProMdlVisibleTextureplacementpropsGet()
•ProMdlVisibleTextureplacementpropsSet()
Thefunctionsdescribedinthissectionenableyoutoretrieveandsetthesurfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMdlVisibleTexturepropsSet()
•ProMdlVisibleTextureplacementpropsGet()
•ProMdlVisibleTextureplacementpropsSet()
Thefunctionsdescribedinthissectionenableyoutoretrieveandsetthesurface
andtextureproperties ofmodels.Youcanretrieveandsettheseproperties forany
levelinthemodelhierarchy.Forassemblies, settheownerofProModelitem
asthetop-levelassembly.Theseproperties mayormaynotbevisibleintheuser
interfacedepending ontheproperties setbythehigherlevelassembly.
Usethefunction ProMdlVisibleSideAppearancepropsGet() to
retrievethesurfaceproperties foraspecifiedpart,assemblycomponent,
subassembly ,specifiedsideofaquiltorsurfaceusingthe
ProSurfaceAppearanceProps datastructure.RefertothesectionSurface
Properties onpage487,formoreinformation on
ProSurfaceAppearanceProps datastructure.Theinputargumentsare:
•item—Specifies aProAsmitem objectthatrepresents thepart,assembly
component, subassembly ,quilt,orsurface.
•surface_side—Specifies thedirectionofthesideforthesurfaceorquilt.Passxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•item—Specifies aProAsmitem objectthatrepresents thepart,assembly
component, subassembly ,quilt,orsurface.
•surface_side—Specifies thedirectionofthesideforthesurfaceorquilt.Pass
thevalueas0tospecifythesidewhichisalongthesurfacenormal.Pass1to
specifythesideoppositetosurfacenormal.
Usethefunction ProMdlVisibleSideAppearancepropsSet() tosetthe
surfaceproperties foraspecifiedelement.ToseethechangesintheCreo
Parametric userinterface,callthefunction ProWindowRepaint() after
ProMdlVisibleSideAppearancepropsSet(). Tosetthedefaultsurface
appearance properties, passthevalueoftheinputargument appearance_
properties asNULL.
Usethefunctions ProMdlVisibleSideTexturepropsGet() and
ProMdlVisibleSideTexturepropsSet() toapplytexturestothe
surface.ThesefunctionsusetheProSurfaceTextureProps datastructureto
retrieveandsetthetextureproperties ofthesurfaceforaspecifiedelement.Refer
tothesectionSurfaceProperties onpage487,formoreinformation on
ProSurfaceTextureProps datastructure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxretrieveandsetthetextureproperties ofthesurfaceforaspecifiedelement.Refer
tothesectionSurfaceProperties onpage487,formoreinformation on
ProSurfaceTextureProps datastructure.
Usethefunctions ProMdlVisibleSideTextureplacementpropsGet()
andProMdlVisibleSideTextureplacementpropsSet() toretrieve
andsettheproperties relatedtotheplacingofsurfacetextureforthespecified
element.ThesefunctionsusetheProSurfaceTexturePlacementProps
datastructuretodefinetheplacement properties.
76 Creo®Parametric TOOLKIT User’sGuideRefertothesectionSurfaceProperties onpage487,formoreinformation on
ProSurfaceTexturePlacementProps datastructure.
Thefunctions ProMdlLockGet() andProMdlLockSet() getandsetthe
lock/unlock stateofthemodel.Thefunction ProMdlLockGet() returns PRO_
B_TRUEifthemodelislockedandPRO_B_FALSE ifitisunlocked.
Theinputargumentstothefunction ProMdlLockSet() follow:
•model—The modeltobelockedorunlocked.
•lock—Pass thevalueasPRO_B_TRUE tolockthemodelandPRO_B_FALSE
tounlockit.
ModelsinSessionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheinputargumentstothefunction ProMdlLockSet() follow:
•model—The modeltobelockedorunlocked.
•lock—Pass thevalueasPRO_B_TRUE tolockthemodelandPRO_B_FALSE
tounlockit.
ModelsinSession
Functions Introduced:
•ProSessionMdlList()
•ProMdlCurr entGet()
•ProMdlDependenciesDataList()
•ProMdlDependenciesCleanup()
•ProMdlDeclar edDataList()
•ProMdlModificationV erify()
•ProMdlIsModifiable()
Thefunction ProSessionMdlList() providesanarrayofProMdlhandles
tomodelsofaspecifiedtypecurrentlyinmemory.
Thefunction ProMdlCurrentGet() providestheProMdlhandletothe
modelcurrentlybeingeditedbytheuser.
Thefunction ProMdlDependenciesDataList() providesanarrayof
ProMdlhandlestothemodelsinmemoryuponwhichaspecifiedmodel
depends.Onemodeldependsonanotherifitscontentsreferencethatmodelin
someway.Forexample,anassemblydependsonthemodelsthatformits
components, andadrawingmodeldependsonthesolidmodelscontainedinit.
Sometimes, twomodelscanbemutuallydependent, suchaswhenamodelfeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsomeway.Forexample,anassemblydependsonthemodelsthatformits
components, andadrawingmodeldependsonthesolidmodelscontainedinit.
Sometimes, twomodelscanbemutuallydependent, suchaswhenamodelfeature
references ageometryiteminaparentassembly.Cleanthedependencies inthe
databaseusingthefunction ProMdlDependenciesCleanup() togetan
accuratelistofdependencies foranobjectintheCreoParametric workspace.
Core:ModelsandModelItems 77Usethefunction ProMdlDependenciesCleanup() tocleanthe
dependencies foranobjectintheCreoParametric workspace.
Note
Donotcallthefunction ProMdlDependenciesCleanup() during
operations thatalterthedependencies, suchas,restructuring components and
creatingorredefining features.
Thefunction ProMdlDeclaredDataList() providesanarrayofProMdl
handlestofirst-levelnotebookmodelsthathavebeendeclaredtoaspecifiedsolid
model.
Thefunction ProMdlModificationVerify() tellsyouwhetheraspecified
modelinmemoryhasbeenmodifiedsinceitwaslastsavedorretrieved.Seethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodel.
Thefunction ProMdlModificationVerify() tellsyouwhetheraspecified
modelinmemoryhasbeenmodifiedsinceitwaslastsavedorretrieved.Seethe
sectionVersionStampsonpage82foramoreflexiblewayofkeepingtrackof
changestoamodel.
Thefunction ProMdlIsModifiable() checksifthespecifiedmodelis
modifiable.
FileManagement Operations
Functions Introduced:
•ProMdlnameCopy()
•ProMdlfileMdlnameCopy()
•ProMdlnameRetrieve()
•ProMdlMultipleRetrieve()
•ProSolidRetrievalErro rsGet()
•ProMdlSave()
•ProMdlIsSaveAllowed()
•ProMdlErase()
•ProMdlEraseNotDisplayed()
•ProMdlEraseAll()
•ProMdlnameRename()
•ProMdlnameBackup()
•ProMdlDelete()
•ProMdlLocationIsStandard()
78 Creo®Parametric TOOLKIT User’sGuideThesefunctionsperformthesameactionsasthecorresponding CreoParametric
filemanagement commands, withthefollowingexceptions:
•ProMdlnameCopy() andProMdlfileMdlnameCopy() areequivalent
totheSaveAscommand intheFilepull-down menuoftheCreoParametric
menubar.ProMdlnameCopy() takesthemodelhandleasinput,whereasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMdlnameCopy() andProMdlfileMdlnameCopy() areequivalent
totheSaveAscommand intheFilepull-down menuoftheCreoParametric
menubar.ProMdlnameCopy() takesthemodelhandleasinput,whereas
ProMdlfileMdlnameCopy() takesthetypeandnameofthemodelto
copy.
•ProMdlnameRetrieve() retrievesthemodelintomemory,butdoesnot
displayitormakeitthecurrentmodel.
•ProMdlMultipleRetrieve() retrievesmultiplemodelsintomemory.
Usetheui_flagparameter tosetmodeldisplaytoonoroff.
•ProSolidRetrievalErrorsGet() returnsthedatastructurecontaining
errorsthatoccurduringmodelretrieval.Whileretrievingacomplexassembly,
CreoParametric sometimes encounters errorsinretrievingparticular
components andassembling themappropriately intheassembly.Intheuser
interface,youareinformedoferrorsastheyoccur,throughadialogbox.In
CreoParametric TOOLKIT,theretrievalfunctionsautomatically suppressor
freezeproblemcomponents andreturn PRO_TK_NO_ERROR. Toknow
whethererrorshaveoccurredduringretrieval,usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKIT,theretrievalfunctionsautomatically suppressor
freezeproblemcomponents andreturn PRO_TK_NO_ERROR. Toknow
whethererrorshaveoccurredduringretrieval,usethefunction
ProSolidRetrievalErrorsGet(). Theerrorsarereturnedasthe
elementsoftheProSolidretrievalerrs array.Theretrievalerror
information mustbeobtainedimmediately afteracalltothe
ProMdlnameRetrieve() orequivalent retrievalfunction.
•ProMdlSave() savesthespecifiedmodeltodisk.Fordrawings,sketches
andother2Dmodeltypes,tosavethegraphicsdata,youmustdisplayit.Call
thefunction ProMdlDisplay() before ProMdlSave(), sothatthe
graphicsdataissavedalongwiththegeometryforthemodel.
•ProMdlIsSaveAllowed() checkswhetheragivenmodelcanbesaved.
•ProMdlEraseNotDisplayed() erasesallthemodelsthatarenot
referenced inawindowfromthecurrentsession.
•ProMdlErase() erasesthespecifiedmodelfrommemory.
•ProMdlEraseAll() erasesamodelandallthemodelsthatituses,except
thosethathavecyclicdependencies (thatis,modelsusedbyothermodelsinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMdlErase() erasesthespecifiedmodelfrommemory.
•ProMdlEraseAll() erasesamodelandallthemodelsthatituses,except
thosethathavecyclicdependencies (thatis,modelsusedbyothermodelsin
thesession).Forexample, ProMdlEraseAll() recursively erasesall
subassemblies ofanassemblyandallsolidsreferenced fromadrawing.This
functionalsoworksincaseswheresomemodelstobeerasedhavemutual
dependencies, butonlyiftheerasedmodelsarenotusedbyothermodels.
However,whileerasinganactivemodel, ProMdlErase() and
ProMdlEraseAll() onlyclearthegraphicdisplayimmediately ,theydo
Core:ModelsandModelItems 79notclearthedatainthememoryuntilthecontrolreturnstoCreoParametric
fromtheCreoParametric TOOLKITapplication. Therefore, aftercallingthem
thecontrolmustbereturnedtoCreoParametric beforecallinganyother
function,otherwisethebehaviorofCreoParametric maybeunpredictable.
Thefunction ProMdlLocationIsStandard() checksifthespecifiedmodel
wasopenedfromastandardlocation.Astandardfilelocationcanbethelocaldiskxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction,otherwisethebehaviorofCreoParametric maybeunpredictable.
Thefunction ProMdlLocationIsStandard() checksifthespecifiedmodel
wasopenedfromastandardlocation.Astandardfilelocationcanbethelocaldisk
oramappeddriveonaremotecomputer.TheUniversalNamingConvention
(UNC)pathfornetworkdrivesisalsoconsidered asastandardpathifthevalue
forDisableUNCCheck issettoTrueforthekeyHKEY_CURRENT_USER\
Software\Microsoft\Command Processor, intheregistryfile.The
functionreturns:
•PRO_B_TRUE whenthefileisloadedfromastandardfilelocation.
•PRO_B_FALSE whenthefileisloadedfromanonstandard filelocation,such
as,http,ftp,DesignExploration mode,andsoon.
ModelItems
A“modelitem”isagenericobjectusedtorepresentanyitemcontainedinany
typeofmodel,forthepurposeoffunctionswhoseactionsareapplicable toall
thesetypesofitem.(Someitems,suchas“versionstamp,”retaintheirownobject
types.)
TheobjecttypeProModelitem isaDHandle(datahandle),astructurethat
containstheitemtype,thepersistentintegeridentifieroftheitem,andthehandlexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypes.)
TheobjecttypeProModelitem isaDHandle(datahandle),astructurethat
containstheitemtype,thepersistentintegeridentifieroftheitem,andthehandle
totheowningobject.
Theobject ProGeomitem, agenericgeometrical objectdescribedlaterinthis
guide,isaninstanceofProModelitem, andisaDHandlethatsharesthesame
typedeclaration. Therefore, thefunctionsinthissectionarealsodirectly
applicable toProGeomitem objects.
ThetypedeffortheProModelitem datahandleisasfollows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProModelitem
Functions Introduced:
•ProModelitemByNameInit()
•ProModelitemInit()
•ProModelitemMdlGet()
•ProModelitemDefaultnameGet()
•ProModelitemNameGet()
80 Creo®Parametric TOOLKIT User’sGuide•ProModelitemNameSet()
•ProModelitemNameCanChange()
•ProModelitemUsernameDelete()
•ProModelitemHide()
•ProModelitemUnhide()
•ProModelitemIsHidden()
Thefunction ProModelitemByNameInit() returnsapointertoanitem
(structure), giventhenameandthetypeoftheitem.Thevaliditemtypesare:
•Edgexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProModelitemHide()
•ProModelitemUnhide()
•ProModelitemIsHidden()
Thefunction ProModelitemByNameInit() returnsapointertoanitem
(structure), giventhenameandthetypeoftheitem.Thevaliditemtypesare:
•Edge
•Surface
•Feature
•Co-ordinate System
•Axis
•Point
•Quilt
•Curve
•Layer
•Note
Thefunction ProModelitemInit() isusedtogenerateaProModelitem
objectfromtheinformation containedinthestructure.Youcancreatesucha
structuredirectly,butusingthisfunctionyoucanalsoconfirmtheexistenceofthe
iteminthemodeldatabase.
Thefunction ProModelitemMdlGet() extractstheProMdlhandlefromthe
structure.
Thefunction ProModelitemDefaultnameGet() getsthedefaultnamefora
newmodelitemofaparticulartypeifitwascreatedtakingthemodelhandleas
input.
Thetwofunctions ProModelitemNameGet() and
ProModelitemNameSet() readandsetthenameoftheCreoParametric
databaseobjectreferredtobythemodelitem.Thesefunctionsaretherefore
applicable toalltheinstancesofProModelitem, suchasProGeomitem andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProModelitemNameSet() readandsetthenameoftheCreoParametric
databaseobjectreferredtobythemodelitem.Thesefunctionsaretherefore
applicable toalltheinstancesofProModelitem, suchasProGeomitem and
allitsinstances,including ProSurface, ProEdge, ProCsys, andProAxis.
Core:ModelsandModelItems 81Note
InadditiontonotesofthetypePRO_NOTE, thefunctions
ProModelitemNameGet() andProModelitemNameSet() canbe
usedtoreadandsetthenameofthefollowingannotation types:
•Drivingordrivendimension ofthetypePRO_DIMENSION
•Reference dimension ofthetypePRO_REF_DIMENSION
•SymbolinstanceofthetypePRO_SYMBOL_INSTANCE
•SurfacefinishofthetypePRO_SURF_FIN
•Geometric toleranceofthetypePRO_GTOL
•SetdatumtagofthetypePRO_SET_DATUM_TAG (applicable onlyfor
ProModelitemNameGet())
Thefunction ProModelitemNameCanChange() identifieswhetherthename
ofthemodelitemcanbemodifiedbytheuserorbyCreoParametric TOOLKIT.
Thefunction ProModelitemUsernameDelete() deletestheuser-defined
nameofthemodelitemfromtheCreoParametric database.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthemodelitemcanbemodifiedbytheuserorbyCreoParametric TOOLKIT.
Thefunction ProModelitemUsernameDelete() deletestheuser-defined
nameofthemodelitemfromtheCreoParametric database.
Thefunctions ProModelitemHide() andProModelitemUnhide() are
equivalent totheView▶▶HideandView▶▶Unhidecommands intheCreoParametric
menu,respectively .ProModelitemHide() hidesthespecifiedmodelitem,
whereas ProModelitemUnhide() unhidesthemodelitem.
Thefunction ProModelitemIsHidden() identifiesifthespecifiedmodel
itemishidden.
Example2:RenamingaSelectedSurface
ThesamplecodeinUgGeomSurfRename.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_geometry shows
howtousethefunctions ProModelitemNameGet() and
ProModelitemNameSet(). SeetheCore:3DGeometry onpage168chapter
foranexplanation ofProSurface anditsfunctions.
VersionStamps
TheversionstampobjectprovidesawayofkeepingtrackofchangesinaCreo
Parametric modeltowhichyourCreoParametric TOOLKITapplication mayneedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforanexplanation ofProSurface anditsfunctions.
VersionStamps
TheversionstampobjectprovidesawayofkeepingtrackofchangesinaCreo
Parametric modeltowhichyourCreoParametric TOOLKITapplication mayneed
torespond.CreoParametric modelsandfeaturescontainaninternalversionstamp
82 Creo®Parametric TOOLKIT User’sGuideincremented eachtimesomedesignchangeismadetothatmodelorfeature.The
functionsinthissectionenableyoutoreadversionstampsinordertolookfor
designchanges.
Theversionstampobjectiscalled ProWVerstamp becauseitisaWHandle, or
workspace handle.Itisaworkspace handlebecausethedatastructureitreferences
isnottheoneintheCreoParametric database,butacopytakenfromit,whichis
privatetotheCreoParametric TOOLKITapplication.
Functions Introduced:
•ProMdlV erstampGet()
•ProFeatur eVerstampGet()
•ProVerstampAlloc()
•ProVerstampFr ee()
•ProVerstampStringGet()
•ProVerstampStringFre e()
•ProStringV erstampGet()
•ProVerstampEqual()
Thefunctions ProMdlVerstampGet() andProFeatureVerstampGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProVerstampAlloc()
•ProVerstampFr ee()
•ProVerstampStringGet()
•ProVerstampStringFre e()
•ProStringV erstampGet()
•ProVerstampEqual()
Thefunctions ProMdlVerstampGet() andProFeatureVerstampGet()
enableyoutomakeaworkspace copyoftheversionstamponaparticularmodel
orfeature.Thefunction ProMdlVerstampGet() iscurrentlyapplicable to
solidsonly(partsorassemblies). Bothofthesefunctionsallocatethespaceforthe
workspace objectinternally.Afterusingthecontentsoftheversionstampobject,
youcanfreetheworkspace memoryusing ProVerstampFree().
Ifyouwanttostoreacopyofaversionstamptocomparetoanewlyreadversion
later,youshouldusethenonvolatile representation, whichisaCstring.The
function ProVerstampStringGet() allocatesandfillsastringthat
represents thecontentsofthespecified ProWVerstamp object.The
ProStringVerstampGet() functionperformsthereversetranslation: it
allocatesanewProWVerstamp objectandfillsitbycopyingthespecifiedC
string.
Thefunction ProVerstampEqual() comparestwoProWVerstamp objectsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProStringVerstampGet() functionperformsthereversetranslation: it
allocatesanewProWVerstamp objectandfillsitbycopyingthespecifiedC
string.
Thefunction ProVerstampEqual() comparestwoProWVerstamp objects
totellyouwhethertheversionstampstheyrepresentareequal.
Note
Theversionstamponafeaturecanchangenotonlywhenthefeature
definitionchanges,butalsowhenthefeaturegeometrychangesasaresultofa
changetoaparentfeature.
Core:ModelsandModelItems 83Layers
CreoParametric TOOLKITimplements twodatatypesthatenableaccesstolayer
information inCreoParametric:
•ProLayer—A DHandlethatidentifiesalayer.TheProLayer objectisan
instanceofProModelitem.
•ProLayerItem—A DHandlethatidentifiesalayeritem.Thevalidtypesof
layeritemarecontainedintheenumerated typeProLayerType.
Functions Introduced:
•ProMdlLayerGet()
•ProMdlLayerV isit()
•ProMdlLayersCollect()
•ProLayerCr eate()
•ProLayerDelete()
•ProLayerItemsGet()
•ProLayerItemsPopulate()
•ProLayeritemarrayFr ee()
•ProLayerItemInit()
•ProDwgLayerItemInit()
•ProLayerItemAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMdlLayersCollect()
•ProLayerCr eate()
•ProLayerDelete()
•ProLayerItemsGet()
•ProLayerItemsPopulate()
•ProLayeritemarrayFr ee()
•ProLayerItemInit()
•ProDwgLayerItemInit()
•ProLayerItemAdd()
•ProLayerItemAddNoUpdate()
•ProLayerItemRemove()
•ProLayerItemRemoveNoUpdate()
•ProLayeritemLayersGet()
•ProLayerDisplaystatusGet()
•ProLayerDisplaystatusSet()
•ProLayerDisplaystatusNoUpdateSet()
•ProLayerDisplaystatusUpdate()
•ProDwgLayerDisplaystatusGet()
•ProDwgLayerDisplaystatusSet()
•ProLayerDisplaystatusSave()
•ProLayerDefLayerSet()
•ProLayerDefLayerGet()
•ProLayerV iewDependencySet()
84 Creo®Parametric TOOLKIT User’sGuide•ProLayerV iewDependencyGet()
•ProLayerRuleExecute()
•ProLayerRuleCopy()
•ProLayerRuleMatch()
•ProLayeritemLayerStatusGet()
TogettheProLayer objectforalayerwiththespecifiednameandowner,call
thefunction ProMdlLayerGet(). Youmustpassthenameofthelayerasa
widestring.
Tovisitthelayersinamodel,usethefunction ProMdlLayerVisit(). Asxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefunction ProMdlLayerGet(). Youmustpassthenameofthelayerasa
widestring.
Tovisitthelayersinamodel,usethefunction ProMdlLayerVisit(). As
withotherCreoParametric TOOLKITvisitfunctions, yousupplythevisitaction
andvisitfilterfunctions.
Thefunction ProMdlLayersCollect() collectsaProArray oflayersin
themodel.
Thefunction ProLayerCreate() createsanewlayerwithaspecifiedname.It
requiresasinputtheProMdlhandleforthemodelthatwillownthelayer.The
function ProLayerDelete() deletesthelayeridentifiedbythespecified
ProLayer object.
Thefunction ProLayerItemsGet() allocatesandfillsanarrayof
ProLayerItem objectsthatcontainstheitemsassignedtothespecifiedlayer.
Note
Thefunction ProLayerItemsGet() isdeprecated. Foralargenumberof
layeritems,thefunction ProLayerItemsGet() mayreturnanerrorPRO_
TK_OUT_OF_MEMORY toindicatethatthefunctionwasunabletoallocatea
ProArray toholdallofthelayeritems.Toaddressthisissue,usethenew
function ProLayerItemsPopulate().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTK_OUT_OF_MEMORY toindicatethatthefunctionwasunabletoallocatea
ProArray toholdallofthelayeritems.Toaddressthisissue,usethenew
function ProLayerItemsPopulate().
Thefunction ProLayerItemsPopulate() allocatesandfillsanarrayof
ProLayerItem objectsthatcontainthetypeandidentifieroftheitemsassigned
tothespecifiedlayer.Thisfunctioncanretrievealargenumberofitemsspecified
onthelayer.Usethefunction ProLayeritemarrayFree() tofreethe
allocatedmemory.
ToinitializeaProLayerItem, callthefunction ProLayerItemInit().
Thisfunctionshouldbeusedinallcases,exceptwhenallofthefollowingare
true:
•Thelayerownerisadrawing.
•Thelayeritemownerisanassembly.
•Thelayeritemisacomponent.
Core:ModelsandModelItems 85•Youwanttocontrolthedisplaystatusofthiscomponent onlyina
subassembly withagivenpath.
Whenalloftheaboveconditions aretrue,usethefunction
ProDwgLayerItemInit() toinitializetheProLayerItem.
Toadditemstoalayer,callthefunction ProLayerItemAdd(), andpassas
inputaProLayer objectandtheProLayeritem objectforthenewlayerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDwgLayerItemInit() toinitializetheProLayerItem.
Toadditemstoalayer,callthefunction ProLayerItemAdd(), andpassas
inputaProLayer objectandtheProLayeritem objectforthenewlayer
item.Toremoveanitemfromalayer,usethefunction
ProLayerItemRemove() andspecifytheProLayeritem objectforthe
itemtoremove.
Thefunction ProLayerItemAddNoUpdate() addsthespecifieditemtoa
layerwithoutupdatingthemodeltree.
Thefunction ProLayerItemRemoveNoUpdate() removesthespecified
itemfromthelayerwithoutupdatingthemodeltree.
Tofindallthelayerscontaining agivenlayeritem,usethefunction
ProLayeritemLayersGet(). Thisfunctionsupportslayersinsolidmodels
andindrawings.
Asinaninteractive sessionofCreoParametric, oneoftheprincipalreasonsto
createalayeristodisplayorblankitsmemberitemsselectively .Thefunction
ProLayerDisplaystatusGet() obtainsthedisplaystatusofthespecified
layer,intheformoftheProLayerDisplay enumerated type.Thedisplay
statuscanbeoffollowingtypes:
•PRO_LAYER_TYPE_NONE—The selectedlayerisdisplayed. Thisisthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlayer,intheformoftheProLayerDisplay enumerated type.Thedisplay
statuscanbeoffollowingtypes:
•PRO_LAYER_TYPE_NONE—The selectedlayerisdisplayed. Thisisthe
defaultdisplaystatus.
•PRO_LAYER_TYPE_NORMAL—The layerselectedbytheuserisdisplayed.
•PRO_LAYER_TYPE_DISPLAY—The selectedlayerisisolated.
•PRO_LAYER_TYPE_BLANK—The selectedlayerisblanked.
•PRO_LAYER_TYPE_HIDDEN—The components inthehiddenlayersare
blanked.Thisstatusisapplicable onlyintheassemblymode.
Tomodifythedisplaystatusofalayer,callthefunction
ProLayerDisplaystatusSet().
86 Creo®Parametric TOOLKIT User’sGuideNote
ProLayerDisplaystatusSet() doesnotrepaintthemodelafterit
modifiesthedisplaystatus.Thisisatemporary setting.Itwillbelostafteryou
saveorretrievethemodel.Topermanently changethedisplaystatus,callthe
function ProLayerDisplaystatusSave(). However,thefunction
ProLayerDisplaystatusSet() updatesthemodeltreeforthechange
indisplaystatusofthelayer.
Thefunction ProLayerDisplaystatusNoUpdateSet() setsthedisplayxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProLayerDisplaystatusSet() updatesthemodeltreeforthechange
indisplaystatusofthelayer.
Thefunction ProLayerDisplaystatusNoUpdateSet() setsthedisplay
statusofalayer,withoutupdatingthemodeltree.Itreturnsabooleanvalue PRO_
B_TRUEfortheoutputargument is_update_tr ee_needed, ifthemodeltree
requiresanupdateforchangeinthedisplaystatusofalayer.Usethefunction
ProLayerDisplaystatusUpdate() toupdatethemodeltreeforallthe
changesinthedisplaystatusesofallthelayersinthespecifiedmodel.
Uniquefunctionsarerequiredtoretrieveandsetthestatusoflayersindrawings.
ProDwgLayerDisplaystatusGet() takesasinputthelayerhandleand
drawingview.Thefunction ProDwgLayerDisplaystatusSet() takesan
additional argumentasinput—the desireddisplaystatus.
Thefunction ProLayerDisplaystatusSave() savesthechangestothe
displaystatusofallthelayersinthespecifiedowner.Inaddition,thedisplay
statusesaresavedintheowner'ssubmodels anddrawingviews.
Tosetupadefaultlayerwithaspecifiedname,callthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplaystatusofallthelayersinthespecifiedowner.Inaddition,thedisplay
statusesaresavedintheowner'ssubmodels anddrawingviews.
Tosetupadefaultlayerwithaspecifiedname,callthefunction
ProLayerDefLayerSet(). Thisfunctionrequiresthedefaultlayertype,
whichisdefinedintheenumerated typeProDefLayerType. Togetthename
ofthedefaultlayerwiththespecifiedtype,callthefunction
ProLayerDefLayerGet().
Thefunction ProLayerViewDependencySet() setsthedisplayoflayersof
thespecifiedviewtodependonthedisplayoflayersinthedrawing.Thesyntaxof
thisfunctionisasfollows:
ProLayerViewDependencySet (
ProView view,
ProBoolean depend);
IfdependissettoPRO_B_TRUE, thelayersintheviewwillbedisplayedwhen
thelayersinthedrawingaredisplayed. IfdependissettoPRO_B_FALSE, the
layerdisplayintheviewwillbeindependent ofthedisplayinthedrawing.To
determine whetherthelayerdisplayintheviewisdependent onthedisplayinthe
drawing,callthefunction ProLayerViewDependencyGet().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlayerdisplayintheviewwillbeindependent ofthedisplayinthedrawing.To
determine whetherthelayerdisplayintheviewisdependent onthedisplayinthe
drawing,callthefunction ProLayerViewDependencyGet().
Core:ModelsandModelItems 87Youcandefinerulesinlayers.Usethefunction ProLayerRuleExecute() to
executethelayerrulesonthespecifiedmodel.Therulesmustbeenabledinthe
layerstobeexecuted.
Thefunction ProLayerRuleCopy() copiestherulesfromthereferencemodel
tothecurrentmodelforthespecifiedlayer.Theinputargumentsare:
•CurrentModel—Specifies thecurrentmodeltowhichthelayerrulesmust
becopied.
•LayerName—Specifies thenameofanexistinglayerinboththemodels.To
copythelayerrules,thenameofthelayerLayerName inboththemodels
mustbethesame.
•ReferenceModel—Specifies thereferencemodelfromwhichthelayer
rulesmustbecopied.
Usethefunction ProLayerRuleMatch() tocomparetherulesbetweenthe
currentandreferencemodelforthespecifiedlayer.Thenameofthelayer
LayerName inboththemodelsmustbethesame,forcomparing thelayerrules.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProLayerRuleMatch() tocomparetherulesbetweenthe
currentandreferencemodelforthespecifiedlayer.Thenameofthelayer
LayerName inboththemodelsmustbethesame,forcomparing thelayerrules.
Thefunction ProLayeritemLayerStatusGet() returnsthestatusofan
itemforthespecifiedlayer.Theinputarguments are:
•pro_drawing—Specifies thedrawingwhichistheownerofthelayerthat
containsthespecifieditem.
•pro_layer_item—Specifies thelayeritem.Iftheownertypeofthelayeritem
isPRO_LAYITEM_FROM_PATH, itismandatory tospecifythepro_drawing
inputargument.
•pro_layer—Specifies thelayerthatcontainstheitem.
Theoutputargumentreturnsthestatusoftheitemusingtheenumerated datatype
ProLayerItemStatus. Thevalidvaluesare:
•PRO_LAY_ITEM_STATUS_INCLUDE—Specifies thatthestatusofthelayer
itemisInclude.Theitemisincludedinthespecifiedlayer.
•PRO_LAY_ITEM_STATUS_EXCLUDE—Specifies thatthestatusofthelayer
itemisExclude.Theitemisexcludedinthespecifiedlayer.
•PRO_LAY_ITEM_STATUS_ADDED_BY_RULE—Specifies thatthestatusofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_LAY_ITEM_STATUS_EXCLUDE—Specifies thatthestatusofthelayer
itemisExclude.Theitemisexcludedinthespecifiedlayer.
•PRO_LAY_ITEM_STATUS_ADDED_BY_RULE—Specifies thatthestatusof
thelayeritemisdefinedbyrules.
Theenumerated datatypeProLayerItemStatus musthaveoneofthe
followingvalues:
•PRO_LAY_ITEM_STATUS_INCLUDE
•PRO_LAY_ITEM_STATUS_EXCLUDE
•PRO_LAY_ITEM_STATUS_INCLUDE andPRO_LAY_ITEM_STATUS_
ADDED_BY_RULE
•PRO_LAY_ITEM_STATUS_EXCLUDE andPRO_LAY_ITEM_STATUS_
ADDED_BY_RULE
88 Creo®Parametric TOOLKIT User’sGuideExample3:CreatingaLayer
ThesamplecodeinUgModelLayerCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_model showshowto
createalayerandadditemstoit.
Thisexamplestreamlines thelayercreationprocess(compared tointeractive Creo
Parametric) becausetheapplication createsthelayerandaddsitemstoitinonly
onestep.Notethatthisexampledoesnotallowuserstoaddasubassembly tothe
newlayer.
Notebook
Thefunctionsdescribedinthissectionworkwithnotebook(.lay)files.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonestep.Notethatthisexampledoesnotallowuserstoaddasubassembly tothe
newlayer.
Notebook
Thefunctionsdescribedinthissectionworkwithnotebook(.lay)files.
Functions Introduced:
•ProLayoutDeclar e()
•ProLayoutUndeclar e()
•ProLayoutRegenerate()
Thefunction ProLayoutDeclare() declaresanotebooknametothe
specifiedCreoParametric modelornotebook. Youcanresolveconflictsusingthe
enumerated typeProDeclareOptions. Ithasthefollowingvalues:
•PRO_DECLARE_INTERACTIVE—Resolves theconflictininteractive mode.
•PRO_DECLARE_OBJECT_SYMBOLS—Keep thesymbolsinthespecified
CreoParametric modelornotebookobject.
•PRO_DECLARE_LAYOUT_SYMBOLS—Keep thesymbolsspecifiedinthe
notebook.
•PRO_DECLARE_ABORT—Abort thenotebookdeclaration processandreturn
anerror.
Usethefunction ProLayoutUndeclare() toundeclarethenotebooknameto
thespecifiedCreoParametric modelornotebook. Youcanresolveconflictsusing
theenumerated typeProUndeclareOptions. Ithasthefollowingvalues:
•PRO_UNDECLARE_FORCE—Continues toundeclarethenotebookevenifxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedCreoParametric modelornotebook. Youcanresolveconflictsusing
theenumerated typeProUndeclareOptions. Ithasthefollowingvalues:
•PRO_UNDECLARE_FORCE—Continues toundeclarethenotebookevenif
references exist.
•PRO_UNDECLARE_CANCEL—Does notundeclarethenotebookifreferences
exist.
Themethod ProLayoutRegenerate() regenerates thespecifiednotebook.
VisitingDisplayedEntities
Functions Introduced:
Core:ModelsandModelItems 89•ProSolidDispCompV isit()
•ProAsmcomppathDispPointV isit()
•ProAsmcomppathDispCurveV isit()
•ProAsmcomppathDispCsysV isit()
•ProAsmcomppathDispQuiltV isit()
Thefunctionsinthissectionenableyoutofindquicklyalltheentities(points,
datumcurves,coordinate systems,andquilts)currentlydisplayedinanassembly.
ItispossibletodothisusingtheregularCreoParametric TOOLKITfunctionsfor
visitingassemblycomponents andentities,togetherwiththeProLayer
functionsexplainedearlierinthischapter;butthefunctionsdescribedhereare
muchmoreefficientbecausetheymakeuseofCreoParametric's internalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvisitingassemblycomponents andentities,togetherwiththeProLayer
functionsexplainedearlierinthischapter;butthefunctionsdescribedhereare
muchmoreefficientbecausetheymakeuseofCreoParametric's internal
knowledge ofthedisplaystructures.
Thefunction ProSolidDispCompVisit() traversesthecomponents atall
levelsinanassemblywhicharenotblankedbyalayer.Thevisitactionfunctionis
calledonboththedownward traversalandtheupwardone,andisgivenaboolean
inputtodistinguish them.Itisalsogiventheassemblypathandthesolidhandleto
thecurrentsubassembly .Thesubassembly couldbefoundfromthepathusing
ProAsmcomppathMdlGet(), ofcourse,butCreoParametric passesthistothe
actionfunctiontoallowgreaterefficiency.
Thefunctions ProAsmcomppathDisp*Visit() visittheentitiesina
subassembly thatarenotblankedbyalayeratanylevelintherootassembly.
90 Creo®Parametric TOOLKIT User’sGuide3
Core:Solids,Parts,andMaterials
SolidObjects.............................................................................................................92xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx90 Creo®Parametric TOOLKIT User’sGuide3
Core:Solids,Parts,andMaterials
SolidObjects.............................................................................................................92
PartObjects............................................................................................................116
MaterialObjects......................................................................................................117
Thischapterdescribeshowtoaccesssolids,parts,andtheircontents.
91SolidObjects
TheCreoParametric term“solid”denotesapartoranassembly.Theobjectis
called ProSolid andisdeclaredasanopaquehandle.Itisaninstanceof
ProMdlandcanbecasttothattypetousefunctionsthathavetheprefix
“ProMdl”.
CreatingaSolid
FunctionIntroduced:
•ProSolidMdlnameCr eate()
Thefunction ProSolidMdlnameCreate() createsanemptypartorassembly
withthespecifiedname,andprovidesahandletothenewobject.Itdoesnotmake
thenewsolidcurrent,nordoesitdisplaythesolid.InCreoParametric 7.0.0.0andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwiththespecifiedname,andprovidesahandletothenewobject.Itdoesnotmake
thenewsolidcurrent,nordoesitdisplaythesolid.InCreoParametric 7.0.0.0and
later,anemptypartiscreatedwithabsoluteaccuracy,bydefault.RefertotheCreo
Parametric helpformoreinformation onModelAccuracy.
ContentsofaSolid
Functions Introduced:
•ProSolidFeatV isit()
•ProSolidQuiltV isit()
•ProSolidAxisV isit()
•ProSolidCsysV isit()
•ProSolidFeatstatusGet()
•ProSolidFeatstatusSet()
•ProSolidFeatstatusWi thoptionsSet()
•ProSolidFeatstatusflagsGet()
•ProSolidFailedFeatsList()
•ProSolidFailedfeatur esList()
•ProSldsurfaceShellsAndV oidsFind()
•ProSolidT oleranceStandardGet()
•ProSolidT oleranceStandardSet()
Thefollowingvisitfunctionsenableyoutoaccessthevarioustypesofobjects
insideapartorassembly:
•ProSolidFeatVisit()—V isitsallthefeatures,includingthoseused
internally(whicharenotvisibletotheCreoParametric user).Youcanalsouse
thisfunctiontovisitthecomponents ofanassembly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinsideapartorassembly:
•ProSolidFeatVisit()—V isitsallthefeatures,includingthoseused
internally(whicharenotvisibletotheCreoParametric user).Youcanalsouse
thisfunctiontovisitthecomponents ofanassembly.
92 Creo®Parametric TOOLKIT User’sGuide•ProSolidSurfaceVisit()— Visitsthesurfacesofthemodelonlyifthe
modelhasasinglebodyelsereturnstheerrorPRO_TK_MULTIBODY_
UNSUPPORTED. Thisincludesallsurfacescreatedbysolidfeatures,butnot
datumsurfaces.
•ProSolidQuiltVisit()—V isitsallthequiltsinapartoranassembly.
•ProSolidAxisVisit()—V isitsalltheaxesinapartoranassembly.
•ProSolidCsysVisit()—V isitsallthecoordinate systemdatumsinapart
oranassembly.
Thefunction ProSolidFeatstatusGet() retrievesalistoftheinteger
identifiers andstatusesofallthefeaturesinaspecifiedsolidintheorderinwhich
theyareregenerated. Theintegeridentifierofafeatureisthevalueoftheidfield
intheProFeature objectandalsotheINTERNAL IDseeninCreoParametric.
Thefunction ProSolidFeatstatusSet() enablesyoutosetthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheyareregenerated. Theintegeridentifierofafeatureisthevalueoftheidfield
intheProFeature objectandalsotheINTERNAL IDseeninCreoParametric.
Thefunction ProSolidFeatstatusSet() enablesyoutosetthe
regeneration orderandstatusesofthefeaturesinthesolid.
Thefunction ProSolidFeatstatusWithoptionsSet() assignsthe
regeneration orderandstatusbitflagsforthespecifiedfeaturesinasolidbasedon
thebitmaskcontaining oneormoreregeneration controlbitflagsofthetype
PRO_REGEN_* definedinProSolid.h. RefertotheRegenerating aSolidon
page94sectionformoreinformation onthebitflags.
Thefunction ProSolidFeatstatusflagsGet() retrievesthearrayof
integeridentifiers ofthefeaturesinaspecifiedsolidandthecorresponding array
ofbitmasksrepresenting oneormorefeaturestatusbitflagsofthetypePRO_
FEAT_STAT_* definedinProFeature.h. RefertotheCore:Featuresonpage
130chapterformoreinformation onthefeaturestatusbitflags.
Thefunction ProSolidFailedFeatsList() retrievesthelistofidentifiers
offailedfeaturesinaspecifiedsolid.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx130chapterformoreinformation onthefeaturestatusbitflags.
Thefunction ProSolidFailedFeatsList() retrievesthelistofidentifiers
offailedfeaturesinaspecifiedsolid.
Note
FromPro/ENGINEER Wildfire5.0onward,thefunction
ProSolidFailedFeatsList() hasbeendeprecated. Usethefunction
ProSolidFailedfeaturesList() instead.PassNULLfortheinput
arguments co_failed_ids andco_x_failed_ids whileusing
ProSolidFailedfeaturesList() intheResolvemode.
Thefunction ProSolidFailedfeaturesList() retrievesthelistof
identifiers ofalloranyofthefailedfeatures,childrenoffailedfeatures,children
ofexternalfailedfeatures,orboththefeaturesandtheirchildren.
Thefunction ProSldsurfaceShellsAndVoidsFind() returnsanordered
listofsurface-contour pairsforeachshellandvoidinasolid.
Core:Solids,Parts,andMaterials 93Thesurface-contour pairsdescribetheshellfacesandarespecifiedbythe
ProSldsurfaceShellface objects.Ifthecontour fieldinthe
ProSldsurfaceShellface objectisNULL,itmeansallthecontoursinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSldsurfaceShellface objects.Ifthecontour fieldinthe
ProSldsurfaceShellface objectisNULL,itmeansallthecontoursinthe
geometrybelongtothesamesurfaceandtheshell_faces arraycontainsonly
onesurfaceID.However,ifthecontoursbelongtodifferentshells,theshell_
facesarraycontainsitemsequaltothenumberofcontours.
Theorderedlistofsurface-contour pairsisspecifiedbythe
ProSldsurfaceShellorder objects;eachofthisobjectcontainsthe
followingfields:
•orientation—Specifies theshellorientation. Ifthisfieldis1,theshellis
orientedoutward,ifitis-1,theshellisinwardorientedmeaningitisavoid.
•first_face—Specifies theindexinthearrayof
ProSldsurfaceShellface objects.
•number_of_faces—Specifies thetotalnumberofshellfaces.
•ambient_shell—Specifies theindexinthearrayof
ProSldsurfaceShellorder objects.
Thefunction ProSolidToleranceStandardGet() returnsthetolerance
standardassignedtoasolid.Usethemethod
ProSolidToleranceStandardSet() tosetthetolerancestandardforaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSldsurfaceShellorder objects.
Thefunction ProSolidToleranceStandardGet() returnsthetolerance
standardassignedtoasolid.Usethemethod
ProSolidToleranceStandardSet() tosetthetolerancestandardfora
solid.Afteryousetthetolerancestandardforasolid,youmustregenerate the
solid,ifrequired.Thefunctiondoesnotregenerate thesolid.
DisplayingaSolid
FunctionIntroduced:
•ProSolidDisplay()
Thefunction ProSolidDisplay() displaysasolidinthecurrentCreo
Parametric window.ThisdoesnotmaketheobjectcurrentfromthepointofCreo
Parametric.
Example1:LoadingandDisplayingaSolid
TheexampleinthefileUgSolidLoadDisp.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_solid, showshowto
usethefunctions ProObjectwindowMdlnameCreate() and
ProSolidDisplay().
Regenerating aSolid
FunctionIntroduced:
•ProSolidRegenerate()
94 Creo®Parametric TOOLKIT User’sGuide•ProSolidRegenerationIsNor esolvemode()
•ProSolidRegenerationstatusGet()
Thefunction ProSolidRegenerate() regenerates thespecifiedsolid.Oneofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx94 Creo®Parametric TOOLKIT User’sGuide•ProSolidRegenerationIsNor esolvemode()
•ProSolidRegenerationstatusGet()
Thefunction ProSolidRegenerate() regenerates thespecifiedsolid.Oneof
theinputstothefunctionisabitmaskthatspecifieshowtheregeneration mustbe
performed. Thebitmaskmaycontainthefollowingflags:
•PRO_REGEN_NO_FLAGS—Equivalent topassingnoflags.
•PRO_REGEN_CAN_FIX—Allows theusertointeractively fixthemodel
usingtheuserinterface,ifregeneration fails.Thisbitflagneedstobesetonly
incaseofinteractive applications. Ifthisoptionisnotincluded,theuser
interfacedoesnotupdateevenifregeneration issuccessful. Use
ProWindowRepaint() andProTreetoolRefresh() toperformthe
updateifneeded.Also,thisbitflagmustbesetonlyintheResolvemode.
Otherwise, ProSolidRegenerate() returns PRO_TK_BAD_CONTEXT.
•PRO_REGEN_ALLOW_CONFIRM—This flaghasbeendeprecated fromCreo
Parametric 4.0M030.Allowstheusertointeractively selecttheoptionof
retainingfailedfeaturesandchildrenoffailedfeaturesviaapop-updialogxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_REGEN_ALLOW_CONFIRM—This flaghasbeendeprecated fromCreo
Parametric 4.0M030.Allowstheusertointeractively selecttheoptionof
retainingfailedfeaturesandchildrenoffailedfeaturesviaapop-updialog
box,ifregeneration fails.ThisbitflagmustbesetonlyintheNo-Resolve
mode.Otherwise, ProSolidRegenerate() returns PRO_TK_BAD_
CONTEXT.
Note
Theinteractive dialogboxwhichprovidedanoptiontoretainfailed
featuresandchildrenoffailedfeatures,ifregeneration failsisnolonger
supported. CreoParametric displaysawarningmessagewhichgives
detailsoffailedfeatures.
•PRO_REGEN_UNDO_IF_FAIL—Allows theusertoundothefailed
regeneration andrestorethepreviousstatus.Thisflagneedstobesetonlyin
theNo-Resolve mode.Otherwise, ProSolidRegenerate() returns PRO_
TK_BAD_CONTEXT. Theresultobtainedmaybedifferentfromtheone
attainedbyusingtheRestoreoptionintheResolvemode.Restoreinthe
Resolvemodecanbeusedimmediately afterthefirstfailure.Butundointhe
No-Resolve modeduetothisbitflaghappensonlyafterallthefeaturesarexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattainedbyusingtheRestoreoptionintheResolvemode.Restoreinthe
Resolvemodecanbeusedimmediately afterthefirstfailure.Butundointhe
No-Resolve modeduetothisbitflaghappensonlyafterallthefeaturesare
regenerated orfailed.Insomecases,theundomaynothappenatall.
Core:Solids,Parts,andMaterials 95Note
ThebitflagsPRO_REGEN_ALLOW_CONFIRM andPRO_REGEN_UNDO_
IF_FAIL arenotcompatible witheachother.Settingbothofthem
togetherwillresultinPRO_TK_BAD_CONTEXT.
•PRO_REGEN_SKIP_DISALLOW_SYS_RECOVER—Skips thepreparation
forfailurerecovery.Ifthisoptionisused,UndoChangesispossibleifa
failureoccurs.Thisoptionisusedonlyinconjunction withPRO_REGEN_
CAN_FIX.
•PRO_REGEN_UPDATE_INSTS—Updates instancesofthesolidinmemory.
Thismayslowdowntheregeneration process.
•PRO_REGEN_RGN_BCK_USING_DISK—Stores thebackupmodelonthe
disk.ThisisusefulonlyifPRO_REGEN_CAN_FIX isset.
•PRO_REGEN_FORCE_REGEN—Forces thesolidtofullyregenerate. Thiswill
regenerate everyfeatureinthesolid.Ifnotset,CreoParametric usesitsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisk.ThisisusefulonlyifPRO_REGEN_CAN_FIX isset.
•PRO_REGEN_FORCE_REGEN—Forces thesolidtofullyregenerate. Thiswill
regenerate everyfeatureinthesolid.Ifnotset,CreoParametric usesits
internalalgorithmtodetermine whichfeaturestoregenerate.
•PRO_REGEN_TOP_ASM_ONLY—Forces onlytoplevelassemblyto
regenerate. Thisflagforcestheregeneration ofallthefeaturesand
components thataredefinedinthespecifiedtoplevelassembly,evenwhen
theyareconsidered up-to-date. Thefeaturesandcomponents fromthelow
levelassemblythatareessentialforthecorrectassemblyregeneration results,
mightalsoberegenerated duringtheregeneration process.However,theyare
notexcludedfromtheregeneration process.
Note
ThisflagcannotbeusedwithPRO_REGEN_FORCE_REGEN.
•PRO_REGEN_UPDATE_ASSEMBLY_ONLY—Updates assemblyandsub-
assemblyplacements andregenerates assemblyfeaturesandintersected parts.
Iftheaffectedassemblyisretrievedasasimplified representation, thisflag
willupdatethelocationsofthecomponents. Iftheflagisnotset,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIftheaffectedassemblyisretrievedasasimplified representation, thisflag
willupdatethelocationsofthecomponents. Iftheflagisnotset,the
component locationsarenotupdatedbydefaultwhenthesimplified
representation isretrieved.
96 Creo®Parametric TOOLKIT User’sGuideNote
ThisflagcannotbeusedwithPRO_REGEN_FORCE_REGEN.
•PRO_REGEN_RESUME_EXCL_COMPS—Enables CreoParametric toresume
availableexcludedcomponents ofthesimplified representation during
regeneration. Thiscanresultinamoreaccurateupdateofthesimplified
representation.
Note
Component modelswhicharenotinsessionatthetimeofthecallto
ProSolidRegenerate() willnotberetrievedduetothisoption.
•PRO_REGEN_NO_RESOLVE_MODE —SpecifiestheNo-Resolve mode
introduced inPro/ENGINEER Wildfire5.0.ThisisthedefaultmodeinCreo
Parametric. Inthismode,ifamodelandfeatureregeneration fails,failed
featuresandchildrenoffailedfeaturesarecreatedandregeneration ofother
featurescontinues.
•PRO_REGEN_RESOLVE_MODE —SpecifiestheResolvemode.Inthismode,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturesandchildrenoffailedfeaturesarecreatedandregeneration ofother
featurescontinues.
•PRO_REGEN_RESOLVE_MODE —SpecifiestheResolvemode.Inthismode,
youcancontinuewiththePro/ENGINEER Wildfire4.0behavior,whereinifa
modelandfeatureregeneration fails,thefailureneedstoberesolvedbefore
regeneration canberesumed.YoucanalsoswitchtotheResolvemodeby
settingtheconfiguration option regen_failure_handling to
resolve_mode intheCreoParametric session.
InCreoParametric 7.0.1.0andlater,theconfiguration option regen_
failure_handling hasbeendeprecated. Ifamodelandfeature
regeneration failsandifyouwanttouseResolvemode,youneedtocontact
PTCCustomerSupport.Formoreinformation, refertothesectionContacting
PTCTechnicalSupportintheGetting Started withCreoParametric TOOLKIT
guide.
Core:Solids,Parts,andMaterials 97Note
Settingtheconfiguration optiontoswitchtoResolvemodeensurestheold
behavioraslongasyoudonotretrievethemodelssavedundertheNo-
Resolvemode.Toconsistently preservetheoldbehavior,useResolvexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSettingtheconfiguration optiontoswitchtoResolvemodeensurestheold
behavioraslongasyoudonotretrievethemodelssavedundertheNo-
Resolvemode.Toconsistently preservetheoldbehavior,useResolve
modefromthebeginning andthroughout yourCreoParametric session.
Temporarily settingthebitflagPRO_REGEN_RESOLVE_MODE inthe
relevantfunctionsdoesnotensuretheoldbehavior.
Thefunction ProSolidRegenerationIsNoresolvemode() identifiesif
theregeneration modeintheactiveCreoParametric sessionistheNo-Resolve
mode.SettheProBoolean argument is_no_r esolvetoPRO_B_TRUE tosetthe
No-Resolve mode.
Thefunction ProSolidRegenerationstatusGet() returnsthe
regeneration statusofthesolidmodel.Thisstatusissimilartotheregeneration
statusindicator(Green/Yellow/Red) intheCreoParametric UserInterface.
Theregeneration statuscantakeoneofthefollowingvalues:
•PRO_SOLID_REGENERATED—Specifies thatthemodelisup-to-date and
requiresnoregeneration.
•PRO_SOLID_NEEDS_REGENERATION—Specifies thatthemodelhas
changedandrequiresregeneration.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_SOLID_REGENERATED—Specifies thatthemodelisup-to-date and
requiresnoregeneration.
•PRO_SOLID_NEEDS_REGENERATION—Specifies thatthemodelhas
changedandrequiresregeneration.
•PRO_SOLID_FAILED_REGENERATION—Specifies thattheregeneration
hasfailedorhaswarnings.
Note
Modelswithcertaincontents,suchascircularreferences orassembly
analysisfeatures,willneverreturnafully“regenerated” status.Thus,this
statusshouldnotprovideanabsoluterestriction. Iftheflagremainsinthe
“PRO_SOLID_NEEDS_REGENERATION” statusthroughtwosuccessful
regenerations, themodelcouldbeconsidered up-to-date.
•PRO_SOLID_CONNECT_FAILED—Specifies thatthemodelhas
successfully regenerated, however,theconnectoperationformechanisms in
thesolidmodelhasfailed.Thisstatusisapplicable onlyforassemblies which
havemovingcomponents.
98 Creo®Parametric TOOLKIT User’sGuideExample2:Combining Regeneration Flags
ThesamplecodeinUgSolidRegen.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_solid showshowtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx98 Creo®Parametric TOOLKIT User’sGuideExample2:Combining Regeneration Flags
ThesamplecodeinUgSolidRegen.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_solid showshowto
usethefunction ProSolidRegenerate().
CombinedStatesofaSolid
Withacombined state,youcancombineandapplymultipledisplaystatestoa
CreoParametric model.Combined statesarecomposed ofthefollowingtwoor
moredisplaystates:
•SavedViews
•Layerstate
•Annotations
•Crosssection
•Explodedview
•Simplified representation
•Modelstyle
Theobject ProCombstate foracombined statehasthesamedeclaration asthe
ProModelitem object,onlywiththetypesettoPRO_COMBINED_STATE.
Thedeclaration isasfollows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProCombstate;
Functions Introduced:
•ProMdlCombstatesGet()
•ProCombstateActiveGet()
•ProCombstateDataGet()
•ProCombstateActivate()
•ProMdlCombStateCr eate()
•ProCombstateRedefine()
•ProCombstateAnnotationsGet()
•ProCombstateAnnotationsAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProCombstateActiveGet()
•ProCombstateDataGet()
•ProCombstateActivate()
•ProMdlCombStateCr eate()
•ProCombstateRedefine()
•ProCombstateAnnotationsGet()
•ProCombstateAnnotationsAdd()
•ProCombstateAnnotationsRemove()
•ProCombstateDelete()
•ProCombstateAnnotationsStateGet()
Core:Solids,Parts,andMaterials 99•ProCombstateSupplGeomStateGet()
•ProCombstateAnnotationsAndSupplGeomStateSet()
•ProCombstateIsPublished()
•ProCombstateIsDefault()
Thefunction ProMdlCombstatesGet() returnsanarrayofcombined states
ofaspecifiedsolid.
Thefunction ProCombstateActiveGet() retrievestheactivecombined
stateinaspecifiedsolidmodel.Theactivecombined stateisthedefaultstate
whenthemodelisopened.
Thefunction ProCombstateDataGet() returnsinformation foraspecified
combined state.Theoutputargumentsofthisfunctionare:
•cs_name—The nameofthecombined state.
•cs_ref_arr—An arrayofreferencestatesofthetypeProModelitem. This
arraycancontainstatesofthefollowingtypes:
○PRO_VIEW
○PRO_LAYER_STATE
○PRO_SIMP_REP
○PRO_EXPLD_STATExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•cs_ref_arr—An arrayofreferencestatesofthetypeProModelitem. This
arraycancontainstatesofthefollowingtypes:
○PRO_VIEW
○PRO_LAYER_STATE
○PRO_SIMP_REP
○PRO_EXPLD_STATE
○PRO_XSEC
○PRO_STYLE_STATE
•p_clip_opt—A pointertothevalueofthecrosssectionclip.Thisisapplicable
onlyincaseofavalidreferenceofthetypePRO_XSEC. ThePRO_XSEC item
represents aProXsec objectorazonefeature.
Thevaluesforthecrosssectioncliparespecifiedbytheenumerated type
ProCrossecClipOpt. Thepossiblevaluesareasfollows:
○PRO_VIS_OPT_NONE—Specifies thatthecrosssectionorzonefeatureis
notclipped.
○PRO_VIS_OPT_FRONT—Specifies thatthecrosssectionorzonefeature
isclippedbyremovingthematerialonthefrontside.Thefrontsideis
wherethepositivenormalsoftheplanesofthecrosssectionorzone
featurearedirected.
○PRO_VIS_OPT_BACK—Specifies thatthecrosssectionorzonefeatureis
clippedbyremovingthematerialonthebackside.
•p_is_expld—A ProBoolean valuethatspecifieswhetherthecombined state
isexploded.ThisvalueisavailableonlyifwhenavalidPRO_EXPLD_STATExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxclippedbyremovingthematerialonthebackside.
•p_is_expld—A ProBoolean valuethatspecifieswhetherthecombined state
isexploded.ThisvalueisavailableonlyifwhenavalidPRO_EXPLD_STATE
100 Creo®Parametric TOOLKIT User’sGuidereferencestateisretrieved.ItisnotavailableforCreoParametric partssince
anexplodedstatedoesnotexistinthepartmode.
Usethefunction ProCombstateActivate() toactivateaspecified
combined state.
Thefunction ProMdlCombStateCreate() createsanewcombined state
basedonspecifiedreferences. Theinputargumentsofthisfunctionareasfollows:
•p_solid—Specify thesolidmodelinwhichyouwanttocreateanewcombined
state.
•new_name—Specify thenameofthenewcombined state.
•ref_arr—Specify thearrayofreferencestates.Refertothedescription ofthe
argument cs_ref_arronpageofthefunction ProCombstateDataGet()
forthevalidreferencestates.
•clip_opt—Specify thevalueofthecrosssectionclip.Refertothedescription
oftheargument p_clip_opt onpageofthefunction
ProCombstateDataGet() formoreinformation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforthevalidreferencestates.
•clip_opt—Specify thevalueofthecrosssectionclip.Refertothedescription
oftheargument p_clip_opt onpageofthefunction
ProCombstateDataGet() formoreinformation.
•is_expld—Specify PRO_B_TRUE ifthecombined stateisexploded,else
specify PRO_B_FALSE. Thisargumentneedstobesetonlyincaseofavalid
PRO_EXPLD_STATE referencestate.Itisnotapplicable forCreoParametric
partssinceanexplodedstatedoesnotexistinthepartmode.
Usethefunction ProCombstateRedefine() toredefineacreatedcombined
state.Thevaluesspecifiedbytheinputarguments ref_arr, clip_opt,andis_expld
ofthefunction ProMdlCombStateCreate() areredefined.
Incase,youdonotwanttoredefineareferencestate,passthereferencestatewith
thesamevalue.Whileredefining, youmustspecifyreferencestates.Ifyoudonot
passreferencestates,thecombined stateisredefinedtoaNO_STATE state. NO_
STATEstatemeansthedisplayofthereferencestateisnotchangedonactivation
ofcombined state.
Thefunction ProCombstateAnnotationsGet() retrievesanarrayofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSTATEstatemeansthedisplayofthereferencestateisnotchangedonactivation
ofcombined state.
Thefunction ProCombstateAnnotationsGet() retrievesanarrayof
annotations andtheirstatusflagsfromaspecifiedcombined stateitem.
Thefunction ProCombstateAnnotationsAdd() addsanarrayof
annotations toaspecifiedcombined stateitem.Theinputargument status_flags
specifiesifanannotation mustbedisplayedinthecombined state.Ifyouspecify
thevalue 0forthisargument, thentheannotation isdisplayedinthecombined
state.Ifyouspecifythevalue 1,thentheannotation isnotdisplayed.
Usethefunction ProCombstateAnnotationsRemove() toremovethe
annotations fromaspecifiedcombined stateitem.
Usethefunction ProCombstateDelete() todeleteaspecifiedcombined
state.Thefunctionfailsifthespecifiedcombined stateisthedefaultoractive
combined state.
Core:Solids,Parts,andMaterials 101Annotations andannotation elementscanbeassignedtoacombined state.When
thecombined stateisactive,theannotations aredisplayedinthegraphicswindow.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcombined state.
Core:Solids,Parts,andMaterials 101Annotations andannotation elementscanbeassignedtoacombined state.When
thecombined stateisactive,theannotations aredisplayedinthegraphicswindow.
Similarly,annotations andannotation elementscanbeassignedtolayers.
Supplementary geometrysuchasdatumplanes,points,coordinate systems,axes,
curves,andsurfacescanalsobeassignedtocombined stateorlayers.Thedisplay
ofannotations andsupplementary geometryinamodeliscontrolled eitherbythe
combined stateorlayers.Theconfiguration option combined_state_type is
usedtodefinehowthevisibilityofannotations andsupplementary geometryis
controlled inanewcombined state.
RefertoCreoParametric Helpformoreinformation.
Thefunction ProCombstateAnnotationsStateGet() checksifthe
displayofannotations iscontrolled bythespecifiedcombined stateorlayers.The
functionreturns PRO_B_TRUE whenthedisplayiscontrolled bycombined state.
Usethefunction ProCombstateSupplGeomStateGet() tocheckifthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionreturns PRO_B_TRUE whenthedisplayiscontrolled bycombined state.
Usethefunction ProCombstateSupplGeomStateGet() tocheckifthe
displayofsupplementary geometryiscontrolled bythespecifiedcombined state
orlayers.Thefunctionreturns PRO_B_TRUE whenthedisplayiscontrolled by
combined state.
Thefunction ProCombstateAnnotationsAndSupplGeomStateSet()
allowsyoutochangethedisplayofannotations andsupplementary geometryby
thecombined stateorlayers.Theinputargumentsfollow:
•cs_item—Specifies apointertothecombined stateitemfromwhichthestate
needstoberetrieved.
•annotation_state—Flag tosetthespecifiedcombined statetoannotation state.
Passthevalueofannotation_state asPRO_B_TRUE ifdisplayofannotations
shouldbecontrolled bycombined state.PassitasPRO_B_FALSE ifdisplay
ofannotations shouldbecontrolled bylayers.
•supplgeom_state—Flag tosetthespecifiedcombined statetosupplementary
geometrystate.Passthevalueofsupplgeom_state asPRO_B_TRUE ifdisplayxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofannotations shouldbecontrolled bylayers.
•supplgeom_state—Flag tosetthespecifiedcombined statetosupplementary
geometrystate.Passthevalueofsupplgeom_state asPRO_B_TRUE ifdisplay
ofsupplementary geometryshouldbecontrolled bycombined state.Passitas
PRO_B_FALSE ifdisplayofsupplementary geometryshouldbecontrolled by
layers.
Note
Ifvalueoftheinputargument supplgeom_state issettoPRO_B_TRUE,
thevalueofannotation_state also,mustbesettoPRO_B_TRUE.
Thefunctionreturns PRO_TK_NO_CHANGE ifthecurrentstatesof
annotations andsupplementary geometryinthecombined statearesameasthe
requestedstates.
Thefunction ProCombstateIsPublished() checksifthespecified
combined statehasbeenpublishedtoCreoView.
102 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProCombstateIsDefault() checksifthespecified
combined stateissetasthedefaultcombined stateforthemodel.
LayerState
Alayerstatestoresthedisplaystateofexistinglayersandallthehiddenlayersof
thetop-levelassembly.YoucancreateandsaveoneormorelayerstatesandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLayerState
Alayerstatestoresthedisplaystateofexistinglayersandallthehiddenlayersof
thetop-levelassembly.Youcancreateandsaveoneormorelayerstatesand
switchbetweenthemtochangetheassemblydisplay.
Theobject ProLayerstate represents thelayerstate.Ithasthesame
declaration astheProModelitem object,onlywiththetypesettoPRO_
LAYER_STATE. Thedeclaration isasfollows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProLayerstate;
Functions Introduced:
•ProLayerstatesGet()
•ProLayerstateActiveGet()
•ProLayerstateNameGet()
•ProLayerstateActivate()
•ProLayerstateCr eate()
•ProLayerstateLayersGet()
•ProLayerstateLayerAdd()
•ProLayerstateLayerRemove()
•ProLayerstateActivestateUpdate()
•ProLayerstateModelitemHide()
•ProLayerstateModelitemUnhide()
•ProLayerstateModelitemIsHidden()
•ProLayerstateDelete()
Thefunction ProLayerstatesGet() returnsanarrayoflayerstatesfora
specifiedsolid.
Thefunction ProLayerstateActiveGet() retrievestheactivelayerstatein
aspecifiedsolidmodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProLayerstateDelete()
Thefunction ProLayerstatesGet() returnsanarrayoflayerstatesfora
specifiedsolid.
Thefunction ProLayerstateActiveGet() retrievestheactivelayerstatein
aspecifiedsolidmodel.
Thefunction ProLayerstateNameGet() retrievesthenameofaspecified
layerstate.
Usethefunction ProLayerstateActivate() toactivateaspecifiedlayer
state.
Core:Solids,Parts,andMaterials 103Thefunction ProLayerstateCreate() createsanewlayerstatebasedon
specifiedreferences. Theinputargumentsofthisfunctionareasfollows:
•p_solid—Specify thesolidmodelinwhichyouwanttocreateanewlayer
state.
•state_name—Specify thenameofthenewlayerstate.Thenamecanonly
consistofalphanumeric, underscore, andhypencharacters.
•layers—Specify anarrayofreferencelayers.
•disp_arr—Specify anarrayofdisplaystatuses.Thenumberofdisplaystatues
isequaltothenumberofreferencelayers.
•hidden_items—Specify anarrayofhiddenitems.
Note
ProLayerItem oftypePRO_LAYER_LAYER isnotsupported inthe
function ProLayerstateCreate(), whenyoucreateanewlayerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisequaltothenumberofreferencelayers.
•hidden_items—Specify anarrayofhiddenitems.
Note
ProLayerItem oftypePRO_LAYER_LAYER isnotsupported inthe
function ProLayerstateCreate(), whenyoucreateanewlayer
state.
Thefunction ProLayerstateLayersGet() retrievesthereferencedatafora
specifiedlayerstate.
Thefunction ProLayerstateLayerAdd() addsanewlayertoanexisting
layerstate.Specifythenewlayer,itsdisplaystate,andthenameoftheexisting
layerstateasinputargumentstothisfunction.
Thefunction ProLayerstateLayerRemove() removesaspecificlayerfrom
aspecifiedlayerstate.
Thefunction ProLayerstateActivestateUpdate() updatesthelayer
state,whichisactiveinthespecifiedmodel.Ifthedisplaystatuesoflayershave
changed,thencallingthisfunctionensuresthattheactivelayerstateinthemodel
isupdatedwiththenewdisplaystatusesofthelayers.
Usethefunction ProLayerstateModelitemHide() tohidethedisplayofa
specificitemonthespecifiedlayerstate.
Usethefunction ProLayerstateModelitemUnhide() toremoveaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProLayerstateModelitemHide() tohidethedisplayofa
specificitemonthespecifiedlayerstate.
Usethefunction ProLayerstateModelitemUnhide() toremovea
specificitemfromthelistofhiddenitemsonalayerstate.
Usethefunction ProLayerstateModelitemIsHidden() toidentifyifan
itemishiddenonalayerstate.
Usethefunction ProLayerstateDelete() todeleteaspecifiedlayerstate.
EvaluatingMathematical Expressions foraSolid
Functions Introduced:
104 Creo®Parametric TOOLKIT User’sGuide•ProMathExpr essionEvaluate()
Thefunction ProMathExpressionEvaluate() evaluatesthegiven
mathematical expression inthecontextofagivensolid.Theexpression may
includeparameters, dimensions, embedded functions, orpredefined constants.
Thisfunctionreturnsapointertothecalculated resultandapointertotheunitof
thecalculated result.
SolidOutline
Functions Introduced:
•ProSolidOutlineGet()
•ProSolidOutlineCompute()
Thefunction ProSolidOutlineGet() providesyouwiththemaximum andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecalculated result.
SolidOutline
Functions Introduced:
•ProSolidOutlineGet()
•ProSolidOutlineCompute()
Thefunction ProSolidOutlineGet() providesyouwiththemaximum and
minimumvaluesofX,Y,andZoccupiedbythecontentsofthesolid,withrespect
tothedefault,solidcoordinate system.
Thefunction ProSolidOutlineCompute() calculates theoutlineofthe
solidwithrespecttoanyorientation, definedbyatransformation matrix.(For
moreinformation, seetheCore:Coordinate SystemsandTransformations onpage
220chapter.)Thefunctionenablesyoutoexcludefromthecalculation itemsof
anyorallofthefollowingtypes:
•Datumplane
•Datumpoint
•Datumaxes
•Datumcoordinate system
•Facets
Example3:Computing theOutlineofaSolid
ThesamplecodeinUgSolidOutlineComp.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_solid computesthe
outlineofasolidwithrespecttoaselectedcoordinate system,andconvertsthe
resultbacktosolidcoordinates.
SolidAccuracy
Functions Introduced:
•ProSolidAccuracyGet()
•ProSolidAccuracySet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoutlineofasolidwithrespecttoaselectedcoordinate system,andconvertsthe
resultbacktosolidcoordinates.
SolidAccuracy
Functions Introduced:
•ProSolidAccuracyGet()
•ProSolidAccuracySet()
Core:Solids,Parts,andMaterials 105Usethefunctions ProSolidAccuracyGet() and
ProSolidAccuracySet() toretrieveandsettheaccuracyofaspecifiedpart
orassembly,respectively .
Note
Tosetorretrievetheaccuracyforanassemblyyoumusttraversethroughall
itspartsintheassemblywiththesefunctions.
Theinputargumentsforthefunction ProSolidAccuracySet() areas
follows:
•solid—The partorassemblywhoseaccuracyyouwanttoset.
•type—The typeoftheaccuracy.Thevalidvaluesare:
○PRO_ACCURACY_RELATIVE—Specifies therelativeaccuracy
○PRO_ACCURACY_ABSOLUTE—Specifies theabsoluteaccuracy
•accuracy—The valueoftheaccuracythatyouwanttoset.Theunitusedfor
theabsoluteaccuracyofthedimension isbasedontheunitofthepartor
assembly.
Note
Regenerate themodelusingthefunction ProSolidRegenerate()
aftersettingtheaccuracyusing ProSolidAccuracySet().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheabsoluteaccuracyofthedimension isbasedontheunitofthepartor
assembly.
Note
Regenerate themodelusingthefunction ProSolidRegenerate()
aftersettingtheaccuracyusing ProSolidAccuracySet().
Thefunction ProSolidAccuracyGet() returnsthetypeandvalueofthe
accuracy.Theaccuracymayberelativeorabsolute.
Usingthesefunctionstosetandretrievepartaccuracyissimilartoperforming
thesefunctionsinCreoParametric usingFile▶▶Prepare ▶▶ModelProperties.
Derivethegeometryepsilonfortherequiredrelativeaccuracyasfollows:
geometry_epsilon =model_size xrelative_part_accuracy
model_size isthedistancebetweenthetwopointsoftheoutlinereturnedby
ProSolidOutlineGet() and0.08333isthescalingfactor.
106 Creo®Parametric TOOLKIT User’sGuideSolidUnits
Introduction toUnitofMeasurement andSystemofUnits
Eachmodelhasabasicsystemofunittoensurethatallmaterialproperties ofthat
modelareconsistently measuredanddefined.Allmodelsaredefinedonthebasis
ofsystemofunits.Apartcanhaveonlyonesystemofunit.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEachmodelhasabasicsystemofunittoensurethatallmaterialproperties ofthat
modelareconsistently measuredanddefined.Allmodelsaredefinedonthebasis
ofsystemofunits.Apartcanhaveonlyonesystemofunit.
Following arethetypesofquantitieswhichgovernthedefinitionofunitof
measurement:
•BasicQuantities—The basicunitsanddimensions ofthesystemofunits.For
example,considertheCentimeter GramSecond(CGS)systemofunit.The
basicquantityforthissystemofunitis:
○Length—cm
○Mass—g
○Force—dyne
○Time—sec
○Temperature—K
•DerivedQuantities—The derivedunitsarethosethatarederivedfromthe
basicquantities. Forexample,considertheCentimeter GramSecond(CGS)
systemofunit.Thederivedquantitiesforthissystemofunitareasfollows:
○Area—cm^2
○Volume—cm^3
○Velocity—cm/sec
TypesofSystemsofUnits
Following arethetypesofsystemofunits:
•Pre-defined systemofunit—This systemofunitisprovidedbydefault.
•Custom-defined systemofunit—This systemofunitisdefinedbytheuser
onlyifthemodeldoesnotcontainstandardmetricornonmetric unitsorifthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Pre-defined systemofunit—This systemofunitisprovidedbydefault.
•Custom-defined systemofunit—This systemofunitisdefinedbytheuser
onlyifthemodeldoesnotcontainstandardmetricornonmetric unitsorifthe
materialfilecontainsunitsthatcannotbederivedfromthepredefined system
ofunitsorboth.
InCreoParametric, thesystemofunitsarecategorized asfollows:
•MassLengthTime(MLT)
○Thefollowingsystemsofunitsbelongtothiscategory:
○CGS—Centimeter GramSecond
○MKS—Meter KilogramSecond
Core:Solids,Parts,andMaterials 107○mmKS—millimeter KilogramSecond
•ForceLengthTime(FLT)
○Thefollowingsystemsofunitsbelongtothiscategory:
○CreoParametric Default—Inch lbmSecond.Thisisthedefaultsystem
followedbyCreoParametric.
○FPS—Foot PoundSecond
○IPS—Inch PoundSecond
○mmNS—Millimeter NewtonSecond
Definitions
ForCreoParametric TOOLKIT, asystemofunitsisrepresented bythestructure
ProUnitsystem. Thisstructureisdefinedas:
typedef struct {
ProMdl owner;
ProName name;
}ProUnitsystem;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDefinitions
ForCreoParametric TOOLKIT, asystemofunitsisrepresented bythestructure
ProUnitsystem. Thisstructureisdefinedas:
typedef struct {
ProMdl owner;
ProName name;
}ProUnitsystem;
wherethenameistheuser-visiblenameusedintheUnitManagerdialog.
Anindividual unitisrepresented bythestructure ProUnititem. Thisstructure
isdefinedas:
typedef struct {
ProMdl owner;
ProName name;
}ProUnititem;
wherethenameistheuser-visibleabbreviation usedintheUnitManagerdialog.
Note
Thefunctionsdescribedinthefollowingsectionssupersede thefunctions
prodb_get_model_units() andprodb_set_model_units().
RetrievingSystemsofUnits
Functions Introduced:
•ProMdlUnitsystemsCollect()
•ProMdlPrincipalunitsystemGet()
Usethefunction ProMdlUnitsystemsCollect() toretrievethesetof
systemsofunitswhichareaccessible tothemodelintheformofanarray.The
inputargumentsofthefunctionareasfollows:
108 Creo®Parametric TOOLKIT User’sGuide•mdl—Specifies ahandletothemodel.
ThefunctionoutputsaProArray containing thesetofsystemsofunitsforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinputargumentsofthefunctionareasfollows:
108 Creo®Parametric TOOLKIT User’sGuide•mdl—Specifies ahandletothemodel.
ThefunctionoutputsaProArray containing thesetofsystemsofunitsforthe
specifiedmodel.
Note
Thefunctionretrievesboththepre-defined aswellasthecustom-defined
systemofunit.
Usethefunction ProMdlPrincipalunitsystemGet() toretrievethe
principalsystemofunitsforthespecifiedmodel.
ModifyingSystemsofUnits
Functions Introduced:
•ProUnitsystemRename()
•ProUnitsystemDelete()
Usethefunction ProUnitsystemRename() torenameacustom-defined
systemofunit.Theinputparameters forthisfunctionareasfollows:
•system—Specifies ahandletothesystemofunit.
•new_name—Specifies thenewnameforthesystem.
Usethefunction ProUnitsystemDelete() todeleteacustom-defined
systemofunit.Specifyahandletothesystemofunitstobedeletedastheinput
parameter forthisfunction.
Note
Youcanonlydeleteacustom-defined systemofunits.Youcannotdeletea
pre-defined systemofunits.
AccessingSystemsofUnits
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameter forthisfunction.
Note
Youcanonlydeleteacustom-defined systemofunits.Youcannotdeletea
pre-defined systemofunits.
AccessingSystemsofUnits
Functions Introduced:
•ProUnitsystemIsStandard()
•ProUnitsystemT ypeGet()
•ProUnitsystemUnitGet()
Core:Solids,Parts,andMaterials 109Usethefunction ProUnitsystemIsStandard() tocheckwhetherthe
systemofunitisaCreoParametric standardsystem.Specifythenameofthe
systemofunitastheinputparameter.
Usethefunction ProUnitsystemTypeGet() toretrievethetypeofsystemof
unit.Specifythenameofthesystemofunitastheinputargument.Theoutput
argumentofthisfunctionisasfollows:
•type—The typeofsystemofunit.Itcanhavethefollowingvalues:
○PRO_UNITSYSTEM_MLT—Mass LengthTime
○PRO_UNITSYSTEM_FLT—Force LengthTime
Formoreinformation onthesamerefertothesectiononTypesofSystemsof
Unitsonpage107above.
Usethefunction ProUnitsystemUnitGet() toretrievetheunitofparticular
typeforaspecifiedsystemofunit.
CreatingaNewSystemofUnits
FunctionIntroduced:
•ProMdlUnitsystemCr eate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUnitsonpage107above.
Usethefunction ProUnitsystemUnitGet() toretrievetheunitofparticular
typeforaspecifiedsystemofunit.
CreatingaNewSystemofUnits
FunctionIntroduced:
•ProMdlUnitsystemCr eate()
Usethefunction ProMdlUnitsystemCreate() tocreateanewsystemof
unitortocreateacopyofanexistingsystemofunit.Thefunctionexpectsthe
followinginputparameters:
•mdl—Specifies ahandletothemodel.
•type—Specifies thenewtypeofsystemofunit.
•name—Specifies thenameofthenewsystemofunit.
•units—Specifies thesetofunitsforthenewsystemofunitcreated.
Itoutputsthenewlycreatedsystemofunit.
AccessingIndividualUnits
Functions Introduced:
•ProMdlUnitsCollect()
•ProUnitInit()
•ProUnitT ypeGet()
•ProUnitNameGet()
•ProUnitConversionGet()
•ProUnitConversionCalculate()
•ProUnitIsStandard()
110 Creo®Parametric TOOLKIT User’sGuide•ProUnitExpre ssionGet()
•ProUnitInitByExpr ession()
•ProUnitCre ateByExpr ession()
•ProUnitModifyByExpre ssion()
Usethefunction ProMdlUnitsCollect() toretrieveasetofunitsofaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUnitInitByExpr ession()
•ProUnitCre ateByExpr ession()
•ProUnitModifyByExpre ssion()
Usethefunction ProMdlUnitsCollect() toretrieveasetofunitsofa
particulartypethatareavailabletothespecifiedmodel.
Thefunction ProUnitInit() retrievestheunitofaparticularnamefora
specifiedmodel.
Note
Thefunctionisapplicable onlyforbasicunitsandnotforderivedones.
Thefunction ProUnitNameGet() returnsthenameoftheunit.Forsystem
generatedunit,thathasnouser-friendlyname,itreturnstheerrorPRO_TK_NOT_
DISPLAYED.
Usethefunction ProUnitTypeGet() toretrievetheunittypeofaparticular
unit.
Unittypescanhaveanyofthefollowingvalues:
•PRO_UNITTYPE_LENGTH
•PRO_UNITTYPE_MASS
•PRO_UNITTYPE_FORCE
•PRO_UNITTYPE_TIME
•PRO_UNITTYPE_TEMPERATURE
•PRO_UNITTYPE_ANGLE
Usethefunction ProUnitConversionGet() toretrievetheconversion factor
foraparticularunit.Theoutputargumentsofthisfunctionare:
•conversion—Specifies theconversion factorforaunitintermsofscaleofthe
unitandanoffsetvalue.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforaparticularunit.Theoutputargumentsofthisfunctionare:
•conversion—Specifies theconversion factorforaunitintermsofscaleofthe
unitandanoffsetvalue.
Example -Consider the formula toconvert temperature from
Centigrade
toFahrenheit
F=a+(C*b)
where
Fisthe temperature inFahrenheit
Cisthe temperature inCentigrade
a=32(constant signifying the offset value)
b=9/5 (ratio signifying the scale ofthe unit)
Core:Solids,Parts,andMaterials 111Note
CreoParametric scalesthelengthdimensions ofthemodelusingthefactor
specified.Ifthescaleismodified,themodelisregenerated. Whenyou
scalethemodel,themodelunitsarenotchanged.Importedgeometry
cannotbescaled.
•ref_unit—Specifiesthereferenceunitfortheconversion.
Usethefunction ProUnitConversionCalculate() tocalculatethe
conversion factorbetweentwounits.Theseunitscanbelongtothesamemodelor
twodifferentmodels.
Usethefunction ProUnitIsStandard() todetermine whethertheunitisa
standardunitasdefinedinCreoParametric.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconversion factorbetweentwounits.Theseunitscanbelongtothesamemodelor
twodifferentmodels.
Usethefunction ProUnitIsStandard() todetermine whethertheunitisa
standardunitasdefinedinCreoParametric.
CreoParametric usesnamedquantitiestorepresentunitsotherthanthebasicunits
(e.g."Ilbs_stress_unit", whichrepresents aquantityofstressinthedefaultCreo
Parametric unitsystems).Parameters andmaterialproperties whichareassigned
derivedunitswillreturnthenameintheProUnititem structure,ratherthanthe
actualunit-based expression forthequantity.
Usethefunction ProUnitExpressionGet() toretrievetheunit-based
expression foragivenCreoParametric unitname.
Usethefunction ProUnitInitByExpression() toretrievethe
ProUnititem givenaunit-based expression.
Thefunction ProUnitCreateByExpression() createsaderivedorbasic
unit,basedonexpression. Usethefunction
ProUnitModifyByExpression() tomodifyaderivedunit.
ModifyingUnits
Functions Introduced:
•ProUnitModify()
•ProUnitDelete()
•ProUnitRename()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxunit,basedonexpression. Usethefunction
ProUnitModifyByExpression() tomodifyaderivedunit.
ModifyingUnits
Functions Introduced:
•ProUnitModify()
•ProUnitDelete()
•ProUnitRename()
Usethefunction ProUnitModify() tomodifyapre-defined unit.Modifying
theunitscaninvalidate yourrelations,astheyarenotscaledalongwiththemodel.
Theinputparameters are:
•unit—Specifiestheunittobemodified.
•conversion—Specifies theconversion factorfortheunit.
•ref_unit—Specifies thereferenceunit.
112 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUnitDelete() todeleteapreviously createdunit.
Note
Youcannotdeleteapre-defined unit.Ifyoudeleteaunit,youcannotundothe
deletion.
Usethefunction ProUnitRename() torenameanexistingunit.
CreationofanewUnit
•ProUnitCre ate()
Usethefunction ProUnitCreate() tocreateanewbasicunitgivena
referenceunitandtherequiredconversion factor.
Conversion ofModelstoaNewUnitSystem
FunctionIntroduced:
•ProMdlPrincipalunitsystemSet()
Usethefunction ProMdlPrincipalunitsystemSet() tochangethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferenceunitandtherequiredconversion factor.
Conversion ofModelstoaNewUnitSystem
FunctionIntroduced:
•ProMdlPrincipalunitsystemSet()
Usethefunction ProMdlPrincipalunitsystemSet() tochangethe
principalsystemofunitsassignedtothesolidmodel.Theoptionsavailableforthe
conversion are:
•PRO_UNITCONVERT_SAME_DIMS—Specifies theoptiontokeepthe
dimension valuesdespitethechangeinunits.
•PRO_UNITCONVERT_SAME_SIZE—Specifies theoptiontoscalethe
dimension valuestokeepthesamesizeforthemodel.
Conversion ofasystemofunitsmayresultinregeneration failuresduetothe
modification ofdimensions, parameters, andrelations.
ProMdlPrincipalunitsystemSet() doesnotsupportaflagtoundothe
changesmadebytheunitsystemconversion, andwillalwaysbringtheFixModel
interfacetofixanyregeneration failure.Therefore usethisfunctiononlyin
interactive modeapplications.While updatingtheprincipalsystemofunitsinan
assemblyenvironment, updatethesystemofunitsinthefollowingorder:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinteractive modeapplications.While updatingtheprincipalsystemofunitsinan
assemblyenvironment, updatethesystemofunitsinthefollowingorder:
1.Updatethesystemofunitforallthepartsseparately.Updatethepartsusing
thefollowingprocedure:
a.Retrievetheparts.
b.Updatetheunits.
c.Savethepartanderaseitfromthecurrentsession.
2.Updateallthesub-assemblies, thateitherneedtobechanged,orcontain
alreadyprocessed components.
Core:Solids,Parts,andMaterials 1133.Updatethetopmostlevelassembly.
Note
Theinitialunitsforanassemblyarethoseofitsbasecomponent. If,however,
theunitsofthebasecomponent havebeenchanged,theassemblyunitsdonot
automatically change.Youmustalsomodifytheunitsoftheassembly.You
cannotchangetheunitsofanassemblycontaining assemblyfeaturesthat
intersectapart.
MassProperties
FunctionIntroduced:
•ProSolidMassPr opertyGet()
•ProSolidBodyMassPr opertyGet()
•ProSolidBodyDensityGet()
•ProSolidMassPr opertyWi thDensityGet()
InCreoParametric 7.0.0.0andlater,thedensityparameter foranymaterialisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSolidMassPr opertyGet()
•ProSolidBodyMassPr opertyGet()
•ProSolidBodyDensityGet()
•ProSolidMassPr opertyWi thDensityGet()
InCreoParametric 7.0.0.0andlater,thedensityparameter foranymaterialis
PTC_MASS_DENSITY. Whenyoueditthedensityofamaterial,thevalueofthis
parameter isupdated.Thealternatemasspropertyparameter foranassembly,part,
orbodyisPRO_MP_ALT_DENSITY. Thereporteddensityparameter foran
assembly,part,orbodyisPRO_MP_DENSITY. Inthecaseofanassemblyora
partwithdifferentmaterials,thevalueofthisparameter istheaveragedensity.
Thefunction ProSolidMassPropertyGet() providesinformation aboutthe
distribution ofmassinthepartorassembly.
Thefunction ProSolidBodyMassPropertyGet() calculates themass
properties ofabodyinthespecifiedcoordinate system.Theinputparameter body
isthehandletoapartoranassembly.
Boththefunctionsprovidethemassdistribution information relativetothe
specifiedcoordinate systemdatum csys_name. Ifthevalueoftheparameter csys_
nameisNULL,thedefaultcoordinate systemisused.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBoththefunctionsprovidethemassdistribution information relativetothe
specifiedcoordinate systemdatum csys_name. Ifthevalueoftheparameter csys_
nameisNULL,thedefaultcoordinate systemisused.
Thefunctions ProSolidMassPropertyGet() and
ProSolidBodyMassPropertyGet() returntheinformation inthestructure
ProMassProperty, declaredintheheaderfileProSolid.h.
TheProMassProperty structurecontainsthefollowingfields(alldoubles):
•volume—The volume.
•surface_area—The surfacearea.
114 Creo®Parametric TOOLKIT User’sGuide•density—The densityisnotdefineduntilamaterialwithwell-defined
densityisassigned.
•mass—The mass.
•center_of_gravity[3]—The centerofgravity(COG).
•coor_sys_inertia[3][3]—The inertiamatrix.
•coor_sys_inertia_tensor[3][3]—The inertiatensor.
•cg_inertia_tensor[3][3]—The inertiaabouttheCOG.
•principal_moments[3]—The principalmomentsofinertia(the
eigenvalues oftheCOGinertia).
•principal_axes[3][3]—The principalaxes(theeigenvectors ofthe
COGinertia).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•principal_moments[3]—The principalmomentsofinertia(the
eigenvalues oftheCOGinertia).
•principal_axes[3][3]—The principalaxes(theeigenvectors ofthe
COGinertia).
Thefunction ProSolidBodyDensityGet() determines thedensityofthe
materialassignedtoabody.Theinputparameters bodyisthehandletothebody.
Note
Ifamaterialisalreadyassignedtothepart,theoutputofthefunctionisthe
densityofthematerialthatisassignedtothebody.Thedensityismeasuredin
theunitsofthemodel.Thedensityofthebodyisalwaysthedensityofthe
materialassignedtothebody.
Thefunction ProSolidMassPropertyWithDensityGet() calculates the
massproperties ofapartoranassemblyinthespecifiedcoordinate system.This
functiondoesnotimpactthemassproperties ofasolid.Theinputargumentsare
asfollows:
•solid—Handle tothepartorassemblyspecifiedbytheProSolid object.
•csys_name—Name ofthecoordinate system.IfthisisNull,thefunctionuses
thedefaultcoordinate system.
•dens_use_flag—V alueofthedensityflagspecifiedusingtheenumerated dataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•csys_name—Name ofthecoordinate system.IfthisisNull,thefunctionuses
thedefaultcoordinate system.
•dens_use_flag—V alueofthedensityflagspecifiedusingtheenumerated data
typeProMPDensUse andthevalidvaluesareasfollows:
○PRO_MP_DENS_DEFAULT—Calculate themassproperties usingthe
materialdensity.
○PRO_MP_DENS_USE_ALWAYS—Calculate themassproperties usingthe
specifieddensity,evenifmaterialhasadefineddensity.
○PRO_MP_DENS_USE_IF_MISSING—Calculate massproperties using
specifieddensity,evenifmaterialdoesnothaveadefineddensity.
•density—Density usedwhilecalculating massproperties depending onthe
valuespecifiedfortheinputargument dens_use_flag.
Core:Solids,Parts,andMaterials 115SolidPostfixIdentifiers
Functions Introduced:
•ProSolidT oPostfixId()
•ProPostfixIdT oSolid()
Thepostfixidentifierofasolidistheintegerrun-timeidentifierusedinrelations
tomakethenamesofitsdimensions uniqueinthecontextofaparentassembly.
CreoParametric automatically updatesthesevalueswhentheyareusedinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtomakethenamesofitsdimensions uniqueinthecontextofaparentassembly.
CreoParametric automatically updatesthesevalueswhentheyareusedin
relations.Thefunction ProSolidToPostfixId() givesyoutheidentifierfor
thesolidinsession.TheProPostfixIdToSolid() functionprovidesthe
solidhandle,giventheidentifier.
PartObjects
Theobject ProPart isaninstanceofProSolid. Itisanopaquehandlethat
canbecasttoaProSolid orProMdlsoyoucanuseanyofthefunctionsfor
thoseobjects.
Density
Functions Introduced:
•ProPartDensityGet()
Superseded Functions:
•ProPartDensitySet()
Thedensityofapartisusedinmanycalculations insideofCreoParametric,
includingmassproperties calculations andshrinkwrap export.Thefunction
ProPartDensityGet() returnsthecalculated orreporteddensitythatis
definedbytheparameter PRO_MP_DENSITY.
InCreoParametric 7.0.0.0andlater,thefunction ProPartDensitySet() is
deprecated. Usethefunctions ProMaterialCurrentSet() and
ProMaterialPropertySet() instead.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedbytheparameter PRO_MP_DENSITY.
InCreoParametric 7.0.0.0andlater,thefunction ProPartDensitySet() is
deprecated. Usethefunctions ProMaterialCurrentSet() and
ProMaterialPropertySet() instead.
Formoreinformation aboutmaterials,refertoAccessing MaterialDataonpage
117.
116 Creo®Parametric TOOLKIT User’sGuideExample4:WritingtheMassofaGivenParttotheModel
Tree
ThesamplecodeinUgSolidInfoMass.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_solid demonstrates
theuseofProPartDensityGet(), ProSolidMassPropertyGet() and
severalunitsrelatedfunctions. Itwritesthemassofthegivenparttothemodel
tree,alongwiththeappropriate unitsforthemassvalue.
MaterialObjects
CreoParametric TOOLKITenablesyoutoprogrammatically accessthematerial
properties ofparts.UsingtheCreoParametric TOOLKITfunctions, youcando
thefollowingactions:
•Createordeletematerials.
•Setthecurrentmaterial.
•Retrieveandsetthematerialtypesandproperties.
•Readandwritetomaterialfiles.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefollowingactions:
•Createordeletematerials.
•Setthecurrentmaterial.
•Retrieveandsetthematerialtypesandproperties.
•Readandwritetomaterialfiles.
Toenableaccesstomaterials,CreoParametric TOOLKITusesthefollowing
objects:
•ProMaterial—A structurethatcontainsamaterialnameandthepart
(ProSolid object)towhichitisassigned.Thishandleisusedinolder
materialfunctions.
•ProMaterialItem—Another nameforaProModelitem, itcontainsthe
materialowner,ID,andtype(PRO_RP_MATERIAL).
Toconvertbetween ProMaterial andProMaterialItem, use
ProModelitemByNameInit() toobtaintheitemfromthematerialowner
andname.ToobtainaProMaterial fromaProMaterialItem, use
ProModelitemNameGet() togetthematerialname.
AccessingMaterialData
Functions Introduced:
•ProMaterialCre ate()
•ProPartMaterialsGet()
•ProMaterialDelete()
•ProMaterialCurre ntGet()
•ProMaterialCurre ntSet()
Core:Solids,Parts,andMaterials 117Thefunction ProMaterialCreate() createsanewmaterialwiththename
youspecify,andsetsthedefaultvalueswithinanassociatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMaterialCurre ntSet()
Core:Solids,Parts,andMaterials 117Thefunction ProMaterialCreate() createsanewmaterialwiththename
youspecify,andsetsthedefaultvalueswithinanassociated
ProMaterialdata object.Yourapplication mustsetthecorrectmaterial
properties inthefieldsoftheProMaterialdata structure.
Theinputargumentsofthisfunctionareasfollows:
•part—Specifiesthepart.
•matl_name —Specifiesthematerialname.
•p_matl_data —Thisargumenthasbeendeprecated. PassNULLtocreatean
emptymaterialitemwhoseproperties canbesetby
ProMaterialPropertySet().
Thefunction ProPartMaterialsGet() obtainsanarraycontaining material
namesthatexistinapartdatabase.NotethatyoumustuseProArrayAlloc()
toallocatememoryforthisarray.Toremoveaspecifiedmaterialfromthepart’s
database,callthefunction ProMaterialDelete().
Thecurrentmaterialofapartdetermines thematerialproperties thatwillbeused
insomecomputational analysesofthatpart.Althoughmultiplematerialscanbe
storedinapartdatabase,onlyonematerialcanbecurrent.Thefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinsomecomputational analysesofthatpart.Althoughmultiplematerialscanbe
storedinapartdatabase,onlyonematerialcanbecurrent.Thefunction
ProMaterialCurrentGet() getsthehandleforthemastermaterialofthe
specifiedpart.Tosetthemastermaterial,callthefunction
ProMaterialCurrentSet().
Note
•Whenthemastermaterialonapartwithasinglebodyischanged,the
appearance, density,andsheetmetal properties ofthebodyareupdated.
Whenyoucreateanewbody,itisautomatically assignedthematerial
assignedtothepart.Youcanalsoexplicitlyassignamaterialtoabody.In
thiscase,evenwhenthemastermaterialonthemodelischanged,the
appearance, density,andsheetmetal properties ofthebodyarenot
changed.
•Bydefault,whenassigningamaterialtoasheetmetal part,thefunction
ProMaterialCurrentSet() modifiesthevaluesofthesheetmetal
properties suchasYfactorandbendtableaccording tothematerialfile
definition. Thistriggersaregeneration andamodification ofthedeveloped
lengthparameters ofthesheetmetal part.Topreventthisregeneration, setxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinition. Thistriggersaregeneration andamodification ofthedeveloped
lengthparameters ofthesheetmetal part.Topreventthisregeneration, set
thevalueoftheconfiguration option material_update_smt_bend_
tabletonever_replace. Totriggeraregeneration anda
modification ofthedeveloped lengthparameters ofthesheetmetal part,set
theconfiguration option material_update_smt_bend_table to
always_replace. Thedefaultvalueisalways_replace.
118 Creo®Parametric TOOLKIT User’sGuideSeetheCreoParametric Sheetmetal onlinehelpformoreinformation on
BendAllowance.
•Thefunction ProMaterialCurrentSet() maychangethemodel
display,ifthenewmaterialhasadefaultappearance assignedtoit.
•Thefunctionmayalsochangethefamilytable,iftheparameter PTC_
MASTER_MATERIAL isapartofthefamilytable.
•Youcanstillusethelegacyparameter PTC_MASTER_MATERIAL,
however,theselegacyparameters donotappearcorrectlyincalculations
andreportswhenyouareworkingwithapartthatusesmultiplematerials.
MaterialTypesandPropertiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhowever,theselegacyparameters donotappearcorrectlyincalculations
andreportswhenyouareworkingwithapartthatusesmultiplematerials.
MaterialTypesandProperties
Theenumerated typeProMaterialPropertyType containsthematerial
typesandmaterialpropertytypes.
ThematerialtypeisgivenbyPRO_MATPROP_TYPE thattakesthefollowing
values:
•PRO_MATERIAL_TYPE_STRUCTURAL_ISOTROPIC—Specifies a
materialwithaninfinitenumberofplanesofmaterialsymmetry,makingthe
structuralmaterialproperties equalinalldirections.
•PRO_MATERIAL_TYPE_STRUCTURAL_ORTHOTROPIC—Specifies a
materialwithsymmetry relativetothreemutuallyperpendicular planesfor
structuralmaterialproperties.
•PRO_MATERIAL_TYPE_STRUCTURAL_TRANS_ISOTROPIC—Specifies
amaterialwithrotationalsymmetry aboutanaxisforstructuralmaterial
properties. Theseproperties areequalforalldirections intheplaneofisotropy.
•PRO_MATERIAL_TYPE_THERMAL_ISOTROPIC—Specifies amaterial
withaninfinitenumberofplanesofmaterialsymmetry,makingthethermal
materialproperties equalinalldirections.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MATERIAL_TYPE_THERMAL_ISOTROPIC—Specifies amaterial
withaninfinitenumberofplanesofmaterialsymmetry,makingthethermal
materialproperties equalinalldirections.
•PRO_MATERIAL_TYPE_THERMAL_ORTHOTROPIC—Specifies amaterial
withsymmetry relativetothreemutuallyperpendicular planesforthermal
materialproperties.
•PRO_MATERIAL_TYPE_THERMAL_TRANS_ISOTROPIC —Specifiesa
materialwithrotationalsymmetry aboutanaxisforthermalmaterial
properties. Theseproperties areequalforalldirections intheplaneofisotropy.
•PRO_MATERIAL_TYPE_FLUID—Specifies amaterialwithfluidproperties.
ThematerialsubtypeisgivenbyPRO_MATPROP_SUB_TYPE thattakesthe
followingvalues:
Core:Solids,Parts,andMaterials 119•PRO_MATERIAL_SUB_TYPE_LINEAR—Specifies thelinearelastic
materialtype.Thisisthedefaultvalue.
•PRO_MATERIAL_SUB_TYPE_HYPERELASTICSpecifies thehyperelastic
(non-linear) materialtypes,suchasrubber,thatexhibitinstantaneous elastic
responsetolargestrains.
•PRO_MATERIAL_SUB_TYPE_ELASTOPLASTIC—Specifies thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(non-linear) materialtypes,suchasrubber,thatexhibitinstantaneous elastic
responsetolargestrains.
•PRO_MATERIAL_SUB_TYPE_ELASTOPLASTIC—Specifies the
elastoplastic (non-linear) materialtypes,suchasmetals,withthefollowing
isotropichardening laws:
○PerfectPlasticity—Given bythevalue PRO_MATERIAL_HARDENING_
PERFECT_PLASTICITY
○LinearHardening—Given bythevalue PRO_MATERIAL_HARDENING_
LINEAR_HARDENING
○PowerLaw—Given bythevalue PRO_MATERIAL_HARDENING_
POWER_LAW
○Exponential Law—Given bythevalue PRO_MATERIAL_HARDENING_
EXPONENTIAL_LAW
TheabovethreesubtypesareavailableonlyforPRO_MATERIAL_TYPE_
STRUCTURAL_ISOTROPIC andPRO_MATERIAL_TYPE_THERMAL_
ISOTROPIC materialtypes.
FromCreoParametric 3.0onward,twoadditional materialtypes PRO_
MATERIAL_FATIGUE_MAT_TYPE_FERROUS andPRO_MATERIAL_
FATIGUE_MAT_TYPE_OTHER havebeenaddedforfatigueanalysis.The
materialtypes PRO_MATERIAL_FATIGUE_MAT_TYPE_UNALLOYED_
STEELSandPRO_MATERIAL_FATIGUE_MAT_TYPE_LOW_ALLOY_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFATIGUE_MAT_TYPE_OTHER havebeenaddedforfatigueanalysis.The
materialtypes PRO_MATERIAL_FATIGUE_MAT_TYPE_UNALLOYED_
STEELSandPRO_MATERIAL_FATIGUE_MAT_TYPE_LOW_ALLOY_
STEELSareobsolete.UsethematerialtypePRO_MATERIAL_FATIGUE_MAT_
TYPE_FERROUS instead.Thefollowingsurfacefinishtypesforfatigueanalysis
arealsoobsolete:
•PRO_MATERIAL_FATIGUE_FINISH_FORGED
•PRO_MATERIAL_FATIGUE_FINISH_WATER_CORRODED
•PRO_MATERIAL_FATIGUE_FINISH_SEA_WATER_CORRODED
•PRO_MATERIAL_FATIGUE_FINISH_NITIRIDED
•PRO_MATERIAL_FATIGUE_FINISH_SHOT_PEENED
PTCrecommends thatyoureviewyourexistingCreoParametric TOOLKIT
applications andmodifythecodeasappropriate toensurethattheapplications
workcorrectlyforthefatiguematerialsandmaterialfinishtypes.
Functions Introduced:
•ProMaterialPr opertyGet()
•ProSolidBodyMaterialGet()
120 Creo®Parametric TOOLKIT User’sGuide•ProSolidBodyMaterialSet()
•ProUnitExpre ssionGet()
•ProMaterialPr opertySet()
•ProUnitInitByExpr ession()
•ProMaterialDescriptionGet()
•ProMaterialDescriptionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUnitExpre ssionGet()
•ProMaterialPr opertySet()
•ProUnitInitByExpr ession()
•ProMaterialDescriptionGet()
•ProMaterialDescriptionSet()
•ProMaterialPr opertyDelete()
Thefunctions ProMaterialDataGet() andProMaterialDataSet()
havebeendeprecated, anddonotsupportalloftheavailablematerialproperties.
PTCrecommends thatforaccessingmaterialproperties, youconvertthe
ProMaterial typetoamodelitemusing ProModelitemByNameInit(),
anduseProMaterialPropertyGet() and
ProMaterialPropertySet() theproperties ofthatitem,respectively .
ApartcreatedinCreoParametric 7.0.0.0andlater,cancontainmultiplesolid
bodieswhereeachbodycanhaveitsownmaterialassignment. Apartcreatedin
anearlierreleaseofCreoParametric containsonebodyandonematerialis
assignedtothepart.
Thefunction ProSolidBodyMaterialSet() assignsamaterialtothe
specifiedbody.Youcansetthedefaultmaterialbyspecifying thevalueofthe
systemparameter PTC_MASTER_MATERIAL asPTC_SYSTEM_MTRL_PROPS.
Inlegacyparts,thevalueofPTC_MASTER_MATERIAL isthematerialassignedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedbody.Youcansetthedefaultmaterialbyspecifying thevalueofthe
systemparameter PTC_MASTER_MATERIAL asPTC_SYSTEM_MTRL_PROPS.
Inlegacyparts,thevalueofPTC_MASTER_MATERIAL isthematerialassigned
tothepart.Theinputargumentsfollow:
•body—Body forwhichthematerialneedstobeassigned.
•mtl—Name ofthematerialthatneedstobeassignedtothebody.
Usethefunction ProSolidBodyMaterialGet() toretrievetheinformation
ofthematerialassignedtothebody.
Note
RefertotheCreoParametric onlinehelpformoreinformation about
Materials.
Ifyoudonotassignamaterialtoabody,CreoParametric assigns PTC_
GENERIC_MATERIAL materialtothebody.Thedensityofthismaterialaswell
asotherproperties areempty.
Thefunction ProMaterialPropertyGet() returnsthevalueandtheunits
foramaterialproperty.
Core:Solids,Parts,andMaterials 121Note
ThenameoftheunitsreturnedcanbethenameofaCreoParametric unit,
whichmaynotbeobviously understood byauser.Use
ProUnitExpressionGet() tochangethisnametofamiliarunits.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThenameoftheunitsreturnedcanbethenameofaCreoParametric unit,
whichmaynotbeobviously understood byauser.Use
ProUnitExpressionGet() tochangethisnametofamiliarunits.
Usethefunction ProMaterialPropertySet() tocreateormodifya
materialproperty.Ithasthefollowinginputparameters:
•p_material—Specifies thematerialasdefinedbyProMaterialItem.
•prop_type—Specifies thematerialpropertytypeasdefinedby
ProMaterialPropertyType.
•p_value—Specifies thematerialpropertyvalue.
•p_units—Specifies thematerialpropertyunits.
Note
ThisfunctionexpectstheCreoParametric unitnameforsomeunit
properties. Toobtainthisname,passtheuser-visibleunitsthrough
ProUnitByExpressionInit().
Thefollowingtabledisplaysthepossiblecombinations ofargumentsforp_value
andp_units:
p_value p_units Istheproperty
alreadycreatedinthe
material?Result
Anyvalue Appropriate unitsforthis
property,orNULL,ifthe
propertyisunitlessNO Propertyiscreatedwith
thegivenunitsandvalue.
Anyvalue NULL NO Propertyiscreatedwith
thegivenvalueusingthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmaterial?Result
Anyvalue Appropriate unitsforthis
property,orNULL,ifthe
propertyisunitlessNO Propertyiscreatedwith
thegivenunitsandvalue.
Anyvalue NULL NO Propertyiscreatedwith
thegivenvalueusingthe
appropriate unitsfrom
theownermodel.
Anyvalue Currentunitsforthis
property,orNULL,ifthe
propertyisunitlessYES Propertyvalueischanged
tothenewvalue.
Anyvalue NULL YES Propertyvalueischanged
tothenewvalue(which
isinterpreted asbeingin
theunitsfromtheowner
model)
122 Creo®Parametric TOOLKIT User’sGuidep_value p_units Istheproperty
alreadycreatedinthe
material?Result
Thecurrentvalue Newappropriate units YES Propertyunitsare
changedbutthevalueis
interpreted asbeingfor
thenewunits.
NULL Newappropriate units YES Propertyunitsare
changedandthecurrent
valueisconverted tothe
newunits.
Note
Whenusing ProMaterialPropertySet() tochangethesheetmetal Y-
factororbendtableassignedtothecurrentmaterial,passthecurrentmaterial
toProMaterialCurrentSet() againtoforceCreoParametric toupdatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Whenusing ProMaterialPropertySet() tochangethesheetmetal Y-
factororbendtableassignedtothecurrentmaterial,passthecurrentmaterial
toProMaterialCurrentSet() againtoforceCreoParametric toupdate
thelengthcalculations developed bysheetmetal.
Usethefunction ProMaterialDescriptionGet() togetthematerial
description. Thispropertyisalsoaccessible asthematerialproperty PRO_
MATPROP_MATERIAL_DESCRIPTION.
Usethefunction ProMaterialDescriptionSet() tosetthematerial
description.
Usethefunction ProMaterialPropertyDelete() toremoveaproperty
fromthematerialdefinition.
MaterialInputandOutput
Functions Introduced:
•ProMaterialfileWr ite()
•ProMaterialfileRead()
Materialproperties arefrequently storedintextfilesaccessible forrepeated
assignment toparts.CreoParametric TOOLKITincludesfunctionsthatwriteto
andreadthesefiles.
Thefunction ProMaterialfileWrite() writestheinformation containedin
aProMaterial objecttoafilewiththespecifiedname.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandreadthesefiles.
Thefunction ProMaterialfileWrite() writestheinformation containedin
aProMaterial objecttoafilewiththespecifiedname.
Theformatofthisfileisthenewmaterialfileformatwhichisconsistent withthe
CreoParametric materialslibrary.
Thefunction ProMaterialfileRead() readsfromamaterialfile,the
properties ofthematerialwiththespecifiedname.Thenameofthefilereadcan
beeither:
Core:Solids,Parts,andMaterials 123•<name>.mtl—Specifies anewmaterialfileformat.
•<name>.mat—Specifies anoldmaterialfileformat(pre-Wildfire3.0).
Ifthematerialisnotalreadyinthepartdatabase, ProMaterialfileRead()
addsthematerialtothedatabaseafterreadingthematerialfile.Ifthematerialis
alreadyinthedatabase,thefunctionreplacesthematerialproperties inthe
databasewiththosecontainedinthematerialfile.
Example5:WorkingwithMaterialsandMaterial
Properties
ThesamplecodeinUgMaterial.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_param showshowto
workwithmaterialsandmaterialproperties.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExample5:WorkingwithMaterialsandMaterial
Properties
ThesamplecodeinUgMaterial.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_param showshowto
workwithmaterialsandmaterialproperties.
Example6:CreatingaNon-linearMaterial
ThesamplecodeinUgSolidMaterial.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_solid showshowto
createanon-linear materialandassignittoasolid.
124 Creo®Parametric TOOLKIT User’sGuide4
Core:SolidBody
Introduction toSolidBody........................................................................................126
Statesofbodies......................................................................................................126
CreatingaBody......................................................................................................127
ListingFeatures......................................................................................................128xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxListingFeatures......................................................................................................128
MultibodyOperations...............................................................................................129
Thischapterdescribeshowtoaccess,create,ordeletebodiesinamodel.
125Introduction toSolidBody
InCreoParametric 7.0.0.0andlater,theterm“solidbody”denotesacontainer
objectforsolidgeometry.
InearlierversionsofCreoParametricall solidgeometryinapartisconsidered as
onepieceofasinglematerial,evenwhenthegeometryhasdisjointvolumes.
StartinginCreoParametric 7.0.0.0,youcancreatepartsthatcontainoneormore
geometric bodies.Eachbodycanbehandledindividually ,andcanhavedifferent
characteristics. Forexample,youcanassignadifferentmaterialtoeachbody.
Bodiescontainonlysolidgeometry.Nonsolidentities,likedatums,curves,and
quilts,arenotcontainedinanybody.
Whenyoucreateanewpart,ithasanemptybodyinit.ThisbodywillcontainthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBodiescontainonlysolidgeometry.Nonsolidentities,likedatums,curves,and
quilts,arenotcontainedinanybody.
Whenyoucreateanewpart,ithasanemptybodyinit.Thisbodywillcontainthe
solidgeometrycreatedbythefeatures.Ifnosolidgeometryiscreated,oraslong
asthepartcontainsonlynonsolidgeometry,thisbodyremainsempty.Apartmust
alwayshaveatleastonebodyinit.
WhenyouretrieveapartthatwascreatedusingaversionearlierofCreo
Parametric ,itshowsasinglebodyinit.Thisbodycontainsallthesolidgeometry
inthepart,ifanyexists.
UsingCreoParametric solidbodyfeature,youcancreatepartswithoneormore
geometric bodies.Abodyconsistsofsolidgeometryofthesamematerial.You
canassignadifferentmaterialtoeachbodyandasinglepartcanhavemorethan
onematerial.
SolidBodyObjects
Thestructure ProSolidBody describesthecontentsthesolidbodyobject.This
objectusesthesamedeclaration astheProModelitem object,whichisas
follows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProSolidBody;
Statesofbodiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxobjectusesthesamedeclaration astheProModelitem object,whichisas
follows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProSolidBody;
Statesofbodies
Whenabodyhasgeometry,itdoesnothaveaspecialstate.Abodycanhavea
statederivedfromfeaturesandgeometry.
•NoContributing Features— Nofeaturecontributes geometrytothe
body.
126 Creo®Parametric TOOLKIT User’sGuide•NoGeometry— Featureswhichcontribute tothebody,howeverother
featurescuttheentiregeometryofthisbody.Orallthecontributing features
aresuppressed.
•Construction—Does notparticipate inmassproperties calculations andis
notconsidered inglobalorvolumeinterference analysisorincollision
detection.Theconstruction statedoesnotchangetheotherproperties ofthe
body.Settingabodytoconstruction stateisreversible.
CreatingaBody
Anewpartiscreatedwithadefaultbody.ThisbodyisintheNo
Contributing Features state.Whenyouaddsolidgeometrytothispart,
youcanaddtothisbody,orcreateanewbody.YoucandeletebodiesthatareinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatingaBody
Anewpartiscreatedwithadefaultbody.ThisbodyisintheNo
Contributing Features state.Whenyouaddsolidgeometrytothispart,
youcanaddtothisbody,orcreateanewbody.Youcandeletebodiesthatarein
theNoContributing Features state.Whenyoudeleteabody,itis
removedfromthepartandtheBodiesfolderinthemodeltree.Theparameters
andrelationsforthebodyaredeleted.
Functions introduced:
•ProSolidBodyCr eate()
•ProSolidBodiesCollect()
•ProSolidDefaultBodyGet()
•ProSolidDefaultBodySet()
•ProSolidBodySurfaceV isit()
•ProSolidBodyDelete()
•ProSolidBodyStateGet()
•ProSolidBodyIsConstruction()
•ProSolidBodyConstructionSet()
•ProSolidBodyOutlineGet()
•ProSolidBodyIsSheetmetal()
Thefunction ProSolidBodyCreate() createsanewbody.Theinput
argument sldisthesolidowneronwhichthebodyneedstobecreated.Theoutput
argument bodyisthebodythatiscreated.
RefertotheCreoParametric onlinehelpformoreinformation aboutbody
creation.
Thefunction ProSolidBodiesCollect() collectsallthebodiesinthe
specifiedsolid.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxargument bodyisthebodythatiscreated.
RefertotheCreoParametric onlinehelpformoreinformation aboutbody
creation.
Thefunction ProSolidBodiesCollect() collectsallthebodiesinthe
specifiedsolid.
Thefunction ProSolidDefaultBodyGet() returnsthedefaultbodyinthe
specifiedsolid.
Core:SolidBody 127Thefunction ProSolidDefaultBodySet() setsthespecifiedbodyas
defaultbodyinthespecifiedsolid.Theinputargument default_body isthe
bodytobesetasthedefaultbody.
Usethefunction ProSolidBodySurfaceVisit() tovisitthesurfacesthat
areincludedinthespecifiedbody.
Thefunction ProSolidBodyDelete() deletesthebodyinthespecifiedsolid.
Whenyoudeleteabody,itisremovedfromthepartandtheBodiesfolderinthe
modeltree.
Thefunction ProSolidBodyStateGet() returnsthestateofthebodyandis
definedbytheenumerated datatypeProSolidBodyState andthevalid
valuesare:
•PRO_BODY_STATE_MISSING
•PRO_BODY_STATE_CONSUMED
•PRO_BODY_STATE_NO_CONTR_FEAT
•PRO_BODY_STATE_NO_GEOMETRY
•PRO_BODY_STATE_ACTIVExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesare:
•PRO_BODY_STATE_MISSING
•PRO_BODY_STATE_CONSUMED
•PRO_BODY_STATE_NO_CONTR_FEAT
•PRO_BODY_STATE_NO_GEOMETRY
•PRO_BODY_STATE_ACTIVE
Usethefunction ProSolidBodyIsConstruction() tocheckifthe
specifiedbodyisaconstruction body.
Usethefunction ProSolidBodyConstructionSet() tosetthespecified
bodyasaconstruction body.ThefunctionreturnstheerrorPRO_TK_NO_
CHANGEifthebodyisalreadyaconstruction body.
Usethefunction ProSolidBodyOutlineGet() toretrievetheregeneration
outlineofasolidbody,withrespecttothebasecoordinate systemorientation.
Thisoutlinedefinestheboundaryboxofthebody.Thefunctionreturns PRO_TK_
E_NOT_FOUND ifthesolidbodyisempty.
Thefunction ProSolidBodyIsSheetmetal() checksifthespecifiedbody
isanactivesheetmetal body.
InCreoParametric 7.0,asheetmetal partcanhaveasinglesheetmetal bodyand
anynumberofsolidbodies.
ListingFeatures
Functions Introduced:
•ProSolidBodyFeatur esGet()
Thefunction ProSolidBodyFeaturesGet() listsallthefeaturesthatarexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanynumberofsolidbodies.
ListingFeatures
Functions Introduced:
•ProSolidBodyFeatur esGet()
Thefunction ProSolidBodyFeaturesGet() listsallthefeaturesthatare
associated withthespecifiedbody.Theoutputargument features isa
ProArray offeatures.
ThefunctionreturnstheerrorPRO_TK_E_NOT_FOUND ifthereareno
contributing featuresassociated withthebody.
128 Creo®Parametric TOOLKIT User’sGuideMultibodyOperations
Eachbodyhasitsowngeometry.Youcanperformgeometric operations suchas
splittingabodyormergingwithotherbodies.Bodiescontribute tothemass
properties ofthemodel.Youcanselectbodiesasreferences forfeatures.Youcan
splitabodyintotwobodiesandalsoperformmoveorcopyoperations onbodies.
Thegeometryoftheoriginalbodyisdividedbetweentheoriginalbodyandthe
newbody.Formoreinformation onbodyoptionsandbodyoperations, refertothe
ElementTrees:SolidBodyonpage1038chapter.
YoucanusetheBooleanOperations featuretoperformgeometric operations such
as:
•Merge—Combines thegeometryoftwoormorebodiesintoonebody.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:SolidBodyonpage1038chapter.
YoucanusetheBooleanOperations featuretoperformgeometric operations such
as:
•Merge—Combines thegeometryoftwoormorebodiesintoonebody.
•Intersect—Keepsthegeometrythatissharedbytwoormorebodies.
•Subtract—Removes thegeometryofonebodyfromoneormorebodies.
Core:SolidBody 1295
Core:Features
FeatureObjects......................................................................................................131
VisitingFeatures.....................................................................................................131
FeatureInquiry........................................................................................................131
FeatureGeometry...................................................................................................137
Manipulating Features.............................................................................................137xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxManipulating Features.............................................................................................137
Manipulating FeaturesbasedonRegeneration Flags.................................................140
FeatureDimensions ................................................................................................142
Manipulating Patterns..............................................................................................142
CreatingLocalGroups.............................................................................................144
ReadAccesstoGroups...........................................................................................145
UpdatingorReplacingUDFs....................................................................................148
PlacingUDFs..........................................................................................................148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPlacingUDFs..........................................................................................................148
TheUDFInputDataStructureProUdfdata................................................................150
ReadingUDFProperties..........................................................................................157
NotificationonUDFLibraryCreation.........................................................................160
MultibodySupportinaUDFandaCopyfeature.........................................................160
ThischapterdescribestheCreoParametric TOOLKITfunctionsthatdealwith
featuresasawholeandthewaytheyrelatetoeachother.
AccesstothegeometryobjectscreatedbyfeaturesisdescribedintheCore:3D
Geometry onpage168chapter.
AccesstotheinternalstructureofafeatureisdescribedintheElementTrees:
Principles ofFeatureCreationonpage749chapter.
130 Creo®Parametric TOOLKIT User’sGuideFeatureObjects
FunctionIntroduced:
•ProFeatur eInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPrinciples ofFeatureCreationonpage749chapter.
130 Creo®Parametric TOOLKIT User’sGuideFeatureObjects
FunctionIntroduced:
•ProFeatur eInit()
Featuresarerepresented bytheobject ProFeature, whichisdeclaredasa
DHandle,ordatahandle.Itsharesthesamedeclaration asProModelitem and
ProGeomitem, andthereforecontainsthetypeandintegeridentifierasfieldsin
thestructure.
LikeProGeomitem, ProFeature isaninstanceofProModelitem.
ProFeature objectsarecontainedinProSolid objects,andcontain
ProGeomitem objects.
YoucancreateanewProFeature handleusingthefunction
ProFeatureInit().
VisitingFeatures
FunctionIntroduced:
•ProSolidFeatV isit()
Thefunction ProSolidFeatVisit() enablesyoutovisitallthefeaturesina
partorassembly.Itvisitsnotonlythosefeaturesvisibletotheuser,butalso
featuresusedinternallyforconstruction purposes.Toskipoversuchinternal,
“invisible” functions, callProFeatureVisibilityGet().
Notethatthefunction ProSolidFeatstatusGet() (described indetailinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturesusedinternallyforconstruction purposes.Toskipoversuchinternal,
“invisible” functions, callProFeatureVisibilityGet().
Notethatthefunction ProSolidFeatstatusGet() (described indetailin
theCore:Solids,Parts,andMaterialsonpage91chapter.)providesanarrayof
integeridentifiers forallthefeaturesinasolid,therebyofferinganalternateway
offindingallthefeatures.
FeatureInquiry
Functions Introduced:
•ProFeatur eTypeGet()
•ProFeatur eSubtypeGet()
•ProFeatur eTypenameGet()
•ProFeatur eStatusGet()
•ProFeatur eStatusflagsGet()
•ProFeatur eIsIncomplete()
•ProFeatur eIsNcseq()
•ProFeatur eSolidGet()
Core:Features 131•ProFeatur eChildr enGet()
•ProFeatur ePar entsGet()
•ProFeatur eSelectionGet()
•ProFeatur eHasGeomchks()
•ProFeatur eIsReadonly()
•ProFeatur eIsEmbedded()
•ProInsertModeIsActive()
•ProFeatur eCopyinfoGet()
•ProFeatur eZoneGet()
•ProFeatur eZonesectionCr eate()
•ProFeatur eZonesectionGet()
•ProZoneRefere nceFre e()
•ProZoneRefere nceArrayFr ee()
•ProFeatur eZonesectionW ithflipCre ate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProFeatur eZoneGet()
•ProFeatur eZonesectionCr eate()
•ProFeatur eZonesectionGet()
•ProZoneRefere nceFre e()
•ProZoneRefere nceArrayFr ee()
•ProFeatur eZonesectionW ithflipCre ate()
•ProFeatur eZoneXsecgeomGet()
•ProFeatur eZoneXsecGeomArrayFre e()
•ProModelitemIsZone()
•ProFeatur eIsInFooter()
•ProFeatur eToFooterMove()
•ProFeatur eFromFooterMove()
•ProFeatur eIsComponentLike()
Asdescribedearlier,thefunction ProSolidFeatVisit() findsallthe
featuresbelonging toapartoranassembly.Thefeatureinquiryfunctionsprovide
moreinformation aboutaparticularfeature.
Thefunction ProFeatureTypeGet() providesthetypeofthefeature.This
featuretypeusesthedatatypeProFeattype, whichisreallyanintegerthat
takesdefinedvaluessuchasthefollowing:
•PRO_FEAT_FIRST_FEAT
•PRO_FEAT_HOLE
•PRO_FEAT_SHAFT
•PRO_FEAT_ROUND
SeetheincludefileProFeatType.h forthelistofdefinedvalues.
132 Creo®Parametric TOOLKIT User’sGuideThefunction ProFeatureTypenameGet() returnsthenameofthefeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_FEAT_SHAFT
•PRO_FEAT_ROUND
SeetheincludefileProFeatType.h forthelistofdefinedvalues.
132 Creo®Parametric TOOLKIT User’sGuideThefunction ProFeatureTypenameGet() returnsthenameofthefeature
type.GivenaProFeature pointertoaspecificfeature,thisfunctionreturnsthe
nameofthefeaturetype,forexample, CHAMFER, DATUM, COORDINATE
SYSTEM,andsoon.ArgumentstothisfunctionmustnotbeNULL.
Thefunction ProFeatureSubtypeGet() providesthesubtype(suchassheet
metal)ofaspecifiedfeature.Notethatnotallfeaturessupportsubtypes.Thisis
likeviewingvalidmodelsubtypesbyopeningtheModelTreesettingscommand in
CreoParametric. ClickSettings ▶▶TreeColumnsmenuandthenselectFeat
SubtypeintheModelTreeColumnsdialogbox,asanadditional displaycolumn.
Thefunction ProFeatureStatusGet() classifiesthefeatureaccording tothe
followingstatusvalues:
•PRO_FEAT_ACTIVE—An ordinaryfeature.
•PRO_FEAT_SUPPRESSED—A suppressed feature.
•PRO_FEAT_FAMTAB_SUPPRESSED—A featuresuppressed duetothe
familytablesettings.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingstatusvalues:
•PRO_FEAT_ACTIVE—An ordinaryfeature.
•PRO_FEAT_SUPPRESSED—A suppressed feature.
•PRO_FEAT_FAMTAB_SUPPRESSED—A featuresuppressed duetothe
familytablesettings.
•PRO_FEAT_SIMP_REP_SUPPRESSED—A featuresuppressed duetothe
simplified representation.
•PRO_FEAT_PROG_SUPPRESSED—A featuresuppressed duetoPro/
PROGRAM.
•PRO_FEAT_INACTIVE—A featurethatisnotsuppressed, butisnot
currentlyinuseforreasonsotherthantheonesidentifiedabove.
•PRO_FEAT_UNREGENERATED—A featurethathasnotyetbeenregenerated.
Thisisduetoaregeneration failureorifthestatusisobtainedduringthe
regeneration process.
•PRO_FEAT_INVALID—The featurestatuscouldnotberetrieved.
Thefunction ProFeatureStatusflagsGet() retrievesthebitmask
containing oneormoreofthefollowingfeaturestatusbitflagsforaspecified
feature:
•PRO_FEAT_STAT_INVALID—Specifies aninvalidfeature.
•PRO_FEAT_STAT_INACTIVE—Specifies aninactivefeature.Ifthebitflag
issetto0,thenitmeansanactivefeature.
•PRO_FEAT_STAT_ACTIVE—Specifies anactivefeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_FEAT_STAT_INACTIVE—Specifies aninactivefeature.Ifthebitflag
issetto0,thenitmeansanactivefeature.
•PRO_FEAT_STAT_ACTIVE—Specifies anactivefeature.
•PRO_FEAT_STAT_FAMTAB_SUPPRESSED—Specifies afeature
suppressed duetothefamilytablesettings.
•PRO_FEAT_STAT_SIMP_REP_SUPPRESSED—Specifies afeature
suppressed duetothesimplified representation.
•PRO_FEAT_STAT_PROG_SUPPRESSED—Specifies afeaturesuppressed
duetoPro/PROGRAM.
Core:Features 133•PRO_FEAT_STAT_SUPPRESSED—Specifies asuppressed feature.
•PRO_FEAT_STAT_UNREGENERATED—Specifies anactivefeaturethathas
notyetbeenregenerated. Thisisduetoaregeneration failureorifthestatusis
obtainedduringtheregeneration process.
•PRO_FEAT_STAT_FAILED—Specifies afailedfeature.
•PRO_FEAT_STAT_CHILD_OF_FAILED—Specifies achildofafailed
feature.
•PRO_FEAT_STAT_CHILD_OF_EXT_FAILED—Specifies achildofan
externalfailedfeature.
Thefunction ProFeatureIsIncomplete() tellsyouwhetheraspecified
featureisincomplete. Anincomplete featureisonethathasbeencreatedbyusingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexternalfailedfeature.
Thefunction ProFeatureIsIncomplete() tellsyouwhetheraspecified
featureisincomplete. Anincomplete featureisonethathasbeencreatedbyusing
ProFeatureCreate() fromaCreoParametric TOOLKITapplication, but
whichdoesnotyetcontainallthenecessaryfeatureelementstoallow
regeneration.
Thefunction ProFeatureIsNcseq() determines whetherafeatureisaCreo
NCsequence.
TheProFeatureSolidGet() functionprovidestheidentifierofthesolidthat
ownsthespecifiedfeature.
TheProFeatureChildrenGet() andProFeatureParentsGet()
functionsgetthechildrenandparentsofthespecifiedfeature.Forthesefunctions,
theparentofafeaturemeansafeatureitdirectlydependson,andachildisa
featurethatdirectlydependsonit.ThisdiffersfromtheCreoParametric
commandInfo▶▶Feature,whichalsoshowsindirectdependencies.
Thefunction ProFeatureSelectionGet() isusedforfeaturesthatwere
createdinapartasaresultofafeatureinaparentassembly.Forexample,ifyou
createaholeinAssembly mode,thenselectaparttobeintersected bythathole,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProFeatureSelectionGet() isusedforfeaturesthatwere
createdinapartasaresultofafeatureinaparentassembly.Forexample,ifyou
createaholeinAssembly mode,thenselectaparttobeintersected bythathole,
thegeometryoftheholeisvisibletoCreoParametric TOOLKITasbelonging to
thepart,eveniftheoriginalfeatureisspecifiedasbeingvisibleattheassembly
level.Thisgeometry—a listofthesurfacesformingthehole—belongs toafeature
inthepartwhosetypeisPRO_FEAT_ASSEM_CUT. Thefunction
ProFeatureSelectionGet(), whenappliedtothatpartfeature,identifies
theassembly,andthepathdownthroughittothepartinquestion,whichcontains
theoriginalfeature.
Duringregeneration, CreoParametric performsgeometrycheckingtoprevent
regeneration errors.Thegeometrycheckprocessidentifiesfeaturesthatcould
causeproblemsifthepartorassemblyismodified,butwhichdonotcause
regeneration failureinthemodelinitspresentstate.The
ProFeatureHasGeomchks() functionoutputsavariableoftype
ProBoolean thatindicateswhetheraparticularfeature,identifiedasaninputxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxregeneration failureinthemodelinitspresentstate.The
ProFeatureHasGeomchks() functionoutputsavariableoftype
ProBoolean thatindicateswhetheraparticularfeature,identifiedasaninput
argumenttothefunction,hasgeometrychecks.
134 Creo®Parametric TOOLKIT User’sGuideThefunction ProFeatureIsReadonly() providesinformation aboutthe
readstatusofthespecifiedfeature.Itsfirstargumentisapointertothefeature’s
(ProFeature) handle.Ifthefeatureisreadonly,thefunctionoutputsa
ProBoolean withthevalue PRO_B_TRUE; otherwise, thevalueisPRO_B_
FALSE.
Thefunction ProFeatureIsEmbedded() identifieswhetherthefeatureisan
embedded datum.Embedded featuresarevisibleinthemodeltree,butcannotbe
usedasreferenceparentsforfeaturesotherthanthefeatureintowhichtheyare
embedded.
Todetermine whetherinsertmodeisactiveinaspecifiedsolid,usethefunction
ProInsertModeIsActive(). Ifactivated,featuresareinsertedintothe
featurelistafterthefeaturespecifiedwhen
ProFeatureInsertModeActivate() wascalled.NewfeaturescontinuetoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProInsertModeIsActive(). Ifactivated,featuresareinsertedintothe
featurelistafterthefeaturespecifiedwhen
ProFeatureInsertModeActivate() wascalled.Newfeaturescontinueto
beinserteduntilyoucallthefunction ProInsertModeCancel(). Seethe
sectionManipulating Featuresonpage137formoreinformation aboutinsert
mode.
Thefunction ProFeatureCopyinfoGet() returnsinformation abouta
copiedfeature.Theinformation includesthetypeofcopyoperation, dependency ,
sourcefeature,andadditional featurescopiedinthesameoperation. Thisfunction
supersedes thePro_copy_info structurereturnedbythePro/Develop function
prodb_feature_info().
Thefunction ProFeatureZoneGet() returnsthefollowingparameters related
toafeaturezone:
•p_planes—ProArray ofplanes.
•p_oper_arr—ProArray ofoperations; where 0specifiesintersection ofhalf
spacesand1specifiesunionofhalfspaces.CreoParametric retainsthe
materialthatbelongstotheintersection orunionofthehalfspacesofthe
planes.
Thefunction ProFeatureZonesectionCreate() createsazonefeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspacesand1specifiesunionofhalfspaces.CreoParametric retainsthe
materialthatbelongstotheintersection orunionofthehalfspacesofthe
planes.
Thefunction ProFeatureZonesectionCreate() createsazonefeature
handleusingreferenceplanesandoperations. Theinputargumentsareasfollows:
•p_solid—A handletothemodel.
•zone_r efs—AnarrayofzonereferenceplanesoftypeProZoneReference.
Thestructure ProZoneReference containsthegeometric IDofthe
referencezoneplane,thevaluefortheoperation, thatis,0or1andthe
memberIDoftheparttowhichthereferenceplanebelongsto.PassNULLto
memb_id_tab ifthefeatureisownedbythepartonwhichthezoneisbeing
created.
CreoParametric retainsthematerialthatbelongstotheintersection orunion
ofthehalfspacesofthereferenceplanes.
Core:Features 135•zone_name—The nameofthezonefeaturehandle.Ifazonewiththespecified
nameexists,thenthefunctionreturnstheerrorPRO_TK_E_FOUND andthe
zoneisnotcreated.
Thefunction ProFeatureZonesectionGet() returnsthezonereferencesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnameexists,thenthefunctionreturnstheerrorPRO_TK_E_FOUND andthe
zoneisnotcreated.
Thefunction ProFeatureZonesectionGet() returnsthezonereferences
forthespecifiedfeature.Theoutputargument p_zone_refs containsanarray
ofplanesoftypeProZoneReferenceWithflip. Thestructure
ProZoneReferenceWithflip contains:
•Thegeometric IDofthereferencezoneplane.
•Thevaluefortheoperation, where 0specifiesintersection ofhalfspacesthat
is,theANDoperatorand1specifiesunionofhalfspacesthatis,theOR
operator.
•ThememberIDoftheparttowhichthereferenceplanebelongs.
•Thesideoftheplanewherethemodeliskept.1indicatespositivenormalof
theplaneand–1indicatestheoppositeside.
Usethefunction ProZoneReferenceFree() tofreethememoryallocatedto
thezonereferencedata.
Usethefunction ProZoneReferenceArrayFree() tofreetheProArray
ofzonereferencedata.
Thefunction ProFeatureZonesectionWithflipCreate() createsa
zonefeatureusingreferenceplanesandoperations. Thisfunctionallowsyouto
flipthedirectionofzoneplaneswhilecreatingthezonefeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProFeatureZonesectionWithflipCreate() createsa
zonefeatureusingreferenceplanesandoperations. Thisfunctionallowsyouto
flipthedirectionofzoneplaneswhilecreatingthezonefeature.
Thefunction ProFeatureZoneXsecgeomGet() createsanarrayofcross
sectiongeometryoftypeProXsecGeometry foreachzoneplane.Itreturnsan
arrayofthesearraysinthespecifiedzonefeature.Usethefunction
ProFeatureZoneXsecGeomArrayFree() tofreethememoryallocatedfor
theProArray ofProArrays oftypeProXsecGeometry.
Thefunction ProModelitemIsZone() checksifthespecifiedmodelitemisa
zonefeature.Specifythehandletothemodelitemastheinputargumentofthis
function.
Usethefunction ProFeatureIsInFooter() tocheckifthespecifiedfeature
iscurrentlylocatedinthemodeltreefooter.Thefooterisasectionofthemodel
treethatlistscertaintypesoffeaturessuchas,component interfaces, annotation
features,zones,referencefeatures,publishgeometry,andanalysisfeature.The
featuresinthefooterarealwaysregenerated attheendofthefeaturelist.Youcanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatures,zones,referencefeatures,publishgeometry,andanalysisfeature.The
featuresinthefooterarealwaysregenerated attheendofthefeaturelist.Youcan
movefeatures,suchas,referencefeatures,annotation features,andsoon,tothe
footer.Somefeatures,suchas,component interfaces, zones,andsoon,are
automatically placedinthefooter.RefertotheCreoParametric onlineHelpfor
moreinformation onfooter.RefertotheCreoParametric onlineHelpformore
information onfooter.
Usethefunction ProFeatureToFooterMove() tomovethespecifiedfeature
intothemodeltreefooter.
136 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureFromFooterMove() tomovethespecified
featureoutofthemodeltreefooter.
Somefeaturesbehavelikecomponents becausetheyhavesomeproperties thatare
similartothoseofcomponents. Thesefeatureshavesomeassociation withasolid
modelandareinterpreted asplacedcomponents. Whenacomponent isplacedit
meansithasbeenexplicitlypositioned atsomelocationintheassembly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelandareinterpreted asplacedcomponents. Whenacomponent isplacedit
meansithasbeenexplicitlypositioned atsomelocationintheassembly.
Examples ofsuchfeaturesaresolidwelds,physicalsensors,andsoon.Solid
weldsorganizetheirgeometryasaspecialinternalsolidmodel,whichgivesthem
component-like characteristics. Similarly,physicalsensorsrepresentactual
hardwarethatisplacedonthemodeltomeasureparameters. Usethefunction
ProFeatureIsComponentLike() toidentifycomponents andotherfeatures
thatbehavelikecomponents. RefertothechapterAssembly: BasicAssembly
Accessonpage1112formoreinformation onplacedcomponents.
FeatureGeometry
Functions Introduced:
•ProFeatur eGeomitemV isit()
•ProGeomitemFeatur eGet()
Forinformation aboutfeaturegeometry,seethechapterCore:3DGeometry on
page168.
Manipulating Features
Functions Introduced:
•ProFeatur eDelete()
•ProFeatur eSuppr ess()
•ProFeatur eResume()
•ProFeatur eRedefine()
•ProFeatur eInsertModeActivate()
•ProInsertModeCancel()
•ProFeatur eReadonlySet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProFeatur eDelete()
•ProFeatur eSuppr ess()
•ProFeatur eResume()
•ProFeatur eRedefine()
•ProFeatur eInsertModeActivate()
•ProInsertModeCancel()
•ProFeatur eReadonlySet()
•ProFeatur eReadonlyUnset()
•ProFeatur eReorder()
•ProFeatur eNumberGet()
Thefunctions ProFeatureDelete() andProFeatureSuppress() act
liketheright-mouse buttonCreoParametric commands DeleteandSuppress,
excepttheydonotrepaintthewindow.Youcanprocessmanyfeaturesinasingle
Core:Features 137callusinganinputoftypeProFeatlist. Eachofthesefunctionstakesanarray
ofoptionsastheinputthatindicateswhethertoalsodeleteorsuppressfeatures
dependent onthosebeingactedondirectly.Theoptionsusedwhiledeletingor
suppressing featuresareasfollows:
•PRO_FEAT_DELETE_NO_OPTS—Delete orsuppressthefeatureswithout
deletingorsuppressing theirdependent childrenfeatures.Thismayresultin
regeneration failures.Usetheoption PRO_FEAT_DELETE_FIX, oroneof
theCLIPoptionstofixthesefailures.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdeletingorsuppressing theirdependent childrenfeatures.Thismayresultin
regeneration failures.Usetheoption PRO_FEAT_DELETE_FIX, oroneof
theCLIPoptionstofixthesefailures.
•PRO_FEAT_DELETE_CLIP—Delete orsuppressthefeaturesalongwith
theirdependent childrenfeatures.
•PRO_FEAT_DELETE_FIX—Delete orsuppressthefeatureswithoutdeleting
orsuppressing theirdependent childrenfeatures.Thefixmodeluserinterface
willbepromptedincaseofaregeneration failure.Thisoptionmustbeused
onlyintheResolvemode.Otherwise, thefunctionreturns PRO_TK_BAD_
CONTEXT.
•PRO_FEAT_DELETE_RELATION_DELETE—Delete relationswithobsolete
dimensions.
•PRO_FEAT_DELETE_RELATION_COMMENT—Change relationswith
obsoletedimensions intocomments.
•PRO_FEAT_DELETE_CLIP_ALL—Delete orsuppressthefeaturesalong
withallthefollowingfeatures.
•PRO_FEAT_DELETE_INDIV_GP_MEMBERS—Individually deleteor
suppressthefeaturesoutofthegroupstowhichtheybelong.Ifthisoptionis
notincluded,theentiregroupoffeaturesisdeletedorsuppressed. Thisoptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_FEAT_DELETE_INDIV_GP_MEMBERS—Individually deleteor
suppressthefeaturesoutofthegroupstowhichtheybelong.Ifthisoptionis
notincluded,theentiregroupoffeaturesisdeletedorsuppressed. Thisoption
canbeincludedonlyiftheoption PRO_FEAT_DELETE_CLIP isalso
included.
•PRO_FEAT_DELETE_CLIP_INDIV_GP_MEMBERS—Individually delete
orsuppressthechildrenoffeaturesoutofthegrouptowhichtheybelong.If
thisoptionisnotincluded,theentiregroupcontaining thefeaturesandtheir
childrenisdeletedorsuppressed. Thisoptioncanbeincludedonlyifthe
options PRO_FEAT_DELETE_CLIP andPRO_FEAT_DELETE_INDIV_
GP_MEMBERS arealsoincluded.
•PRO_FEAT_DELETE_KEEP_EMBED_DATUMS—Retain theembedded
datumsstoredinafeaturewhiledeletingthefeatureusing
ProFeatureDelete(). Ifthisoptionisnotincluded,theembedded
datumswillbedeletedalongwiththeparentfeature.
Thefunction ProFeatureRedefine() isequivalent totheCreoParametric
commandFeature>Redefine.Additionally ,itcanredefineanexistingfeaturewithxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumswillbedeletedalongwiththeparentfeature.
Thefunction ProFeatureRedefine() isequivalent totheCreoParametric
commandFeature>Redefine.Additionally ,itcanredefineanexistingfeaturewith
thenewelementtree.Thedatapassedinthroughthenewelementtreereplaces
theexistingdatainthefeature.
138 Creo®Parametric TOOLKIT User’sGuideCreoParametric TOOLKITprovidesaccesstotheCreoParametric featureinsert
modefunctionality withtheProFeatureInsertModeActivate() and
ProInsertModeCancel() functions. Thefunction
ProFeatureInsertModeActivate() takesasingleargument—the handle
tothefeatureafterwhichnewfeaturesaretobeinserted.Thisfeaturebecomesthe
lastfeatureinthefeatureregeneration list.Allfeaturesthathadappearedafterthat
featurearetemporarily suppressed. Newfeaturesareaddedafterthe(new)last
feature.Featureinsertioncontinuesuntilinsertmodeisterminated withacallto
ProInsertModeCancel(). Itsfirstargumentisahandletothesolid,andthe
secondisaProBoolean thatenablesyoutospecifywhethersuppressed features
aretoberesumed.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProInsertModeCancel(). Itsfirstargumentisahandletothesolid,andthe
secondisaProBoolean thatenablesyoutospecifywhethersuppressed features
aretoberesumed.
Thefunction ProFeatureReadonlySet() assignsaread-onlystatusto
modelfeatures.ItsonlyargumentisaProFeature handlethatspecifiesthelast
featureinthefeaturelisttobedesignated asreadonly.Allpreceding featuresare
readonly;allfeaturesfollowingthisfeaturehavestandardaccess.FromCreo
Parametric 3.0onward,thefeaturesthataremaderead-onlyappearundera
separatecontainernodeatthetopofthemodeltree.ThenodehasitslabelasRead
OnlyFeaturesandalsohasapadlockglyphassociated withit.
Thefunction ProFeatureReadonlyUnset() removestheread-onlystatus
fromallfeaturesinthespecifiedsolid.FromCreoParametric 3.0onward,the
containernodeReadOnlyFeaturesisdismissed fromthemodeltreewhenthe
read-onlystatusisremoved.
Thefunction ProFeatureReorder() enablesyoutochangethepositionof
oneormorefeaturesinthefeatureregeneration sequence.Itsinputargumentsare
asfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxread-onlystatusisremoved.
Thefunction ProFeatureReorder() enablesyoutochangethepositionof
oneormorefeaturesinthefeatureregeneration sequence.Itsinputargumentsare
asfollows:
•ProSolid solid—The handletothesolidownerofthefeatures.
•int*feat_ids—An arrayoffeatureidentifiers thatspecifiesthefeaturestobe
reordered. Thearrayshouldcontainfeaturesthatformedacontiguous sublist
withintheoriginalfeatureregeneration list.Ifreordering agroup,allthe
featuresinthegroupincludingtheGroupHeaderfeaturemustbeincludedin
thisarray.
•intn_feats—The numberoffeaturestoreorder.
•intnew_feat_num—An integerthatindicatestheintendedlocationofthefirst
featureinthespecifiedsetafterreorder.Thisintegerisnotthefeature
identifier,butrathertheregeneration sequencenumberofthefeature.You
obtainthisnumberbycallingthefunction ProFeatureNumberGet().
Usethefunction ProSolidFeatstatusGet() togetthecurrentsequence
andstatuses.Youmustusecarewhenyouchangethesequenceoffeatures.Unlessxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxobtainthisnumberbycallingthefunction ProFeatureNumberGet().
Usethefunction ProSolidFeatstatusGet() togetthecurrentsequence
andstatuses.Youmustusecarewhenyouchangethesequenceoffeatures.Unless
youhaveadvanceknowledge oftherelationship betweenthefeaturesyouare
reordering, youshouldusethefunctions ProFeatureParentsGet() and
ProFeatureChildrenGet() beforechangingthefeatureordertoensurethat
nofeatureisreorderedtobebeforeitsparentfeatures.
Core:Features 139Manipulating Featuresbasedon
Regeneration Flags
Functions Introduced:
•ProFeatur eWithoptionsCreate ()
•ProFeatur eWithoptionsDelete()
•ProFeatur eWithoptionsSuppr ess()
•ProFeatur eWithoptionsResume()
•ProFeatur eWithoptionsRedefine()
•ProFeatur eWithoptionsReorder()
•ProFeatur eInsertmodeW ithoptionsActivate()
•ProInsertmodeW ithoptionsCancel()
Thefunctionsinthissectionenableyoutocreate,delete,ormanipulate the
specifiedfeaturesinasolid,basedonthebitmaskspecifiedbytheinputargumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProInsertmodeW ithoptionsCancel()
Thefunctionsinthissectionenableyoutocreate,delete,ormanipulate the
specifiedfeaturesinasolid,basedonthebitmaskspecifiedbytheinputargument
flags.Thebitmaskmustcontainoneormoreregeneration controlbitflagsofthe
typePRO_REGEN_* definedinProSolid.h. RefertotheRegenerating aSolid
onpage94sectionintheCore:Solids,Parts,andMaterialsonpage91chapterfor
moreinformation onthebitflags.
FromPro/ENGINEER Wildfire5.0onwards,thefunctionslistedabovesupersede
thefollowingfunctionsdescribedintheManipulating Featuresonpage137
section.
•ProFeatureCreate()
•ProFeatureDelete()
•ProFeatureSuppress()
•ProFeatureResume()
•ProFeatureRedefine()
•ProFeatureReorder()
•ProFeatureInsertModeActivate()
•ProInsertModeCancel()
Usethesuperseding functionswiththeinputargument flagssettoPRO_REGEN_
NO_FLAGS forthebehaviorthatissimilartotheoneprovidedbytheabove
deprecated functions.
FeatureReferences
Functions Introduced:
•ProFeatur eReferenc eEdit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNO_FLAGS forthebehaviorthatissimilartotheoneprovidedbytheabove
deprecated functions.
FeatureReferences
Functions Introduced:
•ProFeatur eReferenc eEdit()
140 Creo®Parametric TOOLKIT User’sGuide•ProMdlFeatBackupOwnerNamesGet()
•ProMdlFeatBackupRefMdlNamesGet()
•ProFeatur eReferenc eEditRefsGet()
Thefunction ProFeatureReferenceEdit() replacestheoldreferences ofa
featurewithnewreferences basedonthebitmaskspecifiedforitsinputargument
flags.Thebitmaskmustcontainoneormoreregeneration controlbitflagsofthe
typePRO_REGEN_* definedinProSolid.h. RefertotheRegenerating aSolid
onpage94sectionintheCore:Solids,Parts,andMaterialsonpage91chapterfor
moreinformation onthebitflags.
Thefunction ProMdlFeatBackupOwnerNamesGet() returnsthenamesof
themodels,alongthemodelpath,fromthetopmodeltotheownermodelforthe
specifiedfeature.Theinputargumentsare:
•model—Specifies themodel,whichcontainsthespecifiedfeature.
•featur e—Specifies afeaturewhosereferences aretoberetrieved.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedfeature.Theinputargumentsare:
•model—Specifies themodel,whichcontainsthespecifiedfeature.
•featur e—Specifies afeaturewhosereferences aretoberetrieved.
Thefunction ProMdlFeatBackupRefMdlNamesGet() returnsthenamesof
themodels,alongthemodelpath,fromthetopmodeltotheexternalreference
modelforthespecifiedfeature.Featurereferences canbefromalocalorexternal
model.Thesystemcreatesageometrybackupofthelocalandexternalreferences,
whichisusedforinformation anddisplaypurposes.Thisfunctionretrievesthe
modelnamesfromthebackupinformation. Theinputargumentsare:
•model—Specifies themodel,whichcontainsthespecifiedfeature.
•featur e—Specifies afeaturewhosereferences aretoberetrieved.
•path—Specifies thepathasaProArray ofIDsofasubassembly or
component fromthetopmodeltothereferencemodel.Specify NULLforlocal
reference.
Togiveanexampleonhowtospecifythepath,consideranassemblyA,
whichhasacomponent C1withID9andasubassembly SwithID7.The
subassembly Shasacomponent C2withID11.IfafeatureunderC1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreference.
Togiveanexampleonhowtospecifythepath,consideranassemblyA,
whichhasacomponent C1withID9andasubassembly SwithID7.The
subassembly Shasacomponent C2withID11.IfafeatureunderC1
references anobjectinthemodelofC2,thereferenceIDpathmustcontain
twoIDs7and11.
•ref_id—Specifies theIDoftheexternalreference, whichisreferenced inthe
specifiedfeature.
RefertotheCreoParametric Assembly Designonlinehelpformoreinformation
onreferences andbackupdata.
Thefunction ProFeatureReferenceEditRefsGet() returnsanarrayof
theoriginalreferences ofafeaturethatareusedtoperformtheeditreference
operation. Theinputargumentsfollow:
•solid—The partorassemblytowhichthefeaturesbelong.
•p_feat_handle—The featurehandle.
Core:Features 141•flags—Indicates thetypeofreferences tocollect.Tocollectalltypesof
references, setthevaluetoPRO_EDITREF_REF_TYPE_ALL.
Thefunctionreturnstheoutputargument r_orig_ref_arr asaProArray of
alltheoriginalreferences.
Usethefunction ProReferencearrayFree() tofreethememory.
FeatureDimensionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionreturnstheoutputargument r_orig_ref_arr asaProArray of
alltheoriginalreferences.
Usethefunction ProReferencearrayFree() tofreethememory.
FeatureDimensions
FunctionIntroduced:
•ProFeatur eDimensionV isit()
Thefunction ProFeatureDimensionVisit() visitsallthedimensions
whichbelongtothefeature.
Note
Somefeaturedimensions aredependent ondimensions ofotherfeatures.For
example,sketch-based featureswithshared,patternedorexternalsections,
dependent copiedormirroredfeatures,andsoon.Incaseofsuchdependent
dimensions, usethefunction ProDimensionParentGet() togetthe
valueoftheparentdimension .
Formoreinformation aboutdimensions, refertosectionDimensions onpage556
fromthechapterAnnotations: Annotation FeaturesandAnnotations onpage533.
Manipulating Patterns
FromthePro/ENGINEER Wildfirerelease,thefollowingchangesare
implemented inpatterns.
PatternsasFeatures
PatternsaretreatedasfeaturesinCreoParametric. Patternsareassignedaheader
featureofthetypePRO_E_PATTERN_HEAD.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxximplemented inpatterns.
PatternsasFeatures
PatternsaretreatedasfeaturesinCreoParametric. Patternsareassignedaheader
featureofthetypePRO_E_PATTERN_HEAD.
ThePatternfeatureinPro/ENGINEER Wildfireeffectsthepreviousreleasesof
Pro/ENGINEER asfollows:
•Modelscontaining patternsautomatically getoneextrafeatureoftypePRO_
FEAT_PATTERN_HEAD intheregeneration list.Thischangesthefeature
numbersofallthesubsequent features,includingthoseinthepattern.
142 Creo®Parametric TOOLKIT User’sGuide•ThepatternaccessfunctionssuchasProFeaturePatternGet(),
ProPatternMembersGet() andProPatternLeaderGet are
unaffectedbytheadditionofthepatternheaderfeature.Thepatternleaderis
stillthefirstgeometric featurecontainedinthepattern.
Thenewfunction ProPatternHeaderGet() returnstheheaderfeature.
FillPatterns
CreoParametric usestheFilltypeofpattern.
Functions Introduced:
•ProFeatur ePatternStatusGet()
•ProFeatur eGrppatternStatusGet()
•ProFeatur ePatternleaderGet()
•ProFeatur ePatternGet()
•ProPatternDelete()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProFeatur ePatternStatusGet()
•ProFeatur eGrppatternStatusGet()
•ProFeatur ePatternleaderGet()
•ProFeatur ePatternGet()
•ProPatternDelete()
•ProPatternLeaderGet()
•ProPatternHeaderGet()
Thefunction ProFeaturePatternStatusGet() classifiesthefeature
according toitspossibleroleinafeaturepattern.Thepossiblevaluesareas
follows:
•PRO_PATTERN_NONE—The featureisnotinapattern.
•PRO_PATTERN_LEADER—The featureistheleaderofapattern.
•PRO_PATTERN_MEMBER—The featureisamemberofapattern.
•PRO_PATTERN_HEADER—The featureistheheaderofapattern.
Thefunction ProFeatureGrppatternStatusGet() doestheequivalent
forgrouppatterns.Thepossiblevaluesareasfollows:
•PRO_GRP_PATTERN_NONE—The featureisnotinagrouppattern.
•PRO_GRP_PATTERN_LEADER—The featureistheleaderofagrouppattern.
•PRO_GRP_PATTERN_MEMBER—The featureisamemberofagrouppattern.
•PRO_GRP_PATTERN_HEADER—The featureistheheaderofagroup
pattern.
Thefunction ProFeaturePatternleaderGet() returnsthepatternleaderxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_GRP_PATTERN_MEMBER—The featureisamemberofagrouppattern.
•PRO_GRP_PATTERN_HEADER—The featureistheheaderofagroup
pattern.
Thefunction ProFeaturePatternleaderGet() returnsthepatternleader
featureforthespecifiedpatternmemberfeature.
Thefunction ProFeaturePatternGet() obtainstheProPattern handle
forthepatterncontaining thespecifiedfeature.(TheProPattern handleis
describedindetailinthechapterElementTrees:Patternsonpage947.)
Core:Features 143Todeleteapattern,passthecorresponding ProPattern handletothefunction
ProPatternDelete().
Toobtaintheleaderfeatureforagivenpattern,passaProPattern objecttothe
function ProPatternLeaderGet().
Toobtaintheheaderfeatureforagivenpattern,passaProPattern objectto
thefunction ProPatternHeaderGet().
Toaccesspatterninformation usethepatternelementtreedescribedinthechapter
ElementTrees:Patternsonpage947.Youcanaccesselementtreeinformation
usingthefunctions ProElement*(), describedinthechapterElementTrees:
Principles ofFeatureCreationonpage749.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:Patternsonpage947.Youcanaccesselementtreeinformation
usingthefunctions ProElement*(), describedinthechapterElementTrees:
Principles ofFeatureCreationonpage749.
Table-Driven Patterns
TheTable-Driven Patternfunctionshavebeendeprecated. UsetheTablePattern
featureelementtreetoreadandmanipulate tablepatterns.SeethesectionTable
Patternsonpage954formoredetails.
CreatingLocalGroups
FunctionIntroduced:
•ProLocalGro upCr eate()
Localgroupsofferawaytocollectseveralfeaturestogetherasiftheywereone
feature.Thisfunctionality isparticularly usefulwhenyouarecreatingpatterns.
Thefunction ProLocalGroupCreate() groupstogetherfeaturesspecifiedby
anarrayoffeatureidentifiers. TheoutputofProLocalGroupCreate() isthe
object ProGroup, whichatypedefofastructuresimilartoProFeature.
Thefeatureidentifiers passedtoProLocalGroupCreate() mustcorrespond
tofeaturesthatpossessconsecutive regeneration numbers.Thatis,thefeature
identifiers canhaveanyvalues,butthecorresponding featuresmustoccupyaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtofeaturesthatpossessconsecutive regeneration numbers.Thatis,thefeature
identifiers canhaveanyvalues,butthecorresponding featuresmustoccupya
contiguous portionoftheregeneration list.(Toseetheregeneration numberofa
feature,addthecolumn Feat #tothemodeltree.)
Iftherearefeatureswhoseregeneration numbersliebetweenthosebelonging to
thefeaturestobegrouped,CreoParametric askstheuserwhetherthese
unspecified featuresaretobeincludedinthegroup.IftheuserrespondswithNo,
thegroupisnotcreated.
Afteryoucreatealocalgroup,youmaywanttorefreshthemodeltreetoseethe
changes.Torefreshthemodeltree,callProTreetoolRefresh().
144 Creo®Parametric TOOLKIT User’sGuideReadAccesstoGroups
GroupsinCreoParametric representsetsofcontiguous featuresthatactasa
singlefeatureforpurposesofsomeoperations. Whiletheindividual featurescan
beaffectedbymostoperations individually ,certainoperations applytotheentire
group:
•Suppress
•Delete
•Layeroperations
•Patterning operationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeaffectedbymostoperations individually ,certainoperations applytotheentire
group:
•Suppress
•Delete
•Layeroperations
•Patterning operations
Formoreinformation aboutlocalgroups,seethePartModeling User's Guide.
User-DefinedFeatures(UDFs)aregroupsoffeaturesthatcanbestoredinafile.
WhenaUDFisplacedinanewmodel,thefeaturescreatedareautomatically
assignedtoagroup.
Alocalgroupisasetoffeaturesthathavebeenexplicitlyassignedtoagroup,for
purposesofeaseofmodification orpatterning.
Note
AllthefunctionsinthissectionworkforbothUDFsandlocalgroups.
EachinstanceofagroupisidentifiedinCreoParametric TOOLKITasa
ProGroup structure.ThisstructureisthesameaProFeature datahandle:
typedef struct pro_model_item {
ProMdl owner;
int id;
ProType type;
}ProGroup;
Theinteger idinthiscaseistheidofthegroupheaderfeature,whichisthefirst
featureinthegroup.Allgroups,includingthoseinmodelscreatedbeforerelease
200i2,areassignedwithagroupheaderfeatureuponretrieval.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheinteger idinthiscaseistheidofthegroupheaderfeature,whichisthefirst
featureinthegroup.Allgroups,includingthoseinmodelscreatedbeforerelease
200i2,areassignedwithagroupheaderfeatureuponretrieval.
Theconsequences ofthegroupheaderfeatureforusersofpreviousversionsof
Pro/TOOLKITisasfollows:
•Modelsthatcontaingroupsautomatically getoneextrafeatureinthe
regeneration list,oftypePRO_FEAT_GROUP_HEAD. Thischangesthe
featurenumbersofallsubsequent features,includingthoseinthegroup.
•Eachgroupautomatically containsonenewfeatureinthearraysreturnedby
Pro/TOOLKIT.
Core:Features 145•Eachgroupautomatically getsadifferentleaderfeature(thegrouphead
featureistheleader).Theleaderisthefirstfeatureinthearraysreturnedby
Pro/TOOLKIT.
•Eachgrouppatterncontains,ofcourse,aseriesofgroups,andeachgroupin
thepatternissimilarlyaltered.
FindingGroups
Functions Introduced:
•ProSolidGr oupV isit()
•ProSolidGr oupsCollect()
•ProFeatur eGroupStatusGet()
•ProFeatur eGroupGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthepatternissimilarlyaltered.
FindingGroups
Functions Introduced:
•ProSolidGr oupV isit()
•ProSolidGr oupsCollect()
•ProFeatur eGroupStatusGet()
•ProFeatur eGroupGet()
Thefunction ProSolidGroupVisit() allowsyoutovisitthegroupsinthe
solidmodel.Thefunction ProSolidGroupsCollect() returnsanarrayof
thegroupstructures.
Thefunction ProFeatureGroupStatusGet() tellsyouifthespecified
featureisinagroup.
Thefunction ProFeatureGroupGet() returnstheProGroup thatincludes
thefeature.
GroupInformation
Functions Introduced
•ProUdfNameGet()
•ProGroupIsT abledriven()
•ProGroupFeature Visit()
•ProGroupFeature sCollect()
•ProUdfDimensionV isit()
•ProUdfDimensionsCollect()
•ProUdfDimensionNameGet()
Thefunction ProUdfNameGet() returnsthenameofthegroup.Foralocal
group,thisisthenameassigneduponcreation.ForaUDF-created group,thisis
thenameoftheUDFfile.IftheUDFisaninstanceinaUDFfamilytable,the
functionalsoreturnstheinstancename.
Thefunction ProGroupFeatureVisit() traversesthemembersofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthenameoftheUDFfile.IftheUDFisaninstanceinaUDFfamilytable,the
functionalsoreturnstheinstancename.
Thefunction ProGroupFeatureVisit() traversesthemembersofthe
featuregroup.Thefunction ProGroupFeaturesCollect() returnsanarray
containing thefeaturehandles.
146 Creo®Parametric TOOLKIT User’sGuideThefunction ProUdfDimensionVisit() traversesthevariabledimensions
usedinthecreationoftheUDF(thisisonlyapplicable toUDF-created groups).
Thefunction ProUdfDimensionsCollect() returnsanarrayofthevariable
dimensions. Thevariabledimensions arethedimensions thatCreoParametric
promptsforwhenyoucreatetheUDF.
Thefunction ProUdfDimensionNameGet() returnstheoriginaldimension
symbolforthevariabledimension intheUDF.Thissymbolisdifferentfromthe
symbolassignedtothedimension inthegroup.
Note
InCreoParametric 6.0.0.0andlater,forthefunction
ProUdfDimensionNameGet(), itismandatory topasstheinput
argument udfasProGroup objecttype.Ifyoupassanyotherobjecttype,the
functionreturnsthePRO_TK_BAD_CONTEXT error.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUdfDimensionNameGet(), itismandatory topasstheinput
argument udfasProGroup objecttype.Ifyoupassanyotherobjecttype,the
functionreturnsthePRO_TK_BAD_CONTEXT error.
CreatingGroups
Functions Introduced:
•ProLocalGro upCr eate()
Thefunction ProLocalGroupCreate() createsagroupoutofasetof
specifiedfeatures.Thefeaturesmustrepresentacontiguous setoffeaturesinthe
solidmodel.(ReferalsotoCreatingLocalGroupsonpage144).
DeletingGroups
Functions Introduced:
•ProGroupUngr oup()
•ProGroupUngr oupPreA ction()
•ProGroupUngr oupPostAction()
Thefunction ProGroupUngroup() removestheindicatedgroupanddeletes
thegroupheaderfeature.
Thefunctionprototype ProGroupUngroupPreAction() shouldbeusedfor
anotification corresponding totheProNotifyType PRO_GROUP_UNGROUP_
PRE.Thiscallbackwillbecalledjustbeforetheuserungroupsanexistinglocal
grouporUDFgroupintheuserinterface.Iftheapplication returnsanerrorfrom
thiscallback,ungroupactivitywillbeprevented (thusprovidingameansbyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgrouporUDFgroupintheuserinterface.Iftheapplication returnsanerrorfrom
thiscallback,ungroupactivitywillbeprevented (thusprovidingameansby
whichUDFsorothergroupsmaybeeffectivelylocked).Ifungroupisbeing
cancelledbytheapplication, theapplication isrequiredtoprovidean
informational messagetotheuserexplaining thisaction.
Core:Features 147Thefunctionprototype ProGroupUngroupPostAction() shouldbeused
foranotification corresponding totheProNotifyType PRO_GROUP_
UNGROUP_POST. Thisprototypeprovidesinformation aboutthegroupthatwas
justungrouped:
•solid—The solidmodelthatownsthegroup.
•group_id—The formergroupfeatureid.
•udf_name—The nameoftheUDFthegroupwascreatedfrom.
•featur e_list—The featureidsthatweremembersofthegroup.
UpdatingorReplacingUDFs
Thissectionlistsoperations, whichyoucanperformonUDFs.
Functions Introduced:
•ProUdfUpdate()
•ProUdfReplace()
•ProUdfFileIsPr eCreo7()
Thefunction ProUdfUpdate() updatesadependent UDFtothelatestversionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThissectionlistsoperations, whichyoucanperformonUDFs.
Functions Introduced:
•ProUdfUpdate()
•ProUdfReplace()
•ProUdfFileIsPr eCreo7()
Thefunction ProUdfUpdate() updatesadependent UDFtothelatestversion
ofthe.gphfile.Thefunctionshouldbeabletolocatethe.gphfilefromwithin
thesessionorbythesearchpath.Onlydependent UDFsareupdatedfromtheir
originaldefinitions.
Usethefunction ProUdfReplace() toreplaceaUDFplacement withasimilar
UDFprovidedthatthetwoUDF'smustusethesamereferencetypes.Theinputto
thefunctioncanincludedatathatwouldbeusedtorespondtopromptsshown
duringaninteractive replacement (foritemslikescale,dimension displayand
orientation prompts).
Thefunction ProUdfFileIsPreCreo7() identifiesifthe.gphfileis
createdormodifiedinareleaseearlierthanCreoParametric 7.0.0.0.Theinput
argument gph_pathisthepathtothe.gphfile.
Ifthe.gphfileiscreatedormodifiedinareleaseearlierthanCreoParametric
7.0.0.0,thefunctionoutputsaProBoolean withthevalue PRO_B_TRUE;
otherwise, thevalueisPRO_B_FALSE.
PlacingUDFsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIfthe.gphfileiscreatedormodifiedinareleaseearlierthanCreoParametric
7.0.0.0,thefunctionoutputsaProBoolean withthevalue PRO_B_TRUE;
otherwise, thevalueisPRO_B_FALSE.
PlacingUDFs
FunctionIntroduced:
•ProUdfCr eate()
Thefunction ProUdfCreate() isusedtocreateanewgroupbyretrievingand
applyingthecontentsofanexistingUDFfile.Itisequivalent totheCreo
Parametric commandModel▶▶User-Defined Feature.
148 Creo®Parametric TOOLKIT User’sGuideTounderstand thisfunctionexplanation, youmusthaveagoodknowledge and
understanding oftheuseofUDFsinCreoParametric. PTCrecommends thatyou
readaboutUDFsinthePartModeling User's Guide,andpracticedefiningand
usingUDFsinCreoParametric beforeyouattempttousethisfunction.
WhenyoucreateaUDFinteractively ,CreoParametric promptsyouforthe
information itneedstofixtheproperties oftheresultingfeatures.Whenyou
createaUDFfromCreoParametric TOOLKIT, youcanprovidesomeorallof
thisinformation programmatically byassembling thedatastructurethatisthe
inputtothefunction ProUdfCreate().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreateaUDFfromCreoParametric TOOLKIT, youcanprovidesomeorallof
thisinformation programmatically byassembling thedatastructurethatisthe
inputtothefunction ProUdfCreate().
DuringthecalltoProUdfCreate(), CreoParametric promptsyouforthe
following:
•Anyinformation theUDFneedsthatyoudidnotprovideintheinputdata
structure
•Correctinformation toreplaceerroneous information
Suchpromptsareausefulwayofdiagnosing errorswhenyoudevelopyour
application. Thisalsomeansthat,inadditiontocreatingUDFsfully
programmatically toprovideautomatic synthesisofmodelgeometry,youcanalso
useProUdfCreate() tocreateUDFssemi-interactively .Thiscansimplifythe
interactions neededtoplaceacomplexUDF,makingiteasierfortheuserandless
pronetoerror.
CreatingaUDFmayrequirethefollowingtypesofinformation:
•Name—The nameoftheUDFlibrarytocreate,andtheinstancename,if
applicable.
•Nameorpath—the name(orfullpath)oftheUDFtocreate,andtheinstance
name,ifapplicable.
•Dependency—Whether theUDFisindependent oftheUDFdefinition, orisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplicable.
•Nameorpath—the name(orfullpath)oftheUDFtocreate,andtheinstance
name,ifapplicable.
•Dependency—Whether theUDFisindependent oftheUDFdefinition, oris
modifiedbychangesmadetoit.
•Scale—How toscaletheUDFrelativetotheplacement model.
•Variableparameters—The newvaluesofthevariableparameters allowedtobe
changedduringUDFplacement.
•Variableannotations—The newvaluesofthevariablegtolvalues,surface
finishvaluesanddimension tolerances allowedtobechangedduringUDF
placement.
•Variabledimensions—The newvaluesofthevariabledimensions andpattern
parameters; thosewhosevaluescanbemodifiedeachtimetheUDFiscreated.
•Dimension display—Whether toshoworblanknon-variable dimensions
createdwithintheUDFgroup.
•References—The geometrical elements(surfaces,edges,datumplanes,andso
on)thattheUDFneedstorelatethefeaturesitcontainstotheexistingmodel
Core:Features 149features.Theelementscorrespond tothepicksthatCreoParametric prompts
youforwhenyoucreatetheUDFinteractively (usingthepromptsdefinedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCore:Features 149features.Theelementscorrespond tothepicksthatCreoParametric prompts
youforwhenyoucreatetheUDFinteractively (usingthepromptsdefined
whentheUDFwassetup).Youcannotselectanembedded datumastheUDF
reference.
•Partintersections—If theUDFisbeingcreatedinanassemblyandcontains
featuresthatmodifyexistingsolidgeometry,youneedtodefinewhichpartsin
theassemblyaretobeaffected(or"intersected"), andatwhichlevelinthe
assemblyeachsuchintersection istobevisible.
•Orientations—If aUDFcontainsafeaturewhosedirectionisdefinedwith
respecttoadatumplane(forexample,aholefeaturethatusesadatumplaneat
itsplacement plane),CreoParametric needstoknowinwhichdirectionthe
newfeatureistopoint(thatis,onwhichsideofthedatumplaneitshouldlie).
WhenyoucreatesuchaUDFinteractively ,CreoParametric promptsyoufor
thisorientation withafliparrow.
•Quadrants—If aUDFcontainsalinearlyplacedfeaturethatreferences two
datumplanestodefineitslocation(inthenewmodel),CreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthisorientation withafliparrow.
•Quadrants—If aUDFcontainsalinearlyplacedfeaturethatreferences two
datumplanestodefineitslocation(inthenewmodel),CreoParametric
promptsyoutopickthelocationofthenewfeature.Thisdecidesonwhich
sideofeachdatumplanethefeaturemustlie.Thischoiceisreferredtoasthe
"quadrant," becausetherearefourcombinations ofpossibilities foreach
linearlyplacedfeature.
•Externalsymbols—The parameter ordimension touseinplaceofamissing
externalsymbolfromanotecalloutorrelation.
•Copiedmodelnames—If aUDFcreatescomponents inanassembly,this
argumentspecifiesthenamesofthenewcopiedcomponents thatthe
placement creates.
Thefunction ProUdfCreate() takesthefollowingarguments:
•solid—The solidmodel(partorassembly) onwhichtoplacetheUDF.
•data—The UDFcreationdata,describedbelow.
•asm_r eference—An externalreferenceassemblyforcalculating intersections
andexternalreferences.
•options—An arrayofoptionflags.
•n_options—The sizeoftheoptionsarray.
TheUDFInputDataStructureProUdfdataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•asm_r eference—An externalreferenceassemblyforcalculating intersections
andexternalreferences.
•options—An arrayofoptionflags.
•n_options—The sizeoftheoptionsarray.
TheUDFInputDataStructureProUdfdata
Mostoftheinputneededbythefunction ProUdfCreate() iscontainedinthe
single ProUdfdata structure.Thisstructurecanbeassembled usingthe
ProUdfdata functions.
150 Creo®Parametric TOOLKIT User’sGuideTheoptionsinthedatastructurecorrespond closelytothepromptsCreo
Parametric givesyouwhenyoucreateaUDFinteractively .PTCstrongly
recommends thatbeforeyouwritetheCreoParametric TOOLKITcodetofillthe
structure,youexperiment withcreatingtheUDFinteractively usingCreo
Parametric, notingwhatpromptsitgivesyou,andusethisasaguidetothe
information youneedtoprovide.
Functions Introduced:
•ProUdfdataAlloc()
•ProUdfdataFr ee()
•ProUdfdataNameSet()
•ProUdfdataPathSet()
•ProUdfdataInstancenameSet()
•ProUdfdataDependencySet()
•ProUdfdataScaleSet()
•ProUdfdataDimdisplaySet()
•ProUdfdataOrientationAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUdfdataFr ee()
•ProUdfdataNameSet()
•ProUdfdataPathSet()
•ProUdfdataInstancenameSet()
•ProUdfdataDependencySet()
•ProUdfdataScaleSet()
•ProUdfdataDimdisplaySet()
•ProUdfdataOrientationAdd()
•ProUdfdataQuadrantAdd()
Thefunction ProUdfdataAlloc() allocatesmemoryfortheProUdfdata
structure.Thefunction ProUdfdataFree() freesthedatastructurememory.
Thefunction ProUdfdataNameSet() allowsyoutosetthenameoftheUDF
(therootofthefilename)tocreateand,optionally,theinstanceintheUDFfamily
tabletouse.
Usethefunction ProUdfdataPathSet() tosetthepathoftheUDFfile.
ProUdfCreate() willusetheinputfromthispath,ifset,otherwisethedata
fromProUdfdataNameSet() isused.
Usefunction ProUdfdataInstancenameSet() toassigntheinstancetobe
usedwhenplacingthisUDF.
Thefunction ProUdfdataDependencySet() specifiedthedependency of
theUDF.Thechoicescorrespond tothechoicesavailablewhenyoucreatethe
UDFinteractively .Thedefaultforthisoption,ifnotexplicitlyspecified,isto
createthegroupindependent oftheUDFdefinition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheUDF.Thechoicescorrespond tothechoicesavailablewhenyoucreatethe
UDFinteractively .Thedefaultforthisoption,ifnotexplicitlyspecified,isto
createthegroupindependent oftheUDFdefinition.
Thefunction ProUdfdataScaleSet() specifieshowtomodifythe
dimensions oftheUDFwithrespecttotheplacement model.Thechoices
correspond totheoptionspresentedwhenyoucreatetheUDFinteractively .A
valueforauser-definedscalecanalsobespecifiedbythisfunction.Thedefault
forthisoption,ifnotexplicitlyspecified,istousethesamesizefortheUDF,
regardless oftheunitsoftheplacement model.
Core:Features 151Thefunction ProUdfdataDimdisplaySet() specifieshowtopresentthe
non-variable dimensions inthecreatedgroup.Thesevaluescorrespond tothe
optionspresentedinCreoParametric whenplacingtheUDFinteractively .The
defaultforthisoption,ifnotexplicitlyspecified,istodisplaythedimensions
normally(allowingmodification).
Thefunction ProUdfdataOrientationAdd() addstoanarrayofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefaultforthisoption,ifnotexplicitlyspecified,istodisplaythedimensions
normally(allowingmodification).
Thefunction ProUdfdataOrientationAdd() addstoanarrayof
orientation choices.Theseorientation optionsanswertheCreoParametric prompts
thatproposeafliparrow(presented, forexample,whenusingdatumplanesasa
reference). Thereshouldbeoneorientation answerpresentedforeachpromptin
CreoParametric, andtheorderoftheoptionsshouldcorrespond totheorderas
presentedinCreoParametric. Ifanorientation optionisnotprovided,thevalue
“noflip”isapplied.
Thefunction ProUdfdataQuadrantAdd() addstoanarrayof3-dimensional
pointsthatcorrespond tothepicksanswering theCreoParametric promptsforthe
featurepositions.Thequadrantisrequestedwhenplacingaholeorashaftwith
respecttotwodatumplanesiftheUDFreferences werealsodatumplanes.The
orderofquadrantsspecifiedshouldcorrespond totheorderinwhichCreo
Parametric promptsforthemwhentheUDFiscreatedinteractively .
VariableParameters andAnnotationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorderofquadrantsspecifiedshouldcorrespond totheorderinwhichCreo
Parametric promptsforthemwhentheUDFiscreatedinteractively .
VariableParameters andAnnotations
Thedatastructureforbothvariableparameters andannotations is
ProUdfvarparam.
Functions Introduced:
•ProUdfvarparamAlloc()
•ProUdfdataV arparamAdd()
•ProUdfvarparamV alueSet()
•ProUdfvarparamFr ee()
Thefunction ProUdfvarparamAlloc() allocatesaUDFvariableparameter
orannotation structurewhichdescribesavariableparameter orannotation. The
inputargumentsofthisfunctionare:
•name—Specifies theparameter name.Ifitrepresents avariableannotation,
thenthismustbeoneofthestandardannotation parameter names:
○PTC_ GTOL_PRIMARY_TOL—gtol value
○PTC_ROUGHNESS_HEIGHT—surface finishvalue
○PTC_DIM_TOL_VALUE—dimension symmetric tolerancevalue
○PTC_DIM_UPPER_TOL_VALUE—upper dimension tolerance
○PTC_DIM_LOWER_TOL_VALUE—lower dimension tolerance
152 Creo®Parametric TOOLKIT User’sGuide•item—Specifies theowneritem.Thisitemmusthavetypeandidfilledout.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PTC_DIM_LOWER_TOL_VALUE—lower dimension tolerance
152 Creo®Parametric TOOLKIT User’sGuide•item—Specifies theowneritem.Thisitemmusthavetypeandidfilledout.
(TheownerfieldisignoredbyCreoParametric). Thefollowingtypesare
allowedhere:
○PRO_FEATURE
○PRO_ANNOTATION_ELEM
Usethefunction ProUdfdataVarparamAdd() toaddinformation abouta
variableparameter assignment totheUDFdata.
Thefunction ProUdfvarparamValueSet() assignsthevaluetobeusedfor
avariableparameter orannotation valuewhentheUDFisplaced.Note:youstill
mustaddthevariableparameter totheUDFdatausing
ProUdfdataVarparamAdd().
Usethefunction ProUdfvarparamFree() tofreetheUDFvariantparameter
handle.
VariableDimensions andPatternParameters
Thedatastructureforvariabledimensions andpatternparameters is
ProUdfvardim.
Functions Introduced:
•ProUdfvardimAlloc()
•ProUdfdataUdfvardimAdd()
•ProUdfvardimV alueSet()
•ProUdfvardimFr ee()
Thefunction ProUdfvardimAlloc() setsthevaluesusedtodetermine thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUdfvardim.
Functions Introduced:
•ProUdfvardimAlloc()
•ProUdfdataUdfvardimAdd()
•ProUdfvardimV alueSet()
•ProUdfvardimFr ee()
Thefunction ProUdfvardimAlloc() setsthevaluesusedtodetermine the
variantdimension value.Thisfunctionrequiresthefollowinginputs:
•dim_name—The symbolthatthedimension orpatternparameter hadwhenthe
UDFwasoriginallydefined;notthepromptthattheUDFuseswhen
interactively created.Tomakethenameeasytoremember,modifythe
symbolsofallthedimensions thatyouwanttoselecttobevariablebeforeyou
definetheUDFthatyouplantocreatewithCreoParametric TOOLKIT.
Ifyoudonotremember thename,finditbycreatingtheUDFinteractively in
atestmodelandthenusingtheCreoParametric TOOLKITfunctions
ProUdfDimensionVisit() andProUdfDimensionNameGet() on
theresultingUDF.
Ifyougetthenamewrong, ProUdfCreate() doesnotrecognizethe
dimension andpromptstheuserforthevalue.
•value—The newvalueofthedimension orpatternparameter.
•type—This enumerated typetakesoneofthefollowingvalues:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdimension andpromptstheuserforthevalue.
•value—The newvalueofthedimension orpatternparameter.
•type—This enumerated typetakesoneofthefollowingvalues:
Core:Features 153○PROUDFVARTYPE_DIM—For adimension.
○PROUDFVARTYPE_IPAR—For apatternparameter.
Thefunction ProUdfdataUdfvardimAdd() addsavariantdimension data
structuretotheUDFcreationdata.
Thefunction ProUdfvardimValueSet() assignsthevaluetobeusedfora
variabledimension valuewhentheUDFisplaced.
Note
Thevariantdimension mustbeaddedtotheUDFdatastructureusing
ProUdfdatavardimAdd() inorderforittobeusedduringplacement.
Usethefunction ProUdfvardimFree() tofreetheUDFvariantdimension
handle.
UDFReferences
Functions Introduced:
•ProUdfre ferenceAlloc()
•ProUdfdataRefere nceAdd()
•ProUdfre ferenceFre e()
Thefunction ProUdfreferenceAlloc() createsanewreferencedata
structure.Thedatathatmustbeprovidedtoallocatethestructureis:
•prompt—The promptdefinedforthisreferencewhentheUDFwasoriginally
setup.Itindicateswhichreferencethisstructureisproviding.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructure.Thedatathatmustbeprovidedtoallocatethestructureis:
•prompt—The promptdefinedforthisreferencewhentheUDFwasoriginally
setup.Itindicateswhichreferencethisstructureisproviding.
•ref_item—A ProSelection objectrepresenting thegeometrytouseasthe
reference. Youcanallocateanembedded datumastheUDFreference. Ifthe
referenceisexternal,theselectioncomponent pathshouldrepresentthepathto
theowningmodelrelativetotheexternalreferenceassemblyspecifiedinthe
calltoProUdfCreate(). Ifthisreferenceitemreferstoanannotation
reference, youcanpassNULLtomaketheplacedannotation incomplete.
•external—PRO_B_TRUE ifthereferenceisexternal,andPRO_B_FALSE ifit
isinternal.
○Internal—The referenced elementbelongsdirectlytothemodelthat
containstheUDF.Foranassembly,thismeansthattheelementbelongsto
thetop-levelassembly.
○External—The referenced elementbelongstoanassemblymemberother
thantheplacement member.
154 Creo®Parametric TOOLKIT User’sGuideThefunction ProUdfdataReferenceAdd() addsthereferencestructuretoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○External—The referenced elementbelongstoanassemblymemberother
thantheplacement member.
154 Creo®Parametric TOOLKIT User’sGuideThefunction ProUdfdataReferenceAdd() addsthereferencestructureto
theProUdfdata structure.
Usethefunction ProUdfreferenceFree() tofreetheUDFreference
handle.
AssemblyIntersections
Thedatastructureusedforassemblyintersections isProUdfintersection.
Functions Introduced:
•ProUdfintersectionAlloc()
•ProUdfdataIntersectionAdd()
•ProUdfintersectionFre e()
Thefunction ProUdfintersectionAlloc() setsthevaluesusedto
determine howaUDFplacedinthecontextofanassemblyintersectsthe
membersoftheassembly.Thisfunctionrequiresthefollowinginputs:
•intersect_part—The component pathfromeithertheplacement assemblyor
theexternalreferenceassemblydowntotheintersected component. The
externalreferenceassemblyisprovidedbytheasm_r eferenceargumentto
ProUdfCreate().
•visibility—The depthofthecomponent pathintotheassemblywherethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexternalreferenceassemblyisprovidedbytheasm_r eferenceargumentto
ProUdfCreate().
•visibility—The depthofthecomponent pathintotheassemblywherethe
intersected UDFisvisible.Ifvisibilityisequaltothelengthofthecomponent
path,thefeatureisvisibleinthepartthatitintersectsandallassemblies and
subassemblies. Ifvisibilityis0,thefeatureisonlyvisibleinthetop-level
assembly.
•instance_names—An arrayofnamesforthenewinstancesofpartscreatedto
representtheintersection geometry.
Thefunction ProUdfdataIntersectionAdd() addstheintersection
structuretotheProUdfdata structure.
Usethefunction ProUdfintersectionFree() tofreetheUDFintersection
handle.
ExternalSymbol:Parameters
Thedatastructureforexternalsymbolparameters isProUdfextparam.
Functions Introduced:
•ProUdfextparamAlloc()
•ProUdfdataExtparamAdd()
•ProUdfextparamFr ee()
Core:Features 155Thefunction ProUdfextparamAlloc() allocatesandsetsa
ProUdfextparam structure,whichdescribesanexternalsymbolreferencing a
parameter.Theinputargumentsofthisfunctionare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCore:Features 155Thefunction ProUdfextparamAlloc() allocatesandsetsa
ProUdfextparam structure,whichdescribesanexternalsymbolreferencing a
parameter.Theinputargumentsofthisfunctionare:
•prompt—The promptfortheexternalparameter symbol.
•parameter—The parameter whichisusedtoresolvethisexternalsymbolin
theplacement model.
Usethefunction ProUdfdataExtparamAdd() toaddinformation aboutan
externalsymbolparameter totheUDFdata.Usethefunction
ProUdfextparamFree() tofreetheUDFexternalparameter handle.
ExternalSymbol:Dimensions
Thedatastructureforexternalsymboldimensions isProUdfextdim.
Functions Introduced:
•ProUdfextdimAlloc()
•ProUdfdataExtdimAdd()
•ProUdfextdimFr ee()
Usethefunction ProUdfextdimAlloc() toallocateandsetastructurewhich
describesanexternaldimension symbolrequiredbytheUDF.Theinput
argumentsofthisfunctionare:
•prompt—Specifies thepromptusedforthisexternalsymbol.
•dimension—Specifies thedimension handletobeusedtoresolvetheexternal
symbolintheplacement model.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxargumentsofthisfunctionare:
•prompt—Specifies thepromptusedforthisexternalsymbol.
•dimension—Specifies thedimension handletobeusedtoresolvetheexternal
symbolintheplacement model.
Usethefunction ProUdfdataExtdimAdd() toaddinformation abouta
requiredexternaldimension symboltotheUDFdata.Usethefunction
ProUdfextdimFree() tofreetheUDFdimension externalsymbolhandle.
CopiedModelNames
Thedatastructureusedforspecifying newcomponent modelnamesis
ProUdfmdlNames.
Functions Introduced:
•ProUdfmdlMdlnamesAlloc()
•ProUdfmdlNamesSet()
Thefunction ProUdfmdlMdlnamesAlloc() setsthevaluesusedto
determine thenamesofnewcomponents createdbytheUDFplacement. This
functionrequiresthefollowinginputs:
•old_name—The oldnameofthecomponent.
156 Creo®Parametric TOOLKIT User’sGuide•new_name—The newnameofthecomponent tobecreated.
Thefunction ProUdfmdlNamesSet() addsthemodelnamesstructuretothe
ProUdfdata structure.
ReadingUDFProperties
ThefunctionsinthissectionprovidetheabilitytoreadtheoptionsforplacementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProUdfmdlNamesSet() addsthemodelnamesstructuretothe
ProUdfdata structure.
ReadingUDFProperties
Thefunctionsinthissectionprovidetheabilitytoreadtheoptionsforplacement
directlyfromaUDFfile(a.gphfile)inorderforanapplication todecideat
runtimetheinputsitwilluseforplacingagivenUDF.Thefollowingfunctions
operateonProUdfdata. Thesefunctionsarecapableofreadingproperties from
theUDFfilesolongastheUDFnameorpathhasalreadybeensetby
ProUdfdataNameSet() orProUdfdataPathSet().
Someofthedataretrievedbythefunctionsinthissectionusesthesamedatatypes
asthecorresponding ProUdfdata setfunctionsusedforplacingtheUDF(as
listedintheearliersection).However,datathatyoureadoutoftheProUdfdata
isnotrelatedtodatathatyouareusingtoplacetheUDF.Youmustexplicitlypass
eachpieceofdatatotheProUdfdata functionsifyouwanttheUDFtobe
placedwiththisinformation.
VariableDimensions
Functions Introduced:
•ProUdfdataV ardimsGet()
•ProUdfvardimNameGet()
•ProUdfvardimPr omptGet()
•ProUdfvardimDefaultvalueGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxplacedwiththisinformation.
VariableDimensions
Functions Introduced:
•ProUdfdataV ardimsGet()
•ProUdfvardimNameGet()
•ProUdfvardimPr omptGet()
•ProUdfvardimDefaultvalueGet()
Usethefunction ProUdfdataVardimsGet() toobtainanarrayofavailable
variantdimensions thatmaybesetwhenplacingthisUDF.Youcanusethe
function ProUdfvardimProarrayFree() tofreethisProArray ofvariant
dimensions.
Note
Thehandlesobtainedwhenthefunction ProUdfdataVardimsGet() is
calledarenotautomatically assignedtotheUDFforplacement. Inorderto
placetheUDFwithauser-definedvariantdimension value,youmustuse
ProUdfdataVardimAdd().
Usethefunction ProUdfvardimNameGet() toobtainthesymbolofthe
variantdimension. Thissymbolofthedimension inthereferencemodelshouldbe
usedinProUdfvardimAlloc().
Core:Features 157Usethefunction ProUdfvardimPromptGet() toobtainthepromptofthe
variantdimension.
Usethefunction ProUdfvardimDefaultvalueGet() toobtainthedefault
valueforthevariantdimension.
VariableParameters
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvariantdimension.
Usethefunction ProUdfvardimDefaultvalueGet() toobtainthedefault
valueforthevariantdimension.
VariableParameters
Functions Introduced:
•ProUdfdataV arparamsGet()
•ProUdfvarparamOwnerGet()
•ProUdfvarparamNameGet()
•ProUdfvarparamDefaultvalueGet()
•ProUdfvarparamPr oarrayFree()
Usethefunction ProUdfdataVarparamsGet() toobtainanarrayof
availablevariantparameters and/orannotation valuesthatcanoptionally beset
whenplacingthisUDF.Youcanusethefunction
ProUdfvarparamProarrayFree() tofreethisProArray ofvariant
items.
Note
Thehandlesobtainedwhenthefunction ProUdfdataVarparamsGet() is
calledarenotautomatically assignedtotheUDFforplacement. Inorderto
placetheUDFwithauser-definedvariantparameter orannotation value,you
mustuseProUdfdataVarparamAdd().
Usethefunction ProUdfvarparamOwnerGet() toobtainthefeatureor
annotation elementthatownsthisvariantparameter orannotation value.
Usethefunction ProUdfvarparamNameGet() toobtainthenameorthe
symbolofthevariantparameter orannotation value.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxannotation elementthatownsthisvariantparameter orannotation value.
Usethefunction ProUdfvarparamNameGet() toobtainthenameorthe
symbolofthevariantparameter orannotation value.
Usethefunction ProUdfvarparamDefaultvalueGet() toobtainthe
defaultvalueforthevariantparameter orannotation value.
UDFReferences
Functions Introduced:
•ProUdfdataRequir edreferencesGet()
•ProUdfre quire drefPr omptGet()
•ProUdfre quire drefT ypeGet()
158 Creo®Parametric TOOLKIT User’sGuide•ProUdfre quire drefIsa nnotationref()
•ProUdfre quire drefFr ee()
•ProUdfre quire drefPr oarrayFr ee()
Usethefunction ProUdfdataRequiredreferencesGet() toobtainalist
ofthereferences requiredtobesetforUDFplacement. Inordertousethis
function,theUDFdatamusthaveitsnameorpathset,andCreoParametric must
beabletosuccessfully findthe.gphfilebasedonthisinformation.
Usethefunction ProUdfrequiredrefPromptGet() toobtainthereference
promptforaUDFreference.
Usethefunction ProUdfrequiredrefTypeGet() toobtainthetypeofitemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProUdfrequiredrefPromptGet() toobtainthereference
promptforaUDFreference.
Usethefunction ProUdfrequiredrefTypeGet() toobtainthetypeofitem
thatshouldbesuppliedforaUDFreference.
Usethefunction ProUdfrequiredrefIsannotationref() todetermine
ifthereferenceisanannotation referenceandisallowedtobeleftincomplete.
Youcanusethefunction ProUdfrequiredrefFree() tofreearequired
referencehandleforaUDF.Usethefunction
ProUdfrequiredrefProarrayFree() tofreeaProArray ofhandlesto
therequiredreferences ofaUDF.
ExternalSymbols
Functions Introduced:
•ProUdfdataExternalsymbolsGet()
•ProUdfextsymbolT ypeGet()
•ProUdfextsymbolPr omptGet()
•ProUdfextsymbolParametertypeGet()
•ProUdfextsymbolFr ee()
•ProUdfextsymbolPr oarrayFr ee()
Usethefunction ProUdfdataExternalsymbolsGet() toobtainanarray
ofexternalsymbolsrequiredbythisUDF.YoucanfreeaUDFexternalsymbol
handleusingthefunction ProUdfextsymbolFree() andusethefunction
ProUdfextsymbolProarrayFree() tofreeanarrayofexternalsymbol
handles.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofexternalsymbolsrequiredbythisUDF.YoucanfreeaUDFexternalsymbol
handleusingthefunction ProUdfextsymbolFree() andusethefunction
ProUdfextsymbolProarrayFree() tofreeanarrayofexternalsymbol
handles.
Usethefunction ProUdfextsymbolTypeGet() toobtainthetypeofexternal
symbolrequired(dimension orparameter).
Usethefunction ProUdfextsymbolPromptGet() toobtainthepromptfor
thisexternalsymbol.
Core:Features 159Usethefunction ProUdfextsymbolParametertypeGet() usedtoobtain
theexpectedparameter typeforanexternalsymbol,ifthetypeisPRO_
UDFEXTSYMBOL_PARAM.
InstanceNames
FunctionIntroduced:
•ProUdfdataInstancenamesGet()
Usethefunction ProUdfdataInstancenamesGet() toobtainanarrayof
theinstancenamesthatmaybeusedwhenplacingthisUDF.Youcanfreethis
ProArray ofinstancesusingthefunction ProArrayFree().
Notification onUDFLibraryCreation
CreoParametric TOOLKITprovidestheabilitytobenotifiedwheneveranew
UDFlibraryiscreatedorwhenoneismodified.Youcanusethisnotification toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNotification onUDFLibraryCreation
CreoParametric TOOLKITprovidestheabilitytobenotifiedwheneveranew
UDFlibraryiscreatedorwhenoneismodified.Youcanusethisnotification to
storeadditional information abouttheUDFlibraryfile,forexample,thenames
andvaluesofparameters usedintheUDF.
Functions Introduced:
•ProUdfLibraryCompletePostAction()
Usethefunctionprototype ProUdfLibraryCompletePostAction() fora
notification corresponding totheProNotifyType PRO_UDF_LIB_
COMPLETE_POST. Thisfunctionprovidesthenameofthenewlycreatedor
modifiedUDFlibraryfile,andalistofallthefeaturesincludedintheUDF.
Note
IfyoumodifyaUDFlibrary,whichisindependent andcontainsnoreference
modelthennofeatureswillbeincludedintheinputtothenotification.
MultibodySupportinaUDFandaCopy
feature
AutomaticFillingoftheBodyReference
InCreoParametric 7.0.0.0,whenyouarepromptedforabodyreference, the
promptwillbeautomatically filledwiththedefaultbodyinthefollowingcases:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature
AutomaticFillingoftheBodyReference
InCreoParametric 7.0.0.0,whenyouarepromptedforabodyreference, the
promptwillbeautomatically filledwiththedefaultbodyinthefollowingcases:
160 Creo®Parametric TOOLKIT User’sGuide•WhenplacingaUDFcreatedinanearlierrelease,inasinglebodytarget
model.
•WhenplacingaUDFcreatedinanearlierrelease,inamultibody targetmodel,
andwhentheconfiguration option tk_pre_creo7_udf_body_
autofill issettoyes.Usethisconfiguration optiontoautomatically fillthe
defaultbodyduringUDFplacement inCreoParametric TOOLKIT.
•InUDFscreatedinCreoParametric 7.0.0.0,thebodyreferences arenot
automatically filled.
ThefollowingtableliststhechangesintheUDFfunctions ProUdfCreate()
andProUdfdataRequiredreferencesGet():
Versionof
gphfileBodiesin
targetmodelValueofthe
configura-
tionoption
tk_pre_
creo7_udf_
body_
autofillProUdf
Create()ProUdfda
taRequire
dreferen
cesGet()
Releaseearlier
thanCreo
Parametric
7.0.0.0SingleBodyNo Returns PRO_
TK_NO_
ERRORand
automatically
fillstheUDFxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtk_pre_
creo7_udf_
body_
autofillProUdf
Create()ProUdfda
taRequire
dreferen
cesGet()
Releaseearlier
thanCreo
Parametric
7.0.0.0SingleBodyNo Returns PRO_
TK_NO_
ERRORand
automatically
fillstheUDF
withtheonly
availablebodyReturns PRO_
TK_NO_
ERRORand
alsothebody
ref/prompt
Releaseearlier
thanCreo
Parametric
7.0.0.0SingleBodyYes Returns PRO_
TK_NO_
ERRORbut
doesnotreturn
thebodyref/
prompt
Releaseearlier
thanCreo
Parametric
7.0.0.0Multibody No •
1.Ifbody
refer-
enceis
not
speci-
fied,
returns
PRO_
TK_
MULTI
BODY_
UNSUP
PORT
EDandReturns PRO_
TK_NO_
ERRORand
alsothebody
ref/prompt
Core:Features 161Versionof
gphfileBodiesin
targetmodelValueofthe
configura-
tionoption
tk_pre_
creo7_udf_
body_
autofillProUdf
Create()ProUdfda
taRequire
dreferen
cesGet()
the
UDF
crea-
tion
fails.
•Ifcorrect
body
reference
is
specified,
returns
PRO_TK_
NO_
ERROR
Releaseearlier
thanCreo
Parametric
7.0.0.0Multibody Yes Returns PRO_
TK_NO_
ERRORand
automatically
fillstheUDF
withthe
defaultbodyReturns PRO_
TK_NO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreference
is
specified,
returns
PRO_TK_
NO_
ERROR
Releaseearlier
thanCreo
Parametric
7.0.0.0Multibody Yes Returns PRO_
TK_NO_
ERRORand
automatically
fillstheUDF
withthe
defaultbodyReturns PRO_
TK_NO_
ERRORbut
doesnotreturn
thebodyref/
prompt
New SingleBodyNo Doesnot
automatically
filltheUDF.Returns PRO_
TK_NO_
ERRORand
alsoallthe
bodyref/
promptNew SingleBodyYes
New Multibody No
New Multibody Yes
APIBehaviorforAllCombinations ofUDFType,
CreationandPlacement
ThefollowingcasesuseanexampleoftheSolidExtrudeorCutfeaturerequiring
3references forplacement —Top,RightandFrontdatumplanes.
162 Creo®Parametric TOOLKIT User’sGuideSubordinate UDFCreatedinareleaseearlierthanCreoParametric
7.0.0.0
CreatedinaPartor
AssemblyUDFsthatareRetrievedandPlaced
Assembly Part
Assembly Irrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
Successandreturns PRO_
TK_NO_ERRORIrrespective ofthevalue
oftheconfiguration
option tk_pre_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoption tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
Successandreturns PRO_
TK_NO_ERRORIrrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
Successandreturns PRO_
TK_NO_ERROR. Default
bodyisusedimplicitly
Part Valueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isYES
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
returns PRO_TK_NO_
ERRORValueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isYES
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
automatically fillsthe
referencewiththedefault
bodyandreturns PRO_
TK_NO_ERROR.
Valueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isNO
ProUdfdataRequire
dreferences
Get()—4
ProUdfCreate()—
returns PRO_TK_NO_
ERRORValueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isNO
ProUdfdataRequire
dreferences
Get()—4
Singlebody
ProUdfCreate()—
automatically fillsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUdfCreate()—
returns PRO_TK_NO_
ERRORValueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isNO
ProUdfdataRequire
dreferences
Get()—4
Singlebody
ProUdfCreate()—
automatically fillsthe
referencewiththedefault
Core:Features 163CreatedinaPartor
AssemblyUDFsthatareRetrievedandPlaced
Assembly Part
Note
Youneednotfillthe
bodyreference.
ProUdfdataRe
quiredreferen
cesGet() isfor
querypurposeonly.bodyandreturns PRO_
TK_NO_ERROR.
Multibody
ProUdfCreate()—
returns PRO_TK_
MULTIBODY_
UNSUPPORTED, ifyou
donotspecifythebody
referenceandtheUDF
creationfails.
ReturnsPRO_TK_NO_
ERROR,ifyoudonot
specifythebody
referencecorrectly.
Stand-alone UDFwithaReferenceModel,CreatedinaReleaseEarlier
thanCreoParametric 7.0.0.0
Youcancreateastand-alone UDFwithareferencemodelinapartbutnotinan
assembly
CreatedinaPartor
AssemblyUDFsthatareRetrievedandPlaced
Assembly Part
Assembly NIL NIL
Part Valueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isYES
ProUdfdataRequire
dreferences
Get()—3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatedinaPartor
AssemblyUDFsthatareRetrievedandPlaced
Assembly Part
Assembly NIL NIL
Part Valueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isYES
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
returns PRO_TK_NO_
ERRORValueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isYES
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
automatically fillthe
referencewiththedefault
bodyandreturns PRO_
TK_NO_ERROR.
164 Creo®Parametric TOOLKIT User’sGuideCreatedinaPartor
AssemblyUDFsthatareRetrievedandPlaced
Assembly Part
Valueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isNO
ProUdfdataRequire
dreferences
Get()—4
ProUdfCreate()—
returns PRO_TK_NO_
ERROR
Note
Youneednotfillthe
bodyreference.
ProUdfdataRe
quiredreferen
cesGet() isfor
querypurposeonly.Valueoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill isNO
ProUdfdataRequire
dreferences
Get()—4
Singlebody
ProUdfCreate()—
automatically fillthe
referencewiththedefault
bodyandreturns PRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoption tk_pre_
creo7_udf_body_
autofill isNO
ProUdfdataRequire
dreferences
Get()—4
Singlebody
ProUdfCreate()—
automatically fillthe
referencewiththedefault
bodyandreturns PRO_
TK_NO_ERROR.
Multibody
ProUdfCreate()—
returns PRO_TK_
MULTIBODY_
UNSUPPORTED, ifyou
donotspecifythebody
referenceandtheUDF
creationfails.
ReturnsPRO_TK_NO_
ERROR,ifyoudonot
specifythebody
referencecorrectly.
Stand-alone UDFwithoutReferenceModel,CreatedinaRelease
EarlierthanCreoParametric 7.0.0.0
Forastand-alone UDFcreatedwithoutareferencemodel,thereisnoinformation
whereitwascreatedandcreatinginanassemblyisassumed.Therefore, body
references arenotappended.
Core:Features 165CreatedinaPartor
AssemblyUDFsthatareRetrievedandPlaced
Assembly Part
Assembly orpart.There
isnoinformation inthe.
gphfileandasaresultno
differencefromearlier
releasesIrrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
Successandreturns PRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdifferencefromearlier
releasesIrrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
Successandreturns PRO_
TK_NO_ERRORIrrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
Successandreturns PRO_
TK_NO_ERROR
Defaultbodyisused
implicitly
Stand-alone UDFwithoutReferenceModel,CreatedinCreo
Parametric 7.0.0.0
Bodyreferences forfeatureslikeExtrudeorCutcreatedinapartinCreo
Parametric 7.0.0.0areincludedinthefeaturedefinitionandsavedintheUDF.
WhensuchUDFsareretrievedinapart,youarealwayspromptedintheuser
interfaceforthebodyreferences, and
ProUdfdataRequiredreferencesGet() alwaysreturnstheactual
numberofreferences storedintheUDF.
166 Creo®Parametric TOOLKIT User’sGuideCreatedinaPartor
AssemblyUDFsthatareRetrievedandPlaced
Assembly Part
Assembly Irrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofillxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx166 Creo®Parametric TOOLKIT User’sGuideCreatedinaPartor
AssemblyUDFsthatareRetrievedandPlaced
Assembly Part
Assembly Irrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
Successandreturns PRO_
TK_NO_ERROR.Irrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—3
ProUdfCreate()—
Successandreturns PRO_
TK_NO_ERROR.
Defaultbodyisused
implicitly.
Part Irrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—4 ormore
1ormorebody
references.
ProUdfCreate()—
returns PRO_TK_NO_
ERROR
Note
Youdonotneedtofill
thebodyreference.
ProUdfdataRe
quiredreferen
cesGet() isfor
querypurposeonly.Irrespective ofthevalue
oftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—4 ormore
1ormorebody
references.
ProUdfCreate()—
SingleorMutlibody —
Donotfillthebodyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoftheconfiguration
option tk_pre_
creo7_udf_body_
autofill
ProUdfdataRequire
dreferences
Get()—4 ormore
1ormorebody
references.
ProUdfCreate()—
SingleorMutlibody —
Donotfillthebody
reference.
Core:Features 1676
Core:3DGeometry
GeometryObjects...................................................................................................169
VisitingGeometryObjects........................................................................................170
Tessellation.............................................................................................................179
EvaluatingGeometry...............................................................................................182
GeometryEquations................................................................................................185
RayTracing............................................................................................................192xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRayTracing............................................................................................................192
Measurement ..........................................................................................................193
GeometryasNURBS...............................................................................................196
Interference ............................................................................................................196
FacetedGeometry...................................................................................................200
Thischapterdealswiththeobjectsandactionsusedtoextractthegeometryofa
CreoParametric solid.Becausethegeometryobjectsarecloselyrelatedtoeach
otherandhaveanumberofgenerictypesofactionincommon,thischapteris
organizednotbyobject,butbytypesofactionneededinCreoParametric
TOOLKIT.
Someoftheobjectsandactionsinthischapteralsoapplytoassemblies. Seethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorganizednotbyobject,butbytypesofactionneededinCreoParametric
TOOLKIT.
Someoftheobjectsandactionsinthischapteralsoapplytoassemblies. Seethe
Assembly: BasicAssembly Accessonpage1112chapterforinformation on
objectsandactionsspecifictoassemblies.
168 Creo®Parametric TOOLKIT User’sGuideGeometryObjects
Thegenericobjectforgeometryiscalled ProGeomitem, or“geometry item”.It
isaDHandlethatsharesthedeclaration ofProModelitem. Itsowninstances
arethespecifictypesofgeometrical itemfamiliartousersofCreoParametric.
EachoftheseisdeclaredasanOHandle,oropaquehandle.
TheProGeomitem typesareasfollows:
•ProSurface—Surface, datumsurface,ordatumplane
•ProEdge—Edge
•ProCurve—Datum curve
•ProCompcrv—Composite datumcurve
•ProQuilt—Quilt
•ProAxis—Axis
•ProPoint—Datum point
•ProCsys—Datum coordinate system
Every ProGeomitem iscontainedinafeature,andeachfeatureiscontainedina
solid,asshowninthefollowingfigure.
ProGeomItem inFeatureInSolid
Somegeometrical itemsinapartarealsocontainedinanotherhierarchy,whichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsolid,asshowninthefollowingfigure.
ProGeomItem inFeatureInSolid
Somegeometrical itemsinapartarealsocontainedinanotherhierarchy,which
showshowtheyconnecttogethergeometrically ,ratherthantowhichfeaturesthey
belong.Thistypeofhierarchyisshowninthefollowingfigure.
Core:3DGeometry 169HierarchyofGeometrical ItemsinaPart
TheCreoParametric TOOLKITobject ProContour isalsoanOHandle,buthas
nocorresponding integeridentifier,andthereforeisnotaninstanceof
ProGeomitem.
Thereareanumberofactionsapplicable tomanyofthesetypes,whose
corresponding functionsbeginwith“ProGeomitem”. Theseincludefunctionssuch
asProGeomitemdataGet(), forwhichtherearealsospecificfunctionsfor
thesubtypes(whereappropriate), andsomefunctionsforgenericmeasurement
operations. Thesefunctionsaredescribedunderthecontextoftheiractiontype.
ToreadandmodifythenameofaProGeomitem, usethefunctions
ProModelitemNameGet() andProModelitemNameSet(), describedin
thechapterCore:ModelsandModelItemsonpage69.
VisitingGeometryObjectsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxToreadandmodifythenameofaProGeomitem, usethefunctions
ProModelitemNameGet() andProModelitemNameSet(), describedin
thechapterCore:ModelsandModelItemsonpage69.
VisitingGeometryObjects
Visitinggeometryobjectsmeansacquiringtheobjecthandlestoallthegeometry
objectsinasolidmodel,eitherintheformofaProGeomitem, orintheformof
thevariousspecificopaquehandles.
Theterm“solid”isusedinCreoParametric TOOLKITtodistinguish modelsthat
containthree-dimensional geometry—parts andassemblies—from othermodel
types,suchasdrawings.However,totheCreoParametric user,theterm“solid”is
usedinpartsandassemblies todistinguish featuresthatrepresentthegeometryof
thedesignobjectfromfeaturesusedinconstruction only—the varioustypesof
“datum.”Withinthischapter,therefore,theterms“solidgeometry” and“datums”
areusedinthatsense.
Themostgeneralwaytovisitgeometrical itemsisthroughtheirfeatures.The
sectionVisitingFeatureGeometry onpage171describesthisindetail,and
includesanillustration ofthehierarchyused.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxareusedinthatsense.
Themostgeneralwaytovisitgeometrical itemsisthroughtheirfeatures.The
sectionVisitingFeatureGeometry onpage171describesthisindetail,and
includesanillustration ofthehierarchyused.
170 Creo®Parametric TOOLKIT User’sGuideYoucanalsotraversesolidgeometryitemsthroughthehierarchyofsurfaces,
contours,andedgesinapart.ThisisdescribedinthesectionVisitingSolid
Geometry onpage173.
Thefollowingsectionsdescribethetraversalofthevariousdatums.Someofthese
datumshavetheirownvisitfunctions, whereasothersarevisitedthroughthe
featurehierarchy.
Note
AlthoughtheCreoParametric usercancreatesolidfeaturesinAssembly
mode,thegeometrical itemsthatresultfromthemarestoredonlywithinthe
component partswhosegeometryismodified—not intheassemblyfeatures
themselves. Therefore, althoughtraversalofdatumsisapplicable to
assemblies exactlyastoparts,nosolidgeometryitemsarefoundin
assemblies.
Datumplanes,datumsurfaces,andsolidsurfacesareallrepresented bythexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthemselves. Therefore, althoughtraversalofdatumsisapplicable to
assemblies exactlyastoparts,nosolidgeometryitemsarefoundin
assemblies.
Datumplanes,datumsurfaces,andsolidsurfacesareallrepresented bythe
ProSurface objectbecausetheysharethesametypesofmathematical
description.
VisitingFeatureGeometry
Functions Introduced:
•ProSolidFeatV isit()
•ProFeatur eStatusGet()
•ProFeatur eTypeGet()
•ProFeatur eVisibilityGet()
•ProFeatur eGeomitemV isit()
•ProGeomitemIsInactive()
•ProGeomitemdataGet()
AllgeometryinCreoParametric iscreatedasaresultoffeatures,soeach
geometryobjectinCreoParametric TOOLKITbelongstoafeature.Therefore, the
mostgeneralwaytotraversegeometryofalltypesistotraversethefeatures,then
traversethegeometryeachonecontains.
Thefunction ProSolidFeatVisit() visitseveryfeatureinasolid.The
function ProFeatureTypeGet() reportsthetypeofafeatureintermsofthe
enumerated typeProFeattype (described intheincludefile
ProFeattype.h).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProSolidFeatVisit() visitseveryfeatureinasolid.The
function ProFeatureTypeGet() reportsthetypeofafeatureintermsofthe
enumerated typeProFeattype (described intheincludefile
ProFeattype.h).
Core:3DGeometry 171NotethatProSolidFeatVisit() isdesignedpartlyforinternalusewithin
CreoParametric. ItvisitsnotonlythefeaturesseenbytheCreoParametric users,
butalsothefeaturescreatedinternallytohelpintheconstruction ofgeometry.
TheseinternalfeaturesarerarelyofinteresttoCreoParametric TOOLKITusers.
Todistinguish thevisiblefeaturesfromtheinternal,orinvisible,features,callthe
function ProFeatureVisibilityGet(). Internalfeaturesareinvisible
featuresusedinternallyforconstruction purposes.
Note
Thefunction ProFeatureVisibilityGet() isprimarilyusedinthe
actionandfiltercallbacksofthefunction ProSolidFeatVisit().
Thefunction ProFeatureStatusGet() reportswhetherafeatureis
suppressed orinactiveforsomereason—only activefeaturescontainactive
geometry.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxactionandfiltercallbacksofthefunction ProSolidFeatVisit().
Thefunction ProFeatureStatusGet() reportswhetherafeatureis
suppressed orinactiveforsomereason—only activefeaturescontainactive
geometry.
Thefunction ProFeatureGeomitemVisit() visitsthegeometryitems
withinafeature.Itcanvisitallthegeometryitems,oroneofthesespecifictypes:
SURFACE, PRO_EDGE, orPRO_CURVE. LikeProSolidFeatVisit(), this
functionvisitsnotonlythevisibleitems,butalsoitemsusedinternallytoaidin
regeneration. Usethefunction ProGeomitemIsInactive() toskipoverthe
internal,orinactive,geometryitems.Forfeatureswithsolidgeometry,
ProFeatureGeomitemVisit() visitsnotonlythesurfaces,butalsothe
edges.Contrastthiswiththevisitfunctionsspecifictothoseitems,describedin
thenextsection,thatshowthehierarchical relationships betweensurfaces,
contours,andedges.
Activegeometryobjectsfordatumswillusuallybefoundinfeaturescreatedfor
them,andthereforehavethecorresponding type.Forexample,aProGeomitemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontours,andedges.
Activegeometryobjectsfordatumswillusuallybefoundinfeaturescreatedfor
them,andthereforehavethecorresponding type.Forexample,aProGeomitem
objectoftypePRO_CSYS isusuallycontainedinafeatureoftypePRO_FEAT_
CSYS.However,thisisnotalwaystrue;ageomitem oftypePRO_AXIS canexist
inafeatureoftypePRO_FEAT_HOLE, forexample.AfeatureoftypePRO_
FEAT_MERGE, whichmayarisefromaMirroroperationinPartmode,orfrom
aMergeinAssembly mode,containsgeometryobjectscorresponding toallthose
inthereferenced features,whatevertheirtype.Ingeneral,itisitbesttomakeno
assumptions aboutwhatkindsoffeatureinwhichyoushouldlookfordatums.
Remember todistinguish thefeatureobjectfromthegeometryobjectitcontains,
evenwhentheyhaveaone-to-one relationship. Forexample,afeatureoftype
PRO_FEAT_DATUM_AXIS containsasinglegeometryitemoftypePRO_AXIS,
andeachofthesecanberepresented asaProModelitem object.However,they
arestilldistinctitemswiththeirownidentifiers andtypes.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_FEAT_DATUM_AXIS containsasinglegeometryitemoftypePRO_AXIS,
andeachofthesecanberepresented asaProModelitem object.However,they
arestilldistinctitemswiththeirownidentifiers andtypes.
Toextractthetypeandshapeofeachgeometryitem,usethefunction
ProGeomitemdataGet(), describedindetailinthesectionGeometry
Equations onpage185.
172 Creo®Parametric TOOLKIT User’sGuideNote
Someofthefollowingsectionsabouttraversing specificgeometryitems
introducenewfunctionsspecifictothosetypes.PTCrecommends thatyouuse
themorespecificfunctionsratherthanthegeneralmethoddescribedinthis
section,becausetheyareeasiertouseandusuallyhavebetterperformance.
Allthefunctionsinthissectionspecifictofeaturesaredescribedindetailinthe
chapterCore:Featuresonpage130.
VisitingSolidGeometry
Functions Introduced:
•ProSolidBodySurfaceV isit()
•ProSurfaceContourV isit()
•ProContourEdgeV isit()
•ProEdgeContourGet()
•ProContourT raversalGet()
•ProContainingContourFind()
•ProEdgeDirGet()
•ProEdgeNeighborsGet()
•ProEdgeV ertexdataGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSurfaceContourV isit()
•ProContourEdgeV isit()
•ProEdgeContourGet()
•ProContourT raversalGet()
•ProContainingContourFind()
•ProEdgeDirGet()
•ProEdgeNeighborsGet()
•ProEdgeV ertexdataGet()
Superseded Functions:
•ProSolidSurfaceV isit()
InCreoParametric 7.0.0.0andlater,thefunction ProSolidSurfaceVisit()
hasbeendeprecated. Thefunction ProSolidSurfaceVisit() visitsthe
surfacesofthemodelonlyifthemodelhasasinglebodyelsereturnstheerror
PRO_TK_MULTIBODY_UNSUPPORTED.
Themethod ProSolidBodySurfaceVisit() visitsallthesurfacesinthe
specifiedbody.
InaCreoParametric solid,eachsurfacecontainsalistofcontours,andeach
contourcontainsalistofedges.Theedgesinacontourformaclosedloop,and
areorderedsuchthatfollowingtheedgeskeepsthesurfaceontheright.External
contoursgoclockwise, andinternalcontoursgocounterclockwise.
Thefunctions ProSolidBodySurfaceVisit(),
ProSurfaceContourVisit(), andProContourEdgeVisit() traverse
alltheobjectsinthisthree-level hierarchy.Ifyouvisitallthesurfaces,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctions ProSolidBodySurfaceVisit(),
ProSurfaceContourVisit(), andProContourEdgeVisit() traverse
alltheobjectsinthisthree-level hierarchy.Ifyouvisitallthesurfaces,the
Core:3DGeometry 173contoursofeachsurface,andtheedgesofeachcontour,theresultingcodevisits
eachsurfaceandcontouronetime,andeachedgetwice.Thisistruebecauseeach
edgeformstheintersection betweentwosurfaces,andisthereforelistedinone
contourofeachofthetwosurfaces.
Thefunction ProEdgeContourGet() returnsapointertothecontour,which
isassociated withthespecifiededge.Theinputargumentsare:
•surface—Specifies thesurfaceofthecontour.
•edge—Specifies thehandleoftheedge.
Thefunction ProContourTraversalGet() tellsyouwhetherthespecified
contourisinternalorexternal.Thefunction
ProContainingContourFind() findstheinnermost contourthatclosesthe
specifiedcontour.Ifthespecifiedcontourisinternal,thereturnedcontourwillbe
external,andviceversa.Ifthespecifiedcontouristheoutermost contourforthe
surface, ProContainingContourFind() outputs NULL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedcontour.Ifthespecifiedcontourisinternal,thereturnedcontourwillbe
external,andviceversa.Ifthespecifiedcontouristheoutermost contourforthe
surface, ProContainingContourFind() outputs NULL.
Eachcontourhasanaturaldirectionintermsoftheorderinwhich
ProContourEdgeVisit() visitsitsedges.Eachedgealsohasitsown
direction,intermsofitsparameterization—the parameter,t,movesfrom0to1
alongtheedge.Thefunction ProEdgeDirGet() tellsyouwhetheranedgeis
parameterized alongoragainstthedirectionofthespecifiedcontour.Notethat
eachedgebelongstotwocontours,andwillbeinthesamedirectionasone
contour,andintheoppositedirectionoftheother.
Thefunction ProEdgeNeighborsGet() returnsthetwosurfacesthat
intersectatthespecifiededge,andwhichedgesoneachofthosesurfacesisthe
nextonefollowingthespecifiededgewhentraversing itscontour.
Thefunction ProEdgeVertexdataGet() returnsthelistofsurfacesand
edgesthatmeetatthespecifiedvertex.
Note
Thefunctionsinthissectionvisitactivegeometryitemsonly,soyoudonotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProEdgeVertexdataGet() returnsthelistofsurfacesand
edgesthatmeetatthespecifiedvertex.
Note
Thefunctionsinthissectionvisitactivegeometryitemsonly,soyoudonot
needtocallthefunction ProGeomitemIsInactive().
Example1:FindingtheSurfacesPenetrated byaHole
ThesamplecodeinUgGeomHoleSrfDisp.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_geometry usesthe
techniques offeaturetraversalandsolidgeometrytraversaltofindthesurfaces
thatneighborthesurfacesoftheselectedhole.
174 Creo®Parametric TOOLKIT User’sGuideVisitingAxisDatums
Functions Introduced:
•ProSolidAxisV isit()
•ProAxisIdGet()
•ProAxisInit()
•ProGeomitemFeatur eGet()
•ProAxisSurfaceGet()
Anaxisisrepresented bytheobject ProAxis, whichisdeclaredasanopaque
handle.Thefunction ProSolidAxisVisit() visitsalltheaxesinapartor
assembly.AnaxiscreatedexplicitlyusingtheCreoParametric commandModel▶▶
AxiswillbecontainedinafeatureoftypePRO_FEAT_DATUM_AXIS, butaxes
canalsoexistinfeaturesofothertypes,suchasPRO_FEAT_HOLE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxassembly.AnaxiscreatedexplicitlyusingtheCreoParametric commandModel▶▶
AxiswillbecontainedinafeatureoftypePRO_FEAT_DATUM_AXIS, butaxes
canalsoexistinfeaturesofothertypes,suchasPRO_FEAT_HOLE.
Tofindthefeaturethatanaxisbelongsto,describetheaxisintermsofa
ProGeomitem objectusingthefunctions ProAxisIdGet() and
ProModelitemInit(), thencallProGeomitemFeatureGet().
Youcouldalsotraverseaxesusingthefunctions ProSolidFeatVisit() and
ProFeatureGeomitemVisit(), describedinthesectionVisitingFeature
Geometry onpage171.AsinputtoProFeatureGeomitemVisit(), usethe
typePRO_AXIS. Youwouldhavetovisitfeaturesofanytypethatcouldcontain
axes.
Alwaysremember tousethefunction ProGeomitemIsInactive() toskip
overaxesusedinternallyonly.
Thefunction ProAxisSurfaceGet() providestheProSurface objectthat
identifiesthesurfaceusedtodefinetheaxisposition.
VisitingCoordinate SystemDatums
Functions Introduced:
•ProSolidCsysV isit()
•ProCsysIdGet()
•ProCsysInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxidentifiesthesurfaceusedtodefinetheaxisposition.
VisitingCoordinate SystemDatums
Functions Introduced:
•ProSolidCsysV isit()
•ProCsysIdGet()
•ProCsysInit()
Acoordinate systemdatumisrepresented bytheobject ProCsys, whichis
declaredasanopaquehandle.Thefunction ProSolidCsysVisit() visitsall
thecoordinate systemdatumsinapartoranassembly.
Youcouldalsotraversethecoordinate systemdatumsusingthe
ProSolidFeatVisit() andProFeatureGeomitemVisit() functions,
describedinthesectionVisitingFeatureGeometry onpage171.Thecoordinate
systemdatumsareusuallyfoundinfeaturesoftypePRO_FEAT_CSYS, although
theycanappearinothers,andhavethegeomitem typePRO_CSYS.
Core:3DGeometry 175Alwaysremember tousethefunction ProGeomitemIsInactive() toskip
overcoordinate systemdatumsusedinternallyonly.
Thefunction ProCsysIdGet() providesthepersistentintegeridentifierofthe
coordinate system,whichisusedifyouneedtomakeaProGeomitem
representation ofthecoordinate system.Thefunction ProCsysInit() createsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProCsysIdGet() providesthepersistentintegeridentifierofthe
coordinate system,whichisusedifyouneedtomakeaProGeomitem
representation ofthecoordinate system.Thefunction ProCsysInit() creates
aProCsys objectfromtheintegeridentifier.
VisitingDatumPlanes
Functions Introduced:
•ProSurfaceInit()
•ProSurfaceIdGet()
Adatumplaneisrepresented bytheobject ProSurface, whichisdeclaredasan
opaquehandleandisalsousedtorepresentsolidsurfacesanddatumsurfaces.
Tovisitallthedatumplanes,usethefunctions ProSolidFeatVisit() and
ProFeatureGeomitemVisit(), describedinthesectionVisitingFeature
Geometry onpage171.ThedatumplanesarecontainedinfeaturesoftypePRO_
FEAT_DATUM, eachofwhichcontainsasingleactive ProGeomitem object
whose typefieldisPRO_SURFACE.
Alwaysremember tousethefunction ProGeomitemIsInactive() toskip
overdatumplanesusedinternallyonly.(Activedatumplanesoccurinfeaturesof
typePRO_FEAT_DATUM only;datumplanescreatedon-the-fly duringcreationof
otherfeaturesareinactive.)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoverdatumplanesusedinternallyonly.(Activedatumplanesoccurinfeaturesof
typePRO_FEAT_DATUM only;datumplanescreatedon-the-fly duringcreationof
otherfeaturesareinactive.)
ToconverttheProGeomitem toaProSurface, usetheidfieldinthe
ProGeomitem asinputtothefunction ProSurfaceInit().
Thefunction ProSurfaceIdGet() givestheintegeridentifierofa
ProSurface, soyoucanconvertbacktoaProGeomitem usingthefunction
ProModelitemInit().
Note
Althoughadatumplanehasanominaloutlineusedtovisualizethedatumin
theCreoParametric display,thisisnotpartofthegeometrybecauseadatum
planeisaninfinite,unbounded plane.Therefore, ifyoutrytousethefunction
ProSurfaceContourVisit() onadatumplane,itwillnotfindany
contours.
VisitingQuiltsandDatumSurfaces
Functions Introduced:
176 Creo®Parametric TOOLKIT User’sGuide•ProSolidQuiltV isit()
•ProQuiltSurfaceV isit()
•ProQuiltIdGet()
•ProQuiltInit()
Adatumsurfaceisrepresented bytheobject ProSurface, whichisdeclaredas
anopaquehandleandisalsousedtorepresentsolidsurfacesanddatumplanes.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProQuiltSurfaceV isit()
•ProQuiltIdGet()
•ProQuiltInit()
Adatumsurfaceisrepresented bytheobject ProSurface, whichisdeclaredas
anopaquehandleandisalsousedtorepresentsolidsurfacesanddatumplanes.
Fromtheviewpoint ofCreoParametric TOOLKIT, everydatumsurfacebelongs
toaquilt,evenifnoexplicitquiltfeaturehasbeenmadeinCreoParametric. Ifthe
usercreatesasingledatumsurface,itbelongstoaninternalquiltcreatedforthat
purpose.
Aquiltisrepresented bytheobject ProQuilt, whichisdeclaredasanopaque
handle.
Tovisitdatumsurfaces,youmustthereforefirstvisitallthequilts,using
ProSolidQuiltVisit(), thenvisiteachsurfaceinthequiltusing
ProQuiltSurfaceVisit().
Thefunction ProSolidQuiltVisit() takesthefilterfunction
ProQuiltFilterAction() andthevisitfunction
ProQuiltVisitAction() asitsinputarguments.Thefunction
ProQuiltFilterAction() isagenericactionfunctionforfilteringquilts
fromasolidmodel.Itreturnsthefilterstatusofthequilts.Thisstatusisusedasan
inputargumentbythevisitactionfunction ProQuiltVisitAction().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProQuiltFilterAction() isagenericactionfunctionforfilteringquilts
fromasolidmodel.Itreturnsthefilterstatusofthequilts.Thisstatusisusedasan
inputargumentbythevisitactionfunction ProQuiltVisitAction().
Thefunction ProQuiltSurfaceVisit() takesthefilterfunction
ProQuiltSurfaceFilterAction() andthevisitfunction
ProQuiltSurfaceVisitAction() asitsinputarguments.Thefunction
ProQuiltSurfaceFilterAction() isagenericactionfunctionfor
filteringdatumsurfacesinaquilt.Itreturnsthefilterstatusofthedatumsurfaces.
Thisstatusisusedasaninputargumentbythevisitfunction
ProQuiltSurfaceVisitAction()
Alwaysremember tousethefunction ProGeomitemIsInactive() toskip
overquiltsanddatumsurfacesusedinternallyonly.
ToconvertaProQuilt objecttoaProGeomitem, usethefunctions
ProQuiltIdGet() andProModelitemInit().
TocreateaProQuilt objectfromtheintegeridentifier,use
ProQuiltInit().
Tofindthecontoursandedgesofadatumsurface,usethevisitfunctions
ProSurfaceContourVisit() andProContourEdgeVisit(),xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTocreateaProQuilt objectfromtheintegeridentifier,use
ProQuiltInit().
Tofindthecontoursandedgesofadatumsurface,usethevisitfunctions
ProSurfaceContourVisit() andProContourEdgeVisit(),
describedinthesectionVisitingSolidGeometry onpage173.
VisitingDatumCurves
Functions Introduced:
Core:3DGeometry 177•ProCurveIdGet()
•ProCurveInit()
•ProCurvePersistentColorGet()
•ProCurvePersistentColorSet()
•ProCurvePersistentLinestyleGet()
•ProCurvePersistentLinestyleSet()
Adatumcurveisrepresented bytheobject ProCurve, whichisdeclaredasan
opaquehandle.
Tovisitallthedatumcurves,usethefunctions ProSolidFeatVisit() and
ProFeatureGeomitemVisit(), describedinthesectionVisitingFeature
Geometry onpage171.Thedatumcurvesarecontainedinfeaturesofmany
differenttypes,eachofwhichcontainsoneormoreactive ProGeomitem
objectswhose typefieldisPRO_CURVE.
Alwaysremember tousethefunction ProGeomitemIsInactive() toskip
overdatumcurvesusedinternallyonly.
ToconvertaProCurve objecttoaProGeomitem, usethefunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxobjectswhose typefieldisPRO_CURVE.
Alwaysremember tousethefunction ProGeomitemIsInactive() toskip
overdatumcurvesusedinternallyonly.
ToconvertaProCurve objecttoaProGeomitem, usethefunctions
ProCurveIdGet() andProModelitemInit().
TocreateaProCurve objectfromtheintegeridentifier,use
ProCurveInit().
Usethefunctions ProCurvePersistentColorGet() and
ProCurvePersistentColorSet() toobtainandsetthecolorofaspecified
curve.Inordertoviewthecolorchanges,usethefunction
ProDisplistInvalidate() ontheownermodel.
Usethefunctions ProCurvePersistentLinestyleGet() and
ProCurvePersistentLinestyleSet(). Inordertoviewthelinestyle
changes,usethefunction ProDisplistInvalidate() ontheownermodel.
VisitingComposite DatumCurves
FunctionIntroduced:
•ProCurveCompV isit()
Acomposite datumcurveisalsorepresented bytheobject ProCurve. To
distinguish acomposite curvefromanordinarycurvewhendealingwitha
ProCurve object,usethefunction ProCurveTypeGet(). Thisfunction
outputsthevalue PRO_ENT_CMP_CRV foracomposite curve.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdistinguish acomposite curvefromanordinarycurvewhendealingwitha
ProCurve object,usethefunction ProCurveTypeGet(). Thisfunction
outputsthevalue PRO_ENT_CMP_CRV foracomposite curve.
Tovisitallthecomposite datumcurves,usethefunctions
ProSolidFeatVisit() andProFeatureGeomitemVisit(), described
inthesectionVisitingFeatureGeometry onpage171.
178 Creo®Parametric TOOLKIT User’sGuideThecomposite curvesarecontainedinfeaturesofmanydifferenttypes,eachof
whichcontainsoneormoreactive ProGeomitem objectswhose typefieldis
PRO_CURVE.
Tovisitthedatumcurvesinacomposite curve,usethefunction
ProCurveCompVisit().
Remember thateachcurveinacomposite maybeacomposite itself,soyoumay
needtomakerecursivecalls.However,youcanfindallnon-composite curves,
includingthosecontainedincomposites, usingthemethoddescribedinthe
previoussection.Itisthereforeunnecessary totraverseallthecomposite curvesto
findallthenon-composite curves.
VisitingDatumPoints
Functions Introduced:
•ProPointIdGet()
•ProPointInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprevioussection.Itisthereforeunnecessary totraverseallthecomposite curvesto
findallthenon-composite curves.
VisitingDatumPoints
Functions Introduced:
•ProPointIdGet()
•ProPointInit()
Adatumpointisrepresented bytheobject ProPoint, whichisdeclaredasan
opaquehandle.
Tovisitallthedatumpoints,usethefunctions ProSolidFeatVisit() and
ProFeatureGeomitemVisit(), describedinthesectionVisitingFeature
Geometry onpage171.Thedatumpointsareusuallycontainedinfeaturesoftype
PRO_FEAT_DATUM_POINT, althoughtheycanalsooccurinothers,suchas
PRO_FEAT_MERGE. Datumpointsarerepresented bygeometryitemsoftype
PRO_POINT.
Alwaysremember tousethefunction ProGeomitemIsInactive() toskip
overdatumpointsusedinternallyonly.
ToconvertaProPoint objecttoaProGeomitem, usethefunctions
ProPointIdGet() andProModelitemInit().
TocreateaProPoint objectfromtheintegeridentifier,use
ProPointInit().
Tessellation
Youcancalculatetessellation fordifferenttypesofCreoParametric geometry.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProPointIdGet() andProModelitemInit().
TocreateaProPoint objectfromtheintegeridentifier,use
ProPointInit().
Tessellation
Youcancalculatetessellation fordifferenttypesofCreoParametric geometry.
Thetessellation ismadeupofsmalllines(foredgesandcurves),ortriangles(for
surfacesandsolidmodels).
CurveandEdgeTessellation
Functions Introduced:
•ProEdgeT essellationGet()
Core:3DGeometry 179•ProCurveT essellationGet()
Thefunction ProEdgeTessellationGet() enablesyoutoinvokethe
algorithmthatgeneratesasequenceoflinesfromanarbitrarycurvededge.This
functionprovidesthefollowingoutputs:
•AnarrayoftheXYZcoordinates oftheverticesbetweenthetessellations
•Thetwosurfacesthatneighbortheedge(asalsoprovidedby
ProEdgeNeighborsGet()). Iftheedgeisasingle-sided edge,thenthe
outputargumentreturnsonlyonesurface.
•Anarrayofuvpairsforthetessellation verticesinthefirstneighboring
surface
•Anarrayofuvpairsforthesecondneighboring surface
•Thenumberoftessellation verticesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoutputargumentreturnsonlyonesurface.
•Anarrayofuvpairsforthetessellation verticesinthefirstneighboring
surface
•Anarrayofuvpairsforthesecondneighboring surface
•Thenumberoftessellation vertices
Thefunction ProCurveTessellationGet() retrievesthecurvetessellation
foradatumcurve.Itreturnsthenumberoftessellation pointsandalistofthem.
SurfaceTessellation
Functions Introduced:
•ProSurfaceT essellationGet()
•ProTessellationFr ee()
•ProTessellationV erticesGet()
•ProTessellationFacetsGet()
•ProTessellationNormalsGet()
•ProTessellationParamsGet()
•ProSurfacetessellationinputAlloc()
•ProSurfacetessellationinputFr ee()
•ProSurfacetessellationinputChordheightSet()
•ProSurfacetessellationinputAnglecontr olSet()
•ProSurfacetessellationinputStepsizeSet()
•ProSurfacetessellationinputUvpr ojectionSet()
Thefunction ProSurfaceTessellationGet() calculates thetessellation
datagivenbytheProTessellation objectforaspecifiedsurface.Usethe
function ProTessellationFree() toreleasethememoryusedbythisdata
object.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatagivenbytheProTessellation objectforaspecifiedsurface.Usethe
function ProTessellationFree() toreleasethememoryusedbythisdata
object.
Thefunction ProTessellationVerticesGet() obtainstheverticesforthe
tessellation foraspecifiedsurface.
180 Creo®Parametric TOOLKIT User’sGuideThefunction ProTessellationFacetsGet() obtainstheindicesindicating
theverticesusedforeachfacetofthetessellated item.
Thefunction ProTessellationNormalsGet() obtainsthenormalvectors
foreachofthetessellation vertices.
Thefunction ProTessellationParamsGet() obtainstheUVparameters
foreachofthetessellation vertices.
Thefunction ProSurfacetessellationinputAlloc() allocatesthe
ProSurfaceTessellationInput dataobjectcontaining theoptionsfor
surfacetessellation. Usethefunction
ProSurfacetessellationinputFree() toreleasethememoryallocated
tothisdataobject.
Thefunction ProSurfacetessellationinputChordheightSet()
assignsthechordheightusedforsurfacetessellation.
Thefunction ProSurfacetessellationinputAnglecontrolSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtothisdataobject.
Thefunction ProSurfacetessellationinputChordheightSet()
assignsthechordheightusedforsurfacetessellation.
Thefunction ProSurfacetessellationinputAnglecontrolSet()
assignsthevalueoftheanglecontrolusedforsurfacetessellation.
Thefunction ProSurfacetessellationinputStepsizeSet() assigns
themaximum valueforthestepsizeusedforsurfacetessellation.
Thefunction ProSurfacetessellationinputUvprojectionSet()
assignstheparameters usedtocalculatetheUVprojection forthetexturemapping
tothetessellation inputs.ThetypesofUVprojection aregivenbytheenumerated
typeProSurfaceTessellationProjection, andareasfollows:
•PRO_SRFTESS_DEFAULT_PROJECTION—Provides theUVparameters
forthetessellation pointsthatmaptoaplanewhoseUandVextentsare[0,1]
each.Thisisthedefaultprojection.
•PRO_SRFTESS_PLANAR_PROJECTION—Projects theUVparameters
usingaplanartransform, whereu=x,v=y,andzisignored.
•PRO_SRFTESS_CYLINDRICAL_PROJECTION—Projects theUVxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxeach.Thisisthedefaultprojection.
•PRO_SRFTESS_PLANAR_PROJECTION—Projects theUVparameters
usingaplanartransform, whereu=x,v=y,andzisignored.
•PRO_SRFTESS_CYLINDRICAL_PROJECTION—Projects theUV
parameters usingacylindrical transform, wherex=r*cos(theta), y=r*sin(theta),
u=theta,v=z,andrisignored.
•PRO_SRFTESS_SPHERICAL_PROJECTION—Projects theUVparameters
ontoasphere,wherex=r*cos(theta)*sin(phi), y=r*sin(theta)*sin(phi), z=r*cos
(phi),u=theta,v=phi,andrisignored.
•PRO_SRFTESS_NO_PROJECTION—Provides theunmodified UV
parameters forthetessellation points.Thisissimilartousingthefunction
ProSurfaceParamEval().
•PRO_SRFTESS_BOX_PROJECTION—Projects theUVparameters usingthe
boxtransform. Theboxtransformation usesplanarprojection toprojecta
pointfromthefaceoftheboxontothemodelorsurface,whichisoppositeto
thefaceofthebox,whereu=x,v=y,andzisignored.
Core:3DGeometry 181Note
•Ifthefunction
ProSurfacetessellationinputUvprojectionSet() isnotused,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefaceofthebox,whereu=x,v=y,andzisignored.
Core:3DGeometry 181Note
•Ifthefunction
ProSurfacetessellationinputUvprojectionSet() isnotused,
theoutputtessellation willnotcontainanyUVparameters andthefunction
ProTessellationParamsGet() willnotreturnanyvalues.
•Specifytheunmodified UVparameters obtainedusing PRO_SRFTESS_NO_
PROJECTION astheinput uandvvaluesforthefunctions
ProSurfaceXyzdataEval(), ProSurfaceUvpntVerify(),
ProSurfaceDiameterEval(), and
ProSurfacePrincipalCrvtEval().
PartandAssemblyTessellation
Functions Introduced:
•ProPartT essellate()
•ProPartT essellationFr ee()
Thefunction ProPartTessellate() tessellates allsurfacesofthespecified
partorassemblyinoneoperation. Onparts, ProPartTessellate() actson
allsurfaces.Onassemblies, thisfunctionactsonlyonsurfacesthatbelongtothe
assembly,thatis,itdoesnottessellatesurfacesoftheassemblycomponents.
ProPartTessellate() returnsanarrayof
ProSurfaceTessellationData dataobjects.Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxassembly,thatis,itdoesnottessellatesurfacesoftheassemblycomponents.
ProPartTessellate() returnsanarrayof
ProSurfaceTessellationData dataobjects.Usethefunction
ProPartTessellationFree() toreleasethememoryassignedtothesedata
objects.
EvaluatingGeometry
ThegeometryofeachedgeorcurveinCreoParametric isdescribedasasetof
threeparametric equationsthatrepresentthevaluesofX,Y,andZasfunctionsof
theindependent parameter,t.Forasurface,thethreeequationsarefunctionsof
thetwoindependent parameters uandv.
TheCreoParametric TOOLKITfunctionsdescribedinthissectionprovidethe
abilitytoevaluatetheparametric edgeandsurfacefunctions—that is,findthe
valuesandderivatives ofX,YandZforthespecifiedvaluesoft,oruandv.
Theyalsoprovideforreverseevaluation.
182 Creo®Parametric TOOLKIT User’sGuideEvaluatingSurfaces,Edges,andCurves
Functions Introduced:
•ProSurfaceXyzdataEval()
•ProEdgeXyzdataEval()
•ProCurveXyzdataEval()
•ProEdgeUvdataEval()
•ProSurfaceUvpntV erify()
•ProContourUvpntV erify()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProSurfaceXyzdataEval()
•ProEdgeXyzdataEval()
•ProCurveXyzdataEval()
•ProEdgeUvdataEval()
•ProSurfaceUvpntV erify()
•ProContourUvpntV erify()
Thefunction ProSurfaceXyzdataEval() evaluatestheparametric
equationsforasurfaceatapointspecifiedbyitsuandvvalues.Theinputstothe
functionaretheProSurface objectandtheuandvvalues.Theuandvvalues
areobtainedbyspecifying theprojection typeasPRO_SRFTESS_NO_
PROJECTION forthefunction
ProSurfacetessellationinputUvprojectionSet().
Thefunctionoutputsareasfollows:
•TheX,Y,andZcoordinates ofthepoint,withrespecttothemodelcoordinates
•Thefirstpartialderivatives ofX,Y,andZ,withrespecttouandv
•Thesecondpartialderivatives ofX,Y,andZ,withrespecttouandv
•Aunitvectorinthedirectionoftheoutwardnormaltothesurfaceatthatpoint
Thefunction ProEdgeXyzdataEval() performsasimilarroleforanedge.Its
inputsaretheProEdge objectandthevalueoftattherequiredpoint.The
functionoutputsareasfollows:
•TheX,Y,andZcoordinates ofthepoint,withrespecttothemodelcoordinatesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinputsaretheProEdge objectandthevalueoftattherequiredpoint.The
functionoutputsareasfollows:
•TheX,Y,andZcoordinates ofthepoint,withrespecttothemodelcoordinates
•Thefirstpartialderivatives ofX,Y,andZ,withrespecttot
•Thesecondpartialderivatives ofX,Y,andZ,withrespecttot
•Aunitvectorinthedirectionoftheedge
Youmustallocateamemorylocationforeachoftheoutputarguments ofthese
twofunctions. PassaNULLpointerifyoudonotwanttouseanoutputargument.
Youcannotpassanullforboththeoutputarguments.
Thefunction ProCurveXyzdataEval() isequivalent to
ProEdgeXyzdataEval(), butworksfordatumcurves.
TheProEdgeUvdataEval() functionrelatesthegeometryofapointonan
edgetothesurfacesthatmeetatthatpoint.
Core:3DGeometry 183Thefunction ProSurfaceUvpntVerify() verifieswhetherasurfacepoint,
specifiedbyitsuandvvalues,liesinside,outside,orveryclosetotheboundary
ofthesurface.Theuandvvaluesareobtainedbyspecifying theprojection type
asPRO_SRFTESS_NO_PROJECTION forthefunction
ProSurfacetessellationinputUvprojectionSet().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthesurface.Theuandvvaluesareobtainedbyspecifying theprojection type
asPRO_SRFTESS_NO_PROJECTION forthefunction
ProSurfacetessellationinputUvprojectionSet().
Function ProContourUvpntVerify() doesthesameforpointsonagiven
contour.
InverseEvaluationandMinimumDistances
Functions Introduced:
•ProSurfaceParamEval()
•ProEdgeParamEval()
•ProCurveParamEval()
•ProGeomitemBodyGet()
Thesefunctionsprovidetheparameters ofapointonasurface,edge,ordatum
curvenearesttothespecifiedXYZcoordinate point.
Youcanusethefunction ProEdgeParamEval() onlyforthepointsthatare
eitherontheedgeorveryclosetotheedge.
Thefunction ProSurfaceParamEval() returnstheclosestapproximation to
theunmodified uandvvaluesobtainedbyspecifying theprojection typeasPRO_
SRFTESS_NO_PROJECTION forthefunction
ProSurfacetessellationinputUvprojectionSet().
Usethefunction ProGeomitemBodyGet() toretrievethebodythatis
associated withthespecifiedgeometryitem.
GeometryatPoints
Functions Introduced:
•ProGeometryAtPointFind()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProGeomitemBodyGet() toretrievethebodythatis
associated withthespecifiedgeometryitem.
GeometryatPoints
Functions Introduced:
•ProGeometryAtPointFind()
•ProPoint3dOnsurfaceFind()
•ProPoint3dIntoleranceFind()
•ProSolidPr ojectPoint()
Thefunction ProGeometryAtPointFind() locatesthegeometryitemsthat
lieonagivenpoint.Thisfunctionsupportssolidgeometryonly.
184 Creo®Parametric TOOLKIT User’sGuideThefunction ProPoint3dOnsurfaceFind() determines ifthedistance
betweenthespecifiedpointandthespecifiedsurfaceislessthantheCreo
Parametric modelaccuracyassetinthecurrentCreoParametric session.
Accuracycanalsobesetwithfunction ProSolidAccuracySet(). This
functionisapplicable tosolidanddatumsurfaces.
Thefunction ProPoint3dIntoleranceFind() determines iftwospecified
pointsareco-incident, thatis,ifthedistancebetweenthetwopointsiswithinthe
CreoParametric tolerancesetinProSolidToleranceGet().
Thefunction ProSolidProjectPoint() projectsapointalongtheshortestxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpointsareco-incident, thatis,ifthedistancebetweenthetwopointsiswithinthe
CreoParametric tolerancesetinProSolidToleranceGet().
Thefunction ProSolidProjectPoint() projectsapointalongtheshortest
possiblelinenormaltoasurface,findsthepointwherethatlinehitsthesolid,and
returnsthatpoint.Notethatthisfunctionworksonpartsonly.
GeometryEquations
Functions Introduced:
•ProGeomitemdataGet()
•ProGeomitemdataFr ee()
Theparametric equationsthatdescribesurfaces,edges,anddatumcurvesinCreo
Parametric aredocumented intheGeometry Representations onpage2240
appendix.(Datumcurvesaregeometrically equivalent toedges,butbecausethey
playadifferentroleinCreoParametric, theyneedaparallelsetoffunctionsto
accessthem.Thewordcurveisusedasagenericwordfortheshapeofeitheran
edgeoradatumcurve.)
Toknowtheformofaparticulargeometryitem,youneedtoknownotonlywhich
typeofequationisbeingused,butalsothevaluesofthevariouscoefficientsand
constantsusedinthatequationforthatitem.Geometry Representations onpagexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofequationisbeingused,butalsothevaluesofthevariouscoefficientsand
constantsusedinthatequationforthatitem.Geometry Representations onpage
2240documents theequationsusingthesamenamesforthesecoefficientsand
constantsusedtostorethemintheCreoParametric datastructures. Thefunctions
inthissectionenableyoutogetcopiesofthedatastructurescontaining those
coefficientsandconstants. Therefore, youcanperformyourownevaluations.
ThedatastructuresforProSurfacedata aredefinedintheincludefile
ProSurfacedata.h, andthoseforProCurvedata aredefinedin
ProCurvedata.h.
Thefunction ProGeomitemdataGet() allocatesandfillsadatastructurethat
describesthegeometryoftheitem.Thestructure ProGeomitemdata is
declaredinthefileProGeomitemdata.h, andlookslikethis:
typedef struct geom_item_data_struct
{
ProType obj_type;
union
{
ProCurvedata *p_curve_data;
Core:3DGeometry 185ProSurfacedata *p_surface_data;
ProCsysdata *p_csys_data;
}data;
}ProGeomitemdata;
ThetypefieldhasthesamevalueasthetypefieldintheProGeomitem
object.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx{
ProCurvedata *p_curve_data;
Core:3DGeometry 185ProSurfacedata *p_surface_data;
ProCsysdata *p_csys_data;
}data;
}ProGeomitemdata;
ThetypefieldhasthesamevalueasthetypefieldintheProGeomitem
object.
Thethreefieldsintheunioncontaindatastructuresforthegeometryofcurves
(including solidedgesandaxes),surfaces,andcoordinate systemdatums.These
threedatastructuresaredescribedindetailinthesectionsGeometry ofSolid
Edgesonpage186,Geometry ofSurfacesonpage187,andGeometry of
Coordinate SystemDatumsonpage189,respectively .
Thememoryforthedatastructureisallocatedbythefunction,butisneverfreed.
Tofreethememorywhenyouhavefinishedwithit,call
ProGeomitemdataFree().
GeometryofSolidEdges
Functions Introduced:
•ProEdgeT ypeGet()
•ProEdgeDataGet()
•ProEdgedataMemoryFre e()
•ProEdgedataFr ee()
Function ProEdgeTypeGet() providestheequationusedtodescribetheedge.
Function ProEdgeDataGet() returnsthedatastructureassociated withthe
specifiededge.
Usefunction ProEdgedataMemoryFree() tofreethetop-levelmemoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunction ProEdgeDataGet() returnsthedatastructureassociated withthe
specifiededge.
Usefunction ProEdgedataMemoryFree() tofreethetop-levelmemory
associated withtheedgedatastructure.Function ProEdgedataFree() frees
theunderlying memoryofthedatastructure.
Followthesestepstogetthedescription ofanedge:
1.Getthetypeofequationusedtodescribetheedgeusingthefunction
ProEdgeTypeGet(). Thepossibletypesforasolidedgeareasfollows:
•PRO_ENT_LINE—A straightline
•PRO_ENT_ARC—An arc
•PRO_ENT_ELLIPSE—An ellipse
•PRO_ENT_SPLINE—A nonuniform cubicspline
•PRO_ENT_B_SPLINE—A nonuniform rationalB-spline(NURBS)
2.Getthedatastructureforthegeometryusingthefunction
ProEdgeDataGet(). Foranedge,thetypefieldissettoPRO_EDGE, and
186 Creo®Parametric TOOLKIT User’sGuidetherelevantfieldfromtheunionisp_curve_data. Thetypeforthatfield,
ProCurvedata, isitselfaunionthatcontainsafieldforeachtypeofedge
equation.Forexample,iftheedgetypeisPRO_ENT_ARC, therelevantfield
intheProCurvedata structureistheonecalled arc,oftypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProCurvedata, isitselfaunionthatcontainsafieldforeachtypeofedge
equation.Forexample,iftheedgetypeisPRO_ENT_ARC, therelevantfield
intheProCurvedata structureistheonecalled arc,oftype
ProArcdata. Eachsuchstructurecontainsfieldsforthecoefficientsand
constantsintherelevantequations(described intheGeometry Representations
onpage2240appendix), andsharethesamenames.
3.Whenyouhavereadtheinformation youneedfromtheProGeomitemdata
structure,freethememoryusing ProGeomitemdataFree().
Example2:ExtractingtheDiameterofanArcEdge
ThesamplecodeinUgGeomArcDiaDisp.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_geometry shows
howtoextractthegeometryequationofasolidedge.
GeometryofSurfaces
Functions Introduced:
•ProSurfaceT ypeGet()
•ProSurfaceDataGet()
•ProSurfaceIsDatumPlane()
•ProSurfaceSameSrfsFind()
•ProSldsurfaceV olumesFind()
•ProSurfacePeriodicityGet()
•ProSurfaceNextGet()
Themethodforgettingthedescription ofsurfacegeometryisanalogous tothatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSurfaceIsDatumPlane()
•ProSurfaceSameSrfsFind()
•ProSldsurfaceV olumesFind()
•ProSurfacePeriodicityGet()
•ProSurfaceNextGet()
Themethodforgettingthedescription ofsurfacegeometryisanalogous tothat
describedintheprevioussectionforsolidedges.Function
ProSurfaceTypeGet() providestheequationusedtodescribethesurface.
Function ProSurfaceDataGet() returnsthedatastructureassociated with
thespecifiedsurface.
Usefunction ProSurfacedataMemoryFree() tofreethetop-levelmemory
associated withthesurfacedatastructure.Function ProSurfacedataFree()
freestheunderlying memoryofthedatastructure.
Thepossibletypesofsurfaceareasfollows:
•PRO_SRF_PLANE—A plane
•PRO_SRF_CYL—A cylinder
•PRO_SRF_CONE—A cone
•PRO_SRF_TORUS—A torus
Core:3DGeometry 187•PRO_SRF_COONS—A Coonspatch
•PRO_SRF_SPL—A splinesurface
•PRO_SRF_FIL—A filletsurface
•PRO_SRF_RUL—A ruledsurface
•PRO_SRF_REV—A surfaceofrevolution
•PRO_SRF_TABCYL—A tabulatedcylinder
•PRO_SRF_B_SPL—A nonuniform rationalB-spline(NURBS)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_SRF_FIL—A filletsurface
•PRO_SRF_RUL—A ruledsurface
•PRO_SRF_REV—A surfaceofrevolution
•PRO_SRF_TABCYL—A tabulatedcylinder
•PRO_SRF_B_SPL—A nonuniform rationalB-spline(NURBS)
•PRO_SRF_CYL_SPL—A cylindrical splinesurface
TherelevantfieldintheProGeomitemdata structureisp_surface_data,
oftypeProSurfacedata.
Thestructure ProSurfacedata containsinformation applicable tosurfacesof
alltypes,suchasthemaximum andminimumvaluesofuandv,andofX,Y,and
Zforthesurface,andaunionthatcontainsafieldforeachtypeofsurface
geometry.
Aswithedges,thesestructurescontainfieldsforthecoefficientsandconstantsin
therelevantequations, describedintheGeometry Representations onpage2240
appendix.
Thesefunctionsarealsoapplicable todatumsurfaces,andtodatumplanes(in
whichthesurfacetypewillalwaysbePRO_SRF_PLANE).
Thefunction ProSurfaceIsDatumPlane() identifiesifthegivensurfaceis
adatumplane.
Thefunction ProSurfaceSameSrfsFind() findsandreturnsanarrayof
surfacesthatarethesameastheinputsurface.Forexample,incaseofacylinder,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxadatumplane.
Thefunction ProSurfaceSameSrfsFind() findsandreturnsanarrayof
surfacesthatarethesameastheinputsurface.Forexample,incaseofacylinder,
CreoParametric createstwohalfcylindrical surfaces.Ifyouobtainonehalf,the
otherhalfisreturnedbythisfunction.
Thefunction ProSldsurfaceVolumesFind() analyzesandreturnsthe
numberofconnectvolumesofapartandthesurfacesthatboundthem.
Thefunction ProSurfacePeriodicityGet() getsinformation aboutthe
periodicity ofasurface.Theoutputargumentsare:
•periodic_in_u—Specifies ifthesurfaceisperiodicinU-direction.
•period_in_u—Specifies thevalueofperiodinU-direction.
•periodic_in_v—Specifies ifthesurfaceisperiodicinV-direction.
•period_in_v—Specifies thevalueofperiodinV-direction.
Thefunction ProSurfaceNextGet() returnsthenextsurfaceinthesurface
listorreturns NULLifthereisnonextsurface.Theinputargument this_
surface isthesurfaceforwhichthenextsurfaceisqueriedandcanbeNULL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProSurfaceNextGet() returnsthenextsurfaceinthesurface
listorreturns NULLifthereisnonextsurface.Theinputargument this_
surface isthesurfaceforwhichthenextsurfaceisqueriedandcanbeNULL.
188 Creo®Parametric TOOLKIT User’sGuideTheoutputargument p_next_surface isanon-Nullpointerforreturningthe
nextsurface.Ifthesurfacepassedthroughtheinputargument this_surface is
thelastsurfaceinthelist,thenthereturnedsurfaceisNULL.
Note
Forasolidbodypartwithmultiplebodies,thisfunctiondoesnotreturna
surfacethatisoutsidethebody.
Example3:GettingtheAngleofaConicalSurface
ThesamplecodeinUgGeomConeAngDisp.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_geometry shows
howtoreadthegeometryequationofasurface.
GeometryofAxes
FunctionIntroduced:
•ProAxisDataGet()
Anaxisistreatedinthesamewayasasolidedge.Thefunction
ProAxisDataGet() allocatesandfillsaProGeomitemdata structurefora
ProAxis object.Therelevantfieldintheunionisp_curve_data, butthetype
ofthecontainededgeisalwaysaline.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAxisDataGet() allocatesandfillsaProGeomitemdata structurefora
ProAxis object.Therelevantfieldintheunionisp_curve_data, butthetype
ofthecontainededgeisalwaysaline.
GeometryofCoordinate SystemDatums
FunctionIntroduced:
•ProCsysDataGet()
Thefunction ProCsysDataGet() providesaProGeomitemdata structure
inwhichthefieldp_csys_data isset.Thisisapointertoastructurecalled
ProCsysdata, declaredinProCsysdata.h, thatcontainsthelocationofthe
origin,andthedirections ofthethreeaxes,ofthecoordinate systemdatum.
GeometryofDatumPlanes
Datumplanesaretreatedexactlylikesurfaces,soyoucanuse
ProSurfaceDataGet().
Theirtypeisalways PRO_SRF_PLANE.
Core:3DGeometry 189GeometryofQuilts
Functions Introduced:
•ProQuiltdataGet()
•ProQuiltdataSurfArrayGet()
•ProQuiltdataSurfArraySet()
•ProQuiltdataMemoryFre e()
•ProQuiltdataFre e()
•ProQuiltdataT ypeGet()
•ProQuiltdataT ypeSet()
•ProQuiltV olumeEval()
•ProQuiltIsBackupgeometry()
Aquiltrepresents a"patchwork" ofconnected nonsolidsurfaces.Aquiltmayxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProQuiltdataFre e()
•ProQuiltdataT ypeGet()
•ProQuiltdataT ypeSet()
•ProQuiltV olumeEval()
•ProQuiltIsBackupgeometry()
Aquiltrepresents a"patchwork" ofconnected nonsolidsurfaces.Aquiltmay
consistofasinglesurfaceoracollection ofsurfaces.Aquiltcontainsinformation
describing thegeometryofallthesurfacesthatcomposeaquiltandinformation
onhowquiltsurfacesare"stitched" (joinedorintersected). Apartcancontain
severalquilts.Youcancreateormanipulate quiltsusingasurfacefeature.
Tofindthesurfacesitcontains,useProQuiltSurfaceVisit() andanalyze
thegeometryofeachsurface.
Thefunction ProQuiltdataGet() retrievesinformation fromthequiltdata
structure.Thehelperfunctions ProQuiltdataSurfArrayGet() and
ProQuiltdataSurfArraySet() returnordefine,respectively ,anarrayof
pointerstothedatumsurfacesinthequiltdatastructure.
Thefunction ProQuiltdataMemoryFree() releasesthetop-levelmemory
associated withthequiltdatastructure.Thefunction ProQuiltdataFree()
releasestheunderlying memoryofthedatastructure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProQuiltdataMemoryFree() releasesthetop-levelmemory
associated withthequiltdatastructure.Thefunction ProQuiltdataFree()
releasestheunderlying memoryofthedatastructure.
Thefunction ProQuiltdataTypeGet() returnsthetypeofquiltdata.Ifthe
typeofquiltdataisabody,theoutputargument p_body_or_quilt returns
PRO_BODY andreturns PRO_QUILT ifthetypeisquilt.
Usethefunction ProQuiltdataTypeSet() tosetthetypeofquiltdataas
PRO_BODY orPRO_QUILT. Theinputargumentsfollow:
•p_quilt_data—The quiltdata.
•body_or_quilt—T ypeofquiltdataasPRO_BODY orPRO_QUILT.
Thefunction ProQuiltVolumeEval() calculates thevolumeofaclosed
quilt.
190 Creo®Parametric TOOLKIT User’sGuideThefunction ProQuiltIsBackupgeometry() identifiesifthespecified
quiltbelongstotheinvisibleCopyGeometry backupfeature.Itsinputargumentis
apointertothequilt’shandleofthetypeProQuilt. Ifthequiltbelongstothe
invisibleCopyGeometry backupfeature,thefunctionreturnsaProBoolean
withthevalue PRO_B_TRUE; otherwise, thevalueisPRO_B_FALSE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapointertothequilt’shandleofthetypeProQuilt. Ifthequiltbelongstothe
invisibleCopyGeometry backupfeature,thefunctionreturnsaProBoolean
withthevalue PRO_B_TRUE; otherwise, thevalueisPRO_B_FALSE.
GeometryofDatumSurfaces
Becausethesystemtreatsdatumsurfacesexactlylikesurfaces,youcanuse
ProSurfaceDataGet().
Theycanhaveanytypeofgeometry.
GeometryofDatumPoints
Functions Introduced:
•ProPointCoordGet()
Thefunction ProPointCoordGet() providestheX,Y,andZcoordinates of
thespecified ProPoint object.
GeometryofDatumCurves
Functions Introduced:
•ProCurveT ypeGet()
•ProCurveDataGet()
•ProCurvedataMemoryFr ee()
•ProCurvedataFr ee()
Datumcurvesusethesamedatastructureasedges,withthesamepossibletypes
ofgeometry.BecausetheyarestoredinadifferentlocationintheCreoParametric
database,theyneedtheirownfunctions:
•ProCurveTypeGet() isanalogous toProEdgeTypeGet().
•ProCurveDataGet() isanalogous toProEdgeDataGet().
Theenumerated typeProEnttype isusedtogetthetypeofcurve.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatabase,theyneedtheirownfunctions:
•ProCurveTypeGet() isanalogous toProEdgeTypeGet().
•ProCurveDataGet() isanalogous toProEdgeDataGet().
Theenumerated typeProEnttype isusedtogetthetypeofcurve.
•Thevalue PRO_ENT_CMP_CRV specifiesacomposite curve.
•Thevalue PRO_ENT_PARAM_CRV specifiesaparametrized curve(x(t),y(t),
z(t)),wherex,y,andzareuser-definedfunctions.
•Thevalue PRO_ENT_SRF_CRV specifiesaparameterized curve(u(t),v(t))
thatexistsonasurface,whereuandvareuser-definedfunctions.
Core:3DGeometry 191Usefunction ProCurvedataMemoryFree() tofreethetop-levelmemory
associated withthecurvedatastructure.Function ProCurvedataFree() frees
theunderlying memoryofthedatastructure.
GeometryofComposite Curves
Acomposite curvedoesnothavegeometryofitsown.Findthemembercurves
using ProCurveCompVisit() andanalyzetheirgeometryintheusualway.
RayTracing
Functions Introduced:
•ProSolidRayIntersectionCompute()
•ProSelectionDepthGet()
Thefunction ProSolidRayIntersectionCompute() findsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRayTracing
Functions Introduced:
•ProSolidRayIntersectionCompute()
•ProSelectionDepthGet()
Thefunction ProSolidRayIntersectionCompute() findsthe
intersections betweenarayandasolid.
Therayisdefinedintermsofastartlocationanddirectionvector.The
intersections aredescribedintermsofanarrayofProSelection objectsto
showtheircontextinanassembly.
Thefunctionfindsintersections inbothdirections fromthestartpointoftheray,
andassignseachintersection adepth—the distancefromtheraystartpointinthe
directiondefined(intersections inthereversedirectionhaveanegativedepth).
Youcanextractthedepthofeachintersection usingthefunction
ProSelectionDepthGet(). Theintersections areorderedfromthemost
negativedepthtothemostpositive.
Thefunctionprocessesallsolidsurfacesanddatumsurfaces,butnotdatum
planes.Italsoincludesedgesthatliewithinacertaincriticaldistance,calledthe
apertureradius,oftheray.Suchanedgeisshownasintersected, evenifa
neighboring surfaceisalsointersected. Thisimpliesthatseveralentriesinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapertureradius,oftheray.Suchanedgeisshownasintersected, evenifa
neighboring surfaceisalsointersected. Thisimpliesthatseveralentriesinthe
arraymayrepresentasingle“piercing,” ingeometrical terms.
Theapertureradiusisanoptionalinputtothefunction,definedintermsofpixels.
Ifyousupplyavaluelessthan–1.0,thevalueistakenfromtheCreoParametric
configuration fileoption pick_aperture_radius. Ifthatoptionisnotset,
thefunctionusesthedefaultvalueof7.0.
Inanassembly,eachcomponent isprocessed separately,soiftwocoincident
matingfacesarehit,thefunctionrecordstwoseparateintersections.
Surfacesandedgesthatarenotdisplayedbecausetheyareassignedtoablanked
layerarenotintersected.
192 Creo®Parametric TOOLKIT User’sGuideThisfunctionismostoftenusedinopticalanalysis,whencalculating thepathofa
rayoflightthroughanassemblywhosepartsrepresentlensesormirrors.Inthis
case,youwanttofindtheclosestintersecting surfaceinthepositivedirection,
thencalculatethenormaltothesurfaceatthatpoint,inassemblycoordinates.
Measurementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcase,youwanttofindtheclosestintersecting surfaceinthepositivedirection,
thencalculatethenormaltothesurfaceatthatpoint,inassemblycoordinates.
Measurement
Functions Introduced:
•ProSurfaceAr eaEval()
•ProContourAre aEval()
•ProSurfaceExtr emesEval()
•ProSurfacePrincipalCrvtEval()
•ProEdgeLengthEval()
•ProCurveLengthEval()
•ProEdgeLengthT1T2Eval()
•ProCurveLengthT1T2Eval()
•ProEdgeParamByLengthEval()
•ProCurveParamByLengthEval()
•ProGeomitemDistanceEval()
•ProGeomitemAngleEval()
•ProSurfaceDiameterEval()
•ProGeomitemDiameterEval()
•ProContourBoundbox3dCompute()
•ProContourBoundbox2dCompute()
•ProSelectionW ithOptionsDistanceEval()
Thefunction ProSurfaceAreaEval() evaluatesthesurfaceareasofa
specifiedsurface.Itisnotvalidfordatumplanes.
Function ProContourAreaEval() outputstheinsidesurfaceareaofa
specifiedoutercontour.Noteittakesintoaccountinternalvoids.
Thefunction ProSurfaceExtremesEval() findsthecoordinates oftheface
edgesattheextremesinthespecifieddirection.Theaccuracyoftheresultisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedoutercontour.Noteittakesintoaccountinternalvoids.
Thefunction ProSurfaceExtremesEval() findsthecoordinates oftheface
edgesattheextremesinthespecifieddirection.Theaccuracyoftheresultis
limitedtotheaccuracyofedgetessellation.
Function ProSurfacePrincipalCrvtEval() outputsthecurvatures and
directions ofthespecifiedsurfaceatagivenUVpoint.Theuandvvaluesare
obtainedbyspecifying theprojection typeasPRO_SRFTESS_NO_
PROJECTION forthefunction
ProSurfacetessellationinputUvprojectionSet().
Core:3DGeometry 193Thefunction ProEdgeLengthEval() evaluatesthelengthofasolidedge,and
ProCurveLengthEval() doesthesameforadatumcurve.
Function ProEdgeLengthT1T2Eval() findsthelengthofaspecifiededge
betweentwoparameters. Usefunction ProCurveLengthT1T2Eval() todo
thesameforacurve.
ProEdgeParamByLengthEval() findstheparameter valueofthepoint
locatedagivenlengthfromthespecifiedstartparameter.Usefunction
ProCurveParamByLengthEval() todothesameforacurve.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesameforacurve.
ProEdgeParamByLengthEval() findstheparameter valueofthepoint
locatedagivenlengthfromthespecifiedstartparameter.Usefunction
ProCurveParamByLengthEval() todothesameforacurve.
Thefunction ProGeomitemDistanceEval() measuresthedistancebetween
twogeometryitems.Thegeometryitemsareexpressed asProSelection
objects,soyoucanspecifyanytwoobjectsinanassembly.Eachobjectcanbean
axis,planesurface,ordatumpoint.
Thefunction ProGeomitemAngleEval() measurestheanglebetweentwo
geometryitemsexpressed asProSelection objects.Bothobjectsmustbe
straight,solidedges.
Thefunction ProSurfaceDiameterEval() measuresthediameterofa
surface,expressed asaProSelection object.Thesurfacetypemustbeoneof
thefollowing:
•Cylinder—The cylinderradius
•Torus—The distancefromtheaxistothegenerating arc
•Cone—The distanceofthepointspecifiedfromtheaxis
•Surfaceofrevolution—The distanceofthepointspecifiedfromtheaxis
Theuandvvaluesareobtainedbyspecifying theprojection typeasPRO_
SRFTESS_NO_PROJECTION forthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Surfaceofrevolution—The distanceofthepointspecifiedfromtheaxis
Theuandvvaluesareobtainedbyspecifying theprojection typeasPRO_
SRFTESS_NO_PROJECTION forthefunction
ProSurfacetessellationinputUvprojectionSet().
Note
Inthecaseofaspheremadebyrevolvinganarc,theCreoParametric
commandAnalysis ▶▶Diametergivestherealsphericaldiameter,whereas
ProGeomitemDiameterEval() givesthedistanceofthespecifiedpoint
fromtheaxisofrevolution.
Thefunctions ProContourBoundbox2dCompute() and
ProContourBoundbox3dCompute() outputaboundingboxfortheinside
surfaceofthespecifiedoutercontour.
194 Creo®Parametric TOOLKIT User’sGuideNote
•OnlytheProContourBoundbox3dCompute() functiontakesinto
accountinternalvoids.
•Theoutlinereturnedbythefunction
ProContourBoundbox3dCompute() represents theoutlineboxusedby
CreoParametric embedded algorithms, andhenceitcanbeslightlybiggerthan
theoutlinecomputed directlyfromthesurfaceparameters.
Thefunction ProSelectionWithOptionsDistanceEval() evaluatesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric embedded algorithms, andhenceitcanbeslightlybiggerthan
theoutlinecomputed directlyfromthesurfaceparameters.
Thefunction ProSelectionWithOptionsDistanceEval() evaluatesthe
distancebetweentwoitems.Youcanevaluatedistancebetweensurfaces,edges,
entities,vertices,curves,datums,andsoon.Theinitialselectionoftheitemis
usedtoguessthetypeofgeometry.Incaseoferrorinselectingthegeometry,the
outputargument p_result issetto-1.0andallparameters aresetto0.0.
Errortypes PRO_TK_BAD_INPUTS andPRO_TK_BAD_CONTEXT arereturned
when p_result issetto-1.0.
Theinputarguments option1 andoption2 areanalogous toOptionsinthe
MeasuredialogboxinCreoParametric userinterface.Youcanspecify PRO_B_
TRUEifyouwanttoturnonthefollowingoptionsfortheselecteditems:
•Iftheselecteditemisacylindrical surface,measuresthedistancefromthe
centralaxisofthecylindrical surface.Specify PRO_B_FALSE tomeasure
fromthesurfaceinsteadoftheaxis.
•Iftheselecteditemisanarc,measuresthedistancefromthecenterofacirclexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcentralaxisofthecylindrical surface.Specify PRO_B_FALSE tomeasure
fromthesurfaceinsteadoftheaxis.
•Iftheselecteditemisanarc,measuresthedistancefromthecenterofacircle
oranarc-shaped curveoredge.Specify PRO_B_FALSE tomeasurefromthe
edgeinsteadofthecenter.
•Iftheselecteditemisaplanarsurfaceoraplane,extendstheselectedsurface
orplanetoinfinityinbothdirections onlyforthepurposeofmeasuring
distance.Youcannowmeasurethedistancenormaltothereferenceentity.
•Iftheselecteditemislinear,extendstheselectedstraightedgeorcurveto
infinityinbothdirections onlyforthepurposeofmeasuring distance.Youcan
nowmeasurethedistancenormaltothereferenceentity.
Theoutputargumentsreturnthefollowingvalues:
•p_result—Distance betweenthetwoitems
•pnt_1andpnt_2—Critical pointforthefirstandsecondselecteditems.
Criticalpointistheactualpointusedformeasurement.
•param_1 andparam_2—UV parameter ofthecriticalpointforthefirstand
secondselecteditems
Core:3DGeometry 195Note
Thefunction ProSelectionDistanceEval() cannotbeusedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•param_1 andparam_2—UV parameter ofthecriticalpointforthefirstand
secondselecteditems
Core:3DGeometry 195Note
Thefunction ProSelectionDistanceEval() cannotbeusedto
evaluatedistancebetweendatumplanesandaxes.Thisfunctionwillbe
deprecated inafuturerelease.Usethefunction
ProSelectionWithOptionsDistanceEval() instead.
GeometryasNURBS
Functions Introduced:
•ProSurfaceT oNURBS()
•ProEdgeT oNURBS()
•ProCurveT oNURBS()
Acommonreasonforextracting thesolidgeometryofaCreoParametric modelis
topassittoanotherMCAEtoolforsomekindofengineering analysis.Notallof
theotherMCAEtoolssharetherichvarietyofgeometryequationtypessupported
byCreoParametric, andthereforemaynotbeabletoimportallthesurface
descriptions directly.BecausemanyMCAEsystemsusenonuniform rationalB-
splines(NURBS) tomodelsurfacesandedges,youfrequently needtoconvert
manyoralloftheCreoParametric surfacedescriptions toNURBsplines.
Thefunction ProSurfaceToNURBS() operatesonasurfaceofanytype.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsplines(NURBS) tomodelsurfacesandedges,youfrequently needtoconvert
manyoralloftheCreoParametric surfacedescriptions toNURBsplines.
Thefunction ProSurfaceToNURBS() operatesonasurfaceofanytype.The
functionmakesanaccurateapproximation oftheshapeofthesurfaceusinga
NURBS,andoutputsapointertothestructure ProSurfacedata. This
structurecontainsthesurfacetypePTC_B_SPLSRF, whichdescribestheformof
theNURBS.
Thefunction ProEdgeToNURBS() findsaone-dimensional NURBSthat
approximates aCreoParametric solidedge.Thefunctionoutputsapointertothe
ProCurvedata unionwhose b_spline fieldcontainstheNURBS
description.
Thefunction ProCurveToNURBS() providesthesamefunctionality as
ProEdgeToNURBS(), butforadatumcurve.
BothProSurfacedata andProCurvedata aredeclaredintheCreo
Parametric TOOLKITheaderfileProGeomitem.h.
Interference
Functions Introduced:
•ProFitClearanceCompute()
196 Creo®Parametric TOOLKIT User’sGuide•ProFitGlobalinterfer enceCompute()
•ProFitInterfer enceCompute()
•ProFitInterfer encevolumeCompute()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProFitClearanceCompute()
196 Creo®Parametric TOOLKIT User’sGuide•ProFitGlobalinterfer enceCompute()
•ProFitInterfer enceCompute()
•ProFitInterfer encevolumeCompute()
•ProFitInterfer encevolumeDisplay()
•ProInterfer enceDataFree ()
•ProInterfer enceInfoProarrayF ree()
•ProVolumeInterfere nceCompute()
•ProVolumeInterfere nceDisplay()
•ProVolumeInterfere nceBodiesGet()
•ProVolumeInterfere nceDisplayForBody()
•ProVolumeInterfere nceInfoArrayFr ee()
Thefunction ProFitClearanceCompute() computestheclearancebetween
twoobjects.Whenthefunctioncomputesclearancebetweentwoparts,italsotries
todetermine ifthereisinterference betweenthem.
Usethefunction ProFitGlobalinterferenceCompute() tocomputethe
interference inthespecifiedassembly.Iftheassemblyisregenerated, the
interference mustberecalculated. Theenumerated datatype
ProFitComputeSetup specifiesthesetuptocomputetheinterference for
partsorsubassemblies. Thevalidvaluesare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinterference mustberecalculated. Theenumerated datatype
ProFitComputeSetup specifiesthesetuptocomputetheinterference for
partsorsubassemblies. Thevalidvaluesare:
•PRO_FIT_PART—Computes interference betweenthepairsofpartsinan
assembly.Theinterference iscomputed onlyforthosepairswhosevolumecan
becalculated. Thepairswhosevolumecouldnotbecalculated areremoved.
•PRO_FIT_SUB_ASSEMBLY—Computes interference betweenthepairsof
subassemblies inanassembly,thatis,computesinterference betweenpartsof
differentsubassemblies. Theinterference iscomputed onlyforpairswhose
volumecanbecalculated. Thepairswhosevolumecouldnotbecalculated are
removed.
•PRO_FIT_PART_DETAILED—Computes interference betweenthepairsof
partsinanassembly.Theinterference iscomputed forallthepairsirrespective
ofwhetherthevolumecanbecalculated.
•PRO_FIT_SUB_ASSEMBLY_DETAILED—Computes interference between
thepairsofsubassemblies inanassembly,thatis,computesinterferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofwhetherthevolumecanbecalculated.
•PRO_FIT_SUB_ASSEMBLY_DETAILED—Computes interference between
thepairsofsubassemblies inanassembly,thatis,computesinterference
betweenpartsofdifferentsubassemblies. Theinterference iscomputed forall
thepairsirrespective ofwhetherthevolumecanbecalculated.
Core:3DGeometry 197Thefunction ProFitInterferenceCompute() returnstheinterference
information specifiedbetweentwoitems.Inassemblymode,eachitemiseithera
component partorasolidbodyofapart.InPartmode,eachitemisasolidbody
ofthecurrentpart.Iftheitemsareregenerated, theinterferences mustbe
recalculated. Theinputargumentsfollow:
•sel_1—The firstpartorsolidbody.
•sel_2—The secondpartorsolidbody.
•set_facets—The optiontoincludefacetsforparts.
•set_quilts—The optiontoincludequiltsforparts.
Note
SettheProBoolean arguments set_facets andset_quiltstoPRO_B_
TRUEtoincludefacetsorquiltsinthemodel,respectively .
Note
Theinterference dataobtainedfromthefunctions
ProFitGlobalinterferenceCompute() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSettheProBoolean arguments set_facets andset_quiltstoPRO_B_
TRUEtoincludefacetsorquiltsinthemodel,respectively .
Note
Theinterference dataobtainedfromthefunctions
ProFitGlobalinterferenceCompute() and
ProFitInterferenceCompute() mustbepassedasinputtothe
functions ProFitInterferencevolumeCompute() and
ProFitInterferencevolumeDisplay(). Theinterference datamust
notincludefacetsorquilts.Theymustincludeinformation aboutonly
interfering solids.
Thefunction ProFitInterferenceCompute() returnsanerrorPRO_TK_
NOT_EXIST ifoneormoreitemsspecifiedbyeitheroftheinputarguments sel_1
andsel_2couldnotbefoundordoesnotcontainanygeometrywithwhichto
computeinterference.
ThefunctionreturnstheerrorPRO_TK_GENERAL_ERROR iftheinterference
couldnotbecomputed.
Thefunction ProFitInterferencevolumeCompute() calculates volume
ofinterference betweentwospecifiedcomponents. Usethefunction
ProFitInterferencevolumeDisplay() todisplaythevolumeof
interference betweenthetwospecifiedcomponents.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofinterference betweentwospecifiedcomponents. Usethefunction
ProFitInterferencevolumeDisplay() todisplaythevolumeof
interference betweenthetwospecifiedcomponents.
Usethefunctions ProInterferenceDataFree() and
ProInterferenceInfoProarrayFree() tofreetheinterference data
obtainedfromthefunctions ProFitInterferenceCompute() and
ProFitGlobalinterferenceCompute() respectively .
198 Creo®Parametric TOOLKIT User’sGuideThefunction ProVolumeInterferenceCompute() calculates thevolume
interference betweentheselectedclosedquiltandanassembly.Theoutput
argument p_intf_infos isapointertotheProArray, wheretheinterference
resultsarestored.Theinterference dataisreturnedasa
ProVolumeInterferenceInfo structure.
Usethefunction ProVolumeInterferenceInfoArrayFree() tofreethe
interference dataobtainedfromthefunction
ProVolumeInterferenceCompute(). Thefunctionissupported onlyin
DLLmode.
Thefunction ProVolumeInterferenceDisplay() displaysthecurvesandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinterference dataobtainedfromthefunction
ProVolumeInterferenceCompute(). Thefunctionissupported onlyin
DLLmode.
Thefunction ProVolumeInterferenceDisplay() displaysthecurvesand
surfacesthatinterferewiththeselectedquiltinthespecifiedcolororhidesthem.
Thisfunctionmustbecalledaftertheinterference dataiscomputed. Theinput
argumentsare:
•inetrf_data —Specifiesapointertotheinterference data.
•color—Specifiesthecolortouseforhighlighting theinterference.
•hilite—Specifiesifthecurvesandsurfacesthatinterferewiththeselected
quiltmustbedisplayedorhidden.Specify PRO_B_TRUE fordisplaying the
interfering component andPRO_B_FALSE forhidingit.
Usethefunction ProVolumeInterferenceBodiesGet() toobtainthe
solidbodiesofthespecifiedcomponent thatparticipate intheinterference with
theselectedclosedquilt.Theinputargument interf_data specifiedthroughthe
structure ProVolumeInterferenceData isthepointertotheinterference
dataforthecorresponding component thatinterfereswiththequilt.Theoutputxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructure ProVolumeInterferenceData isthepointertotheinterference
dataforthecorresponding component thatinterfereswiththequilt.Theoutput
argument r_bodies returnsanarrayofthebodiesthroughthestructure
ProSolidBody whichisallocatedbythefunction.
Callthefunction ProVolumeInterferenceCompute() beforeusing
ProVolumeInterferenceBodiesGet().
Thefunction ProVolumeInterferenceBodiesGet() returnsanerror
PRO_TK_E_NOT_FOUND iftherearenosolidbodiesintheinterference data.
Thefunction ProVolumeInterferenceDisplayForBody() displaysor
hidesthecurvesandsurfacesofthespecifiedsolidbodythatinterferewiththe
quiltthatisselected.Theinputarguments follow:
•interf_data— Pointertotheinterference dataforthecorresponding component
thatinterfereswiththequilt.
•p_body—Pointer tothesolidbodyinthespecifiedcomponent.
•color—Specifiesthecolortobeusedforhighlighting theinterference andis
definedbytheenumerated datatypeProColortype.
•hilite—Specifiesifthecurvesandsurfacesthatinterferewiththeselectedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•color—Specifiesthecolortobeusedforhighlighting theinterference andis
definedbytheenumerated datatypeProColortype.
•hilite—Specifiesifthecurvesandsurfacesthatinterferewiththeselected
quiltmustbedisplayedorhidden.Specify PRO_B_TRUE fordisplaying the
interference geometryofthespecifiedbodyandPRO_B_FALSE forhidingit.
Core:3DGeometry 199Thefunction ProVolumeInterferenceDisplayForBody() returnsan
errorPRO_TK_E_NOT_FOUND ifthegivenbodydoesnotinterferewiththe
quilt.
Callthefunction ProVolumeInterferenceInfoArrayFree() toremove
theinterference highlighted bythefunction
ProVolumeInterferenceDisplay() orpartiallyhighlighted bythe
function ProVolumeInterferenceDisplayForBody().
FacetedGeometry
CreoParametric allowsyoutobuildasurfaceCADmodelontopoffacetedor
triangulardata.Eachfacetisuniquelyidentifiedbyafacenormalandthree
vertices.
Afacetisrepresented bytheopaquehandle ProFacet, whileasetoffacetsis
represented bytheDHandle ProFacetSet. ProFacetSet hasthesamexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvertices.
Afacetisrepresented bytheopaquehandle ProFacet, whileasetoffacetsis
represented bytheDHandle ProFacetSet. ProFacetSet hasthesame
structureastheobject ProModelitem andisdefinedasfollows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProFacetSet;
VisitingFacetsandFacetSets
Thefunctionsdescribedbelowenableyoutofindallthefacetsetsinamodeland
visitthefacetsstoredinthosesets.
Functions Introduced:
•ProSolidFacetsetV isit()
•ProFacetsetFacetV isit()
Thefunction ProSolidFacetsetVisit() visitseachofthefacetsetsina
givenmodel.Thisfunctiontakesthefilterfunction
ProFacetsetFilterAction() andthevisitfunction
ProFacetsetVisitAction() asitsinputarguments.Thefunction
ProFacetsetFilterAction() isagenericactionfunctionforfilteringthe
facetsetsfromamodel.Itreturnsthefilterstatusofthefacetsets.Thisstatusis
usedasaninputargumentbythevisitactionfunction
ProFacetsetVisitAction().
Thefunction ProFacetsetFacetVisit() visitsthefacetsinthefacetedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusedasaninputargumentbythevisitactionfunction
ProFacetsetVisitAction().
Thefunction ProFacetsetFacetVisit() visitsthefacetsinthefaceted
geometryset.Thisfunctiontakesthefilterfunction
ProFacetFilterAction() andthevisitfunction
ProFacetVisitAction() asitsinputarguments.Thefunction
200 Creo®Parametric TOOLKIT User’sGuideProFacetFilterAction() isagenericactionfunctionforfilteringafacet
fromthefacetedgeometryset.Itreturnsthefilterstatusofthefacet.Thisstatusis
usedastheinputargumentbythevisitactionfunction
ProFacetVisitAction().
AccessingFacetProperties
Thefunctionsdescribedbelowallowyoutoaccessthefacenormalandthree
verticesorcornersofafacet.Afacetvertexisgivenbytheobject
ProFacetVertex.
Functions Introduced:
•ProFacetV erticesGet()
•ProFacetverticesFr ee()
•ProFacetvertexPointGet()
•ProFacetNormalGet()
Thefunction ProFacetVerticesGet() obtainstheverticesofaspecified
facet.
Usethefunction ProFacetverticesFree() toreleasethememoryallocated
fortheverticesofafacet.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProFacetNormalGet()
Thefunction ProFacetVerticesGet() obtainstheverticesofaspecified
facet.
Usethefunction ProFacetverticesFree() toreleasethememoryallocated
fortheverticesofafacet.
Thefunction ProFacetvertexPointGet() returnsthelocationofthefacet
vertexinthemodelcoordinate system.
Thefunction ProFacetNormalGet() returnsthenormalvectorofafacetin
themodelcoordinate system.
Core:3DGeometry 2017
Core:Relations
Relations................................................................................................................203
AddingaCustomized FunctiontotheRelationsDialoginCreoParametric..................206
Thischapterdescribeshowtoaccessrelationsonallmodelsandmodelitemsin
CreoParametric usingthefunctionsprovidedinCreoParametric TOOLKIT.
202 Creo®Parametric TOOLKIT User’sGuideRelations
Functions Introduced:
•ProModelitemT oRelset()
•ProSolidRelsetV isit()
•ProRelsetT oModelitem()
•ProRelsetPostre generationInit()
•ProRelsetRegenerate()
•ProRelsetCre ate()
•ProRelsetDelete()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProModelitemT oRelset()
•ProSolidRelsetV isit()
•ProRelsetT oModelitem()
•ProRelsetPostre generationInit()
•ProRelsetRegenerate()
•ProRelsetCre ate()
•ProRelsetDelete()
•ProRelsetRelationsGet()
•ProRelsetRelationsSet()
•ProRelationEvalWi thUnits()
•ProRelationEvalWi thUnitsRefResolve()
•ProRelsetUnitsSensitiveSet()
•ProRelsetIsUnitsSensitive()
Theobject ProRelset represents theentiresetofrelationsonanymodelor
modelitem.Itisanopaquehandlewhosecontentscanbeaccessedonlythrough
thefunctionsdescribedinthissection.
CreoParametric TOOLKITcanonlyaccesstherelationsofthemodelsandmodel
itemtypesaslistedinthetablebelow:
ModelTypes Description
PRO_PART Part
PRO_ASSEMBLY Assembly
PRO_DRAWING Drawing
PRO_REPORT Report
PRO_DIAGRAM Diagram
PRO_DWGFORM Format
PRO_UDF User-definedfeature
PRO_FEATURE Feature
PRO_SURFACE Surface
PRO_EDGE Edge
PRO_WELD_PARAMS Weldparameters
PRO_BND_TABLE Bendtable
PRO_EXTOBJ Externalobjects
PRO_PATREL_FIRST_DIR Patterndirection1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_FEATURE Feature
PRO_SURFACE Surface
PRO_EDGE Edge
PRO_WELD_PARAMS Weldparameters
PRO_BND_TABLE Bendtable
PRO_EXTOBJ Externalobjects
PRO_PATREL_FIRST_DIR Patterndirection1
PRO_PATREL_SECOND_DIR Patterndirection2
PRO_RELOBJ_QUILT Quilt
PRO_RELOBJ_CRV Curve
Core:Relations 203ModelTypes Description
PRO_RELOBJ_COMP_CRV Compound curve
PRO_RELOBJ_ANNOT_ELEM Annotation Element
PRO_RELOBJ_NC_STEP_OBJECT NCStepTableEntry
PRO_RELOBJ_NC_STEP_MODEL NCStepTableModel
Thefunction ProModelitemToRelset() outputsaProRelset objectthat
containsthesetofinitialrelationsownedbythegivenmodelitem.(Notethatnot
allmodelitemscanhaverelationssetsassociated withthem—only thetypeslisted
inthetable.)
Usethefunction ProRelsetPostregenerationInit() toinitializethe
post-regeneration dataobject ProRelset. Theobjectcontainspost-regeneration
relationsinthespecifiedmodel.
Note
According toyourrequirement youcanpasstheinitialrelations,orthepost-
regeneration relationsdataobject, ProRelset asinputtothefunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrelationsinthespecifiedmodel.
Note
According toyourrequirement youcanpasstheinitialrelations,orthepost-
regeneration relationsdataobject, ProRelset asinputtothefunctions
ProRelsetRelationsGet(), ProRelsetRelationsSet(),
ProRelsetRegenerate() andProRelsetDelete().
Togettherelationsofafeaturepattern,themodelitemtypeshouldbeeither
PRO_PATREL_FIRST_DIR orPRO_PATREL_SECOND_DIR, andthe
identifiershouldbethatofthedimension onthepatternleaderthatdrivesthe
patterninthatdirection.Tofindtheidentifiers ofthepatterndimension, usethe
functionsdescribedinthesectionManipulating Patternsonpage142.
Thefunction ProSolidRelsetVisit() enablesyoutovisitalltherelation
setsoneverymodeliteminamodel.Likeothervisitfunctions, itcallsauser-
suppliedactionfunctionforeachrelationset,althoughthereisnofilterfunction.
Iftheuser-suppliedfunctionreturnsanystatusotherthanPRO_TK_NO_ERROR,
visitingwillstop.Themodeltypes PRO_PART, PRO_ASSEMBLY, andPRO_
DRAWING aresupported.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIftheuser-suppliedfunctionreturnsanystatusotherthanPRO_TK_NO_ERROR,
visitingwillstop.Themodeltypes PRO_PART, PRO_ASSEMBLY, andPRO_
DRAWING aresupported.
Thefunction ProRelsetToModelitem() outputsthemodelitemthatisthe
ownerofthespecified ProRelset.
Youcanregenerate arelationsetusingthefunction
ProRelsetRegenerate(). Thisfunctionalsodetermines whetherthe
specifiedrelationsetisvalid.Ifanerroroccurred,thefunctionreturnsastatus
otherthanPRO_TK_NO_ERROR.
Tocreateanewrelationsetforamodelitem,usethefunction
ProRelsetCreate(). Ifarelationsetalreadyexistsforthatitem,thefunction
returns PRO_TK_E_FOUND.
204 Creo®Parametric TOOLKIT User’sGuideTodeletealltherelationsinaspecifiedrelationset,callthefunction
ProRelsetDelete().
Thefunction ProRelsetRelationsGet() extractsthetextofasetof
relationsdescribedbyaProRelset object.Thisfunctiontakestwoarguments:
theProRelset fortherelationsetandapreallocated expandable array.The
elementsoftheexpandable arrayareoftypeProLine (widestrings).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrelationsdescribedbyaProRelset object.Thisfunctiontakestwoarguments:
theProRelset fortherelationsetandapreallocated expandable array.The
elementsoftheexpandable arrayareoftypeProLine (widestrings).
Thefunction ProRelsetRelationsSet() createsaProRelset object
fromanexpandable arrayofProLine objectsthatdescribestherelationsastext.
Fordetailsofthesyntaxanduseofrelations,seetheCreoParametric help.
Note
Existingrelationswillbeoverwritten byacallto
ProRelsetRelationsSet().
Thefunction ProRelationEvalWithUnits() evaluatesalineofarelation
setandoutputstheresultingvalueintheformofaProParamvalue structure.
Specifytheinputargument consider_units astrueifyouwanttheunitsof
therelationtobeconsidered whileevaluating therelation.Inthiscase,theresult
oftherelationisreturnedalongwithitsunit.SeethechapterCore:Parameters on
page208foradescription ofthisdatastructure.Theuseofspecialpatternrelation
symbolssuchasmemb_voridx1isnotsupported; instead,replacethesexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpage208foradescription ofthisdatastructure.Theuseofspecialpatternrelation
symbolssuchasmemb_voridx1isnotsupported; instead,replacethese
symbolswiththecorresponding dimension valueornumber,andevaluatethem
individually .
Thefunction ProRelationEvalWithUnits() cannotbeusedfor
referencing externalsymbols.
Note
Thefunction ProRelationEvalWithUnits() willbedeprecated ina
futurereleaseofCreoParametric. Usethefunction
ProRelationEvalWithUnitsRefResolve() instead.
Thefunction ProRelationEvalWithUnitsRefResolve() evaluatesthe
expression thatisspecifiedontherightsideofarelationlineandreturnsthevalue
intheformofProParamvalue structure.Relationswithsymbolsthatare
referenced byparameters ordimensions onadifferentmodelcanbeevaluated
usingthefunction ProRelationEvalWithUnitsRefResolve(). Specify
theinputargument consider_units astrueifyouwanttheunitsofthe
relationtobeconsidered whileevaluating therelation.Inthiscase,theresultof
therelationisreturnedalongwithitsunit.SeethechapterCore:Parameters onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrelationtobeconsidered whileevaluating therelation.Inthiscase,theresultof
therelationisreturnedalongwithitsunit.SeethechapterCore:Parameters on
page208foradescription ofthisdatastructure.Theuseofspecialpatternrelation
Core:Relations 205symbolssuchasmemb_voridx1isnotsupported; instead,replacethese
symbolswiththecorresponding dimension valueornumber,andevaluatethem
individually .
Thefunction ProRelsetUnitsSensitiveSet() specifiesthatunitsmust
beconsidered whilesolvingthespecifiedrelation.Usethefunction
ProRelsetIsUnitsSensitive() tocheckifunitsmustbeconsidered
whilesolvingtherelation.
AddingaCustomized Functiontothe
RelationsDialoginCreoParametric
Functions Introduced:
•ProRelationFunctionRegister()
•ProRelationReadFunction()
•ProRelationWr iteFunction()
•ProRelationArgscheckFunction()
Thefunction ProRelationFunctionRegister() registersacustom
functionthatisvisibletousersintheCreoParametric relationsdialog.Toregister
acustomfunctionyoumaysupplythefollowing:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProRelationFunctionRegister() registersacustom
functionthatisvisibletousersintheCreoParametric relationsdialog.Toregister
acustomfunctionyoumaysupplythefollowing:
•Anarrayofexpectedarguments.Theargumentsaredescribedbytheirtype
(double,integer,etc)andattributesindicating iftheargumentcanbeskipped
whentheusercallstherelationsfunction.Theseoptionalargumentsmustfall
attheendoftheargumentlist.
•ABooleanindicating whetherornottocheckargumenttypesinternally.Ifthe
Booleanissetnottochecktheargumenttypesinternally,CreoParametric
doesnotneedtoknowthecontentsoftheargumentsarray.Thecustom
functionyoucreatemusthandlealltheusererrorsinthissituation.
•Anargumentscheckfunction,whichcanbeusedtoverifytheinput
arguments.
•Areadfunction,whichprovidesthevalueofthefunctionwhenusedinthe
right-hand sideofarelation.Forexample
d12 =ptk_user_function (0.5, 5,true, inch)
•Awritefunction,whichreceivesthevaluewhenthefunctionisusedinthe
left-handsideoftherelation.Forexample:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxright-hand sideofarelation.Forexample
d12 =ptk_user_function (0.5, 5,true, inch)
•Awritefunction,whichreceivesthevaluewhenthefunctionisusedinthe
left-handsideoftherelation.Forexample:
ptk_user_function (assigned_value) =14.0;
•AllthecallbackfunctionsareoptionalandmaybeNULL.
206 Creo®Parametric TOOLKIT User’sGuideNote
CreoParametric TOOLKITregistered relationsarevalidonlywhenthe
functionhasbeenregistered bytheapplication. Iftheapplication isnot
runningornotpresent,modelsthatcontainuser-definedrelationscannot
evaluatetheserelations.Inthissituation,therelationsaremarkedaserrors,
however,theycanbecommented untilneededatalatertimewhenthe
relationfunctionsarereactivated.
ThefunctiontypeProRelationReadFunction() iscalledwhenacustom
relationfunctionisusedontheright-hand sideoftherelation.Youshouldoutput
thecomputed valueofthecustomrelationfunctionwhichisusedtocomplete
evaluation oftherelation.
Thefunction ProRelationWriteFunction(), iscalledwhenacustomxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecomputed valueofthecustomrelationfunctionwhichisusedtocomplete
evaluation oftherelation.
Thefunction ProRelationWriteFunction(), iscalledwhenacustom
functionisusedonthelefthandsideofarelation.Thevalueoftheright-hand side
oftherelationisprovidedasaninput.Youcanusethistypeoffunctionto
initializeproperties tobestoredandusedbyyourCreoParametric TOOLKIT
application.
Thefunction ProRelationArgscheckFunction() performstheargument
checkfunctionforacustomrelationfunction.Return PRO_TK_NO_ERROR to
indicatethattheargumentspassedtotherelationarevalid.Anyothererrorcauses
anerrortobedisplayedintheRelationsdialog.
Thefollowingexamplecreatesthreeexternally definedfunctionstobeavailable
intherelationsdialog:
ptk_set_a andptk_set_b areusedfromtheleft-handsideofrelationsto
initializedoublevaluestostored"A"and"B"variables.
ptk_eval_ax_plus_b returnsthecomputation ofAx+B,wherexisaninput
tothefunction.
ThesefunctionsareavailableonlywhiletheCreoParametric TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinitializedoublevaluestostored"A"and"B"variables.
ptk_eval_ax_plus_b returnsthecomputation ofAx+B,wherexisaninput
tothefunction.
ThesefunctionsareavailableonlywhiletheCreoParametric TOOLKIT
application isrunning.Modelscanbesavedwithrelationsreferencing these
functions, butthesemodelswillhaverelationerrorsifretrievedwhilethe
application isnotrunning.
CodeExample
ThesamplecodeinthefileUgCustomRelationFunction.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
paramshowshowtousethe"Write"functionfortheassignment ofthe
parameters usedforcalculation.
Core:Relations 2078
Core:Parameters
ParameterObjects..................................................................................................209
ParameterValues....................................................................................................210
AccessingParameters.............................................................................................210xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingParameters.............................................................................................210
Designating Parameters WindchillServers................................................................216
RestrictedParameters.............................................................................................216
Table-Restricted Parameters....................................................................................217
DrivenParameters ..................................................................................................218
ThischapterdescribestheCreoParametric TOOLKITfunctionsthatgiveaccess
toparameters andgeometric tolerances.
208 Creo®Parametric TOOLKIT User’sGuideParameterObjects
Theobject ProParameter describesthecontentsandownership ofaparameter.
ProParameter isaDHandlewhosedeclaration isasfollows:
typedef struct proparameter
{
ProType type;
ProName id;
ProParamowner owner;
}ProParameter;
typedef struct proparamowner
{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProParameter isaDHandlewhosedeclaration isasfollows:
typedef struct proparameter
{
ProType type;
ProName id;
ProParamowner owner;
}ProParameter;
typedef struct proparamowner
{
ProParamfrom type;
union
{
ProModelitem item;
ProMdl model;
}who;
}ProParamowner;
typedef enum proparamfrom
{
PRM_MODEL,
PRM_ITEM
}ProParamfrom;
Astructurecalled ProParamvalue isusedtorepresentthevalueofa
parameter.Itsdeclaration isasfollows:
typedef struct Pro_Param_Value
{
ProParamvalueType type;
ProParamvalueValue value;
}ProParamvalue;
typedef enum param_value_types
{
PRO_PARAM_DOUBLE,
PRO_PARAM_STRING,
PRO_PARAM_INTEGER,
PRO_PARAM_BOOLEAN,
PRO_PARAM_NOTE_ID,
PRO_PARAM_VOID
}ProParamvalueType;
typedef union param_value_values
{
double d_val;
int i_val;
short l_val;
ProLine s_val;
}ProParamvalueValue;
Core:Parameters 209ParameterValues
Functions introduced:
•ProParamvalueSet()
•ProParamvalueV alueGet()
•ProParamvalueT ypeGet()
Thesethreefunctionsareutilitiestohelpyoumanipulate theProParamvaluexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCore:Parameters 209ParameterValues
Functions introduced:
•ProParamvalueSet()
•ProParamvalueV alueGet()
•ProParamvalueT ypeGet()
Thesethreefunctionsareutilitiestohelpyoumanipulate theProParamvalue
structure.Theydonotdirectlyaffectanyparameter inCreoParametric .
Thefunction ProParamvalueSet() setsthevaluetypeofa
ProParamvalue structure,andwritesavalueofthattypetotheobject.
Thefunction ProParamvalueTypeGet() providesthetypeofa
ProParamvalue object.
Thefunction ProParamvalueValueGet() readsavalueofthespecifiedtype
fromaProParamvalue structure.
AccessingParameters
Functions introduced:
•ProParameterInit()
•ProParameterV alueWi thUnitsGet()
•ProParameterV alueWi thUnitsSet()
•ProParameterIsModified()
•ProParameterV alueReset()
•ProParameterCr eate()
•ProParameterDelete()
•ProParameterSelect()
•ProParameterT ableExport()
•ProParameterV isit()
•ProParameterReorder()
•ProParameterT oFamtableItem()
•ProParameterUnitsGet()
•ProParameterUnitsAssign()
•ProParameterW ithUnitsCr eate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProParameterT ableExport()
•ProParameterV isit()
•ProParameterReorder()
•ProParameterT oFamtableItem()
•ProParameterUnitsGet()
•ProParameterUnitsAssign()
•ProParameterW ithUnitsCr eate()
•ProParameterScaledvalueGet()
•ProParameterScaledvalueSet()
210 Creo®Parametric TOOLKIT User’sGuide•ProParameterDescriptionGet()
•ProParameterDescriptionSet()
•ProParameterLockstatusGet()
•ProParameterLockstatusSet()
Thefunction ProParameterInit() initializesaProParameter objectby
definingitsnameandowner.Theownerisexpressed intermsofa
ProModelitem object,andcanbeaCreoParametric model,feature,surface,or
edge.
Iftheownerisamodel,useProMdlToModelitem() tocreatethe
ProModelitem object;inothercases,useProModelitemInit().
Thefunction ProParameterValueWithUnitsGet() readsthevalueofa
parameter specifiedbyaProParameter objectintoaProParamvalue
objectprovidedbytheapplication. Thefunctionalsoretrievestheunitsinwhich
theparameter valuewasexpressed.
Thefunction ProParameterValueWithUnitsSet() setsthevalueofaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxobjectprovidedbytheapplication. Thefunctionalsoretrievestheunitsinwhich
theparameter valuewasexpressed.
Thefunction ProParameterValueWithUnitsSet() setsthevalueofa
CreoParametric parameter identifiedbyaProParameter objecttoavalue
specifiedinaProParamvalue structure.Theparameter isexpressed usingthe
valuespecifiedfortheinputparameter units.
Note
Iftheinputargument unitsispassedasNULL,thentheparameter willhavethe
sameunitsasthatoftheownermodel.
TheProParameterIsModified() functionreturnsabooleanvaluethat
indicateswhetherthevalueofthespecifiedparameter hasbeenmodifiedsincethe
lastsuccessful regeneration oftheparameter owner.Thisfunctionworks
successfully forsolidmodelsonly.
Thefunction ProParameterValueReset() setsthevalueofaparameter to
theoneithadattheendofthelastregeneration.
Thefunction ProParameterCreate() addsanewparameter totheCreo
Parametric database,andreturnsavalidProParameter objectforthenew
parameter.ThisfunctiontakesinputargumentssuchastheProModelitemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProParameterCreate() addsanewparameter totheCreo
Parametric database,andreturnsavalidProParameter objectforthenew
parameter.ThisfunctiontakesinputargumentssuchastheProModelitem
objectfortheowner,thename,andtheProParamvalue structureforthevalue.
Core:Parameters 211Note
•Modelitemsmusthaveanamebeforeyoucreateaparameter forthem.
Geometric itemssuchassurfaces,edges,curves,andquiltsarenotnamedby
default;useProModelitemNameSet() ontheseitemsbeforeattempting
toaddparameters tothem.
•FromCreoParametric 1.0onwards,youcancreateparameters ontopofan
externalsimplified representation assembly.However,youcannotcreate
parameters ontheextractedmasterassemblycomponent.
Thefunction ProParameterDelete() deletesaparameter,specifiedbya
ProParameter object,fromtheCreoParametric database.
Thefunction ProParameterSelect() allowstheusertoselectoneormore
parameters ofaspecifiedmodelordatabaseitemfromtheParameters dialogbox
inCreoParametric .Thetopmodelfromwhichtheparameters willbeselectedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProParameterSelect() allowstheusertoselectoneormore
parameters ofaspecifiedmodelordatabaseitemfromtheParameters dialogbox
inCreoParametric .Thetopmodelfromwhichtheparameters willbeselected
mustbedisplayedinthecurrentwindow.Theinputargument contextallowsyou
toselectparameters bycontext.Ittakesthefollowingvalues:
•PRO_PARAMSELECT_ANY—Specifies anyparameter.
•PRO_PARAMSELECT_MODEL—Specifies theparameters ofthetop-level
model.
•PRO_PARAMSELECT_PART—Specifies theparameters ofanypart.
•PRO_PARAMSELECT_ASM—Specifies theparameters ofanyassembly.
•PRO_PARAMSELECT_FEATURE—Specifies theparameters ofanyfeature.
•PRO_PARAMSELECT_EDGE—Specifies theparameters ofanyedge.
•PRO_PARAMSELECT_SURFACE—Specifies theparameters ofanysurface.
•PRO_PARAMSELECT_QUILT—Specifies theparameters ofanyquilt.
•PRO_PARAMSELECT_CURVE—Specifies theparameters ofanycurve.
•PRO_PARAMSELECT_COMPOSITE_CURVE—Specifies theparameters of
anycomposite curve.
•PRO_PARAMSELECT_INHERITED—Specifies theparameters ofanyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_PARAMSELECT_CURVE—Specifies theparameters ofanycurve.
•PRO_PARAMSELECT_COMPOSITE_CURVE—Specifies theparameters of
anycomposite curve.
•PRO_PARAMSELECT_INHERITED—Specifies theparameters ofany
inheritance feature.
•PRO_PARAMSELECT_SKELETON—Specifies theparameters ofany
skeleton.
•PRO_PARAMSELECT_COMPONENT—Specifies theparameters ofany
component.
212 Creo®Parametric TOOLKIT User’sGuide•PRO_PARAMSELECT_ALLOW_SUBITEM_SELECTION—Specifies the
parameters ofallthesubitemsofthetopmodel.
Note
ThesignatureofProParameterSelect() haschangedfromPro/
ENGINEER Wildfire2.0onward.
Thefunction ProParameterTableExport() exportsafilecontaining
information fromaparameter tableinCreoParametric intheCSVorTXTformat.
IftheoutputtypeisCSV,theoutputfilecontainsthecolumnsspecifiedbythe
inputargument column_list, whichisabitmaskofcolumns.IntheCSVformat,
onlythelocalparameters areexported.However,iftheoutputtypeisTXT,thena
defaultsetofcolumnsisexported.IntheTXTformat,alltheparameters inthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonlythelocalparameters areexported.However,iftheoutputtypeisTXT,thena
defaultsetofcolumnsisexported.IntheTXTformat,alltheparameters inthe
specifiedmodelareexported.
Thefunction ProParameterVisit() visitsalltheparameters onaspecified
databaseitem.
Note
•Theparameters arereturnedintheorderthattheyappearintheparameter
dialogboxforthedatabaseitem.
•ProParameterVisit() doesnotvisitmasspropertyparameters.
Thefunction ProParameterReorder() reordersthegivenparameter to
comejustaftertheindicatedparameter.
Thefunction ProParameterToFamtableItem() converts
ProParameter objectstoProFamtableItem objects.Youmayneedtocall
ProParameterToFamtableItem() aftercalling
ProParameterSelect() thatallowsyoutoselectparameters fromamenu.
Thefunction ProParameterUnitsGet() fetchestheunitsassignedtoa
parameter.
Thefunction ProParameterUnitsAssign() assignsthespecifiedunittoa
parameter.Iftheparameter alreadyhasaunitassignedtoit,thefunctionwill
reassignthespecifiedunittoit.Thefunctioncanreassignunitonlyfromthesamexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameter.Iftheparameter alreadyhasaunitassignedtoit,thefunctionwill
reassignthespecifiedunittoit.Thefunctioncanreassignunitonlyfromthesame
quantitytype.Toconvertaparameter withunittoaunitlessparameter,passthe
inputargument unitsasNULL.
Thefunction ProParameterWithUnitsCreate() enablesthecreationofa
newparameter withtheassignedunits.Tocreateaparameter withoutunits,pass
theinputargument unitsasNULL.
Core:Parameters 213Thefunction ProParameterScaledvalueGet() retrievestheparameter
valueintermsoftheunitsoftheparameter,insteadoftheunitsoftheowner
model.
Thefunction ProParameterScaledvalueSet() setstheparameter valuein
termsoftheunitsprovided,insteadofusingtheunitsoftheownermodel.
Thefunction ProParameterDescriptionGet() obtainsthedescription of
theparameter.Thefunction ProParameterDescriptionSet() assignsthe
description oftheparameter.
Thefunction ProParameterLockstatusGet() returnstheaccessstateof
thespecifiedparameter.Usethefunction ProParameterLockstatusSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdescription oftheparameter.
Thefunction ProParameterLockstatusGet() returnstheaccessstateof
thespecifiedparameter.Usethefunction ProParameterLockstatusSet()
tosettheaccessstateforthespecifiedparameter.Theaccessstateisdefinedinthe
enumerated datatypeProLockstatus. Thevalidvaluesare:
•PRO_PARAMLOCKSTATUS_UNLOCKED—Parameters withfullaccessare
user-definedparameters, thatcanbemodifiedfromanyapplication.
•PRO_PARAMLOCKSTATUS_LIMITED—Full accessparameters canbesetto
havelimitedaccess.Limitedaccessparameters canbemodifiedbyuser,
familytablesandprograms. Theseparameters cannotbemodifiedbyrelations.
•PRO_PARAMLOCKSTATUS_LOCKED—Parameters withlockedaccessare
parameters thatcanbelockedeitherbyanexternalapplication, orbytheuser.
Youcanmodifyparameters lockedbyanexternalapplication onlyfromwithin
anexternalapplication. Youcannotmodifyuser-defined lockedparameters
fromwithinanexternalapplication.
Notification Functions
Theparameter notification functionssupporttheparameters ownedbyanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanexternalapplication. Youcannotmodifyuser-defined lockedparameters
fromwithinanexternalapplication.
Notification Functions
Theparameter notification functionssupporttheparameters ownedbyan
annotation element.Thesefunctionsarecallbackfunctionsandareaccessible by
callingthefunction ProNotificationSet().
•ProParameterCr eateWi thUnitsPr eAction()
•ProParameterDeletePre Action()
•ProParameterModifyW ithUnitsPre Action()
•ProParameterCr eatePostAction()
•ProParameterModifyW ithUnitsPostAction()
•ProParameterDeleteW ithUnitsPostAction()
Thenotification function ProParameterCreateWithUnitsPreAction()
iscalledbeforetheparameter iscreatedintheCreoParametric userinterface.This
functionisavailablebycalling ProNotificationSet() withthevalueofthe
notifytypeasPRO_PARAM_CREATE_W_UNITS_PRE. Youcanspecifytheunits
fortheparameter.Thefunction ProParameterCreatePreAction() has
beensuperseded byProParameterCreateWithUnitsPreAction().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnotifytypeasPRO_PARAM_CREATE_W_UNITS_PRE. Youcanspecifytheunits
fortheparameter.Thefunction ProParameterCreatePreAction() has
beensuperseded byProParameterCreateWithUnitsPreAction().
214 Creo®Parametric TOOLKIT User’sGuideThenotification function ProParameterDeletePreAction() iscalled
beforetheparameter isdeleted.Thisfunctionisavailablebycalling
ProNotificationSet() withthevalueofthenotifytypeasPRO_PARAM_
DELETE_PRE.
Thenotification function ProParameterModifyWithUnitsPreAction()
iscalledbeforeaparameter ismodifiedintheCreoParametric userinterface.This
functionisavailablebycalling ProNotificationSet() withthevalueofthe
notifytypeasPRO_PARAM_MODIFY_W_UNITS_PRE. Thefunctionreturnsthe
oldandnewunitsoftheparameter alongwiththevalues.Thefunction
ProParameterModifyPreAction() hasbeensuperseded by
ProParameterModifyWithUnitsPreAction().
YoucanusethePreAction functionstocancelanychangesmadetothe
parameters. Ifanyvalueexcept PRO_TK_NO_ERROR isreturned,thenthechangexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProParameterModifyWithUnitsPreAction().
YoucanusethePreAction functionstocancelanychangesmadetothe
parameters. Ifanyvalueexcept PRO_TK_NO_ERROR isreturned,thenthechange
isnotpermitted. Theapplication mustprovideappropriate messaging totheuser
toexplainthereasonforwhichthechangewasrejected.
Note
Youarenotpermittedtocanceltheparameter modification eventswhen
modifying multipleparameters asagroup.
Thenotification function ProParameterCreatePostAction() iscalled
afteraparameter hasbeencreated.Thisfunctionisavailablebycalling
ProNotificationSet() withthevalueofthenotifytypeasPRO_PARAM_
CREATE_POST.
Thenotification function
ProParameterModifyWithUnitsPostAction() iscalledaftera
parameter hasbeenmodifiedintheCreoParametric userinterface.Thisfunction
isavailablebycalling ProNotificationSet() withthevalueofthenotify
typeasPRO_PARAM_MODIFY_W_UNITS_POST. Thefunctionreturnstheold
andmodifiedunitsoftheparameter alongwiththevalues.Thefunction
ProParameterModifyPostAction() hasbeensuperseded byxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeasPRO_PARAM_MODIFY_W_UNITS_POST. Thefunctionreturnstheold
andmodifiedunitsoftheparameter alongwiththevalues.Thefunction
ProParameterModifyPostAction() hasbeensuperseded by
ProParameterModifyWithUnitsPostAction().
Thenotification function
ProParameterDeleteWithUnitsPostAction() iscalledaftera
parameter hasbeendeletedintheCreoParametric userinterface.Thisfunctionis
availablebycalling ProNotificationSet() withthevalueofthenotify
typeasPRO_PARAM_DELETE_W_UNITS_POST. Thefunction
ProParameterDeletePostAction() hasbeensuperseded by
ProParameterDeleteWithUnitsPostAction().
Core:Parameters 215Example1:LabelingaFeaturewithaStringParameter
ThesamplecodeinUgParamFeatLabel.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_param showshowto
labeltheselectedfeaturewiththespecifiedstringparameter.Theprogramcalls
ProParameterInit() tofindoutwhethertheparameter alreadyexists.Ifthe
parameter doesnotexist,thefunctioncallsProParameterCreate(); ifitxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProParameterInit() tofindoutwhethertheparameter alreadyexists.Ifthe
parameter doesnotexist,thefunctioncallsProParameterCreate(); ifit
exists,thefunctioncallsProParameterValueSet().
Designating Parameters Windchill
Servers
Functions introduced:
•ProParameterDesignationAdd()
•ProParameterDesignationV erify()
•ProParameterDesignationRemove()
Thesefunctionscontrolthedesignation ofparameters forWindchillservers.A
designated parameter willbecomevisiblewithinthesemanagement systemsasan
attributeontheowningmodelwhenitisnextsubmitted.
Thefunction ProParameterDesignationAdd() designates anexisting
parameter,referredtobyitsProParameter object.
Thefunction ProParameterDesignationRemove() removesthe
designation.
Note
PTCdoesnotrecommend undesignating ordeletingaparameter thatis
alreadyexposedtoaProductDataManagement system,suchasWindchill
PDMLink orPro/INTRALINK.
Thefunction ProParameterDesignationVerify() tellsyouwhethera
specifiedmodelparameter iscurrentlydesignated ornot.
RestrictedParametersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPDMLink orPro/INTRALINK.
Thefunction ProParameterDesignationVerify() tellsyouwhethera
specifiedmodelparameter iscurrentlydesignated ornot.
RestrictedParameters
Restricted parameters canhaveeither:
•anenumeration whichlimitsvaluesonlytothosespecifiedinadvance;or
•arangewhichlimitsnumerical valuestofallwithinthatrange.
Functions introduced:
216 Creo®Parametric TOOLKIT User’sGuide•ProParameterIsEnumerated()
•ProParameterRangeGet()
Usethefunction ProParameterIsEnumerated() toidentifyifaparameter
isenumerated, andprovidesthevaluesthatmaybeassignedtoit.Iftheparameter
isenumerated thenitgivestheProArray ofvaluesthatareassignedtothis
parameter.
Usethefunction ProParameterRangeGet() toidentifyifaparameter's
valueisrestrictedtoacertainrange.Iftheparameter isrestrictedbyarangethen
itgivesthemaximum andminimumvalueoftheparameter.
Table-Restricted Parameters
Aparameter tableismadeupofoneormoreparameter tablesets.Eachset
represents oneormoreparameters withtheirassignedvaluesorassignedranges.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTable-Restricted Parameters
Aparameter tableismadeupofoneormoreparameter tablesets.Eachset
represents oneormoreparameters withtheirassignedvaluesorassignedranges.
Agivenparameter owner(model,feature,annotation element,geometryitem)can
onlyhaveoneparameter tablesetappliedthatcreatesagivenparameter.InCreo
Parametric TOOLKIT,aparameter tablesetisrepresented bythetype
ProParamtableSet andismadeupofentries,represented by
ProParamtableEntry. Asingleentryrepresents aparameter withan
assignedvalueorrange.
Functions introduced:
•ProParameterT ablesetGet()
•ProMdlParamtablesetsCollect()
•ProParamtablesetEntriesGet()
•ProParamtablesetT ablepathGet()
•ProParamtablesetLabelGet()
•ProParamtablesetFre e()
•ProParamtablesetPro arrayFre e()
•ProParamtableentryV alueGet()
•ProParamtableentryRangeGet()
•ProParamtableentryNameGet()
•ProParamtableentryPr oarrayFr ee()
•ProParamtablesetApply()
•ProRelsetConstraintsGet()
Usethefunction ProParameterTablesetGet() toobtainthegoverningxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProParamtableentryNameGet()
•ProParamtableentryPr oarrayFr ee()
•ProParamtablesetApply()
•ProRelsetConstraintsGet()
Usethefunction ProParameterTablesetGet() toobtainthegoverning
parameter tablesetforthisparameter,ifit'samemberofaset.
Core:Parameters 217Usethefunction ProMdlParamtablesetsCollect() toobtainanarrayof
allthetablesetsthatareavailableforuseinthegivenmodel.Thisincludesallsets
thatareloadedfromtablefilesthataresetupinthissession,andanyothersets
thatwerepreviously storedinthemodel.
Usethefunction ProParamtablesetFree() tofreetheparameter tableset
andthefunction ProParamtablesetProarrayFree() tofreeanarrayof
parameter tablesets.
Usethefunction ProParamtablesetEntriesGet() toobtaintheentries
thatarecontainedinaparameter tableset.
Usethefunction ProParamtablesetTablepathGet() toobtainthename
ofthetablethatownsthisparameter tableset.Ifthesetisloadedfromacertain
tablefile,thisisthefullpath.Ifthesethasbeenstoredinthemodeldirectly,this
isthetablename.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthetablethatownsthisparameter tableset.Ifthesetisloadedfromacertain
tablefile,thisisthefullpath.Ifthesethasbeenstoredinthemodeldirectly,this
isthetablename.
Usethefunction ProParamtablesetLabelGet() toobtainthesetlabelfor
agivenparameter tableset.
Usethefunction ProParamtableentryNameGet() toobtainthenamefor
theparameter inthistableset.
Usethefunction ProParamtableentryValueGet() toobtainthevaluefor
theparameter inthistableset.Iftheparameter alsohasarangeapplied,thisisthe
defaultvaluefortheparameter.Usethefunction
ProParamtableentryRangeGet() toobtainthepermittedrangeforthe
parameter inthistableset.Theoutputargumentsforthisfunctionare:
•minimum—The minimumvalueforthisparameter assetbytheparameter set.
•maximum—The maximum valueforthisparameter assetbytheparameter set
Youcanusethefunction ProParamtableentryProarrayFree() tofree
anarrayoftableentries.
Thefunction ProParamtablesetApply() assignsthisparameter settothe
givenparameter owner.Parameters usedbythesetarecreatedormodified,asxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanarrayoftableentries.
Thefunction ProParamtablesetApply() assignsthisparameter settothe
givenparameter owner.Parameters usedbythesetarecreatedormodified,as
appropriate. Theparameter valuesaresettothedefaultvalues.Thisfunctiondoes
notregenerate themodelandmayfailiftheparameter owneralreadyhasoneor
moreoftheset'srequiredparameters definedwhicharenotdrivenbythistable.
Thefunction ProRelsetConstraintsGet() obtainstheconstraints applied
toagivenrelationset.Constraints maybeassignedwhenoneormoreparameters
ofthesetisgovernedbyanexternalparameter file.
DrivenParameters
Thefunctionsdescribedbelowprovideaccesstotheitem(parameter orfunction)
drivingmodelparameters.
Functions Introduced:
218 Creo®Parametric TOOLKIT User’sGuide•ProParameterDrivertypeGet()
•ProParameterDrivingsymbolGet()
•ProParameterDrivingparamSet()
•ProParameterDrivingFunctionGet()
•ProParameterDrivingFunctionSet()
Thefunction ProParameterDriverGet() hasbeendeprecated. Usethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProParameterDrivingsymbolGet()
•ProParameterDrivingparamSet()
•ProParameterDrivingFunctionGet()
•ProParameterDrivingFunctionSet()
Thefunction ProParameterDriverGet() hasbeendeprecated. Usethe
function ProParameterDrivertypeGet() instead.Thefunction
ProParameterDrivertypeGet() retrievesthetypeofoperationthatis
drivingamodelparameter intheformofProParameterDriver object.In
assemblies, youcanrefertoaparameter thatbelongstoanothermodel.The
function ProParameterDrivertypeGet() returnsinformation forsuch
parameters, whicharereferenced inthecurrentmodelbutbelongtoanother
model.Thetypesofdriversareasfollows:
•PRO_PARAMDRIVER_PARAM—Specifies theparameter drivingthemodel
parameter.
•PRO_PARAMDRIVER_FUNCTION—Specifies thefunctiondrivingthemodel
parameter.
•PRO_PARAMDRIVER_RELATION—Specifies therelationdrivingthemodel
parameter.
Thefunction ProParameterDrivingparamGet() hasbeendeprecated.
Usethefunction ProParameterDrivingsymbolGet() instead.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_PARAMDRIVER_RELATION—Specifies therelationdrivingthemodel
parameter.
Thefunction ProParameterDrivingparamGet() hasbeendeprecated.
Usethefunction ProParameterDrivingsymbolGet() instead.The
function ProParameterDrivingsymbolGet() retrievesthedriving
parameter foramodelparameter,ifthedrivertypeisPRO_PARAMDRIVER_
PARAM.Thefunction ProParameterDrivingsymbolGet() alsoreturns
information forparameters, whicharereferenced inthecurrentmodelbutbelong
toanothermodel.
Thefunction ProParameterDrivingparamSet() setsthedrivertypefora
materialparameter tothevalue PRO_PARAMDRIVER_PARAM.
Thefunction ProParameterDrivingFunctionGet() obtainsthedriving
functionforamaterialparameter,ifthedrivertypeisPRO_PARAMDRIVER_
FUNCTION.
Thefunction ProParameterDrivingFunctionSet() setsthedrivertype
foramaterialparameter tothevalue PRO_PARAMDRIVER_FUNCTION.
Core:Parameters 2199
Core:Coordinate Systemsand
TransformationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFUNCTION.
Thefunction ProParameterDrivingFunctionSet() setsthedrivertype
foramaterialparameter tothevalue PRO_PARAMDRIVER_FUNCTION.
Core:Parameters 2199
Core:Coordinate Systemsand
Transformations
CoordinateSystems................................................................................................221
CoordinateSystemTransformations .........................................................................223
Thischapterdescribesthevariouscoordinate systemsusedbyCreoParametric
andCreoParametric TOOLKIT,andhowtotransformcoordinates fromoneto
another.
220 Creo®Parametric TOOLKIT User’sGuideCoordinate Systems
CreoParametric andCreoParametric TOOLKITusethefollowingcoordinate
systems:
•Solidcoordinate system
•Screencoordinate system
•Windowcoordinate system
•Drawingcoordinate system
•Drawingviewcoordinate system
•Assembly coordinate system
•Datumcoordinate system
•Sectioncoordinate system
Thefollowingsectionsdescribeeachofthesecoordinate systems.
SolidCoordinate Systemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Drawingviewcoordinate system
•Assembly coordinate system
•Datumcoordinate system
•Sectioncoordinate system
Thefollowingsectionsdescribeeachofthesecoordinate systems.
SolidCoordinate System
Thesolidcoordinate systemisthethree-dimensional, Cartesiancoordinate system
usedtodescribethegeometryofaCreoParametric solidmodel.Inapart,the
solidcoordinate systemdescribesthegeometryofthesurfacesandedges.Inan
assembly,thesolidcoordinate systemalsodescribesthelocationsandorientations
oftheassemblymembers.
Youcanvisualizethesolidcoordinate systeminCreoParametric bycreatinga
coordinate systemdatumwiththeoptionModel▶▶Coordinate System.Distances
measuredinsolidcoordinates correspond tothevaluesofdimensions asseenby
theCreoParametric user.
Solidcoordinates areusedbyCreoParametric TOOLKITforallthefunctionsthat
lookatgeometry,andmostofthefunctionsthatdrawthree-dimensional graphics.
ScreenCoordinate System
Thescreencoordinate systemisatwo-dimensional coordinate systemthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlookatgeometry,andmostofthefunctionsthatdrawthree-dimensional graphics.
ScreenCoordinate System
Thescreencoordinate systemisatwo-dimensional coordinate systemthat
describeslocationsinaCreoParametric window.Thisisanintermediate
coordinate systemafterwhichthescreenpointsaretransformed toscreenpixels.
Allthemodelsarefirstmappedtothescreencoordinate system.Whentheuser
zoomsorpanstheview,thescreencoordinate systemfollowsthedisplayofthe
solid,soaparticularpointonthesolidalwaysmapstothesamescreencoordinate.
Themappingchangesonlywhenthevieworientation ischanged.
Screencoordinates areusedbysomeofthegraphicsfunctions, themouseinput
functions, andallthefunctionsthatdrawgraphicsormanipulate itemsona
drawing.
Core:Coordinate SystemsandTransformations 221WindowCoordinate System
Thewindowcoordinate systemissimilartothescreencoordinate system.After
mappingthemodelstothescreencoordinate system,theyaremappedtothe
windowcoordinate beforebeingdrawntoscreenpixelsbasedonscreenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThewindowcoordinate systemissimilartothescreencoordinate system.After
mappingthemodelstothescreencoordinate system,theyaremappedtothe
windowcoordinate beforebeingdrawntoscreenpixelsbasedonscreen
resolution. Whenpanorzoomvaluesareappliedtothecoordinates inthescreen
coordinate system,theyresultinwindowcoordinates. Whenanobjectisfirst
displayedinawindow,ortheoptionView▶▶Refitisused,thescreenandwindow
coordinates arethesame.
Youcanusethefunction ProWindowCoordinatePixelGet() togetthe
windowpointinpixelcoordinates.
The3Dpointthatisprojectedto2Dwillbevisibleonthescreenonlyifitlies
withintheoutlinethatisreturnedbythefunction
ProWindowPixelOutlineGet(). Ifnot,itwillbeclippedandwillnotbe
visibleonthescreen.
DrawingCoordinate System
Thedrawingcoordinate systemisatwo-dimensional systemthatdescribesthe
locationonadrawingrelativetothebottom,leftcorner,andmeasuredindrawing
units.Forexample,onaU.S.letter-sized,landscape-format drawingsheetthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocationonadrawingrelativetothebottom,leftcorner,andmeasuredindrawing
units.Forexample,onaU.S.letter-sized,landscape-format drawingsheetthat
usesinches,thetop,rightcorneris(11,8.5)indrawingcoordinates.
TheCreoParametric TOOLKITfunctionsthatmanipulate drawingsgenerallyuse
screencoordinates.
DrawingViewCoordinate System
Thisdrawingviewcoordinate systemisusedtodescribethelocationsofentities
inadrawingview.
AssemblyCoordinate System
Anassemblyhasitsowncoordinate systemthatdescribesthepositionsand
orientations ofthememberpartsandsubassemblies, andthegeometryofdatum
featurescreatedintheassembly.
Whenanassemblyisretrievedintomemory,eachmemberisloadedtoo,and
continuestouseitsownsolidcoordinate systemtodescribeitsgeometry.
Thisisimportantwhenyouareanalyzingthegeometryofasubassembly ,and
wanttoextractordisplaytheresultsrelativetothecoordinate systemoftheparent
assembly.
222 Creo®Parametric TOOLKIT User’sGuideDatumCoordinate Systemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwanttoextractordisplaytheresultsrelativetothecoordinate systemoftheparent
assembly.
222 Creo®Parametric TOOLKIT User’sGuideDatumCoordinate System
Acoordinate systemdatumcanbecreatedanywhereinanypartorassembly,and
represents auser-definedcoordinate system.Itisoftenarequirement inaCreo
Parametric TOOLKITapplication todescribegeometryrelativetosuchadatum.
SectionCoordinate System
Everysketchhasacoordinate systemusedtolocateentitiesinthatsketch.
Sketchesusedinfeatureswilluseacoordinate systemdifferentfromthatofthe
solidmodel.
Coordinate SystemTransformations
Functions Introduced:
•ProPntT rfEval()
•ProVectorT rfEval()
Allcoordinate systemsaretreatedinCreoParametric TOOLKITasiftheywere
three-dimensional. Therefore, apointinanyofthecoordinate systemsdescribedis
alwaysrepresented inCbythefollowingtype:
typedef double ProPoint3d[3]
Vectorsaredistinguished forclaritybyadifferent,thoughequivalent, declaration:
typedef double ProVector[3]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalwaysrepresented inCbythefollowingtype:
typedef double ProPoint3d[3]
Vectorsaredistinguished forclaritybyadifferent,thoughequivalent, declaration:
typedef double ProVector[3]
,Screen,windowandsectioncoordinates containaZvaluewhosepositive
directionisnormaltothescreenorthesketch.ThevalueofZisnotgenerally
importantwhenspecifying ascreenlocationasaninputtoafunction,butitis
usefulinothersituations. Forexample,iftheuserselectsadatumplane,youcan
findoutwhichsideistowardstheuserbycalculating thenormaltotheplane,
transforming toscreencoordinates, thenlookingatthesignoftheZcoordinate.
Atransformation betweentwocoordinate systemsisrepresented bya4x4matrix,
withthefollowingtype:
typedef double ProMatrix[4][4];
Thiscombinestheconventional 3x3matrixthatdescribestherelativeorientation
ofthetwosystems,andthevectorthatdescribestheshiftbetweenthem.
Core:Coordinate SystemsandTransformations 223Transformation Matrix
CreoParametric TOOLKITprovidestwoutilitiesforperforming coordinatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthetwosystems,andthevectorthatdescribestheshiftbetweenthem.
Core:Coordinate SystemsandTransformations 223Transformation Matrix
CreoParametric TOOLKITprovidestwoutilitiesforperforming coordinate
transformations. Thefunction ProPntTrfEval() transforms athree-
dimensional point,andProVectorTrfEval() transforms athree-dimensional
vector.
Thesourcecodeforotherutilitiesthatmanipulate transformation matricesis
locatedinthefileMatrix.c locatedat<creo_toolkit_loadpoint>/
protk_appls/pt_examples/pt_utils/Util.
Thefollowingsectionsdescribethefunctionsneededtoobtainthetransformation
matrixbetweentwodifferentcoordinate systemsinCreoParametric.
Transforming SolidtoScreenCoordinates
Functions Introduced:
•ProViewMatrixGet()
•ProViewMatrixSet()
Theviewmatrixdescribesthetransformation fromsolidtoscreencoordinates.
Thefunction ProViewMatrixGet() providestheviewmatrixforthe
specifiedview.Example1:SolidCoordinates toScreenCoordinates onpage224xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheviewmatrixdescribesthetransformation fromsolidtoscreencoordinates.
Thefunction ProViewMatrixGet() providestheviewmatrixforthe
specifiedview.Example1:SolidCoordinates toScreenCoordinates onpage224
showsafunctionthattransforms apoint,usingtheProViewMatrixGet()
function,andanexampleuserfunction.
Thefunction ProViewMatrixSet() changestheorientation ofthesolid
modelonthescreen.
Example1:SolidCoordinates toScreenCoordinates
ThesamplecodeinthefileUgFundSolid2Screen.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
fundament showshowtotransformsolidcoordinates toscreencoordinates.
224 Creo®Parametric TOOLKIT User’sGuideExample2:TransformfromSolidCoordinates toScreen
Coordinates
ThesamplecodeinthefileUgFundCsysTrf.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_fundament shows
howtoextractaselectedpointfromthesurfaceofasolidmodel,transformitfrom
solidcoordinates toscreencoordinates, writetheresultsintoafileanddisplayit.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhowtoextractaselectedpointfromthesurfaceofasolidmodel,transformitfrom
solidcoordinates toscreencoordinates, writetheresultsintoafileanddisplayit.
Transforming ScreentoWindowCoordinates
Functions Introduced:
•ProWindowCurre ntMatrixGet()
•ProWindowPanZoomMatrixSet()
Transformation fromscreentowindowcoordinates consistssolelyofazoom
factorandpaninXandY.
Thefunction ProWindowCurrentMatrixGet() getsthetransformation
matrixforthewindow.Apanandzoomtransformation matrixconsistsof:
•Thescalefactor,runningdownthediagonalofthematrix.Forexample,to
zoominbyafactorof2,thevalue2.0willbedownthediagonalinthe
elements(0,0),(1,1),and(2,2).
•Thetranslation factor(pan)intheelements(3,0)-Xand(3,1)-Y.
•Theelementat(3,3)shouldbe1.0.
Thefunction ProWindowPanZoomMatrixSet() canchangethepanand
zoomofthewindow.Thematrixshouldcontainonlytheelementslistedabove,
forfunction ProWindowCurrentMatrixGet().
Transforming fromDrawingViewtoScreen
Coordinates inaDrawing
FunctionIntroduced:
•ProDrawingV iewT ransformGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforfunction ProWindowCurrentMatrixGet().
Transforming fromDrawingViewtoScreen
Coordinates inaDrawing
FunctionIntroduced:
•ProDrawingV iewT ransformGet()
Thefunction ProDrawingViewTransformGet() performsthe
transformation fromdrawingviewcoordinates (solid)toscreencoordinates. It
describeswhereaparticularpointonthesolidwillbeinthedrawingfora
particularviewofthesolid.
Transforming fromScreentoDrawingCoordinates
inaDrawing
FunctionIntroduced:
Core:Coordinate SystemsandTransformations 225•ProDrawingSheetT rfGet()
Thefunction ProDrawingSheetTrfGet() returnsthematrixthattransforms
screencoordinates todrawingcoordinates. Thefunctionperformsthis
transformation forthefirstsheet.
Example3:ScreenCoordinates toDrawingCoordinates
ThesamplecodeinthefileUgFundScreen2Drw.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
fundament allowsyoutotransformthescreencoordinates todrawing
coordinates.
Example4:TransformfromScreenCoordinates toDrawing
Coordinatesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolkit_loadpoint>/protk_appls/pt_userguide/ptu_
fundament allowsyoutotransformthescreencoordinates todrawing
coordinates.
Example4:TransformfromScreenCoordinates toDrawing
Coordinates
ThesamplecodeinthefileUgFundCsysTrf.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_fundament allows
youtoselectapointfromthescreen,transformitfromscreencoordinates to
drawingcoordinates, writetheresultsintoafileanddisplayit.
Transforming Coordinates ofanAssemblyMember
FunctionIntroduced:
•ProAsmcomppathT rfGet()
Thefunction ProAsmcomppathTrfGet() providesthematrixfor
transforming fromthesolidcoordinate systemoftheassemblymembertothe
solidcoordinates oftheparentassembly,orthereverse.
Transforming toCoordinate SystemDatum
Coordinates
Functions Introduced:
•ProCsysDataGet()
•ProMatrixInit()
Thefunction ProCsysDataGet() providesthelocationandorientation ofthe
coordinate systemdatuminthesolidcoordinate systemofthesolidthatcontainsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProCsysDataGet()
•ProMatrixInit()
Thefunction ProCsysDataGet() providesthelocationandorientation ofthe
coordinate systemdatuminthesolidcoordinate systemofthesolidthatcontains
it.Thelocationisintermsofthedirections ofthethreeaxes,andthepositionof
theorigin.Whenthesefourvectorsaremadeintoatransformation matrixusing
thefunction ProMatrixInit(), thatmatrixdefinesthetransformation ofa
pointdescribedrelativetothecoordinate systemdatumbacktosolidcoordinates.
226 Creo®Parametric TOOLKIT User’sGuideTotransformtheotherway,whichisthemoreusualrequirement, youneedto
invertthematrix.Theexamplefunction ProUtilMatrixInvert(), inverts
thespecifiedmatrix.
Transforming Coordinates ofSketchedEntities
FunctionIntroduced:
•ProSectionLocationGet()
Thefunction ProSectionLocationGet() providesthematrixfor
transforming fromthesolidcoordinate systemtothesketchcoordinate system,or
thereverse.
Example5:UsingSeveralCoordinate TransformsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProSectionLocationGet() providesthematrixfor
transforming fromthesolidcoordinate systemtothesketchcoordinate system,or
thereverse.
Example5:UsingSeveralCoordinate Transforms
ThesamplecodeinthefileUgGraphZoomAtPoint.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
graphics demonstrates howtouseseveralcoordinate transformations. The
functionwillzoominonasolidmodel,withtheresultscenteredattheselected
location.
Core:Coordinate SystemsandTransformations 22710
Core:FamilyTables
FamilyTableObjects...............................................................................................229
FamilyTableUtilities................................................................................................229
VisitingFamilyTables..............................................................................................229
OperationsonFamilyTableInstances.......................................................................230xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOperationsonFamilyTableInstances.......................................................................230
OperationsonFamilyTableItems.............................................................................232
ThischapterdescribeshowtouseCreoParametric TOOLKITfunctionsto
manipulate thefamilytableforanobject.
228 Creo®Parametric TOOLKIT User’sGuideFamilyTableObjects
Toenableaccesstofamilytables,CreoParametric TOOLKITimplements the
followingobjects(allDHandles):
•ProFamtable—A structurethatcontainstheowner,type,andinteger
identifierofafamilytable.
•ProFaminstance—A structurethatcontainsthenameofafamilytable
instanceandthehandleofthefamilytabletowhichitbelongs.
•ProFamtableItem—A structurethatcontainsthetype,name,andowner
ofafamilytableitem(orcolumn).
FamilyTableUtilities
Functions Introduced:
•ProFamtableInit()
•ProFamtableCheck()
•ProFamtableEdit()
•ProFamtableShow()
•ProFamtableErase()
•ProFamtableIsModifiable()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofafamilytableitem(orcolumn).
FamilyTableUtilities
Functions Introduced:
•ProFamtableInit()
•ProFamtableCheck()
•ProFamtableEdit()
•ProFamtableShow()
•ProFamtableErase()
•ProFamtableIsModifiable()
Beforeyoucanmanipulate thefamilytableinformation storedinanobject,you
mustgetthehandletoitsfamilytableusingthefunction
ProFamtableInit(). ThenuseProFamtableCheck() todetermine
whetherthefamilytableisempty(foraProSolid, ProPart, or
ProAssembly object,useProSolidFamtableCheck()
Thefunction ProFamtableEdit() opensaPro/TABLEwindowforediting
thespecifiedfamilytable,producing thesameeffectastheCreoParametric
commandEditintheFamilyTabledialogbox.
Similarly,acalltoProFamtableShow() presentsthefamilytableinthesame
mannerastheCreoParametric commandFamilyTab,Show.
Thefunction ProFamtableErase() clearsthefamilyfromthecurrent
session,similartotheCreoParametric commandFamilyTab,EraseTable.
Thefunction ProFamtableIsModifiable() checkswhetherthespecified
familytablecanbemodified.
VisitingFamilyTablesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsession,similartotheCreoParametric commandFamilyTab,EraseTable.
Thefunction ProFamtableIsModifiable() checkswhetherthespecified
familytablecanbemodified.
VisitingFamilyTables
Functions Introduced:
Core:FamilyTables 229•ProFamtableInstanceV isit()
•ProFamtableItemV isit()
AswiththeotherCreoParametric TOOLKITtraversalfunctions, thetraversal
functionsforfamilytablesvisitfamilytableobjectsandpasseachobjecttoaction
andfilterfunctionsthatyousupply.
Forexample,thefunction ProFamtableInstanceVisit() visitsallthe
family’sinstancesandcallstheuser-suppliedfunctionsoftype
ProFamtableInstanceAction() and
ProFamtableInstanceFilter().
Thefunction ProFamtableItemVisit() visitseachfamilytableitem(or
column)andcallstheuser-suppliedfunctionsoftype
ProFamtableItemAction() andProFamtableItemFilter().
Operations onFamilyTableInstances
Functions Introduced:
•ProFaminstanceV alueGet()
•ProFaminstanceV alueSet()
•ProFaminstanceFamtableItemIsDefault()
•ProFaminstanceAdd()
•ProFaminstanceCheck()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOperations onFamilyTableInstances
Functions Introduced:
•ProFaminstanceV alueGet()
•ProFaminstanceV alueSet()
•ProFaminstanceFamtableItemIsDefault()
•ProFaminstanceAdd()
•ProFaminstanceCheck()
•ProFaminstanceIsModifiable()
•ProFaminstanceInit()
•ProFaminstanceRemove()
•ProFaminstanceSelect()
•ProFaminstanceMdlGet()
•ProFaminstanceErase()
•ProFaminstanceLock()
•ProFaminstanceRetrieve()
•ProFaminstanceGenericGet()
•ProFaminstanceImmediategenericinfoGet()
•ProFaminstanceIsV erified()
•ProFaminstanceIsExtLocked()
•ProFaminstanceIsFlatState()
Thefunctionsinthissectionenableyoutoprogrammatically manipulate instances
thatappearinafamilytable.
230 Creo®Parametric TOOLKIT User’sGuideThefunction ProFaminstanceValueGet() retrievesthevalueofthefamily
tableitemforthespecifiedfamilytableinstance.Usethefunction
ProFaminstanceValueSet() tochangethevalueofthespecifiedfamily
tableitem.
Forthespecifiedinstance,usethefunction
ProFaminstanceFamtableItemIsDefault() todetermine ifthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFaminstanceValueSet() tochangethevalueofthespecifiedfamily
tableitem.
Forthespecifiedinstance,usethefunction
ProFaminstanceFamtableItemIsDefault() todetermine ifthe
specifieditemhasthedefaultvalue,whichisthevalueofthespecifiediteminthe
genericmodel.
Thefunctions ProFaminstanceValueGet(),
ProFaminstanceValueSet(), and
ProFaminstanceFamtableItemIsDefault() requiretheinstanceand
theitemhandlesasinputvalues,bothofwhichareavailableviathevisit
functions.
Thefunction ProFaminstanceAdd() addsaninstancetoafamilytable.Note
thatyoumustinitializethehandletothenewinstance(using
ProFaminstanceInit()) beforeaddingtheinstancetothetable.
Usethefunction ProFaminstanceRemove() toremovethespecified
instancefromthefamilytable.
Thefunction ProFaminstanceMdlGet() retrievesthehandletotheinstance
modelforthegiveninstancethatisinsession.
Toeraseaninstancemodelfrommemory,callthefunction
ProFaminstanceErase().
Thefunction ProFaminstanceCheck() checkstheexistenceandlockstatusxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelforthegiveninstancethatisinsession.
Toeraseaninstancemodelfrommemory,callthefunction
ProFaminstanceErase().
Thefunction ProFaminstanceCheck() checkstheexistenceandlockstatus
ofthespecifiedinstance.Usethefunction ProFaminstanceLock() tomake
changestothelockstatusofaninstance.
Thefunction ProFaminstanceIsModifiable() checkswhetherthegiven
instanceofafamilytablecanbemodified.
Giventheinstancehandle,thefunction ProFaminstanceRetrieve()
retrievesaninstanceofamodelfromdisk.Notethatyoumustallocatespacefor
theresulting ProMdlobject.Inaddition,youmustcallProSolidDisplay()
todisplaytheinstancemodel.
Thefunction ProFaminstanceGenericGet() retrievesthegenericmodel
handleforagiveninstancemodel.Thisfunctionincludestheabilitytochoose
betweentheimmediate andthetop-levelgenericmodels.
FromPro/ENGINEER Wildfire4.0onwards,thebehaviorofthefunction
ProFaminstanceGenericGet() haschangedasaresultofperformance
improvement infamilytableretrieval.WhenyounowcallthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromPro/ENGINEER Wildfire4.0onwards,thebehaviorofthefunction
ProFaminstanceGenericGet() haschangedasaresultofperformance
improvement infamilytableretrieval.Whenyounowcallthefunction
ProFaminstanceGenericGet() withtheflagimmediate settoTRUE,
thefunctionreturnsanewerrorcodePRO_TK_CANT_OPEN iftheimmediate
genericiscurrentlynotinsession.Usethefunction
Core:FamilyTables 231ProFaminstanceImmediategenericinfoGet() togetthenameand
modeltypeoftheimmediate genericmodel.Thisinformation canbeusedto
retrievetheimmediate genericmodel.
Ifyouwishtoturn-offthisbehaviorandcontinuetorunlegacyapplications inthe
pre-Wildfire4.0mode,settheconfiguration option retrieve_instance_
dependencies toinstance_and_generic_deps.
Thefunction ProFaminstanceIsVerified() identifieswhetherthe
instancehasbeenverified,andwhethertheverification succeeded orfailed.
Thefunction ProFaminstanceIsExtLocked() identifieswhetherthe
instancehasbeenlockedbyanexternalapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinstancehasbeenverified,andwhethertheverification succeeded orfailed.
Thefunction ProFaminstanceIsExtLocked() identifieswhetherthe
instancehasbeenlockedbyanexternalapplication.
Thefunction ProFaminstanceIsFlatState() identifieswhetheran
instanceisasheetmetal flatstateinstance.
Operations onFamilyTableItems
Functions Introduced:
•ProFamtableItemAdd()
•ProFamtableItemRemove()
•ProFamtableItemT oModelitem()
•ProModelitemT oFamtableItem()
•ProFamtableItemT oParameter()
•ProParameterT oFamtableItem()
Thesefunctionsenableyoutoprogrammatically manipulate familytableitems
(columnvalues).
Thefunction ProFamtableItemAdd() addsthespecifieditemtoafamily
table.Similarly,ProFamtableItemRemove() removesthespecifieditem
fromthefamilytable.
Thefunctions ProFamtableItemToModelitem() and
ProModelitemToFamtableItem() convertbetween ProFamtableItem
andProModelitem objects.Notethatuserselections (ProSelection
objects)canbeconverted toProFamtableItem objectsbycallingthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProModelitemToFamtableItem() convertbetween ProFamtableItem
andProModelitem objects.Notethatuserselections (ProSelection
objects)canbeconverted toProFamtableItem objectsbycallingthe
functions ProSelectionModelitemGet() and
ProModelitemToFamtableItem().
Thefunctions ProFamtableItemToParameter() and
ProParameterToFamtableItem() convertbetween ProFamtableItem
andProParameter objects.Notethatyoumightneedtocall
ProParameterToFamtableItem() aftercalling
ProParameterSelect() (whichenablesuserstoselectparameters froma
menu).
232 Creo®Parametric TOOLKIT User’sGuide11
Core:ExternalData
Introduction toExternalData....................................................................................234
StoringExternalData...............................................................................................235
RetrievingExternalData..........................................................................................237xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRetrievingExternalData..........................................................................................237
Thischapterdescribeshowtostoreandretrieveexternaldata.Externaldataisa
CreoParametric TOOLKITapplication tobestoredintheCreoParametric
databaseinawaythatisinvisibletotheCreoParametric user.
233Introduction toExternalData
ExternaldataprovidesawayfortheCreoParametric TOOLKITapplication to
storeitsownprivateinformation aboutaCreoParametric modelwithinthemodel
file.Thedataisbuiltandinterrogated bytheCreoParametric TOOLKIT
application asaworkspace datastructure.Itissavedtothemodelfilewhenthe
modelissaved,andretrievedwhenthemodelisretrieved.Theexternaldatais
otherwiseignoredbyCreoParametric, sotheCreoParametric TOOLKIT
application hascompletecontrolovertheformandcontent.
TheexternaldataforaparticularCreoParametric modelisbrokendowninto
classesandslots.Aclassisanamed“bin”foryourdata,andsimplyidentifiesitas
yourssonootherCreoParametric TOOLKITapplication (orotherclassesinyourxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxclassesandslots.Aclassisanamed“bin”foryourdata,andsimplyidentifiesitas
yourssonootherCreoParametric TOOLKITapplication (orotherclassesinyour
ownapplication) willuseitbymistake.ACreoParametric TOOLKITapplication
usuallyneedsonlyoneclass.Theclassnameshouldbeuniqueforeachmodel,
anddescribetheroleofthedatainyourapplication.
Eachclasscontainsalistofdataslots.Eachslotisidentifiedbyeitheranameor
anidentifier,andcontainsasingledataitemofoneofthefollowingtypes:
•Integer
•Double
•Widestring(maximum length=512characters)
•Stream(maximum size=512kilobytes). Aslotoftypestreamcontainsa
completely unformatted sequenceofbyteswithunrestricted values.Theslot
alsorecordsthenumberofbytesinthestream,sonotermination rulesare
assumed.Thestreamtypeshouldbeusedonlywhentheformatiscompletely
controlled byyourapplication inaplatform-independent way.Forexample,if
thevolumeofexternaldataisverylarge,thestreamformatmightbeusedto
storethedatainamorecompressed formforgreaterefficiency.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontrolled byyourapplication inaplatform-independent way.Forexample,if
thevolumeofexternaldataisverylarge,thestreamformatmightbeusedto
storethedatainamorecompressed formforgreaterefficiency.
•Chapter.Thechapterdatatypeissimilartothestreamdata.Ithasthe
followingadvantages ascompared tostreamdatatype:
○Chapterdatatypehasnolimitondatalength.
○Thenameoftheslotisusedasthenameofthechapter.
Streamandchapterslotscouldalsobeusedasashortcutwaytostore,for
instance,anentireCstructure,oranarrayofCstructures, withoutanyformatting.
However,ifyouaresupporting morethanoneplatformwithyourCreoParametric
TOOLKITapplication, remember thatthemappingofaCstructuremaydiffer
betweenplatforms.
IfexternaldataisstoredduringaCreoParametric sessionononeplatformand
retrievedonanother,thevaluesofinteger,double,andwidestringslotswillbe
preservedcorrectly,regardless ofanydifferencesinthecodingofthosedatatypes
234 Creo®Parametric TOOLKIT User’sGuidebythetwoCcompilers. Streamandchapterslotswillbepreservedwithexactlyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpreservedcorrectly,regardless ofanydifferencesinthecodingofthosedatatypes
234 Creo®Parametric TOOLKIT User’sGuidebythetwoCcompilers. Streamandchapterslotswillbepreservedwithexactly
thesamebytevaluesandsequencethatwassaved,regardless ofbyte-swap
conventions onthetwoplatforms.
Externaldataisstoredintheworkspace andisaccessible onlythroughthe
functionsprovidedforthatpurpose.Twoobjectsareusedtoreferencethedata
contents: ProExtdataClass andProExtdataSlot. Theseareboth
declaredasDHandles—visible datastructures. Thedeclarations areasfollows:
typedef struct pro_extdata_class
{
ProMdl p_model;
ProName class_name;
}ProExtdataClass;
typedef struct pro_extdata_slot
{
ProExtdataClass *p_class;
ProName slot_name;
int slot_id;
}ProExtdataSlot;
Eachslothastwowaystobeidentified: aname,whichisdefinedbythe
application whentheslotiscreated,oranidentifier,whichisallocated
automatically .Youcanchoosewhichkindofidentifiertouseforeachslot.ThexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEachslothastwowaystobeidentified: aname,whichisdefinedbythe
application whentheslotiscreated,oranidentifier,whichisallocated
automatically .Youcanchoosewhichkindofidentifiertouseforeachslot.The
CreoParametric TOOLKITfunctionsforexternaldatadonotusetheusualreturn
typeProError. Instead,theyuseanenumerated typecalled ProExtdataErr
thatcontainserrorstatusesthataremorespecifictotheneedsofthosefunctions.
Allthedeclarations relevanttoexternaldataareintheheaderfile
ProExtdata.h.
StoringExternalData
Functions Introduced:
•ProExtdataInit()
•ProExtdataClassRegister()
•ProExtdataClassUnre gister()
•ProExtdataSlotCr eate()
•ProExtdataSlotW rite()
•ProExtdataSlotDelete()
Core:ExternalData 235•ProExtdataT erm()
Note
Forthefunctions ProExtdataClassRegister() and
ProExtdataSlotCreate(), thecombined lengthoftheclassandslot
namesmustnotexceed PRO_NAME_SIZE.
Thefirststepinmanipulating externaldataforamodelinaCreoParametric
sessionistocalltheinitializefunction ProExtdataInit() forthatmodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnamesmustnotexceed PRO_NAME_SIZE.
Thefirststepinmanipulating externaldataforamodelinaCreoParametric
sessionistocalltheinitializefunction ProExtdataInit() forthatmodel.
Next,setupaclassusingthefunction ProExtdataClassRegister(). The
inputsaretheProMdlobjectandtheclassname,intheformofawidestring.
ThefunctionoutputsaProExtdataClass usedthereafterbytheapplication to
referencetheclass.
Youcandeleteaclassthatisnolongerneededusingthefunction
ProExtdataClassUnregister().
Thefunction ProExtdataSlotCreate() createsanemptydataslot.The
inputsaretheProExtdataClass objectandtheslotname,intheformofa
widestring.ThefunctionoutputsaProExtdataSlot objecttoidentifythenew
slot.YoucanuseNULLasthevalueoftheslotnameargument,inwhichcasethe
functionallocatesauniqueintegeridentifierfortheslot(whichbecomesthevalue
ofthefieldslot_id intheProExtdataSlot structure).
Note
Slotnamescannotbeginwithanumber.
Thefunction ProExtdataSlotWrite() specifiestheslotdatatypeand
writesanitemofthattypetotheslot.Theinputsare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthefieldslot_id intheProExtdataSlot structure).
Note
Slotnamescannotbeginwithanumber.
Thefunction ProExtdataSlotWrite() specifiestheslotdatatypeand
writesanitemofthattypetotheslot.Theinputsare:
•Theslotobject ProExtdataSlot
•Aflagshowingwhethertheslotisidentifiedbynameorinteger
•Thedatatypeoftheslot
•Thenumberofbytesinthedata.Specifythisargumentonlywhenthedata
typeisstreamorchapter.
•Apointertothedata(casttovoid*)
Aslotoftypestreamhasamaximum sizeof512kilobytes.Ifthissizeis
exceeded, ProExtdataSlotWrite() returnsthestatus PROEXTDATA_TK_
STREAM_TOO_LARGE. Fordataofsizelargerthan512kilobytes,usetheslotof
typechapter.
236 Creo®Parametric TOOLKIT User’sGuideYoucandeleteanunusedslotusingthefunction ProExtdataSlotDelete().
Iftheuserandapplication nolongerneedexternaldatainsession,call
ProExtdataTerm() tocleantheexternaldatafrommemory.
Note
ProExtdataTerm() doesnotaffectthecontentsofanyfileonthedisk.It
onlyremovesallexternaldatafromthememory.ChangesmadetoexternalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProExtdataTerm() tocleantheexternaldatafrommemory.
Note
ProExtdataTerm() doesnotaffectthecontentsofanyfileonthedisk.It
onlyremovesallexternaldatafromthememory.Changesmadetoexternal
dataduringthecurrentsessionarenotstoredinthefileuntilyousavethe
model.IfyoucallProExtdataTerm() aftermakingchangestothemodel,
allexternaldatachanges(suchasnewlycreatedslots,changedslotvalue,and
deletedslot)madesincethelastProMdlSave() arelost.
RetrievingExternalData
Functions Introduced:
•ProExtdataLoadAll()
•ProExtdataClassNamesList()
•ProExtdataSlotIdsList()
•ProExtdataSlotNamesList()
•ProExtdataSlotRead()
•ProExtdataFr ee()
Forimprovedperformance, externaldataisnotloadedautomatically intomemory
withthemodel.Whenthemodelisinsession,callthefunction
ProExtdataLoadAll() toretrievealltheexternaldataforthespecified
modelfromtheCreoParametric modelfileandputitintheworkspace. The
functionneedstobecalledonlyoncetoretrieveallthedata.
Notethatthefunction ProExtdataLoadAll() providesbetterperformancexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelfromtheCreoParametric modelfileandputitintheworkspace. The
functionneedstobecalledonlyoncetoretrieveallthedata.
Notethatthefunction ProExtdataLoadAll() providesbetterperformance
thanProExtdataClassNamesList(),
ProExtdataSlotNamesList(), andProExtdataSlotRead() because
thesefunctionsloadonlyspecificinformation (classnames,slotnames,andslot
files,respectively), whichcanbeslow.
TheProExtdataClassNamesList() functionprovidesanarrayofthe
namesofalltheexternaldataclassesregistered inaspecifiedmodel.
Thefunction ProExtdataSlotIdsList() providesanarrayoftheinteger
identifiers ofalltheslotsinaspecifiedclass.TheinputisaProExtdataClass
structurethatmustbesetupmanuallyorprogrammatically .Thefunction
Core:ExternalData 237ProExtdataSlotNamesList() providesanarrayofthenamesoftheslots
inthespecifiedclass.Thefunctionallocatesaterminthearrayforeachslot,even
ifyoudidnotassignedanametotheslot.
Thefunction ProExtdataSlotRead() readsthedatatypeanddatafromaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthespecifiedclass.Thefunctionallocatesaterminthearrayforeachslot,even
ifyoudidnotassignedanametotheslot.
Thefunction ProExtdataSlotRead() readsthedatatypeanddatafroma
specifiedslot.ItsinputisaProExtdataSlot structurethatmustbesetup
manually.Thereisalsoaninputargumenttoshowwhethertheslotisidentifiedby
nameorbyinteger.Thefunctionoutputsthedatatype,thenumberofbytes(ifthe
datatypeisstreamorchapter),andapointertothedataitself.
TheProExtdataSlotRead() functionallocatesmemoryforthedatait
outputs.Tofreethismemory,callProExtdataFree().
Note
IfyoucallProExtdataSlotRead() multipletimesanddonotfreethe
memory,thefunctionusesthesamememoryforeachcall.
238 Creo®Parametric TOOLKIT User’sGuide12
Core:CrossSections
ListingCrossSections.............................................................................................240
ExtractingCross-Sectional Geometry.......................................................................240xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExtractingCross-Sectional Geometry.......................................................................240
VisitingCrossSections............................................................................................244
CreatingandModifyingCrossSections.....................................................................244
MassPropertiesofCrossSections...........................................................................250
LinePatternsofCrossSectionComponents ..............................................................251
Thefunctionsinthischapterenableyoutoaccess,modify,anddeletecross
sections,andcreateplanarcrosssections.
239ListingCrossSections
Functions Introduced:
•ProXsecRename()
•ProXsecT ypeGet()
Thefunction ProXsecRename() renamesaspecifiedcrosssection.
Usefunction ProXsecTypeGet() toretrievethetypeofcrosssection.The
inputargumentforthisfunctionisahandletothespecifiedcrosssection.The
outputargument p_typeisaProXsecType structure,whichcontainsthe
followingfields:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinputargumentforthisfunctionisahandletothespecifiedcrosssection.The
outputargument p_typeisaProXsecType structure,whichcontainsthe
followingfields:
•cutter—Specifies thecuttingobjecttype.Thevalidcuttingobjecttypesare
containedintheenumerated typeProXsecCut andareasfollows:
○PRO_XSEC_PLANAR
○PRO_XSEC_OFFSET
○PRO_XSEC_PATTERN
•cut_object—Specifies theobjectthatwascut.Thevalidobjecttypesare
containedintheenumerated typeProXsecCutobj andareasfollows:
○PRO_XSECTYPE_MODEL—Specifies thatthecrosssectionwascreated
onsolidgeometry.
○PRO_XSECTYPE_QUILTS—Specifies thatthecrosssectionwascreated
ononequiltsurface.
○PRO_XSECTYPE_MODELQUILTS—Specifies thatthecrosssectionwas
createdonsolidgeometryandallquiltsurfaces.
○PRO_XSECTYPE_ONEPART—Specifies thatthecrosssectionwas
createdononecomponent intheassembly.
ExtractingCross-Sectional Geometry
Functions Introduced:
•ProXSectionItemDataGet()
•ProXSectionItemFre e()
•ProXSectionItemsArrFr ee()
•ProXSectionItemsCollect()
•ProXsecGeometryArrayFr ee()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExtractingCross-Sectional Geometry
Functions Introduced:
•ProXSectionItemDataGet()
•ProXSectionItemFre e()
•ProXSectionItemsArrFr ee()
•ProXSectionItemsCollect()
•ProXsecGeometryArrayFr ee()
•ProXsecGeometryFre e()
•ProXsecRegenerate()
240 Creo®Parametric TOOLKIT User’sGuide•ProXsecDisplay()
•ProXsecPlaneGet()
•ProOffsetXsecGet()
•ProXsecGet()
•ProXsecMdlnameAlloc()
•ProXsecMdlnameFr ee()
•ProXsecMdlnameNameGet
•ProXsecMdlnameNameSet()
•ProXsecMdlnameSolidOwnerGet()
•ProXsecMdlnameSolidOwnerSet()
•ProXsecAsModelitemGet()
•ProXsecFlipGet()
•ProXSectionExcludeCompGet()
•ProAsmpathPr oarrayFr ee()
Superseded Functions:
•ProXsecGeometryRetrieve()
•ProXsecGeometryCollect()
•ProXsecExcludeCompGet()
Thegeometryofacrosssectioninanassemblyisdividedintocomponents. Each
component corresponds tooneofthepartsintheassemblythatisintersected by
thecrosssection,anddescribesthegeometryofthatintersection. Acomponent
canhavedisjointgeometryifthecrosssectionintersectsagivenpartinstancein
morethanoneplace.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecrosssection,anddescribesthegeometryofthatintersection. Acomponent
canhavedisjointgeometryifthecrosssectionintersectsagivenpartinstancein
morethanoneplace.
Acrosssectioninaparthasasinglecomponent.
Thecomponents ofacrosssectionareidentifiedbyconsecutive integeridentifiers
thatalwaysstartat0.
Thefunction ProXSectionItemsCollect() returnsanarrayof
ProXSectionItem. Anarrayitemiscreatedforeachbody.Ifnobodiesare
created,anarraycontainsoneitemforeachcomponent. Thefunctionreturnsthe
errorPRO_TK_E_NOT_FOUND whentheinputargument p_viewisadrawing
viewandtheinputcrosssectionisnotfoundintheview.
Thefunction ProXSectionItemDataGet() returnsthedatafromthecross
sectionbodyspecifiedusingthestructure ProXSectionItem. Theoutput
argumentsfollow:
•r_path—Path tothecomponent beingcutbythecrosssection.
•r_id_type—Body orquilttype.
Core:CrossSections 241•r_id—Id ofthebodyorthequiltbeingcut.
•r_geom—Geometry createdbythecrosssectionbycuttingthespecificbody
orquilt.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•r_id_type—Body orquilttype.
Core:CrossSections 241•r_id—Id ofthebodyorthequiltbeingcut.
•r_geom—Geometry createdbythecrosssectionbycuttingthespecificbody
orquilt.
Usethefunction ProXSectionItemFree() tofreethememoryallocatedto
theProXSectionItem structure.
Usethefunction ProXSectionItemsArrFree() tofreetheProArray of
crosssectiondataallocatedbythefunction ProXSectionItemsCollect().
Thefunction ProXsecGeometryRetrieve() returnsanarraycontaining the
geometryofallcomponents inthespecifiedcrosssectionandretrievesthe
followinginformation aboutaspecifiedcross-sectional component:
•Thememb_num andmemb_id_tab fortheintersected part,withrespecttothe
assemblythatcontainsthecrosssection.
•Ahandletothegeometryoftheintersection.
Thegeometryhandlecanbetreatedasanordinaryfacepointer.Extractits
contourswithfunction ProSurfaceContourVisit().
Usethefunction ProXsecGeometryArrayFree() tofreethememory
allocatedtothearrayofcrosssectiondataandusethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontourswithfunction ProSurfaceContourVisit().
Usethefunction ProXsecGeometryArrayFree() tofreethememory
allocatedtothearrayofcrosssectiondataandusethefunction
ProXsecGeometryFree() tofreememoryallocatedtothecrosssectiondata.
Thegeometryofacrosssectionisnotmaintained constantly byCreo
Parametric—it isregenerated onlywhentheuserrequeststoseethecrosssection.
Usefunction ProXsecRegenerate() toregenerate thecrosssectionofapart
oranassembly.Usefunction ProXsecDisplay() todisplayacrosssection.
ProXsecDisplay() doesnotaddthecrosssectiontotheassociated objects
list,andthedisplayedcrosssectiondisappears onthefirstscreenredraw.
Thefunction ProXsecPlaneGet() returnstheplanegeometryforaspecified
crosssection.
Thefunction ProOffsetXsecGet() returnsthefollowingparameters fora
specifiedoffsetcrosssection.
•p_ent_arr—Specifies thecrosssectionentities.
•plane—Specifies anentityplane.
•p_one_sided—If thisoutputargumentistrue,thecrosssectionliesononesidexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedoffsetcrosssection.
•p_ent_arr—Specifies thecrosssectionentities.
•plane—Specifies anentityplane.
•p_one_sided—If thisoutputargumentistrue,thecrosssectionliesononeside
oftheentityplane,ifitisfalse,thecrosssectionisboth-sided.
•p_flip—If thisoutputargumentisfalse,CreoParametric removesmaterial
fromtheleftofthecrosssectionentitiesiftheviewingdirectionisfromthe
positivesideoftheentityplane.Ifp_flipistrue,CreoParametric retainsthe
materialfromtheleftofthecrosssectionentitiesandremovestherestofthe
material.
242 Creo®Parametric TOOLKIT User’sGuideThefunction ProXsecGet() retrievesthecrosssectionhandlebasedonthe
specifiedsolidmodelandcrosssectionID.
Thefunction ProXsecMdlnameAlloc() allocatestheProXsecMdlname
handle.Theinputargumentsfollow:
•solid_owner—Specifies themodelwherethecrosssectionwillbecreated.
•xsec_name—The nametosetinthecrosssection.Maximum namesizeshould
bePRO_MDLNAME_SIZE.
Note
Thefunction ProXsecMdlnameAlloc() returnstheerrorPRO_TK_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•xsec_name—The nametosetinthecrosssection.Maximum namesizeshould
bePRO_MDLNAME_SIZE.
Note
Thefunction ProXsecMdlnameAlloc() returnstheerrorPRO_TK_
LINE_TOO_LONG ifthenameofthecrosssectionislongerthanPRO_
NAME_SIZE.
Usethefunction ProXsecMdlnameFree() tofreethememoryallocatedtothe
ProXsecMdlname handle.
Thefunction ProXsecMdlnameNameGet() returnsthenameofthecross
sectionhandle.
Usethefunction ProXsecMdlnameNameSet() tosetthenameofthecross
section.Maximum namesizeshouldbePRO_NAME_SIZE.
Note
Thefunction ProXsecMdlnameNameSet() returnstheerrorPRO_TK_
LINE_TOO_LONG ifthenameofthecrosssectionislongerthanPRO_
NAME_SIZE.
Thefunctions ProXsecMdlnameSolidOwnerGet() and
ProXsecMdlnameSolidOwnerSet() getandsettheownerofthecross
section.
Thefunction ProXsecAsModelitemGet() convertsacrosssectionhandle
intoanappropriate modelitem.
Thefunction ProXsecFlipGet() returnsaintegervaluethatindicatesthe
directioninwhichthecrosssectionhasbeenclipped.Depending onthetypeofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintoanappropriate modelitem.
Thefunction ProXsecFlipGet() returnsaintegervaluethatindicatesthe
directioninwhichthecrosssectionhasbeenclipped.Depending onthetypeof
crosssection,theintegervalueindicatesdifferentdirectionofclippingasbelow:
•Planarcrosssection—The integervalue:
○1indicatesthatthecrosssectionhasbeenclippedinthedirectionofthe
positivenormaltothecrosssectionplane.
Core:CrossSections 243○-1indicatesthatthecrosssectionhasbeenclippedintheopposite
directionofthepositivenormal.
•Offsetcrosssection—The integervalue:
○1indicatesthatmaterialhasbeenremovedfromtheleftofthecross
sectionentitiesiftheviewingdirectionisfromthepositivesideofthe
entityplane.
○-1indicatesthatthematerialhasbeenretainedfromtheleftofthecross
sectionentitiesandrestofthematerialhasbeenremoved.
InCreoParametric 7.0.0.0thefunction ProXsecExcludeCompGet() is
deprecated. Usethefunction ProXSectionExcludeCompGet() instead.
Thefunction ProXSectionExcludeCompGet() returnsthestatusandanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxInCreoParametric 7.0.0.0thefunction ProXsecExcludeCompGet() is
deprecated. Usethefunction ProXSectionExcludeCompGet() instead.
Thefunction ProXSectionExcludeCompGet() returnsthestatusandan
arrayofpathstotheassemblycomponents andbodiesthathavebeenincludedand
excludedforthespecifiedcrosssection.Theassemblypathsarereturnedasa
ProArray oftypeProSelection. Thestatusoftheassemblycomponents
andbodiesisreturnedbytheenumerated typeProXsecExcludeModels and
thevalidvaluesare:
•PRO_XSEC_MODEL_EXCLUDE—Specifies thattheassemblycomponents
andbodieshavebeenexcluded.
•PRO_XSEC_MODEL_INCLUDE—Specifies thattheassemblycomponents
andbodieshavebeenincluded.
Usethefunction ProSelectionarrayFree() tofreethememoryallocated
totheProArray oftypeProSelection.
VisitingCrossSections
FunctionIntroduced:
•ProSolidXsecV isit()
•ProSolidXsecV isitAction()
Thefunction ProSolidXsecVisit() enablesyoutovisitallnamedcross
sectionsinthespecifiedsolid.UseProSolidXsecVisitAction() tosupplyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctionIntroduced:
•ProSolidXsecV isit()
•ProSolidXsecV isitAction()
Thefunction ProSolidXsecVisit() enablesyoutovisitallnamedcross
sectionsinthespecifiedsolid.UseProSolidXsecVisitAction() tosupply
thefunctiontobeperformed whenvisitingpartorassemblycrosssections.
CreatingandModifyingCrossSections
Functions Introduced:
•ProXsecParallelCr eate()
•ProXSectionOffsetCre ate()
•ProXSectionPlanarCre ate()
•ProXsecMakeV isible()
244 Creo®Parametric TOOLKIT User’sGuide•ProXsecIsV isible()
•ProXsecActiveSet()
•ProXsecActiveGet()
•ProXsecCanCre ateAsFeature ()
•ProXsecOldT oNewConvert()
•ProXsecIsFeatur e()
•ProXsecFeature Get()
•ProXsecDelete()
Superseded Functions:
•ProXsecOffsetCr eate()
•ProXsecPlanarW ithoptionsCr eate()
Thefunction ProXsecParallelCreate() createsacrosssectionfeature
paralleltoagivenplane.
InCreoParametric 7.0.0.0thefunction
ProXsecPlanarWithoptionsCreate() isdeprecated. Usethefunction
ProXSectionPlanarCreate() instead.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparalleltoagivenplane.
InCreoParametric 7.0.0.0thefunction
ProXsecPlanarWithoptionsCreate() isdeprecated. Usethefunction
ProXSectionPlanarCreate() instead.
Thefunction ProXSectionPlanarCreate() createsacrosssectionfeature
throughadatumplaneandalsomakesthecrosssectionvisible.Theinput
argumentsare:
•solid_owner—Specifies themodelwherethecrosssectionwillbecreated.
•xsec_name—Specifies thenameofthecrosssection.
•cutting_plane—Specifies theselectionofthecuttingplane.Thecuttingplane
mustbelongtothetop-levelpartorassembly.
•xsec_type—Specifies thetypeofobjectthatwillbecutbythecrosssection.It
isspecifiedbytheenumerated typeProXsecCutobj.
•quilt_or_one_part—Specifies theselectionofthequiltorcomponent
depending ontypeofobjectspecifiedbyxsec_type.
•flip—Specifies thedirectioninwhichthecrosssectionwillbeclipped.The
value1indicatesthatthecrosssectionwillbeclippedinthedirectionofthe
positivenormaltothecuttingplane.-1indicatesthatthecrosssectionwillbe
clippedintheoppositedirectionofthepositivenormal.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalue1indicatesthatthecrosssectionwillbeclippedinthedirectionofthe
positivenormaltothecuttingplane.-1indicatesthatthecrosssectionwillbe
clippedintheoppositedirectionofthepositivenormal.
•excld_incld_opt—Specifies theitemstoexclude,specifiedbytheinput
parameter exclude_items fromcuttingbythecrosssectionandisdefinedby
theenumerated datatypeProXsecExcludeModels.
•exclude_items—Specifies aProArray ofselectedbodiesorpartstobe
includedorexcludesfromthecrosssection.
•data—Reserved forfutureuse.
Core:CrossSections 245Note
•FromCreoParametric 4.0F000onward,whenacrosssectioniscreated,itis
notdisplayedbydefaultinthemodel.Youmustcallthefunction
ProXsecMakeVisible() todisplaythecrosssection.
•WhileportingCreoParametric TOOLKITapplications, whichhaveusedthe
function ProXsecPlanarWithoptionsCreate() andhavebeen
createdinreleasespriortoCreoParametric 4.0F000,depending onwhether
youwantthecrosssectiontobedisplayed, callthefunction
ProXsecMakeVisible() inyourapplications.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreatedinreleasespriortoCreoParametric 4.0F000,depending onwhether
youwantthecrosssectiontobedisplayed, callthefunction
ProXsecMakeVisible() inyourapplications.
ProXsecMakeVisible() displaysthecrosssectioninthemodel.
•FromCreoParametric 2.0onward:
○thelegacycrosssections,thatis,thecrosssectionscreatedinPro/
ENGINEER, CreoElements/Pro, andinreleasespriortoCreoParametric
2.0arenotsupported.
○thefunctions ProXsecParallelCreate() and
ProXsecPlanarWithoptionsCreate() createcrosssectionsas
features.
○thefunctions ProXsecParallelCreate() and
ProXsecPlanarWithoptionsCreate() automatically convertthe
legacycrosssectionstonewcrosssectionfeaturesasdefinedinCreo
Parametric 2.0beforecreatinganynewcrosssectionfeature.
Thefunction ProXsecOffsetCreate() isdeprecated. Usethefunction
ProXSectionOffsetCreate() instead.
Thefunction ProXSectionOffsetCreate() createsanoffsetcrosssection
fromapolyline.ThepolylineliesonaplaneandtheplaneisdefinedbyalocalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProXSectionOffsetCreate() instead.
Thefunction ProXSectionOffsetCreate() createsanoffsetcrosssection
fromapolyline.Thepolylineliesonaplaneandtheplaneisdefinedbyalocal
coordinate system.Offsetcrosssectioniscreatedbyextrudingthepolyline
perpendicular tothesketchingplane.Theinputargumentsare:
•solid_owner—Specifies themodelwherethecrosssectionwillbecreated.
•xsec_name—Specifies thenameofthecrosssection.
•trf—Specifies thelocalcoordinate systemoftheplanewhichcontainsthe
polyline.
•ent_arr—Specifies aProArray ofPro2dEntdef structure.Thestructure
containsinformation abouttheentitiesofthepolyline.
246 Creo®Parametric TOOLKIT User’sGuide•side—Specifies thesidetowhichthecrosssectionmustbeextended.The
crosssectionisextendednormaltothepolylineplane.Thesideisspecified
usingtheenumerated datatypeProXsecOffsetSide. Thevalidvalues
are:
○PRO_XSEC_OFFSET_BOTH_SIDES—Extends thecrosssectiontoboth
sidesofpolylineplane.
○PRO_XSEC_OFFSET_SIDE_1—Extends thecrosssectiontothe
positivenormalofpolylineplane.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxare:
○PRO_XSEC_OFFSET_BOTH_SIDES—Extends thecrosssectiontoboth
sidesofpolylineplane.
○PRO_XSEC_OFFSET_SIDE_1—Extends thecrosssectiontothe
positivenormalofpolylineplane.
○PRO_XSEC_OFFSET_SIDE_2—Extends thecrosssectiontothe
negativenormalofpolylineplane.
•flip—Specifies thedirectioninwhichthecrosssectionwillbeclipped.The
value Falseindicatesthatthematerialontherightsideofthepolylineplane
isretained.Whentheargument sideissettoPRO_XSEC_OFFSET_SIDE_
1orPRO_XSEC_OFFSET_SIDE_2 thenthematerialisretainedfrom
positiveornegativesideofpolylineplanerespectively .
Core:CrossSections 247WhenthevalueissettoTruetheaboveareaisremoved.Theremaining
materialisretained.
Note
Ifthepolylinefromwhichthecrosssectionhasbeencreatedisclosed,
thenflipworksalittledifferent.
248 Creo®Parametric TOOLKIT User’sGuidePolylineDirection FlipValue Description
Closedpolylinecreated
clockwiseFalse Thematerialinsideof
theclosedpolylineis
retained.
Whentheargument
sideissettoPRO_
XSEC_OFFSET_
SIDE_1orPRO_
XSEC_OFFSET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxClosedpolylinecreated
clockwiseFalse Thematerialinsideof
theclosedpolylineis
retained.
Whentheargument
sideissettoPRO_
XSEC_OFFSET_
SIDE_1orPRO_
XSEC_OFFSET_
SIDE_2thenthe
materialisretained
frompositiveor
negativesideof
polylineplane
respectively .
Closedpolylinecreated
clockwiseTrue Thematerialdescribed
inabovecaseonpage
isremoved.The
remaining materialis
retained.
Closedpolylinecreated
counterclockwiseTrue Thematerialinsideof
theclosedpolylineis
retained.
Whentheargument
sideissettoPRO_
XSEC_OFFSET_
SIDE_1orPRO_
XSEC_OFFSET_
SIDE_2thenthe
materialisretained
frompositiveor
negativesideof
polylineplane
respectively .
Closedpolylinecreated
counterclockwiseFalse Thematerialdescribed
inabovecaseonpage
isremoved.The
remaining materialis
retained.
Core:CrossSections 249•excld_incld_opt—Specifies theitemstobeexcludedfromcuttingbythecross
sectionandisdefinedbytheenumerated datatype
ProXsecExcludeModels. Theitemstobeexcludedarespecifiedbythe
inputparameter exclude_items.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionandisdefinedbytheenumerated datatype
ProXsecExcludeModels. Theitemstobeexcludedarespecifiedbythe
inputparameter exclude_items.
•exclude_items—Specifies aProArray ofselectedbodiesorpartstoinclude
orexcludefromthecrosssection.
•data—Reserved forfutureuse.
Thefunctions ProXSectionPlanarCreate() and
ProXSectionOffsetCreate() returnanerrorPRO_TK_LINE_TOO_
LONG,whenthexsec_name islongerthanPRO_NAME_SIZE.
Thefunction ProXsecMakeVisible() displaysthespecifiedcrosssectionin
themodel.Usethefunction ProXsecIsVisible() tocheckifthespecified
crosssectionisdisplayedinthemodel.
Thefunction ProXsecActiveSet() setsthespecifiedcrosssectionasactive
inthecurrentview.Usethefunction ProXsecActiveGet() toretrievethe
crosssection,whichisactiveinthecurrentview.
Usethefunction ProXsecCanCreateAsFeature() tocheckifnewcross
sectionfeaturescanbecreatedinthespecifiedmodel.Thefunctionreturns PRO_
B_FALSE ifthespecifiedmodelhaslegacycrosssections.
Thefunction ProXsecOldToNewConvert() convertsthelegacycrossxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionfeaturescanbecreatedinthespecifiedmodel.Thefunctionreturns PRO_
B_FALSE ifthespecifiedmodelhaslegacycrosssections.
Thefunction ProXsecOldToNewConvert() convertsthelegacycross
sectionstonewcrosssectionfeaturesasdefinedinCreoParametric 2.0forthe
specifiedmodel.
Usethefunction ProXsecIsFeature() tocheckwhetherthecrosssectionis
afeature.
Thefunction ProXsecFeatureGet() returnsapointertothecrosssection
feature.ThefunctionreturnstheerrortypePRO_TK_BAD_CONTEXT forlegacy
crosssections.
Thefunction ProXsecDelete() deletesagivencrosssectionfromapartor
assembly.
MassPropertiesofCrossSections
FunctionIntroduced:
•ProXsecMassPro pertyCompute()
Thefunction ProXsecMassPropertyCompute() calculates themass
properties ofthecrosssectioninthespecifiedcoordinate system.Thefunction
needsthenameofacoordinate systemdatumwhoseX-andY-axesareparallelto
thecrosssection.Theoutputfromthisfunctionalsoreferstothecoordinate
systemdatum.CallProXsecRegenerate() before
ProXsecMassPropertyCompute().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecrosssection.Theoutputfromthisfunctionalsoreferstothecoordinate
systemdatum.CallProXsecRegenerate() before
ProXsecMassPropertyCompute().
250 Creo®Parametric TOOLKIT User’sGuideNote
Thefunction ProXsecMassPropertyCompute() isnotsupported for
offsetandquilttypeofcrosssections.
LinePatternsofCrossSection
Components
Functions Introduced:
•ProXsecCompXhatchGet()
•ProXsecCompXhatchAdd()
•ProXsecCompXhatchReplace()
•ProXsectionCompXhatchStyleGet()
•ProXSectionItemXhatchStyleGet()
•ProXsecNewXhatchStyleCr eateFr omName()
•ProXsectionCompXhatchStyleSet()
•ProXSectionItemXhatchStyleSet()
Superseded Functions:
•ProXsecCompNewXhatchStyleSetByName()
•ProXsecCompNewXhatchStyleSet()
•ProXsecCompXhatchStyleSet()
•ProXsecCompXhatchStyleGet()
•ProXsecCompNewXhatchStyleGet()
CreoParametric supportshatchpatternfilesofthe*.patfileformat.Thenew
hatchsupportsnonlinearhatchingstyles.
TheoldhatchusestheXhatch *.xchfileformat.Itisrecommended tousethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric supportshatchpatternfilesofthe*.patfileformat.Thenew
hatchsupportsnonlinearhatchingstyles.
TheoldhatchusestheXhatch *.xchfileformat.Itisrecommended tousethe
*.patfiles.RefertotheCreoParametric OnlineHelpformoreinformation.
Thefunction ProXsecCompXhatchGet() returnsthelinepatternsofacross
sectioncomponent basedonthespecifiedcrosssectionhandleandtheIDofthe
crosssectioncomponent. ThelinepatternsobtainedareProXsecXhatch
structuresthatcontainthefollowingfields:
•angle—Specifies theangleofthelinepatterns.
•spacing—Specifies thedistancebetweenthelinepatterns.
•offset—Specifies theoffsetofthefirstlineinthepattern.
Core:CrossSections 251Note
Thefunctions ProXsecCompXhatchGet(),
ProXsecCompXhatchAdd(), andProXsecCompXhatchReplace()
supportonlytheoldhatchingstyles,thatis,the*.xchfileformat.
Thefunction ProXsecCompXhatchAdd() addsalinepatterntoaspecified
crosssectioncomponent. Thisfunctiontakesthehandletothecrosssection,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsupportonlytheoldhatchingstyles,thatis,the*.xchfileformat.
Thefunction ProXsecCompXhatchAdd() addsalinepatterntoaspecified
crosssectioncomponent. Thisfunctiontakesthehandletothecrosssection,the
IDofthecrosssectioncomponent, thehandletothedrawingviewcontaining the
crosssectioncomponent andapointertotheProXsecXhatch objectasits
inputarguments.
Note
Ifthecrosssectioncomponent alreadyincludesalinepattern,thenthe
function ProXsecCompXhatchAdd() doesnotaddalinepattern.
Thefunction ProXsecCompXhatchReplace() replacesallexistingline
patternsofaspecifiedcrosssectioncomponent withanewone.
InCreoParametric 7.0.0.0thefunctions ProXsecCompXhatchStyleGet()
andProXsecCompNewXhatchStyleGet() aredeprecated. Usethefunction
ProXsectionCompXhatchStyleGet ()togetp_xhatch_style froma
component andProXSectionItemXhatchStyleGet() togetp_
xhatch_style fromabody.
Thefunction ProXSectionItemXhatchStyleGet() returnsthecross
section p_xhatch_style forthecrosssectionhandleofthebody.Theoutputxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhatch_style fromabody.
Thefunction ProXSectionItemXhatchStyleGet() returnsthecross
section p_xhatch_style forthecrosssectionhandleofthebody.Theoutput
argument p_xhatch_style returnsaProXsecNewXhatchStyle handle.
Thefunction ProXsectionCompXhatchStyleGet() returnsinformation
aboutthestyleofhatchpatterninthespecifiedcrosssectioncomponent. The
outputargument p_xhatch_style returnsaProXsecNewXhatchStyle
handle.Thestructure ProXsecNewXhatchStyle specifiesthefollowing
information:
•type—Typeofhatch.Specifythefollowingvalues:
○PRO_XHATCH—Cross sectioncomponent isappearsasahatch.
○PRO_XSEC_EXCLUDED—Cross sectionisexcludedforthespecified
assemblycomponent.
○PRO_XSEC_FILL—Cross sectioncomponent appearsasasolid.
○PRO_XHATCH_ERASED—Cross sectioncomponent iserased,thatis,
neitherhatchednorfilled.
252 Creo®Parametric TOOLKIT User’sGuide•ProXsecXhatchPattern—Structure thatcontainsinformation aboutthe
oldhatchpatterninacrosssection.Itspecifiesthefollowinginformation:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxneitherhatchednorfilled.
252 Creo®Parametric TOOLKIT User’sGuide•ProXsecXhatchPattern—Structure thatcontainsinformation aboutthe
oldhatchpatterninacrosssection.Itspecifiesthefollowinginformation:
○angle—Angle ofthelinesinthepatterns.
○spacing—Distance betweenthelinesinthepatterns.
○offset—Offse tofthefirstlineinthepattern.
○font—Line styleforthelinepattern.
○color—Color forthelinepattern.
Note
Whenthecrosssectionhasoldhatchpatterns,thefield*new_lines in
thestructure ProXsecNewXhatchStyle isreturnedasNULL.
•ProXsecNewXhatchPattern—Structure thatcontainsinformation about
thenewhatchpatterninacrosssection.Itspecifiesthefollowinginformation:
○1X-Origin,Y-Origin
○2Angle
○3DeltaX
○4DeltaY
○angle—Angle ofthelinesinthepatterns.
Core:CrossSections 253○x_origin—Origin ofthefirstpatternlinealongthex-axis.
○y_origin—Origin ofthefirstpatternlinealongthey-axis.
○delta_x—For adashedlinepattern,thedistanceafterwhichthenext
dashedlinestartsinapattern.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○y_origin—Origin ofthefirstpatternlinealongthey-axis.
○delta_x—For adashedlinepattern,thedistanceafterwhichthenext
dashedlinestartsinapattern.
○delta_y—For acontinuous anddashedlinepattern,thedistance
betweenthepatternlines.
○dash—Dashed linepattern.
○num_dash—Number ofdashesforthelinepattern.Maxnumberof
dashesis6.
○color—Color forthelinepattern.
Note
Whenthecrosssectionhasnewhatchpatterns,thefield*old_lines in
thestructure ProXsecNewXhatchStyle isreturnedasNULL.
InCreoParametric 7.0.0.0thefunction
ProXsecCompNewXhatchStyleSetByName() isdeprecated. Usethe
function ProXsecNewXhatchStyleCreateFromName ()tocreate
ProXsecNewXhatchStyle. Usethefunctions
ProXsectionCompXhatchStyleSet() and
ProXSectionItemXhatchStyleSet() toset
ProXsecNewXhatchStyle.
Usethefunction ProXsecNewXhatchStyleCreateFromName() tocreate
aProXsecNewXhatchStyle structureusingthehatchpatternspecifiedbythe
inputargument hatch_name. Thisfunctionsupportsonlynew,thatis,PAThatch
patterns.Theinputargumentsfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaProXsecNewXhatchStyle structureusingthehatchpatternspecifiedbythe
inputargument hatch_name. Thisfunctionsupportsonlynew,thatis,PAThatch
patterns.Theinputargumentsfollows:
•hatch_name—Name oftheexistingPAThatch.
•color—Colorofthenewlycreatedpattern.
•type—Typeofthehatchspecifiedbystructure ProXsecNewXhatchStyle
andhasthefollowingvalues:
○PRO_XHATCH—Cross sectioncomponent appearsasahatch.
○PRO_XSEC_EXCLUDED—Cross sectionisexcludedforthespecified
assemblycomponent.
○PRO_XSEC_FILL—Cross sectioncomponent appearsasasolid.
○PRO_XHATCH_ERASED—Cross sectioncomponent iserased,thatis,
neitherhatchednorfilled.
254 Creo®Parametric TOOLKIT User’sGuideAftercreatingtheProXsecNewXhatchStyle structureusingthefunction
ProXsecNewXhatchStyleCreateFromName(), eitherofthefollowing
situationsmightoccur:
•ThenewPAThatchthatiscreatedusingthefunction
ProXSectionItemXhatchStyleSet() isavailableinthehatchedit
dialoginthepartandassemblymodeandasuffix_TKisaddedtothehatch
name.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsituationsmightoccur:
•ThenewPAThatchthatiscreatedusingthefunction
ProXSectionItemXhatchStyleSet() isavailableinthehatchedit
dialoginthepartandassemblymodeandasuffix_TKisaddedtothehatch
name.
•Ifthehatchnameisusedastheinputparameter tothefunction
ProXSectionItemXhatchStyleSet() isused,thenanewhatchisnot
added.
Theoutputargument p_xhatch_style canbesetbythefunctions
ProXSectionItemXhatchStyleSet() and
ProXsectionCompXhatchStyleSet().
Thefunction ProXSectionItemXhatchStyleSet() setsthecrosssection
p_xhatch_style forthecrosssectionhandleofthebody,usingthe
ProXsecNewXhatchStyle structure.Theinputargumentsfollow:
•xsec_item—Cross sectionhandleofthespecificbody.
•p_view—V iewhandle.
•hatch_name—Name ofthenonlinearhatch.
•p_xhatch_style—Handle toProXsecNewXhatchStyle. Theunusedhatch
fieldmustbesettoNULL.
InCreoParametric 7.0.0.0thefunction ProXsecCompXhatchStyleSet() is
deprecated. Usethefunction ProXsectionCompXhatchStyleSet() toset
p_xhatch_style onacomponent andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfieldmustbesettoNULL.
InCreoParametric 7.0.0.0thefunction ProXsecCompXhatchStyleSet() is
deprecated. Usethefunction ProXsectionCompXhatchStyleSet() toset
p_xhatch_style onacomponent and
ProXSectionItemXhatchStyleSet() tosetp_xhatch_style onabody.
Note
Usethefunction ProXsecCompNewXhatchStyleGet() fornonlinear
hatchsupport.
Thefunction ProXsectionCompXhatchStyleSet() setsthecrosssection
p_xhatch_style forthespecifiedcomponent usingthe
ProXsecNewXhatchStyle structure.Theinputargumentsfollow:
•xsec—Cross sectionhandleofthespecificbody.
•path—Path tothespecifiedcomponent.
•p_view—V iewhandle.
•hatch_name—Name ofthenonlinearhatch.
•p_xhatch_style—Handle toProXsecNewXhatchStyle. Theunusedhatch
fieldmustbesettoNULL.
Core:CrossSections 255Note
PRO_XSEC_EXCLUDED typeisappliedonlyinthedrawingenvironment.
Whenpartswithmultiplesolidbodiesarebeingcutbythecrosssection,the
followingfunctionsreturntheerrorPRO_TK_MULTIBODY_UNSUPPORTED:
•ProXsecCompNewXhatchStyleSetByName
•ProXsecCompNewXhatchStyleSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxWhenpartswithmultiplesolidbodiesarebeingcutbythecrosssection,the
followingfunctionsreturntheerrorPRO_TK_MULTIBODY_UNSUPPORTED:
•ProXsecCompNewXhatchStyleSetByName
•ProXsecCompNewXhatchStyleSet()
•ProXsecCompXhatchStyleSet()
•ProXsecCompNewXhatchStyleGet()
•ProXsecCompXhatchStyleGet()
256 Creo®Parametric TOOLKIT User’sGuide13
Core:Utilities
Configuration Options..............................................................................................258
RegistryFileData....................................................................................................258
TrailFiles................................................................................................................259
CreoParametricLicenseData..................................................................................259
CurrentDirectory.....................................................................................................259xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCurrentDirectory.....................................................................................................259
FileHandling...........................................................................................................259
WideStrings...........................................................................................................263
FreeingIntegerOutputs...........................................................................................264
RunningCreoModelCHECK ....................................................................................264
ThischapterdescribestheCreoParametric TOOLKITutilityfunctions.
257Configuration Options
Functions Introduced:
•ProConfigoptionGet()
•ProConfigoptSet()
•ProConfigoptArrayGet()
•ProDisplistInvalidate()
Thefunctions ProConfigoptionGet() andProConfigoptSet() enable
youtoretrieveandsetthecurrentvalueforthespecifiedconfiguration fileoption.
Thefunction ProConfigoptGet() hasbeendeprecated. UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctions ProConfigoptionGet() andProConfigoptSet() enable
youtoretrieveandsetthecurrentvalueforthespecifiedconfiguration fileoption.
Thefunction ProConfigoptGet() hasbeendeprecated. Usethefunction
ProConfigoptionGet() instead.Thefunction ProConfigoptionGet()
returnsthevalueofconfiguration optionasaProPath object.
TouseProConfigoptSet() onaconfiguration optionthataffectsthedisplay
ofCreoParametric, youmustcallthefunction ProDisplistInvalidate()
beforeyourepaintthescreen.ThisfunctionmakessureCreoParametric
invalidates thetwo-orthree-dimensional displaylist.Thecallingsequenceof
functionsisasfollows:
ProConfigoptSet (woption, value);
ProMdlCurrentGet (&model);
ProDisplistInvalidate (model)
ProWindowRepaint (-1);
Thefunction ProConfigoptSet(), whenappliedtoamultistring
configuration optionlike"search_path", addsanewpathentryintothesession.It
doesnotaffectexistingvalues.Whenappliedtoasingle-valued configuration
option, ProConfigoptSet() modifiesthevalueoftheconfiguration option.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdoesnotaffectexistingvalues.Whenappliedtoasingle-valued configuration
option, ProConfigoptSet() modifiesthevalueoftheconfiguration option.
Thefunction ProConfigoptArrayGet() retrievesthevalueofaspecified
configuration fileoption.Thefunctionreturnsanarrayofvaluesassignedtothe
configuration file.Itreturnsasinglevalueiftheconfiguration fileoptionisnota
multi-valued option.
RegistryFileData
Functions Introduced:
•ProToolkitApplExecPathGet()
•ProToolkitApplT extPathGet()
Thefunction ProToolkitApplExecPathGet() returnsthepathtotheCreo
Parametric TOOLKITexecutable file(exec_file) fromtheregistryfile.
Thefunction ProToolkitApplTextPathGet() returnsthepathtothe
directorycontaining the"text"directoryfortheapplication.
258 Creo®Parametric TOOLKIT User’sGuideTrailFiles
FunctionIntroduced:
•ProTrailfileCommentW rite()
Toappendacommenttotheendofthecurrenttrailfile,callthefunction
ProTrailfileCommentWrite(). ThecommentshouldnotbelongerthanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctionIntroduced:
•ProTrailfileCommentW rite()
Toappendacommenttotheendofthecurrenttrailfile,callthefunction
ProTrailfileCommentWrite(). Thecommentshouldnotbelongerthan
(PRO_COMMENT_SIZE -2)characters, andshouldnotcontainanynonprintable
characters, suchas“\n.”
CreoParametric LicenseData
FunctionIntroduced:
•ProOptionOrder edVerify()
Thefunction ProOptionOrderedVerify() reportswhetheraspecifiedCreo
Parametric licenseoption(suchasPro/MESH) iscurrentlyavailableintheCreo
Parametric session.
CurrentDirectory
Functions Introduced;
•ProDire ctoryCurr entGet()
•ProDire ctoryChange()
Thesetwofunctionsareconcerned withthecurrentdefaultdirectoryinCreo
Parametric—the oneinwhichitsearcheswhenyouretrieveanobject,for
example.TheCreoParametric userchangesthisdirectoryusingthecommandFile
▶▶ManageSession ▶▶WorkingDirectory.
Thefunction ProDirectoryChange() enablesyoutodotheexactequivalent
ofFile▶▶ManageSession ▶▶WorkingDirectoryinCreoParametric. Usethisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx▶▶ManageSession ▶▶WorkingDirectory.
Thefunction ProDirectoryChange() enablesyoutodotheexactequivalent
ofFile▶▶ManageSession ▶▶WorkingDirectoryinCreoParametric. Usethis
functionifyouneedtosaveandretrieveobjectsinadirectoryotherthantheone
theuserchose.
Thefunction ProDirectoryCurrentGet() returnsthewholepathtothe
directory,asawidestring.
FileHandling
Functions Introduced:
•ProFilesList()
•ProFileMdlnameOpen()
•ProFileMdlfiletypeOpen()
Core:Utilities 259•ProFileOpenRegister()
•ProFileMdlnameSave()
•ProFileMdlfiletypeSave()
•ProFileSaveRegister()
•ProDire ctoryChoose()
•ProFileMdlnameParse()
•ProPathMdlnameCre ate()
•ProInfoW indowDisplay()
•ProFileEdit()
•ProTextur ePathGet()
Thefunction ProFilesList() providesalistofthecontentsofadirectory,
giventhedirectorypath.Youcanfilterthelisttoincludeonlyfilesofaparticular
type,asspecifiedbythefileextension. UsethePRO_FILE_LIST_ALL optionto
includeallversionsofafileinthelist;usePRO_FILE_LIST_LATEST toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtype,asspecifiedbythefileextension. UsethePRO_FILE_LIST_ALL optionto
includeallversionsofafileinthelist;usePRO_FILE_LIST_LATEST to
includeonlythelatestversion.Inadditiontoanarrayoffilenames,thefunction
returnsanarrayofsubdirectory names,regardless ofthefilterused.
StartingwithPro/ENGINEER Wildfire5.0,thefunction ProFilesList()can
alsolistinstanceobjectswhenaccessingWindchillworkspaces orfolders.APDM
location(forworkspace orcommonspace) mustbepassedasthedirectorypath.
ThefollowingoptionshavebeenaddedintheProFileListOpt enumerated
typethatcanbepassedasthelisting_option argumentto
ProFilesList():
•PRO_FILE_LIST_ALL_INST—Same astheLIST_ALL option.Itreturns
instancesonlyforPDMlocations.
•PRO_FILE_LIST_LATEST_INST—Same astheLIST_LATESToption.It
returnsinstancesonlyforPDMlocations.
•PRO_FILE_LIST_ALL_SORTED_INST—Same astheLIST_ALL_
SORTEDoption.ItreturnsinstancesonlyforPDMlocations.
•PRO_FILE_LIST_LATEST_SORTED_INST—Same astheLIST_
LATEST_SORTED option.ItreturnsinstancesonlyforPDMlocations.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSORTEDoption.ItreturnsinstancesonlyforPDMlocations.
•PRO_FILE_LIST_LATEST_SORTED_INST—Same astheLIST_
LATEST_SORTED option.ItreturnsinstancesonlyforPDMlocations.
•PRO_FILE_LIST_LATEST_SORTED_INST—Same astheLIST_
LATEST_SORTED option.ItreturnsinstancesonlyforPDMlocations.
Thefunction ProFileMdlnameOpen() opensthedialogboxtobrowse
directories andopenfiles.Thefunctionletsyouspecifythetitleofthedialogbox,
asetofshortcutstootherdirectories, andthenameofafiletobepreselected. This
functionusesthesamefilteringmethodasProFilesList(). Youcanseta
filterinthedialogboxtoincludefilesofaparticulartype.Intheinputargument
filter_string specifyalltypesoffilesextensions withwildcardsseparatedby
commas,forexample, *.prt, *.asm, *.txt, *.avi,andsoon.
260 Creo®Parametric TOOLKIT User’sGuideYoucanalsousethefunction ProFileMdlfiletypeOpen() tobrowse
directories andopenfiles.Youcansetafilterinthedialogboxtoincludefilesofa
particulartype.Intheinputargument file_types, youcanspecifyanarrayofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdirectories andopenfiles.Youcansetafilterinthedialogboxtoincludefilesofa
particulartype.Intheinputargument file_types, youcanspecifyanarrayof
filetypesusingtheenumerated datatypeProMdlfileType.
Note
Thefunctions ProFileMdlnameOpen() and
ProFileMdlfiletypeOpen() donotactuallyopenthefile,butreturn
thefilepathoftheselectedfile.Forexample,toopenatextfile,usethe
function ProFileEdit() orProInfoWindowDisplay().
Thefunction ProFileOpenRegister() registersanewfiletypeintheFile▶▶
OpendialogboxinCreoParametric. Thisfunctiontakestheaccessfunction
ProFileOpenAccessFunction() andtheactionfunction
ProFileOpenOperationAction() asitsinputarguments.
Thefunction ProFileOpenAccessFunction() iscalledtodetermine
whetherthenewfiletypecanbeopenedusingtheFile▶▶Opendialogbox.The
function ProFileOpenOperationAction() iscalledonclickingOpenfor
thenewlyregistered filetype.
Thefunction ProFileMdlnameSave() opensthesavedialogbox.This
functionhasinputargumentssimilartoProFileMdlnameOpen().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthenewlyregistered filetype.
Thefunction ProFileMdlnameSave() opensthesavedialogbox.This
functionhasinputargumentssimilartoProFileMdlnameOpen().
Youcanalsousethefunction ProFileMdlfiletypeSave() toopenthe
savedialogbox.Youcansetafilterinthedialogboxtoincludefilesofa
particulartype.Intheinputargument file_types, youcanspecifyanarrayof
filetypesusingtheenumerated datatypeProMdlfileType.
Note
•Thefunctions ProFileMdlnameSave() and
ProFileMdlfiletypeSave() donotactuallysavethefile,butreturnthe
filepathoftheselectedfile.
•Formulti-CAD models,inalinkedsessionofCreoParametric withWindchill,
thefunctions ProFileMdlnameSave() and
ProFileMdlfiletypeSave() donotsupportafilepathlocationonlocal
disk.
Thefunction ProFileSaveRegister() registersanewfiletypeintheFile▶▶
SaveaCopydialogboxinCreoParametric. Thisfunctiontakestheaccess
function ProFileSaveAccessFunction() andtheactionfunction
ProFileSaveOperationAction() asitsinputarguments.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSaveaCopydialogboxinCreoParametric. Thisfunctiontakestheaccess
function ProFileSaveAccessFunction() andtheactionfunction
ProFileSaveOperationAction() asitsinputarguments.
Core:Utilities 261Thefunction ProFileSaveAccessFunction() iscalledtodetermine
whetherthenewfiletypecanbesavedusingtheFile▶▶SaveaCopydialogbox.
Thefunction ProFileSaveOperationAction() iscalledonclicking OK
forthenewlyregistered filetype.
Thefunction ProDirectoryChoose() promptstheusertoselectadirectory
usingtheCreoParametric dialogboxforbrowsingdirectories. Specifythetitleof
thedialogbox,asetofshortcutstootherdirectories, andthedefaultdirectorypath
tostartbrowsing. Ifthedefaultpathisspecifiedasnull,thecurrentdirectoryis
used.Thefunctionreturnstheselecteddirectorypathasoutput.
Ingeneral,thefileutilityfunctionsrefertofilesusingasinglewidecharacter
string,whichcontainsfour,distinctpiecesofinformation thatuniquelyidentify
thefile:thedirectorypath,filename,extension, andversion.Thefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstring,whichcontainsfour,distinctpiecesofinformation thatuniquelyidentify
thefile:thedirectorypath,filename,extension, andversion.Thefunction
ProFileMdlnameParse() takessuchastringasinput,andreturnsthefour
segmentsasseparatearguments.
Note
Thefunction ProFileMdlnameParse() returnsthefileversionas-1,if
theinputargument file_name_w_path hasthepathspecifiedasthepathtoa
Windchillmodel.Thisfunctiondoesnotsupportfetchingofmodelversionof
aWindchillmodel.
Thefunction ProPathMdlnameCreate() performstheoppositeoperation—
itbuildsthesinglewidestringthatidentifiesthefile,giventhepath,filename,
extension, andversion.
Thefunction ProInfoWindowDisplay() createsatextinformation window.
Itreadsthecontentsfromatextfileinthecurrentdirectorywhosenameisan
inputtothefunction.Thefunctioncanalsooverridethedefaultsize,shape,and
locationofthewindow.(Thesedonotaffecttheproperties oftheCreoParametric
Information Window.)
Thefunction ProFileEdit() opensaneditwindowonaspecifiedtextfile.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocationofthewindow.(Thesedonotaffecttheproperties oftheCreoParametric
Information Window.)
Thefunction ProFileEdit() opensaneditwindowonaspecifiedtextfile.
TheeditorusedisthecurrentdefaulteditorforCreoParametric.
Thefunction ProTexturePathGet() looksforthefullpathtothespecified
texture,decal,orbumpmapfilesandloadsthemfromthetexturepath.
Note
Fortexturesembedded insideaCreoParametric model,ifthecreate_
temp_file issettotruetheProTexturePathGet() functionwritesa
temporary copyofthespecifiedfiles.
262 Creo®Parametric TOOLKIT User’sGuideWideStrings
Functions Introduced:
•ProStringT oWstring()
•ProWstringT oString()
•ProWcharSizeV erify()
ThesethreeutilitiesaredescribedinthesectionWideStringsonpage65inthe
Fundamentals onpage22chapter.
FreeingStringOutputs
ManyCreoParametric TOOLKITfunctionsprovideoutputsofnon-fixedlength
stringsorwidestrings.Theseoutputsmustbefreedusingaspecialsetof
functions, becausetheyhavebeenallocatedbyaspecialfunctioninternally.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstringsorwidestrings.Theseoutputsmustbefreedusingaspecialsetof
functions, becausetheyhavebeenallocatedbyaspecialfunctioninternally.
Note
Thesefunctionsmustbeonlyusedforstringsandstringarraysoutputfrom
CreoParametric TOOLKITfunctions. Checkthefunctiondescription to
determine thefunctiontousewhenfreeingtheoutput.
Functions Introduced:
•ProStringFr ee()
•ProWstringFre e()
•ProStringarrayFre e()
•ProWstringarrayFr ee()
•ProStringpro arrayFre e()
•ProWstringpr oarrayFr ee()
Usethefunctions ProStringFree() andProWstringFree() tofreea
single char*orwchar_t* outputfromaCreoParametric TOOLKITfunction.
Usethefunctions ProStringarrayFree() and
ProWstringarrayFree() tofreeastandardarrayofchar*orwchar_t*
outputfromaCreoParametric TOOLKITfunction.
Usethefunctions ProStringproarrayFree() and
ProWstringproarrayFree() tofreeaProArray ofchar*orwchar_
t*outputfromaCreoParametric TOOLKITfunction.
Core:Utilities 263FreeingIntegerOutputs
Functions Introduced:
•ProIntarrayFre e()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProWstringproarrayFree() tofreeaProArray ofchar*orwchar_
t*outputfromaCreoParametric TOOLKITfunction.
Core:Utilities 263FreeingIntegerOutputs
Functions Introduced:
•ProIntarrayFre e()
Usethefunction ProIntarrayFree() tofreeaplainintegerarray,whichhas
beenreturnedfromaCreoParametric TOOLKITfunction.
RunningCreoModelCHECK
CreoModelCHECK isanintegrated application thatrunstransparently within
CreoParametric. CreoModelCHECK usesaconfigurable listofcompanydesign
standardsandbestmodelingpractices.YoucanconfigureCreoModelCHECK to
runinteractively orautomatically whenyouregenerate orsaveamodel.
Functions Introduced:
•ProModelcheckExecute()
YoucanexecuteCreoModelCHECK fromanexternalapplication usingthe
function ProModelcheckExecute(). Theinputparameters ofthisfunction
are:
•mdl—Specifies themodelonwhichyouwanttoexecuteCreoModelCHECK.
•show_ui—Specifies TruetodisplaytheCreoModelCHECK reportinthe
Webbrowser.
Note
Theconfiguration option SHOW_REPORT intheconfig_init.mc filexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•show_ui—Specifies TruetodisplaytheCreoModelCHECK reportinthe
Webbrowser.
Note
Theconfiguration option SHOW_REPORT intheconfig_init.mc file
overridestheshow_ui value.
•mcMode—Specifies themodeinwhichyouwanttorunCreoModelCHECK.
Themodesare:
○PRO_MODELCHECK_GRAPHICS—Interactive mode
○PRO_MODELCHECK_NO_GRAPHICS—Batch mode
•config_dir—Specifies thelocationoftheconfiguration files.Ifthis
parameter issettoNULL,thedefaultCreoModelCHECK configuration files
areused.
•output_dir—Specifies alocationforthereports.Ifthisparameter issetto
NULL,thedefaultCreoModelCHECK outputdirectoryisused.
Theoutputparameters ofthisfunctionare:
•errors—Specifies thenumberoferrorsfound.
264 Creo®Parametric TOOLKIT User’sGuide•warnings—Specifies thenumberofwarningsfound.
•model_saved—T rueifthemodelissavedwithupdates,elsefalse.
CreatingCustomChecks
ThissectiondescribeshowtodefinecustomchecksinCreoModelCHECK that
userscanrunusingthestandardCreoModelCHECK interfaceinCreoParametric.
Todefineandregisteracustomcheck:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatingCustomChecks
ThissectiondescribeshowtodefinecustomchecksinCreoModelCHECK that
userscanrunusingthestandardCreoModelCHECK interfaceinCreoParametric.
Todefineandregisteracustomcheck:
1.SettheCUSTMTK_CHECKS_FILE configuration optioninthestart
configuration filetoatextfilethatstoresthecheckdefinition. Forexample:
CUSTMTK_CHECKS_FILE text/custmtk_checks.txt.
2.SetthecontentsoftheCUSTMTK_CHECKS_FILE filetodefinethechecks.
Eachcheckshouldlistthefollowingitems:
•DEF_<checkname>—Specifies thenameofthecheck.Theformatmust
beCHKTK_<checkname>_<mode>, wheremodeisPRT,ASM,or
DRW.
•TAB_<checkname>—Specifies thetab(category) intheCreo
ModelCHECK reportunderwhichthecheckisclassified. Validtabvalues
are:
○INFO
○PARAMETER
○LAYER
○FEATURE
○RELATION
○DATUM
○MISC
○VDA
○VIEWS
•MSG_<checkname>—Specifies thedescription ofthecheckthatappears
inthelowerpartoftheCreoModelCHECK reportwhenyouselectthe
name.
•DSC_<checkname>—Specifies thenameofthecheckasitappearsin
theCreoModelCHECK reporttable.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthelowerpartoftheCreoModelCHECK reportwhenyouselectthe
name.
•DSC_<checkname>—Specifies thenameofthecheckasitappearsin
theCreoModelCHECK reporttable.
•ERM_<checkname>—If settoINFO,thecheckisconsidered anINFO
checkandthereporttablewilldisplaythetextfromthefirstitemreturned
bythecheck,insteadofacountoftheitems.Otherwise, thisvaluemustbe
included,butisignoredbyCreoParametric.
Core:Utilities 265SeeExample1:TextFileforCustomChecksonpage269forasamplecustom
checkstextfile.
1.AddthecheckanditsvaluestotheCreoModelCHECK configuration file.For
anexampleofhowthisisdone,seethesamplecodeattheendofthissection.
2.RegistertheCreoModelCHECK checkfromtheCreoParametric TOOLKIT
application.
Note
Otherthantherequirements listedabove,CreoParametric TOOLKIT
customchecksdonothaveaccesstotherestofthevaluesintheCreo
ModelCHECK configuration files.Allthecustomsettingsspecifictothe
checksuchasstartparameters, constants, andsoon,mustbesupported by
theuserapplication andnotCreoModelCHECK. InthecustomchecksxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxModelCHECK configuration files.Allthecustomsettingsspecifictothe
checksuchasstartparameters, constants, andsoon,mustbesupported by
theuserapplication andnotCreoModelCHECK. Inthecustomchecks
textfile,separateoptionsandvaluesforoptionswithaspace,notbyatab
character.
Functions Introduced
•ProModelcheckCheckRegister()
•ProModelcheckCheckFunction()
•ProModelcheckUpdateFunction()
•ProModelcheckCleanupFunction()
Thefunction ProModelcheckCheckRegister() registersthecallback
functionsforeachcustomcheck.Thefollowingargumentsareavailable:
•Thecustomcheckname.Thisnamemustmatchthenamegiventothecheck
intheCreoModelCHECK configuration file,andmustbeginwith"CHKTK_
".
•Thechecklabel.Currentlyunused;thelabelistakenfromthecheck
configuration file.
•Thecheckoptions.Currenltyunused,specifythevalueasNULL.
•Thecheckcallbackfunctions, describedindetailsbelow.
•Labelsfortheactionandupdatebuttons,orspecifyNULLifthesebuttons
shouldnotbeshown.
•Application datatopasstothecallbackfunctions.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Thecheckcallbackfunctions, describedindetailsbelow.
•Labelsfortheactionandupdatebuttons,orspecifyNULLifthesebuttons
shouldnotbeshown.
•Application datatopasstothecallbackfunctions.
Thecheckcallbackfunctionsareasfollows:
•Thecheckfunction(required)—This function,whosesignaturematches
ProModelcheckCheckFunction(), shouldcalculatetheresultsofthe
266 Creo®Parametric TOOLKIT User’sGuidecheckandprovidethemtoCreoModelCHECK throughthefunctionoutput
arguments.
•Theactionandupdatefunctions(optional)—These functionsarecalledwhen
userschoosetheactionorupdatebuttonwhenviewingtheCreo
ModelCHECK report.Thesehavethesignatureofthe
ProModelcheckUpdateFunction() function.
•Thecleanupfunction(optional)—Gives yourapplication achancetofree
memoryallocatedbythecheckfunction.Thishasthesignatureofthe
ProModelcheckCleanupFunction() function.
Eachcallbackfunctionreceivesthefollowinginputs:
•Thenameofthecustomcheck,asdefinedintheoriginalcallto
ProModelcheckCheckRegister().
•Themodelbeingchecked.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProModelcheckCleanupFunction() function.
Eachcallbackfunctionreceivesthefollowinginputs:
•Thenameofthecustomcheck,asdefinedintheoriginalcallto
ProModelcheckCheckRegister().
•Themodelbeingchecked.
•Apointertotheapplication data,setduringthecallto
ProModelcheckCheckRegister().
Thefunctionwhoseprototypematches ProModelcheckCheckFunction()
isusedtoevaluatethecustomdefinedchecks.Theuserapplication runsthecheck
onthespecifiedmodelandpopulatesthefollowingoutputarguments:
•results_count—Specifies anintegerindicating thenumberoferrorsfoundby
thecheck.
•results_url—Specifies thelinktoanapplication-owned pagethatcontains
information specifictothecheck.
•results_table—Specifies anarrayofdataforeacherrorencountered thatwill
beshownalongwiththeresults.
Thefollowingfigureillustrateshowtheresultsofsomecustomchecksmightbe
displayedintheCreoModelCHECK report.
Core:Utilities 267Thefunctionwhoseprototypematches
ProModelcheckCleanupFunction() isusedtoreleasememoryallocated
forthecheckcallbackfunction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplayedintheCreoModelCHECK report.
Core:Utilities 267Thefunctionwhoseprototypematches
ProModelcheckCleanupFunction() isusedtoreleasememoryallocated
forthecheckcallbackfunction.
Thefunctionswhoseprototypes matches
ProModelcheckUpdateFunction() areusedforthefollowing:
•Toexecuteacheck-defined actiononagivenitem.
•Toautomatically updateagivenitemtofixerrors,ifany.
Theselecteditem’sdescription stringispassedasanargumenttotheupdate
function.
CreoModelCHECK checksmayhaveone"action"functiontohighlightthe
problem,andpossiblyanupdatefunction,tofixitautomatically .Thefollowing
figuredisplaystheCreoModelCHECK reportwithanactionbuttonthatinvokes
theactioncallbackfunction.
268 Creo®Parametric TOOLKIT User’sGuideExample1:TextFileforCustomChecks
Thefollowingisthetextfileforthecustomcheckexamples.
UGCustomCheck: MDL PARAM NOT FOUND
Parameter %0w isnot found inthe model %1w
#
#
UGCustomCheck: MDL PARAM OK
Parameter %0w isset correctly inthe model %1w
#
#
UGCustomCheck: MDL PARAM INV TYPExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUGCustomCheck: MDL PARAM NOT FOUND
Parameter %0w isnot found inthe model %1w
#
#
UGCustomCheck: MDL PARAM OK
Parameter %0w isset correctly inthe model %1w
#
#
UGCustomCheck: MDL PARAM INV TYPE
Parameter %0w in%1w isnot aString parameter
#
#
Parameter %0w value does not match model name %1w
Core:Utilities 269UGCustomCheck: MDL PARAM INCORRECT
#
#
UGCustomCheck: MDL PARAM NAME
Parameter %0w value matches model name
#
#
UGCustomCheckUpdate: MDL PARAM NAME
Fix Parameter
#
#
%CIUG CustomCheck: MDL PARAM UPDATED
Mdl name parameter %0w has been updated.
#
#
%CEUG CustomCheck: MDL PARAM UPDATE TYPE
Cannot modify the type ofparameter %0w; this error should be
fixed
manually.
#
#
UGCustomCheck: MDL ACC TYPE
Model accuracy
#
#
UGCustomCheck: MDL ACC ABS
Absolute Accuracy
#
#
UGCustomCheck: MDL ACC REL
Relative Accuracy
#
#
UGCustomCheck: DWGVIEW GENERIC
Drawing Views using Generics
#
#
UGCustomCheckAction: DWGVIEW GENERIC
Highlight
#
#
Example2:Registering CustomCreoModelCheck ChecksxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRelative Accuracy
#
#
UGCustomCheck: DWGVIEW GENERIC
Drawing Views using Generics
#
#
UGCustomCheckAction: DWGVIEW GENERIC
Highlight
#
#
Example2:Registering CustomCreoModelCheck Checks
ThesamplecodeinUgModelCheck.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_main showshowto
registercustomCreoModelCHECK checksusingCreoParametric TOOLKIT.
Thefollowingcustomchecksareregistered:
270 Creo®Parametric TOOLKIT User’sGuide•CHKTK_MDL_NAME_PARAM—Determines ifthemodelhasaparameter
whosevalueisequaltothemodelname
•CHKTK_MDL_REFC_SCOPE—Info checkthatprintsthemodelreference
controlsettings
•CHKTK_DWVIEW_GENERIC—Drawing modecheckthatlooksforviewsthat
usegenericmodels
Example3:Implementing aModelNameParameterCheck
ThesamplecodeinUgModelCheck.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_main showsthe
implementation forthemodelnameparameter check.Thischeckhasacheck
functioncallbackandanupdatefunctioncallback.Alsoincludedisthecleanupxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloadpoint>/protk_appls/pt_userguide/ptu_main showsthe
implementation forthemodelnameparameter check.Thischeckhasacheck
functioncallbackandanupdatefunctioncallback.Alsoincludedisthecleanup
callbackusedforallofthecustomchecks.
Example4:Implementing aReferenceControlInfoCheck
ThesamplecodeUgModelCheck.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_main showsthe
implementation foraninfocheckthatwillreportonthereferencecontrolsetting
appliedtothemodel.Thischeckhasacheckfunctioncallbackbutnoactionor
updatefunction(becauseitisaninfo-onlycheck).
Example5:Implementing aCheckLookingforDrawing
ViewsUsingGenerics
ThesamplecodeinUgModelCheck.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_main showsthe
implementation forthedrawingviewusinggenericscheck.Thischeckhasa
checkfunctioncallbackandanactionfunctionusedtohighlighttheviewsthat
havethiserror.
Example6:ChangestotheCreoModelCheck Configuration
FilestoenableCustomChecksxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcheckfunctioncallbackandanactionfunctionusedtohighlighttheviewsthat
havethiserror.
Example6:ChangestotheCreoModelCheck Configuration
FilestoenableCustomChecks
ThefollowingshowthechangesmadetotheCreoModelCHECK configuration
filestoenablethecustomchecks.
Lines from the custom TKchecks file (custmtk_checks.txt)
#Custom TKCheck File
#
#UG_MDLPARAM_NAME
DEF_UG_MDLPARAM_NAME CHKTK_UG_MDLPARAM_NAME_PRT
TAB_UG_MDLPARAM_NAME PARAMETER
MSG_UG_MDLPARAM_NAME Pro/TOOLKIT: Models with missing orinvalid
model
name parameters:
Core:Utilities 271ERM_UG_MDLPARAM_NAME N/A
DSC_UG_MDLPARAM_NAME Pro/TOOLKIT: Model Name Parameter
#UG_MDL_REFC_SCOPE
DEF_UG_MDL_REFC_SCOPE
CHKTK_UG_MDL_REFC_SCOPE_PRT
TAB_UG_MDL_REFC_SCOPE INFO
MSG_UG_MDL_REFC_SCOPE Pro/TOOLKIT: Model reference control
scope:
ERM_UG_MDL_REFC_SCOPE INFO
DSC_UG_MDL_REFC_SCOPE Pro/TOOLKIT: Model reference control
scope:
#UG_DWGVIEW_GENERIC
DEF_UG_DWGVIEW_GENERIC CHKTK_UG_DWGVIEW_GENERIC_DRW
TAB_UG_DWGVIEW_GENERIC VIEWSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxscope:
ERM_UG_MDL_REFC_SCOPE INFO
DSC_UG_MDL_REFC_SCOPE Pro/TOOLKIT: Model reference control
scope:
#UG_DWGVIEW_GENERIC
DEF_UG_DWGVIEW_GENERIC CHKTK_UG_DWGVIEW_GENERIC_DRW
TAB_UG_DWGVIEW_GENERIC VIEWS
MSG_UG_DWGVIEW_GENERIC Pro/TOOLKIT: Drawing views containing
generic
models:
ERM_UG_DWGVIEW_GENERIC N/A
DSC_UG_DWGVIEW_GENERIC Pro/TOOLKIT: Drawing Views using Generics
Lines added tothe ModelCheck configuration file (default_
checks.mch)
CHKTK_UG_MDLPARAM_NAME_PRT YNEW EEEEY
CHKTK_UG_MDL_REFC_SCOPE_PRT YNEW YYYYY
CHKTK_UG_DWGVIEW_GENERIC_DRW YNEW EEEEY
Lines added tothe ModelCheck start file (nostart.mcs)
CUSTMTK_CHECKS_FILE text/custmtk_checks.txt
272 Creo®Parametric TOOLKIT User’sGuide14
Core:Asynchronous Mode
Overview................................................................................................................274
SimpleAsynchronous Mode.....................................................................................275xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSimpleAsynchronous Mode.....................................................................................275
FullAsynchronous Mode..........................................................................................278
ThischapterexplainsusingCreoParametric TOOLKITinAsynchronous Mode.
273Overview
Asynchronous modeisamultiprocess modeinwhichtheCreoParametric
TOOLKITapplication andCreoParametric canperformconcurrent operations.
Unlikesynchronous mode,theasynchronous modeusesremoteprocedure calls
(rpc)asthemeansofcommunication betweentheapplication andCreo
Parametric.
Anotherimportantdifferencebetweensynchronous andasynchronous modesisin
thestartupoftheCreoParametric TOOLKITapplication. Insynchronous mode,
theapplication isstartedbyCreoParametric, basedoninformation containedin
theregistryfile.Inasynchronous mode,theapplication isstartedindependently of
CreoParametric andsubsequently eitherstartsorconnectstoaCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheregistryfile.Inasynchronous mode,theapplication isstartedindependently of
CreoParametric andsubsequently eitherstartsorconnectstoaCreoParametric
process.Theapplication cancontainitsownmain()orwmain() function.Use
wmain() iftheapplication needstoreceivecommand-line argumentsas
wchar_t, forexampleiftheinputcontainsnon-usascii characters. Notethatan
asynchronous application willnotappearintheAuxiliaryApplications dialog
box.
ThesectionHowCreoParametric TOOLKITWorksonpage35inFundamentals
onpage22chapterdescribestwomodes—DLL andmultiprocess (or“spawned”).
Thesemodesaresynchronous modesinthesensethattheCreoParametric
TOOLKITapplication andCreoParametric donotperformoperations
concurrently .Inspawnmode,eachprocesscansendamessagetotheothertoask
forsomeoperation, buteachwaitsforareturningmessagethatreportsthatthe
operationiscomplete.Controlalternatesbetweenthetwoprocesses, oneofwhich
isalwaysinawaitstate.
Asynchronous modeapplications operatewiththesamemethodofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoperationiscomplete.Controlalternatesbetweenthetwoprocesses, oneofwhich
isalwaysinawaitstate.
Asynchronous modeapplications operatewiththesamemethodof
communication asspawnmode(multiprocess). Theuseofrpcinspawnmode
causesthismodetoperformsignificantly slowerthanDLLcommunications. For
thisreason,youshouldbecarefulnottoapplyasynchronous modewhenitisnot
needed.Notethatasynchronous modeisnottheonlymodeinwhichyour
application canhaveexplicitcontroloverCreoParametric. YoucanalsorunCreo
Parametric inbatchmodeusingCreoParametric TOOLKITapplications; formore
information onbatchmodeoperation, refertothesectionUsingCreoParametric
TOOLKITtoMakeaBatchCreoParametric Sessiononpage52.
SettingupanAsynchronous CreoParametric
TOOLKITApplication
Foryourasynchronous application tocommunicate withCreoParametric, you
mustsettheenvironment variable PRO_COMM_MSG_EXE tothefullpathofthe
executable pro_comm_msg.exe ,thatis,<creo_loadpoint>\
<datecode>\Common Files\<machine>\obj\pro_comm_msg.exexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmustsettheenvironment variable PRO_COMM_MSG_EXE tothefullpathofthe
executable pro_comm_msg.exe ,thatis,<creo_loadpoint>\
<datecode>\Common Files\<machine>\obj\pro_comm_msg.exe
SetPRO_COMM_MSG_EXE intheEnvironment VariablessectionoftheSystem
window(whichcanbeaccessedfromtheControlPanel).
274 Creo®Parametric TOOLKIT User’sGuideDepending onhowyourasynchronous application handlesmessagesfromCreo
Parametric, yourapplication canbeclassifiedaseither“simple”or“full”.The
followingsectionsdescribesimpleandfullasynchronous mode.
Theenvironment variable RPC_TIMEOUT setsthemaximum timelimitinwhich
theremoteprocedure callsmustbeexecuted.Thevariablesetsthetimein
seconds.Thedefaultvalueissetto2000seconds.Thefunctionsreturntheerror
PRO_TK_COMM_ERROR, whentheapplication timesoutwithoutcomplete
execution. Ifyourapplication requiresmoretimeforexecution, youmustsetthis
variabletoahighervalue.
Note
Forasynchronous modeapplications, youarenotrequiredtosupply user_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexecution. Ifyourapplication requiresmoretimeforexecution, youmustsetthis
variabletoahighervalue.
Note
Forasynchronous modeapplications, youarenotrequiredtosupply user_
initialize() anduser_terminate(), CreoParametric TOOLKIT
willsupplyadefaultimplementation forthesefunctions. Ifyoudowishto
includeacustomversionofeitherfunction,boththefunctions user_
initialize() anduser_terminate() mustbesuppliedinthe
application. Acustom user_initialize() willmakeitpossibleto
accesstheuser_initialize() inputargumentsandtoreusecodefroma
synchronous application withoutmakingmodifications.
SimpleAsynchronous Mode
Asimpleasynchronous application doesnotimplement awaytohandlerequests
fromCreoParametric. Therefore, CreoParametric cannotcallfunctionsinthe
CreoParametric TOOLKITapplication. Consequently ,CreoParametric cannot
invokethecallbackfunctionsthatmustbesuppliedwhenyouadd,forexample,
menubuttonsornotifications toCreoParametric.
Despitethislimitation, CreoParametric runningwithgraphicsisstillanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinvokethecallbackfunctionsthatmustbesuppliedwhenyouadd,forexample,
menubuttonsornotifications toCreoParametric.
Despitethislimitation, CreoParametric runningwithgraphicsisstillan
interactive processavailabletotheuser.
WhenyoudesignaCreoParametric TOOLKITapplication toruninsimple
asynchronous mode,keepthefollowinginmind:
•TheCreoParametric processandtheapplication performoperations
concurrently .
•Noneoftheapplication’ sfunctionsareinvokedbyCreoParametric.
•Simpleasynchronous modesupportsCreoParametric TOOLKITvisit
functions(ProSolidFeatVisit(), forexample), butdoesnotsupport
notification callbacks.
Core:Asynchronous Mode 275Theseconsiderations implythattheCreoParametric TOOLKITapplication does
notknowthestate(thecurrentmode,forexample)oftheCreoParametric process
atanymoment.
StartingandStoppingCreoParametric
Functions introduced:
•ProEngineerStart()
•ProEngineerConnectionStart()
•ProEngineerEnd()
Asimpleasynchronous application canspawnandconnecttoaCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxStartingandStoppingCreoParametric
Functions introduced:
•ProEngineerStart()
•ProEngineerConnectionStart()
•ProEngineerEnd()
Asimpleasynchronous application canspawnandconnecttoaCreoParametric
processviathefunction ProEngineerStart(). Duringthisstartup,Creo
Parametric callsuser_initialize() ifitispresentintheapplication. The
CreoParametric process“listens”forrequestsfromtheapplication andactsonthe
requestsatsuitablebreakpoints—normally betweencommands.
Thefunction ProEngineerConnectionStart() performsthesametaskas
ProEngineerStart(), exceptthatProEngineerConnectionStart()
outputsaProProcessHandle whichcanbeusedforlaterconnectanddisconnect
operations. UsingthisfunctionrequiresbuildingwithaC++compiler—seethe
description ofProEngineerConnect() formoreinformation.
ToconnecttoanexistingCreoParametric processfromanasynchronous
application, seethesectionConnecting toaCreoParametric Processonpage276.
Unlikeapplications runninginsynchronous mode,asynchronous applications arexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplication, seethesectionConnecting toaCreoParametric Processonpage276.
Unlikeapplications runninginsynchronous mode,asynchronous applications are
notterminated whenCreoParametric terminates. Thisfunctionality isusefulwhen
theapplication needstoperformCreoParametric operations onlyintermittently ,
andthereforestartandstopCreoParametric morethanonceduringasession.To
endaCreoParametric process,callthefunction ProEngineerEnd().
Connecting toaCreoParametric Process
Functions introduced:
•ProEngineerConnectIdGet()
•ProEngineerConnect()
•ProEngineerDisconnect()
•ProEngineerConnectIdExtract()
Thefunction ProEngineerConnectIdGet() returnstheasynchronous
connection idoftheCreoParametric sessionthattheapplication isrunningwith.
Thisfunctioncanbecalledfromanysynchronous (DLLorspawnmode)or
276 Creo®Parametric TOOLKIT User’sGuideasynchronous application. Itallowstheapplication tosendtheconnection idto
anyotherasynchronous application thatneedstoconnecttothisspecificCreo
Parametric session.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanyotherasynchronous application thatneedstoconnecttothisspecificCreo
Parametric session.
Asimpleasynchronous application canalsoconnecttoaCreoParametric process
thatisalreadyrunningonthatmachine.Thefunction
ProEngineerConnect() performsthisfunction.Itallowsyoutospecifythe
nameoftheuserwhoownstheCreoParametric processtowhichyouwantto
connect,andthenameofthemachineusedforthedisplay.IfmultipleCreo
Parametric sessionsmeetthisspecification, ProEngineerConnect() can
optionally chooseoneprocessatrandomorreturnanerrorstatus.
Todisconnect fromaCreoParametric process,call
ProEngineerDisconnect().
Theconnection toaCreoParametric processusesinformation thatisprovidedby
thenameservicedaemon.Thenameservicedaemonacceptsandsupplies
information abouttheprocessesrunningonthespecifiedhosts.Theapplication
manager,forexample,usesnameservicewhenitstartsupCreoParametric and
otherprocesses. ThenameservicedaemonissetupaspartoftheCreoParametric
installation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmanager,forexample,usesnameservicewhenitstartsupCreoParametric and
otherprocesses. ThenameservicedaemonissetupaspartoftheCreoParametric
installation.
Thefunction ProEngineerConnectIdExtract() returnsastring
connection identifierfortheCreoParametric process.Thisidentifiercanbeused
latertoconnecttothesameprocessusingacalltoProEngineerConnect().
Passtheconnection idasthefirstargumenttotheconnection function.
Tousethefunctionsinthissection,andalsothefunction
ProEngineerConnectionStart(), youmustlinkyourapplication withthe
library pt_asynchronous.lib, whichisinthefollowinglocation:
<creo_toolkit_loadpoint>/<Machine>/obj
BecausethisisaC++library,youmustuseaC++compilertobuildyour
application. Forsamplemakefilescontaining C++settings,seethemakefiles
underthedirectory <creo_toolkit_loadpoint>/<Machine>/obj
Note
Youdonothavetolinkwithpt_asynchronous.lib (oruseaC++compiler)if
youdonotusethefunctionsjustdescribedor
ProEngineerConnectionStart().
StatusofaCreoParametric Process
Functionintroduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Youdonothavetolinkwithpt_asynchronous.lib (oruseaC++compiler)if
youdonotusethefunctionsjustdescribedor
ProEngineerConnectionStart().
StatusofaCreoParametric Process
Functionintroduced:
•ProEngineerStatusGet()
Core:Asynchronous Mode 277Itmightbeusefulforyourapplication toknowwhetheraCreoParametric process
isrunning.Thefunction ProEngineerStatusGet() returnsthisinformation.
FullAsynchronous Mode
Functions introduced:
•ProEventPr ocess()
•ProAsynchro nousEventLoop()
•ProAsynchro nousEventLoopInterrupt()
•ProTermFuncSet()
•ProTerminationAction()
Fullasynchronous modeisidenticaltosimpleasynchronous modeexceptinthe
waytheCreoParametric TOOLKITapplication handlesrequestsfromCreo
Parametric. Insimpleasynchronous mode,itisnotpossibletoprocesssuch
requests.Infullasynchronous mode,theapplication mustimplement acontrol
loopthat“listens”formessagesthatarrivefromCreoParametric. Asaresult,
CreoParametric cancallfunctionsintheapplication, includingcallbackfunctions
formenubuttonsandnotifications.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloopthat“listens”formessagesthatarrivefromCreoParametric. Asaresult,
CreoParametric cancallfunctionsintheapplication, includingcallbackfunctions
formenubuttonsandnotifications.
Thecontrolloopofanapplication runninginfullasynchronous modemust
containacalltothefunction ProEventProcess(), whichtakesnoarguments.
ThisfunctionrespondstoCreoParametric messagesinamannersimilarto
synchronous mode.Forexample,iftheuserselectsamenubuttonthatisaddedby
yourapplication, ProEventProcess() processesthecalltoyourcallback
functionandreturnswhenthecallcompletes. (Formoreinformation oncallback
functionsandaddingmenubuttons,seetheUserInterface:Menus,Commands,
andPopupmenus onpage297chapter.)
Thefunction ProAsynchronousEventLoop() providesanalternative tothe
development ofaneventprocessing loopinafullasynchronous modeapplication.
Callthisfunctiontohavetheapplication waitinaloopforeventstobepassed
fromCreoParametric. Nootherprocessing willtakeplacewhiletheapplication is
waiting.TheloopwillcontinueuntilxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCallthisfunctiontohavetheapplication waitinaloopforeventstobepassed
fromCreoParametric. Nootherprocessing willtakeplacewhiletheapplication is
waiting.Theloopwillcontinueuntil
ProAsynchronousEventLoopInterrupt() iscalledfromaCreo
Parametric TOOLKITcallbackaction,oruntiltheapplication detectsthatCreo
Parametric hasterminated.
Itisoftennecessaryforyourfullasynchronous application tobenotifiedofthe
termination oftheCreoParametric process.Inparticular,yourcontrolloopneed
notcontinuetolistenforCreoParametric messagesifCreoParametric isno
longerrunning.Thefunction ProTermFuncSet() bindsatermination actionto
beexecutedwhenCreoParametric isterminated. Thetermination actionisa
functionthatyousupplyandidentifyintheinputofProTermFuncSet() bya
functionpointeroftypeProTerminationAction. Theinputtothe
termination actionisthetermination type,whichisoneofthefollowing:
278 Creo®Parametric TOOLKIT User’sGuide•PROTERM_EXIT—Normal exit(theuserpicksExitfromthemenu).
•PROTERM_ABNORMAL—Exit witherrorstatus.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtermination actionisthetermination type,whichisoneofthefollowing:
278 Creo®Parametric TOOLKIT User’sGuide•PROTERM_EXIT—Normal exit(theuserpicksExitfromthemenu).
•PROTERM_ABNORMAL—Exit witherrorstatus.
•PROTERM_SIGNAL—Fatal signalraised.
Yourapplication caninterpretthetermination typeandtakeappropriate action.
SettingUpaNon-Interactive Session
YoucanspawnaCreoParametric sessionthatisbothnoninteractive and
nongraphical. Inasynchronous mode,includethefollowingargumentsinthecall
toProEngineerStart():
•-g:no_graphics—T urnoffthegraphicsdisplay.
•-i:rpc_input—Cause CreoParametric toexpectinputfromyourasynchronous
application only.
Bothoftheseargumentsarerequired,buttheorderisnotimportant. Thesyntaxof
thecallforanoninteractive, nongraphical sessionisasfollows:
ProEngineerStart ("parametric -g:no_graphics -i:rpc_input", <text_
dir>);
Inthesyntax, parametric isthecommand tostartCreoParametric.
Core:Asynchronous Mode 27915
UserInterface:MessagesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProEngineerStart ("parametric -g:no_graphics -i:rpc_input", <text_
dir>);
Inthesyntax, parametric isthecommand tostartCreoParametric.
Core:Asynchronous Mode 27915
UserInterface:Messages
WritingaMessageUsingaPopupDialog..................................................................281
WritingaMessagetotheMessageWindow...............................................................281
MessageClassification ............................................................................................284
WritingaMessagetoanInternalBuffer.....................................................................285
GettingKeyboardInput............................................................................................285
UsingDefaultValues...............................................................................................286
Thischapterdescribesthefunctionsusedtocommunicate withtheuserthrough
thetextmessagearea,includingkeyboardentry.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThischapterdescribesthefunctionsusedtocommunicate withtheuserthrough
thetextmessagearea,includingkeyboardentry.
280 Creo®Parametric TOOLKIT User’sGuideWritingaMessageUsingaPopupDialog
Thefunction ProUIMessageDialogDisplay() displaystheUImessage
dialog.Theinputargumentstothefunctionare:
•Thetypeofmessagetobedisplayed.
•Thetexttodisplayasthetitleofthedialog.Ifyouwanttosupportdisplaying
localizedtext,usethemessagefilesandthefunction
ProMessageToBuffer() togeneratethisstring.Messagefilesare
describedlaterinthischapter.
•Themessagetexttobedisplayedinthedialog.Ifyouwanttosupport
displaying localizedtext,usethemessagefilesandfunction
ProMessageToBuffer() togeneratethisstring.Messagefilesare
describedlaterinthischapter.
•ProArrayofpossiblebuttonidentifiers forthedialog.
•Theidentifierofthedefaultbuttonforthedialog.
Thefunctionoutputsthebuttonthattheuserselected.
Example1:DisplayingtheUIMessageDialog
ThesamplecodeinUgUIMessageDisplay locatedat<creo_toolkit_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Theidentifierofthedefaultbuttonforthedialog.
Thefunctionoutputsthebuttonthattheuserselected.
Example1:DisplayingtheUIMessageDialog
ThesamplecodeinUgUIMessageDisplay locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_message showshow
todisplayahardcodedconfirmation message.
WritingaMessagetotheMessage
Window
Thissectiondescribesthefollowingtopics:
•Displaying andclearingmessages
•Thetextmessagefile
Functions Introduced:
•ProMessageDisplay()
•ProMessageClear()
•ProUIMessageDialogDisplay()
Thefunction ProMessageDisplay() issimilartotheCfunction printf(),
butwithsomeimportantdifferences:
•Thefirstargumentisthename(asawidestring)ofthemessagefile.The
namemustincludethefileextension, butnotthepath.SeethesectionText
MessageFileFormatandRestrictions onpage282.
UserInterface:Messages 281•Thesecondargument,insteadofbeingaformatstring,isakeywordusedto
lookuptheformatstringinthemessagefile.
•Thesubsequent argumentsforthevaluesinsertedintotheformatstringarexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserInterface:Messages 281•Thesecondargument,insteadofbeingaformatstring,isakeywordusedto
lookuptheformatstringinthemessagefile.
•Thesubsequent argumentsforthevaluesinsertedintotheformatstringare
pointers,notvalues.Thesevaluescanbedatainsertedintothemessageor
defaultvaluesforthedatatobereadfromuserinput.SeethesectionGetting
Keyboard Inputonpage285formoreinformation.
•Althoughthelistofarguments forthevaluesisvariableinnumber,thereisa
maximum of9.SeeContentsoftheMessageFileonpage283formore
information onusingtheseargumentswithamessageformat.
Thefunction ProMessageClear() scrollsthetextinthemessageareaupone
line.ThiscouldbeusedtoindicatethatCreoParametric hasreceivedtheuser’s
responsetoamessage.
TextMessageFileFormatandRestrictions
Thetextmessagefileenablesyoutoprovideyourowntranslation ofthetext
message,justasthemenufilesenableyoutoprovideyourowntranslation ofthe
buttonnameandtheone-linecommand help.
Restrictions ontheTextMessageFilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmessage,justasthemenufilesenableyoutoprovideyourowntranslation ofthe
buttonnameandtheone-linecommand help.
Restrictions ontheTextMessageFile
Youmustobservethefollowingrestrictions whenyounameyourmessagefile:
•Thenameofthefilemustbe30characters orless,includingtheextension.
•Thenameofthefilemustcontainlowercase characters only.
•Thefileextensionmustbethreecharacters.
•Theversionnumbermustbeintherange1to9999.
•Allmessagefilenamesmustbeunique,andallmessagekeystringsmustbe
uniqueacrossallapplications thatrunwithCreoParametric. Duplicate
messagefilenamesormessagekeystringscancauseCreoParametric to
exhibitunexpected behavior.ToavoidconflictswiththenamesofCreo
Parametric orCreoParametric TOOLKITapplication messagefilesor
messagekeystrings,PTCrecommends thatyouchooseaprefixuniqueto
yourapplication, andprependthatprefixtoeachmessagefilenameandeach
messagekeystringcorresponding tothatapplication.
CreoParametric looksforthemessagefileusingthefollowingsearchpath:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyourapplication, andprependthatprefixtoeachmessagefilenameandeach
messagekeystringcorresponding tothatapplication.
CreoParametric looksforthemessagefileusingthefollowingsearchpath:
•ThecurrentCreoParametric directory
•Thedirectorytextunderthedirectorynamedinthetext_dir statementin
theregistryfile(protk.dat).
282 Creo®Parametric TOOLKIT User’sGuideNotethatmessagefilesareloadedintoCreoParametric onlyonceduringa
session,duringthefirstcalltoProMessageDisplay(). Consequently ,ifyou
makeachangetothemessagefilewhileCreoParametric isrunning,youmust
exitandrestartCreoParametric tohavethechangestakeeffect.
ContentsoftheMessageFile
Themessagefileconsistsofgroupsoffourlines—one groupforeachmessage
youwanttowrite.Thefourlinesareasfollows:
1.Astringthatactsasthekeywordtoidentifythemessagewhenyoucall
ProMessageDisplay() ThiskeywordmustbeuniqueforallCreo
Parametric messages.
2.Astringthatwillbesubstituted forthefirststringwhenyoucall
ProMessageDisplay(). ThisstringactsliketheformatstringinaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMessageDisplay() ThiskeywordmustbeuniqueforallCreo
Parametric messages.
2.Astringthatwillbesubstituted forthefirststringwhenyoucall
ProMessageDisplay(). Thisstringactsliketheformatstringina
printf() statement. Bymodifying thislineinthemessagefile,youcan
modifythetextofthemessagewithoutmodifying yourCcode.
3.Thetranslation ofthemessageintoanotherlanguage(canbeblank).
4.Anintentionally blanklinereservedforfutureextensions.
Theformatstring(line2inthemessagefile)differsfromtheformatstringofa
printf() inthefollowingrespects:
•Theconversion specifications (%d,%s,andsoon)mustincludeanargument
numbercorresponding tothepositionofthatargumentinthesubsequent list
(startingat0).Forexample,insteadof%d,%s,youmusthave%0d,%1s, and
soon.Ifyouwanttospecifyafieldwidth,putitinparentheses betweenthe
positionnumberandthetypespecifier;forexample, %0(5.3)f.
•Theseparator|||betweenmessagetextandaconversion specification signifies
thattheconversion specification isforadefaultvalueforuserinput.Thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpositionnumberandthetypespecifier;forexample, %0(5.3)f.
•Theseparator|||betweenmessagetextandaconversion specification signifies
thattheconversion specification isforadefaultvalueforuserinput.This
defaultvaluewillappearinthetextboxcreatedusingthekeyboardinput
functions, suchasProMessageIntegerRead(). RefertoUsingDefault
Valuesonpage286formoreondefaultvalues.
•Theconversion character wisavailableforwidestrings.
•Youdonotneedthecharacterconstant(\n)attheendoftheformat.Creo
Parametric automatically insertsanewlinewhennecessary.
Note
Thelengthofanylineinthemessagefilemustnotexceed4096wide
characters.
UserInterface:Messages 283Thefollowingtableliststheconversion characters andtheircorresponding data
types.
Conversion Character DataType
f Float(ordouble)
d Decimalinteger
s Ordinarystring(ortypechar[])
w Widecharacterstrings
e Exponential
g Eitherfloatorexponential, asappropriate
EnsurethatthekeywordstringissimilartotheformatstringtomakeyourCcodexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxd Decimalinteger
s Ordinarystring(ortypechar[])
w Widecharacterstrings
e Exponential
g Eitherfloatorexponential, asappropriate
EnsurethatthekeywordstringissimilartotheformatstringtomakeyourCcode
easytointerpret.Addaprefixthatisuniquetoyourapplication tothekeyword
string.Theexamplesinthismanualusetheuniqueprefix“USER.”
MessageClassification
MessagesdisplayedinCreoParametric includeasymbolwhichidentifiesthe
messagetype.Eachmessagetypeisidentifiedbyaclassification whichbegins
withthecharacters %C.Amessageclassification requiresthatthemessagekey
(line1inthemessagefile)bepreceeded bytheclassification code.Notethatthe
messagekeystringusedinthecodeshouldNOTcontaintheclassification.
CreoParametric TOOLKITapplications cannowdisplayanyorallofthese
messagesymbols:
•Prompt—the CreoParametric messagedisplayedisprecededbyagreenarrow.
Theusermustrespondtothismessagetype(toeitherinputinformation,
acceptthedefaultvalueoffered,orcanceltheapplication). Withoutsuchxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Prompt—the CreoParametric messagedisplayedisprecededbyagreenarrow.
Theusermustrespondtothismessagetype(toeitherinputinformation,
acceptthedefaultvalueoffered,orcanceltheapplication). Withoutsuch
action,noprogresscanbemade.Theresponsemaybeeithertextualorinthe
formofaselection.Theclassification codeforpromptmessagesis%CP.
•Info—theCreoParametric messagedisplayedisprecededbyabluedot.This
messagetypecontainsinformation suchasuserrequestsorfeedbackfrom
eitherCreoParametric ortheCreoParametric TOOLKITapplication. The
classification codeforpromptmessagesis%CI.
Note
DonotclassifyasInfoanymessagewhichinformsusersofaproblem
withanoperationorprocess.Thesemessagesshouldbeclassifiedas
Warnings.
•Warning—the CreoParametric messagedisplayedisprecededbyatriangle
containing anexclamation point.Warningsalerttheusertosituationswhich
284 Creo®Parametric TOOLKIT User’sGuidemayleadtopotentially erroneous situationsatalaterstage,forexample,
possibleprocessrestrictions imposedorasuspecteddataproblem.However,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx284 Creo®Parametric TOOLKIT User’sGuidemayleadtopotentially erroneous situationsatalaterstage,forexample,
possibleprocessrestrictions imposedorasuspecteddataproblem.However,
warningsdonotpreventorinterrupttaskcompletion, norshouldtheybeused
toindicateafailedoperation. Warningsonlycautiontheuserthattheoperation
hasbeencompleted, butmaynothavebeenperformed inacompletely
desirableway.Theclassification codeforpromptmessagesis%CW.
•Error—the CreoParametric messageisprecededbyabrokensquare.This
messagetypeinformstheuserwhenarequiredtaskwasnotsuccessfully
completed. Itmayormaynotrequireintervention orcorrection beforework
cancontinue,depending ontheapplication. Whenever possible,provideapath
toredressthissituation.Theclassification codeforpromptmessagesis%CE.
•Critical—the CreoParametric messagedisplayedisprecededbyaredX.This
messagetypeinformstheuserofextremely serioussituations, especially those
whichcouldcausethelossofuserdata.Optionsforredressing thesituation(ifxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmessagetypeinformstheuserofextremely serioussituations, especially those
whichcouldcausethelossofuserdata.Optionsforredressing thesituation(if
available) shouldbeprovidedwiththemessage.Theclassification codefor
promptmessagesis%CC.
WritingaMessagetoanInternalBuffer
FunctionIntroduced:
•ProMessageT oBuffer()
•ProMessageWstringbufferAlloc()
Thefunctions ProMessageToBuffer() and
ProMessageWstringbufferAlloc() havethesamerelationship to
ProMessageDisplay() thattheClibraryfunction sprintf() hasto
printf(): itenablesyoutowriteamessagetoaninternal,wide-string buffer
insteadoftotheCreoParametric messagearea.Thesefunctionsperformexactly
thesameargumentsubstitution andtranslation asProMessageDisplay().
Youprovideawide-string bufferasthefirstargument,andthesubsequent
argumentsarethesameasthoseforProMessageDisplay().
Thefunction ProMessageToBuffer() allowsyoutowriteamessagewitha
maximum lengthof80characters toawide-string buffer.
ForamessageofanylengthusethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMessageToBuffer() allowsyoutowriteamessagewitha
maximum lengthof80characters toawide-string buffer.
Foramessageofanylengthusethefunction
ProMessageWstringbufferAlloc(). Youmustfreetheoutputstring
translated_msg usingthefunction ProWstringFree().
GettingKeyboardInput
Functions Introduced:
•ProMessageIntegerRead()
UserInterface:Messages 285•ProMessageDoubleRead()
•ProMessageStringRead()
•ProMessagePasswordRead()
Thesefourfunctionsobtainkeyboardinputfromatextboxatthebottomofthe
CreoParametric window.Thefunctionscheckthesyntaxoftheuser’sentryand
indicatewhentheentryissimplyacarriagereturn.Eachofthefunctionsenable
youtorestrictnumericinputtoaspecifiedrange,orstringinputtoaspecified
stringlength.Thefunctionscontinuetoprompttheuseruntilavalidresponseis
entered.
Thefunction ProMessageStringRead() supportsstringlengthsupto127
characters.
UsingDefaultValues
PriortoRelease20,Pro/TOOLK ITapplications implemented defaultvaluesbyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentered.
Thefunction ProMessageStringRead() supportsstringlengthsupto127
characters.
UsingDefaultValues
PriortoRelease20,Pro/TOOLK ITapplications implemented defaultvaluesby
checkingforauser-enteredcarriagereturn.Beginning withRelease20,youcan
specifydefaultvalueswithinthecalltoProMessageDisplay(), provided
thattheseparator|||appearsintheformatstringinthemessagefile.(Seethe
sectionContentsoftheMessageFileonpage283forthespecificplacement ofthe
|||separator.)
Note
Youmustcallthefunction ProMessageDisplay() beforecallingthe
ProMessage*Read functionstospecifythedefaultvalues.
Defaultvaluesaredisplayedinthetextboxasinput.Notethatthisvaluewillnot
bepassedtotheCreoParametric TOOLKITfunctioniftheuserhitsacarriage
return;instead,thefunctionwillreturn PRO_TK_GENERAL_ERROR andthe
application mustinterpretthattheuserintendstousethedefault.
Tospecifyaconstantdefaultvalue,theformatstringwouldappearasfollows:
Enter adouble: |||3.0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplication mustinterpretthattheuserintendstousethedefault.
Tospecifyaconstantdefaultvalue,theformatstringwouldappearasfollows:
Enter adouble: |||3.0
Specifying constantdefaultsisnotrecommended aschangingthedefaultrequires
revisingtheCreoParametric TOOLKITapplication. Specifying defaultsthatare
variablesismoreflexible.
Tospecifyadefaultintegerthatisavariable,forexample,theformatstringinthe
messagefilewouldappearasfollows:
Enter any integer: |||%0d
286 Creo®Parametric TOOLKIT User’sGuideExample2:DisplayingMessagesandRetrieving
KeyboardInput
ThesamplecodeinUgMessageWindowUse.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_message showshow
toprintmessagesandacceptkeyboardinputwithdefaultvalues.Theexample
alsoshowshowtowriteamessagetoaninternal,wide-string buffer.Thenameof
themessagefileismsg_ugmessage.txt.
UserInterface:Messages 28716
UserInterface:RibbonTabs,
Groups,andMenuItemsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalsoshowshowtowriteamessagetoaninternal,wide-string buffer.Thenameof
themessagefileismsg_ugmessage.txt.
UserInterface:Messages 28716
UserInterface:RibbonTabs,
Groups,andMenuItems
CreatingRibbonTabs,Groups,andMenuItems........................................................289
AbouttheRibbonDefinitionFile................................................................................291
LocalizingtheRibbonUserInterfaceCreatedbyCreoParametricTOOLKIT
Applications .........................................................................................................294
TabSwitchingEvents...............................................................................................295
SupportforLegacyPro/TOOLKITApplications ..........................................................295
MigrationofLegacyPro/TOOLKITApplications .........................................................296
ThischapterdescribestheCreoParametric TOOLKITsupportfortheRibbonxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMigrationofLegacyPro/TOOLKITApplications .........................................................296
ThischapterdescribestheCreoParametric TOOLKITsupportfortheRibbon
UserInterface(UI).Italsodescribestheimpactoftheribbonuserinterfaceon
legacyPro/TOOLK ITapplications andtheprocedure toplacethecommands,
buttons,andmenuitemscreatedbythelegacyapplications intheCreoParametric
ribbonuserinterface.RefertotheCreoParametric Helpformoreinformation on
theribbonuserinterfaceandtheprocedure tocustomize theribbon.
288 Creo®Parametric TOOLKIT User’sGuideCreatingRibbonTabs,Groups,andMenu
Items
Customizations totheribbonuserinterfaceusingtheCreoParametric TOOLKIT
applications aresupported throughtheCustomizeRibbontabintheCreo
Parametric Optionsdialogbox.Youcanspecifytheuserinterfacelayoutfora
CreoParametric TOOLKITapplication andsavethelayoutdefinitioninaribbon
definitionfile,toolkitribbonui.rbn. WhenyourunCreoParametric, the
toolkitribbonui.rbn fileisloadedalongwiththeCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKITapplication andsavethelayoutdefinitioninaribbon
definitionfile,toolkitribbonui.rbn. WhenyourunCreoParametric, the
toolkitribbonui.rbn fileisloadedalongwiththeCreoParametric
TOOLKITapplication andthecommands createdbytheCreoParametric
TOOLKITapplication appearintheribbonuserinterface.Refertothesection
AbouttheRibbonDefinition Fileonpage291formoreinformation onthe
toolkitribbonui.rbn file.
Youcancustomize theribbonuserinterfaceonlyforaparticularmodeinCreo
Parametric. Forexample,ifyoucustomize theribbonuserinterfaceandsaveitto
thetoolkitribbonui.rbn fileinthePartmode,thenonloadingCreo
Parametric thecustomized userinterfacewillbevisibleonlyinthePartmode.To
viewaparticulartaborgroupinallthemodes,youmustcustomize theribbon
userinterfaceandsavethetoolkitribbonui.rbn fileineachmode.Refer
totheCreoParametric helpformoreinformation oncustomizing theribbon.
Note
Youcanaddanewgrouptoanexistingtaborcreateanewtabusingthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxuserinterfaceandsavethetoolkitribbonui.rbn fileineachmode.Refer
totheCreoParametric helpformoreinformation oncustomizing theribbon.
Note
Youcanaddanewgrouptoanexistingtaborcreateanewtabusingthe
CustomizeRibbontabintheCreoParametric Optionsdialogbox.Youwillnot
beabletomodifythetabsorgroupsthataredefinedbyCreoParametric.
WorkflowtoAddMenuItemstotheRibbonUser
Interface
Note
Theinstructions explainedbelowareapplicable onlyiftheapplication is
implemented infullasynchronous mode.Thisisbecauseapplications in
simpleasynchronous modecannothandlerequests,thatis,command
callbacks, fromCreoParametric. RefertothechapterCore:Asynchronous
Modeonpage273,formoreinformation.
UserInterface:RibbonTabs,Groups,andMenuItems 289YoumusthaveaCreoParametric TOOLKITdevelopment licensetocustomize
theribbonuserinterfaceforCreoParametric TOOLKITapplications. Thestepsto
addcommands totheCreoParametric ribbonuserinterfaceareasfollows:
1.CreateaCreoParametric TOOLKITapplication withcompletecommandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheribbonuserinterfaceforCreoParametric TOOLKITapplications. Thestepsto
addcommands totheCreoParametric ribbonuserinterfaceareasfollows:
1.CreateaCreoParametric TOOLKITapplication withcompletecommand
definition, whichincludesspecifying command label,helptext,largeicon
name,andsmalliconname.Designate thecommand using
ProCmdDesignate().
Note
ThelabelsandthetextaddedusingtheProCmdDesignate() function
duplicateexistingmessagesthatarepreviously addedintheCreodatabase.
Todisplaythecorrectlabelandtextmessage,youcanuseaprefixora
suffixwiththemessagenamesthatwillidentifyyourCreoParametric
TOOLKITapplication. YoushouldavoidusinggenericnamesofCreo
Parametric TOOLKITbuttonssuchasPoint,Arc,Circle,Ellipseinthe
labelsandtext.
2.StarttheCreoParametric TOOLKITapplication andensurethatitisstartedor
connected toCreoParametric. Thecommands createdbytheCreoParametric
TOOLKITapplication willbeloadedinCreoParametric.
3.ClickFile▶▶Options.TheCreoParametric Optionsdialogboxopens.
4.ClickCustomizeRibbon.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKITapplication willbeloadedinCreoParametric.
3.ClickFile▶▶Options.TheCreoParametric Optionsdialogboxopens.
4.ClickCustomizeRibbon.
5.IntheCustomizetheRibbonlist,selectatabandcreateanewgroupinitor
createanewtabandagroupinit.
6.IntheChoosecommands fromlist,selectTOOLKITCommands .The
commands createdbytheCreoParametric TOOLKITapplication are
displayed.
7.ClickAddtoaddthecommands tothenewtaborgroup.
8.ClickImport/Export ▶▶SavetheAuxiliaryApplication UserInterface.The
changesaresavedtothetoolkitribbonui.rbn file.The
toolkitribbonui.rbn fileissavedinthetextfolderspecifiedinthe
CreoParametric TOOLKITapplication registryfile.Formoreinformation
refertothesectiononRibbonDefinition Fileonpage291.
9.ClickApply.Thecustomsettingsaresavedtothetoolkitribbonui.rbn
file.
10.ReloadtheCreoParametric TOOLKITapplication orrestartCreoParametric.
Thetoolkitribbonui.rbn filewillbeloadedalongwiththeCreo
Parametric TOOLKITapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfile.
10.ReloadtheCreoParametric TOOLKITapplication orrestartCreoParametric.
Thetoolkitribbonui.rbn filewillbeloadedalongwiththeCreo
Parametric TOOLKITapplication.
290 Creo®Parametric TOOLKIT User’sGuideIftranslatedmessagesareavailableforthenewlyaddedtabsorgroups,thenCreo
Parametric displaysthetranslatedstringsbysearchingforthesamestringfromthe
listofstringbasedmessagesthatareloaded.Formoreinformation refertothe
sectiononLocalizing theRibbonUserInterfaceCreatedbytheCreoParametric
TOOLKITApplications onpage294.
AbouttheRibbonDefinitionFile
AribbondefinitionfileisafilethatiscreatedthroughtheCustomizeRibbon
interfaceinCreoParametric. Thisfiledefinesthecontainers, thatis,Tabs,Groups,
orCascademenusthatarecreatedbyaparticularCreoParametric TOOLKIT
application. Itcontainsinformation onwhethertoshowaniconorlabel.Italso
containsthesizeoftheicontobeused,thatis,alargeicon(32X32)orasmall
icon(16x16).
Theribbonuserinterfacedisplaysthecommands referenced intheribbonxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontainsthesizeoftheicontobeused,thatis,alargeicon(32X32)orasmall
icon(16x16).
Theribbonuserinterfacedisplaysthecommands referenced intheribbon
definitionfileonlyifthecommands areloadedandarevisibleinthatparticular
CreoParametric mode.Iftranslatedmessagesareavailableforthenewlyadded
tabsorgroups,thenCreoParametric displaysthetranslatedstringsbysearching
forthesamestringfromthelistofstringbasedmessagesthatareloaded.Formore
information refertothesectiononLocalizing theRibbonUserInterfaceCreated
bytheCreoParametric TOOLKITApplications onpage294.
YouneedaCreoParametric development licensetocreate,modify,orsavethe
toolkitribbonui.rbn file.Youcannotedititmanually.Tosavetheribbon
userinterfacelayoutdefinitiontothetoolkitribbonui.rbn file:
1.ClickFile▶▶Options.TheCreoParametric Optionsdialogboxopens.
2.ClickCustomizeRibbon.
3.IntheCustomizetheRibbonlist,selectatabandcreateanewgroupinitor
createanewtabandagroupinit.
4.IntheChoosecommands fromlist,selectTOOLKITCommands .Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2.ClickCustomizeRibbon.
3.IntheCustomizetheRibbonlist,selectatabandcreateanewgroupinitor
createanewtabandagroupinit.
4.IntheChoosecommands fromlist,selectTOOLKITCommands .The
commands createdbytheCreoParametric TOOLKITapplication are
displayed.
5.ClickAddtoaddthecommands tothenewtaborgroup.
6.ClickImport/Export ▶▶SavetheAuxiliaryApplication UserInterface.The
modifiedlayoutissavedtothetoolkitribbonui.rbn filelocatedinthe
textfolderwithintheCreoParametric TOOLKITapplication directory,that
is,<protk_app_dir>/text
7.ClickOK.
UserInterface:RibbonTabs,Groups,andMenuItems 291ToSpecifythePathfortheRibbonDefinitionFile
Youcanrenamethetoolkitribbonui.rbn toanotherfilenamewiththe
.rbnextension. ToenabletheCreoParametric TOOLKITapplication toreadthe
ribbondefinitionfilehavinganameotherthantoolkitribbonui.rbn, it
mustbeavailableatthelocation <protk_app_dir>/text/ribbon. The
functionintroduced inthissectionenablesyoutoloadtheribbondefinitionfile
fromwithinaCreoParametric TOOLKITapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmustbeavailableatthelocation <protk_app_dir>/text/ribbon. The
functionintroduced inthissectionenablesyoutoloadtheribbondefinitionfile
fromwithinaCreoParametric TOOLKITapplication.
FunctionIntroduced:
•ProRibbonDefinitionfileLoad()
Thefunction ProRibbonDefinitionfileLoad() loadsaspecifiedribbon
definitionfilefromadefaultpathintotheCreoParametric application. Theinput
argumentisasfollows:
•file_name -Specifythenameoftheribbondefinitionfileincludingits
extension. Thedefaultsearchpathforthisfileis:
○TheworkingdirectoryfromwhereCreoParametric isloaded.
○<application_text_dir>/ribbon
○<application_text_dir>/language/ribbon
Note
◆Thelocationoftheapplication textdirectoryisspecifiedintheCreo
Parametric TOOLKITregistryfile.
◆ACreoParametric TOOLKITapplication canloadaribbondefinition
fileonlyonce.Aftertheapplication hasloadedtheribbon,callsmade
tothefunction ProRibbonDefinitionfileLoad() toload
otherribbondefinitionfilesareignored.
LoadingMultipleApplications UsingtheRibbon
DefinitionFilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtothefunction ProRibbonDefinitionfileLoad() toload
otherribbondefinitionfilesareignored.
LoadingMultipleApplications UsingtheRibbon
DefinitionFile
CreoParametric supportsloadingofmultiple .rbnfilesinthesamesession.You
candevelopmultipleCreoParametric TOOLKITapplications thatsharethesame
tabsorgroupsandeachapplication willhaveitsownribbondefinitionfile.As
eachapplication isloaded,its.rbnfilewillbereadandapplied.Whenan
application isunloaded,thecontainers andcommand createdbyits.rbnfilewill
beremoved.
Forexample,considertwoCreoParametric TOOLKITapplications, namely,pt_
geardesign andpt_examples thataddcommands tothesamegroupona
tabontheRibbonuserinterface.Theapplication pt_geardesign addsa
292 Creo®Parametric TOOLKIT User’sGuidecommandPro/TOOLKITGearDesigntotheAdvancedModelinggroupontheModel
tabandtheapplication pt_examples addsacommandTKParttotheAdvanced
ModelinggroupontheModeltab.Theribbondefinitionfileforeachapplicationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtabandtheapplication pt_examples addsacommandTKParttotheAdvanced
ModelinggroupontheModeltab.Theribbondefinitionfileforeachapplication
willcontainaninstruction tocreatetheAdvancedModelinggroupandifboththe
ribbonfilesareloaded,thegroupwillbecreatedonlyonceandthetworibbon
customizations willbemergedintothesamegroup.
Thatis,ifboththeapplications arerunninginthesameCreoParametric session,
thenthecommands, Pro/TOOLKITGearDesignandTKPartwillbeavailableunder
theAdvancedModelinggroupontheModeltab.
Note
Theorderinwhichthecommands willbedisplayedwithinthegroupwill
dependontheorderofloadingofthe.rbnfileforeachapplication.
Thefollowingimagedisplayscommands addedbytwoCreoParametric
TOOLKITapplications tothesamegroup.
Tosavethecustomization whenmultipleapplications areloaded:
1.ClickFile▶▶Options.TheCreoParametric Optionsdialogboxopens.
2.ClickCustomizeRibbon.
3.IntheCustomizetheRibbonlist,selectatabandcreateanewgroupinitor
createanewtabandagroupinit.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1.ClickFile▶▶Options.TheCreoParametric Optionsdialogboxopens.
2.ClickCustomizeRibbon.
3.IntheCustomizetheRibbonlist,selectatabandcreateanewgroupinitor
createanewtabandagroupinit.
4.IntheChoosecommands fromlist,selectTOOLKITCommands .The
commands createdbytheTOOLKITapplication aredisplayed.
5.ClickAddtoaddthecommands tothenewtaborgroup.
6.ClickImport/Export ▶▶SavetheAuxiliaryApplication UserInterface.TheSave
UICustomization dialogboxopens.
7.SelectaCreoParametric TOOLKITapplication andClickSave.Themodified
layoutissavedtothe.rbnfileofthespecifiedCreoParametric TOOLKIT
application.
UserInterface:RibbonTabs,Groups,andMenuItems 293TheSaveUICustomization dialogboxisshowninthefollowingimage:
LocalizingtheRibbonUserInterface
CreatedbyCreoParametric TOOLKIT
Applications
Thelabelsforthecustomtabs,groups,andcascademenusbelonging totheCreo
Parametric TOOLKITapplication canbetranslatedinthelanguages supported by
CreoParametric. Todisplaylocalizedlabels,specifythetranslatedlabelsinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKITapplication canbetranslatedinthelanguages supported by
CreoParametric. Todisplaylocalizedlabels,specifythetranslatedlabelsinthe
ribbonui.txt fileandsavethisfileatthelocation <application_text_
dir>/<language>. Forexample,thetextfileforGermanlocalemustbesaved
atthelocation <application_text_dir>/german/ribbonui.txt.
Createafilecontaining translations foreachofthelanguages inwhichtheCreo
Parametric TOOLKITapplication islocalized.TheLocalized translation files
mustusetheUTF-8encodingwithBOMcharacterforthetranslatedtexttobe
displayedcorrectlyintheuserinterface.Formoreinformation onUTF-8
encoding,refertoUnicodeEncodingonpage2170.
Theformatoftheribbonui.txt fileisasshownbelow.Specifythefollowing
linesforeachlabelentryinthefile:
1.Ahashsign(#)followedbythelabel,asspecifiedintheribbondefinitionfile.
2.Thelabelasspecifiedintheribbondefinitionfileandasdisplayedinthe
ribbonuserinterface.
3.Thetranslatedlabel.
4.Addanemptylineattheendofeachlabelentryinthefile.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2.Thelabelasspecifiedintheribbondefinitionfileandasdisplayedinthe
ribbonuserinterface.
3.Thetranslatedlabel.
4.Addanemptylineattheendofeachlabelentryinthefile.
294 Creo®Parametric TOOLKIT User’sGuideForexample,iftheCreoParametric TOOLKITapplication createsatabwiththe
nameTK_TABhavingagroupwiththenameTK_GROUP ,thenthetranslatedfile
willcontainthefollowing:
#TK_TAB
TK_TAB
<translation for TK_TAB>
<Empty_line>
#TK_GROUP
TK_GROUP
<translation for TK_GROUP>
<Empty_line>
TabSwitchingEvents
Iftabswitchinghappensatrun-timeinCreoParametric, usethenotification
functionstotriggeracallbackfunctiontomanagethechangesduetothetab
switching.
Functions Introduced:
•ProNotificationSet()
•ProRibbonT abSwitchAction()
•ProNotificationUnset()
Usethefunction ProNotificationSet() toassignacallbackfunctiontobe
calledwhentheapplication switchesfromonetabtotheother.
Ifthenotification argumenttypeissettoPRO_RIBBON_TAB_SWITCH, a
registered callbackfunctionwhosesignaturematchesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcalledwhentheapplication switchesfromonetabtotheother.
Ifthenotification argumenttypeissettoPRO_RIBBON_TAB_SWITCH, a
registered callbackfunctionwhosesignaturematches
ProRibbonTabSwitchAction() iscalled.The“(Switch)fromTab”and
“(Switch)toTab”information isprovidedtothecallbackfunction,throughthe
functionarguments,wheneveraTabswitchhappens.
Usethefunction ProNotificationUnset() tocancelanotification.
Formoreinformation onusingnotifications seethechapterEvent-driven
Programming: Notifications.
SupportforLegacyPro/TOOLKIT
Applications
TheuserinterfaceforCreoParametric 1.0hasbeenrestructured toaribbonuser
interface.ThismayaffectthebehaviorofexistingPro/TOOLKITapplications that
weredesignedtoaddcommands tospecificPro/ENGINEER menusortoolbars.
Thesemenusortoolbarsorbothhavebeenredesigned inCreoParametric 1.0.
UserInterface:RibbonTabs,Groups,andMenuItems 295Thecommands addedbythePro/TOOLKITapplications appearontheCreo
Parametric ribbonintheHometabundertheTOOLKITgroup.WhenyouopenaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserInterface:RibbonTabs,Groups,andMenuItems 295Thecommands addedbythePro/TOOLKITapplications appearontheCreo
Parametric ribbonintheHometabundertheTOOLKITgroup.Whenyouopena
model,theTOOLKITgroupisontheToolstab.
Youcanalsoarrangethecommands addedbythePro/TOOLKITapplications
underanewtaboranexistingtabbycustomizing theribbonusingtheCustomize
RibbontabintheCreoParametric Optionsdialogbox.Foralistofallthe
commands addedbythePro/TOOLKITapplications, followthisprocedure:
1.ClickFile▶▶Options.TheCreoParametric Optionsdialogboxopens.
2.ClickCustomizeRibbon.
3.IntheChoosecommands fromlist,selectTOOLKITCommands .Allthe
commands addedbylegacyPro/TOOLKITapplications arelisted.
Note
Commands thathavenotbeendesignated willnothaveaniconorwillhavea
genericicon.
RefertotheCreoParametric Helpformoreinformation oncustomizing the
Ribbon.
MigrationofLegacyPro/TOOLKIT
Applications
TomigrateexistingPro/TOOLKITapplications totheCreoParametric Ribbon
userinterfacewithoutcompiling thesourcecode:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRibbon.
MigrationofLegacyPro/TOOLKIT
Applications
TomigrateexistingPro/TOOLKITapplications totheCreoParametric Ribbon
userinterfacewithoutcompiling thesourcecode:
1.LoadthePro/TOOLKITapplications inCreoParametric sothatthecommands
createdintheseapplications areavailableintheCustomizeRibbonuser
interface.
2.Modifytheribbonuserinterfacelayoutandsavethechangestothe
toolkitribbonui.rbn.
3.Copythetoolkitribbonui.rbn tothelocation <application_
text_dir>/ribbon.
4.ReloadPro/TOOLKITapplication orrestartCreoParametric. The.rbnfile
willbeloadedalongwiththePro/TOOLKITapplication andthecommands
willbevisibleintheribbonuserinterfaceifitsaccessibility willbevisible.
296 Creo®Parametric TOOLKIT User’sGuide17
UserInterface:Menus,
Commands, andPopupmenus
Introduction.............................................................................................................298
MenuButtonsandMenus........................................................................................298xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMenuButtonsandMenus........................................................................................298
Designating Commands...........................................................................................306
PopupMenus..........................................................................................................311
MenuManagerButtonsandMenus..........................................................................316
Customizing theCreoParametricNavigationArea.....................................................331
EnteringCreoParametricCommands.......................................................................335
ThischapterdescribesallthefunctionsprovidedbyCreoParametric TOOLKITto
createandmanipulate menusandbuttonsintheCreoParametric ribbonuser
interface.
RefertothechapterUserInterface:RibbonTabs,Groups,andMenuItemson
page288formoreinformation. Also,refertotheCreoParametric Helpformore
information oncustomizing theribbonuserinterface.
297IntroductionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRefertothechapterUserInterface:RibbonTabs,Groups,andMenuItemson
page288formoreinformation. Also,refertotheCreoParametric Helpformore
information oncustomizing theribbonuserinterface.
297Introduction
UsingCreoParametric TOOLKIT, youcansupplement theCreoParametric
ribbonuserinterface.
OncetheCreoParametric TOOLKITapplication isloaded,youcanaddanew
grouptoanexistingtaborcreateanewtabusingtheCustomizeRibbontabinthe
CreoParametric OptionsdialogboxinCreoParametric. Youwillnotbeableto
modifythegroupsthataredefinedbyCreoParametric. Ifthetranslatedmessages
areavailableforthenewlyaddedtabsorgroups,thenCreoParametric willuse
thembysearchingforthesamestringinthelistofstingbasedmessagesloaded.
Youcancustomize theribbonuserinterfaceonlyforaparticularmodeinCreo
Parametric. Forexample,ifyoucustomize theribbonuserinterfaceandsaveitto
thetoolkitribbonui.rbn fileinthePartmode,thenonloadingCreo
Parametric thecustomized userinterfacewillbevisibleonlyinthePartmode.Toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthetoolkitribbonui.rbn fileinthePartmode,thenonloadingCreo
Parametric thecustomized userinterfacewillbevisibleonlyinthePartmode.To
viewaparticulartaborgroupinallthemodes,youmustcustomize theribbon
userinterfaceandsavethetoolkitribbonui.rbn fileineachmode.Referto
theCreoParametric Fundamentals Helpformoreinformation oncustomizing the
ribbon.
WhenyouaredesigningyourCreoParametric TOOLKITapplication, youshould
carefullyconsiderthecontextofthebuttonsthatyouaddtotheCreoParametric
UserInterface(UI).Buttonsspecifictoaparticularmode(suchasPART)should
belocatedontheribbonrelatedtothatmode.Buttonsthatinitiatesomeactionon
apart,forexample,shouldbelocatedonthePARTribbon.
Therearefundamental differencesinthefilesandfunctionsusedtomanipulate
RibbonandMenu-Manager menus.Forthisreason,thismanualdescribesthese
subjectsinseparatesections.
MenuButtonsandMenus
ThetabsintheCreoParametric ribbonuserinterfacecontaingroupscomposed of
bothbuttonsandsubmenus. UsingCreoParametric TOOLKIT,youcancreatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsubjectsinseparatesections.
MenuButtonsandMenus
ThetabsintheCreoParametric ribbonuserinterfacecontaingroupscomposed of
bothbuttonsandsubmenus. UsingCreoParametric TOOLKIT,youcancreate
similarstructuresintheCreoParametric ribbonuserinterface.Theobject
definitions areasfollows:
•Pushbutton—A namediteminagroupormenuthatisusedtolaunchasetof
instructions. AnexampleisthePlanebuttonintheDatumgroup.
Checkbutton—An iteminagroupormenuthatmaybetoggledonandoff.
AnexampleisthePlaneDisplaytoggleintheModelDisplaygroupintheView
tab.
•Radiogroup—An iteminagroupormenuthatmaybesettooneandonlyone
ofanynumberofoptions.Anexampleisthegroupofwindowslistedinthe
WindowgroupattheWindowstabwhichallowyoutoswitchbetween
differentwindows.
298 Creo®Parametric TOOLKIT User’sGuide•Command—A procedure inCreoParametric thatmaybeactivatedfroma
button.
•Command ID—Anopaquepointertoacommand, usedasaninputtoother
CreoParametric TOOLKITfunctions.
•Actioncommand—A command whichexecutesasetofinstructions.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbutton.
•Command ID—Anopaquepointertoacommand, usedasaninputtoother
CreoParametric TOOLKITfunctions.
•Actioncommand—A command whichexecutesasetofinstructions.
Launched bypushbuttons.
•Optioncommand—A command whichexecutesasetofinstructions basedon
thestateofaUIcomponent. Commands arelaunchedbycheckbuttonsand
radiogroups.
UsingtheTrailFiletoDetermineUINames
SeveralfunctionsdealingwithUIcomponents requiretheinputofstringsthat
CreoParametric usestoidentifycommands andmenubuttons.
Tofindthenameofanactioncommand, clickthecorresponding icononthe
ribbonuserinterfaceandthencheckthelastentryinthetrailfile.Forexample,for
thesaveicon,thetrailfilewillhavethecorresponding entry:
~Command `ProCmdModelSave`
Thecommand nameforthesavebuttonisProCmdModelSave. Thisstringcan
beusedasinputtoProCmdCmdIdFind() togetthecommand ID.
AddingaPushButton
Toaddabuttontotheribbonuserinterface,yourCreoParametric TOOLKIT
application mustdothefollowing:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeusedasinputtoProCmdCmdIdFind() togetthecommand ID.
AddingaPushButton
Toaddabuttontotheribbonuserinterface,yourCreoParametric TOOLKIT
application mustdothefollowing:
1.Definetheactioncommand tobeinitiatedbythebutton.Theactionisdefined
inafunctionknownasthe“callbackfunction.”
2.Designate thecommand usingthefunction ProCmdDesignate().
3.AddthebuttontotheribbonuserinterfaceusingtheusingtheCustomize
RibbontabintheFile▶▶Optionsdialogbox.Thisoperationbindstheadded
actiontothebutton.
Theseprocedures aredescribedinthesectionsthatfollow.
AddinganActiontotheCreoParametric Ribbon
FunctionIntroduced:
•ProCmdActionAdd()
Thefunction ProCmdActionAdd() addsanactiontoCreoParametric. This
actioncanbelaterassociated withapushbuttoncommand intheCreoParametric
userinterface.Thesyntaxofthisfunctionisasfollows:
UserInterface:Menus,Commands, andPopupmenus 299ProError ProCmdActionAdd (
char *action_name,
uiCmdCmdActFn action_cb,
uiCmdPriority priority,
uiCmdAccessFn access_func,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserInterface:Menus,Commands, andPopupmenus 299ProError ProCmdActionAdd (
char *action_name,
uiCmdCmdActFn action_cb,
uiCmdPriority priority,
uiCmdAccessFn access_func,
ProBoolean allow_in_non_active_window,
ProBoolean allow_in_accessory_window,
uiCmdCmdId *action_id );
Thisfunctiontakesthefollowingarguments:
•action_name —Thenameofthecommand asitwillbeusedinCreo
Parametric. Thisnamemustbeunique,anditmustoccuronlyonceinyour
applications orinCreoParametric. Topreventconflicts,PTCrecommends
prepending orappending auniqueidentifiertoyourcommand names,similar
toptc_openfile oropenfile_ptc.
•action_cb—The actionfunction(callbackfunction)thatwillbecalledwhen
thecommand isactivatedbypressingthebutton,casttoauiCmdCmdActFn:
typedef int (*uiCmdCmdActFn) (
uiCmdCmdId command,
uiCmdValue *p_value,
void *p_push_command_data
);
○command—Identifier oftheactionoroption.
○p_value—For optionspassedtoValueGet functions. Ignoredforactions.
○p_push_command_dataNot implemented inthisrelease.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvoid *p_push_command_data
);
○command—Identifier oftheactionoroption.
○p_value—For optionspassedtoValueGet functions. Ignoredforactions.
○p_push_command_dataNot implemented inthisrelease.
•priority—The command priority.Thepriorityoftheactionreferstothelevel
ofprecedence theaddedactiontakesoverotherCreoParametric actions.
Theavailableactionprioritiesaredefinedintheenumerated type
uiCmdPriority. Thepossiblevaluesareasfollows:
typedef int uiCmdPriority;
#define uiCmdPrioDefault ((uiCmdPriority) 0)
#define uiProeImmediate ((uiCmdPriority) 2)
#define uiProeAsynch ((uiCmdPriority) 3)
#define uiProe2ndImmediate ((uiCmdPriority) 5)
#define uiProe3rdImmediate ((uiCmdPriority) 6)
#define uiCmdNoPriority ((uiCmdPriority) 999)
Thefollowingtabledescribestheenumerated valuesindetail.
300 Creo®Parametric TOOLKIT User’sGuideValue Description
uiCmdPrioDefault Normalpriorityactions
Normalpriorityactionsdismissallotheractions
exceptasynchronous actions.Notethatbuttonsofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx300 Creo®Parametric TOOLKIT User’sGuideValue Description
uiCmdPrioDefault Normalpriorityactions
Normalpriorityactionsdismissallotheractions
exceptasynchronous actions.Notethatbuttonsof
thisprioritycanleadtothedismissalofMenu
Managermenus.Dismissing thesemenuscan
resultinunexpected behaviorfromfunctionsthat
dependonthemodeandthecontextoftheCreo
Parametric session.Oneexampleofafunction
whichcanexhibitunintended behavioris
ProSelect() whenselectingobjectsfroman
activesimplified representation. Menubuttons
shouldhavelesserpriorityiftheydependonthe
contextoftheCreoParametric session.
uiProeImmediate,
uiProe2ndImmediate, and
uiProe3rdImmediateLevelsofimmediate priority.Actionsofeachlevel
ofprioritydismissactionswithlowerlevel
priorities.
uiProeAsynch Asynchronous priority.Actionswithasynchronous
priorityareindependent ofallotheractions.
•access_func—The accessfunction(callbackfunction)thatdetermines ifthe
menubuttonshouldbeavailable,unavailable, orhidden.Actionaccessibilityxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpriorityareindependent ofallotheractions.
•access_func—The accessfunction(callbackfunction)thatdetermines ifthe
menubuttonshouldbeavailable,unavailable, orhidden.Actionaccessibility
referstowhetheranaddedbuttonisavailableforuserselection.Thisfunction
iscalledeachtimethebuttonisdisplayed. Theaccessibility isevaluatedbased
ontheconditions pertaining atthetimethebuttonispressed.Theaccess
functionmustbecasttoauiCmdAccessFn:
typedef uiCmdAccessState (*uiCmdAccessFn)
(uiCmdAccessMode access_mode);
Thepotentialreturnvaluesarelistedintheenumerated type
uiCmdAccessState:
○ACCESS_REMOVE—The buttonisnotvisible,andthecontaining menus
mightalsoberemovedfromthemenu,ifallofthemenubuttonsinthe
containing menupossessanaccessfunctionreturning ACCESS_REMOVE.
○ACCESS_INVISIBLE—The buttonisnotvisible.
○ACCESS_UNAVAILABLE—The buttonisvisible,butunavailable and
cannotbeselected.
○ACCESS_DISALLOW—The buttonshowsasavailable,butthecommand
willnotbeexecutedwhenitischosen.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○ACCESS_UNAVAILABLE—The buttonisvisible,butunavailable and
cannotbeselected.
○ACCESS_DISALLOW—The buttonshowsasavailable,butthecommand
willnotbeexecutedwhenitischosen.
○ACCESS_AVAILABLE—The buttonisavailableandcanbeselectedby
theuser.
UserInterface:Menus,Commands, andPopupmenus 301Note
Whenyouaddabutton,allthereturnvaluesfortheenumerated type
uiCmdAccessState workasdocumented. However,whenyouadda
buttontotheCreoParametric ribbonuserinterface,andtheaccess
functionreturnsthevalue ACCESS_REMOVE orACCESS_INVISIBLE,
thesevaluesareignored.ThevaluesaretreatedasACCESS_
UNAVAILABLE instead.Thebuttonisvisible,butisunavailable.
•allow_in_non_active_window—A ProBoolean determining whetherornot
toshowthiscommand inanynonactivewindow.Anon-active windowisa
windowthatexistsandcontainsamodel,butthatisnotheactivewindowin
theCreoParametric session.Awindowbecomesactivewhentheuserchooses
View▶▶Activate.Thisfunctionality isequivalent tochangingtheactivewindowxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwindowthatexistsandcontainsamodel,butthatisnotheactivewindowin
theCreoParametric session.Awindowbecomesactivewhentheuserchooses
View▶▶Activate.Thisfunctionality isequivalent tochangingtheactivewindow
byselectingandactivating awindowusingthepull-down menuofWindows
command undertheViewtabinCreoParametric.
•allow_in_accessory_window—A ProBoolean determining whetherornot
toshowthiscommand inanaccessorywindow.Anaccessorywindowis
smallerthanamainCreoParametric windowandallowsonlytheFile>Exit
command fromthemenu.
•action_id—The functionwillreturnauiCmdCmdId, thecommand identifier.
Thisidentifiercanbeusedinadditional CreoParametric functioncalls,such
as,ProCmdDesignate.
Note
•Thefunction ProCmdActionAdd() isexecutedonlyonceperCreo
Parametric sessionforeachaction.Subsequent callstothisfunctionfora
previously loadedactionareignored(therefore youcannotredefineanaction
withinaCreoParametric session).
AddingaButtontotheRibbon
YoucanaddabuttontotheribbonuserinterfaceusingtheCustomizeRibbontabxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpreviously loadedactionareignored(therefore youcannotredefineanaction
withinaCreoParametric session).
AddingaButtontotheRibbon
YoucanaddabuttontotheribbonuserinterfaceusingtheCustomizeRibbontab
intheCreoParametric Optionsdialogbox.RefertothechapteronUserInterface:
RibbonTabs,Groups,andMenuItemsonpage288formoreinformation. Also,
refertotheCreoParametric Helpformoreinformation oncustomizing theRibbon
UserInterface.
302 Creo®Parametric TOOLKIT User’sGuideAddingaCheckButtontotheRibbonUserInterface
Toaddacheckbuttontotheribbonuserinterface,yourCreoParametric
TOOLKITapplication mustdothefollowing:
1.Definetheoptioncommand tobeinitiatedbythebutton.Thedefinitionofthis
command includesthedefinitionofthreecallbackfunctions.
2.Designate thecommand usingthefunction ProCmdDesignate().
3.Addthecheckbuttontotheribbonuserinterface.Thisoperationbindsthe
addedactiontothebutton.
Theseprocedures aredescribedinthesectionsthatfollow.
AddinganOptionCommandtoCreoParametric—Check
Button
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaddedactiontothebutton.
Theseprocedures aredescribedinthesectionsthatfollow.
AddinganOptionCommandtoCreoParametric—Check
Button
Functions Introduced:
•ProCmdOptionAdd()
•ProCmdChkbuttonV alueGet()
•ProCmdChkbuttonV alueSet()
Thefunction ProCmdOptionAdd() addsacommand toCreoParametric.
Thesyntaxofthisfunctionisasfollows:
ProError ProCmdOptionAdd (
char *option_name,
uiCmdCmdActFn option_cb,
ProBoolean boolean_operation,
uiCmdCmdValFn set_value_cb,
uiCmdAccessFn access_func,
ProBoolean allow_in_non_active_window,
ProBoolean allow_in_accessory_window,
uiCmdCmdId *option_id );
Thisfunctionrequiresthefollowingarguments:
•option_name—The nameoftheoptioncommand. Thismustbeunique,inthe
samewayasactioncommand.
•option_cb—The actioncommand tobeexecutedwhenthecheckbuttonis
toggled,casttoauiCmdCmdActFn. Thisfunctionshouldincludeacallto
ProCmdChkbuttonValueGet(), todetermine thevalueofthecheck
button.
•boolean_operation—Specifies whetherornottheoptionhastwovalues.Setxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoggled,casttoauiCmdCmdActFn. Thisfunctionshouldincludeacallto
ProCmdChkbuttonValueGet(), todetermine thevalueofthecheck
button.
•boolean_operation—Specifies whetherornottheoptionhastwovalues.Set
thistoPRO_B_TRUE foracheckbutton.
•set_value_cb—The callbackfunctionthatsetsthevalueofthecheckbutton,
casttoauiCmdCmdValFn:
UserInterface:Menus,Commands, andPopupmenus 303typedef int (*uiCmdCmdValFn) (
uiCmdCmdId command,
uiCmdValue *p_value
);
ThisfunctionshouldincludeacalltoProCmdChkbuttonValueSet() to
setthevalueofthecheckbuttonwhentheUIisdisplayedorrefreshed.
•access_func—The callbackfunctionthatdetermines ifthecommand is
accessible.
•allow_in_non_active_window—A ProBoolean determining whetherornot
toshowthiscommand inanynon-active window.Anon-active windowisa
windowthatexistsandcontainsamodel,butthatisnottheactivewindowin
theCreoParametric session.Awindowbecomesactivewhentheuser
activatesanewwindoworopensamodelinanewwindow.
•allow_in_accessory_window—A ProBoolean determining whetherornotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheCreoParametric session.Awindowbecomesactivewhentheuser
activatesanewwindoworopensamodelinanewwindow.
•allow_in_accessory_window—A ProBoolean determining whetherornot
toshowthiscommand inanaccessorywindow.Anaccessorywindowis
smallerthenamainCreoParametric windowandallowsonlytheFile>Exit
command fromtheribbonuserinterface.
Thefunctions ProCmdChkbuttonValueGet() and
ProCmdChkbuttonValueSet() provideaccesstothevalueofthecheck
button.Thesefunctionsrequiretheoptioncommand value(providedbythe
callbackfunctionsasinput),andthevalueisexpressed asaProBoolean.
AddingaCheckButtontotheRibbon
YoucanaddacheckbuttontotheribbonuserinterfaceusingtheCustomize
RibbontabintheCreoParametric Optionsdialogbox.Refertothechapteron
UserInterface:RibbonTabs,Groups,andMenuItemsonpage288formore
information. Also,refertotheCreoParametric Helpformoreinformation on
customizing theRibbonUserInterface.
AddingaRadioButtonGrouptotheRibbon
Toaddaradiobuttongrouptotheribbonuserinterface,yourCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcustomizing theRibbonUserInterface.
AddingaRadioButtonGrouptotheRibbon
Toaddaradiobuttongrouptotheribbonuserinterface,yourCreoParametric
TOOLKITapplication must:
1.Definetheoptioncommand tobeinitiatedbythegroupofbuttons.The
definitionofthiscommand includesthedefinitionofthreecallbackfunctions.
2.Designate thecommand usingthefunction ProCmdDesignate()
3.Addtheradiobuttongrouptotheribbonuserinterface.Thisoperationbinds
theaddedactiontothebutton.
Theseprocedures aredescribedinthesectionsthatfollow.
304 Creo®Parametric TOOLKIT User’sGuideAddinganOptionCommandtoCreoParametric—Radio
Group
Functions Introduced:
•ProCmdOptionAdd()
•ProCmdRadiogrpV alueGet()
•ProCmdRadiogrpV alueSet()
Thefunction ProCmdOptionAdd() isusedtocreatetheoptioncommand
corresponding tothebuttongroup.
Theargumentsshouldbesimilartotheusageforcreatingtheoptioncommand for
acheckbutton,withthefollowingexceptions:
•output_callback_function—Must includeacallto
ProCmdRadiogrpValueGet() todetermine theselectedvalueinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxacheckbutton,withthefollowingexceptions:
•output_callback_function—Must includeacallto
ProCmdRadiogrpValueGet() todetermine theselectedvalueinthe
radiogroup.
•boolean_operations —MustbePRO_B_FALSE forradiogroups.
•set_value_cb—Must includeacalltoProCmdRadiogrpValueSet() to
setthevalueofthegroupuponredisplayoftheradiogroupUI.
Thefunctions ProCmdRadiogrpValueGet() and
ProCmdRadiogrpValueSet() provideaccesstogettingorsettingthe
selectediteminthegroup.Theyrequiretheoptioncommand value(providedby
thecallbackfunctions) asaninput.Theselectedvalueisreturnedasa
ProMenuItemName string.
AddingaRadioButtonGroup
YoucanaddabuttontotheribbonuserinterfaceusingtheCustomizeRibbontab
intheCreoParametric Optionsdialogbox.RefertothechapteronUserInterface:
RibbonTabs,Groups,andMenuItemsonpage288formoreinformation. Also,
refertotheCreoParametric Helpformoreinformation oncustomizing theRibbon
UserInterface.
Manipulating ExistingCommands
Functions Introduced:
•ProCmdCmdIdFind()
•ProCmdAccessFuncAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrefertotheCreoParametric Helpformoreinformation oncustomizing theRibbon
UserInterface.
Manipulating ExistingCommands
Functions Introduced:
•ProCmdCmdIdFind()
•ProCmdAccessFuncAdd()
•ProCmdAccessFuncRemove()
•ProCmdBracketFuncAdd()
UserInterface:Menus,Commands, andPopupmenus 305Thefunction ProCmdCmdIdFind() allowsyoutofindthecommand IDforan
existingcommand soyoucanaddanaccessfunctionorbracketfunctiontothe
command. Youmustknowthenameofthecommand inordertofinditsID.See
sectionUsingtheTrailFiletoDetermine UINamesonpage299todetermine UI
namesinordertodetermine thenameofthecommand.
Thefunctions ProCmdAccessFuncAdd() and
ProCmdAccessFuncRemove() allowyoutoimposeanaccessfunctionona
particularcommand. (Seefunction ProCmdActionAdd() foradescription of
accessfunctions.) TheAddfunctionprovidesanaccess_id. ThisIDmustbe
savedforlaterusewhenyoudeactivate theaccessfunction.
Thefunction ProCmdBracketFuncAdd() allowsthecreationofafunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaccessfunctions.) TheAddfunctionprovidesanaccess_id. ThisIDmustbe
savedforlaterusewhenyoudeactivate theaccessfunction.
Thefunction ProCmdBracketFuncAdd() allowsthecreationofafunction
thatwillbecalledimmediately beforeandafterexecutionofagivencommand.
thisfunctionwouldbeusedtoaddcompanylogictothestartorend(orboth)of
anexistingCreoParametric command. Itcouldalsobeusedtocancelan
upcoming command. Thisfunctionisdeclaredas:
ProError ProCmdBracketFuncAdd (
uiCmdCmdId cmd_id,
uiCmdCmdBktFn bracket_func,
char *bracket_func_name,
void **pp_bracket_data );
Thefunctiontakesthefollowingarguments:
•cmd_id—The command identifier.
•bracket_func—The callbackfunctiontobecalledbeforeandafterthe
command, casttoauiCmdCmdBktFn:
typedef int (*uiCmdCmdBktFn)
(uiCmdCmdId command,
uiCmdValue *p_new_value,
int entering_command,
void **pp_bracket_data);
Theenteringcommand argumentwillbe1beforeexecutionand0after.Ifthe
operationisbeforetheupcoming command execution, andyouwanttocancelxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxint entering_command,
void **pp_bracket_data);
Theenteringcommand argumentwillbe1beforeexecutionand0after.Ifthe
operationisbeforetheupcoming command execution, andyouwanttocancel
theupcoming command execution, return 0.Otherwise, returnnon-zero.
•bracket_func_name—The nameofthebracketfunction.
•pp_bracket_data—A void**containing datatobepassedtothebracket
function.
Designating Commands
UsingCreoParametric TOOLKITyoucandesignateCreoParametric commands.
Thesecommands canlaterappearintheCreoParametric ribbonuserinterface.
306 Creo®Parametric TOOLKIT User’sGuideInCreoParametric TOOLKITyoucansetabuttontorefertoacommand and
subsequently dragthisbuttonontotheCreoParametric ribbonuserinterface.
Whenthebuttonisclicked,thecommand isexecuted.
Toaddacommand, yourCreoParametric TOOLKITapplication mustdothe
following:
1.Defineoraddthecommand tobeinitiatedonclickingtheicon.
2.Optionally designateaniconbuttontobeusedwiththecommand definedby
you.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowing:
1.Defineoraddthecommand tobeinitiatedonclickingtheicon.
2.Optionally designateaniconbuttontobeusedwiththecommand definedby
you.
3.Designate thecommand (icon)toappearintheCustomizeRibbontabinthe
CreoParametric Optionsdialogbox.
Note
RefertothechapteronUserInterface:RibbonTabs,Groups,andMenu
Itemsonpage288formoreinformation. Also,refertotheCreoParametric
Helpformoreinformation oncustomizing theRibbonUserInterface.
4.Savetheconfiguration inCreoParametric sothatchangestotheribbonuser
interfaceappearwhenanewsessionofCreoParametric isstarted.
AddingtheCommand
Functions Introduced:
•ProCmdActionAdd()
•ProCmdOptionAdd()
Thefunctions ProCmdActionAdd() andProCmdOptionAdd() allowyou
todefineorregisteraCreoParametric command. SeethesectionAddingan
ActiontotheCreoParametric Ribbononpage299formoreinformation onthe
function ProCmdActionAdd() andthesectionAddinganOptionCommand to
CreoParametric—Check Buttononpage303formoreinformation onthe
function ProCmdOptionAdd().
ProvidingtheIconxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction ProCmdActionAdd() andthesectionAddinganOptionCommand to
CreoParametric—Check Buttononpage303formoreinformation onthe
function ProCmdOptionAdd().
ProvidingtheIcon
FunctionIntroduced:
•ProCmdIconSet()
Thefunction ProCmdIconSet() allowsyoutoprovideanicontobeusedwith
thecommand youcreated.ThefunctionaddstheicontotheCreoParametric
command. Thefunctiontakesthecommand identifierasoneoftheinputsandthe
nameoftheiconfile,includingtheextensionastheotherinput.Avalidformatfor
UserInterface:Menus,Commands, andPopupmenus 307theiconfileisastandard .GIF, .JPG,or.PNG.PTCrecommends using .PNG
format.AlliconsintheCreo Parametric ribbonareeither16x16(small)or
32x32(large)size.Thenamingconvention fortheiconsisasfollows:
•Smallicon—<iconname.ext>
•Largeicon—<iconname_large.ext>
Note
Thelegacynamingconvention foricons <icon_name_icon_size.ext>
willnotbesupported infuturereleasesofCreoParametric. Theiconsizewas
addedasasuffixtothenameoftheicon.Forexample,thelegacynamingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Thelegacynamingconvention foricons <icon_name_icon_size.ext>
willnotbesupported infuturereleasesofCreoParametric. Theiconsizewas
addedasasuffixtothenameoftheicon.Forexample,thelegacynaming
convention forsmalliconswasiconname16X16.ext. Itisrecommended
tousethestandardnamingconventions foricons,thatis,iconname.ext or
iconname_large.ext.
Theapplication searchesfortheiconfilesinthefollowinglocations:
•<creo_loadpoint>\<datecode>\Common Files\text\
resources
•<application_text_dir>\resource
•<application_text_dir>\<language_dir>/resource
Thelocationoftheapplication textdirectoryisspecifiedintheCreo
Parametric TOOLKITregistryfile.
TheCreoParametric buttonisreplacedwiththeiconimage.
Commands thatdonothaveaniconassignedtothemdisplaythebuttonlabel.
Youmayalsousethisfunctiontoassignasmallicontoabutton.
Designating theCommand
FunctionIntroduced:
•ProCmdDesignate()
•ProCmdRadiogrpDesignate()
•ProCmdAlwaysAllowV alueUpdate()
Thefunction ProCmdDesignate() allowsyoutodesignateacommand orxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDesignating theCommand
FunctionIntroduced:
•ProCmdDesignate()
•ProCmdRadiogrpDesignate()
•ProCmdAlwaysAllowV alueUpdate()
Thefunction ProCmdDesignate() allowsyoutodesignateacommand or
checkbuttontobeavailableintheCustomizeRibbontabintheCreoParametric
OptionsdialogofCreoParametric.
AfteraCreoParametric TOOLKITapplication hasusedthefunction
ProCmdDesignate() onacommand, theusercanaddthebuttonassociated
withthiscommand intotheCreoParametric ribbonuserinterface.
308 Creo®Parametric TOOLKIT User’sGuideIfthisfunctionisnotcalled,thebuttonwillnotbevisibleintheTOOLKIT
Commands listintheCustomizeRibbontabintheCreoParametric Optionsdialog
ofCreoParametric.
Thesyntaxofthefunction ProCmdDesignate() is:
ProError ProCmdDesignate (uiCmdCmdId cmd_id,
ProMenuItemLabel button_label,
ProMenuLineHelp one_line_help,
ProMenuDescription description,
ProFileName msg_file);
Theargumentstothisfunctionare:
•cmd_id—The command identifier.
•button_label—The messagestringthatreferstotheiconlabel.ThislabelxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMenuDescription description,
ProFileName msg_file);
Theargumentstothisfunctionare:
•cmd_id—The command identifier.
•button_label—The messagestringthatreferstotheiconlabel.Thislabel
(storedinthemessagefile)identifiesthetextseenwhenthebuttonis
displayed. Ifthecommand isnotassignedanicon,thebutton_label string
appearsonthebuttonbydefault.
Note
ThelabelsandthetextaddedusingtheProCmdDesignate() function
duplicateexistingmessagesthatarepreviously addedintheCreodatabase.
Todisplaythecorrectlabelandtextmessage,youcanuseaprefixora
suffixwiththemessagenamesthatwillidentifyyourCreoParametric
TOOLKITapplication. YoushouldavoidusinggenericnamesofCreo
Parametric TOOLKITbuttonssuchasPoint,Arc,Circle,Ellipseinthe
labelsandtext.
•one_line_help—The one-lineHelpfortheicon.Thislabel(storedinthe
messagefile)identifiesthehelplineseenwhenthemousemovesoverthe
icon.
•description—The messageappearsintheCustomizeRibbontabintheCreo
Parametric Optionsdialogandalsowhen"Description" isclickedinCreo
Parametric.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxicon.
•description—The messageappearsintheCustomizeRibbontabintheCreo
Parametric Optionsdialogandalsowhen"Description" isclickedinCreo
Parametric.
•msg_file—The messagefilename.Allthelabelsincludingtheone-lineHelp
labelsmustbepresentinthemessagefile.
Note
Thisfilemustbeinthedirectory <text_path>/text or<text_
path>/text/<language>.
UserInterface:Menus,Commands, andPopupmenus 309Thefunction ProCmdRadiogrpDesignate designates theradiobuttontobe
availableintheTOOLKITCommands listintheCustomizeRibbontabintheCreo
Parametric OptionsdialogboxofCreoParametric. Theinputargumentsofthis
functionare:
•option_id—The optionidentifier.
•number_radio_gr oup_items—Specifies thenumberofoptionsintheradio
group
•radio_gr oup_items—Specifies anarrayofitemsintheradiogroup.
•radio_gr oup_labels—Specifies thelabelsfortheradiobuttons.Thislabel
(storedinthemessagefile)identifiesthetextseenwhenthebuttonis
displayed. Ifthecommand isnotassignedanicon,thelabelstringappearson
themenubydefault.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(storedinthemessagefile)identifiesthetextseenwhenthebuttonis
displayed. Ifthecommand isnotassignedanicon,thelabelstringappearson
themenubydefault.
•one_line_helps—The one-lineHelpfortheicon.Thislabel(storedinthe
messagefile)identifiesthehelplineseenwhenthemousemovesoverthe
icon.
•radio_gr oup_icons—Specifies anarrayoficonfilenames,includingthe
extension. Avalidformatfortheiconfileisastandard .GIF, .JPG,or.PNG.
PTCrecommends using .PNGformat.AlliconsintheCreo Parametric
ribbonareeither16x16(small)or32x32(large)size.Thenamingconvention
fortheiconsisasfollows:
○Smallicon— <icon_name_16X16.ext>
○Largeicon— <icon_name_32X32.ext>
Theapplication searchesfortheiconfilesinthefollowinglocations:
○<creo_loadpoint>\<datecode>\Common Files\text\
resources
○<application_text_dir>\resource
○<application_text_dir>\<language_dir>\resource
Thelocationoftheapplication textdirectoryisspecifiedintheCreo
Parametric TOOLKITregistryfile.
•description—The messageappearsintheCustomizeRibbontabintheCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThelocationoftheapplication textdirectoryisspecifiedintheCreo
Parametric TOOLKITregistryfile.
•description—The messageappearsintheCustomizeRibbontabintheCreo
Parametric Optionsdialogandalsowhen"Description" isclickedinCreo
Parametric.
•msg_file—The messagefilename.Allthelabelsincludingtheone-lineHelp
labelsmustbepresentinthemessagefile.
Note
Thisfilemustbeinthedirectory <text_path>/text or<text_
path>/text/<language>.
310 Creo®Parametric TOOLKIT User’sGuideThefunction ProCmdAlwaysAllowValueUpdate() allowsthevalueofthe
command tobeupdatedalways,evenwhenthecommand isnotaccessible. By
default, set_value_cb iscalledonlywhenthecommand isaccessible. The
inputargumentsfollow:
•cmd_id—The command identifier.
•allow—Specify asPRO_B_TRUE forthevalueofthecommand tobeupdated
always.SpecifyitasPRO_B_FALSE, onlywhenthecommand isaccessible.
PlacingtheButton
Oncethebuttonhasbeencreatedusingthefunctionsdiscussed, placethebutton
ontheCreoParametric ribbonuserinterface.RefertothechapteronUserxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPlacingtheButton
Oncethebuttonhasbeencreatedusingthefunctionsdiscussed, placethebutton
ontheCreoParametric ribbonuserinterface.RefertothechapteronUser
Interface:RibbonTabs,Groups,andMenuItemsonpage288formore
information. Also,refertotheCreoParametric Helpformoreinformation on
customizing theRibbonUserInterface.
Example1:Designating aCommand
TheexamplecodeinthefileUgMain.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_main illustrateshow
todesignateacommand tobeavailableforplacement asabutton.
PopupMenus
CreoParametric providesshortcutmenusthatcontainfrequently usedcommands
appropriate tothecurrentlyselecteditems.Youcanaccessashortcutmenuby
clickingtherightmousebutton(RMB)afterselectinganitem.Shortcutmenusare
accessible in:
•Graphicswindow
•Modeltree
•Somedialogboxes
•Anyareawhereyoucanperformanobject-action operationbyselectingan
itemandthenchoosingacommand toperformontheselecteditem.
CreoParametric TOOLKITprovidesdifferentprocedures toaddcustombuttonsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Anyareawhereyoucanperformanobject-action operationbyselectingan
itemandthenchoosingacommand toperformontheselecteditem.
CreoParametric TOOLKITprovidesdifferentprocedures toaddcustombuttons
topopupmenus,depending onthebuttons’context.Toaddtothemodeltree
popupmenu,usetheprocedure describedinAddingaButtontotheModelTree
PopupMenuonpage316.Toaddapopupmenutoacustomdialogbox,seethe
UserInterface:Dialogsonpage339chapter(youcannotmodifythepopupmenus
inanexistingUIdialogbox).Toaddtoagraphicswindowpopupmenu,referto
AddingaPopupMenutotheGraphicsWindowonpage312.
UserInterface:Menus,Commands, andPopupmenus 311AddingaPopupMenutotheGraphicsWindow
DifferentpopupmenuscanbeactivatedduringagivensessionofCreo
Parametric. EverytimetheCreoParametric contextchanges(byopeninga
differentmodeltype,byenteringdifferenttools,orbyenteringspecialmodeslike
"Edit")adifferentpopupmenuiscreated.WhenCreoParametric movestothe
nextcontext,thepopupmenumaybedestroyed.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdifferentmodeltype,byenteringdifferenttools,orbyenteringspecialmodeslike
"Edit")adifferentpopupmenuiscreated.WhenCreoParametric movestothe
nextcontext,thepopupmenumaybedestroyed.
Becauseofthis,CreoParametric TOOLKITapplications mustattachabuttonto
thepopupmenuduringinitialization ofthepopupmenu.TheCreoParametric
TOOLKITapplication isnotifiedeachtimeaparticularpopupmenuiscreated,
whichthenallowstheusertoaddtothepopupmenu.
Usethefollowingprocedure toadditemstographicswindowpopupmenus:
1.Obtainthenameoftheexistingpopupmenustowhichyouwanttoaddanew
menuusingthetrailfile.
2.RegistertheCreoParametric TOOLKITnotifications forcreationand
destruction ofpopupmenus.
3.Createcommands forthenewpopupmenuitems.
4.Implement accessfunctionstoprovidevisibilityinformation fortheitems.
5.Whenthenotification iscalledforthedesiredpopupmenu,addthecustom
buttonstothemenu.
6.Whenthedestroynotification iscalled,freetheassociated memoryforthe
custombuttons.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx5.Whenthenotification iscalledforthedesiredpopupmenu,addthecustom
buttonstothemenu.
6.Whenthedestroynotification iscalled,freetheassociated memoryforthe
custombuttons.
Thefollowingsectionsdescribeeachofthesestepsindetail.Youcanaddpush
buttons,checkbuttons,andcascademenustothepopupmenus.Youcanadd
popupmenuitemsonlyintheactivewindow.Youcannotusethisprocedure to
removeitemsfromexistingmenus.Toremoveitemsusinganaccessfunctionsee
thesectiononManipulating ExistingCommands onpage305.
UsingtheTrailFiletoDetermineExistingPopup
MenuNames
ThetrailfileinCreoParametric containsacommentthatidentifiesthenameof
thepopupmenuiftheconfiguration option auxapp_popup_menu_info isset
toyes.
Forexample,thepopupmenu,EditProperties,hasthefollowingcommentinthe
trailfile:
~Close `rmb_popup` `PopupMenu`
~Command `ProCmdEditProperties`
312 Creo®Parametric TOOLKIT User’sGuideRegistering Notifications toCreateandDestroy
PopupMenus
PopupmenusarecreatedatruntimeinCreoParametric andonlywhenthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx~Command `ProCmdEditProperties`
312 Creo®Parametric TOOLKIT User’sGuideRegistering Notifications toCreateandDestroy
PopupMenus
PopupmenusarecreatedatruntimeinCreoParametric andonlywhenthe
requiredmenusexistintheactivewindow.Henceitisnotpossibletopre-register
thecustombuttons.Notification functionsnotifyapplications toaddanewpopup
menu.Formoreinformation onusingnotifications seethechapterEvent-driven
Programming: Notifications onpage1982.
Functions Introduced:
•ProNotificationSet()
•ProPopupmenuCr eatePostAction()
•ProPopupmenuDestr oyPr eAction()
Ifthenotification valueargumenttypeissettoPRO_POPMENU_CREATE_POST,
aregistered callbackfunctionwhosesignaturematches
ProPopupmenuCreatePostAction() iscalled.Thisfunctioniscalledafter
thepopupmenuiscreatedinternallyinCreoParametric andmustbeusedto
assignapplication-specific buttonstothepopupmenu.
Ifthenotification valueargumenttypeissetasPRO_POPUPMENU_DESTROY_
PRE,aregistered callbacknotification functionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxassignapplication-specific buttonstothepopupmenu.
Ifthenotification valueargumenttypeissetasPRO_POPUPMENU_DESTROY_
PRE,aregistered callbacknotification function
ProPopupmenuDestroyPreAction() iscalledbeforethepopupmenuis
destroyed. Usethisfunctiontofreememoryallocatedbytheapplication forthe
custombuttonsinthepopupmenu.
AccessingthePopupMenus
ThefunctionsdescribedinthissectionprovidethenameandIDofthepopup
menusthatareusedtoaccessthesemenuswhileusingotherfunctions.
Functions Introduced:
•ProPopupmenuIdGet()
•ProPopupmenuNameGet()
Thefunction ProPopupmenuIdGet() returnsthepopupmenuIDforagiven
popupmenuname.ThepopupmenuIDisrequiredforthefunctionsthatadd
buttonstothepopupmenu.IDsaredependent onthecontextofCreoParametric
andarenotmaintained betweensessions.
Thefunction ProPopupmenuNameGet() returnsthenameofthepopupmenu
assignedtoagivenID.
UserInterface:Menus,Commands, andPopupmenus 313CreatingCommands fortheNewPopupMenu
Buttons
Functions Introduced:
•ProCmdActionAdd()
•ProCmdOptionAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxassignedtoagivenID.
UserInterface:Menus,Commands, andPopupmenus 313CreatingCommands fortheNewPopupMenu
Buttons
Functions Introduced:
•ProCmdActionAdd()
•ProCmdOptionAdd()
•ProCmdCmdIdFind()
Thefunctions ProCmdActionAdd() orProCmdOptionAdd() areusedto
createcommands forthepopupmenus.Onlypushbuttons(actioncommands) and
checkbuttons(optioncommands) aresupported inpopupmenus.Commands with
agivennamearecreatedonlyonceinasessionofCreoParametric. HencePTC
recommends thatyoucreatetherequiredcommands intheuser_
initialize() functionoftheapplication.
UseProCmdCmdIdFind() toobtainthecommand IDforthecommand (inthe
notification callbackforPRO_POPUPMENU_CREATE_POST) toaddthebutton
tothepopupmenu.
CheckingtheAccessStateofaPopupMenuItem
Functions Introduced:
•ProPopupmenuAccessFunction()
Apopupmenuusesanadditional accessfunctiontodetermine whetherthe
popupmenu mustbevisiblebasedonthecurrentlyselecteditems.Usethe
functionwhosesignaturematches ProPopupmenuAccessFunction() tosetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxApopupmenuusesanadditional accessfunctiontodetermine whetherthe
popupmenu mustbevisiblebasedonthecurrentlyselecteditems.Usethe
functionwhosesignaturematches ProPopupmenuAccessFunction() toset
theaccessstateofthebuttoninthepopupmenu.
Thesyntaxforthisfunctionisasfollows:
typedef uiCmdAccessState (*ProPopupmenuAccessFunction)
(uiCmdCmdId command,
ProAppData appdata,
ProSelection* sel_buffer);
Thelastargumentcontainsanarrayofselecteditemsthatareusedtodetermine
thevisibilityofthepopupmenubutton.ItisPTCstandardpracticetoremove
popupmenubuttonsusing ACCESS_REMOVE insteadofgrayingthemoutusing
ACCESS_UNAVAILABLE whenunusableitemtypeshavebeenselected.Thisis
tominimizethesizeofthepopupmenu.
AddingCreoParametric PopupMenus
Functions Introduced:
•ProPopupmenuButtonAdd()
•ProPopupmenuCascadebuttonAdd()
314 Creo®Parametric TOOLKIT User’sGuideUseProPopupmenuButtonAdd() toaddanewitemtoapopupmenu.The
inputargumentsare:
•menu_ID—Specifies theIDofthepopupmenuobtainedfrom
ProPopupmenuIdGet().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx314 Creo®Parametric TOOLKIT User’sGuideUseProPopupmenuButtonAdd() toaddanewitemtoapopupmenu.The
inputargumentsare:
•menu_ID—Specifies theIDofthepopupmenuobtainedfrom
ProPopupmenuIdGet().
•position—Specifies thepositioninthepopupmenuatwhichtoaddthemenu
button.PassPRO_VALUE_UNUSED toaddtothebottomofthemenu.
•button_name—Specifies thenameoftheaddedbutton.Thebuttonnameis
placedinthetrailfilewhentheuserselectsthemenubutton.Formore
information onvalidcharacters thatyoucanusetospecifythename,referto
thesectionNamingConvention forUIComponents onpage344.
•button_label—Specifies themessagethatreferstothebuttonlabel.Thislabel
identifiesthetextseenwhenthebuttonisdisplayed. Tolocalizethistext,
obtainandpassastringfromProMessageToBuffer().
•button_helptext—Specifies thehelpmessageassociated withthebutton.This
labelactsasakeywordthatidentifiesthehelptextinthemessagefile.To
localizethistext,obtainandpassastringfromProMessageToBuffer().
•cmd_ID—Specifies thecommand identifierfortheactionoroption.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlabelactsasakeywordthatidentifiesthehelptextinthemessagefile.To
localizethistext,obtainandpassastringfromProMessageToBuffer().
•cmd_ID—Specifies thecommand identifierfortheactionoroption.
•access_status—Specifies thecallbackfunctionusedtodetermine thevisibility
statusoftheaddedbutton.
•appdata—Specifies theuserapplication data.
Usethefunction ProPopupmenuCascadebuttonAdd() toaddanew
cascademenutoanexistingpopupmenu.
Theinputargumentsare:
•menu_ID—Specifies theIDofthepopupmenuobtainedfrom
ProPopupmenuIdGet().
•position—Specifies thepositioninthemenuatwhichtoaddthecascade
button.PassPRO_VALUE_UNUSED toaddtothebottomofthemenu.
•cascade_menu_name—Specifies thenameofthecascademenu.Thenameis
placedinthetrailfilewhentheuserselectsthemenubutton.Formore
information onvalidcharacters thatyoucanusetospecifythename,referto
thesectionNamingConvention forUIComponents onpage.
•cascade_menu_label—Specifies themessagethatreferstothecascademenuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation onvalidcharacters thatyoucanusetospecifythename,referto
thesectionNamingConvention forUIComponents onpage.
•cascade_menu_label—Specifies themessagethatreferstothecascademenu
label.Thislabelidentifiesthetextseenwhenthemenuisdisplayed. To
localizethistext,obtainandpassastringfromProMessageToBuffer().
•cascade_menu_helptext—Specifies thehelpmessageassociated withthe
cascademenu.Thislabelactsasakeywordthatidentifiesthehelptextinthe
messagefile.Tolocalizethistext,obtainandpassastringfrom
ProMessageToBuffer().
UserInterface:Menus,Commands, andPopupmenus 315•access_status—Specifies thecallbackfunctionusedtodetermine thevisibility
statusoftheaddeditem.
•appdata—Specifies theuserapplication data.
Theoutputargumentiscasc_menuId, themenuIDofthecascademenu.
AddingaButtontotheModelTreePopupMenu
Toaddabuttontotheribbonuserinterface,refertothesectionMenuBarButtons
andMenusonpage298.Ensurethatthefollowingconditions aremet:
•Themenunameusedshouldbe“ActionMenu.”xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxToaddabuttontotheribbonuserinterface,refertothesectionMenuBarButtons
andMenusonpage298.Ensurethatthefollowingconditions aremet:
•Themenunameusedshouldbe“ActionMenu.”
•Thecommand accessfunctionshouldbeconfigured toreadtheselection
bufferusing ProSelbufferSelectionsGet(). Ifthebufferisinactive
orempty,theaccessfunctionshouldmakethemenuiteminvisible.
Example2:AssigningtheCreoParametric
commandtopopupmenus
TheexampleinthefileUgPopupmenus.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_main demonstrates
howtoassignaCreoParametric command tothepopupmenusinthegraphics
windowandthemodeltree.Itaddstheexample
UserAsmcompConstraintsHighlight() tothepopupmenu(seethe
chapteronAssembly: BasicAssembly Accessonpage1112fordetails).The
popupmenususeanaccessfunctiontocheckthecurrentlyselectediteminthe
selectionbufferthatisanassemblycomponent. Ifitisnotanassembly
component, thebuttonwillberemovedfromthemenu.Theexampleaddsthe
popupmenubuttonusing ProPopupmenuButtonAdd() ifthemenunameisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectionbufferthatisanassemblycomponent. Ifitisnotanassembly
component, thebuttonwillberemovedfromthemenu.Theexampleaddsthe
popupmenubuttonusing ProPopupmenuButtonAdd() ifthemenunameis
thenameofthecurrentmainpopupmenuinassemblymode.
MenuManagerButtonsandMenus
VeryfewmodesinCreoParametric displayamenumanager.Forexample,the
ASMPROCESS menuisdisplayedonlywhenCreoParametric isintheProcess
PlanAssembly mode,whichoccurswhenaProcess-Plan Assembly hasbeen
createdorretrieved.Modifying andsupplementing themenumanagerinterfaceis
fundamentally differentfromsimilaroperations ontheribbon.
Thissectiondescribesthefilesandfunctionsnecessarytomanipulate themenu
managerbuttonsandmenusofCreoParametric. Thissectioncoversthefollowing
topics:
•MenuFilesonpage317
•AddingaMenuButtononpage319
316 Creo®Parametric TOOLKIT User’sGuide•NewMenusonpage321
•Preempting CreoParametric Commands onpage326
•Submenus onpage327
•Manipulating Menusonpage327
•DataMenusonpage328
•SettingMenuButtonsonpage329xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Preempting CreoParametric Commands onpage326
•Submenus onpage327
•Manipulating Menusonpage327
•DataMenusonpage328
•SettingMenuButtonsonpage329
•Controlling Accessibility ofMenuButtonsonpage329
•PushingandPoppingMenusonpage330
•Run-timeMenusonpage330
MenuFiles
Menufilesenableyoutospecifyyourowntextforthenameofamenubuttonand
theone-linehelptextthatappearswhenyouplacethecursoroverthatbutton,
alongwithtranslations forbothofthese.
CreoParametric looksfortheCreoParametric TOOLKITmenufilesinthe
followinglocations:
•ThecurrentCreoParametric startupdirectory
•Thesubdirectory text/menus underthedirectorynamedbythetext_dir
statementintheregistryfile
PTCrecommends thatduringdevelopment youplaceyourmenufilesintext/
menusunderyourworkingdirectoryandspecifythefollowingregistryfileentry:
text_dir .
NamesandContentsofMenuFiles
Therearetwoconventional extensions usedinnamingmenufiles:
•.mnu—Files thatdescribecompletemenus
•.aux—Files thatdescribenewbuttonstobeaddedtoexistingCreo
Parametric menusxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNamesandContentsofMenuFiles
Therearetwoconventional extensions usedinnamingmenufiles:
•.mnu—Files thatdescribecompletemenus
•.aux—Files thatdescribenewbuttonstobeaddedtoexistingCreo
Parametric menus
Thefollowingrestrictions applytofilenames:
•ThenamemustbeuniquethroughoutCreoParametric.
•Thenamemusthavenomorethan30characters, includingtheextension.
TofindoutwhatmenufilenamesareusedbyCreoParametric, lookintheCreo
Parametric menudirectoryat<creo_loadpoint>\<datecode>\Common
Files\text\<language_dir>\menus.
Whenyoucreatean.auxfiletoextendanexistingCreoParametric menu,use
thesamefilenamerootasCreoParametric usedforthatmenu.
UserInterface:Menus,Commands, andPopupmenus 317SyntaxandSemanticsofMenuFiles
Thetwotypesoffiles—.mnu and.aux—have identicalformats.
Theformatconsistsofgroupsofthreelines(onegroupforeachmenubutton)and
agroupatthetopforthemenutitle.Thetitlegroupcontainsthemenutitleonthe
firstline,andthentwoblanklines.
ThemenutitleisthenamethatappearsatthetopofthemenuwhenyourunCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxagroupatthetopforthemenutitle.Thetitlegroupcontainsthemenutitleonthe
firstline,andthentwoblanklines.
ThemenutitleisthenamethatappearsatthetopofthemenuwhenyourunCreo
Parametric inEnglish.Themenutitleisalsousedtorefertothemenufromyour
CreoParametric TOOLKITcode,soitisessentialthatthisnameisuniqueinall
CreoParametric menus.Forexample,ifyouarewritingan.auxfiletoadd
buttonstoaCreoParametric menu,makesureyouusethetitlethatappearsinthe
corresponding .mnufileinCreoParametric. Ifyouarecreatinganewmenu,
makesurethatthetitleyouusehasnotalreadybeenusedinCreoParametric.
Ifthemenutitleisfollowedbyasecondword,CreoParametric displaysthe
secondwordinsteadofthefirstone.Thisishowatranslation isprovided.Ifthere
isnosecondword,CreoParametric displaysthefirstword.
Eachmenubuttongroupconsistsofthefollowingthreelines:
•Buttonname—IfthebuttonnameasitappearsontheCreoParametric screen
containsspaces,eachspacemustbereplacedbythecharacter#inthemenu
file.Ifthebuttonnameisfollowedbyanothername,separatedbywhitespace,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Buttonname—IfthebuttonnameasitappearsontheCreoParametric screen
containsspaces,eachspacemustbereplacedbythecharacter#inthemenu
file.Ifthebuttonnameisfollowedbyanothername,separatedbywhitespace,
thesecondnamewillbewhatisactuallydisplayed.
ThefirstnameisstillusedtorefertothebuttonfromyourCreoParametric
TOOLKITcode.Thesecondprovidesanoptionaltranslation ofthatbutton
name.
•One-lineHelp—This isasinglelineoftextthatexplainswhatthemenubutton
does.Whenyouplacethemousepointeronthemenubutton,CreoParametric
displaystheone-lineHelptextintheMessageWindow.
•AlternateHelp—Ifthislineisnotblank(ordoesnotstartwiththecomment
character“#”),itwillbeusedinplaceoftheone-lineHelp.Thisprovidesa
translation oftheHelpmessage.
Example3:SampleMenuFile
Thefollowingexamplecodeshowsthemenufileyouwouldcreatetoaddanew
button,CheckPart,totheCreoParametric PARTmenu.
Menu file "part.aux":
[Start offile onnext line]
PART
<blank line>
<blank line>
Check#Part
Check the validity ofthe current part.
<blank line>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbutton,CheckPart,totheCreoParametric PARTmenu.
Menu file "part.aux":
[Start offile onnext line]
PART
<blank line>
<blank line>
Check#Part
Check the validity ofthe current part.
<blank line>
318 Creo®Parametric TOOLKIT User’sGuide[End offile onprevious line]
Example4:AddingAlternateNamesandHelpTexttoa
Button
ThisexamplecodecreatesanalternatebuttonnameandHelptextfortheprevious
example.
Menu file "part.aux":
[Start offile onnext line]
PART
<blank line>
<blank line>
Check#Part DRC#Check
Check the validity ofthe current part.
Perform aDRC (Design Rule Check) onthe part.
[End offile onprevious line]
AddingaMenuButton
Functions Introduced:
•ProMenuFileRegister()
•ProMenuAuxfileRegister()
•ProMenubuttonActionSet()
•ProMenubuttonGenactionSet()
Whenyouaddanewbuttontoanexistingmenuinuser_initialize(), you
aremodifying theCreoParametric definitionofthemenuinitsmemorybefore
thatmenuhasbeenusedbyCreoParametric, andthereforebeforeCreo
Parametric hasloadeditfromitsmenufile.Youmustcallthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaremodifying theCreoParametric definitionofthemenuinitsmemorybefore
thatmenuhasbeenusedbyCreoParametric, andthereforebeforeCreo
Parametric hasloadeditfromitsmenufile.Youmustcallthefunction
ProMenuFileRegister() totellCreoParametric toloaditsownmenufile
beforeyoucanaddyourownbuttons.
Toaddabuttontoamenu,firstwriteamenufile,andthenaddthefollowingcalls
touser_initialize():
1.LoadtheCreoParametric menuintomemory,using
ProMenuFileRegister().
2.Addthebuttonsinyourmenufiletothemenu,using
ProMenuAuxfileRegister().
3.Definetheactionsofthenewbuttons,using
ProMenubuttonActionSet().
CallingProMenuFileRegister()
TheinputargumentstoProMenuFileRegister() areasfollows:
UserInterface:Menus,Commands, andPopupmenus 319•ProMenuName menuname—The uniquetitleofthemenuthatappearsasthe
firstwordonthefirstlineofthemenufileandontheheadingofthemenuon
thescreenwhenyourunCreoParametric inEnglish.Thisargumentiscase-
insensitive.
•ProMenufileName filename—The nameofthemenufile,includingthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfirstwordonthefirstlineofthemenufileandontheheadingofthemenuon
thescreenwhenyourunCreoParametric inEnglish.Thisargumentiscase-
insensitive.
•ProMenufileName filename—The nameofthemenufile,includingthe
extensionbutnotthedirectory.
Thefunctionoutputstheintegeridentifierofthemenu,whichyoudonotnormally
need.Ifthefunctionfailsforsomereason(forexample,themenufiledidnot
exist),itreturns PRO_TK_GENERAL_ERROR. Ifyoucallthisfunctionasecond
timeonthesamemenufile,ithasnoeffect.
CallingProMenuAuxfileRegister()
Thisfunctionhasthesameargumentsandreturnvalueas
ProMenuFileRegister(). Insteadofloadinganewmenuintomemory,the
functionaddsthebuttonsinthefiletoamenualreadyinmemory.
CallingProMenubuttonActionSet()
ThefirstthreeargumentstoProMenubuttonActionSet() areasfollows:
•ProMenuName menuname—The titleofthemenuthatcontainsthebutton.
•ProMenubuttonName button—The firstnameforthebuttoninthemenu
file(notthesecond,whichprovidesthetranslation), butwithspacesinsteadofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMenuName menuname—The titleofthemenuthatcontainsthebutton.
•ProMenubuttonName button—The firstnameforthebuttoninthemenu
file(notthesecond,whichprovidesthetranslation), butwithspacesinsteadof
poundsigns(#).Thisargumentiscase-insensitive.
•ProMenubuttonAction action—A pointertotheCreoParametric
TOOLKITcallbackfunctiontobecalledwhentheuserselectsthismenu
button.Topassapointertoafunction,supplythenameofthefunction
withoutthefollowingparentheses. Ifyourfunctiondoesnotprecedethecallto
ProMenubuttonActionSet() inthesamefile,youmustadda
declaration ofittoshowthecompilerthatthisisafunction.
Theothertwoarguments, app_dataandapp_int,areoptionalargumentstoyour
command function.Theseargumentsenableyourcommand functiontobemore
flexibleinwhatitdoes.Ifyoudonotwanttouseapp_dataandapp_int,supply
thevalues NULLand0,respectively .
Sampledeclarations andtheuseoftheoptionalargumentsareshowninExample
5:AddingaButtontotheCreoParametric Ribbononpage321;Example6:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthevalues NULLand0,respectively .
Sampledeclarations andtheuseoftheoptionalargumentsareshowninExample
5:AddingaButtontotheCreoParametric Ribbononpage321;Example6:
DefiningaNewMenuthatClosesItselfonpage322;andExample7:Defininga
NewMenutheUserMustCloseonpage323.
320 Creo®Parametric TOOLKIT User’sGuideExample5:AddingaButtontotheCreoParametric Ribbon
TheexamplecodeinthefileUgMenuMenuButtonAdd.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_menu
addsthebuttonCheckParttotheCreoParametric PARTtab.Theexampleusesthe
menufilefromthepreviousexamples.
NewMenus
Functions Introduced:
•ProMenuPr ocess()
•ProMenuDelete()
•ProMenuCr eate()
•ProMenuHold()
•ProMenuDeleteW ithStatus()
CreoParametric TOOLKITenablesyoutocreatenewmenus.Defininganew
menudiffersfromaddingbuttonstoanexistingmenuinthefollowingways:
•Themenufileyousupplyshouldendin.mnu,not.aux.(Ithasthesame
syntax,though.)
•YoudonotneedtocallProMenuAuxfileRegister() becausethewhole
menuisdefinedinasinglemenufile.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Themenufileyousupplyshouldendin.mnu,not.aux.(Ithasthesame
syntax,though.)
•YoudonotneedtocallProMenuAuxfileRegister() becausethewhole
menuisdefinedinasinglemenufile.
•Youneedtodefineanexitactionforthemenu,inadditiontoanactionfor
eachbuttononthemenu.
•Youcaneitherspecifythenewmenuinuser_initialize() oryoucan
setupthenewmenulocallybeforeyouuseit.
ExitActions
YoumustnotonlytellthemenumanagerinsideCreoParametric whichfunction
tocallforeachbuttononyourmenu,butalsowhichfunctiontocalliftheuser
selectsabuttononanothermenu.Thisfunctioniscalledanexitactionbecauseit
isoftenusedtoclosethemenu.
Note
Ifyoudonotdefineanexitaction,CreoParametric’ sbehaviorisundefined if
theuserselectsfromanothermenu.
Therearetwotypesofexitaction:
UserInterface:Menus,Commands, andPopupmenus 321•Nothing—The menuselectionisignored.Thisisusefulifyouwanttheuserto
takesomedefiniteactionbeforeleavingthecurrentmenu.
•Closethecurrentmenu—The menusunwindtothelevelofthemenuselectedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtakesomedefiniteactionbeforeleavingthecurrentmenu.
•Closethecurrentmenu—The menusunwindtothelevelofthemenuselected
andtheselectedcommand isentered.Thisistheusualwaytoleaveamenu.
DefiningaNewMenu
Todefineanewmenu,firstwriteamenufile.Beforeyouneedtousethemenu,
addthefollowingcallstoyourCreoParametric TOOLKITprogram:
1.LoadtheCreoParametric menuintomemory,using
ProMenuFileRegister().
2.Definetheactionsofthenewbuttons,usingthefunction
ProMenubuttonActionSet().
3.Definetheexitactionofthenewmenu,usingthefunctions
ProMenubuttonActionSet() andoneoftheexitactionfunctions
describedinthefollowingsection.
Example6:DefiningaNewMenuthatClosesItself
Thisexamplecodedefinesanewmenu,MYMENU, thatclosesitselfusingthe
function ProMenuDelete().
[Start offile onnext line]
MYMENU
<blank line>
<blank line>
Partial#Check
Perform apartial check onthe part.
<blank line>
Full#Check
Perform afull check onthe part.
<blank line>
[End offile onprevious line]
Thefollowingcodesetsupthemenu:
int menuId;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPartial#Check
Perform apartial check onthe part.
<blank line>
Full#Check
Perform afull check onthe part.
<blank line>
[End offile onprevious line]
Thefollowingcodesetsupthemenu:
int menuId;
ProMenuFileRegister ("mymenu", "mymenu.mnu", &menuId);
ProMenubuttonActionSet ("mymenu", "Partial Check",
ProCheckPart,
NULL, 0);
ProMenubuttonActionSet ("mymenu", "Full Check", ProCheckPart,
NULL,
1);
ProMenubuttonActionSet ("mymenu", "Quit Checks",
(ProMenubuttonAction)ProMenuDelete, NULL, 0);
ProMenubuttonActionSet("mymenu", "mymenu",
(ProMenubuttonAction)ProMenuDelete, NULL, 0);
322 Creo®Parametric TOOLKIT User’sGuideExample7:DefiningaNewMenutheUserMustClose
Inthefollowingexamplecode,theuserhastoclose MYMENU.
int menuId;
ProMenuFileRegister ("mymenu", "mymenu.mnu", &menuId);
ProMenubuttonActionSet ("mymenu", "Partial Check",
ProCheckPart,
NULL, 0);
ProMenubuttonActionSet ("mymenu", "Full Check", ProCheckPart,
NULL, 1);
ProMenubuttonActionSet ("mymenu", "Quit Checks",xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMenubuttonActionSet ("mymenu", "Partial Check",
ProCheckPart,
NULL, 0);
ProMenubuttonActionSet ("mymenu", "Full Check", ProCheckPart,
NULL, 1);
ProMenubuttonActionSet ("mymenu", "Quit Checks",
(ProMenubuttonAction)ProMenuDelete, NULL, 0);
ProMenubuttonActionSet ("mymenu", "mymenu",
(ProMenubuttonAction)ProMenuHold, NULL, 0);
DefininganExitAction
Todefineanexitaction,makeanextracallto
ProMenubuttonActionSet(), butinsteadofthebuttonname(thethird
argument),specifythemenuname.
Ifyouwantthemenustounwindandthenewcommand tobeentered,use
ProMenuDelete() astheactionfunction.
Ifyouwanttheselectiontobeignored,usethefunction ProMenuHold() asthe
exitaction.Ifyouusethisfunction,youmustprovidesomeotherexitrouteforthe
menu.Forexample,youcanspecifyanexplicitmenubutton(suchasDone)
whosecommand functioncallsProMenuDelete().
Ifyouwanttoperformsomeadditional actioninthesecases(suchassendinga
warningtotheuser),youcanprovideyourownexitfunctionthatperformsthe
actionandthencallsProMenuHold().
UsingaNewMenuxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIfyouwanttoperformsomeadditional actioninthesecases(suchassendinga
warningtotheuser),youcanprovideyourownexitfunctionthatperformsthe
actionandthencallsProMenuHold().
UsingaNewMenu
Afteryouhavedefinedyournewmenu,youneedtoknowhowtouseit.Thisis
normallydoneinsidethecommand functionofanothermenubutton.
ToUseaNewMenu
1.Displaythemenu,using ProMenuCreate().
2.Makethemenuactivesotheusercanselectfromit,using
ProMenuProcess().
UserInterface:Menus,Commands, andPopupmenus 323CallingProMenuCreate()
ThefirstargumenttoProMenuCreate() iseither PROMENUTYPE_MAIN or
PROMENUTYPE_SUB. TheusualchoiceisPROMENUTYPE_MAIN (seethe
sectionSubmenus onpage327fordetailedinformation aboutsubmenus). The
secondargumentisthetitleofthemenu.Thelastargumentistheidentifierofthe
displayedmenu.
CallingProMenuProcess()
Thefunction ProMenuProcess() takesasingleinputargument—the titleof
themenu.Ifthemenuisthelastonedisplayed, youcanpassanemptystring.The
returnvalueismeaningful onlyifyouusethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMenuProcess() takesasingleinputargument—the titleof
themenu.Ifthemenuisthelastonedisplayed, youcanpassanemptystring.The
returnvalueismeaningful onlyifyouusethefunction
ProMenuDeleteWithStatus() astheexitactionforthemenu.
Thefunction ProMenuProcess() returnsonlywhenthemenuisclosed,asthe
resultofacalltoeither ProMenuDelete() or
ProMenuDeleteWithStatus(). Thefollowingistrueforanycode
followingthecalltoProMenuProcess():
1.Thecodedoesnotgetexecuteduntilthemenuisclosed.
2.Thecodegetsexecutedbeforeanycommand thatcausesanexitfromthe
menu.Whentheuserclosesamenubyselectinganothercommand, that
command isputintotheinputbufferandisnotexecuteduntilcontrolpasses
fromyourapplication backtoCreoParametric.
Example8:UsingaNewMenu
Thefollowingexamplecodeshowshowtousethefunctions
ProMenuProcess() andProMenuCreate(). Theexamplebuildsonthe
previousexamples.
int action, menuId;
.
.
.
ProMenuCreate (PROMENUTYPE_MAIN, "mymenu", &menuId);
ProMenuProcess ("", &action);
.
.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMenuProcess() andProMenuCreate(). Theexamplebuildsonthe
previousexamples.
int action, menuId;
.
.
.
ProMenuCreate (PROMENUTYPE_MAIN, "mymenu", &menuId);
ProMenuProcess ("", &action);
.
.
CreatingaMenuforSelectingaSingleValue
FunctionIntroduced:
•ProMenuDeleteW ithStatus()
•ProMenubuttonActionSet()
•ProMenuPr ocess()
324 Creo®Parametric TOOLKIT User’sGuideUseofProMenubuttonActionSet() FinalArguments
ThetwolastargumentsofProMenubuttonActionSet() areapp_data, of
typeProAppData andapp_int,oftypeinteger.Theseargumentsarepassed
directlytoyourcallbackfunctionwhenitisinvoked.BecauseCreoParametric
TOOLKITandCreoParametric donotlookatthesearguments,youcanusethem
foranyinformation thatyouwanttopasstoorfromyourfunction.
Example9:CreatingaMenuthatSelectsaValueonpage325usesthefinal
argumentofProMenubuttonActionSet() todistinguish betweenseveral
menubuttonsthatsharethesamecommand function.Insidethecommand
function,thisvalueappearsasthesecondargument.Itisusedtodetermine whichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxargumentofProMenubuttonActionSet() todistinguish betweenseveral
menubuttonsthatsharethesamecommand function.Insidethecommand
function,thisvalueappearsasthesecondargument.Itisusedtodetermine which
buttonwasselectedandthenperformtheappropriate action.Thecommand
functiondoesnotusethefourthargumentofProMenubuttonActionSet(),
butincludesadummyfirstargumentoftypeProAppData tomatchit,sothat
thesecondargumentisreceivedcorrectly.
ReturningaValuefromProMenuProcess()
Thefunction ProMenuDelete() closesthecurrentmenuandcausescontrolto
returnfromthecalltoProMenuProcess() thatmadethatmenuactive.Ifyou
wanttoclosethemenuundermorethanoneconditionandreacttothatcondition
inthecodethatfollowsthereturnfromProMenuProcess(), use
ProMenuDeleteWithStatus() insteadofProMenuDelete(). The
ProMenuDeleteWithStatus() functiontakesasingleintegerargument,
whichisthevaluereturnedbyProMenuProcess().
Example9:CreatingaMenuthatSelectsaValue
TheexamplecodeinthefileUgMenuValueSelect.c locatedat<creo_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichisthevaluereturnedbyProMenuProcess().
Example9:CreatingaMenuthatSelectsaValue
TheexamplecodeinthefileUgMenuValueSelect.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_menu
showsseveralnewtechniques forusingthemenufunctions. Thisexampleshows
howtouseProMenuDeleteWithStatus() andusesmoreofthearguments
toProMenubuttonActionSet().
Compound Menus
FunctionIntroduced:
•ProCompoundmenuCr eate()
TheProCompoundmenuCreate() functionenablesyoutotakeanarrayof
previously loadedmenunamesandappendthemtogetherintoonemenu.
ToCreateaCompound Menu:
1.Specifywhichsubmenus toincludeinthecompound menu,asfollows:
static char **compound_menu ={"MENU_1","MENU_2", "MENU_3",
""};
2.Loadtheactionsonthebuttons.
UserInterface:Menus,Commands, andPopupmenus 3253.Setthebuttonvisibilityandaccessibility .
4.Generatethecompound menu,asfollows:
ProCompoundmenuCreate (compound_menu, n_submenus);
5.Getuserinput,asfollows:
ProMenuProcess (compound_menu[0], action);
Preempting CreoParametric Commandsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx4.Generatethecompound menu,asfollows:
ProCompoundmenuCreate (compound_menu, n_submenus);
5.Getuserinput,asfollows:
ProMenuProcess (compound_menu[0], action);
Preempting CreoParametric Commands
Functions Introduced:
•ProMenubuttonPre actionSet()
•ProMenubuttonPostactionSet()
Inadditiontoaddingyourownmenusandmenubuttons,itissometimes usefulto
beabletomodifytheeffectofanexistingCreoParametric menubutton.The
function ProMenubuttonPreactionSet() enablesyoutocallyour
functionbeforetheCreoParametric command isexecuted.Iftheoperationis
beforetheupcoming command execution, andyouwanttocanceltheupcoming
command execution, return1.Otherwise, returnzero.
YoucouldalsocanceltheCreoParametric command, soonlyyourfunctiongets
called.Similarly,thefunction ProMenubuttonPostactionSet() enables
youtocallyourfunctionaftertheCreoParametric command isexecuted.
YoucanusetheProMenubuttonPreactionSet() functiontoprotect
certaincommands, sothattheusercanusethemonlyundercertaincircumstancesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyoutocallyourfunctionaftertheCreoParametric command isexecuted.
YoucanusetheProMenubuttonPreactionSet() functiontoprotect
certaincommands, sothattheusercanusethemonlyundercertaincircumstances
specifiedbyyourCreoParametric TOOLKITapplication. Forexample,youmay
wanttopreventtheuserfromsavingamodelunlessithaspassedacertain
validitycheck.
CallingProMenubutton*actionSet()
Thefunctions ProMenubuttonPreactionSet() and
ProMenubuttonPostactionSet() havethesameargumentsas
ProMenubuttonActionSet(). Thefunction
ProMenubuttonPreactionSet() insertsyourfunctionbeforeanexisting
CreoParametric command insteadofassigningittoanewbutton.Thefunction
ProMenubuttonPostactionSet() insertsyourfunctionafteranexisting
CreoParametric command.
BecauseyouarechangingthedefinitionofthemenuinCreoParametric, youmust
makesurethemenuisloadedintomemoryfirst,bycalling
ProMenuFileRegister().
Ifthecommand functionyouloadreturnsthevalue0,theCreoParametric
command forthatmenubuttonwillbeexecutedimmediately .IfyourfunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMenuFileRegister().
Ifthecommand functionyouloadreturnsthevalue0,theCreoParametric
command forthatmenubuttonwillbeexecutedimmediately .Ifyourfunction
returnsanyothervalue,theCreoParametric command willnotbeperformed.
326 Creo®Parametric TOOLKIT User’sGuideExample10:AskingforConfirmation onQuitWindow
TheexamplecodeinthefileUgMenuConfirmGet.c locatedat<creo_
toolkit_loadpoint>protk_appls/pt_userguide/ptu_menu
showshowtouseProMenubuttonPreactionSet() toasktheuserto
confirmaselection.TheexampleusesProMenubuttonPreactionSet() to
protectQuitWindow
Submenus
FunctionIntroduced:
•ProMenuCr eate()
Allthemenusdescribedsofarhavebeenmainmenus.Theothertypeofmenuis
calledasubmenu.Asubmenudiffersfromamainmenuinthefollowingways:
•Asubmenuisactiveatthesametimeasthemenuaboveit.Selectingfromthe
menuabovedoesnotclosethesubmenu.
•Asubmenudoesnotdisplayitstitle.
Ineffect,asubmenuactsasanextensiontothemenuaboveit.Thisenablesyouto
displaytwoactivemenusatthesametime,suchasifyouwanttheusertochoosexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmenuabovedoesnotclosethesubmenu.
•Asubmenudoesnotdisplayitstitle.
Ineffect,asubmenuactsasanextensiontothemenuaboveit.Thisenablesyouto
displaytwoactivemenusatthesametime,suchasifyouwanttheusertochoose
twooptionsfromtwoexclusivegroupsofvalues.
MakingaMenuaSubmenu
TomakeaMainMenuaSubmenu:
1.Displaythemenuabovethesubmenu,using ProMenuCreate().
2.Displaythesubmenu,using ProMenuCreate(), butmakethefirst
argument PROMENUTYPE_SUB insteadofPROMENUTYPE_MAIN.
3.CallProMenuProcess() forthesubmenuonly.Becauseitisasubmenu,
themenuaboveitwillbecomeactiveatthesametime.
4.Closebothmenus,usingeither ProMenuDelete() or
ProMenuDeleteWithStatus().
Manipulating Menus
FunctionIntroduced:
•ProMenubuttonLocationSet()
Thefunction ProMenubuttonLocationSet() providestheabilitytomove
aCreoParametric menubuttontoadifferentlocationonitsmenu,ortoaddnew
menubuttonstoaCreoParametric menusomewhere otherthanatthebottomof
themenu.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaCreoParametric menubuttontoadifferentlocationonitsmenu,ortoaddnew
menubuttonstoaCreoParametric menusomewhere otherthanatthebottomof
themenu.
UserInterface:Menus,Commands, andPopupmenus 327BeforeyoucallProMenubuttonLocationSet(), youmustmakesurethe
menuyouaremodifying hasbeenfullyloadedintomemory.Makesure
ProMenuFileRegister() hasbeencalled,and,whereappropriate,
ProMenuAuxfileRegister().
ThefirsttwoargumentsoftheProMenubuttonLocationSet() function
identifythemenuandthebutton,asinProMenubuttonActionSet().
Thefinalargumentisaswitchthatspecifieswheretomovethebutton.The
possiblevaluesareasfollows:
•0—Thebuttonbecomesthefirstinthemenu.
•1—Thebuttonisinsertedafterthecurrentfirstbutton.
•2—Thebuttonisinsertedafterthecurrentsecondbutton.
•–1—Thebuttonbecomesthelastbuttononthemenu.
DataMenus
Functions Introduced:
•ProMenuModeSet()
•ProMenuDatamodeSet()
Menuscanoperateintwomodes:
•PROMENUMODE_OPERATIONAL—The defaultmode.Thismodeisusedinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•–1—Thebuttonbecomesthelastbuttononthemenu.
DataMenus
Functions Introduced:
•ProMenuModeSet()
•ProMenuDatamodeSet()
Menuscanoperateintwomodes:
•PROMENUMODE_OPERATIONAL—The defaultmode.Thismodeisusedin
allthepreviousexamples. Onanoperational menu,onlyonebuttoniseverset
(thatis,displayedwitharedbackground) whilethatcommand isinprogress.
•PROMENUMODE_DATA—Each buttonremainssetuntilyouselectitagain.
Thisisusefulwhenthebuttonsdonotrepresentcommands, but,forexample,
asetofindependently selectable options.
Thefunction ProMenuModeSet() setsthemenumode.Fora
PROMENUMODE_DATA menu,youcanchoosetoindicatethesetbuttonswitha
checkmarkinsteadoftheusualredbackground byusingthefunction
ProMenuDatamodeSet().
CallingProMenuModeSet() andProMenuDatamodeSet()
Thefunction ProMenuModeSet() hastwoarguments:
•Themenutitle
•Themenumode(either PROMENU_MODE_OPERATIONAL or
PROMENUMODE_DATA)
Thefunction ProMenuDatamodeSet() hastwoarguments:
•Themenutitle.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMenuModeSet() hastwoarguments:
•Themenutitle
•Themenumode(either PROMENU_MODE_OPERATIONAL or
PROMENUMODE_DATA)
Thefunction ProMenuDatamodeSet() hastwoarguments:
•Themenutitle.
328 Creo®Parametric TOOLKIT User’sGuide•Thesetindicator,whichindicateswhichbuttonsareset.Thisargumentcan
haveeitherofthefollowingvalues:
○TRUE—Use acheckmark.
○FALSE—Use aredbackground. Thisisthedefaultvalue.
Bothofthesefunctionsmustbecalledafterthemenuhasbeenloadedinto
memory(using ProMenuFileRegister()), andbeforethemenuhasbeen
displayed(using ProMenuCreate()).
Ifyouwanttocreateamenuwhosebuttonsaredependent onrun-timedata,use
thefunction ProMenuStringsSelect(), describedlaterinthis
sectionchapter .
SettingMenuButtons
Functions Introduced:
•ProMenubuttonHighlight()
•ProMenubuttonUnhighlight()
Sometimes itisusefultobeabletosetandunsetmenubuttonsfromtheCreo
Parametric TOOLKITapplication. Forexample,ifyouareusingdatamenus,you
cansettheappropriate buttonswhenthemenuisdisplayedtoshowthecurrent
options.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKITapplication. Forexample,ifyouareusingdatamenus,you
cansettheappropriate buttonswhenthemenuisdisplayedtoshowthecurrent
options.
CallingProMenubuttonHighlight() and
ProMenubuttonUnhighlight()
BothProMenubuttonHighlight() and
ProMenubuttonUnhighlight() taketwoarguments—the menutitleand
buttonname.Bothfunctionsmustbecalledafterthemenuhasbeendisplayed
(using ProMenuCreate()), butbeforemakingthemenuinteractive (using
ProMenuProcess()). Contrasttheserulestotherulesforusing
ProMenuModeSet() andProMenuDatamodeSet().
Controlling Accessibility ofMenuButtons
Functions Introduced:
•ProMenubuttonActivate()
•ProMenubuttonDeactivate()
Amenubuttonthatisinaccessible isonethat,thoughcurrentlydisplayedona
menu,isgrayandhasnoeffectwhenitisselected.CreoParametric usesthis
facilityforoptionsthataretemporarily unavailable forsomereason.Forexample,
youcannotcreateaholeuntilyouhavecreatedthefirstprotrusion.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmenu,isgrayandhasnoeffectwhenitisselected.CreoParametric usesthis
facilityforoptionsthataretemporarily unavailable forsomereason.Forexample,
youcannotcreateaholeuntilyouhavecreatedthefirstprotrusion.
UserInterface:Menus,Commands, andPopupmenus 329Youcancontroltheaccessibility ofyourownmenubuttonsfromCreoParametric
TOOLKITusing ProMenubuttonActivate() and
ProMenubuttonDeactivate(). Eachfunctiontakestwoarguments:the
menutitleandbuttonname.Thesefunctionsmustbecalledwhenthemenuis
displayed(aftercalling ProMenuCreate()).
PushingandPoppingMenus
Functions Introduced:
•ProMenuV isibilityGet()
•ProMenuPush()
•ProMenuPop()
Sometimes CreoParametric temporarily hidescertainmenus,eventhoughthey
arestillincontext,tomakeroomforlower-levelmenus.Anexampleofthisis
whenyouselectMakeDatumduringfeaturecreation.Thisprocessiscalled
pushingmenus,becausetheyareputonastackfromwhichtheycanbepoppedto
makethemreappear.
Thefunction ProMenuVisibilityGet() tellsyouwhetherthespecifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpushingmenus,becausetheyareputonastackfromwhichtheycanbepoppedto
makethemreappear.
Thefunction ProMenuVisibilityGet() tellsyouwhetherthespecified
menuiscurrentlydisplayed. Ittakesoneinputargument—the menutitle.
Thefunction ProMenuPush() pushesthecurrentlowestmenu.Ittakesno
arguments.
Thefunction ProMenuPop() popsthemenufromthetopofthestack.Ittakes
noarguments.
Run-timeMenus
Functions Introduced:
•ProMenuStringsSelect()
•ProMenuFr omStringsRegister()
TheProMenuStringsSelect() functionenablesyoutosetupamenuatrun
time.Youdonotneedtosupplyamenufilebecausethebuttonsaredefinedwhen
youdisplaythemenu.Youcannotattachcommand functionstothebutton;arun-
timemenusimplyreturnsalistofthebuttonsselected.
Arun-timemenuisdisplayedtogetherwithasubmenuthatcontainsthefollowing
buttons:
•DoneSelect
•QuitSelect
•List
Thedefaultoption,List,causesthestringmenuitselftobedisplayed.
330 Creo®Parametric TOOLKIT User’sGuideYoucansetthemaximum numberofitemsyouwanttobeselectable. Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbuttons:
•DoneSelect
•QuitSelect
•List
Thedefaultoption,List,causesthestringmenuitselftobedisplayed.
330 Creo®Parametric TOOLKIT User’sGuideYoucansetthemaximum numberofitemsyouwanttobeselectable. The
functionreturnswhentheuserhasselectedthemaximum numberofitemsyou
specified,orhasselectedDoneorQuit.CreoParametric usesthistypeofmenuto
selectadiskfiletoberetrievedaftertheuserselectsSearch/Retr .
Themaximum sizeofthestringyouassigntoabuttonisPRO_NAME_SIZE -1.
PRO_NAME_SIZE isdefinedinfileProSizeConst.h.
Thefunction ProMenuFromStringsRegister() createsmenusatruntime
andattachesactionstothemenubuttons.Thefunctiontakesasargumentsallthe
information requiredtocreateauxiliary(*.aux)anduser-defined(*.mnu)menu
files.Thefirstargumentisthedefaultmenuname.Thenextargumentenablesyou
tospecifyanalternatenameforthemenuif,forinstance,yourapplication
supportsaforeignlanguage.Thelistofbuttonlabelsispassedtothefunctionas
anarrayofwidecharacterstrings.Aswiththemenuname,youcanprovidexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtospecifyanalternatenameforthemenuif,forinstance,yourapplication
supportsaforeignlanguage.Thelistofbuttonlabelsispassedtothefunctionas
anarrayofwidecharacterstrings.Aswiththemenuname,youcanprovide
alternatebuttonlabelsforforeignlanguagesupport.Youcanalsoprovideone-line
Helpforeachbutton.
Afteryouhaveregistered themenuwithacalltothefunction
ProMenuFromStringsRegister(), youcanattachactionstothebuttonsby
callingthefunction ProMenuButtonActionSet() foreachbutton.Youmust
alsodefineanexitactionforyourrun-timemenu.Todothis,call
ProMenuButtonActionSet() andsupplythenameofthemenuinsteadofa
buttonname.Finally,createthemenubycalling ProMenuProcess(), andthen
ProMenuCreate().
Customizing theCreoParametric
NavigationArea
TheCreoParametric navigation areaincludestheModelTreeandLayerTreepane,
FolderBrowserpane,andFavoritespane.Thefunctionsdescribedinthissection
enableCreoParametric TOOLKITapplications toaddcustompanestotheCreo
Parametric navigation area.ThecustompanescancontaincustomdialogboxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxenableCreoParametric TOOLKITapplications toaddcustompanestotheCreo
Parametric navigation area.Thecustompanescancontaincustomdialogbox
components orWEBpages.
AddingCustomWebPages
Toaddcustomwebpagestothenavigation area,theCreoParametric TOOLKIT
application must:
1.Addanewpanetothenavigation area.
2.Setaniconforthispane.
3.SettheURLofthelocationthatwillbedisplayedinthepane.
Functions Introduced:
•ProNavigatorpaneBr owserAdd()
UserInterface:Menus,Commands, andPopupmenus 331•ProNavigatorpaneBr owsericonSet()
•ProNavigatorpaneBr owserURLSet()
Thefunction ProNavigatorpaneBrowserAdd() addsanewpanethatcan
displayawebpagetothenavigation area.Theinputargumentsare:
•pane_name—Specify auniquenameforthepane.Usethisnamein
susbsequent callstoProNavigatorpaneBrowsericonSet() and
ProNavigatorpaneBrowserURLSet().
•icon_file_name—Specify thenameoftheiconfile,includingtheextension. A
validformatfortheiconfileis.GIF, .JPG,or.PNG.Thenewpaneis
displayedwiththeiconimage.IfyouspecifythevalueasNULL,thedefaultxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•icon_file_name—Specify thenameoftheiconfile,includingtheextension. A
validformatfortheiconfileis.GIF, .JPG,or.PNG.Thenewpaneis
displayedwiththeiconimage.IfyouspecifythevalueasNULL,thedefault
CreoParametric iconisused.
•url—Specify theURLofthelocationtobeaccessedfromthepane.
Usethefunction ProNavigatorpaneBrowsericonSet() tosetorchange
theiconofaspecifiedbrowserpaneinthenavigation area.
UsetheProNavigatorpaneBrowserURLSet() tochangetheURLofthe
pagedisplayedinthebrowserpaneinthenavigation area.
AddingCustomDialogBoxComponents
Toaddanewpanetothenavigation areabasedonCreoParametric TOOLKIT
dialogboxcomponents:
1.Addanewpanetothenavigation area.
2.Assignaniconforthepane.
3.AddtheCreoParametric TOOLKITdialogboxcomponents usingoneofthe
followingmethods:
•Assignresourcefilesthatdescribetheoverallstructureofthenew
navigation pane.Tocustomize thecomponents afterplacement inthe
navigation pane,getthewindowdevicenameandcomponent nameusingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Assignresourcefilesthatdescribetheoverallstructureofthenew
navigation pane.Tocustomize thecomponents afterplacement inthe
navigation pane,getthewindowdevicenameandcomponent nameusing
theCreoParametric TOOLKITfunctionsdescribedinthissectionandset
thenecessaryvaluesusingtheCreoParametric TOOLKITfunctions
describedinthechapterUserInterface:Dialogsonpage339
•Tobuildthelayoutofthedialogboxprogrammatically ,obtainthewindow
devicenameandlayoutname.Addeachcomponent tothelayoutas
desiredusingCreoParametric TOOLKITuserinterfacefunctions
describedinthechapterUserInterface:Dialogsonpage339.
Functions Introduced:
•ProNavigatorpanePHolderAdd()
•ProNavigatorpanePHolderDelete()
332 Creo®Parametric TOOLKIT User’sGuide•ProNavigatorpanePHolderShow()
•ProNavigatorpanePHolderHide()
•ProNavigatorpanePHolderDevicenameGet()
•ProNavigatorpanePHolderLayoutGet()
•ProNavigatorpanePHolderComponentnameGet()
•ProNavigatorpanePHolderHelptextSet()
Thefunction ProNavigatorpanePHolderAdd() addsalayoutthatwillbexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProNavigatorpanePHolderLayoutGet()
•ProNavigatorpanePHolderComponentnameGet()
•ProNavigatorpanePHolderHelptextSet()
Thefunction ProNavigatorpanePHolderAdd() addsalayoutthatwillbe
displayedinthenewpaneinthenavigation area.Theinputarguments are:
•pane_name— Specifyauniquenameforthepane.
•resour ce_name—Specify thenameoftheresourcefiletouse(whosetop
component mustbealayout,notadialogbox).Thecontentsofthelayout
fromthespecifiedresourcefilewillbeinsertedintothecustompane.
•icon_file_name—Specify thenameoftheiconfile,includingtheextension. A
validformatfortheiconfileis.GIF, .JPG,or.PNG.Thenewpaneis
displayedwiththeiconimage.IfyouspecifythevalueasNULL,thedefault
CreoParametric iconisused.
Thefunction ProNavigatorpanePHolderDelete() deletesthespecified
panefromthenavigation area.
Usethefunctions ProNavigatorpanePHolderShow() and
ProNavigatorpanePHolderHide() toshowandhidethespecifiedpanein
thenavigation area.
Thefunction ProNavigatorpanePHolderLayoutGet() returnsthelayoutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunctions ProNavigatorpanePHolderShow() and
ProNavigatorpanePHolderHide() toshowandhidethespecifiedpanein
thenavigation area.
Thefunction ProNavigatorpanePHolderLayoutGet() returnsthelayout
nameforthespecifiedpaneinthenavigation area.Youcancreateandplacethe
userinterfacecomponents withinthislayout.
Components addedtothecustompaneactuallybelongtotheCreoParametric
mainwindowdialog.CreoParametric automatically modifiesthenamesof
components loadedfromresourcefilestoensurethatnonamecollisionsoccur
whenthecomponents areadded.Thefunctions
ProNavigatorpanePHolderDevicenameGet() and
ProNavigatorpanePHolderComponentnameGet() allowyoutolocate
thenamesofcomponents thatyouneedtoaccess.
Usethefunction ProNavigatorpanePHolderDevicenameGet() to
obtainnameoftheCreoParametric windowowningthenewpaneinthe
navigation area.
Usethefunction ProNavigatorpanePHolderComponentnameGet() to
obtainthecompletenameofthecomponent inthenavigation pane,ifloadedfrom
alayout.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnavigation area.
Usethefunction ProNavigatorpanePHolderComponentnameGet() to
obtainthecompletenameofthecomponent inthenavigation pane,ifloadedfrom
alayout.
UserInterface:Menus,Commands, andPopupmenus 333Usethedevicenameandthecomponent nametoaddorupdatetheplacement of
thecomponents inthelayoutwiththehelpoftheProUI*functions. Formore
information ontheuserinterfacefunctions, refertothechapterUserInterface:
Dialogsonpage339.
Thefunction ProNavigatorpanePHolderHelptextSet()sets thepopup
helptext,whichisdisplayedwhenyoupointoverthenavigatorpanecomponent.
Example11:Customizing theCreoParametric
NavigationPane
ThesamplecodeinthefileUgNavigatorPane.c locatedat<creo_
toolkit_loadpoint>protk_appls/pt_userguide/ptu_menu
showsyouhowtocustomize theCreoParametric navigation pane.
Registering Notifications toAddandDestroy
ContenttoaNewPane
Thenavigation panesareavailableineverywindowwithinaCreoParametric
session.Notifications areprovidedtotheCreoParametric TOOLKITapplicationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRegistering Notifications toAddandDestroy
ContenttoaNewPane
Thenavigation panesareavailableineverywindowwithinaCreoParametric
session.Notifications areprovidedtotheCreoParametric TOOLKITapplication
whenaCreoParametric windowpopulated withamodelsothattheapplication
canaddthenecessarycontentstothenewpaneuponthisevent.Similarly,
notifications areprovidedbeforeamodelisremovedfromaCreoParametric
windowsothattheapplication cancleanupresourcesrelatedtoaddedpanes.For
moreinformation onusingnotifications seethechapterEvent-driven
Programming: Notifications onpage1982.
Functions Introduced:
•ProNotificationSet()
•ProWindowOccupyPostAction()
•ProWindowV acatePr eAction()
Specifytheargument typeofthefunction ProNotificationSet() toPRO_
WINDOW_OCCUPY_POST, tocallthecallbackfunctionwhosesignaturematches
ProWindowOccupyPostAction(). ThisfunctioniscalledwhenanewCreo
Parametric windowiscreated,orwhenthebasewindowispopulated andisused
bytheapplication toaddthenecessarycontenttothenewpaneinthenavigationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProWindowOccupyPostAction(). ThisfunctioniscalledwhenanewCreo
Parametric windowiscreated,orwhenthebasewindowispopulated andisused
bytheapplication toaddthenecessarycontenttothenewpaneinthenavigation
area.
Specifytheargument typeofthefunction ProNotificationSet() toPRO_
WINDOW_VACATE_PRE, tocallthecallbackfunctionwhosesignaturematches
ProWindowVacatePreAction(). ThisfunctioniscalledwhenaCreo
Parametric windowisclosed,orwhenthebasewindowgetscleared.Usethis
functiontofreememoryallocatedbytheCreoParametric TOOLKITapplication
toaddcontentinthenavigation pane.
334 Creo®Parametric TOOLKIT User’sGuideEnteringCreoParametric Commands
Functions Introduced:
•ProMacr oLoad()
•ProMacr oExecute()
•ProMenuCommandPush()
Thefunction ProMacroLoad() loadsamacrostringoramapkeyontoastack
ofmacrosthatareexecutedaftercontrolreturnstoCreoParametric. ACreo
Parametric TOOLKITmacroisastring.Themacrostringisequivalent toa
mapkeywithoutthekeysequenceandthemapkeyname.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofmacrosthatareexecutedaftercontrolreturnstoCreoParametric. ACreo
Parametric TOOLKITmacroisastring.Themacrostringisequivalent toa
mapkeywithoutthekeysequenceandthemapkeyname.
Note
ProMacroLoad() failsifamacrostringcontainsabackslashorifa
command splitsovertwolineswithorwithoutabackslash. Amacrostringcan
containmultiplecommands separatedbysemicolons. However,each
command shouldentirelyappearinasingleline.
Thefunction ProMacroLoad() enablesyoutoexecutethecommands created
bytheCreoParametric TOOLKITapplication usingthefollowingmacro:
~Command `<command name>`
ClickMapkeysSettingsintheEnvironment taboftheCreoParametric Options
dialogboxtocreateamapkeyintheCreoParametric userinterface.Copythe
valueofthegeneratedmapkeyoptionfromtheConfiguration EditorintheCreo
Parametric Optionsdialogbox.Anexampleofacreatedmapkeyisasfollows:
$F2 @MAPKEY_LABELtest;
~Command `ProCmdModelNew`
~Activate `new` `OK`
Thekeysequenceis$F2..Theremainder ofthestringafterthefirstsemicolon isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx$F2 @MAPKEY_LABELtest;
~Command `ProCmdModelNew`
~Activate `new` `OK`
Thekeysequenceis$F2..Theremainder ofthestringafterthefirstsemicolon is
themacrostring.Inthiscase,itisasfollows:
~Command `ProCmdModelNew`
~Activate `new` `OK`
Youcaneitherpassthemapkeydirectlyorthegeneratedmacrostringto
ProMacroLoad(). Passthemapkeydirectlyas%key_sequence.
Note
Creatingoreditingthemacrostringmanuallyisnotsupported, asmapkeysare
notasupported scriptinglanguage.Thesyntaxisnotdefinedforusersand
maynotremainconstantacrossdifferentdatecodes ofCreoParametric.
UserInterface:Menus,Commands, andPopupmenus 335ExecutionRules
Considerthefollowingrulesabouttheexecutionofmacros:
•Inasynchronous mode,macrosareexecutedassoonastheyareloadedwith
ProMacroLoad().
•Insynchronous mode,themapkeyorthemacrostringsarepushedontoastack
andarepoppedoffandexecutedonlywhencontrolreturnstoCreoParametric
fromtheCreoParametric TOOLKITprogram.Duetothelastin,firstout
natureofthestack,macrosthatcannotbepassedentirelyinonexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandarepoppedoffandexecutedonlywhencontrolreturnstoCreoParametric
fromtheCreoParametric TOOLKITprogram.Duetothelastin,firstout
natureofthestack,macrosthatcannotbepassedentirelyinone
ProMacroLoad() callshouldhavethestringsloadedinreverseorderof
desiredexecution.
•ToexecuteamacrofromwithinCreoParametric TOOLKIT,callthefunction
ProMacroExecute(). ThefunctionrunstheCreoParametric macroand
returnsthecontroltotheCreoParametric TOOLKITapplication. Itexecutes
themacrospreviously loadedusingthefunction ProMacroLoad(). The
functionworksonlyinthesynchronous mode.
•Donotcallthefunction ProMacroExecute() duringthefollowing
operations:
○Activating dialogboxesorsettingthecurrentmodel
○Erasingthecurrentmodel
○Replaying atrailfile
•ClickingtheOKbuttononthedialogboxtocompletethecommand operation.
Inthiscase,thedialogboxmaybedisplayedmomentarily withoutcompleting
thecommand operation.
Note
○Youcanexecuteonlythedialogboxeswithbuilt-inexitconfirmation as
macros,bycancelingtheexitaction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxInthiscase,thedialogboxmaybedisplayedmomentarily withoutcompleting
thecommand operation.
Note
○Youcanexecuteonlythedialogboxeswithbuilt-inexitconfirmation as
macros,bycancelingtheexitaction.
○Itispossiblethatamacromaynotbeexecutedbecauseacommand
specifiedinthemacroiscurrentlyinaccessible inthemenus.The
functional successofProMacroExecute() dependsonthepriorityof
theexecutedcommand againstthecurrentcontext.
•Ifsomeofthecommands askforaninputtobeenteredfromthekeyboard
(suchasapartname),themacrocontinuesexecutionafteryoutypetheinput
andpress ENTER.However,ifyoumustselectsomething withthemouse
(suchasselectingasketchingplane),themacroisinterrupted andignoresthe
remaining commands inthestring.
336 Creo®Parametric TOOLKIT User’sGuideThisallowstheapplication tocreateobject-independent macrosforlong
sequences ofrepeatingchoices(aslongastheuserdoesnothavetoselectany
geometry).
AProStringToWstring() callfordefiningthemacrostringmustbe
followedbythefollowingcalls:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsequences ofrepeatingchoices(aslongastheuserdoesnothavetoselectany
geometry).
AProStringToWstring() callfordefiningthemacrostringmustbe
followedbythefollowingcalls:
•ProMacroLoad(macro wstring) toloadthemacrostringsorthe
mapkey
•ProMacroExecute() toexecutethemacro
Somesamplemacrosinvariousscenariosaregivenbelow.
RibbonUserInterfaceMacros
Thefollowingsingleentryandexittypeofinteractions aresupported by
ProMacroExecute().
•Toswitchthewireframe displayofmodel,usethemacro:
Command `ProCmdEnvWireframe` 1
•Toswitchtheshadeddisplayofmodel,usethemacro:
~Command `ProCmdEnvShaded` 1
•Youcanswitchthedisplayfordatumplanesanddatumaxesusingthe
followingmacros:
○DatumPlanes
~Command `ProCmdEnvDtmDisp` 1
○DatumAxes
~Command `ProCmdEnvAxisDisp` 0
•Torepaintamodel,usethemacro:
~Command `ProCmdViewRepaint`
•Togetthedefaultmodelorientation, usethemacro:
~Command `ProCmdNamedViewsGalSelect` `Default`
•Togetthemodelinformation, usethemacro:
~Command `ProCmdInfoModel`
MacrosForFeatureCreationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Togetthedefaultmodelorientation, usethemacro:
~Command `ProCmdNamedViewsGalSelect` `Default`
•Togetthemodelinformation, usethemacro:
~Command `ProCmdInfoModel`
MacrosForFeatureCreation
Thefollowingmacrosareusedwhilecreatingthefollowingfeatures.
•Tocreateaholefeature,usethemacro:
~Command `ProCmdHole`
•Toextrudeafeature,usethemacro:
~Command `ProCmdFtExtrude`
•Tocreateadatumplane,usethemacro:
~Command `ProCmdDatumPlane`
UserInterface:Menus,Commands, andPopupmenus 337CreoParametric NavigatorMacros
ThefollowingmacrosareprovidedforCreoParametric navigator:
•Forfoldernavigator:
~Select `main_dlg_cur` `PHTLeft.ProExplorerTab` 1`PHTLeft.
Folders`
•ForFavoritesnavigator:
~Select `main_dlg_cur` `PHTLeft.ProExplorerTab` 1`PHTLeft.
FavLay`
•FortheModelTree:
~Select `main_dlg_cur` `PHTLeft.ProExplorerTab` 1`PHTLeft.
MdlTreeLay`
Thefunction ProMenuCommandPush() placesthenameofaspecificmenu
buttoninthecommand inputbufferforCreoParametric. Thiscommand isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx~Select `main_dlg_cur` `PHTLeft.ProExplorerTab` 1`PHTLeft.
MdlTreeLay`
Thefunction ProMenuCommandPush() placesthenameofaspecificmenu
buttoninthecommand inputbufferforCreoParametric. Thiscommand is
executedaftercontrolreturnstoCreoParametric fromtheCreoParametric
TOOLKITapplication, asifyouhaveselectedthatmenubutton.Thismenu
buttonmustbefromthemenuthatiscurrentlydisplayedintheCreoParametric
userinterface.
SpecifyingKeyboardInput
Youcanspecifykeyboardinputwithinthecommand string.Aspreviously
specified,amacromustbeprecededbyapoundsign(#)andterminated bya
semicolon. Ifthefieldafterthesemicolon doesnotstartwithapoundsign,the
datauptothenextsemicolon isusedasinputatthenextkeyboardprompt.Ifthe
command currentlybeingexecuteddoesnotrequestkeyboardinput,thesystem
ignoresthiskeyboarddata.Notethatkeyboarddataiscase-sensitive andspaces
arenotignored.Acarriagereturnisindicatedwhennodataappearsbetweenthe
semicolons.
Note
Notethatthecorrectness ofthesequenceistheresponsibility oftheuser.PTCxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarenotignored.Acarriagereturnisindicatedwhennodataappearsbetweenthe
semicolons.
Note
Notethatthecorrectness ofthesequenceistheresponsibility oftheuser.PTC
doesnotguaranteethatasequencewillbevalidfromoneversionofCreo
Parametric toanother.
338 Creo®Parametric TOOLKIT User’sGuide18
UserInterface:Dialogs
Introduction.............................................................................................................341
UIComponents .......................................................................................................342
CascadeButton......................................................................................................353
Checkbutton ...........................................................................................................354
DrawingArea..........................................................................................................356xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDrawingArea..........................................................................................................356
InputPanel.............................................................................................................365
Label......................................................................................................................368
Layout....................................................................................................................370
List.........................................................................................................................372
Menubar.................................................................................................................375
Menupane..............................................................................................................376
Optionmenu ............................................................................................................378xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOptionmenu ............................................................................................................378
Progressbar ............................................................................................................380
Pushbutton.............................................................................................................382
Radiogroup.............................................................................................................384
Separator...............................................................................................................386
Slider......................................................................................................................387
Spinbox..................................................................................................................389
Tab.........................................................................................................................391xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTab.........................................................................................................................391
Table......................................................................................................................394
Textarea.................................................................................................................402
Thumbwheel ...........................................................................................................405
Tree.......................................................................................................................407
MasterTableofResourceFileAttributes...................................................................419
UsingResourceFiles...............................................................................................438
339ThischapterdescribestheUserInterface(UI)components availableinPro/
TOOLKITforPro/ENGINEER Wildfire3.0onwards.Thefollowingsectionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx339ThischapterdescribestheUserInterface(UI)components availableinPro/
TOOLKITforPro/ENGINEER Wildfire3.0onwards.Thefollowingsections
introduceeachofthedialogcomponent types,operations andcallbacksavailable
foreachcomponent, andthemethodsandtechniques thatcanbeusedto
instantiate andshowcustomized userinterfacedialogs.
340 Creo®Parametric TOOLKIT User’sGuideIntroduction
Thischapterincludesdocumentation foreachUIcomponent. Thedocumentation
isdividedintothefollowingsections:
•Attributes—Defines thenamesandfunctionsthataffectattributesontheUI
component. Eachcomponent supportsitsownsetofuniqueattributes;
however,someattributesaresupported bymorethanonecomponent. Because
ofthefactthatattributestypicallyworkonmorethanonecomponent, detailed
documentation fortheattributesisincludedinamastertableattheendofthis
chapter.
•Operations—Defines thecomponent-specific functionsthatmakemore
detailedmodifications tothecomponents.
•Actions—Defines thefunctionsthatregisteractioncallbacksonacomponent.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxchapter.
•Operations—Defines thecomponent-specific functionsthatmakemore
detailedmodifications tothecomponents.
•Actions—Defines thefunctionsthatregisteractioncallbacksonacomponent.
Note
FromCreo3.0onward,anewtool,CreoUIEditor,allowsyoutointeractively
createandeditdialogboxesforCreoObjectTOOLKITC++andCreoObject
TOOLKITJavacustomizations. Itprovidesalibraryofgraphicaluser
interfacecomponents suchasbuttons,lists,andsoon.Thenewframework,
UserInterfaceFoundation Classes(UIFC),providesenhancedattributesand
actionsfortheuserinterfacecomponents. TheUIFCframework isavailablein
CreoObjectTOOLKITC++andCreoObjectTOOLKITJava.Youcan
generatecallbacksinCreoObjectTOOLKITC++orCreoObjectTOOLKIT
Java.RefertotheCreoUIEditor User’sGuide,formoreinformation.
AboutCreoParametric TOOLKITSupportforUser
Interface
CreoParametric TOOLKITallowsapplications tocreatedialogsanddashboards
withthesamelookandfeelasthoseinCreoParametric. CreoParametric
TOOLKITuserscanaccomplish thistaskbyfollowingthefollowingsteps:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKITallowsapplications tocreatedialogsanddashboards
withthesamelookandfeelasthoseinCreoParametric. CreoParametric
TOOLKITuserscanaccomplish thistaskbyfollowingthefollowingsteps:
•EstablishthemainUIcontainerobject.Thisiseitheradialogoradashboard.
Optionally ,thiscanbereadfromaresourcefiletoprepopulate thecontainer
withspecificcomponents.
•Addcomponents tothecontainer(iftheydonotalreadyexist).
•Setattributesoncomponents inthecontainer.
UserInterface:Dialogs 341•Executeoperations oncomponents inthecontainer.Operations alsomodify
thecomponent, buttypicallymakemoredetailedorsophisticated changesthan
settinganindividual attribute.
•Establishactionfunctioncallbacksoncomponents inthecontainer.Action
functionsarecalledwhentheuserinteractswiththecomponent insomeway.
Theyallowtheapplication toreacttouserevents.
•Showthedialogordashboard.
•Basedonuseractions,eventually youwillneedtoclosethecontainer.
•"Destroy" thecontainertofreeuptheresourcesituses.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheyallowtheapplication toreacttouserevents.
•Showthedialogordashboard.
•Basedonuseractions,eventually youwillneedtoclosethecontainer.
•"Destroy" thecontainertofreeuptheresourcesituses.
Note
ThefunctionsdescribedinthissectiondonotsupportusingCreo
Parametric TOOLKITtomodifystandardCreoParametric dialogs.
TheUIfunctionlibraryisintegraltoCreoParametric, nottheCreoParametric
TOOLKITlibraries;thus,thelibrarycanonlybeusedwhileaCreoParametric
sessionisactive.Thelibrarycannotbeusedtodisplayuserinterfaceswhenthe
application isnotconnected toCreoParametric runninginteractively .
UIComponents
Thebehaviorandusesofthedifferentcomponent typesisintroduced briefly
below,anddescribedinmoredetailinlatersections.Thecomponent typesare:
•Tab—partofadialogthatcancontainseveralgroupsofcomponents,
formattedsuchthatonlyonegroupisvisibleatatime.ATabcomponent must
alwayscontainasetofLayoutcomponents; eachlayoutcontainsthe
components thatmustdisplayedatonetime.TheFigure-‘AllComponentsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxformattedsuchthatonlyonegroupisvisibleatatime.ATabcomponent must
alwayscontainasetofLayoutcomponents; eachlayoutcontainsthe
components thatmustdisplayedatonetime.TheFigure-‘AllComponents
Dialog’showsadecoratedTabwhichdisplaysahandleoneachlayoutto
allowtheusertoselectwhichlayoutisvisible.
•Layout—an areaofadialogwhichcancontainanynumberofotherdialog
components. ALayoutcanbeusedtobettercontroltherelativepositionof
components inadialog,byallowingthegridsindifferentpartsofthedialogto
adoptunaligned rowsorcolumns.AlayoutcanalsobeusedinsideaTab
component.
•CheckButton—a buttonwhichtogglesbetweenaTRUEandFALSEstate
eachtimetheuserselectsit.
•DrawingArea—acomponent whichallowspoints,lines,shapes,imagesand
text(including symbols)tobedrawninavarietyofcolors.
342 Creo®Parametric TOOLKIT User’sGuide•InputPanel—aboxcontaining asinglelineoftext.TheInputPanelmaybeset
toexpecttextindifferentformats,forexamplearealnumberoraninteger.
TheInputPanelmayalsobesettoberead-only,whenitisusedbythexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoexpecttextindifferentformats,forexamplearealnumberoraninteger.
TheInputPanelmayalsobesettoberead-only,whenitisusedbythe
application toshowinformation totheuser.
•Label—atextstringusedtolabeltheothercomponents.
•List—aboxcontaining alistoftextstrings,whichcanbeselectedbytheuser.
UserscansettheListtoallowselectionofonlyoneitematatime,ormore
thanone.
•OptionMenu—asingle-line boxwhichallowsselectionofasingletextstring
fromalistofoptions.Theselectionisdoneusingapull-down menu,which
appearswhenabuttonnexttothetextboxisselected.
•ProgressBar—acomponent whichshowstheprogressofatime-consuming
action.
•PushButton—a buttonwhichperformssomeactionwhenitisselected.Itdoes
notcontainanyremembered state.PushButtonsappearonalmosteverydialog
asOKandCancelbuttons.
•RadioGroup—a setofbuttonswhichindividually actlikecheckbuttons,but
whichareconnected toeachothersuchthatonlyonecanbesettoTRUEat
anytime.Selectingonebuttonsetsthatbuttonandunsetsallothersinthe
group.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•RadioGroup—a setofbuttonswhichindividually actlikecheckbuttons,but
whichareconnected toeachothersuchthatonlyonecanbesettoTRUEat
anytime.Selectingonebuttonsetsthatbuttonandunsetsallothersinthe
group.
•Separator—a separatorisforcosmeticpurposesonly,andhelpstovisually
dividecomponents intologicalgroups.
•Slider—adevicewhichallowstheusertosetavalueinapredefined rangeby
movingahandlewiththemouse.Useslidersinsituationswhereanexact
valuemaynotbeneeded.Aslidershouldusuallybetiedprogrammatically
witharead-onlyinputpaneltoshowthecurrentvalue.
•Spin-Box—a boxcontaining asinglenumerical valuethatcanbedirectly
edited.Thespinboxalsohasup-anddown-arrow buttonsforincreasing or
decreasing thevalueinsteps.Asingleclickincrements ordecrements bya
singlestep.Holdingabuttondownmakesthevaluechangeinrepeatedsteps,
firstsmallstepsandthenlargesteps.Thestepsizescanbesetforeachspin
box.
•Table—asetoftabulatedrowsandcolumnscontaining textandother
components.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfirstsmallstepsandthenlargesteps.Thestepsizescanbesetforeachspin
box.
•Table—asetoftabulatedrowsandcolumnscontaining textandother
components.
•TextArea—aboxcontaining unformatted textcontaining anynumberoflines.
Itmaybesettoberead-onlyandusedbytheapplication tooutputinformation
totheuser.
UserInterface:Dialogs 343•Thumbwheel—a thumbwheel issimilartosliderbutprovidesfinercontrol
overawiderrangeofvalues.Unliketheslider,itdoesnotprovideavisual
indication ofthecurrentvalue.
•Tree—atreecontainsnodeswhicharestructured anddisplayedina
hierarchical formation.
NamingConvention forUIComponents
Thevalidcharacters fornamingUIcomponents are:
•AtoZ(uppercase)
•atoz(lowercase)
•0to9
•Underscore( _)
•Hypen(-)
Usinganyothercharacters inUIcomponent namesmayresultinanerror.
MenubarsandMenubarComponents
Adialogcanalsocontainitsownmenubar.Thesemenubarssupportcascading
menus.
SeeExample15:ResourceFileforDialogwithMenubaronpage451forresource
filecodeforthisexample.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMenubarsandMenubarComponents
Adialogcanalsocontainitsownmenubar.Thesemenubarssupportcascading
menus.
SeeExample15:ResourceFileforDialogwithMenubaronpage451forresource
filecodeforthisexample.
Thefollowingcomponents areusedtodefinemenubarsandtheirdependent
menus:
•Menubar—The menubaritselfisjustacontainerforthemenupanes.Adialog
cancontainonlyonemenubar,anditmustcontainatleastoneother
component atthetoplevel.
•MenuPane—A menupanedescribesabuttononamenubarandalsoactsasa
containerforthecomponents onthepull-down menuthatappearswhenthe
userselectsthemenupanebutton.
•Cascadebutton—A buttononapull-down menuthatcontainsitsown
menupane. Selectingthecascadebuttonpullsoutthemenudescribedbythe
menupane.
Thefollowingcomponents describedintheprevioussectioncanalsobeaddedto
menupanes,butinthiscasetheirappearance isautomatically modifiedtosuitthe
styleofpull-down menus:
•CheckButton—This lookslikearegularmenubutton,butinfacttogglesits
state.When TRUE,itshowsacheckmarknexttothelabel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstyleofpull-down menus:
•CheckButton—This lookslikearegularmenubutton,butinfacttogglesits
state.When TRUE,itshowsacheckmarknexttothelabel.
344 Creo®Parametric TOOLKIT User’sGuide•PushButton—When addedtoamenupaneapushbutton represents a
command thatcausessomeaction.
•RadioGroup—A radiogrouponamenupanebehavesexactlyasitwouldin
thebodyofadialog,althoughtheappearance isratherdifferent,asshownin
thepictureabove.
•Separator—A separatorcanbeusedtogroupbuttonsonamenupane.
DialogAttributes
Attribute
NameGetFunction SetFunction(s)
.AttachBot
tomonpageProUIDialogIsAttachedBottom() ProUIDialogAttachBottom()
ProUIDialogUnattachBottom()
.AttachTop
onpageProUIDialogIsAttachedTop() ProUIDialogAttachTop()
ProUIDialogUnattachTop()
.Attach
Right on
pageProUIDialogIsAttachedRight() ProUIDialogAttachRight()
ProUIDialogUnattachRight()
.AttachLeft
onpageProUIDialogIsAttachedLeft() ProUIDialogAttachLeft()
ProUIDialogUnattachLeft()
.BottomOff
setonpageProUIDialogBottomoffsetGet() ProUIDialogBottomoffsetSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUIDialogUnattachRight()
.AttachLeft
onpageProUIDialogIsAttachedLeft() ProUIDialogAttachLeft()
ProUIDialogUnattachLeft()
.BottomOff
setonpageProUIDialogBottomoffsetGet() ProUIDialogBottomoffsetSet()
.Bitmap on
pageProUIDialogBitmapGet() ProUIDialogBitmapSet()
.ChildNames
onpageProUIDialogChildnamesGet() NotApplicable
.ClassName
onpageProUIComponentClassnameGet() NotApplicable
.DefaultBut
tononpageProUIDialogDefaultbuttonGet() ProUIDialogDefaultbutton
Set()
.Dialog
Style on
pageProUIDialogDialogstyleGet() ProUIDialogDialogstyleSet()
.Focus on
pageNotApplicable ProUIDialogFocusSet()
.Height on
pageProUIDialogHeightGet() ProUIDialogHeightSet()
.HorzAt
Point on
pageProUIDialogHorzatpointGet() ProUIDialogHorzatpointSet()
.HorzDialog
onpageProUIDialogHorzdialogGet() ProUIDialogHorzdialogSet()
.HorzMethod
onpageProUIDialogHorzmethodGet() ProUIDialogHorzmethodSet()
.HorzPoint
onpageProUIDialogHorzpointGet() ProUIDialogHorzpointSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonpageProUIDialogHorzdialogGet() ProUIDialogHorzdialogSet()
.HorzMethod
onpageProUIDialogHorzmethodGet() ProUIDialogHorzmethodSet()
.HorzPoint
onpageProUIDialogHorzpointGet() ProUIDialogHorzpointSet()
.HorzPosOff ProUIDialogHorzposoffsetGet() ProUIDialogHorzposoffset
UserInterface:Dialogs 345Attribute
NameGetFunction SetFunction(s)
setonpage Set()
.HorzSize
onpageProUIDialogHorzsizeGet() ProUIDialogHorzsizeSet()
.Labels on
pageProUIDialogTitleGet() ProUIDialogTitleSet()
.LeftOffset
onpageProUIDialogLeftoffsetGet() ProUIDialogLeftoffsetSet()
.Mapped on
pageProUIDialogIsMapped() ProUIDialogMappedSet()
ProUIDialogMappedUnset()
.PopupMenu
onpageProUIDialogPopupmenuGet() ProUIDialogPopupmenuSet()
.RememberPo
sition on
pageProUIDialogRemembersPosition() ProUIDialogRememberPosi
tion()
ProUIDialogForgetPosition()
.Remember
Size onpageProUIDialogRemembersSize() ProUIDialogRememberSize()
ProUIDialogForgetSize()
.Resizeable
onpageProUIDialogIsResizeable() ProUIDialogEnableResizing()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUIDialogForgetPosition()
.Remember
Size onpageProUIDialogRemembersSize() ProUIDialogRememberSize()
ProUIDialogForgetSize()
.Resizeable
onpageProUIDialogIsResizeable() ProUIDialogEnableResizing()
ProUIDialogDisableResizing()
.RightOff
setonpageProUIDialogRightoffsetGet() ProUIDialogRightoffsetSet()
.StartLoca
tion onpageProUIDialogStartlocationGet() ProUIDialogStartlocation
Set()
.TopOffset
onpageProUIDialogTopoffsetGet() ProUIDialogTopoffsetSet()
.VertAt
Point on
pageProUIDialogVertatpointGet() ProUIDialogVertatpointSet()
.VertDialog
onpageProUIDialogVertdialogGet() ProUIDialogVertdialogSet()
.VertMethod
onpageProUIDialogVertmethodGet() ProUIDialogVertmethodSet()
.VertPoint
onpageProUIDialogVertpointGet() ProUIDialogVertpointSet()
.VertPosOff
setonpageProUIDialogVertposoffsetGet() ProUIDialogVertposoffset
Set()
.VertSize
onpageProUIDialogVertsizeGet() ProUIDialogVertsizeSet()
.Width on
pageProUIDialogWidthGet() ProUIDialogWidthSet()
DialogOperations
Functions IntroducedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
.VertSize
onpageProUIDialogVertsizeGet() ProUIDialogVertsizeSet()
.Width on
pageProUIDialogWidthGet() ProUIDialogWidthSet()
DialogOperations
Functions Introduced
•ProUIDialogCr eate()
346 Creo®Parametric TOOLKIT User’sGuide•ProUIDialogActivate()
•ProUIDialogComponentsCollect()
•ProUIDialogMinimumsizeGet()
•ProUIDialogSizeGet()
•ProUIDialogPositionReset()
•ProUIDialogReconfigure ()
•ProUIDialogScr eenpositionGet()
•ProUIDialogAboveactivewindowGet()
•ProUIDialogAboveactivewindowSet()
•ProUIDialogShow()
•ProUIDialogHide()
•ProUIDialogExit()
•ProUIDialogDestr oy()
•ProUIT imerCr eate()
•ProUIDialogT imerStart()
•ProUIDialogT imerStop()
•ProUIT imerDestr oy()
Thefunction ProUIDialogCreate() loadsadialogfromaresourcefileinto
memory.ItcanalsocreateanemptydialogbypassingaNULLvalueforthe
resourcefilename.Theinputargumentsfollow:
•session_dialog_name—Name ofthedialog.
•resour ce—Name oftheresourcefile.
Note
•Thefunction ProUIDialogCreate() requiresthattheresourcefilenamexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxresourcefilename.Theinputargumentsfollow:
•session_dialog_name—Name ofthedialog.
•resour ce—Name oftheresourcefile.
Note
•Thefunction ProUIDialogCreate() requiresthattheresourcefilename
inputmatchesthecaseoftheactualresourcefile.
•Thedialognamespecifiedintheresourcefileshouldmatchboththeinput
argument resour ceandthenameoftheresourcefilewithoutaddingthesuffix
name.
Thefollowingpointsmustbenotedwhiledeveloping CreoParametric TOOLKIT
applications:
•Resourcenamesofdialogsresourcesmustnotcoincidewiththeresourcesthat
aredefinedbyPTC.
UserInterface:Dialogs 347•Dialoginstanceorsessionnamesmustnotcoincidewiththeinstanceor
sessionnamesthataredefinedbyPTC.
•Youcanensureuniqueness inthedialogresourceandsessionnamesbyadding
aprefixthatspecifiesthenameoftheCreoParametric TOOLKITapplication.
Usethefunction ProUIDialogActivate()to displaythedialogonthe
screenandmakesitactivebysettingthekeyinputfocusonit.Thisfunction
returnsonlyafterthefunction ProUIDialogExit() hasbeencalledonthe
samedialog.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxscreenandmakesitactivebysettingthekeyinputfocusonit.Thisfunction
returnsonlyafterthefunction ProUIDialogExit() hasbeencalledonthe
samedialog.
Usethefunction ProUIDialogComponentsCollect() toreturnthenames
ofcomponents inthisdialog.Thisfunctioncanalsofiltercomponents bytheir
type.
Note
RefertothesectionUIComponents onpage342forthepredefined listof
component types.
Usethefunction ProUIDialogMinimumsizeGet() togettheminimumsize
ofthedialoginpixels.
Usethefunction ProUIDialogSizeGet() togetthesizeofthedialog.
Usethefunction ProUIDialogPositionReset() toresetthedialoginits
previousscreenposition.
Usethefunction ProUIDialogReconfigure() toresetthesizeandposition
ofthedialog.
Usethefunction ProUIDialogScreenpositionGet() getthescreen
positioninpixelsofthedialogcomponent.
Usethefunction ProUIDialogAboveactivewindowGet() tochecksifthe
dialogisalwaysgoingtobeabovetheCreoParametric dialogscurrentlyactivein
theCreoParametric window.
Usethefunction ProUIDialogAboveactivewindowSet() tosetfocusofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdialogisalwaysgoingtobeabovetheCreoParametric dialogscurrentlyactivein
theCreoParametric window.
Usethefunction ProUIDialogAboveactivewindowSet() tosetfocusof
thedialogaboveanydialoginthecurrentlyactiveCreoParametric window.
Note
UsingtheProUIDialogAboveactivewindowSet() allowsCreo
Parametric TOOLKITapplications toalwaysstayinfocusintheCreo
Parametric windowduringopeningandclosingeventsofCreoParametric.
348 Creo®Parametric TOOLKIT User’sGuideUsetheProUIDialogDestroy() toremovethedialoginstancefrommemory
asitisnotautomatically removed.
Usethefunction ProUIDialogShow() toshowasecondary windowwhenthe
primarywindowisbeingrestored.
Usethefunction ProUIDialogHide() toiconifyasecondary windowwhen
theprimarywindowisbeingminimized.
Usethefunction ProUIDialogExit() toterminatetheactivation ofthe
nameddialogwindow.Thefunctioncausesareturnfromthecallto
ProUIDialogActivate() thatmakeitactive.
Usethefunction ProUIDialogDestroy() toremovethedialogfromthe
memory.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnameddialogwindow.Thefunctioncausesareturnfromthecallto
ProUIDialogActivate() thatmakeitactive.
Usethefunction ProUIDialogDestroy() toremovethedialogfromthe
memory.
YoucansetatimertoscheduleanactiontobeexecutedlaterinCreoParametric
session.Thefunction ProUITimerCreate() createsatimerandregistersthe
action.fyoucallthefunction ProUITimerCreate() withtimer_name that
alreadyexistsinthesession,itreturnsanerror.Theinputargumentsforthe
functionare:
•action—Specifies calltotheactioncallbackfunction
ProUITimerAction(). Youcaninvoketheactioncallbackonlyonce
fromthefunction ProUIDialogTimerStart(). Toruntheactionagain,
youmustcallProUIDialogTimerStart() again.
•appdata—Specifies thedatathatwillbepassedtotheactioncallback.
•timer_name—Specifies thenameofthetimer.
ThefunctionreturnstheIDofthetimer,whichwillbeusedtostartandstopthe
timer.
Usethefunction ProUIDialogTimerStart() tostartthetimer.Theactionis
executedafterthespecifiedintervaloftime.Theinputargumentsare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtimer.
Usethefunction ProUIDialogTimerStart() tostartthetimer.Theactionis
executedafterthespecifiedintervaloftime.Theinputargumentsare:
•dialog—Specifies thenameofthedialogbox.Youcaninvokeonlyonetimer
atatimeforadialogbox.
•timer_id—Specifies theIDofthetimer,whichwasreturnedbythefunction
ProUITimerCreate().
•duration—Specifies thetimeintervalinmilliseconds afterwhichtheaction
mustbeexecuted.Theminimumvalueissetto500milliseconds.
•write_in_trail_file—Specifies ifthetimeractionmustberecordedinatrail
file.
Thefunction ProUIDialogTimerStop() stopsthetimerandtheactionwill
notbeexecuted.SpecifytheIDofthetimerastheinputargument.
UserInterface:Dialogs 349Thefunction ProUITimerDestroy() removesthespecifiedtimer,whichwas
createdusingthefunction ProUITimerCreate(). Ifthetimertoberemoved
hasalreadybeenstarted,itisfirststopped,andthenremoved.PasstheIDofthe
timerastheinputargument.Afterthetimerisremoved,itsnameisavailablefor
useagain.Youcanspecifythenametoanewtimer.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhasalreadybeenstarted,itisfirststopped,andthenremoved.PasstheIDofthe
timerastheinputargument.Afterthetimerisremoved,itsnameisavailablefor
useagain.Youcanspecifythenametoanewtimer.
Note
Youmustusethefunctions ProUITimerCreate(),
ProUIDialogTimerStart(), ProUIDialogTimerStop(), and
ProUITimerDestroy() onlyinDLLmode.
Example1:SourceforDialogwithTextQuestion,OKand
CancelButtons
TheexampleinthefileUgUIYesnoDialog.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_ui, showsthesource
codethatusesthisdialog.
AddingandRemovingComponents
Component
NameAddFunction RemoveFunction
Checkbutton ProUIDialogCheckbuttonAdd() ProUIDialogCheckbuttonRe
move()
Drawingarea ProUIDialogDrawingareaAdd() ProUIDialogDrawingareaRe
move()
Inputpanel ProUIDialogInputpanelAdd() ProUIDialogInputpanelRemove()
Label ProUIDialogLabelAdd() ProUIDialogLabelRemove()
Layout ProUIDialogLayoutAdd() ProUIDialogLayoutRemove()
List ProUIDialogListAdd() ProUIDialogListRemove()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLabel ProUIDialogLabelAdd() ProUIDialogLabelRemove()
Layout ProUIDialogLayoutAdd() ProUIDialogLayoutRemove()
List ProUIDialogListAdd() ProUIDialogListRemove()
Menubar ProUIDialogMenubarAdd() NotApplicable
Menupane ProUIDialogMenupaneAdd() ProUIDialogMenupaneRemove()
Optionmenu ProUIDialogProgressbarAdd() ProUIDialogOptionmenuRemove()
Progressbar ProUIDialogProgressbarAdd() ProUIDialogProgressbarRe
move()
Pushbutton ProUIDialogPushbuttonAdd() ProUIDialogPushbuttonRemove()
Radiogroup ProUIDialogRadiogroupAdd() ProUIDialogRadiogroupRemove()
Separator ProUIDialogSeparatorAdd() ProUIDialogSeparatorRemove()
Slider ProUIDialogSliderAdd() ProUIDialogSliderRemove()
Spinbox ProUIDialogSpinboxAdd() ProUIDialogSpinboxRemove()
Tab ProUIDialogTabAdd() ProUIDialogTabRemove()
Table ProUIDialogTableAdd() ProUIDialogTableRemove()
Textarea ProUIDialogTextareaAdd() ProUIDialogTextareaRemove()
350 Creo®Parametric TOOLKIT User’sGuideComponent
NameAddFunction RemoveFunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTable ProUIDialogTableAdd() ProUIDialogTableRemove()
Textarea ProUIDialogTextareaAdd() ProUIDialogTextareaRemove()
350 Creo®Parametric TOOLKIT User’sGuideComponent
NameAddFunction RemoveFunction
Thumbwheel ProUIDialogThumbwheelAdd() ProUIDialogThumbwheelRemove()
Tree ProUIDialogTreeAdd() ProUIDialogTreeRemove()
CreoParametric TOOLKITprovidesfunctionstoaddcomponents toadialog.
ThesefunctionsacceptanargumentoftypeProUIGridopts thatdetermines
thelocationandinitialplacement detailsofthecomponent. Inaddition,anumber
ofgrid-specific attributescontrolthepositionandresizingofthenewlycreated
component withinthegridoftheDialog.
Thesegrid-specific attributesarelistedasfollows:
Attribute DefaultValue Description
column PRO_UI_INSERT_NEW_
COLUMNThecolumnofthegridintowhich
thecomponent shouldbeadded.A
valueofPRO_UI_INSERT_
NEW_COLUMN indicatesthatthe
component shouldbeaddedtoa
newlycreatedcolumntotheleftof
anyexistingcolumns.
row PRO_UI_INSERT_NEW_ROW TherowofthegridintowhichthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueofPRO_UI_INSERT_
NEW_COLUMN indicatesthatthe
component shouldbeaddedtoa
newlycreatedcolumntotheleftof
anyexistingcolumns.
row PRO_UI_INSERT_NEW_ROW Therowofthegridintowhichthe
component shouldbeadded.A
valueofPRO_UI_INSERT_
NEW_ROW indicatesthatthe
component shouldbeaddedtoa
newlycreatedrowtotheleftof
anyexistingrows.
horz_cells 1 Thenumberofcellswhichthe
component shouldoccupyinthe
existinggridinahorizontal
direction.
vert_cells 1 Thenumberofcellswhichthe
component shouldoccupyinthe
existinggridinaverticaldirection.
horz_resize PRO_B_TRUE Aflagindicating whetherthegrid
cellcontaining thecomponent
shouldresizehorizontally .
vert_resize PRO_B_TRUE Aflagindicating whetherthegrid
cellcontaining thecomponent
shouldresizevertically.
attach_top PRO_B_TRUE Attachtheitemtothetopneighbor
attach_bottom PRO_B_TRUE Attachtheitemtothebottom
neighbor
attach_left PRO_B_TRUE Attachtheitemtotheleftneighbor
attach_right PRO_B_TRUE Attachtheitemtotheright
neighbor
top_offset PRO_UI_USE_DEVICE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattach_bottom PRO_B_TRUE Attachtheitemtothebottom
neighbor
attach_left PRO_B_TRUE Attachtheitemtotheleftneighbor
attach_right PRO_B_TRUE Attachtheitemtotheright
neighbor
top_offset PRO_UI_USE_DEVICE_
OFFSETOffsettothetopneighbor.The
defaultvalue PRO_UI_USE_
DEVICE_OFFSET inheritsthe
offsetfromtheowningdialog.
bottom_offset PRO_UI_USE_DEVICE_ Offsettothebottomneighbor.The
UserInterface:Dialogs 351Attribute DefaultValue Description
OFFSET defaultvalue PRO_UI_USE_
DEVICE_OFFSET inheritsthe
offsetfromtheowningdialog.
left_offset PRO_UI_USE_DEVICE_
OFFSETOffsettotheleftneighbor.The
defaultvalue PRO_UI_USE_
DEVICE_OFFSET inheritsthe
offsetfromtheowningdialog.
right_offset PRO_UI_USE_DEVICE_
OFFSETOffsettotherightneighbor.The
defaultvalue PRO_UI_USE_
DEVICE_OFFSET inheritsthe
offsetfromtheowningdialog.
Note
Components thatareaddedtoadialogafteritisdisplayeddonotpermit
modification ofallcomponent attributes. Whencreatinganddisplaying axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDEVICE_OFFSET inheritsthe
offsetfromtheowningdialog.
Note
Components thatareaddedtoadialogafteritisdisplayeddonotpermit
modification ofallcomponent attributes. Whencreatinganddisplaying a
dialog,itispreferable tousethesefunctionstoaddthecomponents before
activating thedialog.Ifacomponent mightbeneededbutshouldnotbeshown
initially,additbeforeactivation andsetits.Visibleattributetofalse.
DialogActionCallbacks
Functions Introduced
•ProUIDialogPre managenotifyActionSet()
•ProUIDialogPostmanagenotifyActionSet()
•ProUIDialogDestr oynotifyActionSet()
•ProUIDialogCloseActionSet()
•ProUIDialogActivateActionSet()
Usethefunction ProUIDialogPremanagenotifyActionSet() tosetthe
functiontobecalledwhenthedialogisabouttobemanaged.Forexample,when
adialogboxisdisplayedorredisplayed.
Usethefunction ProUIDialogPostmanagenotifyActionSet() toset
thefunctiontobecalledwhenthedialoghasjustbeenmanaged.Forexample,
whenadialogboxisdisplayed.
Usethefunction ProUIDialogDestroynotifyActionSet() tosetthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefunctiontobecalledwhenthedialoghasjustbeenmanaged.Forexample,
whenadialogboxisdisplayed.
Usethefunction ProUIDialogDestroynotifyActionSet() tosetthe
functiontobecalledwhenthedialogisabouttobedestroyed.
Usethefunction ProUIDialogCloseActionSet() tosettheaction
functiontobecalledwhentheuserattemptstoclosethedialogusingthewindow
closeiconintheupperrightcornerofthedialog.
352 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUIDialogActivateActionSet() tosetthefunction
tobecalledwhenthedialoghasjustbeenactivatedandmadethecurrent
foreground window.Theactionfunctionforagivendialogcanbecalled
•Thedialogmustnotbethecurrentforeground application.
•Thedialog(whenitisnottheforeground application) isactivatedusingoneof
thefollowingmethods:
○Whentheuserclicksonthetaskbarbuttonforthegivendialog.
○Whentheuserswitchestothegivendialogusing Alt+Tab.
○Whentheuserclickswithinthegivendialog.
CascadeButton
CascadeButtonAttributes
AttributeNameGetFunction SetFunction(s)
.AttachBottomxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○Whentheuserswitchestothegivendialogusing Alt+Tab.
○Whentheuserclickswithinthegivendialog.
CascadeButton
CascadeButtonAttributes
AttributeNameGetFunction SetFunction(s)
.AttachBottom
onpageProUICascadebutton
IsAttachedBottom()ProUICascadebutton
AttachBottom()
ProUICascadebutton
UnattachBottom()
.AttachTop on
pageProUICascadebutton
IsAttachedTop()ProUICascadebutton
AttachTop()
ProUICascadebutton
UnattachTop()
.AttachRight on
pageProUICascadebutton
IsAttachedRight()ProUICascadebutton
AttachRight()
ProUICascadebutton
UnattachRight()
.AttachLeft on
pageProUICascadebutton
IsAttachedLeft()ProUICascadebutton
AttachLeft()
ProUICascadebutton
UnattachLeft()
.BottomOffset
onpageProUICascadebutton
BottomoffsetGet()ProUICascadebutton
BottomoffsetSet()
.Bitmap onpage ProUICascadebutton
BitmapGet()ProUICascadebutton
BitmapSet()
.CascadeDirec
tion onpageProUICascadebutton
CascadedirectionGet()ProUICascadebutton
CascadedirectionSet()
.ChildNames on
pageProUICascadebuttonxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBitmapGet()ProUICascadebutton
BitmapSet()
.CascadeDirec
tion onpageProUICascadebutton
CascadedirectionGet()ProUICascadebutton
CascadedirectionSet()
.ChildNames on
pageProUICascadebutton
ChildnamesGet()ProUICascadebutton
ChildnamesSet()
.HelpText on
pageProUICascadebutton
HelptextGet()ProUICascadebutton
HelptextSet()
.Label onpage ProUICascadebutton
TextGet()ProUICascadebutton
TextSet()
UserInterface:Dialogs 353AttributeNameGetFunction SetFunction(s)
.LeftOffset on
pageProUICascadebutton
LeftoffsetGet()ProUICascadebutton
LeftoffsetSet()
.ParentName on
pageProUICascadebutton
ParentnameGet()ProUICascadebutton
ParentnameSet()
.PopupMenu on
pageProUICascadebutton
PopupmenuGet()ProUICascadebutton
PopupmenuSet()
.Resizeable on
pageProUICascadebutton
IsResizeable()ProUICascadebutton
EnableResizing()
ProUICascadebutton
DisableResizing()
.RightOffset on
pageProUICascadebutton
RightoffsetGet()ProUICascadebutton
RightoffsetSet()
.Sensitive on
pageProUICascadebutton
IsEnabled()ProUICascadebuttonxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUICascadebutton
DisableResizing()
.RightOffset on
pageProUICascadebutton
RightoffsetGet()ProUICascadebutton
RightoffsetSet()
.Sensitive on
pageProUICascadebutton
IsEnabled()ProUICascadebutton
Enable()
ProUICascadebutton
Disable()
.TopOffset on
pageProUICascadebutton
TopoffsetGet()ProUICascadebutton
TopoffsetSet()
.Visible on
pageProUICascadebutton
IsVisible()ProUICascadebutton
Show()
ProUICascadebutton
Hide()
Checkbutton
Checkbutton Attributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUICheckbuttonIsAtta
chedBottom()ProUICheckbuttonAttachBot
tom()
ProUICheckbuttonUnattachBot
tom
.AttachTop on
pageProUICheckbuttonIsAtta
chedTop()ProUICheckbuttonAttachTop()
ProUICheckbuttonUnattach
Top()
.AttachRight on
pageProUICheckbuttonIsAtta
chedRight()ProUICheckbuttonAttach
Right()
ProUICheckbuttonUnattach
Right()
.AttachLeft on
pageProUICheckbuttonIsAtta
chedLeft()ProUICheckbuttonAttachLeft()
ProUICheckbuttonUnatta
chLeft()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxchedRight()ProUICheckbuttonAttach
Right()
ProUICheckbuttonUnattach
Right()
.AttachLeft on
pageProUICheckbuttonIsAtta
chedLeft()ProUICheckbuttonAttachLeft()
ProUICheckbuttonUnatta
chLeft()
.BottomOffset on ProUICheckbuttonBottomoff ProUICheckbuttonBottomoffset
354 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
page setGet() Set()
.Bitmap onpage ProUICheckbuttonBitmap
Get()ProUICheckbuttonBitmapSet()
.ButtonStyle on
pageProUICheckbuttonButtonsty
leGet()ProUICheckbuttonButtonstyle
Set()
.HelpText onpage ProUICheckbuttonHelptext
Get()ProUICheckbuttonHelptext
Set()
.Label onpage ProUICheckbuttonTextGet() ProUICheckbuttonTextSet()
.LeftOffset on
pageProUICheckbuttonLeftoff
setGet()ProUICheckbuttonLeftoffset
Set()
.ParentName on
pageProUICheckbuttonParentna
meGet()NotApplicable
.PopupMenu on
pageProUICheckbuttonPopupmenu
Get()ProUICheckbuttonPopupmenu
Set()
.Resizeable on
pageProUICheckbuttonIsResizea
ble()ProUICheckbuttonEnableResiz
ing()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmeGet()NotApplicable
.PopupMenu on
pageProUICheckbuttonPopupmenu
Get()ProUICheckbuttonPopupmenu
Set()
.Resizeable on
pageProUICheckbuttonIsResizea
ble()ProUICheckbuttonEnableResiz
ing()
ProUICheckbuttonDisableResiz
ing()
.RightOffset on
pageProUICheckbuttonRightoff
setGet()ProUICheckbuttonRightoffset
Set()
.Set onpage ProUICheckbuttonGet
State()ProUICheckbuttonSet()
ProUICheckbuttonUnset()
.Sensitive on
pageProUICheckbuttonIsEna
bled()ProUICheckbuttonEnable()
ProUICheckbuttonDisable()
.TopOffset on
pageProUICheckbuttonTopoffset
Get()ProUICheckbuttonTopoffset
Set()
.Visible onpage ProUICheckbuttonIsVisi
ble()ProUICheckbuttonShow()
ProUICheckbuttonHide()
Checkbutton Operations
Functions Introduced
•ProUICheckbuttonAnchorSet()
•ProUICheckbuttonSizeSet()
•ProUICheckbuttonMinimumsizeGet()
•ProUICheckbuttonPositionSet()
•ProUICheckbuttonPositionGet()
•ProUICheckbuttonSizeGet()
Usethefunction ProUICheckbuttonAnchorSet() tosetthepositionofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUICheckbuttonMinimumsizeGet()
•ProUICheckbuttonPositionSet()
•ProUICheckbuttonPositionGet()
•ProUICheckbuttonSizeGet()
Usethefunction ProUICheckbuttonAnchorSet() tosetthepositionofthe
checkbutton withrespecttoagivenanchorlocation.Thisfunctionisapplicable
onlyiftheparentofthecheckbutton isadrawingarea.Theinputargument anchor
determines whichpartofthecomponent isbeingpositioned.
UserInterface:Dialogs 355Usethefunction ProUICheckbuttonSizeSet() tosetthesizeofthe
checkbutton inpixels.Thisoperationisapplicable onlyiftheparentisadrawing
area.Thefunctionwillfail,ifyouspecifyavaluesmallerthantheminimumsize
fortheinputarguments widthorheight
Usethefunction ProUICheckbuttonMinimumsizeGet()to retrievethe
minimumsizeofthewidthandheightofthecheckbuttoninpixels.Usethis
functiononlyiftheparentisadrawingarea.
Usethefunction ProUICheckbuttonPositionSet() tosetthepositionto
thecheckbutton withrespecttoitsparent.Thisoperationisapplicable onlyifthe
parentisadrawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctiononlyiftheparentisadrawingarea.
Usethefunction ProUICheckbuttonPositionSet() tosetthepositionto
thecheckbutton withrespecttoitsparent.Thisoperationisapplicable onlyifthe
parentisadrawingarea.
Usethefunction ProUICheckbuttonPositionGet() togetthepositionof
thecheckbutton withrespecttoitsparent.Thisoperationisapplicable onlyifthe
parentisadrawingarea.
Usethefunction ProUICheckbuttonSizeGet() togetthesizeofthe
checkbutton. Thisoperationisapplicable onlyiftheparentisadrawingarea.
Checkbutton ActionCallbacks
Functions Introduced
•ProUICheckbuttonActivateActionSet()
Thefunction ProUICheckbuttonActivateActionSet() setsthe
callbackactiontobeinvokedwhentheusertogglesthestateofthecheckbutton.
DrawingArea
DrawingAreaAttributes
AttributeName GetFunction SetFunction(s)
.ArcDirection onpage ProUIDrawingareaArcdir
ectionGet()ProUIDrawingareaArcdir
ectionSet()
.ArcFillMode onpage ProUIDrawingareaArcfill
modeGet()ProUIDrawingareaArcfill
modeSet()
.AttachBottom onpage ProUIDrawingareaIsAttaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxectionGet()ProUIDrawingareaArcdir
ectionSet()
.ArcFillMode onpage ProUIDrawingareaArcfill
modeGet()ProUIDrawingareaArcfill
modeSet()
.AttachBottom onpage ProUIDrawingareaIsAtta
chedBottom()ProUIDrawingareaAttach
Bottom()
ProUIDrawingareaUnat
tachBottom()
.AttachTop onpage ProUIDrawingareaIsAtta
chedTop()ProUIDrawingareaAttach
Top()
ProUIDrawingareaUnat
tachTop()
.AttachRight onpage ProUIDrawingareaIsAtta
chedRight()ProUIDrawingareaAttach
Right()
356 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
ProUIDrawingareaUnat
tachRight()
.AttachLeft onpage ProUIDrawingareaIsAtta
chedLeft()ProUIDrawingareaAtta
chLeft()
ProUIDrawingareaUnatta
chLeft()
.BackgroundColor onpage ProUIDrawingareaBack
groundcolorGet()ProUIDrawingareaBack
groundcolorSet()
.BgColor onpage ProUIDrawingareaBgcolor
Get()ProUIDrawingareaBgcolor
Set()
.BottomOffset onpage ProUIDrawingareaBotto
moffsetGet()ProUIDrawingareaBotto
moffsetSet()
.ChildNames onpage ProUIDrawingareaChildnaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGet()ProUIDrawingareaBgcolor
Set()
.BottomOffset onpage ProUIDrawingareaBotto
moffsetGet()ProUIDrawingareaBotto
moffsetSet()
.ChildNames onpage ProUIDrawingareaChildna
mesGet()NotApplicable
.ClipChildren onpage ProUIDrawingareaClip
childrenGet()ProUIDrawingareaClip
childrenSet()
.Decorated onpage ProUIDrawingareaIsDeco
rated()ProUIDrawingareaDeco
rate()
ProUIDrawingareaUndeco
rate()
.DrawingHeight onpage ProUIDrawingareaDrawing
heightGet()ProUIDrawingareaDrawing
heightSet()
.DrawingMode onpage ProUIDrawingareaDrawing
modeGet()ProUIDrawingareaDrawing
modeSet()
.DrawingWidth onpage ProUIDrawingareaDrawing
widthGet()ProUIDrawingareaDrawing
widthSet()
.FillMode onpage ProUIDrawingareaFillmo
deGet()ProUIDrawingareaFillmo
deSet()
.FontClass onpage ProUIDrawingareaFont
classGet()ProUIDrawingareaFont
classSet()
.FontSize onpage ProUIDrawingareaFontsi
zeGet()ProUIDrawingareaFontsi
zeSet()
.FontStyle onpage ProUIDrawingareaFontsty
leGet()ProUIDrawingareaFontsty
leSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxclassGet()ProUIDrawingareaFont
classSet()
.FontSize onpage ProUIDrawingareaFontsi
zeGet()ProUIDrawingareaFontsi
zeSet()
.FontStyle onpage ProUIDrawingareaFontsty
leGet()ProUIDrawingareaFontsty
leSet()
.FgColor onpage ProUIDrawingareaFgcolor
Get()ProUIDrawingareaFgcolor
Set()
.HelpText onpage ProUIDrawingareaHelp
textGet()ProUIDrawingareaHelp
textSet()
.Images onpage ProUIDrawingareaImages
Get()ProUIDrawingareaImages
Set()
.LeftOffset onpage ProUIDrawingareaLeftoff
setGet()ProUIDrawingareaLeftoff
setSet()
.LineStyle onpage ProUIDrawingareaLinesty
leGet()ProUIDrawingareaLinesty
leSet()
.ParentName onpage ProUIDrawingareaParent
nameGet()NotApplicable
.PolygonFillMode onpage ProUIDrawingareaPolygon
fillmodeGet()ProUIDrawingareaPolygon
fillmodeSet()
UserInterface:Dialogs 357AttributeName GetFunction SetFunction(s)
.PopupMenu onpage ProUIDrawingareaPopupme
nuGet()ProUIDrawingareaPopupme
nuSet()
.RightOffset onpage ProUIDrawingareaRight
offsetGet()ProUIDrawingareaRight
offsetSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.PopupMenu onpage ProUIDrawingareaPopupme
nuGet()ProUIDrawingareaPopupme
nuSet()
.RightOffset onpage ProUIDrawingareaRight
offsetGet()ProUIDrawingareaRight
offsetSet()
.Sensitive onpage ProUIDrawingareaIsEna
bled()ProUIDrawingareaEna
ble()
ProUIDrawingareaDisa
ble()
.TopOffset onpage ProUIDrawingareaTopoff
setGet()ProUIDrawingareaTopoff
setSet()
.Tracking onpage ProUIDrawingareaIsTrack
ingEnabled()ProUIDrawingareaEnable
Tracking()
ProUIDrawingareaDisable
Tracking()
.Visible onpage ProUIDrawingareaIsVisi
ble()ProUIDrawingareaShow()
ProUIDrawingareaHide()
AddingandRemovingComponents
Component Name AddingFunctions RemovingFunctions
Checkbutton ProUIDrawingareaCheck
buttonAdd()ProUIDrawingareaCheck
buttonRemove()
Drawingarea ProUIDrawingareaDrawin
gareaAdd()ProUIDrawingareaDrawin
gareaRemove()
Inputpanel ProUIDrawingareaInputpa
nelAdd()ProUIDrawingareaInputpa
nelRemove()
Label ProUIDrawingareaLabe
lAdd()ProUIDrawingareaLabelRe
move()
Layout ProUIDrawingareaLayou
tAdd()ProUIDrawingareaLayouxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxInputpanel ProUIDrawingareaInputpa
nelAdd()ProUIDrawingareaInputpa
nelRemove()
Label ProUIDrawingareaLabe
lAdd()ProUIDrawingareaLabelRe
move()
Layout ProUIDrawingareaLayou
tAdd()ProUIDrawingareaLayou
tRemove()
List ProUIDrawingareaLis
tAdd()ProUIDrawingareaListRe
move()
Optionmenu ProUIDrawingareaOption
menuAdd()ProUIDrawingareaOption
menuRemove()
Progressbar ProUIDrawingareaProg
ressbarAdd()ProUIDrawingareaProg
ressbarRemove()
Pushbutton ProUIDrawingareaPushbut
tonAdd()ProUIDrawingareaPushbut
tonRemove()
Radiogroup ProUIDrawingareaRadiog
roupAdd()ProUIDrawingareaRadiog
roupRemove()
Slider ProUIDrawingareaSlider
Add()ProUIDrawingareaSlider
Remove()
Spinbox ProUIDrawingareaSpinbox
Add()ProUIDrawingareaSpinbox
Remove()
Tab ProUIDrawingareaTa
bAdd()ProUIDrawingareaTabRe
move()
Table ProUIDrawingareaTa ProUIDrawingareaTableRe
358 Creo®Parametric TOOLKIT User’sGuideComponent Name AddingFunctions RemovingFunctions
bleAdd() move()
Textarea ProUIDrawingareaTextar
eaAdd()ProUIDrawingareaTextarxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx358 Creo®Parametric TOOLKIT User’sGuideComponent Name AddingFunctions RemovingFunctions
bleAdd() move()
Textarea ProUIDrawingareaTextar
eaAdd()ProUIDrawingareaTextar
eaRemove()
Thumbwheel ProUIDrawingareaThumb
wheelAdd()ProUIDrawingareaThumb
wheelRemove()
Tree ProUIDrawingareaTree
Add()ProUIDrawingareaTreeRe
move()
Components addedtodrawingareasarenotmanagedingridslikecomponents in
mostothercontainers. Instead,usetheoperations thatsetthecomponent sizeand
positiontoplacethecomponent howyouwishinthedrawingarea.
Note
Thismeansthatcomponents maypossiblyoverlapeachotherinadrawing
areadepending ontheirindividual placement.
DrawingAreaActionCallbacks
Functions Introduced
•ProUIDrawingare aEnterActionSet()
•ProUIDrawingare aExitActionSet()
•ProUIDrawingare aMoveActionSet()
•ProUIDrawingare aLbuttonarmActionSet()
•ProUIDrawingare aLbuttondisarmActionSet()
•ProUIDrawingare aLbuttonactivateActionSet()
•ProUIDrawingare aLbuttondblclkActionSet()
•ProUIDrawingare aMbuttonarmActionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIDrawingare aLbuttondisarmActionSet()
•ProUIDrawingare aLbuttonactivateActionSet()
•ProUIDrawingare aLbuttondblclkActionSet()
•ProUIDrawingare aMbuttonarmActionSet()
•ProUIDrawingare aMbuttondisarmActionSet()
•ProUIDrawingare aMbuttondisarmActionSet()
•ProUIDrawingare aMbuttonactivateActionSet()
•ProUIDrawingare aMbuttondblclkActionSet()
•ProUIDrawingare aRbuttonarmActionSet()
•ProUIDrawingare aRbuttondisarmActionSet()
•ProUIDrawingare aRbuttonactivateActionSet()
•ProUIDrawingare aRbuttondblclkActionSet()
•ProUIDrawingare aUpdateActionSet()
UserInterface:Dialogs 359•ProUIDrawingare aResizeActionSet()
•ProUIDrawingare aPostmanagenotifyActionSet()
Usethefunction ProUIDrawingareaEnterActionSet() tosettheaction
functiontobecalledwhentheuserhasmovedthecursorintothedrawingarea.
Thisactionwillbegeneratedonlyiftrackingisenabledforthedrawingarea.
Usethefunction ProUIDrawingareaExitActionSet() tosetthefunction
tobecalledwhentheuserhasmovedthecursoroutofthedrawingarea.ThisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThisactionwillbegeneratedonlyiftrackingisenabledforthedrawingarea.
Usethefunction ProUIDrawingareaExitActionSet() tosetthefunction
tobecalledwhentheuserhasmovedthecursoroutofthedrawingarea.This
actionwillbegeneratedonlyiftrackingisenabledforthedrawingarea.
Usethefunction ProUIDrawingareaMoveActionSet() tosetthefunction
tobecalledwhenthecursorismovedoverthedrawingarea.Thisactionwillbe
generatedonlyiftrackingisenabledforthedrawingarea.
Usethefunction ProUIDrawingareaLbuttonarmActionSet() tosetthe
functiontobecalledwhentheleftmousebuttonisclickedinthedrawingarea.
Usethefunction ProUIDrawingareaLbuttondisarmActionSet() to
setthefunctiontobecalledwhentheleftmousebuttonisreleasedinthedrawing
area.
Usethefunction ProUIDrawingareaLbuttonactivateActionSet() to
setthefunctiontobecalledwhentheleftmousebuttonisclickedandreleasedin
thedrawingarea.
Usethefunction ProUIDrawingareaLbuttondblclkActionSet() to
setthefunctiontobecalledwhentheleftmousebuttonisdouble-clicked inthe
drawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthedrawingarea.
Usethefunction ProUIDrawingareaLbuttondblclkActionSet() to
setthefunctiontobecalledwhentheleftmousebuttonisdouble-clicked inthe
drawingarea.
Usethefunction ProUIDrawingareaMbuttonarmActionSet() tosetthe
functiontobecalledwhenthemiddlemousebuttonisclickedinthedrawingarea.
Usethefunction ProUIDrawingareaMbuttondisarmActionSet() to
setthefunctiontobecalledwhenthemiddlemousebuttonisreleasedinthe
drawingarea.
Usethefunction ProUIDrawingareaMbuttonactivateActionSet() to
setthefunctiontobecalledwhenthemiddlemousebuttonisclickedandreleased
inthedrawingarea.
Usethefunction ProUIDrawingareaMbuttondblclkActionSet() to
setthefunctiontobecalledwhenthemiddlemousebuttonisdouble-clicked in
thedrawingarea.
Usethefunction ProUIDrawingareaRbuttonarmActionSet() tosetthe
functiontobecalledwhentherightmousebuttonisclickedinthedrawingarea.
Usethefunction ProUIDrawingareaRbuttondisarmActionSet() to
setthefunctiontobecalledwhentherightmousebuttonisreleasedinthe
drawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProUIDrawingareaRbuttondisarmActionSet() to
setthefunctiontobecalledwhentherightmousebuttonisreleasedinthe
drawingarea.
360 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUIDrawingareaRbuttonactivateActionSet() to
setthefunctiontobecalledwhentherightmousebuttonisclickedandreleasedin
thedrawingarea.
Usethefunction ProUIDrawingareaRbuttondblclkActionSet() to
setthefunctiontobecalledwhentherightmousebuttonisdouble-clicked inthe
drawingarea.
Usethefunction ProUIDrawingareaUpdateActionSet() tosetthe
functiontobecalledwhenthedrawingareaneedstobeupdatedduetoasystem-
levelcolorschemechange.
Usethefunction ProUIDrawingareaResizeActionSet() tosetthe
functiontobecalledwhenthedrawingareaisresized.
Note
Anygraphics,textorimagesaddedtothedrawingareaistypicallycleared
afteraresize.
Usethefunction ProUIDrawingareaPostmanagenotifyActionSet()
tosetthefunctiontobecalledwhenthedrawingareahasjustbeendisplayed. Use
thiscallbacktosetuptheinitialgraphics,text,andimagesinthedrawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProUIDrawingareaPostmanagenotifyActionSet()
tosetthefunctiontobecalledwhenthedrawingareahasjustbeendisplayed. Use
thiscallbacktosetuptheinitialgraphics,text,andimagesinthedrawingarea.
DrawingAreaOperations
Functions Introduced
•ProUIDrawingare aAnchorSet()
•ProUIDrawingare aSizeGet()
•ProUIDrawingare aSizeSet()
•ProUIDrawingare aMinimumsizeGet()
•ProUIDrawingare aPositionGet()
•ProUIDrawingare aPositionSet()
•ProUIDrawingare aClear()
•ProUIDrawingare aCopyAre a()
•ProUIDrawingare aPointDraw()
•ProUIDrawingare aPointsDraw()
•ProUIDrawingare aLineDraw()
•ProUIDrawingare aLinesDraw()
•ProUIDrawingare aPolylineDraw()
UserInterface:Dialogs 361•ProUIDrawingare aRectDraw()
•ProUIDrawingare aRectsDraw()
•ProUIDrawingare aRectFill()
•ProUIDrawingare aRectsFill()
•ProUIDrawingare aShadowRectDraw()
•ProUIDrawingare aShadowRectsDraw()
•ProUIDrawingare aPolygonDraw()
•ProUIDrawingare aPolygonFill()
•ProUIDrawingare aArcDraw()
•ProUIDrawingare aArcsDraw()
•ProUIDrawingare aArcFill()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIDrawingare aShadowRectsDraw()
•ProUIDrawingare aPolygonDraw()
•ProUIDrawingare aPolygonFill()
•ProUIDrawingare aArcDraw()
•ProUIDrawingare aArcsDraw()
•ProUIDrawingare aArcFill()
•ProUIDrawingare aArcsFill()
•ProUIDrawingare aEllipseDraw()
•ProUIDrawingare aEllipsesDraw()
•ProUIDrawingare aEllipseFill()
•ProUIDrawingare aEllipsesFill()
•ProUIDrawingare aImageDraw()
•ProUIDrawingare aImagesDraw()
•ProUIDrawingare aStringDraw()
•ProUIDrawingare aStringsDraw()
•ProUIDrawingare aStringsizeGet()
•ProUIDrawingare aStringbaselineGet()
•ProUIDrawingare aImagesizeGet()
•ProUIDrawingare aCursorposGet()
•ProUIDrawingare aCursorposSet()
Usethefunction ProUIDrawingareaAnchorSet() tosetthepositionofthe
drawingareawithrespecttoagivenanchorlocation.Thisfunctionisapplicable
onlyiftheparentofthedrawingareaisanotherdrawingarea.
Usethefunction ProUIDrawingareaSizeGet() togetthesizeofthe
drawingarea.Thisoperationisapplicable onlyiftheparentisadrawingarea.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonlyiftheparentofthedrawingareaisanotherdrawingarea.
Usethefunction ProUIDrawingareaSizeGet() togetthesizeofthe
drawingarea.Thisoperationisapplicable onlyiftheparentisadrawingarea.The
functionwillfail,ifyouspecifyavaluesmallerthantheminimumsizeforthe
inputarguments widthorheight.
Usethefunction ProUIDrawingareaMinimumsizeGet() toretrievethe
minimumsizeofthewidthandheightofthedrawingareainpixels.Usethis
functiononlyiftheparentisadrawingarea.
362 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUIDrawingareaSizeSet() tosetthesizeofthe
drawingarea.Thisoperationisapplicable onlyiftheparentisadrawingarea.
Usethefunction ProUIDrawingareaPositionGet() togetthepositionof
thedrawingareawithrespecttoitsparent.Thisoperationisapplicable onlyifthe
parentisadrawingarea.
Usethefunction ProUIDrawingareaPositionSet() tosetthepositionto
thedrawingareawithrespecttoitsparent.Thisoperationisapplicable onlyifthe
parentisadrawingarea.
Usethefunction ProUIDrawingareaClear() toclearthecontentsofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthedrawingareawithrespecttoitsparent.Thisoperationisapplicable onlyifthe
parentisadrawingarea.
Usethefunction ProUIDrawingareaClear() toclearthecontentsofthe
drawingareabypaintingitinthedrawingbackground color.
Usethefunction ProUIDrawingareaCopyArea() tocopythecontents
withinagivenboundaryatalocationinthedrawingareatoanotherlocation.
Usethefunction ProUIDrawingareaPointDraw() todrawapointinthe
drawingarea.
Usethefunction ProUIDrawingareaPointsDraw() todrawanarrayof
pointsinthedrawingarea.
Usethefunction ProUIDrawingareaLineDraw() todrawalineinthe
drawingarea.
Usethefunction ProUIDrawingareaLinesDraw() todrawasetoflines
betweeninthedrawingarea.Eachlinewillbedrawnfromtheindicatedstart
pointinthearraytothecorresponding endpoint.
Usethefunction ProUIDrawingareaPolylineDraw() todrawaseriesof
connected linesinthedrawingarea.
Usethefunction ProUIDrawingareaRectDraw() todrawarectangleinthe
drawingarea.
Usethefunction ProUIDrawingareaRectsDraw() todrawasetof
rectangles inthedrawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconnected linesinthedrawingarea.
Usethefunction ProUIDrawingareaRectDraw() todrawarectangleinthe
drawingarea.
Usethefunction ProUIDrawingareaRectsDraw() todrawasetof
rectangles inthedrawingarea.
Usethefunction ProUIDrawingareaRectFill() todrawafilledrectangle
inthedrawingarea.
Usethefunction ProUIDrawingareaRectsFill() todrawasetoffilled
rectangles inthedrawingarea.
Usethefunction ProUIDrawingareaShadowRectDraw() todrawa
rectanglewithashadowborder.
Usethefunction ProUIDrawingareaShadowRectsDraw() todrawasetof
rectangles withshadowborders.
Usethefunction ProUIDrawingareaPolygonDraw() todrawapolygonin
thedrawingarea.
UserInterface:Dialogs 363Usethefunction ProUIDrawingareaPolygonFill() todrawafilled
polygoninthedrawingarea.
Usethefunction ProUIDrawingareaArcDraw() todrawanarcinthe
drawingarea.
Usethefunction ProUIDrawingareaArcsDraw() todrawasetofarcsin
thedrawingarea.
Usethefunction ProUIDrawingareaArcFill() todrawafilledarcinthe
drawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawingarea.
Usethefunction ProUIDrawingareaArcsDraw() todrawasetofarcsin
thedrawingarea.
Usethefunction ProUIDrawingareaArcFill() todrawafilledarcinthe
drawingarea.
Usethefunction ProUIDrawingareaArcsFill() todrawasetoffilledarcs
inthedrawing.
Usethefunction ProUIDrawingareaEllipseDraw() todrawanellipsein
thedrawingarea.
Usethefunction ProUIDrawingareaEllipsesDraw() todrawasetof
ellipsesinthedrawingarea.
Usethefunction ProUIDrawingareaEllipseFill() todrawafilled
ellipseinthedrawingarea.
Usethefunction ProUIDrawingareaEllipsesFill() todrawasetof
filledellipsesinthedrawingarea.
Usethefunction ProUIDrawingareaImageDraw() todrawanimageinthe
drawingarea.
Usethefunction ProUIDrawingareaImagesDraw() todrawimagesatthe
givenpositionsinthedrawingarea.
Usethefunction ProUIDrawingareaStringDraw() todrawastringatthe
givenpositioninthedrawingarea.
Usethefunction ProUIDrawingareaStringsDraw() todrawstringsatthe
givenpositionsinthedrawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProUIDrawingareaStringDraw() todrawastringatthe
givenpositioninthedrawingarea.
Usethefunction ProUIDrawingareaStringsDraw() todrawstringsatthe
givenpositionsinthedrawing.
Usethefunction ProUIDrawingareaStringsizeGet() togetthesizethat
thegiventextstringwilloccupyinthedrawingarea,giventhecurrentdrawing
areafontsettings.
Usethefunction ProUIDrawingareaStringbaselineGet() togetthe
heightfromthetopofthestringbordertothestringbaselineforthegiventext
stringinthedrawingarea,giventhecurrentdrawingareafontsettings.
Usethefunction ProUIDrawingareaImagesizeGet() togetthesizeof
theimageinthedrawingarea.
Usethefunction ProUIDrawingareaCursorposGet() togettheposition
ofthecursorinthedrawingarea.
Usethefunction ProUIDrawingareaCursorposSet() tosetthecursorat
thegivenlocationinthedrawingarea.
364 Creo®Parametric TOOLKIT User’sGuideInputPanel
InputPanelAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIInputpanelIsAttached
Bottom()ProUIInputpanelAttachBot
tom()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx364 Creo®Parametric TOOLKIT User’sGuideInputPanel
InputPanelAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIInputpanelIsAttached
Bottom()ProUIInputpanelAttachBot
tom()
ProUIInputpanelUnattach
Bottom()
.AttachTop onpage ProUIInputpanelIsAttached
Top()ProUIInputpanelAttach
Top()
ProUIInputpanelUnattach
Top()
.AttachRight on
pageProUIInputpanelIsAttached
Right()ProUIInputpanelAttach
Right()
ProUIInputpanelUnattach
Right()
.AttachLeft onpage ProUIInputpanelIsAttached
Left()ProUIInputpanelAtta
chLeft()
ProUIInputpanelUnatta
chLeft()
.Autohighlight on
pageProUIInputpanelIsAutohigh
lightEnabled()ProUIInputpanelAutohigh
lightEnable()
ProUIInputpanelAutohigh
lightDisable()
.BackgroundColor on
pageNotApplicable ProUIInputpanelBack
groundcolorSet()
.BottomOffset on
pageProUIInputpanelBottomoffset
Get()ProUIInputpanelBottomoff
setSet()
.Columns onpage ProUIInputpanelColumnsGet() ProUIInputpanelColumns
Set()
.Denominator on
pageProUIInputpanelDenominatorxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpageProUIInputpanelBottomoffset
Get()ProUIInputpanelBottomoff
setSet()
.Columns onpage ProUIInputpanelColumnsGet() ProUIInputpanelColumns
Set()
.Denominator on
pageProUIInputpanelDenominator
Get()ProUIInputpanelDenomina
torSet()
.Digits onpage ProUIInputpanelDigitsGet() ProUIInputpanelDigits
Set()
.Double onpage ProUIInputpanelDoubleGet() ProUIInputpanelDouble
Set()
.DoubleFormat on
pageProUIInputpanelDoubleformat
Get()ProUIInputpanelDoublefor
matSet()
.Editable onpage ProUIInputpanelIsEditable() ProUIInputpanelEdita
ble()
ProUIInputpanelReadOn
ly()
.HelpText onpage ProUIInputpanelHelptext
Get()ProUIInputpanelHelptext
Set()
.InputType onpage ProUIInputpanelInputtype ProUIInputpanelInputtype
UserInterface:Dialogs 365AttributeName GetFunction SetFunction(s)
Get() Set()
.Integer onpage ProUIInputpanelIntegerGet() ProUIInputpanelInteger
Set()
.LeftOffset onpage ProUIInputpanelLeftoffset
Get()ProUIInputpanelLeftoff
setSet()
.MinColumns onpage ProUIInputpanelMincolumnsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.Integer onpage ProUIInputpanelIntegerGet() ProUIInputpanelInteger
Set()
.LeftOffset onpage ProUIInputpanelLeftoffset
Get()ProUIInputpanelLeftoff
setSet()
.MinColumns onpage ProUIInputpanelMincolumns
Get()ProUIInputpanelMinco
lumnsSet()
.MinDouble onpage ProUIInputpanelMindouble
Get()ProUIInputpanelMindouble
Set()
.MaxDouble onpage ProUIInputpanelMaxdouble
Get()ProUIInputpanelMaxdouble
Set()
.MinInteger onpage ProUIInputpanelMininteger
Get()ProUIInputpanelMininte
gerSet()
.MaxInteger onpage ProUIInputpanelMaxinteger
Get()ProUIInputpanelMaxinte
gerSet()
.MaxLen onpage ProUIInputpanelMaxlenGet() ProUIInputpanelMaxlen
Set()
.Numerator onpage ProUIInputpanelNumerator
Get()ProUIInputpanelNumerator
Set()
.Ordinal onpage ProUIInputpanelOrdinalGet() ProUIInputpanelOrdinal
Set()
.ParentName onpage ProUIInputpanelParentname
Get()NotApplicable
.Password onpage ProUIInputpanelPasswordchar
Get()ProUIInputpanelUsePass
wordchars()
ProUIInputpanelUseNormal
chars()
ProUIInputpanelContains
Password()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGet()NotApplicable
.Password onpage ProUIInputpanelPasswordchar
Get()ProUIInputpanelUsePass
wordchars()
ProUIInputpanelUseNormal
chars()
ProUIInputpanelContains
Password()
ProUIInputpanelPassword
charSet()
.PopupMenu onpage ProUIInputpanelPopupmenu
Get()ProUIInputpanelPopupmenu
Set()
.RightOffset on
pageProUIInputpanelRightoffset
Get()ProUIInputpanelRightoff
setSet()
.Sensitive onpage ProUIInputpanelIsEnabled() ProUIInputpanelEnable()
ProUIInputpanelDisable()
.String onpage ProUIInputpanelStringGet() ProUIInputpanelString
Set()
.TabCharsAllow on
pageProUIInputpanelTabcharsAl
low()ProUIInputpanelTabchars
Disallow()
ProUIInputpanelAllowsTab
chars()
.TopOffset onpage ProUIInputpanelTopoffset
Get()ProUIInputpanelTopoffset
Set()
.Value onpage ProUIInputpanelValueGet() ProUIInputpanelValue
Set()
366 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.Visible onpage ProUIInputpanelIsVisible() ProUIInputpanelShow()
ProUIInputpanelHide()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
366 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.Visible onpage ProUIInputpanelIsVisible() ProUIInputpanelShow()
ProUIInputpanelHide()
.WideString onpage ProUIInputpanelWidestring
Get()ProUIInputpanelWides
tringSet()
InputPanelActionCallbacks
Functions Introduced
•ProUIInputpanelActivateActionSet()
•ProUIInputpanelFocusinActionSet()
•ProUIInputpanelFocusoutActionSet()
•ProUIInputpanelInputActionSet()
Usethefunction ProUIInputpanelActivateActionSet() tosetthe
actioncallbacktobecalledwhentheuserhitsreturninaninputpanel.
Usethefunction ProUIInputpanelFocusinActionSet() tosetthefocus
inactionforaninputpanel.Thisfunctioniscalledwhentheusermovesthecursor
ontotheinputpanelusingthemouseor<TAB>key.
Usethefunction ProUIInputpanelFocusoutActionSet() tosetthe
focusoutactionforaninputpanel.Thisfunctioniscalledwhentheusermoves
thecursoroffoftheinputpanelusingthemouseor<TAB>key.
Usethefunction ProUIInputpanelInputActionSet() tosettheactionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfocusoutactionforaninputpanel.Thisfunctioniscalledwhentheusermoves
thecursoroffoftheinputpanelusingthemouseor<TAB>key.
Usethefunction ProUIInputpanelInputActionSet() tosettheaction
callbacktobecalledwhentheuserentersakeyinaninputpanel.
InputPanelOperations
Functions Introduced
•ProUIInputpanelAnchorSet()
•ProUIInputpanelSizeGet()
•ProUIInputpanelSizeSet()
•ProUIInputpanelMinimumsizeGet()
•ProUIInputpanelPositionGet()
•ProUIInputpanelPositionSet()
Usethefunction ProUIInputpanelAnchorSet() tosetthepositionofthe
inputpanelwithrespecttoagivenanchorlocation.Thisfunctionisapplicable
onlyiftheparentoftheinputpanelisadrawingarea.
Usethefunction ProUIInputpanelSizeGet() togetthesizeoftheinput
panel.Thisoperationisapplicable onlyiftheparentisadrawingarea.
UserInterface:Dialogs 367Usethefunction ProUIInputpanelSizeSet() tosetthesizeoftheinput
panel.Thisoperationisapplicable onlyiftheparentisadrawingarea.The
functionwillfail,ifyouspecifyavaluesmallerthantheminimumsizeforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpanel.Thisoperationisapplicable onlyiftheparentisadrawingarea.The
functionwillfail,ifyouspecifyavaluesmallerthantheminimumsizeforthe
inputarguments widthorheight.
Usethefunction ProUIInputpanelMinimumsizeGet() toretrievethe
minimumsizeofthewidthandheightoftheinputpanelinpixels.Usethis
functiononlyiftheparentisadrawingarea.
Usethefunction ProUIInputpanelPositionGet() togetthepositionof
theinputpanelwithrespecttoitsparent.Thisoperationisapplicable onlyifthe
parentisadrawingarea.
Usethefunction ProUIInputpanelPositionSet() tosetthepositionto
theinputpanelwithrespecttoitsparent.Thisoperationisapplicable onlyifthe
parentisadrawingarea.
Label
LabelAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom onpage ProUILabelIsAttachedBot
tom()ProUILabelAttachBot
tom()
ProUILabelUnattachBot
tom()
.AttachTop onpage ProUILabelIsAttached
Top()ProUILabelAttachTop()
ProUILabelUnattachTop()
.AttachRight onpage ProUILabelIsAttached
Right()ProUILabelAttachRight()
ProUILabelUnattach
Right()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtom()
.AttachTop onpage ProUILabelIsAttached
Top()ProUILabelAttachTop()
ProUILabelUnattachTop()
.AttachRight onpage ProUILabelIsAttached
Right()ProUILabelAttachRight()
ProUILabelUnattach
Right()
.AttachLeft onpage ProUILabelIsAttached
Left()ProUILabelAttachLeft()
ProUILabelUnatta
chLeft()
.Bitmap onpage ProUILabelBitmapGet() ProUILabelBitmapSet()
.BottomOffset onpage ProUILabelBottomoffset
Get()ProUILabelBottomoffset
Set()
.Columns onpage ProUILabelColumnsGet() ProUILabelColumnsSet()
.HelpText onpage ProUILabelHelptextGet() ProUILabelHelptextSet()
.Label onpage ProUILabelTextGet() ProUILabelTextSet()
.LeftOffset onpage ProUILabelLeftoffset
Get()ProUILabelLeftoffset
Set()
.ParentName onpage ProUILabelParentname
Get()NotApplicable
.PopupMenu onpage ProUILabelPopupmenu
Get()ProUILabelPopupmenu
Set()
368 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.Resizeable onpage ProUILabelIsResizea
ble()ProUILabelEnableResiz
ing()
ProUILabelDisableResiz
ing()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
368 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.Resizeable onpage ProUILabelIsResizea
ble()ProUILabelEnableResiz
ing()
ProUILabelDisableResiz
ing()
.RightOffset onpage ProUILabelRightoffset
Get()ProUILabelRightoffset
Set()
.Sensitive onpage ProUILabelIsEnabled() ProUILabelEnable()
ProUILabelDisable()
.TopOffset onpage ProUILabelTopoffset
Get()ProUILabelTopoffset
Set()
.Visible onpage ProUILabelIsVisible() ProUILabelShow()
ProUILabelHide()
LabelOperations
Functions Introduced
•ProUILabelAnchorSet()
•ProUILabelSizeSet()
•ProUILabelMinimumsizeGet()
•ProUILabelPositionGet()
•ProUILabelPositionSet()
•ProUILabelSizeGet()
Usethefunction ProUILabelAnchorSet() tosetthelocationtopositionthe
labelwithrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawing
area.
Usethefunction ProUILabelSizeSet() tosetthesizeofthelabel.Thisfield
isusedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyouspecifyaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarea.
Usethefunction ProUILabelSizeSet() tosetthesizeofthelabel.Thisfield
isusedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyouspecifya
valuesmallerthantheminimumsizefortheinputarguments widthorheight.
Usethefunction ProUILabelMinimumsizeGet() toretrievetheminimum
sizeofthewidthandheightofthelabelinpixels.Usethisfunctiononlyifthe
parentisadrawingarea.
Usethefunction ProUILabelPositionGet() togetthepositionofthelabel
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUILabelPositionSet() tosetthepositiontothelabel
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUILabelSizeGet() togetthesizeofthelabel.This
fieldisusedonlyiftheparentisadrawingarea.
UserInterface:Dialogs 369Layout
LayoutAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUILayoutIsAttachedBot
tom()ProUILayoutAttachBottom()
ProUILayoutUnattachBottom()
.AttachTop onpage ProUILayoutIsAttached
Top()ProUILayoutAttachTop()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.AttachBottom on
pageProUILayoutIsAttachedBot
tom()ProUILayoutAttachBottom()
ProUILayoutUnattachBottom()
.AttachTop onpage ProUILayoutIsAttached
Top()ProUILayoutAttachTop()
ProUILayoutUnattachTop()
.AttachRight on
pageProUILayoutIsAttached
Right()ProUILayoutAttachRight()
ProUILayoutUnattachRight()
.AttachLeft on
pageProUILayoutIsAttached
Left()ProUILayoutAttachLeft()
ProUILayoutUnattachLeft()
.Bitmap onpage ProUILayoutBitmapGet() ProUILayoutBitmapSet()
.BottomOffset on
pageProUILayoutBottomoffset
Get()ProUILayoutBottomoffset
Set()
.ChildNames on
pageProUILayoutChildnames
Get()NotApplicable
.HelpText onpage ProUILayoutHelptextGet() ProUILayoutHelptextSet()
.Label onpage ProUILayoutTextGet() ProUILayoutTextSet()
.LeftOffset on
pageProUILayoutLeftoffset
Get()ProUILayoutLeftoffsetSet()
.Mapped onpage ProUILayoutIsMapped() ProUILayoutMappedSet()
ProUILayoutMappedUnset()
.ParentName on
pageProUILayoutParentname
Get()NotApplicablexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGet()ProUILayoutLeftoffsetSet()
.Mapped onpage ProUILayoutIsMapped() ProUILayoutMappedSet()
ProUILayoutMappedUnset()
.ParentName on
pageProUILayoutParentname
Get()NotApplicable
.PopupMenu onpage ProUILayoutPopupmenuGet() ProUILayoutPopupmenuSet()
.RightOffset on
pageProUILayoutRightoffset
Get()ProUILayoutRightoffsetSet()
.Sensitive onpage ProUILayoutIsEnabled() ProUILayoutEnable()
ProUILayoutDisable()
.TopOffset onpage ProUILayoutTopoffsetGet() ProUILayoutTopoffsetSet()
.Visible onpage ProUILayoutIsVisible() ProUILayoutShow()
ProUILayoutHide()
AddingandRemovingComponents
Component Name AddingFunctions RemovingFunctions
Checkbutton ProUILayoutCheckbutto
nAdd()ProUILayoutCheckbutton
Remove()
Drawingarea ProUILayoutDrawingar
eaAdd()ProUILayoutDrawingareaR
emove()
Inputpanel ProUILayoutInputpane ProUILayoutInputpanelRe
370 Creo®Parametric TOOLKIT User’sGuideComponent Name AddingFunctions RemovingFunctions
lAdd() move()
Label ProUILayoutLabelAdd() ProUILayoutLabelRe
move()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx370 Creo®Parametric TOOLKIT User’sGuideComponent Name AddingFunctions RemovingFunctions
lAdd() move()
Label ProUILayoutLabelAdd() ProUILayoutLabelRe
move()
Layout ProUILayoutLayoutAdd() ProUILayoutLayoutRe
move()
List ProUILayoutListAdd() ProUILayoutListRemove()
Optionmenu ProUILayoutOptionme
nuAdd()ProUILayoutOptionmenuRe
move()
Progressbar ProUILayoutProgressbar
Add()ProUILayoutProgressbar
Remove()
Pushbutton ProUILayoutPushbutto
nAdd()ProUILayoutPushbuttonRe
move()
Radiogroup ProUILayoutRadiogrou
pAdd()ProUILayoutRadiogroupRe
move()
Separator ProUILayoutSeparator
Add()ProUILayoutSeparatorRe
move()
Slider ProUILayoutSliderAdd() ProUILayoutSliderRe
move()
Spinbox ProUILayoutSpinboxAdd() ProUILayoutSpinboxRe
move()
Tab ProUILayoutTabAdd() ProUILayoutTabRemove()
Table ProUILayoutTableAdd() ProUILayoutTableRe
move()
Textarea ProUILayoutTextar
eaAdd()ProUILayoutTextareaRe
move()
Thumbwheel ProUILayoutThumbwhee
lAdd()ProUILayoutThumbwheelRe
move()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTable ProUILayoutTableAdd() ProUILayoutTableRe
move()
Textarea ProUILayoutTextar
eaAdd()ProUILayoutTextareaRe
move()
Thumbwheel ProUILayoutThumbwhee
lAdd()ProUILayoutThumbwheelRe
move()
Tree ProUILayoutTreeAdd() ProUILayoutTreeRemove()
SeethesectiononAddingandRemoving Components onpage396for
description ofhowtousetheProUIGridopts argumentswhenadding
components toalayout.
LayoutOperations
Functions Introduced
•ProUILayoutAnchorSet()
•ProUILayoutSizeSet()
•ProUILayoutMinimumsizeGet()
•ProUILayoutPositionGet()
•ProUILayoutPositionSet()
•ProUILayoutSizeGet()
•ProUILayoutIsMapped()
•ProUILayoutMappedSet()
UserInterface:Dialogs 371•ProUILayoutMappedUnset()
Usethefunction ProUILayoutAnchorSet() tosetthepositionofthelayout
withrespecttoagivenanchorlocation.Thisfunctionisapplicable onlyifthe
parentofthelayoutisadrawingarea.
Usethefunction ProUILayoutSizeSet() tosetthesizeofthelayout.This
fieldisusedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyouxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparentofthelayoutisadrawingarea.
Usethefunction ProUILayoutSizeSet() tosetthesizeofthelayout.This
fieldisusedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyou
specifyavaluesmallerthantheminimumsizefortheinputarguments widthor
height.
Usethefunction ProUILayoutMinimumsizeGet() toretrievetheminimum
sizeofthewidthandheightofthelayoutinpixels.Usethisfunctiononlyifthe
parentisadrawingarea.
Usethefunction ProUILayoutPositionGet() togetthepositionofthe
layoutwithrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawing
area.
Usethefunction ProUILayoutPositionSet() tosetthepositiontothe
layoutwithrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawing
area.
Usethefunction ProUILayoutSizeGet() togetthesizeofthelayout.This
fieldisusedonlyiftheparentisadrawingarea.
Thefunction ProUILayoutIsMapped() specifiesifthegivenlayout
component ismapped.ThevalueoftheoutputflagisPRO_B_TRUE ifthelayout
ismapped,elseitisPRO_B_FALSE.
Thefunctions ProUILayoutShow() andProUILayoutHide() showandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponent ismapped.ThevalueoftheoutputflagisPRO_B_TRUE ifthelayout
ismapped,elseitisPRO_B_FALSE.
Thefunctions ProUILayoutShow() andProUILayoutHide() showand
hidethelayoutcomponent respectively ,alongwithitscontents.Usethefunction
ProUILayoutMappedSet() tokeepthesizeofthelayoutunchanged while
workingwiththesefunctions. Tocollapseorexpandthelayouttoitsnominalsize,
usethefunction ProUILayoutMappedUnset().
List
ListAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIListIsAttachedBot
tom()ProUIListAttachBottom()
ProUIListUnattachBottom()
.AttachTop onpage ProUIListIsAttached
Top()ProUIListAttachTop()
ProUIListUnattachTop()
.AttachRight on
pageProUIListIsAttached
Right()ProUIListAttachRight()
ProUIListUnattachRight()
.AttachLeft onpage ProUIListIsAttached ProUIListAttachLeft()
372 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
Left()ProUIListUnattachLeft()
.BackgroundColor
onpageNotApplicable ProUIListBackgroundcolorSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx372 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
Left()ProUIListUnattachLeft()
.BackgroundColor
onpageNotApplicable ProUIListBackgroundcolorSet()
.BottomOffset on
pageProUIListBottomoffset
Get()ProUIListBottomoffsetSet()
.Columns onpage ProUIListColumnsGet() ProUIListColumnsSet()
.ColumnLabel on
pageProUIListColumnlabel
Get()ProUIListColumnlabelSet()
.HelpText onpage ProUIListHelptextGet() ProUIListHelptextSet()
.ItemHelpText on
pageProUIListItemhelptext
Get()ProUIListItemhelptextSet()
.ItemImage onpage ProUIListItemimageGet() ProUIListItemimageSet()
.Label onpage ProUIListLabelsGet() ProUIListLabelsSet()
.Lastentereditem
onpageProUIListLastenteredi
temGet()NotApplicable
.LeftOffset onpage ProUIListLeftoffset
Get()ProUIListLeftoffsetSet()
.ListState onpage ProUIListStateGet() ProUIListStateSet()
.ListType onpage ProUIListListtypeGet() ProUIListListtypeSet()
.ParentName onpage ProUIListParentname
Get()NotApplicable
.MinColumns onpage ProUIListMincolumnsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ListType onpage ProUIListListtypeGet() ProUIListListtypeSet()
.ParentName onpage ProUIListParentname
Get()NotApplicable
.MinColumns onpage ProUIListMincolumns
Set()ProUIListMincolumnsGet()
.MinRows onpage ProUIListMinrowsGet() ProUIListMinrowsSet()
.Names onpage ProUIListNamesGet() ProUIListNamesSet()
.PopupMenu onpage ProUIListPopupmenuGet() ProUIListPopupmenuSet()
.RightOffset on
pageProUIListRightoffset
Get()ProUIListRightoffsetSet()
.SelectedNames on
pageProUIListSelectednames
Get()ProUIListSelectednamesSet()
.SelectionPolicy
onpageProUIListSelectionpoli
cyGet()ProUIListSelectionpolicySet()
.Sensitive onpage ProUIListIsEnabled() ProUIListEnable()
ProUIListDisable()
.TopOffset onpage ProUIListTopoffsetGet() ProUIListTopoffsetSet()
.Visible onpage ProUIListIsVisible() ProUIListShow()
ProUIListHide()
.VisibleRows on
pageProUIListVisiblerows
Get()ProUIListVisiblerowsSet()
ListActionCallbacks
Functions Introduced
•ProUIListActivateActionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUIListHide()
.VisibleRows on
pageProUIListVisiblerows
Get()ProUIListVisiblerowsSet()
ListActionCallbacks
Functions Introduced
•ProUIListActivateActionSet()
UserInterface:Dialogs 373•ProUIListSelectActionSet()
•ProUIListT riggerhighlightActionSet()
•ProUIListFocusinActionSet()
•ProUIListFocusoutActionSet()
Usethefunction ProUIListActivateActionSet() tosettheactivate
actionforalist.Thisfunctioniscalledwhenthereturnkeyispressedorthe
mouseisdouble-clicked inthelist.
Usethefunction ProUIListSelectActionSet() tosettheselectactionfor
alistcomponent.
Usethefunction ProUIListTriggerhighlightActionSet() tosetthe
triggerhighlightactionforalist.Thisfunctioniscalledwhentheusermovesthe
mouseoveranitemonthelist.
Usethefunction ProUIListFocusinActionSet() tosetthefocusinaction
foralist.Thisfunctioniscalledwhentheusermovesthecursorontoofthelist
usingthemouseor<TAB>key.
Usethefunction ProUIListFocusoutActionSet() tosetthefocusout
actionforalist.Thisfunctioniscalledwhentheusermovesthecursoroffofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusingthemouseor<TAB>key.
Usethefunction ProUIListFocusoutActionSet() tosetthefocusout
actionforalist.Thisfunctioniscalledwhentheusermovesthecursoroffofthe
listusingthemouseor<TAB>key.
ListOperations
Functions Introduced
•ProUIListAnchorSet()
•ProUIListSizeSet()
•ProUIListMinimumsizeGet()
•ProUIListPositionGet()
•ProUIListPositionSet()
•ProUIListSizeGet()
•ProUIListStateGet()
•ProUIListStateSet()
Usethefunction ProUIListAnchorSet() tosetthepositionofthelistwith
respecttoagivenanchorlocation.Thisfunctionisapplicable onlyiftheparentof
thelistisadrawingarea.
Usethefunction ProUIListSizeSet() tosetthesizeofthelist.Thisfieldis
usedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyouspecifya
valuesmallerthantheminimumsizefortheinputarguments widthorheight.
374 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUIListMinimumsizeGet() toretrievetheminimum
sizeofthewidthandheightofthelistinpixels.Usethisfunctiononlyifthe
parentisadrawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx374 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUIListMinimumsizeGet() toretrievetheminimum
sizeofthewidthandheightofthelistinpixels.Usethisfunctiononlyifthe
parentisadrawingarea.
Usethefunction ProUIListPositionSet() tosetthepositiontothelist
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUIListPositionGet() togetthepositionofthelist
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUIListSizeGet() togetthesizeofthelist.Thisfieldis
usedonlyiftheparentisadrawingarea.
Usethefunction ProUIlistStateGet() togetthestateoftheiteminthelist.
Thestateisapplicable onlyfora"check"typeoflistandreferstothecheckedor
unchecked statusoftheitem.
Usethefunction ProUIListStateSet() tosetthestateoftheiteminthelist.
Thestateisapplicable onlyfora"check"typeoflistandreferstothecheckedor
unchecked statusoftheitem.
Example2:TouseUIListFunctions
ThesamplecodeinUgUIListImplement.c locatedat<creo_toolkit_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThestateisapplicable onlyfora"check"typeoflistandreferstothecheckedor
unchecked statusoftheitem.
Example2:TouseUIListFunctions
ThesamplecodeinUgUIListImplement.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_ui showsthesource
codeforUIListfunctions. Theapplication getsthenamesofthepartsthat
constituteanygivendrawingandthenpopulatesthelistareainanewlycreated
dialogwiththosenames.
Menubar
MenubarAttributes
AttributeNameGetFunction SetFunction(s)
.AttachBottom
onpageProUIMenubarIsAttached
Bottom()ProUIMenubarAttachBottom()
ProUIMenubarUnattachBottom()
.AttachTop on
pageProUIMenubarIsAttached
Top()ProUIMenubarAttachTop()
ProUIMenubarUnattachTop()
.AttachRight on
pageProUIMenubarIsAttached
Right()ProUIMenubarAttachRight()
ProUIMenubarUnattachRight()
.AttachLeft on
pageProUIMenubarIsAttached
Left()ProUIMenubarAttachLeft()
ProUIMenubarUnattachLeft()
.BottomOffset
onpageProUIMenubarBottomoffset
Get()ProUIMenubarBottomoffsetSet()
.HelpText on
pageProUIMenubarHelptextxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLeft()ProUIMenubarAttachLeft()
ProUIMenubarUnattachLeft()
.BottomOffset
onpageProUIMenubarBottomoffset
Get()ProUIMenubarBottomoffsetSet()
.HelpText on
pageProUIMenubarHelptext
Get()ProUIMenubarHelptextSet()
UserInterface:Dialogs 375AttributeNameGetFunction SetFunction(s)
.ItemHelpText
onpageProUIMenubarItemhelptext
Get()ProUIMenubarItemhelptextSet()
.Label onpage ProUIMenupaneTextGet() ProUIMenupaneTextSet()
.LeftOffset on
pageProUIMenubarLeftoffset
Get()ProUIMenubarLeftoffsetSet()
.Names onpage ProUIMenubarNamesGet() ProUIMenubarNamesSet()
.PopupMenu on
pageProUIMenubarPopupmenu
Get()ProUIMenubarPopupmenuSet()
.RightOffset on
pageProUIMenubarRightoffset
Get()ProUIMenubarRightoffsetSet()
.Selectable
Names onpageProUIMenubarSelectablena
mesGet()ProUIMenubarSelectablenames
Set()
.Sensitive on
pageProUIMenubarIsEnabled() ProUIMenubarEnable()
ProUIMenubarDisable()
.TopOffset on
pageProUIMenubarTopoffset
Get()ProUIMenubarTopoffsetSet()
.Visible onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
.Sensitive on
pageProUIMenubarIsEnabled() ProUIMenubarEnable()
ProUIMenubarDisable()
.TopOffset on
pageProUIMenubarTopoffset
Get()ProUIMenubarTopoffsetSet()
.Visible on
pageProUIMenubarIsVisible() ProUIMenubarShow()
ProUIMenubarHide()
.VisibleNames
onpageProUIMenubarVisiblenames
Get()ProUIMenubarVisiblenamesSet()
Menupane
MenupaneAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIMenupaneIsAttached
Bottom()ProUIMenupaneAttachBot
tom()
ProUIMenupaneUnattachBot
tom()
.AttachTop onpage ProUIMenupaneIsAttached
Top()ProUIMenupaneAttachTop()
ProUIMenupaneUnattach
Top()
.AttachRight onpage ProUIMenupaneIsAttached
Right()ProUIMenupaneAttach
Right()
ProUIMenupaneUnattach
Right()
.AttachLeft onpage ProUIMenupaneIsAttached
Left()ProUIMenupaneAttachLeft()
ProUIMenupaneUnatta
chLeft()
.Bitmap onpage ProUIMenupaneBitmapGet() ProUIMenupaneBitmapSet()
.BottomOffset on
pageProUIMenupaneBottomoffset
Get()ProUIMenupaneBottomoffset
Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUIMenupaneUnatta
chLeft()
.Bitmap onpage ProUIMenupaneBitmapGet() ProUIMenupaneBitmapSet()
.BottomOffset on
pageProUIMenupaneBottomoffset
Get()ProUIMenupaneBottomoffset
Set()
376 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.ChildNames onpage ProUIMenupaneChildnames
Get()NotApplicable
.LeftOffset onpage ProUIMenupaneLeftoffset
Get()ProUIMenupaneLeftoffset
Set()
.PopupMenu onpage ProUIMenupanePopupmenu
Get()ProUIMenupanePopupmenu
Set()
.RightOffset onpage ProUIMenupaneRightoffset
Get()ProUIMenupaneRightoffset
Set()
.TopOffset onpage ProUIMenupaneTopoffset
Get()ProUIMenupaneTopoffset
Set()
.Visible onpage ProUIMenupaneIsVisible() ProUIMenupaneShow()
ProUIMenupaneHide()
AddingandRemovingComponents
Component NameAddingFunctions RemovingFunctions
Cascadebutton ProUIMenupaneCascadebutto
nAdd()
ProUIMenupaneCascadebutto
nInsert()ProUIMenupaneCascadebut
tonRemove()
Checkbutton ProUIMenupaneCheckbutto
nAdd()
ProUIMenupaneCheckbuttonInxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCascadebutton ProUIMenupaneCascadebutto
nAdd()
ProUIMenupaneCascadebutto
nInsert()ProUIMenupaneCascadebut
tonRemove()
Checkbutton ProUIMenupaneCheckbutto
nAdd()
ProUIMenupaneCheckbuttonIn
sert()ProUIMenupaneCheckbutton
Remove()
Pushbutton ProUIMenupanePushbutto
nAdd()
ProUIMenupanePushbuttonIn
sert()ProUIMenupanePushbuttonRe
move()
Radiogroup ProUIMenupaneRadiogrou
pAdd()
ProUIMenupaneRadiogroupIn
sert()ProUIMenupaneRadiogroupRe
move()
Separator ProUIMenupaneSeparatorAdd()
ProUIMenupaneSeparatorIn
sert()ProUIMenupaneSeparatorRe
move()
UserInterface:Dialogs 377Optionmenu
Optionmenu Attributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIOptionmenuIsAttached
Bottom()ProUIOptionmenuAttachBot
tom()
ProUIOptionmenuUnattachBot
tom()
.AttachTop on
pageProUIOptionmenuIsAttached
Top()ProUIOptionmenuAttachTop()
ProUIOptionmenuUnattach
Top()
.AttachRight on
pageProUIOptionmenuIsAttached
Right()ProUIOptionmenuAttach
Right()
ProUIOptionmenuUnattach
Right()
.AttachLeft onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTop()ProUIOptionmenuAttachTop()
ProUIOptionmenuUnattach
Top()
.AttachRight on
pageProUIOptionmenuIsAttached
Right()ProUIOptionmenuAttach
Right()
ProUIOptionmenuUnattach
Right()
.AttachLeft on
pageProUIOptionmenuIsAttached
Left()ProUIOptionmenuAttachLeft()
ProUIOptionmenuUnatta
chLeft()
.BottomOffset on
pageProUIOptionmenuBottomoffset
Get()ProUIOptionmenuBottomoffset
Set()
.Columns onpage ProUIOptionmenuColumnsGet() ProUIOptionmenuColumnsSet()
.Editable onpage ProUIOptionmenuIsEditable() ProUIOptionmenuEditable()
ProUIOptionmenuReadOnly()
.HelpText onpage ProUIOptionmenuHelptext
Get()ProUIOptionmenuHelptext
Set()
.ItemHelpText on
pageProUIOptionmenuItemhelptext
Get()ProUIOptionmenuItemhelptext
Set()
.ItemImage on
pageProUIOptionmenuItemimage
Get()ProUIOptionmenuItemimage
Set()
.Label onpage ProUIOptionmenuLabelsGet() ProUIOptionmenuLabelsSet()
.Lastentereditem
onpageProUIOptionmenuLastenteredi
temGet()NotApplicable
.LeftOffset on
pageProUIOptionmenuLeftoffsetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
.Label onpage ProUIOptionmenuLabelsGet() ProUIOptionmenuLabelsSet()
.Lastentereditem
onpageProUIOptionmenuLastenteredi
temGet()NotApplicable
.LeftOffset on
pageProUIOptionmenuLeftoffset
Get()ProUIOptionmenuLeftoffset
Set()
.MinColumns on
pageProUIOptionmenuMincolumns
Get()ProUIOptionmenuMincolumns
Set()
.Names onpage ProUIOptionmenuNamesGet() ProUIOptionmenuNamesSet()
.ParentName on
pageProUIOptionmenuParentname
Get()NotApplicable
.PopupMenu on
pageProUIOptionmenuPopupmenu
Get()ProUIOptionmenuPopupmenu
Set()
.RightOffset on
pageProUIOptionmenuRightoffset
Get()ProUIOptionmenuRightoffset
Set()
.SelectedNames
onpageProUIOptionmenuSelectedna
mesGet()ProUIOptionmenuSelectedna
mesSet()
378 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.Sensitive on
pageProUIOptionmenuIsEnabled() ProUIOptionmenuEnable()
ProUIOptionmenuDisable()
.TopOffset on
pageProUIOptionmenuTopoffset
Get()ProUIOptionmenuTopoffset
Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.Sensitive on
pageProUIOptionmenuIsEnabled() ProUIOptionmenuEnable()
ProUIOptionmenuDisable()
.TopOffset on
pageProUIOptionmenuTopoffset
Get()ProUIOptionmenuTopoffset
Set()
.Value onpage ProUIOptionmenuValueGet() ProUIOptionmenuValueSet()
.Visible onpage ProUIOptionmenuIsVisible() ProUIOptionmenuShow()
ProUIOptionmenuHide()
.VisibleRows on
pageProUIOptionmenuVisiblerows
Get()ProUIOptionmenuVisiblerows
Set()
Optionmenu ActionCallbacks
Functions Introduced
•ProUIOptionmenuActivateActionSet()
•ProUIOptionmenuSelectActionSet()
•ProUIOptionmenuInputActionSet()
•ProUIOptionmenuT riggerhighlightActionSet()
•ProUIOptionmenuFocusinActionSet()
•ProUIOptionmenuFocusoutActionSet()
Usethefunction ProUIOptionmenuActivateActionSet() tosetthe
activateactionforanoptionmenu.Thisfunctioniscalledwhentheusermodifies
thecontentsoftheoptionmenu.Theoptionmenumustbeeditable.Theaction
callbackiscalledwhenyoupresstheENTERkeyintheinputpaneloftheoption
menu.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecontentsoftheoptionmenu.Theoptionmenumustbeeditable.Theaction
callbackiscalledwhenyoupresstheENTERkeyintheinputpaneloftheoption
menu.
Usethefunction ProUIOptionmenuSelectActionSet() tosettheselect
actionforaoptionmenucomponent.
Usethefunction ProUIOptionmenuInputActionSet() tosettheinput
actionforanoptionmenu. Thisfunctioniscalledwhentheuserchangesthe
contentsoftheoptionmenu.Thisisonlyvalidforeditableoptionmenus.
Usethefunction ProUIOptionmenuTriggerhighlightActionSet() to
setthetriggerhighlightactionforanoptionmenu. Thisfunctioniscalledwhenthe
usermovesthemouseonaniteminthedropdownlistoftheoptionmenu.
Usethefunction ProUIOptionmenuFocusinActionSet() tosetthefocus
inactionforanoptionmenu.
Usethefunction ProUIOptionmenuFocusoutActionSet() tosetthe
focusoutactionforanoptionmenu.
UserInterface:Dialogs 379Optionmenu Operations
Functions Introduced
•ProUIOptionmenuAnchorSet()
•ProUIOptionmenuSizeSet()
•ProUIOptionmenuMinimumsizeGet()
•ProUIOptionmenuPositionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserInterface:Dialogs 379Optionmenu Operations
Functions Introduced
•ProUIOptionmenuAnchorSet()
•ProUIOptionmenuSizeSet()
•ProUIOptionmenuMinimumsizeGet()
•ProUIOptionmenuPositionSet()
•ProUIOptionmenuPositionGet()
•ProUIOptionmenuSizeGet()
Usethefunction ProUIOptionmenuAnchorSet() tothepositionofthe
optionmenuwithrespecttoagivenanchorlocation.Thisfunctionisapplicable
onlyiftheparentoftheoptionmenuisadrawingarea.
Usethefunction ProUIOptionmenuSizeSet() tosetthesizeofthe
optionmenu. Thisfieldisusedonlyiftheparentisadrawingarea.Thefunction
willfail,ifyouspecifyavaluesmallerthantheminimumsizefortheinput
arguments widthorheight.
Usethefunction ProUIOptionmenuMinimumsizeGet() toretrievethe
minimumsizeofthewidthandheightoftheoptionmenuinpixels.Usethis
functiononlyiftheparentisadrawingarea.
Usethefunction ProUIOptionmenuPositionSet() tosetthepositionto
theoptionmenu withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctiononlyiftheparentisadrawingarea.
Usethefunction ProUIOptionmenuPositionSet() tosetthepositionto
theoptionmenu withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIOptionmenuPositionGet() togetthepositionof
theoptionmenu withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIOptionmenuSizeGet() togetthesizeofthe
optionmenu. Thisfieldisusedonlyiftheparentisadrawingarea.
Progressbar
Progressbar Attributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIProgressbarIsAttached
Bottom()ProUIProgressbarAttachBot
tom()
ProUIProgressbarUnattachBot
tom()
.AttachTop on
pageProUIProgressbarIsAttached
Top()ProUIProgressbarAttachTop()
380 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
ProUIProgressbarUnattach
Top()
.AttachRight on
pageProUIProgressbarIsAttached
Right()ProUIProgressbarAttach
Right()
ProUIProgressbarUnattach
Right()
.AttachLeft on
pageProUIProgressbarIsAttachedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUIProgressbarUnattach
Top()
.AttachRight on
pageProUIProgressbarIsAttached
Right()ProUIProgressbarAttach
Right()
ProUIProgressbarUnattach
Right()
.AttachLeft on
pageProUIProgressbarIsAttached
Left()ProUIProgressbarAtta
chLeft()
ProUIProgressbarUnatta
chLeft()
.BottomOffset on
pageProUIProgressbarBottomoff
setGet()ProUIProgressbarBottomoff
setSet()
.HelpText on
pageProUIProgressbarHelptext
Get()ProUIProgressbarHelptext
Set()
.Integer onpage ProUIProgressbarInteger
Get()ProUIProgressbarInteger
Set()
.LeftOffset on
pageProUIProgressbarLeftoffset
Get()ProUIProgressbarLeftoffset
Set()
.Length onpage ProUIProgressbarLengthGet() ProUIProgressbarLengthSet()
.MaxInteger on
pageProUIProgressbarMaxinteger
Get()ProUIProgressbarMaxinteger
Set()
.MinInteger on
pageProUIProgressbarMininteger
Get()ProUIProgressbarMininteger
Set()
Orientation on
pageProUIProgressbarOrientation
Get()ProUIProgressbarOrientation
Set()
.ParentName on
pageProUIProgressbarParentname
Get()NotApplicable
.PopupMenu onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
Orientation on
pageProUIProgressbarOrientation
Get()ProUIProgressbarOrientation
Set()
.ParentName on
pageProUIProgressbarParentname
Get()NotApplicable
.PopupMenu on
pageProUIProgressbarPopupmenu
Get()ProUIProgressbarPopupmenu
Set()
.ProgressStyle
onpageProUIProgressbarProgresssty
leGet()ProUIProgressbarProgresssty
leSet()
.RightOffset on
pageProUIProgressbarRightoffset
Get()ProUIProgressbarRightoffset
Set()
.TopOffset on
pageProUIProgressbarTopoffset
Get()ProUIProgressbarTopoffset
Set()
.Visible onpage ProUIProgressbarIsVisible() ProUIProgressbarShow()
ProUIProgressbarHide()
Progressbar Operations
Functions Introduced
•ProUIPr ogressbarAnchorSet()
•ProUIPr ogressbarSizeSet()
•ProUIPr ogressbarMinimumsizeGet()
UserInterface:Dialogs 381•ProUIPr ogressbarPositionSet()
•ProUIPr ogressbarPositionGet()
•ProUIPr ogressbarSizeGet()
Usethefunction ProUIProgressbarAnchorSet() tosetthepositionofthe
progressbar withrespecttoagivenanchorlocation.Thisfunctionisapplicablexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIPr ogressbarPositionGet()
•ProUIPr ogressbarSizeGet()
Usethefunction ProUIProgressbarAnchorSet() tosetthepositionofthe
progressbar withrespecttoagivenanchorlocation.Thisfunctionisapplicable
onlyiftheparentoftheprogressbar isadrawingarea.
Usethefunction ProUIProgressbarSizeSet() tosetthesizeofthe
progressbar .Thisfieldisusedonlyiftheparentisadrawingarea.Thefunction
willfail,ifyouspecifyavaluesmallerthantheminimumsizefortheinput
arguments widthorheight.
Usethefunction ProUIProgressbarMinimumsizeGet() toretrievethe
minimumsizeofthewidthandheightoftheprogressbarinpixels.Usethis
functiononlyiftheparentisadrawingarea.
Usethefunction ProUIProgressbarPositionSet() tosetthepositionto
theprogressbar withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIProgressbarPositionGet() togetthepositionto
theprogressbar withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIProgressbarSizeGet() togetthesizeofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheprogressbar withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIProgressbarSizeGet() togetthesizeofthe
progressbar .Thisfieldisusedonlyiftheparentisadrawingarea.
Pushbutton
Pushbutton Attributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIPushbuttonIsAttached
Bottom()ProUIPushbuttonAttachBot
tom()
ProUIPushbuttonUnattachBot
tom
.AttachTop onpage ProUIPushbuttonIsAttached
Top()ProUIPushbuttonAttachTop()
ProUIPushbuttonUnattach
Top()
.AttachRight on
pageProUIPushbuttonIsAttached
Right()ProUIPushbuttonAttach
Right()
ProUIPushbuttonUnattach
Right()
.AttachLeft on
pageProUIPushbuttonIsAttached
Left()ProUIPushbuttonAtta
chLeft()
382 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
ProUIPushbuttonUnatta
chLeft()
.BottomOffset on
pageProUIPushbuttonBottomoff
setGet()ProUIPushbuttonBottomoff
setSet()
.Bitmap onpage ProUIPushbuttonBitmapGet() ProUIPushbuttonBitmapSet()
.ButtonStyle onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxchLeft()
.BottomOffset on
pageProUIPushbuttonBottomoff
setGet()ProUIPushbuttonBottomoff
setSet()
.Bitmap onpage ProUIPushbuttonBitmapGet() ProUIPushbuttonBitmapSet()
.ButtonStyle on
pageProUIPushbuttonButtonstyle
Get()ProUIPushbuttonButtonstyle
Set()
.HelpText onpage ProUIPushbuttonHelptext
Get()ProUIPushbuttonHelptext
Set()
.Label onpage ProUIPushbuttonTextGet() ProUIPushbuttonTextSet()
.LeftOffset on
pageProUIPushbuttonLeftoffset
Get()ProUIPushbuttonLeftoffset
Set()
.ParentName on
pageProUIPushbuttonParentname
Get()NotApplicable
.PopupMenu onpage ProUIPushbuttonPopupmenu
Get()ProUIPushbuttonPopupmenu
Set()
.Resizeable on
pageProUIPushbuttonIsResizea
ble()ProUIPushbuttonEnableResiz
ing()
ProUIPushbuttonDisableRe
sizing()
.RightOffset on
pageProUIPushbuttonRightoffset
Get()ProUIPushbuttonRightoffset
Set()
.Sensitive onpage ProUIPushbuttonIsEnabled() ProUIPushbuttonEnable()
ProUIPushbuttonDisable()
.TopOffset onpage ProUIPushbuttonTopoffset
Get()ProUIPushbuttonTopoffset
Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
.Sensitive onpage ProUIPushbuttonIsEnabled() ProUIPushbuttonEnable()
ProUIPushbuttonDisable()
.TopOffset onpage ProUIPushbuttonTopoffset
Get()ProUIPushbuttonTopoffset
Set()
.Visible onpage ProUIPushbuttonIsVisible() ProUIPushbuttonShow()
ProUIPushbuttonHide()
Pushbutton Operations
Functions Introduced
•ProUIPushbuttonAnchorSet()
•ProUIPushbuttonSizeSet()
•ProUIPushbuttonPositionSet()
•ProUIPushbuttonPositionGet()
•ProUIPushbuttonSizeGet()
Usethefunction ProUIPushbuttonAnchorSet() tosetthepositionofthe
pushbutton withrespecttoagivenanchorlocation.Thisfunctionisapplicable
onlyiftheparentofthePushbutton isadrawingarea.
UserInterface:Dialogs 383Usethefunction ProUIPushbuttonSizeSet() tosetthesizeofthe
pushbutton. Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUIPushbuttonPositionSet() tosetthepositionto
thepushbutton withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIPushbuttonPositionGet() togetthepositiontoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthepushbutton withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIPushbuttonPositionGet() togetthepositionto
thepushbutton withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIPushbuttonSizeGet() togetthesizeofthe
pushbutton. Thisfieldisusedonlyiftheparentisadrawingarea.
Pushbutton ActionCallbacks
FunctionIntroduced
•ProUIPushbuttonActivateActionSet()
Usethefunction ProUIPushbuttonActivateActionSet() tosetthe
activateactionforapushbutton. Thisfunctioniscalledwhentheuserselectsthe
pushbutton.
Example3:Controlling Component VisibilityorSensitivity
atRuntime
ThesamplecodeinUgUIVisibility.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_ui showshowto
controlcomponent visibilityorsensitivity atruntime.
Radiogroup
Radiogroup Attributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIRadiogroupIsAtta
chedBottom()ProUIRadiogroupAttachBottom()
ProUIRadiogroupUnattachBottomxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRadiogroup
Radiogroup Attributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIRadiogroupIsAtta
chedBottom()ProUIRadiogroupAttachBottom()
ProUIRadiogroupUnattachBottom
.AttachTop on
pageProUIRadiogroupIsAtta
chedTop()ProUIRadiogroupAttachTop()
ProUIRadiogroupUnattachTop()
.AttachRight on
pageProUIRadiogroupIsAtta
chedRight()ProUIRadiogroupAttachRight()
ProUIRadiogroupUnattach
Right()
.AttachLeft on
pageProUIRadiogroupIsAtta
chedLeft()ProUIRadiogroupAttachLeft()
ProUIRadiogroupUnattachLeft()
384 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.BottomOffset on
pageProUIRadiogroupBottomoff
setGet()ProUIRadiogroupBottomoffset
Set()
.ButtonStyle on
pageProUIRadiogroupButtonsty
leGet()ProUIRadiogroupButtonstyle
Set()
.HelpText onpage ProUIRadiogroupHelptext
Get()ProUIRadiogroupHelptextSet()
.ItemHelpText on
pageProUIRadiogroupItemhelp
textGet()ProUIRadiogroupItemhelptext
Set()
.ItemImage on
pageProUIRadiogroupItemimagexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGet()ProUIRadiogroupHelptextSet()
.ItemHelpText on
pageProUIRadiogroupItemhelp
textGet()ProUIRadiogroupItemhelptext
Set()
.ItemImage on
pageProUIRadiogroupItemimage
Get()ProUIRadiogroupItemimageSet()
.Label onpage ProUIRadiogroupLabels
Get()ProUIRadiogroupLabelsSet()
.LeftOffset on
pageProUIRadiogroupLeftoff
setGet()ProUIRadiogroupLeftoffset
Set()
.Names onpage ProUIRadiogroupNames
Get()ProUIRadiogroupNamesSet()
Orientation on
pageProUIRadiogroupOrienta
tionGet()ProUIRadiogroupOrientation
Set()
.ParentName on
pageProUIRadiogroupParentna
meGet()NotApplicable
.PopupMenu on
pageProUIRadiogroupPopupmenu
Get()ProUIRadiogroupPopupmenuSet()
.Resizeable on
pageProUIRadiogroupIsResizea
ble()ProUIRadiogroupEnableResiz
ing()
ProUIRadiogroupDisableResiz
ing()
.RightOffset on
pageProUIRadiogroupRightoff
setGet()ProUIRadiogroupRightoffset
Set()
.SelectedNames
onpageProUIRadiogroupSelected
namesGet()ProUIRadiogroupSelectednames
Set()
.Sensitive on
pageProUIRadiogroupIsEnaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpageProUIRadiogroupRightoff
setGet()ProUIRadiogroupRightoffset
Set()
.SelectedNames
onpageProUIRadiogroupSelected
namesGet()ProUIRadiogroupSelectednames
Set()
.Sensitive on
pageProUIRadiogroupIsEna
bled()ProUIRadiogroupEnable()
ProUIRadiogroupDisable()
.TopOffset on
pageProUIRadiogroupTopoffset
Get()ProUIRadiogroupTopoffsetSet()
.Visible onpage ProUIRadiogroupIsVisi
ble()ProUIRadiogroupShow()
ProUIRadiogroupHide()
Radiogroup Operations
Functions Introduced
•ProUIRadiogro upAnchorSet()
•ProUIRadiogro upSizeSet()
•ProUIRadiogro upMinimumsizeGet()
•ProUIRadiogro upPositionSet()
UserInterface:Dialogs 385•ProUIRadiogro upPositionGet()
•ProUIRadiogro upSizeGet()
Usethefunction ProUIRadiogroupAnchorSet() tosetthepositionofthe
radiogroup withrespecttoagivenanchorlocation.Thisfunctionisapplicable
onlyiftheparentoftheRadiogroup isadrawingarea.
Usethefunction ProUIRadiogroupSizeSet() tosetthesizeofthe
radiogroup. Thisfieldisusedonlyiftheparentisadrawingarea.ThefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonlyiftheparentoftheRadiogroup isadrawingarea.
Usethefunction ProUIRadiogroupSizeSet() tosetthesizeofthe
radiogroup. Thisfieldisusedonlyiftheparentisadrawingarea.Thefunction
willfail,ifyouspecifyavaluesmallerthantheminimumsizefortheinput
arguments widthorheight.
Usethefunction ProUIRadiogroupMinimumsizeGet() toretrievethe
minimumsizeofthewidthandheightoftheradiogroup inpixels.Usethis
functiononlyiftheparentisadrawingarea.
Usethefunction ProUIRadiogroupPositionSet() tosetthepositionto
theradiogroup withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIRadiogroupPositionGet() togetthepositionto
theradiogroup withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIRadiogroupSizeGet() togetthesizeofthe
radiogroup. Thisfieldisusedonlyiftheparentisadrawingarea.
Radiogroup ActionCallback
FunctionIntroduced:
•ProUIRadiogro upSelectActionSet()
Usethefunction ProUIRadiogroupSelectActionSet() tosettheselectxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRadiogroup ActionCallback
FunctionIntroduced:
•ProUIRadiogro upSelectActionSet()
Usethefunction ProUIRadiogroupSelectActionSet() tosettheselect
actionforaradiogroup.Thisfunctioniscalledwhentheuserselectsoneofthe
buttonsintheradiogroup.
Separator
SeparatorAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUISeparatorIsAttachedBot
tom()ProUISeparatorAttachBot
tom()
ProUISeparatorUnattachBot
tom
.AttachTop on
pageProUISeparatorIsAttached
Top()ProUISeparatorAttachTop()
ProUISeparatorUnattachTop()
386 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.AttachRight on
pageProUISeparatorIsAttached
Right()ProUISeparatorAttachRight()
ProUISeparatorUnattach
Right()
.AttachLeft on
pageProUISeparatorIsAttached
Left()ProUISeparatorAttachLeft()
ProUISeparatorUnatta
chLeft()
.BottomOffset on
pageProUISeparatorBottomoffset
Get()ProUISeparatorBottomoffset
Set()
.LeftOffset on
pageProUISeparatorLeftoffset
Get()ProUISeparatorLeftoffset
Set()
.PopupMenu onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxchLeft()
.BottomOffset on
pageProUISeparatorBottomoffset
Get()ProUISeparatorBottomoffset
Set()
.LeftOffset on
pageProUISeparatorLeftoffset
Get()ProUISeparatorLeftoffset
Set()
.PopupMenu on
pageProUISeparatorPopupmenu
Get()ProUISeparatorPopupmenu
Set()
.RightOffset on
pageProUISeparatorRightoffset
Get()ProUISeparatorRightoffset
Set()
.TopOffset on
pageProUISeparatorTopoffset
Get()ProUISeparatorTopoffset
Set()
.Visible onpage ProUISeparatorIsVisible() ProUISeparatorShow()
ProUISeparatorHide()
Slider
SliderAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUISliderIsAttachedBot
tom()ProUISliderAttachBottom()
ProUISliderUnattachBottom
.AttachTop onpage ProUISliderIsAttachedTop() ProUISliderAttachTop()
ProUISliderUnattachTop()
.AttachRight on
pageProUISliderIsAttached
Right()ProUISliderAttachRight()
ProUISliderUnattachRight()
.AttachLeft on
pageProUISliderIsAttached
Left()ProUISliderAttachLeft()
ProUISliderUnattachLeft()
.BottomOffset on
pageProUISliderBottomoffsetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRight()ProUISliderAttachRight()
ProUISliderUnattachRight()
.AttachLeft on
pageProUISliderIsAttached
Left()ProUISliderAttachLeft()
ProUISliderUnattachLeft()
.BottomOffset on
pageProUISliderBottomoffset
Get()ProUISliderBottomoffset
Set()
.HelpText onpage ProUISliderHelptextGet() ProUISliderHelptextSet()
.Integer onpage ProUISliderIntegerGet() ProUISliderIntegerSet()
.LeftOffset on
pageProUISliderLeftoffsetGet() ProUISliderLeftoffsetSet()
.Length onpage ProUISliderLengthGet() ProUISliderLengthSet()
.MaxInteger on
pageProUISliderMaxintegerGet() ProUISliderMaxintegerSet()
.MinInteger on ProUISliderMinintegerGet() ProUISliderMinintegerSet()
UserInterface:Dialogs 387AttributeName GetFunction SetFunction(s)
page
Orientation on
pageProUISliderOrientation
Get()ProUISliderOrientation
Set()
.ParentName on
pageProUISliderParentnameGet() NotApplicable
.PopupMenu onpage ProUISliderPopupmenuGet() ProUISliderPopupmenuSet()
.RightOffset on
pageProUISliderRightoffset
Get()ProUISliderRightoffset
Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpageProUISliderParentnameGet() NotApplicable
.PopupMenu onpage ProUISliderPopupmenuGet() ProUISliderPopupmenuSet()
.RightOffset on
pageProUISliderRightoffset
Get()ProUISliderRightoffset
Set()
.Sensitive onpage ProUISliderIsEnabled() ProUISliderEnable()
ProUISliderDisable()
.TopOffset onpage ProUISliderTopoffsetGet() ProUISliderTopoffsetSet()
.Tracking onpage ProUISliderIsTrackingEna
bled()ProUISliderEnableTrack
ing()
ProUISliderDisableTrack
ing()
.Visible onpage ProUISliderIsVisible() ProUISliderShow()
ProUISliderHide()
SliderOperations
Functions Introduced
•ProUISliderAnchorSet()
•ProUISliderSizeSet()
•ProUISliderMinimumsizeGet()
•ProUISliderPositionSet()
•ProUISliderPositionGet()
•ProUISliderSizeGet()
Usethefunction ProUISliderAnchorSet() tosetthepositionoftheslider
withrespecttoagivenanchorlocation.Thisfunctionisapplicable onlyifthe
parentoftheSliderisadrawingarea.
Usethefunction ProUISliderSizeSet() tosetthesizeoftheslider.Thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwithrespecttoagivenanchorlocation.Thisfunctionisapplicable onlyifthe
parentoftheSliderisadrawingarea.
Usethefunction ProUISliderSizeSet() tosetthesizeoftheslider.This
fieldisusedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyou
specifyavaluesmallerthantheminimumsizefortheinputarguments widthor
height.
Usethefunction ProUISliderMinimumsizeGet() toretrievetheminimum
sizeofthewidthandheightofthesliderinpixels.Usethisfunctiononlyifthe
parentisadrawingarea.
Usethefunction ProUISliderPositionSet() tosetthepositiontothe
sliderwithrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawing
area.
388 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUISliderPositionGet() togetthepositiontothe
sliderwithrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawing
area.
Usethefunction ProUISliderSizeGet() togetthesizeoftheslider.This
fieldisusedonlyiftheparentisadrawingarea.
SliderActionCallbacks
FunctionIntroduced
•ProUISliderUpdateActionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarea.
Usethefunction ProUISliderSizeGet() togetthesizeoftheslider.This
fieldisusedonlyiftheparentisadrawingarea.
SliderActionCallbacks
FunctionIntroduced
•ProUISliderUpdateActionSet()
Usethefunction ProUISliderUpdateActionSet() tosettheupdate
actionfortheslider.
Example4:SourceofDialogwithSliderandLinked
InputPanel
ThesamplecodeinUgUISlider.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_ui showscodeforuse
ofadialogwithSliderandLinkedInputPanel.
Spinbox
SpinboxAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUISpinboxIsAttachedBot
tom()ProUISpinboxAttachBottom()
ProUISpinboxUnattachBottom
.AttachTop onpage ProUISpinboxIsAttached
Top()ProUISpinboxAttachTop()
ProUISpinboxUnattachTop()
.AttachRight on
pageProUISpinboxIsAttached
Right()ProUISpinboxAttachRight()
ProUISpinboxUnattachRight()
.AttachLeft on
pageProUISpinboxIsAttached
Left()ProUISpinboxAttachLeft()
ProUISpinboxUnattachLeft()
.BottomOffset on
pageProUISpinboxBottomoffsetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUISpinboxUnattachRight()
.AttachLeft on
pageProUISpinboxIsAttached
Left()ProUISpinboxAttachLeft()
ProUISpinboxUnattachLeft()
.BottomOffset on
pageProUISpinboxBottomoffset
Get()ProUISpinboxBottomoffset
Set()
.Digits onpage ProUISpinboxDigitsGet() ProUISpinboxDigitsSet()
.Double onpage ProUISpinboxDoubleGet() ProUISpinboxDoubleSet()
.DoubleFormat on
pageProUISpinboxDoubleformat
Get()ProUISpinboxDoubleformat
Set()
.DoubleIncrement
onpageProUISpinboxDoubleincre
mentGet()ProUISpinboxDoubleincrement
Set()
UserInterface:Dialogs 389AttributeName GetFunction SetFunction(s)
.Editable onpage ProUISpinboxIsEditable() ProUISpinboxEditable()
ProUISpinboxReadOnly()
.FastDoubleIncre
ment onpageProUISpinboxFastdoublein
crementGet()ProUISpinboxFastdoubleincre
mentSet()
.FastIncrement on
pageProUISpinboxFastincrement
Get()ProUISpinboxFastincrement
Set()
.HelpText onpage ProUISpinboxHelptextGet() ProUISpinboxHelptextSet()
.Increment onpage ProUISpinboxIncrement
Get()ProUISpinboxIncrementSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGet()ProUISpinboxFastincrement
Set()
.HelpText onpage ProUISpinboxHelptextGet() ProUISpinboxHelptextSet()
.Increment onpage ProUISpinboxIncrement
Get()ProUISpinboxIncrementSet()
.InputType onpage ProUISpinboxInputtype
Get()ProUISpinboxInputtypeSet()
.Integer onpage ProUISpinboxIntegerGet() ProUISpinboxIntegerSet()
.LeftOffset on
pageProUISpinboxLeftoffset
Get()ProUISpinboxLeftoffsetSet()
.MaxDouble onpage ProUISpinboxMaxdouble
Get()ProUISpinboxMaxdoubleSet()
.MaxInteger on
pageProUISpinboxMaxinteger
Get()ProUISpinboxMaxintegerSet()
.MinDouble onpage ProUISpinboxMindouble
Get()ProUISpinboxMindoubleSet()
.MinInteger on
pageProUISpinboxMininteger
Get()ProUISpinboxMinintegerSet()
.ParentName on
pageProUISpinboxParentname
Get()NotApplicable
.PopupMenu onpage ProUISpinboxPopupmenu
Get()ProUISpinboxPopupmenuSet()
.RightOffset on
pageProUISpinboxRightoffset
Get()ProUISpinboxRightoffset
Set()
.Sensitive onpage ProUISpinboxIsEnabled() ProUISpinboxEnable()
ProUISpinboxDisable()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGet()ProUISpinboxPopupmenuSet()
.RightOffset on
pageProUISpinboxRightoffset
Get()ProUISpinboxRightoffset
Set()
.Sensitive onpage ProUISpinboxIsEnabled() ProUISpinboxEnable()
ProUISpinboxDisable()
.TopOffset onpage ProUISpinboxTopoffset
Get()ProUISpinboxTopoffsetSet()
.Visible onpage ProUISpinboxIsVisible() ProUISpinboxShow()
ProUISpinboxHide()
SpinboxActionCallbacks
Functions Introduced:
•ProUISpinboxUpdateActionSet()
•ProUISpinboxActivateActionSet()
Usethefunction ProUISpinboxUpdateActionSet() and
ProUISpinboxActivateActionSet() tosettheupdateandactivate
actionforaspinboxrespectively .
390 Creo®Parametric TOOLKIT User’sGuideSpinboxOperations
Functions Introduced
•ProUISpinboxAnchorSet()
•ProUISpinboxSizeSet()
•ProUISpinboxMinimumsizeGet()
•ProUISpinboxPositionSet()
•ProUISpinboxPositionGet()
•ProUISpinboxSizeGet()
Usethefunction ProUISpinboxAnchorSet() tosetthepositionofthe
spinboxwithrespecttoagivenanchorlocation.Thisfunctionisapplicable onlyif
theparentoftheSpinboxisadrawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUISpinboxSizeGet()
Usethefunction ProUISpinboxAnchorSet() tosetthepositionofthe
spinboxwithrespecttoagivenanchorlocation.Thisfunctionisapplicable onlyif
theparentoftheSpinboxisadrawingarea.
Usethefunction ProUISpinboxSizeSet() tosetthesizeofthespinbox.
Thisfieldisusedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyou
specifyavaluesmallerthantheminimumsizefortheinputarguments widthor
height.
Usethefunction ProUISpinboxMinimumsizeGet() toretrievethe
minimumsizeofthewidthandheightofthespinboxinpixels.Usethisfunction
onlyiftheparentisadrawingarea.
Usethefunction ProUISpinboxPositionSet() tosetthepositiontothe
spinboxwithrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawing
area.
Usethefunction ProUISpinboxPositionGet() togetthepositiontothe
spinboxwithrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawing
area.
Usethefunction ProUISpinboxSizeGet() togetthesizeofthespinbox.
Thisfieldisusedonlyiftheparentisadrawingarea.
Tab
TabAttributesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarea.
Usethefunction ProUISpinboxSizeGet() togetthesizeofthespinbox.
Thisfieldisusedonlyiftheparentisadrawingarea.
Tab
TabAttributes
AttributeNameGetFunction SetFunction(s)
.AttachBottom
onpageProUITabIsAttachedBot
tom()ProUITabAttachBottom()
ProUITabUnattachBottom
.AttachTop on
pageProUITabIsAttached
Top()ProUITabAttachTop()
ProUITabUnattachTop()
.AttachRight on
pageProUITabIsAttached
Right()ProUITabAttachRight()
ProUITabUnattachRight()
UserInterface:Dialogs 391AttributeNameGetFunction SetFunction(s)
.AttachLeft on
pageProUITabIsAttached
Left()ProUITabAttachLeft()
ProUITabUnattachLeft()
.BottomOffset
onpageProUITabBottomoffset
Get()ProUITabBottomoffsetSet()
.Decorated on
pageProUITabIsDecorated() ProUITabDecorate()
ProUITabUndecorate()
.HelpText on
pageProUITabHelptextGet() ProUITabHelptextSet()
.ItemHelpText
onpageProUITabItemhelptext
Get()ProUITabItemhelptextSet()
.Label onpage ProUITabLabelsGet() ProUITabLabelsSet()
.LeftOffset on
pageProUITabLeftoffset
Get()ProUITabLeftoffsetSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ItemHelpText
onpageProUITabItemhelptext
Get()ProUITabItemhelptextSet()
.Label onpage ProUITabLabelsGet() ProUITabLabelsSet()
.LeftOffset on
pageProUITabLeftoffset
Get()ProUITabLeftoffsetSet()
.ParentName on
pageProUITabParentname
Get()NotApplicable
.PopupMenu on
pageProUITabPopupmenuGet() ProUITabPopupmenuSet()
.RightOffset on
pageProUITabRightoffset
Get()ProUITabRightoffsetSet()
.SelectedNames
onpageProUITabSelectednames
Get()ProUITabSelectednamesSet()
.Sensitive on
pageProUITabIsEnabled() ProUITabEnable()
ProUITabDisable()
.TopOffset on
pageProUITabTopoffsetGet() ProUITabTopoffsetSet()
.Visible onpage ProUITabIsVisible() ProUITabShow()
ProUITabHide()
TabOperations
Functions Introduced
•ProUIT abAnchorSet()
•ProUIT abSizeSet()
•ProUIT abMinimumsizeGet()
•ProUIT abPositionSet()
•ProUIT abPositionGet()
•ProUIT abSizeGet()
•ProUIT abLayoutAdd()
•ProUIT abLayoutsInsert()
•ProUIT abItemNameSet()
392 Creo®Parametric TOOLKIT User’sGuide•ProUIT abItemLabelSet()
•ProUIT abItemImageSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIT abSizeGet()
•ProUIT abLayoutAdd()
•ProUIT abLayoutsInsert()
•ProUIT abItemNameSet()
392 Creo®Parametric TOOLKIT User’sGuide•ProUIT abItemLabelSet()
•ProUIT abItemImageSet()
•ProUIT abItemHelptextStringSet()
•ProUIT abItemLabelGet()
•ProUIT abItemImageGet()
•ProUIT abItemHelptextStringGet()
•ProUIT abItemExtentsGet()
Usethefunction ProUITabAnchorSet() tosetthepositionoftheTabwith
respecttoagivenanchorlocation.Thisfunctionisapplicable onlyiftheparentof
theTabisadrawingarea.
Usethefunction ProUITabSizeSet() tosetthesizeoftheTab.Thisfieldis
usedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyouspecifya
valuesmallerthantheminimumsizefortheinputarguments widthorheight.
Usethefunction ProUITabMinimumsizeGet() toretrievetheminimumsize
ofthewidthandheightofthetabinpixels.Usethisfunctiononlyiftheparentisa
drawingarea.
Usethefunction ProUITabPositionSet() tosetthepositiontotheTabwith
respecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawingarea.
Usethefunction ProUITabPositionSet() tosetthepositiontotheTabwith
respecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITabPositionGet() togetthepositiontotheTab
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITabSizeGet() togetthesizeoftheTab.Thisfieldis
usedonlyiftheparentisadrawingarea.
Usethefunction ProUITabLayoutAdd() toaddanewlayouttothetab.Even
ifthelayouthasalabelassigned,youmustsetthetablabelswith
ProUITabLabelsSet() forthedecoratedtabtoshowtheappropriate labels.
Usethefunction ProUITabLayoutsInsert() toinsertanewlayoutafteran
existingcomponent inthetab.Evenifthelayoutshavelabelsassigned,youmust
setthetablabelswithProUITabLabelsSet() forthedecoratedtabtoshow
theappropriate labels.
Usethefunction ProUITabItemNameSet() tosetanewnametotheitemin
thetab.
Usethefunction ProUITabItemLabelSet() tosetthelabeloftheitemin
thetab.
Usethefunction ProUITabItemImageSet() tosettheimageoftheitemin
thetab.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthetab.
Usethefunction ProUITabItemLabelSet() tosetthelabeloftheitemin
thetab.
Usethefunction ProUITabItemImageSet() tosettheimageoftheitemin
thetab.
Usethefunction ProUITabItemHelptextStringSet() tosetthetextthat
shouldbedisplayedwhenthecursorisovertheiteminthetab.
UserInterface:Dialogs 393Usethefunction ProUITabItemLabelGet() togetthelabeloftheitemin
thetab.
Usethefunction ProUITabItemImageGet() togettheimageoftheitemin
thetab.
Usethefunction ProUITabItemHelptextStringGet() togetthetextthat
isdisplayedwhenthecursorisovertheiteminthetab.
Usethefunction ProUITabItemExtentsGet() togettheboundaryofthe
itemthatisinthetabrelativetothetopleftcornerofthedialog.
TabActionCallbacks
FunctionIntroduced
•ProUIT abSelectActionSet()
Usethefunction ProUITabSelectActionSet() setstheselectactionfora
tab.Thisfunctioniscalledwhentheuserselectsthetab.
Table
TableAttributes
AttributeName GetFunction SetFunction(s)
.ActivateOnReturn
onpageProUITableIsActivateonre
turnEnabled()ProUITableActivateonreturnEnxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTable
TableAttributes
AttributeName GetFunction SetFunction(s)
.ActivateOnReturn
onpageProUITableIsActivateonre
turnEnabled()ProUITableActivateonreturnEn
able()
ProUITableActivateonreturn
Disable()
.Alignment onpage ProUITableAlignmentGet() ProUITableAlignmentSet()
.AttachBottom on
pageProUITableIsAttachedBot
tom()ProUITableAttachBottom()
ProUITableUnattachBottom
.AttachTop onpage ProUITableIsAttached
Top()ProUITableAttachTop()
ProUITableUnattachTop()
.AttachRight on
pageProUITableIsAttached
Right()ProUITableAttachRight()
ProUITableUnattachRight()
.AttachLeft on
pageProUITableIsAttached
Left()ProUITableAttachLeft()
ProUITableUnattachLeft()
.Autohighlight on
pageProUITableIsAutohigh
lightEnabled()ProUITableAutohighlightEna
ble()
ProUITableAutohighlightDisa
ble()
.BottomOffset on
pageProUITableBottomoffset
Get()ProUITableBottomoffsetSet()
394 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.ChildNames on
pageProUITableChildnames
Get()NotApplicablexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpageProUITableBottomoffset
Get()ProUITableBottomoffsetSet()
394 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.ChildNames on
pageProUITableChildnames
Get()NotApplicable
.ColumnLabels on
pageProUITableColumnlabels
Get()ProUITableColumnlabelsSet()
.ColumnNames on
pageProUITableColumnnames
Get()ProUITableColumnnamesSet()
.ColumnWidths on
pageProUITableColumnwidths
Get()ProUITableColumnwidthsSet()
.ColumnResizings
onpageProUITableColumnresi
zingsGet()ProUITableColumnresizings
Set()
.ColumnSelection
Policy onpageProUITableColumnselec
tionpolicyGet()ProUITableColumnselectionpo
licySet()
.Columns onpage ProUITableColumnsGet() ProUITableColumnsSet()
.DefaultColumn
Width onpageProUITableDefaultcolumn
widthGet()ProUITableDefaultcolumnwidth
Set()
.HelpText onpage ProUITableHelptextGet() ProUITableHelptextSet()
.LeftOffset on
pageProUITableLeftoffset
Get()ProUITableLeftoffsetSet()
.LockedColumns on
pageProUITableLockedcolumns
Get()ProUITableLockedcolumnsSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.LeftOffset on
pageProUITableLeftoffset
Get()ProUITableLeftoffsetSet()
.LockedColumns on
pageProUITableLockedcolumns
Get()ProUITableLockedcolumnsSet()
.LockedRows on
pageProUITableLockedrows
Get()ProUITableLockedrowsSet()
.MinColumns on
pageProUITableMincolumns
Get()ProUITableMincolumnsSet()
.MinRows onpage ProUITableMinrowsGet() ProUITableMinrowsSet()
.ParentName on
pageProUITableParentname
Get()NotApplicable
.PopupMenu onpage ProUITablePopupmenuGet() ProUITablePopupmenuSet()
.RightOffset on
pageProUITableRightoffset
Get()ProUITableRightoffsetSet()
.RowLabels onpage ProUITableRowlabelsGet() ProUITableRowlabelsSet()
.RowNames onpage ProUITableRownamesGet() ProUITableRownamesSet()
.RowSelectionPoli
cyonpageNotApplicable NotApplicable
.ScrollBarsWhen
Needed onpageProUITableUsesScrollbars
whenneeded()ProUITableUseScrollbarswhen
Needed()
ProUITableAlwaysUsescroll
Bars()
.SelectedNames on
pageProUITableSelectednames
Get()ProUITableSelectednamesSet()
.SelectedColumnxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhenneeded()ProUITableUseScrollbarswhen
Needed()
ProUITableAlwaysUsescroll
Bars()
.SelectedNames on
pageProUITableSelectednames
Get()ProUITableSelectednamesSet()
.SelectedColumn
Names onpageProUITableSelectedcolumn
namesGet()ProUITableSelectedcolumnna
mesSet()
.SelectedRowNames
onpageProUITableSelectedrowna
mesGet()ProUITableSelectedrownames
Set()
.Sensitive onpage ProUITableIsEnabled() ProUITableEnable()
ProUITableDisable()
.SelectionPolicy
onpageProUITableSelectionpoli
cyGet()ProUITableSelectionpolicy
Set()
UserInterface:Dialogs 395AttributeName GetFunction SetFunction(s)
.ShowGrid onpage ProUITableShowgridGet() ProUITableShowgridSet()
.TopOffset onpage ProUITableTopoffsetGet() ProUITableTopoffsetSet()
.TruncateLabel on
pageProUITableTruncatelabel
Get()ProUITableTruncatelabelSet()
.Visible onpage ProUITableIsVisible() ProUITableShow()
ProUITableHide()
.VisibleRows on
pageProUITableVisiblerows
Get()ProUITableVisiblerowsSet()
AddingandRemovingComponentsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.Visible onpage ProUITableIsVisible() ProUITableShow()
ProUITableHide()
.VisibleRows on
pageProUITableVisiblerows
Get()ProUITableVisiblerowsSet()
AddingandRemovingComponents
Component NameAddingFunctions RemovingFunctions
Checkbutton ProUITableCheckbutto
nAdd()ProUITableCheckbuttonRe
move()
Drawingarea ProUITableDrawingar
eaAdd()ProUITableDrawingareaRe
move()
Inputpanel ProUITableInputpane
lAdd()ProUITableInputpanelRemove()
Label ProUITableLabelAdd() ProUITableLabelRemove()
Layout ProUITableLayoutAdd() ProUITableLayoutRemove()
List ProUITableListAdd() ProUITableListRemove()
Optionmenu ProUITableOptionme
nuAdd()ProUITableOptionmenuRemove()
Progressbar ProUITableProgressbar
Add()ProUITableProgressbarRe
move()
Pushbutton ProUITablePushbutto
nAdd()ProUITablePushbuttonRemove()
Radiogroup ProUITableRadiogrou
pAdd()ProUITableRadiogroupRemove()
Slider ProUITableSliderAdd() ProUITableSliderRemove()
Spinbox ProUITableSpinboxAdd() ProUITableSpinboxRemove()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRadiogroup ProUITableRadiogrou
pAdd()ProUITableRadiogroupRemove()
Slider ProUITableSliderAdd() ProUITableSliderRemove()
Spinbox ProUITableSpinboxAdd() ProUITableSpinboxRemove()
Tab ProUITableTabAdd() ProUITableTabRemove()
Table ProUITableTableAdd() ProUITableTableRemove()
Textarea ProUITableTextareaAdd() ProUITableTextareaRemove()
Thumbwheel ProUITableThumbwhee
lAdd()ProUITableThumbwheelRemove()
Tree ProUITableTreeAdd() ProUITableTreeRemove()
TableCellFunctions
Functions Introduced
•ProUIT ableCellLabelSet()
•ProUIT ableCellLabelGet()
•ProUIT ableCellHelpT extSet()
396 Creo®Parametric TOOLKIT User’sGuide•ProUIT ableIsCellSensitive()
•ProUIT ableCellEnable()
•ProUIT ableCellDisable()
•ProUIT ableCellComponentNameSet()
•ProUIT ableCellComponentNameGet()
•ProUIT ableCellComponentCopy()
•ProUIT ableCellComponentDelete()
•ProUIT ableAnchorCellSet()
•ProUIT ableAnchorCellGet()
•ProUIT ableFocusCellSet()
•ProUIT ableFocusCellGet()
•ProUIT ableCellHelptextStringGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIT ableCellComponentDelete()
•ProUIT ableAnchorCellSet()
•ProUIT ableAnchorCellGet()
•ProUIT ableFocusCellSet()
•ProUIT ableFocusCellGet()
•ProUIT ableCellHelptextStringGet()
•ProUIT ableCellHelptextStringSet()
•ProUIT ableCellFore groundColorGet()
•ProUIT ableCellFore groundColorSet()
•ProUIT ableCellBackgro undColorGet()
•ProUIT ableCellBackgro undColorSet()
Usethefunction ProUITableCellLabelSet() tosetthetextcontainedin
thetablecell.
Usethefunction ProUITableCellLabelGet() togetthetextcontainedin
thetablecell.
Usethefunction ProUITableCellHelpTextSet() tosetthehelptextfor
thetablecell.
Usethefunction ProUITableIsCellSensitive() todetermine ifthetable
cellissensitivetouserinput.
Usethefunction ProUITableCellEnable() tosetthetablecelltobe
sensitivetouserinput.
Usethefunction ProUITableCellDisable() tosetthetablecelltobe
insensitive touserinput.
Usethefunction ProUITableCellComponentNameSet() tosetthe
component namecontainedinthetablecell.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProUITableCellDisable() tosetthetablecelltobe
insensitive touserinput.
Usethefunction ProUITableCellComponentNameSet() tosetthe
component namecontainedinthetablecell.
Usethefunction ProUITableCellComponentNameGet() togetthe
component namecontainedinthetablecell.
Usethefunction ProUITableCellComponentCopy() tocopyapredefined
component andplacesitinthetableinthedesignated cell.Thecomponent willbe
displayedinthiscell.
UserInterface:Dialogs 397Usethefunction ProUITableCellComponentDelete() toremovethe
component containedinthetablecell.
Usethefunction ProUITableAnchorCellSet() tosetthecoordinates of
thetableselectionanchorcell.
Usethefunction ProUITableAnchorCellGet() togetthecoordinates of
thetableselectionanchorcell.
Usethefunction ProUITableFocusCellSet() tosetthecoordinates ofthe
tableselectionfocuscell.
Usethefunction ProUITableFocusCellGet() togetthecoordinates ofthe
tableselectionfocuscell.
Usethefunction ProUITableCellHelptextStringGet() togetthehelp-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtableselectionfocuscell.
Usethefunction ProUITableFocusCellGet() togetthecoordinates ofthe
tableselectionfocuscell.
Usethefunction ProUITableCellHelptextStringGet() togetthehelp-
textthatisdisplayedwhilethecursorisoverthetablecell.
Usethefunction ProUITableCellHelptextStringSet() tosetthehelp-
texttobedisplayedwhenthecursorisoverthetablecell.
Usethefunction ProUITableCellForegroundColorGet() togetthe
foreground colorofthetablecell.
Usethefunction ProUITableCellForegroundColorSet() tosetthe
foreground colorofthetable.
Usethefunction ProUITableCellBackgroundColorGet() togetthe
background colorofthetablecell.
Usethefunction ProUITableCellBackgroundColorSet() tosetthe
background colorofthetablecell.
Example5:ToAssignComponents intoTableCells
ThesamplecodeinUgUITables.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_ui showshowto
assigncomponents intotablecells.
TableRowFunctions
Functions Introduced
•ProUIT ableRowIndexGet()
•ProUIT ableRowRename()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloadpoint>/protk_appls/pt_userguide/ptu_ui showshowto
assigncomponents intotablecells.
TableRowFunctions
Functions Introduced
•ProUIT ableRowIndexGet()
•ProUIT ableRowRename()
•ProUIT ableRowLabelSet()
•ProUIT ableRowLabelGet()
•ProUIT ableRowsInsert()
•ProUIT ableRowsDelete()
398 Creo®Parametric TOOLKIT User’sGuide•ProUIT ableRowCellsSelect()
•ProUIT ableRowCellsDeselect()
•ProUIT ableRowCellLabelsSet()
Usethefunction ProUITableRowIndexGet() togettheindexofthetable
rowwiththegivenname.
Usethefunction ProUITableRowRename() torenamethetablerow.
Usethefunction ProUITableRowLabelSet() tosettheuser-visiblelabelfor
thetablerow.
Usethefunction ProUITableRowLabelGet() togettheuser-visiblelabel
forthetablerow.
Usethefunction ProUITableRowsInsert() toinsertoneormorenewrows
intothetable.
Usethefunction ProUITableRowsDelete() todeleteoneormorerows
fromthetable.
Usethefunction ProUITableRowCellsSelect() toselectthecellsofthe
givenrowsofthetable.ThetableselectionpolicymustbeeitherMultipleorxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfromthetable.
Usethefunction ProUITableRowCellsSelect() toselectthecellsofthe
givenrowsofthetable.ThetableselectionpolicymustbeeitherMultipleor
Extended.
Usethefunction ProUITableRowCellsDeselect() todeselectthecellsof
thegivenrowsofthetable.
Usethefunction ProUITableRowCellLabelsSet() tosetthecontentsof
thecellsoftherowsusingasinglestring.
TableColumnFunctions
Functions Introduced
•ProUIT ableColumnIndexGet()
•ProUIT ableColumnRename()
•ProUIT ableColumnLabelSet()
•ProUIT ableColumnLabelGet()
•ProUIT ableColumnW idthSet()
•ProUIT ableColumnW idthGet()
•ProUIT ableColumnResizingFactorSet()
•ProUIT ableColumnResizingFactorGet()
•ProUIT ableColumnsInsert()
•ProUIT ableColumnsDelete()
•ProUIT ableColumnCellsSelect()
UserInterface:Dialogs 399•ProUIT ableColumnCellsDeselect()
•ProUIT ableResetColumnW idth()
Usethefunction ProUITableColumnIndexGet() togetthecolumnindex
foragivencolumn.
Usethefunction ProUITableColumnRename() torenameatablecolumn.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIT ableResetColumnW idth()
Usethefunction ProUITableColumnIndexGet() togetthecolumnindex
foragivencolumn.
Usethefunction ProUITableColumnRename() torenameatablecolumn.
Usethefunction ProUITableColumnLabelSet() tosettheuservisible
labelforthecolumn.
Usethefunction ProUITableColumnLabelGet() togettheuser-visible
labelforthecolumn.
Usethefunction ProUITableColumnWidthSet() tosetthewidthofthe
columninthetable.
Usethefunction ProUITableColumnWidthGet() togetthewidthofthe
columninthetable.
Usethefunction ProUITableColumnResizingFactorSet() tosetthe
resizingfactorofthecolumninthetable.
Usethefunction ProUITableColumnResizingFactorGet() togetthe
resizingfactorofthecolumninthetable.
Usethefunction ProUITableColumnsInsert() toinsertoneormore
columnsintothetable.
Usethefunction ProUITableColumnsDelete() todeleteoneormore
columnsfromthetable.
Usethefunction ProUITableColumnCellsSelect() toselectthecellsof
thegivencolumnsinthetable.
Usethefunction ProUITableColumnCellsDeselect() todeselectthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcolumnsfromthetable.
Usethefunction ProUITableColumnCellsSelect() toselectthecellsof
thegivencolumnsinthetable.
Usethefunction ProUITableColumnCellsDeselect() todeselectthe
cellsofthegivencolumnsinthetable.
Usethefunction ProUITableResetColumnWidth() tosetthecolumn
widthtothedefault.
Example6:ToAccessandModifyNamesandLabelsforthe
TableRowsandColumns
ThesamplecodeinUgUITables.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_ui showshowto
accessandmodifynamesandlabelsfortheTablerowsandcolumnsandalsoto
access,allocateandfreethestringandwidestringarrays.
TableOperations
Functions Introduced
400 Creo®Parametric TOOLKIT User’sGuide•ProUIT ableAnchorSet()
•ProUIT ableSizeSet()
•ProUIT ableMinimumsizeGet()
•ProUIT ablePositionSet()
•ProUIT ablePositionGet()
•ProUIT ableSizeGet()
•ProUIT ableComponentCopy()
•ProUIT ableComponentDelete()
Usethefunction ProUITableAnchorSet() tosetthepositionofthetable
withrespecttoagivenanchorlocation.Thisfunctionisapplicable onlyifthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIT ableComponentCopy()
•ProUIT ableComponentDelete()
Usethefunction ProUITableAnchorSet() tosetthepositionofthetable
withrespecttoagivenanchorlocation.Thisfunctionisapplicable onlyifthe
parentofthetableisadrawingarea.
Usethefunction ProUITableSizeSet() tosetthesizeofthetable.Thisfield
isusedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyouspecifya
valuesmallerthantheminimumsizefortheinputarguments widthorheight.
Usethefunction ProUITableMinimumsizeGet() toretrievetheminimum
sizeofthewidthandheightofthetableinpixels.Usethisfunctiononlyifthe
parentisadrawingarea.
Usethefunction ProUITablePositionSet() tosetthepositiontothetable
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITablePositionGet() togetthepositiontothetable
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITableSizeGet() togetthesizeofthetable.This
fieldisusedonlyiftheparentisadrawingarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwithrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITableSizeGet() togetthesizeofthetable.This
fieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITableComponentCopy() tocopyapredefined
component andplaceitinthetable.Thecomponent isnotdisplayeduntilitis
assignedtoatablecellusing ProUITableCellComponentNameSet().
However,youcanupdatethecomponent's properties asneededanddisplayitata
latertime.
Usethefunction ProUITableComponentDelete() todeleteaspecified
component fromthetable.
TableActionCallbacks
Functions Introduced
•ProUIT ableArmActionSet()
•ProUIT ableDisarmActionSet()
•ProUIT ableSelectActionSet()
•ProUIT ableActivateActionSet()
UserInterface:Dialogs 401•ProUIT ableFocusinActionSet()
•ProUIT ableFocusoutActionSet()
•ProUIT ableColumnselectActionSet()
Usethefunction ProUITableArmActionSet() tosetthearmactionfora
table.Thisfunctioniscalledwhentheuserchangestheselectionanchorcelland
focuscellinthetable.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIT ableColumnselectActionSet()
Usethefunction ProUITableArmActionSet() tosetthearmactionfora
table.Thisfunctioniscalledwhentheuserchangestheselectionanchorcelland
focuscellinthetable.
Usethefunction ProUITableDisarmActionSet() tosetthedisarmaction
foratable.Thisfunctioniscalledwhentheuserchangestheselectionfocuscell
inthetable.
Usethefunction ProUITableSelectActionSet() tosettheselectaction
foratable.Thisfunctioniscalledwhentheuserchangestheselectedcellsinthe
table.
Usethefunction ProUITableActivateActionSet() tosettheactivate
actionforatable.Thisfunctioniscalledwhentheuserpressesthereturnkeyor
double-clicks theleftmousebuttoninthetable.
Usethefunction ProUITableFocusinActionSet() tosetthefocusin
actionforatable.
Usethefunction ProUITableFocusoutActionSet() tosetthefocusout
actionforatable.
Usethefunction ProUITableColumnselectActionSet() tosetthe
columnselectionactionforthetable.Thisfunctioniscalledwhentheuser
changesthecurrentlyselectedtablecolumns.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxactionforatable.
Usethefunction ProUITableColumnselectActionSet() tosetthe
columnselectionactionforthetable.Thisfunctioniscalledwhentheuser
changesthecurrentlyselectedtablecolumns.
Example7:ToAccessSelectedNamesArrayfromTables
ThesamplecodeinUgUITables.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_ui showshowto
accessselectednamesarrayfromtables.
Textarea
TextareaAttributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUITextareaIsAttachedBot
tom()ProUITextareaAttachBot
tom()
ProUITextareaUnattachBot
tom()
.AttachTop onpage ProUITextareaIsAttached
Top()ProUITextareaAttachTop()
ProUITextareaUnattachTop()
402 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
.AttachRight on
pageProUITextareaIsAttached
Right()ProUITextareaAttachRight()
ProUITextareaUnattach
Right()
.AttachLeft on
pageProUITextareaIsAttached
Left()ProUITextareaAttachLeft()
ProUITextareaUnatta
chLeft()
.BottomOffset on
pageProUITextareaBottomoffsetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUITextareaUnattach
Right()
.AttachLeft on
pageProUITextareaIsAttached
Left()ProUITextareaAttachLeft()
ProUITextareaUnatta
chLeft()
.BottomOffset on
pageProUITextareaBottomoffset
Get()ProUITextareaBottomoffset
Set()
.Columns onpage ProUITextareaColumnsGet() ProUITextareaColumnsSet()
.Editable onpage ProUITextareaIsEditable() ProUITextareaEditable()
ProUITextareaReadOnly()
.HelpText onpage ProUITextareaHelptextGet() ProUITextareaHelptextSet()
.LeftOffset on
pageProUITextareaLeftoffset
Get()ProUITextareaLeftoffset
Set()
.MinRows onpage ProUITextareaMinrowsGet() ProUITextareaMinrowsSet()
.MaxLen onpage ProUITextareaMaxlenGet() ProUITextareaMaxlenSet()
.ParentName on
pageProUITextareaParentname
Get()NotApplicable
.PopupMenu onpage ProUITextareaPopupmenu
Get()ProUITextareaPopupmenu
Set()
.RightOffset on
pageProUITextareaRightoffset
Get()ProUITextareaRightoffset
Set()
.Rows onpage ProUITextareaRowsGet() ProUITextareaRowsSet()
.Sensitive onpage ProUITextareaIsEnabled() ProUITextareaEnable()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpageProUITextareaRightoffset
Get()ProUITextareaRightoffset
Set()
.Rows onpage ProUITextareaRowsGet() ProUITextareaRowsSet()
.Sensitive onpage ProUITextareaIsEnabled() ProUITextareaEnable()
ProUITextareaDisable()
.TopOffset onpage ProUITextareaTopoffset
Get()ProUITextareaTopoffset
Set()
.Value onpage ProUITextareaValueGet() ProUITextareaValueSet()
.Visible onpage ProUITextareaIsVisible() ProUITextareaShow()
ProUITextareaHide()
TextareaOperations
Functions Introduced
•ProUIT extar eaAnchorSet()
•ProUIT extar eaSizeSet()
•ProUIT extar eaMinimumsizeGet
•ProUIT extar eaPositionGet()
•ProUIT extar eaPositionSet()
•ProUIT extar eaSizeGet()
UserInterface:Dialogs 403Usethefunction ProUITextareaAnchorSet() tosetthepositionofthe
Textareawithrespecttoagivenanchorlocation.Thisfunctionisapplicable only
iftheparentoftheTextareaisadrawingarea.
Usethefunction ProUITextareaSizeSet() tosetthesizeoftheTextarea.
Thisoperationisapplicable onlyiftheparentisadrawingarea.ThefunctionwillxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxiftheparentoftheTextareaisadrawingarea.
Usethefunction ProUITextareaSizeSet() tosetthesizeoftheTextarea.
Thisoperationisapplicable onlyiftheparentisadrawingarea.Thefunctionwill
fail,ifyouspecifyavaluesmallerthantheminimumsizefortheinputarguments
widthorheight.
Usethefunction ProUITextareaMinimumsizeGet toretrievetheminimum
sizeofthewidthandheightofthetextareainpixels.Usethisfunctiononlyifthe
parentisadrawingarea.
Usethefunction ProUITextareaPositionGet() togetthepositionofthe
Textareawithrespecttoitsparent.Thisoperationisapplicable onlyiftheparentis
adrawingarea.
Usethefunction ProUITextareaPositionSet() tosetthepositiontothe
Textareawithrespecttoitsparent.Thisoperationisapplicable onlyiftheparentis
adrawingarea.
Usethefunction ProUITextareaSizeGet() togetthesizeoftheTextarea.
Thisoperationisapplicable onlyiftheparentisadrawingarea.
TextareaActionCallbacks
Functions Introduced
•ProUIT extar eaActivateActionSet()
•ProUIT extar eaFocusinActionSet()
•ProUIT extar eaFocusoutActionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTextareaActionCallbacks
Functions Introduced
•ProUIT extar eaActivateActionSet()
•ProUIT extar eaFocusinActionSet()
•ProUIT extar eaFocusoutActionSet()
•ProUIT extar eaInputActionSet()
Usethefunction ProUITextareaActivateActionSet() tosettheaction
callbacktobecalledwhentheuserhitsreturninanTextarea.
Usethefunction ProUITextareaFocusinActionSet() tosetthefocusin
actionforanTextarea.Thisfunctioniscalledwhentheusermovesthecursoronto
theTextareausingthemouseor<TAB>key.
Usethefunction ProUITextareaFocusoutActionSet() tosetthefocus
outactionforanTextarea.Thisfunctioniscalledwhentheusermovesthecursor
offoftheTextareausingthemouseor<TAB>key.
Usethefunction ProUITextareaInputActionSet() tosettheaction
callbacktobecalledwhentheuserentersakeyinanTextarea.
404 Creo®Parametric TOOLKIT User’sGuideThumbwheel
Thumbwheel Attributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIThumbwheelIsAtta
chedBottom()ProUIThumbwheelAttachBot
tom()
ProUIThumbwheelUnattachBot
tomxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThumbwheel Attributes
AttributeName GetFunction SetFunction(s)
.AttachBottom on
pageProUIThumbwheelIsAtta
chedBottom()ProUIThumbwheelAttachBot
tom()
ProUIThumbwheelUnattachBot
tom
.AttachTop onpage ProUIThumbwheelIsAtta
chedTop()ProUIThumbwheelAttachTop()
ProUIThumbwheelUnattach
Top()
.AttachRight on
pageProUIThumbwheelIsAtta
chedRight()ProUIThumbwheelAttach
Right()
ProUIThumbwheelUnattach
Right()
.AttachLeft onpage ProUIThumbwheelIsAtta
chedLeft()ProUIThumbwheelAttachLeft()
ProUIThumbwheelUnatta
chLeft()
.BottomOffset on
pageProUIThumbwheelBottomoff
setGet()ProUIThumbwheelBottomoffset
Set()
.HelpText onpage ProUIThumbwheelHelptext
Get()ProUIThumbwheelHelptext
Set()
.Integer onpage ProUIThumbwheelInteger
Get()ProUIThumbwheelIntegerSet()
.LeftOffset onpage ProUIThumbwheelLeftoff
setGet()ProUIThumbwheelLeftoffset
Set()
.MaxInteger onpage ProUIThumbwheelMaxinte
gerGet()ProUIThumbwheelMaxinteger
Set()
.MinInteger onpage ProUIThumbwheelMininte
gerGet()ProUIThumbwheelMininteger
Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
.MaxInteger onpage ProUIThumbwheelMaxinte
gerGet()ProUIThumbwheelMaxinteger
Set()
.MinInteger onpage ProUIThumbwheelMininte
gerGet()ProUIThumbwheelMininteger
Set()
.ParentName onpage ProUIThumbwheelParentna
meGet()NotApplicable
.PopupMenu onpage ProUIThumbwheelPopupmenu
Get()ProUIThumbwheelPopupmenu
Set()
.RightOffset on
pageProUIThumbwheelRightoff
setGet()ProUIThumbwheelRightoffset
Set()
.Sensitive onpage ProUIThumbwheelIsEna
bled()ProUIThumbwheelEnable()
ProUIThumbwheelDisable()
.TopOffset onpage ProUIThumbwheelTopoffset
Get()ProUIThumbwheelTopoffset
Set()
.UnitsPerRotation
onpageProUIThumbwheelUnitsper
rotationGet()ProUIThumbwheelUnitsperrota
tionSet()
.Visible onpage ProUIThumbwheelIsVisi
ble()ProUIThumbwheelShow()
ProUIThumbwheelHide()
UserInterface:Dialogs 405Thumbwheel Operations
Functions Introduced
•ProUIThumbwheelAnchorSet()
•ProUIThumbwheelSizeSet()
•ProUIThumbwheelMinimumsizeGet()
•ProUIThumbwheelPositionSet()
•ProUIThumbwheelPositionGet()
•ProUIThumbwheelSizeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced
•ProUIThumbwheelAnchorSet()
•ProUIThumbwheelSizeSet()
•ProUIThumbwheelMinimumsizeGet()
•ProUIThumbwheelPositionSet()
•ProUIThumbwheelPositionGet()
•ProUIThumbwheelSizeGet()
Usethefunction ProUIThumbwheelAnchorSet() tosetthepositionofthe
Thumbwheel withrespecttoagivenanchorlocation.Thisfunctionisapplicable
onlyiftheparentoftheThumbwheel isadrawingarea.
Usethefunction ProUIThumbwheelSizeSet() tosetthesizeofthe
Thumbwheel. Thisfieldisusedonlyiftheparentisadrawingarea.Thefunction
willfail,ifyouspecifyavaluesmallerthantheminimumsizefortheinput
arguments widthorheight.
Usethefunction ProUIThumbwheelMinimumsizeGet() toretrievethe
minimumsizeofthewidthandheightofthethumbwheelinpixels.Usethis
functiononlyiftheparentisadrawingarea.
Usethefunction ProUIThumbwheelPositionSet() tosetthepositionto
theThumbwheel withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIThumbwheelPositionGet() togetthepositiontoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheThumbwheel withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIThumbwheelPositionGet() togetthepositionto
theThumbwheel withrespecttoitsparent.Thisfieldisusedonlyiftheparentisa
drawingarea.
Usethefunction ProUIThumbwheelSizeGet() togetthesizeofthe
Thumbwheel. Thisfieldisusedonlyiftheparentisadrawingarea.
Thumbwheel ActionCallbacks
Functions Introduced
•ProUIThumbwheelUpdateActionSet()
Usethefunction ProUIThumbwheelUpdateActionSet() tosettheupdate
actionfortheThumbwheel.
406 Creo®Parametric TOOLKIT User’sGuideTree
TreeAttributes
AttributeName GetFunction SetFunction(s)
.ActivateOnRe
turn onpageProUITreeIsActivateonretur
nEnabled()ProUITreeActivateonreturnEn
able()
ProUITreeActivateonreturn
Disable()
.AttachBottom on
pageProUITreeIsAttachedBot
tom()ProUITreeAttachBottom()
ProUITreeUnattachBottom()
.AttachLeft on
pageProUITreeIsAttachedLeft() ProUITreeAttachLeft()
ProUITreeUnattachLeft()
.AttachRight onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpageProUITreeIsAttachedBot
tom()ProUITreeAttachBottom()
ProUITreeUnattachBottom()
.AttachLeft on
pageProUITreeIsAttachedLeft() ProUITreeAttachLeft()
ProUITreeUnattachLeft()
.AttachRight on
pageProUITreeIsAttachedRight() ProUITreeAttachRight()
ProUITreeUnattachRight()
.AttachTop on
pageProUITreeIsAttachedTop() ProUITreeAttachTop()
ProUITreeUnattachTop()
.BackgroundColor
onpageProUITreeBackgroundcolor
Get()ProUITreeBackgroundcolor
Set()
.BottomOffset on
pageProUITreeBottomoffsetGet() ProUITreeBottomoffsetSet()
.LeftOffset on
pageProUITreeLeftoffsetGet() ProUITreeLeftoffsetSet()
.RightOffset on
pageProUITreeRightoffsetGet() ProUITreeRightoffsetSet()
.TopOffset on
pageProUITreeTopoffsetGet() ProUITreeTopoffsetSet()
.Columns onpage NotApplicable NotApplicable
.ForegroundColor
onpageProUITreeForegroundcolor
Get()ProUITreeForegroundcolor
Set()
.HelpText onpage ProUITreeHelptextGet() ProUITreeHelptextSet()
.Label onpage NotApplicable NotApplicable
.LabelAlignmentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonpageProUITreeForegroundcolor
Get()ProUITreeForegroundcolor
Set()
.HelpText onpage ProUITreeHelptextGet() ProUITreeHelptextSet()
.Label onpage NotApplicable NotApplicable
.LabelAlignment
onpageNotApplicable NotApplicable
.Lastentereditem
onpageProUITreeLastentereditem
Get()NotApplicable
.Mapped onpage ProUITreeIsMapped() ProUITreeMappedSet()
ProUITreeMappedUnset()
.MinColumns on
pageNotApplicable NotApplicable
.MinRows onpage NotApplicable NotApplicable
.MixedState on
pageProUITreeMixedStateGet() ProUITreeMixedStateSet()
.ParentName on
pageProUITreeParentnameGet() NotApplicable
UserInterface:Dialogs 407AttributeName GetFunction SetFunction(s)
.PopupMenu on
pageProUITreePopupmenuGet() ProUITreePopupmenuSet()
.PopupWhenInsen
onpageProUITreeIsPopupwheninsen
sitiveEnabled()ProUITreeEnablePopupwhenin
sensitive()
ProUITreeDisablePopupwhenin
sensitive()
.ResizableCols on
pageNotApplicable NotApplicable
.Rows onpage ProUITreeRowsGet() ProUITreeRowsSet()
.ScrollBarsWhenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsensitive()
ProUITreeDisablePopupwhenin
sensitive()
.ResizableCols on
pageNotApplicable NotApplicable
.Rows onpage ProUITreeRowsGet() ProUITreeRowsSet()
.ScrollBarsWhen
Needed onpageProUITreeUsesScrollbars
whenneeded()ProUITreeUseScrollbarswhen
Needed()
ProUITreeAlwaysUsescroll
Bars()
.SelectedNames on
pageProUITreeSelectednames
Get()ProUITreeSelectednamesSet()
.SelectionPolicy
onpageProUITreeSelectionpolicy
Get()ProUITreeSelectionpolicy
Set()
.SelectByCell on
pageNotApplicable NotApplicable
.SelectCBRegard
less onpageProUITreeSelectcbregar
dlessGet()ProUITreeSelectcbregardless
Set()
.Sensitive on
pageProUITreeIsEnabled() ProUITreeEnable()
ProUITreeDisable()
.TreeAttribute
Window onpageNotApplicable NotApplicable
.TreeBoxNodes on
pageNotApplicable NotApplicable
.TreeCellInput on
pageProUITreeTreecellinput
Get()NotApplicable
.TreeCellSelCol
onpageProUITreeTreecellselcol
Get()ProUITreeTreecellselcol
Set()
.TreeCellSelNode
onpageProUITreeTreecellselnode
Get()ProUITreeTreecellselnode
Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGet()NotApplicable
.TreeCellSelCol
onpageProUITreeTreecellselcol
Get()ProUITreeTreecellselcol
Set()
.TreeCellSelNode
onpageProUITreeTreecellselnode
Get()ProUITreeTreecellselnode
Set()
.TreeChildOrder
onpageNotApplicable NotApplicable
.TreeColumns
Justs onpageNotApplicable NotApplicable
.TreeColumns
Names onpageNotApplicable NotApplicable
.TreeColumnsTi
tles onpageNotApplicable NotApplicable
.TreeColumns
Widths onpageNotApplicable NotApplicable
.TreeColumnOrder
onpageProUITreeTreecolumnorder
Get()ProUITreeTreecolumnorder
Set()
.TreeCurrent on
pageProUITreeTreecurrentnode
Get()ProUITreeTreecurrentnode
Set()
.TreeDisplayRoot ProUITreeIsRootnodeVisi ProUITreeShowRootnode()
408 Creo®Parametric TOOLKIT User’sGuideAttributeName GetFunction SetFunction(s)
onpage ble()ProUITreeHideRootnode()
.TreeExpColNode
onpageProUITreeTreeexpcolnode
Get()NotApplicable
.TreeIndicate
Children onpageNotApplicable NotApplicable
.TreeInitialSash
Percent onpageNotApplicable NotApplicable
.TreeKeyboardInxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.TreeExpColNode
onpageProUITreeTreeexpcolnode
Get()NotApplicable
.TreeIndicate
Children onpageNotApplicable NotApplicable
.TreeInitialSash
Percent onpageNotApplicable NotApplicable
.TreeKeyboardIn
putonpageProUITreeIsCellkeyboardin
putEnabled()ProUITreeEnableCellkeyboar
dinput()
ProUITreeDisableCellkeyboar
dinput()
.TreeLinkStyle on
pageNotApplicable NotApplicable
.TreeNodeTypeAp
pends onpageProUITreeTreenodetypeap
pendsGet()ProUITreeTreenodetypeap
pendsSet()
.TreeNodeTypeCol
lapsedImages on
pageProUITreeTreenodetypecol
lapsedimagesGet()ProUITreeTreenodetypecollap
sedimagesSet()
.TreeNodeTypeEx
pandedImages on
pageProUITreeTreenodetypeexpan
dedimagesGet()ProUITreeTreenodetypeexpan
dedimagesSet()
.TreeNodeType
HelpTexts onpageProUITreeTreenodetypehelp
textsGet()ProUITreeTreenodetypehelp
textsSet()
.TreeNodeTypePre
fixs onpageProUITreeTreenodetypepre
fixesGetProUITreeTreenodetypeprefix
esSet()
.TreeNodeType
Names onpageProUITreeTreenodetypenames
Get()ProUITreeTreenodetypenames
Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtextsSet()
.TreeNodeTypePre
fixs onpageProUITreeTreenodetypepre
fixesGetProUITreeTreenodetypeprefix
esSet()
.TreeNodeType
Names onpageProUITreeTreenodetypenames
Get()ProUITreeTreenodetypenames
Set()
.TreeRedraw on
pageProUITreeTreeredrawGet() ProUITreeTreeredrawSet()
.TreeRootNode on
pageProUITreeTreerootnodeGet() ProUITreeTreerootnodeSet()
.TreeState on
pageProUITreeStateGet() ProUITreeStateSet()
.TreeVerticalSB
Position onpageNotApplicable NotApplicable
.Visible onpage ProUITreeIsVisible() ProUITreeShow()
ProUITreeHide()
Note
Manyoftheproperties oftreesarecurrentlyonlysupported asapartofthe
resourcefile.Onlyverybasictreescanbecreatedusingprogrammatic means.
UserInterface:Dialogs 409AddingandRemovingComponents
Component Name AddingFunctions RemovingFunctions
Checkbutton ProUITreeCheckbutto
nAdd()ProUITreeCheckbuttonRe
move()
Drawingarea ProUITreeDrawingar
eaAdd()ProUITreeDrawingareaRe
move()
Inputpanel ProUITreeInputpane
lAdd()ProUITreeInputpanelRe
move()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCheckbutton ProUITreeCheckbutto
nAdd()ProUITreeCheckbuttonRe
move()
Drawingarea ProUITreeDrawingar
eaAdd()ProUITreeDrawingareaRe
move()
Inputpanel ProUITreeInputpane
lAdd()ProUITreeInputpanelRe
move()
Label ProUITreeLabelAdd() ProUITreeLabelRemove()
Layout ProUITreeLayoutAdd() ProUITreeLayoutRemove()
List ProUITreeListAdd() ProUITreeListRemove()
Optionmenu ProUITreeOptionme
nuAdd()ProUITreeOptionmenuRe
move()
Progressbar ProUITreeProgressbar
Add()ProUITreeProgressbarRe
move()
Pushbutton ProUITreePushbutto
nAdd()ProUITreePushbuttonRe
move()
Radiogroup ProUITreeRadiogrou
pAdd()ProUITreeRadiogroupRe
move()
Slider ProUITreeSliderAdd() ProUITreeSliderRemove()
Spinbox ProUITreeSpinboxAdd() ProUITreeSpinboxRe
move()
Tab ProUITreeTabAdd() ProUITreeTabRemove()
Table ProUITreeTableAdd() ProUITreeTableRemove()
Tree ProUITreeTreeAdd() ProUITreeTreeRemove()
Textarea ProUITreeTextareaAdd() ProUITreeTextareaRe
move()
Thumbwheel ProUITreeThumbwhee
lAdd()ProUITreeThumbwheelRe
move()
TreeColumnFunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTree ProUITreeTreeAdd() ProUITreeTreeRemove()
Textarea ProUITreeTextareaAdd() ProUITreeTextareaRe
move()
Thumbwheel ProUITreeThumbwhee
lAdd()ProUITreeThumbwheelRe
move()
TreeColumnFunctions
Functions Introduced
•ProUIT reeColumnCre ate()
•ProUIT reeColumnTit leGet()
•ProUIT reeColumnWi dthGet()
•ProUIT reeColumnV isibilityGet()
•ProUIT reeColumnJustificationGet()
•ProUIT reeColumnTit leSet()
•ProUIT reeColumnWi dthSet()
•ProUIT reeColumnV isibilitySet()
•ProUIT reeColumnJustificationSet()
410 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUITreeColumnCreate() tocreateacolumnofthe
givennameintheattributewindowofthetree.Thenamemustbeuniquewithin
thescopeofthecolumnsofthetree.
Usethefunction ProUITreeColumnTitleGet() toobtainthetitleofa
columninthetree.
Usethefunction ProUITreeColumnWidthGet() toobtainthewidthofa
columninthetree.
Usethefunction ProUITreeColumnVisibilityGet() toobtainthe
visibilityofacolumninthetree.
Usethefunction ProUITreeColumnJustificationGet() toobtainthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcolumninthetree.
Usethefunction ProUITreeColumnVisibilityGet() toobtainthe
visibilityofacolumninthetree.
Usethefunction ProUITreeColumnJustificationGet() toobtainthe
justification ofacolumninthetree.
Usethefunction ProUITreeColumnTitleSet() tosetatitletothecolumn
inthetree.
Usethefunction ProUITreeColumnWidthSet() tosetawidthtothe
columninthetree.
Usethefunction ProUITreeColumnVisibilitySet() tosetvisibilityof
thecolumninthetree.
Usethefunction ProUITreeColumnJustificationSet() toset
justification tothecolumninthetree.
TreeNodeFunctions
Functions Introduced
•ProUIT reeNodeComponentSet()
•ProUIT reeNodeChildre nGet()
•ProUIT reeNodeLabelGet()
•ProUIT reeNodeLabelSet()
•ProUIT reeNodeParentGet()
•ProUIT reeNodeT ypeGet()
•ProUIT reeNodeT ypeSet()
•ProUIT reeNodeExtentsGet()
•ProUIT reeNodesOfT ypeGet()
•ProUIT reeNodeAdd()
•ProUIT reeNodeInsert()
•ProUIT reeNodeCollapse()
•ProUIT reeNodeDelete()
UserInterface:Dialogs 411•ProUIT reeNodeExists()
•ProUIT reeNodeExpand()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIT reeNodesOfT ypeGet()
•ProUIT reeNodeAdd()
•ProUIT reeNodeInsert()
•ProUIT reeNodeCollapse()
•ProUIT reeNodeDelete()
UserInterface:Dialogs 411•ProUIT reeNodeExists()
•ProUIT reeNodeExpand()
•ProUIT reeNodeHelptextGet()
•ProUIT reeNodeIsV isible()
•ProUIT reeNodeIsExpanded()
•ProUIT reeNodeIsSelected()
•ProUIT reeNodeFontstyleGet()
•ProUIT reeNodeHelptextSet()
•ProUIT reeNodeShow()
•ProUIT reeNodeHide()
•ProUIT reeNodeSelect()
•ProUIT reeNodeDeselect()
•ProUIT reeNodeFontstyleSet()
•ProUIT reeNodeMove()
•ProUIT reeNodeRename()
•ProUIT reeNodetypeAdd()
•ProUIT reeNodetypeDelete()
•ProUIT reeNodeColumntextSet()
•ProUIT reeNodesSelect()
•ProUIT reeNodetypeSelect()
•ProUIT reeAllnodesSelect()
•ProUIT reeNodesDeselect()
•ProUIT reeNodetypeDeselect()
•ProUIT reeAllnodesDeselect()
•ProUIT reeNodeV isitAction()
•ProUIT reeNodeFilterAction()
•ProUIT reeNodesV isit()
Usethefunction ProUITreeNodeComponentSet() tosetthecomponent toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIT reeAllnodesDeselect()
•ProUIT reeNodeV isitAction()
•ProUIT reeNodeFilterAction()
•ProUIT reeNodesV isit()
Usethefunction ProUITreeNodeComponentSet() tosetthecomponent to
bedisplayedinthegivencolumncorresponding tothegivennodenameofthe
tree.
Usethefunction ProUITreeNodeChildrenGet() togetthechildnodesfor
thenodeinthetree.
Usethefunction ProUITreeNodeLabelGet() togetthelabelofthenodein
thetree.
412 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUITreeNodeLabelSet() tosetthelabelofthenodein
thetree.
Usethefunction ProUITreeNodeParentGet() togettheparentofthenode
inthetree.
Usethefunction ProUITreeNodeTypeGet() togetthenameofthenode
typeassociated withthenode.
Usethefunction ProUITreeNodeTypeSet() tosetthenameofthenodetype
associated withthenode.
Usethefunction ProUITreeNodeExtentsGet() togettheboundaryofthe
nodeofthetreerelativetothetop-leftcornerofthedialog.
Usethefunction ProUITreeNodesOfTypeGet() togetthenameofall
nodesofthetreeassociated withthenodetype.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnodeofthetreerelativetothetop-leftcornerofthedialog.
Usethefunction ProUITreeNodesOfTypeGet() togetthenameofall
nodesofthetreeassociated withthenodetype.
Usethefunction ProUITreeNodeAdd() toaddanewnodetothetree.
Usethefunction ProUITreeNodeInsert() toinsertanewnodebeforea
nodeinthetree.
Usethefunction ProUITreeNodeCollapse() tocollapseanodeinthetree
makingitschildreninvisible.
Usethefunction ProUITreeNodeDelete() todeletethenodeinthetree.
Usethefunction ProUITreeNodeExists() tochecksifthegivennodeexists
ornot.
Usethefunction ProUITreeNodeExpand() toexpandthenodeofthetree
makingallofitschildrenvisible.
Usethefunction ProUITreeNodeHelptextGet() togetthehelptextofthe
nodeinthetree.
Usethefunction ProUITreeNodeIsVisible() tochecksifthenodeis
shownorhidden.
Usethefunction ProUITreeNodeIsExpanded() tochecksifthenodeis
expandedorcollapsed.
Usethefunction ProUITreeNodeIsSelected() tochecksifthenodeis
selectedornot.
Usethefunction ProUITreeNodeFontstyleGet() togetthefontstyleof
thenode.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexpandedorcollapsed.
Usethefunction ProUITreeNodeIsSelected() tochecksifthenodeis
selectedornot.
Usethefunction ProUITreeNodeFontstyleGet() togetthefontstyleof
thenode.
Usethefunction ProUITreeNodeHelptextSet() tosetthehelptextofthe
nodeintree.
Usethefunction ProUITreeNodeShow() todisplaythenodeinatree.
Usethefunction ProUITreeNodeHide() tohidethenodeinthetree.
Usethefunction ProUITreeNodeSelect() toselectthenodeinthetree.
UserInterface:Dialogs 413Usethefunction ProUITreeNodeDeselect() tounselectthenodeinthe
tree.
Usethefunction ProUITreeNodeFontstyleSet() tosetfontstyletothe
nodeinthetree.
Usethefunction ProUITreeNodeMove() tomovethenodeinthetreetoa
childofthegivenparentnode.
Usethefunction ProUITreeNodeRename() torenamethegivennodeofthe
treeusingthegivenname.
Usethefunction ProUITreeNodetypeAdd() toaddanewnodetypetothe
treeusingtheinformation suppliedinthegivendatastructure.Use
ProUITreeNodeTypeAlloc() tofilltheProUITreeNodeType().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtreeusingthegivenname.
Usethefunction ProUITreeNodetypeAdd() toaddanewnodetypetothe
treeusingtheinformation suppliedinthegivendatastructure.Use
ProUITreeNodeTypeAlloc() tofilltheProUITreeNodeType().
Usethefunction ProUITreeNodetypeDelete() todeleteanodetypefrom
thetreeusingtheinformation suppliedinthegivendatastructure.
Usethefunction ProUITreeNodeColumntextSet() tosetthegiventextto
bedisplayedinthegivencolumncorresponding tothegivennodeofthetree.
Usethefunction ProUITreeNodesSelect() toselectanarrayofnodesin
thetree.
Usethefunction ProUITreeNodetypeSelect() toselectallthenodes
corresponding toagivennodetype.
Usethefunction ProUITreeAllnodesSelect() toselectallnodesinthe
tree.
Usethefunction ProUITreeNodesDeselect() tounselectanarrayofnodes
inthetree.
Usethefunction ProUITreeNodetypeDeselect() tounselectallthenodes
corresponding toagivennodetype.
Usethefunction ProUITreeAllnodesDeselect() tounselectallthenodes
inthetree.
Usethefunction ProUITreeParentnameGet() togetthenameoftheparentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcorresponding toagivennodetype.
Usethefunction ProUITreeAllnodesDeselect() tounselectallthenodes
inthetree.
Usethefunction ProUITreeParentnameGet() togetthenameoftheparent
tothetreecomponent.
Usethefunction ProUITreeChildnamesGet() togetthenameofthe
childrentothetreecomponent.
Usethefunction ProUITreeNodeVisitAction() forvisitingnodes.
Usethefunction ProUITreeNodeFilterAction() forfilteringnodes.
Usethefunction ProUITreeNodesVisit() tovisitsallthedescendent nodes
ofthegivennodeinthetree.
414 Creo®Parametric TOOLKIT User’sGuideTreeNodeTypeFunctions
Functions Introduced
•ProUIT reeNodeT ypeAlloc()
•ProUIT reeNodeT ypeFr ee()
•ProUIT reeNodeT ypeExpandImageSet()
•ProUIT reeNodeT ypeExpandImageGet()
•ProUIT reeNodeT ypeCollapseImageSet()
•ProUIT reeNodeT ypeCollapseImageGet()
•ProUIT reeNodeT ypePr efixSet()
•ProUIT reeNodeT ypePr efixGet()
•ProUIT reeNodeT ypeAppendStringSet()
•ProUIT reeNodeT ypeAppendStringGet()
•ProUIT reeNodeT ypeNodesSet()
•ProUIT reeNodeT ypeNodesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIT reeNodeT ypePr efixGet()
•ProUIT reeNodeT ypeAppendStringSet()
•ProUIT reeNodeT ypeAppendStringGet()
•ProUIT reeNodeT ypeNodesSet()
•ProUIT reeNodeT ypeNodesGet()
Usethefunction ProUITreeNodeTypeAlloc() toallocate
ProUITreeNodeType data.
Usethefunction ProUITreeNodeTypeFree() tofree
ProUITreeNodeType data.
Usethefunction ProUITreeNodeTypeExpandImageSet() tosetthe
imagetoappearwhenthenodetypeisexpanded.
Usethefunction ProUITreeNodeTypeExpandImageGet() togetthe
imagethatappearswhenthenodetypeisexpanded.
Usethefunction ProUITreeNodeTypeCollapseImageSet() tosetthe
imagetoappearwhenthenodetypeiscollapsed.
Usethefunction ProUITreeNodeTypeCollapseImageGet() togetthe
imagethatappearswhenthenodetypeiscollapsed.
Usethefunction ProUITreeNodeTypePrefixSet() tosetprefixtothe
nodetype.
Usethefunction ProUITreeNodeTypePrefixGet() togetprefixofthe
nodetype.
Usethefunction ProUITreeNodeTypeAppendStringSet() toappendthe
stringtothenodetype.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnodetype.
Usethefunction ProUITreeNodeTypePrefixGet() togetprefixofthe
nodetype.
Usethefunction ProUITreeNodeTypeAppendStringSet() toappendthe
stringtothenodetype.
Usethefunction ProUITreeNodeTypeAppendStringGet() togetthe
appendedstringtothenodetype.
Usethefunction ProUITreeNodeTypeNodesSet() tosetthenodestothe
nodetype.
UserInterface:Dialogs 415Usethefunction ProUITreeNodeTypeNodesGet() togetthenodestothe
nodetype.
TreeOperations
Functions Introduced
•ProUIT reeAnchorSet()
•ProUIT reeSizeSet()
•ProUIT reeMinimumsizeGet()
•ProUIT reePositionSet()
•ProUIT reePositionGet()
•ProUIT reeSizeGet()
•ProUIT reeSashPositionGet()
•ProUIT reeStateGet()
•ProUIT reeStateSet()
•ProUIT reeMixedStateGet()
•ProUIT reeMixedStateSet()
•ProUIT reeLastenteredite mGet()
Usethefunction ProUITreeAnchorSet() tosetthepositionoftheTreewith
respecttoagivenanchorlocation.Thisfunctionisapplicable onlyiftheparentof
theTreeisadrawingarea.
Usethefunction ProUITreeSizeSet() tosetthesizeoftheTree.Thisfieldxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrespecttoagivenanchorlocation.Thisfunctionisapplicable onlyiftheparentof
theTreeisadrawingarea.
Usethefunction ProUITreeSizeSet() tosetthesizeoftheTree.Thisfield
isusedonlyiftheparentisadrawingarea.Thefunctionwillfail,ifyouspecifya
valuesmallerthantheminimumsizefortheinputarguments widthorheight.
Usethefunction ProUITreeMinimumsizeGet() toretrievetheminimum
sizeofthewidthandheightofthetreeinpixels.Usethisfunctiononlyifthe
parentisadrawingarea.
Usethefunction ProUITreePositionSet() tosetthepositiontotheTree
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITreePositionGet() togetthepositiontotheTree
withrespecttoitsparent.Thisfieldisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITreeSizeGet() togetthesizeoftheTree.Thisfield
isusedonlyiftheparentisadrawingarea.
Usethefunction ProUITreeSashPositionGet() togetthepositionofthe
sashbetweenthetreehierarchyandtheattributewindow.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisusedonlyiftheparentisadrawingarea.
Usethefunction ProUITreeSashPositionGet() togetthepositionofthe
sashbetweenthetreehierarchyandtheattributewindow.
416 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUITreeStateGet() togetthestateoftheiteminthe
tree.Thefunction ProUITreeStateSet() setsthestateofaniteminthetree.
Thestateisapplicable onlyfora"check"typeoflistandreferstothecheckedor
unchecked statusoftheiteminthetree.
Thefunction ProUITreeMixedStateGet() returnsifthespecifieditemin
thetreeisinanindeterminate state.Usethefunction
ProUITreeMixedStateSet() tosetthespecifiediteminthetreeinan
indeterminate state.Anindeterminate stateindicatesthatthecomponent isin
mixedstate,thatis,hasnoselection.Thestateisapplicable onlyfora"check"
typeoftree.
Thefunction ProUITreeLastentereditemGet() returnsthenameofthe
item,whichiswaslastpointedtobythepointer.
TreeActionCallbacks
Functions Introduced
•ProUIT reeSelectActionSet()
•ProUIT reeActivateActionSet()
•ProUIT reeFocusinActionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxitem,whichiswaslastpointedtobythepointer.
TreeActionCallbacks
Functions Introduced
•ProUIT reeSelectActionSet()
•ProUIT reeActivateActionSet()
•ProUIT reeFocusinActionSet()
•ProUIT reeFocusoutActionSet()
•ProUIT reeExpandActionSet()
•ProUIT reeCollapseActionSet()
•ProUIT reeTreecellselectActionSet()
•ProUIT reeTreecellactivateActionSet()
•ProUIT reeTreecellinputActionSet()
•ProUIT reeTreecelldeleteActionSet()
•ProUIT reeMoveActionSet()
•ProUIT reeUpdateActionSet()
Usethefunction ProUITreeSelectActionSet() tosettheselectactionfor
aTree.ThisfunctioniscalledwhentheuserchangestheselectedcellsintheTree.
Usethefunction ProUITreeActivateActionSet() tosettheactivate
actionforaTree.Thisfunctioniscalledwhentheuserpressesthereturnkeyor
double-clicks theleftmousebuttonintheTree.
Usethefunction ProUITreeFocusinActionSet() tosetthefocusinaction
foraTree.
Usethefunction ProUITreeFocusoutActionSet() tosetthefocusout
actionforaTree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdouble-clicks theleftmousebuttonintheTree.
Usethefunction ProUITreeFocusinActionSet() tosetthefocusinaction
foraTree.
Usethefunction ProUITreeFocusoutActionSet() tosetthefocusout
actionforaTree.
UserInterface:Dialogs 417Usethefunction ProUITreeSelectActionSet() tosettheactionfunction
tobecalledwhenthetreeisselected.Theleftmousebutton,theSPACEkeyand
thenavigation keys(iftheselectionpolicyisPROUISELPOLICY_BROWSE or
PROUISELPOLICY_EXTENDED) canbeusedtomakeaselectioninthetree.
Usethefunction ProUITreeActivateActionSet() tosettheaction
functiontobecalledwhenthetreeisactivated.Thetreeisactivatedbythepress
ofRETURNkeyorthedoubleclickofLEFTmousebuttonoverthenodeinthe
tree.
Usethefunction ProUITreeExpandActionSet() tosettheactionfunction
tobecalledwhentheuserattemptstoexpandatreenodebyclickingonthe'+'
sign.
Note
YoumustmakethiscallbackcallProUITreeNodeExpand() toactually
expandthenode.
Usethefunction ProUITreeCollapseActionSet() tosettheactionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsign.
Note
YoumustmakethiscallbackcallProUITreeNodeExpand() toactually
expandthenode.
Usethefunction ProUITreeCollapseActionSet() tosettheaction
functiontobecalledwhentheuserattemptstocollapseatreenodebyclickingon
the'-'sign.
Note
YoumustmakethiscallbackcallProUITreeNodeCollapse() to
actuallycollapsethenode.
Usethefunction ProUITreeFocusinActionSet() tosettheaction
functiontobecalledwhenthetreehasgotkeyboardinputfocus.
Usethefunction ProUITreeFocusoutActionSet() tosettheaction
functiontobecalledwhenthetreehaslostkeyboardinputfocus.
Usethefunction ProUITreeTreecellselectActionSet() tosetthe
actionfunctiontobecalledwhenthecelloftheattributewindowofthetreehas
beenselected.
Usethefunction ProUITreeTreecellactivateActionSet() tosetthe
actionfunctiontobecalledwhenthecelloftheattributewindowofthetreehas
beenactivated.
Usethefunction ProUITreeTreecellinputActionSet() tosetthe
actionfunctiontobecalledwhentexthasbeenenteredintoacelloftheattribute
windowofthetree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeenactivated.
Usethefunction ProUITreeTreecellinputActionSet() tosetthe
actionfunctiontobecalledwhentexthasbeenenteredintoacelloftheattribute
windowofthetree.
418 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUITreeTreecelldeleteActionSet() tosetthe
actionfunctiontobecalledwhentheDELETEkeyhasbeenpressedinacellof
theattributewindowofthetree.
Usethefunction ProUITreeMoveActionSet() tosettheactionfunctionto
becalledwhenthesashofthetreebetweenthetreehierarchyandtheattribute
windowhasbeenmoved.
Usethefunction ProUITreeUpdateActionSet() tosettheupdateaction
forthetree.
MasterTableofResourceFileAttributes
ResourceFileAttribute PermittedValues Description
.ActivateOnReturn OfBooleantype
TRUE(default)Flagindicating whetheraRETURN
keypressshouldgenerateaUI_
ACTIVATE_ACTION callbackor
whetheritshouldcausethedefault
buttonintheDialogtobepressed.
.ArcDirection Enumerated type
ProUIArcDirectionThedirectiontousewhendrawing
arcsinadrawingarea:
PROUIARCDIR_CLOCKWISE
drawsinaclockwise directionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbuttonintheDialogtobepressed.
.ArcDirection Enumerated type
ProUIArcDirectionThedirectiontousewhendrawing
arcsinadrawingarea:
PROUIARCDIR_CLOCKWISE
drawsinaclockwise direction
betweenthetwolinesegmentsin
ordertoformthe
arc.PROUIARCDIR_
COUNTERCLOCKWISE Drawsin
acounterclockwise direction
betweenthetwolinesegmentsin
ordertoformthearc.
.ArcFillMode Enumerated type
ProUIArcFillModeThetypeoffilltogenerateforan
arcdrawninadrawingarea:
PROUIARCFILL_PIE—Fills the
arcboundedbytwolinesegments
joiningtheendpointsofthearc
anditscenterpoint.
PROUIARCFILL_CHORD—Fills
thearcboundedbyasingleline
segmentthatjoinsthetwo
endpointsofthearc.
.Alignment Enumerated type
ProUIAlignment.Default is
"left"Thealignment ofthetext:
.AttachBottom OfBooleantype
TRUE(default), FALSEThefourAttachattributesspecify
towhichsidesofitsgridlocationa
component isattached.Ifitis
attachedtononethecomponent
willfloatinsidetheareaavailable
withoutchangingsizewhenthe
dialogisresized.Ifitisattachedto
theleftonly,forexample,itwillxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponent isattached.Ifitis
attachedtononethecomponent
willfloatinsidetheareaavailable
withoutchangingsizewhenthe
dialogisresized.Ifitisattachedto
theleftonly,forexample,itwill
stayattheleftofthearea
available.Ifitisattachedbothleft.AttachTop
.AttachRight
.AttachLeft
UserInterface:Dialogs 419ResourceFileAttribute PermittedValues Description
andright,itwillstretch
horizontally tofitthespace
available.Ifitisattachedbothtop
andbottomitwillstretch
vertically.
.Autohighlight OfBooleantype
FALSE(default)Flagindicating whetherto
highlighttheentirerowwhena
selectionismadeinacellinthe
row.
.BackgroundColor Integertypebasedon
ProUIColorType orauser
definedcolortype.Thebackground colorofthe
component asauserspecified
colororawindowcolorof
ProUIColorType.
.BgColor Integertypebasedon
ProUIColorType orauser
definedcolortype.Thebackground drawingcolorof
thecomponent asauserspecified
colororawindowcolorof
ProUIColorType. Thiscannot
besetinaresourcefile.
.BottomOffset OfIntegertypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUIColorType orauser
definedcolortype.Thebackground drawingcolorof
thecomponent asauserspecified
colororawindowcolorof
ProUIColorType. Thiscannot
besetinaresourcefile.
.BottomOffset OfIntegertype
DefaultValueis-1ThefourOffsetattributesdescribe
theminimumgap,inpixels,
betweenthecomponent andthe
edgeoftheareaavailabletoit.
Themaximum valueofanoffsetis
20.Thedefault,-1,isequivalent to
nooffset.ItisusualinCreo
Parametric toputanoffsetof4
aroundeachcomponent, sothe
minimumdistancebetween
components is8pixels.Ifyou
haveaverticalcolumnof
components suchasinputpanels
inasinglelayout,youcanreduce
theoverallverticalgapbetween
themto4pixels..TopOffset
.RightOffset
.LeftOffset
.Bitmap OfStringtype Theiconofthecomponent.
ThismaybeaPNG, PCX, GIF,
BMP, ICOorCURfile.Thefile
mustbevisibletoCreoParametric
byresidinginCreoParametric's
textdirectoryorintheCreo
Parametric TOOLKIT
application's textdirectory.
.ButtonStyle Enumerated type
ProUIButtonStyleFollowing aretheavailabletypes:
1.PROUIBUTTONSTYLE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbyresidinginCreoParametric's
textdirectoryorintheCreo
Parametric TOOLKIT
application's textdirectory.
.ButtonStyle Enumerated type
ProUIButtonStyleFollowing aretheavailabletypes:
1.PROUIBUTTONSTYLE_
CHECK—The horizontal and
verticalmarginsareequal,no
shadowborderisdrawnandby
default,thebuttonaccepts
keyboardinput.
420 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
2.PROUIBUTTONSTYLE_
TOGGLE—The horizontal margin
istwiceaswideasthevertical
margin,theshadowborderis
alwaysdrawnandbydefault,the
buttonacceptskeyboardinput.
3.PROUIBUTTONSTYLE_
TOOL—The horizontal and
verticalmarginsareequal,the
shadowborderisalwaysdrawn
andbydefault,thebuttondoesnot
acceptkeyboardinput.
4.PROUIBUTTONSTYLE_
FLAT—The horizontal and
verticalmarginsareequal,the
shadowborderisonlydrawnwhen
thepointerismovedoverthe
component andbydefaultthe
buttondoesnotacceptkeyboard
input.
5.PROUIBUTTONSTYLE_
LINK—The buttonworkslikea
hyperlink.
.CascadeDirection Enumerated typexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthepointerismovedoverthe
component andbydefaultthe
buttondoesnotacceptkeyboard
input.
5.PROUIBUTTONSTYLE_
LINK—The buttonworkslikea
hyperlink.
.CascadeDirection Enumerated type
ProUICascadeDirectionThedirectioninwhichthe
MenuPane shouldcascadewhen
theCascadeButton isactivated.
Following arethepossiblevalues:
PROUICASCADEDIR_TOP_
LEFT—Up andtotheleft
PROUICASCADEDIR_TOP_
RIGHT—Up andtotheright
PROUICASCADEDIR_BOTTOM_
LEFT—Down andtotheleft
PROUICASCADEDIR_BOTTOM_
RIGHT—Down andtotheright
.ChildNames OfStringarraytype Namesofthechildrenofthe
component. ReadOnly.This
cannotbespecifiedinaresource
file.
.ClassName OfStringtype Nameoftheclassofthe
component. ItisRead-only type.
Thesearedefinedinthe
ProUI.h file.Thiscannotbe
UserInterface:Dialogs 421ResourceFileAttribute PermittedValues Description
specifiedinaresourcefile.
.ClipChildren OfBooleantype
TRUE(default), FALSEFlagindicating whetherdrawing
operations withinaDrawingArea
areclippedsothattheydonot
overlapanychildrencontainedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedinaresourcefile.
.ClipChildren OfBooleantype
TRUE(default), FALSEFlagindicating whetherdrawing
operations withinaDrawingArea
areclippedsothattheydonot
overlapanychildrencontained
withintheDrawingArea.
.Columns OfIntegertype
DefaultValueis16ThewidthoftheInputPanel, in
characterwidths.Columnwidths
aredetermines bythewidest
possiblecharacterinthefontof
thecomponent (typically'W').
Thus,acomponent withawidthof
16willlikelyholdwordswith
morethan16characters.
.ColumnLabel OfWideStringtype Thetab-separated labelstobe
displayedasthecolumnheadersof
aList.
.ColumnLabels OfWideStringtype Thelabelsofthecolumnsofa
table.
.ColumnNames OfStringArraytype Thenamesofthecolumnsofa
table.
.ColumnResizings OfIntegerArraytype
DefaultValueis0Theresizingfactorsofthe
columnsofaTable.
.ColumnSelectionPolicy Enumerated type
ProUISelectionpolicyThetypesofselectionsupported
forthecolumnsofatable:
•PROUISELPOLICY_
SINGLE—No itemorone
itemcanbeselectedatatime.
Clicktoclearaselecteditem.
•PROUISELPOLICY_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUISelectionpolicyThetypesofselectionsupported
forthecolumnsofatable:
•PROUISELPOLICY_
SINGLE—No itemorone
itemcanbeselectedatatime.
Clicktoclearaselecteditem.
•PROUISELPOLICY_
BROWSE—Only oneitemcan
beselectedatatime.You
cannotcleartheselection.You
canreplacetheselecteditem
withanotherselection.
•PROUISELPOLICY_
MULTIPLE—More thanone
itemcanbeselected.Clickto
clearaselecteditem.
•PROUISELPOLICY_
EXTENDED—When nokeyis
pressed,onlyoneitemcanbe
selectedatatime.Youcannot
cleartheselection.Youcan
replacetheselecteditemwith
anotherselection.
PressSHIFTorCTRLkeys,to
selectmultipleitems.
PressSHIFTkeytoselectarange
ofitems.
422 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
PressCTRLkeytoselectmultiple
items.Youcanclicktoselectand
clearanitem.
.ColumnW idths OfIntegerArraytype
DefaultValueisthevalueof
DefaultColumnWidthThewidthsofthecolumnsofa
Table,incharacterwidths.You
canreferto.Columnsonpage
.Decorated Boolean,defaultistrue Flagindicating whetherthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDefaultValueisthevalueof
DefaultColumnWidthThewidthsofthecolumnsofa
Table,incharacterwidths.You
canreferto.Columnsonpage
.Decorated Boolean,defaultistrue Flagindicating whetherthe
component hasadecorated
shadowborder.
.DefaultButton OfStringtype Thenameofthecomponent ofthe
dialogwhichistobetreatedasthe
defaultbuttonofthedialog.The
defaultbuttonisautomatically
activatedwhentheuserhits
RETURNorpressesthemiddle
mousebuttonwithintheDialog.
.DefaultColumnW idth OfIntegertype
DefaultValueis8Thedefaultcolumnwidthifno
widthsarespecifiedorifanyof
theColumnWidthsmembersare
lessthanorequalto0.
.Denominator OfIntegertype
DefaultValueis1Thedenominator valueofthe
fractionalcontentsofthe
InputPanel.
.DialogStyle Enumerated type
ProUIDialogStyleTheoptionsdefinedbythe
enumerated datatype
ProUIDialogStyle control
theblockingbehaviorofCreo
Parametric window.Thedialog
styletypesthataresupported by
CreoParametric TOOLKIT
application areasfollows:
•PROUIDIALOGSTYLE_
PARENT_MODAL—Y oucanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProUIDialogStyle control
theblockingbehaviorofCreo
Parametric window.Thedialog
styletypesthataresupported by
CreoParametric TOOLKIT
application areasfollows:
•PROUIDIALOGSTYLE_
PARENT_MODAL—Y oucan
usethisoption,whenyouwant
toblocktheparentwindow.
Note
Youcannotperformthe
followingoperations after
youusethisoption:
○Closethenewly
createddialogbox.
○Clickanybuttonon
theCreouser
interface.
○ClosetheCreo
window.
UserInterface:Dialogs 423ResourceFileAttribute PermittedValues Description
•PROUIDIALOGSTYLE_
WORKING—Y oucanusethis
option,ifyouwanttoblock
boththeapplication andthe
process.Theapplication and
theprocessareblockeduntil
allthependingeventsare
processed.
Note
Youcanclosethenewly
createddialogbox,
however,youcannotopen
aCreopartfilewiththe
dialogboxopen.
•PROUIDIALOGSTYLE_
APPLICATION_MODAL—
Youcanusethisoptionifyou
wanttoblocktheapplication.
Note
Youcannotperformthe
followingoperations after
youusethisoption:
○Closethenewly
createddialogbox
○Clickanybuttonon
theCreouser
interface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanusethisoptionifyou
wanttoblocktheapplication.
Note
Youcannotperformthe
followingoperations after
youusethisoption:
○Closethenewly
createddialogbox
○Clickanybuttonon
theCreouser
interface.
424 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
○ClosetheCreo
window.
•PROUIDIALOGSTYLE_
MODELESS—Y oucanusethis
optionifyoudonotwantto
blockanything.
Note
Youcanclosethenewly
createddialogbox,and
openaCreopartfile.
Otherdialogstylevaluesshould
notbeusedinCreoParametric
TOOLKITdialogs.Theonly
purposeoftheotherdialogstyle
valuesistobereturnedbythe
function
ProUIDialogDialogstyle
Get()onadialogcreatedby
CreoParametric.
.Digits OfIntegertype
DefaultValueis-1Thenumberofdigitstobe
displayedifthecontentsarebeing
treatedasanumber.
Avalueof0indicatesthatthis
attributeshouldbeignoredwhen
formatting thevalue.
.Double OfFloattype
DefaultValueis0Thedoublevalueofthecontents
ofthecomponent.
.DoubleFormat OfStringtype
DefaultValueis"%.*lf"Theformatofthecontentsofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxformatting thevalue.
.Double OfFloattype
DefaultValueis0Thedoublevalueofthecontents
ofthecomponent.
.DoubleFormat OfStringtype
DefaultValueis"%.*lf"Theformatofthecontentsofthe
component iftheyarebeing
treatedasadouble.Thevalueof
thisattributeisaCformatting
string,whichcanhandlethe
precisionandvalueofthecontents
oftheInputPanel.
Note:theformatting isnotapplied
tovaluesenteredintothe
component untilthecomponent's
Doublevalueisaccessed
programmatically .
.DoubleIncrement OfFloattype
DefaultValueis1Slowincrement tobeusedwhen
Spinboxvalueisadouble.
.DrawingHeight OfIntegertype
DefaultValueis100Heightinpixelsofthedrawing
area.
UserInterface:Dialogs 425ResourceFileAttribute PermittedValues Description
.DrawingMode Enumerated type
ProUIDrawingModeThedrawingmodeofthe
DrawingArea. Following arethe
possiblevalues:
PROUIDRWMODE_COPY—Draw
usingtheforeground drawing
color.
PROUIDRWMODE_NOT—Draw ,
invertingtheexistingpixelsofthe
component.
PROUIDRWMODE_AND—Draw
usingacombination ofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpossiblevalues:
PROUIDRWMODE_COPY—Draw
usingtheforeground drawing
color.
PROUIDRWMODE_NOT—Draw ,
invertingtheexistingpixelsofthe
component.
PROUIDRWMODE_AND—Draw
usingacombination ofthe
foreground drawingcolorAND
theexistingpixels.
PROUIDRWMODE_OR—Draw
usingacombination ofthe
foreground drawingcolorORthe
existingpixels.
PROUIDRWMODE_XOR—Draw
usingacombination ofthe
foreground drawingcolorXOR
theexistingpixels.
.DrawingW idth OfIntegertype
DefaultValueis100Widthinpixelsofthedrawing
area.
.Editable OfBooleantype
TRUE(default), FALSEFlagindicating whetherthetext
contentsofthecomponent maybe
modifiedbytheuser.
.FastDoubleIncrement OfFloattype
DefaultValueis10Thefastincrement tobeused
whentheSpinBoxvalueisa
double
.FastIncrement OfIntegertype
DefaultValueis10Thefastincrement tobeused
whentheSpinBoxvalueisan
integer.
.FillMode Enumerated type
ProUIFillModeThecurrentdrawingfillmodeof
theDrawingArea. Following are
thepossiblevalues:
PROUIFILLMODE_SOLID—Fill
usingtheforeground drawing
color.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinteger.
.FillMode Enumerated type
ProUIFillModeThecurrentdrawingfillmodeof
theDrawingArea. Following are
thepossiblevalues:
PROUIFILLMODE_SOLID—Fill
usingtheforeground drawing
color.
PROUIFILLMODE_LIGHT
_STIPPLE— Fillusinga75%
stippleoftheforeground and
background drawingcolors.
PROUIFILLMODE_MEDIUM
426 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
_STIPPLE— Fillusinga50%
stippleoftheforeground and
background drawingcolors.
PROUIFILLMODE_HEAVY
_STIPPLE— Fillusinga25%
stippleoftheforeground and
background drawingcolors.
.Focus OfStringtype Thenameofthecomponent on
whichthecursorispositioned
whenthedialogisactivated.Ifthe
Dialogisalreadyactivethenthis
specifiesthenameofthe
component withintheDialogon
whichonwhichthefocusisset
andthecursorispositioned.
.FontClass Enumerated type
ProUIFontClassThebasefontclasstobeusedto
drawtextinthecomponent.
.FontSize OfFloattype
DefaultValueis0Pointsizeofthefontusedtodraw
textinthecomponent.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.FontClass Enumerated type
ProUIFontClassThebasefontclasstobeusedto
drawtextinthecomponent.
.FontSize OfFloattype
DefaultValueis0Pointsizeofthefontusedtodraw
textinthecomponent.
.FontStyle Enumerated type
ProUIFontStyleAbitwiseORofthestylesofthe
fontusedtodrawtextinthe
component.
Note:Allstylesarenotsupported
foragivenfontclassandplatform.
.ForegroundColor Integertypebasedon
ProUIColorType orauser
definedcolortype.Theforeground colorofthe
component.
.FgColor Integertypebasedon
ProUIColorType orauser
definedcolortype.Theforeground drawingcolorof
thecomponent asauserspecified
colororawindowcolorof
ProUIColorType.
.Height OfIntegertype
DefaultValueis-1Heightinpixelsofthecomponent.
.HelpText OfWideStringtype Thepopuphelp-texttobe
displayedwhilstthepointerisover
thecomponent.
.HorzAtPoint OfIntegertype
DefaultValueis0Thehorizontal locationfromthe
existingdialogtowhichanew
dialogisbeingpositioned
horizontally .Thepossible
alignment typesareleft/center/
right.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecomponent.
.HorzAtPoint OfIntegertype
DefaultValueis0Thehorizontal locationfromthe
existingdialogtowhichanew
dialogisbeingpositioned
horizontally .Thepossible
alignment typesareleft/center/
right.
.HorzDialog OfStringtype Thenameofthedialogtowhich
theexistingdialogisrelatively
beingpositioned horizontally .
.HorzMethod Enumerated type
ProUIHorzPositionHorizontal positioning methodof
thedialog.
UserInterface:Dialogs 427ResourceFileAttribute PermittedValues Description
.HorzPoint Enumerated type
ProUIHorzPosition.Thehorizontal locationon
thedialogwhichisusedfor
positioning.
.HorzPosition OfIntegertype
DefaultValueis-1Desiredhorizontal positionofthe
dialog.Thisistheabsolute
position.
.HorzPosOffset OfIntegertype
DefaultValueis-1Thedesiredhorizontal offset
betweenthedialogtowhichitis
beingrelativelypositioned andthe
existingdialog.
.HorzSize OfIntegertype
DefaultValueis-1Thedesiredwidthofthedialog.
.Images OfStringarraytypeDefault Value
isNULLThenamesoftheimages,whichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeingrelativelypositioned andthe
existingdialog.
.HorzSize OfIntegertype
DefaultValueis-1Thedesiredwidthofthedialog.
.Images OfStringarraytypeDefault Value
isNULLThenamesoftheimages,which
willbedrawninaDrawingArea.
EachimagemaybeaPNG, PCX,
GIF, BMP, ICOorCURfile.
.Increment OfIntegertype
DefaultValueis1Theslowincrement tobeused
whentheSpinBoxvalueisan
integer.
.Integer OfIntegertypeDefault Valueis0Theintegervalueofthecontents
ofthecomponent.
.InputType Enumerated type
ProUIInputtypeDatatypeofthecontentsofthe
inputpanel.
Following arethepossibletypes:
•PROUIINPUTTYPE_
STRING
•PROUIINPUTTYPE_
WSTRING
•PROUIINPUTTYPE_
INTEGER
•PROUIINPUTTYPE_
DOUBLE
•PROUIINPUTTYPE_
FRACTION
•PROUIINPUTTYPE_
RELATION
.ItemHelpT ext OfWideStringArraytype Thepopuphelp-texttobe
displayedfortheitemsofthe
component whilstthepointeris
overthecomponent. Thearray
sizeshouldmatchthenumberof
itemsinthecomponent.
.ItemImage OfStringArraytype Theimagesoftheitemsofthe
component. Eachimagemaybeaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponent whilstthepointeris
overthecomponent. Thearray
sizeshouldmatchthenumberof
itemsinthecomponent.
.ItemImage OfStringArraytype Theimagesoftheitemsofthe
component. Eachimagemaybea
PNG, PCX, GIF, BMP, ICOor
CURfile.Thearraysizeshould
matchthenumberofitemsinthe
component.
.Label OfWideStringtype Thetextshownonthecomponent.
428 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
(Fordialogs:thisisthedialog
title).
.Labels OfWideStringtype Theuservisibletextforeachof
theitemsofthecomponent.
.LabelAlignment OfIntegertype
DefaultValueis2Thejustification ofthelabelofthe
TreeiftheTreehasanattribute
windowandcanbeasfollows:
•PROUIALIGNMENT_LEFT
•PROUIALIGNMENT_RIGHT
•PROUIALIGNMENT_
CENTER
.Lastentereditem String Thenameoftheitem,whichwas
lastpointedtobythepointer.
.Length OfIntegertype
DefaultValueis8ThelengthoftheSlider,in
characterwidths.
.ListState OfIntegerArraytype Thestateofeachoftheitemsof
theList.
.LineStyle Enumerated typexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlastpointedtobythepointer.
.Length OfIntegertype
DefaultValueis8ThelengthoftheSlider,in
characterwidths.
.ListState OfIntegerArraytype Thestateofeachoftheitemsof
theList.
.LineStyle Enumerated type
ProUILineStyleThecurrentlinedrawingstyleof
theDrawingArea.
Following aretheavailabletypes:
•PROUILINESTYLE_SOLID
—Drawsolidlinesinthe
foreground drawingcolor.
•PROUILINESTYLE_
DOTTED—Draw dottedlines
intheforeground and
background drawingcolors.
•PROUILINESTYLE_
DASHED
—Drawdashedlinesinthe
foreground andbackground
drawingcolors.
.ListType Enumerated type
ProUIListtypeThepossiblelisttypesareas
follows:
PROUILISTTYPE_
STANDARD—No columnheaders
orcheck
marks.PROUILISTTYPE_
TABULATED—Display column
headers,butdonotdisplaycheck
marks.
PROUILISTTYPE_CHECK—
Displaycheckmarks,butdonot
displaycolumnheaders.Thevalue
ofthecheckmarkforeachitemis
UserInterface:Dialogs 429ResourceFileAttribute PermittedValues Description
accessedby
ProUIListStateGet() and
ProUIListStateSet()
.LockedColumns OfIntegertypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthecheckmarkforeachitemis
UserInterface:Dialogs 429ResourceFileAttribute PermittedValues Description
accessedby
ProUIListStateGet() and
ProUIListStateSet()
.LockedColumns OfIntegertype
DefaultValueis0Thenumberoflockedcolumnsof
thetable.
.LockedRows OfIntegertype
DefaultValueis0Thenumberoflockedrowsofthe
Table.
.Mapped OfBooleantype
FALSE(default)Foradialogcomponent thisflag
indicateswhetherthedialogis
visibleonthescreenornot.Forall
othercomponents thisflag
indicateswhetherthecomponent
occupiesanyspacewhenitis
invisible.
.MaxDouble OfFloattype
8.507e+37Themaximum doublevalueofthe
contentsofthecomponent.
.MaxInteger OfIntegertype
2147483647Themaximum integervalueofthe
contentsofthecomponent.
.MaxLen OfIntegertype
DefaultValueis32Themaximum lengthofthetext
contentsofthecomponent.
.MinColumns OfIntegertype
DefaultValueis4Theminimumwidthofthe
component, incharacterwidths.
.MinDouble OfFloattype
-8.507e+37Theminimumdoublevalueofthe
contentsofthecomponent.
.MinInteger OfIntegertypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDefaultValueis4Theminimumwidthofthe
component, incharacterwidths.
.MinDouble OfFloattype
-8.507e+37Theminimumdoublevalueofthe
contentsofthecomponent.
.MinInteger OfIntegertype
-2147483647Theminimumintegervalueofthe
contentsofthecomponent.
.MinRows OfIntegertype
DefaultValueis1Theminimumnumberofvisible
rowsofthecomponent.
.MixedState OfIntegerArraytype Theindeterminate stateofthe
itemsinaTree.
.Names OfStringArraytype Thenamesoftheitemsofthe
component.
.Numerator OfIntegertype
DefaultValueis0Thenumerator valueofthe
fractionalcontentsofthe
InputPanel.
.Ordinal OfIntegertype
DefaultValueis0Theordinalvalueofthefractional
contentsoftheInputPanel.
.Orientation Enumerated type
ProUIOrientationTheorientation ofthecomponent.
Itisofthefollowingtypes:
PROUI_HORIZONTAL
PROUI_VERTICAL
.ParentName OfStringtype Thenameoftheparentcomponent
430 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
ofthecomponent.
.Password OfBooleantypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPROUI_VERTICAL
.ParentName OfStringtype Thenameoftheparentcomponent
430 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
ofthecomponent.
.Password OfBooleantype
FALSE(default)Flagindicating whetherthe
component isusedforpassword
entry.
.PolygonFillMode Enumerated type
ProUIPolygonFillModeThefillmodetobeusedwhen
drawingPolygonsinthe
DrawingArea.
.PopupMenu OfStringtype Allowsyoutodesignatethepopup
menuforacomponent Thisisthe
nameofaMenuPane component
touseasapopupmenuforthe
givencomponent.
.PopupWhenInsen OfBooleantype Flagindicating whetherthe
component shoulddisplayits
popupmenuwhenitisinsensitive
(TRUE)orwhethernopopup
menushouldbedisplayedatsuch
times(FALSE).
.ProgressStyle Enumerated type
ProUIProgressstyleThedisplaystyleofthe
ProgressBar .Itisofthefollowing
types:
•PROUIPROGRESS_NOTEXT
•PROUIPROGRESS_VALUE
•PROUIPROGRESS_
PERCENT
•PROUIPROGRESS_
INTERVALS
.RememberPosition OfBooleantype
TRUE(default), FALSEControlswhetherCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypes:
•PROUIPROGRESS_NOTEXT
•PROUIPROGRESS_VALUE
•PROUIPROGRESS_
PERCENT
•PROUIPROGRESS_
INTERVALS
.RememberPosition OfBooleantype
TRUE(default), FALSEControlswhetherCreoParametric
shouldstorethelocationofthe
dialogwhenitisdestroyed, and
applythepositiontothedialog
againifitisshownagain.
.RememberSize OfBooleantype
TRUE(default), FALSEControlswhetherCreoParametric
shouldstorethesizethedialog
whenitisdestroyed, andapplythe
sizetothedialogagainifitis
shown.
.Resizeable OfBooleantype
TRUE(default), FALSEIdentifieswhetheracomponent is
allowedtoresizebasedon
changingofcontent.Ifthecontent
islargerthanthecomponent, set
thistoTRUEtoresizetocontain
thenewcontent.SetittoFALSE
totruncateorshortenthecontent.
.ResizableCols OfBooleantype
TRUE(default),FALSEFlagindicating whethertheTree
columnsmayberesizedusingthe
columnheadersasdraggable
sashes.
.Rows OfIntegertype
DefaultValueis8Thenumberofrowsofthe
component.
.RowLabels OfWideStringArraytype Thelabelsoftherowsofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcolumnsmayberesizedusingthe
columnheadersasdraggable
sashes.
.Rows OfIntegertype
DefaultValueis8Thenumberofrowsofthe
component.
.RowLabels OfWideStringArraytype Thelabelsoftherowsofthe
UserInterface:Dialogs 431ResourceFileAttribute PermittedValues Description
component. Iflabelsarespecified
thenthetablewilldisplayrow
headers,otherwisenorowheaders
aredisplayed.
.RowNames OfStringArraytype Thenamesoftherowsofthe
component.
.RowSelectionPolicy Enumerated type
ProUISelectionpolicyThetypesofselectionsupported
fortherowsofatable:
PROUISELPOLICY_SINGLE—
Noitemoroneitemcanbe
selectedatatime.Clicktocleara
selecteditem.
PROUISELPOLICY_BROWSE—
Onlyoneitemcanbeselectedata
time.Youcannotclearthe
selection.Youcanreplacethe
selecteditemwithanother
selection.
PROUISELPOLICY_
MULTIPLE—More thanoneitem
canbeselected.Clicktocleara
selecteditem.
PROUISELPOLICY_
EXTENDED—When nokeyis
pressed,onlyoneitemcanbe
selectedatatime.Youcannot
cleartheselection.Youcan
replacetheselecteditemwith
anotherselection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcanbeselected.Clicktocleara
selecteditem.
PROUISELPOLICY_
EXTENDED—When nokeyis
pressed,onlyoneitemcanbe
selectedatatime.Youcannot
cleartheselection.Youcan
replacetheselecteditemwith
anotherselection.
PressSHIFTorCTRLkeys,to
selectmultipleitems.
PressSHIFTkeytoselectarange
ofitems.
PressCTRLkeytoselectmultiple
items.Youcanclicktoselectand
clearanitem.
.ScrollBarsWhenNeeded OfBooleantype Flagindicating whetherscrollbars
shouldonlybedisplayedwhen
theyarerequired(TRUE)or
whethertheyshouldalwaysbe
displayed(FALSE).
.SelectableNames OfStringArraytype Thenamesoftheitemsofthe
component thatmaybeselected.
Anemptyarrayindicatesthat
432 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
everyitemiscurrentlyselectable.
.SelectedNames OfStringArraytype Thenamesofthecurrently
selecteditemsofthecomponent.
Anemptyarrayindicatesthatno
itemofthecomponent isselected.
Thisattributemaynotbesetinthe
resourcefile.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.SelectedNames OfStringArraytype Thenamesofthecurrently
selecteditemsofthecomponent.
Anemptyarrayindicatesthatno
itemofthecomponent isselected.
Thisattributemaynotbesetinthe
resourcefile.
.SelectedColumnNames OfStringArraytype Thenamesofthecurrently
selectedcolumnsoftheTable.
Thisattributemaynotbesetinthe
resourcefile.
.SelectedRowNames OfStringArraytype Thenamesofthecurrently
selectedrowsoftheTable.This
attributecannotbesetthroughthe
resourcefile.
.SelectionPolicy Enumerated type
ProUISelectionPolicyThetypeofselectionallowedfor
itemsinthecomponent:
•PROUISELPOLICY_
SINGLE—No itemorone
itemcanbeselectedatatime.
Clicktoclearaselecteditem.
•PROUISELPOLICY_
BROWSE—Only oneitemcan
beselectedatatime.You
cannotcleartheselection.You
canreplacetheselecteditem
withanotherselection.
•PROUISELPOLICY_
MULTIPLE—More thanone
itemcanbeselected.Clickto
clearaselecteditem.
•PROUISELPOLICY_
EXTENDED—When nokeyis
pressed,onlyoneitemcanbe
selectedatatime.Youcannot
cleartheselection.Youcanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PROUISELPOLICY_
MULTIPLE—More thanone
itemcanbeselected.Clickto
clearaselecteditem.
•PROUISELPOLICY_
EXTENDED—When nokeyis
pressed,onlyoneitemcanbe
selectedatatime.Youcannot
cleartheselection.Youcan
replacetheselecteditemwith
anotherselection.
PressSHIFTorCTRLkeys,to
selectmultipleitems.
PressSHIFTkeytoselectarange
ofitems.
PressCTRLkeytoselectmultiple
items.Youcanclicktoselectand
clearanitem.
.SelectByCell OfBooleantype Flagindicating whethertheTree
attributewindowallowsselection
bycell(TRUE)orwhetherallthe
cellsoftheselectednodeofthe
Treeareselectedwhenanodeis
UserInterface:Dialogs 433ResourceFileAttribute PermittedValues Description
selected(FALSE).
.SelectCBRegardless OfBooleantype Flagindicating whethertheTree
shouldgenerateaUI_SELECT_
ACTIONcallbackwhenthe
currentlyselecteditemisre-
selected(TRUE)orwhethersucha
selectionshouldbeignoredasthe
statehasnotchanged.
.Sensitive OfBooleantype Flagindicating whetherthe
component isdisabled(FALSE)or
sensitivetouserinput(TRUE).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselected(TRUE)orwhethersucha
selectionshouldbeignoredasthe
statehasnotchanged.
.Sensitive OfBooleantype Flagindicating whetherthe
component isdisabled(FALSE)or
sensitivetouserinput(TRUE).
.Set OfIntegertype
DefaultValueis0Thestateofthecomponent.
.ShowGrid OfBooleantype Flagindicating whethertodisplay
thegridlinesoftheTable.
.StartLocation Enumerated type
ProUIStartLocationFollowing arethepossibleuser
definedstartlocationsandanchor
positionsforaUIcomponent:
PROUIDEFAULT_LOCATION—
defaultlocation
PROUITOP_LEFT—top left-hand
corner
PROUITOP_MIDDLE—top edge
PROUITOP_RIGHT—top right-
handcorner
PROUIMIDDLE_LEFT—left-
handedge
PROUIMIDDLE_MIDDLE—
middle
PROUIMIDDLE_RIGHT—right-
handedge
PROUIBOTTOM_LEFT—bottom
left-handcorner
PROUIBOTTOM_MIDDLE—
bottomedge
PROUIBOTTOM_RIGHT—bottom
right-hand corner
.String OfStringtype ThecontentsoftheInputPanel asa
string
.TabCharsAllow OfBooleantype Flagindicating thebehaviorofthe
inputpanelwhentheTABkeyis
pressed.IfthevalueisTrue,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxright-hand corner
.String OfStringtype ThecontentsoftheInputPanel asa
string
.TabCharsAllow OfBooleantype Flagindicating thebehaviorofthe
inputpanelwhentheTABkeyis
pressed.IfthevalueisTrue,
434 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
insertsaTABkeypressintothe
textofinputpanelasatab
character.IfthevalueisFalse,
usestheTABkeypressforfocus
traversal.Theinputpanelignores
thetabkeypress.Thisattribute
maynotbesetintheresourcefile.
.Tracking OfBooleantype Flagindicating whetherthe
DrawingArea generatesaUI_
MOVE_ACTION wheneverthe
pointerismovedoverthevisible
regionofthecomponent.
.TreeAttributeW indow OfBooleantype Flagindicating whethertheTree
hasanattributewindow.
.TreeBoxNodes OfBooleantype Flagindicating whetherthenodes
oftheTreeshouldbedisplayed
withaboundingrectangle.
.TreeCellInput OfWideStringtype Thetextenteredbytheuserwhich
causedaUI_TREE_CELL_
INPUT_ACTION tobegenerated.
Thiscannotbespecifiedinthe
resourcefile.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwithaboundingrectangle.
.TreeCellInput OfWideStringtype Thetextenteredbytheuserwhich
causedaUI_TREE_CELL_
INPUT_ACTION tobegenerated.
Thiscannotbespecifiedinthe
resourcefile.
.TreeCellSelCol OfStringtype Thenameofthecolumnofthe
selectedcelloftheattribute
windowoftheTree.Thiscannot
bespecifiedintheresourcefile.
.TreeCellSelNode OfStringtype Thenameofthenodeofthe
selectedcelloftheattribute
windowoftheTree.Thiscannot
bespecifiedintheresourcefile.
.TreeChildOrder OfIntegertype
DefaultValueis1Themethodusedtoorderthe
childrenofaparentnodeofthe
Tree.
.TreeColumnsJusts OfIntegerArraytype Thejustifcations ofthetextofthe
columnsoftheattributewindow
oftheTree.
.TreeColumnsNames OfStringArraytype Thenamesofthecolumnsofthe
attributewindowoftheTree.
.TreeColumnsT itles OfWideStringArray type Thelabelsofthecolumnheaders
oftheattributewindowofthe
Tree.
.TreeColumnsW idths OfIntegerArraytype Thewidthsofthecolumnsofthe
attributewindowoftheTree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.TreeColumnsT itles OfWideStringArray type Thelabelsofthecolumnheaders
oftheattributewindowofthe
Tree.
.TreeColumnsW idths OfIntegerArraytype Thewidthsofthecolumnsofthe
attributewindowoftheTree.
.TreeColumnOrder OfStringArraytype Thedisplayorderofthecolumns
oftheattributewindowofthe
Tree.Anemptyarrayindicates
thatthecolumnsshouldbe
displayedintheorderinwhich
theywerecreated.
.TreeCurrent OfStringtype Thenameofthecurrentnodeof
theTree.Thisisthenodewhichis
drawnwithadottedfocus
UserInterface:Dialogs 435ResourceFileAttribute PermittedValues Description
rectangleiftheTreecomponent
hasthekeyboardinputfocus.This
cannotbespecifiedintheresource
file.
.TreeDisplayRoot OfBooleantype Flagindicating whethertheroot
nodeoftheTreeshouldbe
displayed(TRUE)orwhetherit
shouldbehiddenfromview
(FALSE).
.TreeExpColNode OfStringtype ThenameofthenodeoftheTree
whichwasexpandedorcollapsed
togenerateaUI_EXPAND_
ACTIONoraUI_COLLAPSE_
ACTION,respectively .This
cannotbespecifiedintheresource
file.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(FALSE).
.TreeExpColNode OfStringtype ThenameofthenodeoftheTree
whichwasexpandedorcollapsed
togenerateaUI_EXPAND_
ACTIONoraUI_COLLAPSE_
ACTION,respectively .This
cannotbespecifiedintheresource
file.
.TreeIndicateChildren OfBooleantype Flagindicating whetherthenodes
oftheTreeshouldbedisplayed
witha"..."suffixtoindicatethat
theyhavechildrenwhenthenodes
themselves arenotexpanded.
.TreeInitialSashPercent OfIntegertype
DefaultValueis50Theinitialpercentage positionof
thesashoftheTreebetweenthe
Treehierarchyandtheattribute
windowoftheTree.
.TreeKeyboardInput OfBooleantype Flagindicating whetherthe
attributewindowoftheTree
shouldrespondtokeyboardinput
andgenerateaUI_TREE_CELL_
INPUT_ACTION.
.TreeLinkStyle OfIntegertype
DefaultValueis2Thelink-styleusedtoindicatethe
childrenofaparentnodeofthe
Tree.
.TreeNodeTypeAppends OfWideStringArray type Thetexttobeappendedtothe
labelsofthenodesofthenode
typesoftheTree.
.TreeNodeTypeCollapsedImages OfStringArraytype TheimagetobedisplayedwiththexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTree.
.TreeNodeTypeAppends OfWideStringArray type Thetexttobeappendedtothe
labelsofthenodesofthenode
typesoftheTree.
.TreeNodeTypeCollapsedImages OfStringArraytype Theimagetobedisplayedwiththe
collapsednodesofthenodetypes
oftheTree.
.TreeNodeTypeExpandedImages OfStringArraytype Theimagetobedisplayedwiththe
expandednodesofthenodetypes
oftheTree.
.TreeNodeTypeHelpTexts OfWideStringArray type Thehelptextofthenodesofthe
nodetypesoftheTree.
.TreeNodeTypeNames OfStringArraytype Thenamesofthenodetypesofthe
Tree.
.TreeNodeTypePrefixs OfWideStringArray type Thetexttobeprepended tothe
labelsofthenodesofthenode
typesoftheTree.
.TreeRedraw OfBooleantype Flagindicating whetherredraws
areallowedintheTree.This
cannotbespecifiedintheresource
436 Creo®Parametric TOOLKIT User’sGuideResourceFileAttribute PermittedValues Description
file.
.TreeRootNode OfStringtype Thenameoftherootnodeofthe
Tree.Thiscannotbespecifiedin
theresourcefile.
.TreeState OfIntegerArraytype Thestateofeachoftheitemsin
theTree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfile.
.TreeRootNode OfStringtype Thenameoftherootnodeofthe
Tree.Thiscannotbespecifiedin
theresourcefile.
.TreeState OfIntegerArraytype Thestateofeachoftheitemsin
theTree.
.TreeVerticalSBPosition OfIntegertype
DefaultValueis3.Thepositionofthevertical
scrollbaroftheTree.
.TruncateLabel OfBooleantype Flagindicating whethertotruncate
thelabelsofnewlycreatedcellsin
theTabletothesizeoftheircell.
Modifying thisafteraddingrows
andcolumnswillhavenoeffecton
anyexistingcell'sappearance.
.UnitsPerRotation OfIntegertype
DefaultValueis360.Theamountbywhichthevalueof
thethumbwheel shouldbe
incremented foreachcomplete
revolution ofthewheel.
.Value OfWideStringtype Thetextcontentsofthe
component.
.VertAtPoint Enumerated type
ProUIVertPosition.Theverticallocationfromthe
existingdialogtowhichanew
dialogisbeingpositioned
vertically.
.VertDialog OfStringtype Thenameofthedialogtowhich
theexistingdialogisrelatively
beingpositioned.
.VertMethod Enumerated typexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexistingdialogtowhichanew
dialogisbeingpositioned
vertically.
.VertDialog OfStringtype Thenameofthedialogtowhich
theexistingdialogisrelatively
beingpositioned.
.VertMethod Enumerated type
ProUIPositioninMethodVerticalpositioning methodofthe
dialog.
.VertPoint Enumerated type
ProUIVertPosition.Theverticallocationonthedialog,
whichisusedforpositioning.
.VertPosOffset OfIntegertype
DefaultValueis-1Thedesiredverticaloffsetbetween
thedialogtowhichitisbeing
relativelypositioned andthe
existingdialog.
.VertSize OfIntegertype
DefaultValueis-1Thedesiredheightofthedialog.
.Visible OfBooleantype Flagindicating whetherthe
component isshown(TRUE)or
hidden(FALSE).
.VisibleNames OfStringArraytype Thenamesofthevisibleitemsof
thecomponent. Anemptyarray
indicatesthateveryitemofthe
component isvisible.
.VisibleRows OfIntegertype
DefaultValueis4Thenumberofvisiblerowsofthe
component.
UserInterface:Dialogs 437ResourceFileAttribute PermittedValues Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponent isvisible.
.VisibleRows OfIntegertype
DefaultValueis4Thenumberofvisiblerowsofthe
component.
UserInterface:Dialogs 437ResourceFileAttribute PermittedValues Description
.WideString OfWideStringtype ThecontentsoftheInputPanel asa
wide-string.
.Width OfIntegertype
DefaultValueis-1Widthofthecomponent, inpixels.
UsingResourceFiles
Resourcefilesaretextfilesthatdescribetheoverallstructureofadialogbox.
Note
FormostCreoParametric TOOLKITapplications, itisnotrequiredtouse
resourcefiles.Insteadyoucanusethefunctionsdescribedintheprevious
sectionstocreate,layout,andpopulatedialogboxesdirectly.Information in
thissectionisprovidedforthefewapplications thatstillrequireresourcefiles.
WhentheCreoParametric TOOLKITapplication wantstoshowadialogboxto
theCreoParametric user,itsimplyasksCreoParametric toloadthedialogbox
fromtheresourcefile.ThefirsttaskfortheCreoParametric TOOLKITuserwho
wantstodisplayadialogboxistowritetheresourcefile.
Theresourcefiledescribes:
•Overallattributesofthedialogbox.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfromtheresourcefile.ThefirsttaskfortheCreoParametric TOOLKITuserwho
wantstodisplayadialogboxistowritetheresourcefile.
Theresourcefiledescribes:
•Overallattributesofthedialogbox.
•Alistofcomponents itcontains.
•Attributes ofthecomponents themselves andtherelativepositionsofthe
components.
•Rulesforhowtheybehavewhentheuserresizesthedialogbox.
Manyofthedialogboxandcomponent attributescanalsobereadandmodified
programmatically withCreoParametric TOOLKITfunctions.
Aresourcefilemustbecalled dialog_name.res where dialog_name is
thenameofthedialogbox.Thenameoftheresourcefileshouldbeinthelower
case.ResourcefilesusedbytheCreoParametric TOOLKITapplication mustbe
storedunderthetextdirectoryreferredtobythetext_dir statementinthe
CreoParametric TOOLKITregistryfile.
438 Creo®Parametric TOOLKIT User’sGuideLocationandTranslationofResourceFiles
Iftheapplication useslanguage-specific directories, theresourcefilemustbe
locatedinthe<application_text_dir>/<language_dir>/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIftheapplication useslanguage-specific directories, theresourcefilemustbe
locatedinthe<application_text_dir>/<language_dir>/
resource directory.Oneresourcefilemustexistforeachlanguagesupported by
theapplication. Iftheapplication supportsonlyonelanguage,thentheresource
filemaybelocatedinthe<application_text_dir>/resource directory.
ACreoParametric TOOLKITapplication canoptionally includeonlyone
resourcefileforallsupported languages inthe<application_text_dir>/
resource directory.Thisapplication shouldalsoincludeatextfilecontaining
thetranslatedentitiesandtranslatedtextforeachadditional language,inthe
formatusedbythefunction ProMessageDisplay(), inthe
<application_text_dir>/resource/<language_dir> directory.
Thetranslation textfileshouldincludethefollowingitems:
•Thecomponent andattributeforeachtranslatediteminline1
•TheEnglishtextinline2
•Thetranslatedentitiesandtranslatedtextinline3
•Line4shouldbeleftblank
FunctionIntroduced:
•ProUIT ranslationFilesEnable()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Thecomponent andattributeforeachtranslatediteminline1
•TheEnglishtextinline2
•Thetranslatedentitiesandtranslatedtextinline3
•Line4shouldbeleftblank
FunctionIntroduced:
•ProUIT ranslationFilesEnable()
Usethefunction ProUITranslationFilesEnable() tosetyourCreo
Parametric TOOLKITapplication tousethesingleresourcefileandmultiple
translation filesmethodofdeploying resourcefilesfortranslateddialogboxes.
Callthisfunctionfromyourapplication’ suser_intialize() functionbefore
anycallismadetoanother ProUI*function.
SyntaxofResourceFiles
Theresourcefileiscomposed ofnestedstatements; eachstatementisenclosedin
parentheses, andcontainseitherakeywordorthenameofadialogorcomponent
attributefollowedbyoneormorevaluesand/orotherstatements.
Thetop-levelstatementinaresourcefilefordialogmustalwaysbe
(
Dialog dialog_name (other statements... )
)
where dialog_name isthenameofthedialogitself.Thedialognameisusedto
refertothedialogfromthesourcecodeoftheapplication. Thenameofadialogxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(
Dialog dialog_name (other statements... )
)
where dialog_name isthenameofthedialogitself.Thedialognameisusedto
refertothedialogfromthesourcecodeoftheapplication. Thenameofadialog
canbeofanylength,andcontainsalphanumeric characters andunderscores. Case
isignored.
Iftheresourcefilecontainsonlyalayout,thetop-levelstatementwouldbe
(
Layout layout_name (other statements... )
UserInterface:Dialogs 439)
instead.Collectively ,thetopstatementdescribestheoutermost containerinthe
resourcefile.
Thetwostatements thatfollowthenameofthecontainerarealwaysComponents
andResources.
TheComponents statementsimplyliststhetypesandnamesofthecomponents
thatthedialogcontains.
Components oftypeLayout,MenuPane, CascadeButton, Table,orTreemayhave
theirowncontainer-levelstatements followingtheDialogstatement. Theformats
ofthesestatements areexactlythesameastheDialogstatement.
Ifoneofthecomponents isatab,thelayoutsthatthetabcontainsarelistedafterxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthesestatements areexactlythesameastheDialogstatement.
Ifoneofthecomponents isatab,thelayoutsthatthetabcontainsarelistedafter
thetabnameintheComponents partoftheDialogstatement. Similarly,ifoneof
thecomponents isaMenuBaroraCascadeButton, theMenuPanes thatitcontains
arelistedaftertheMenuBarnameintheComponents partoftheDialogstatement.
AResources statementcontainsoneormoreattributeassignments. Eachattribute
assignment statementisofthisform
(componentname.attributename value)
TheResourcestatementdefinestheattributesofthedialogandthecomponents,
andtheLayoutwhichdefinestherelativepositionsofthecomponents, andthe
wayinwhichtheybehavewhenthedialogisresized.Ifthecomponent nameis
missing,thestatement(forexample,(.attributename value))willbe
assumedtoapplytoanattributeofthedialogorlayoutitself.Theattributesand
theirvaluesaredescribedindetailinthefollowingsectionsofthischapter.
ThelastattributestatementinaResources statementisaspecialonecalledxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheirvaluesaredescribedindetailinthefollowingsectionsofthischapter.
ThelastattributestatementinaResources statementisaspecialonecalled
.Layout. Thevalueofa.Layout statementisalwaysasinglestatementof
typeGrid.TheGridstatementdescribesaflexiblegridofrowsandcolumnsin
whichthecomponents areplaced;thisdefinestheneighbor-relationsbetween
components, inotherwordstheirrelativepositions.Theabsolutepositions,and
thesizes,ofthecomponents maychangeasthegridstretchesandshrinksin
responsetotheuserresizingthewindowcontaining thedialog.Components of
typeMenuPane donotrequirea.Layout statement.
TheGridstatementcontainsthefollowingvalues:
•Rowsstatement—lists therowsinthegrid.
•Colsstatement—lists thecolumnsinthegrid.
•Valueslist—specify thecontentsofeachgridlocationinturn,readingleft-to-
right,top-to-bottom. Eachofthevaluescanbeeither
○Thenameofacomponent
○APosstatement, tospecifytherowandcolumnnumberofthenext
component inthelist,ifitisnotinthenextavailablelocation.APosxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxright,top-to-bottom. Eachofthevaluescanbeeither
○Thenameofacomponent
○APosstatement, tospecifytherowandcolumnnumberofthenext
component inthelist,ifitisnotinthenextavailablelocation.APos
statementallowsyoutoskipsomelocations,leavingthemempty.
440 Creo®Parametric TOOLKIT User’sGuide○AnotherGridstatement, toshowthatthelocationcontainsseveral
components ontheirownlocalgrid.
ThevalueofaRowsorColsstatementisalistofintegers,oneforeachrowor
column.Thevalueoftheintegeris0iftheroworcolumncannotberesizedwhen
userresizedthedialog.theintegervalueis1ifitcanberesized.(Itisnormalto
setthisto1,sothatallthecomponents inthedialogwillstretchwhenthedialog
stretches.)
Thesizeandpositionofthecomponents withinthegridisalsopartlydetermined
bythevaluessetfortheAttachandOffsetattributesdescribedinmoredetail
inthesectionMasterTableofResourceFileAttributes onpage419.
Note
Ensurethattheresourcefilecontainsanewlineafterthelastparenthesis, or
elsethefunction ProUIDialogCreate() willreturnanerror.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthesectionMasterTableofResourceFileAttributes onpage419.
Note
Ensurethattheresourcefilecontainsanewlineafterthelastparenthesis, or
elsethefunction ProUIDialogCreate() willreturnanerror.
Example8:DialogwithAllComponents
(Dialog allcomponents
(Components
(PushButton PushButton1)
(PushButton PushButton2)
(Tab Tab3
Layout11
Layout8)
(Label Label16)
)
(Resources
(PushButton1.Label "OK")
(PushButton1.TopOffset 4)
(PushButton1.BottomOffset 4)
(PushButton1.LeftOffset 4)
(PushButton1.RightOffset 4)
(PushButton2.Label "Cancel")
(PushButton2.TopOffset 4)
(PushButton2.BottomOffset 4)
(PushButton2.LeftOffset 4)
(PushButton2.RightOffset 4)
(Tab3.Decorated True)
(Label16.Label "Push Buttons")
(.Label "All Components")
(.Layout
(Grid (Rows 111)(Cols 1)
Tab3
Label16
(Grid (Rows 1)(Cols 11)
UserInterface:Dialogs 441PushButton1
PushButton2
)
)
)
)
)
(Layout Layout11
(Components
(SubLayout Layout1)
)
(Resources
(.Label "Tab with two layouts")
(.Decorated True)
(.Layout
(Grid (Rows 1)(Cols 1)
Layout1
)
)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPushButton2
)
)
)
)
)
(Layout Layout11
(Components
(SubLayout Layout1)
)
(Resources
(.Label "Tab with two layouts")
(.Decorated True)
(.Layout
(Grid (Rows 1)(Cols 1)
Layout1
)
)
)
)
(Layout Layout1
(Components
(InputPanel InputPanel1)
(Label Label1)
(CheckButton CheckButton1)
(Label Label2)
(Label Label3)
(Label Label4)
(List List1)
(Label Label5)
(OptionMenu OptionMenu1)
(Label Label6)
(Label Label8)
(RadioGroup RadioGroup1)
(Slider Slider1)
(Label Label9)
(TextArea TextArea1)
(Label Label10)
(CheckButton CheckButton3)
(Label Label7)
(Label Label11)
(ThumbWheel ThumbWheel1)
(ProgressBar ProgressBar1)
(SpinBox SpinBox1)
(Label Label14)
(Separator Separator1)
(Label Label13)
(Table Table1)
(Label Label17)
442 Creo®Parametric TOOLKIT User’sGuide)
(Resources
(InputPanel1.InputType 2)
(Label1.Label "Input Panel")
(Label1.AttachLeft True)
(CheckButton1.Label "Check2")
(CheckButton1.Set True)
(CheckButton1.TopOffset 4)
(CheckButton1.BottomOffset 4)
(CheckButton1.LeftOffset 4)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(Label1.Label "Input Panel")
(Label1.AttachLeft True)
(CheckButton1.Label "Check2")
(CheckButton1.Set True)
(CheckButton1.TopOffset 4)
(CheckButton1.BottomOffset 4)
(CheckButton1.LeftOffset 4)
(CheckButton1.RightOffset 4)
(Label2.Label "Check Buttons")
(Label2.AttachLeft True)
(Label2.TopOffset 4)
(Label2.BottomOffset 4)
(Label2.LeftOffset 4)
(Label2.RightOffset 4)
(Label3.Label "Label")
(Label3.AttachLeft True)
(Label4.Label "Label Text")
(List1.Names "n1"
"n2"
"n3"
"n4"
"n5")
(List1.Labels "Value 1"
"Value 2"
"Value 3"
"Value 4"
"Value 5")
(Label5.Label "List")
(Label5.AttachLeft True)
(OptionMenu1.Names "n1"
"n2"
"n3"
"n4"
"n5")
(OptionMenu1.Labels "Option 1"
"Option 2"
"Option 3"
"Option 4"
"Option 5")
(Label6.Label "Option Menu")
(Label6.AttachLeft True)
(Label8.Label "Radio Group")
(Label8.AttachLeft True)
(RadioGroup1.Orientation True)
(RadioGroup1.AttachLeft False)
(RadioGroup1.AttachRight False)
(RadioGroup1.AttachTop False)
(RadioGroup1.AttachBottom False)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(Label8.AttachLeft True)
(RadioGroup1.Orientation True)
(RadioGroup1.AttachLeft False)
(RadioGroup1.AttachRight False)
(RadioGroup1.AttachTop False)
(RadioGroup1.AttachBottom False)
UserInterface:Dialogs 443(RadioGroup1.Names "n1"
"n2"
"n3")
(RadioGroup1.Labels "Rad1"
"Rad2"
"Rad3")
(RadioGroup1.Alignment 2)
(Label9.Label "Slider")
(Label9.AttachLeft True)
(Label10.Label "Text Area")
(Label10.AttachLeft True)
(CheckButton3.Label "Check1")
(Label7.Label "Thumbwheel")
(Label7.AttachLeft True)
(Label11.Label "Progress bar")
(Label11.AttachLeft True)
(Label14.Label "Spinbox")
(Label14.AttachLeft True)
(Label13.Label "Separator")
(Label13.AttachLeft True)
(Table1.RowNames "r1"
"r2"
"r3")
(Table1.RowLabels "1"
"2"
"3")
(Table1.ColumnNames "c1"
"c2"
"c3")
(Table1.ColumnLabels "-A-"
"-B-"
"-C-")
(Table1.ColumnWidths 4
4
4)
(Table1.VisibleRows 4)
(Table1.ShowGrid True)
(Label17.Label "Table")
(Label17.AttachLeft True)
(.Label "Decorated layout")
(.Decorated True)
(.TopOffset 4)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"-B-"
"-C-")
(Table1.ColumnWidths 4
4
4)
(Table1.VisibleRows 4)
(Table1.ShowGrid True)
(Label17.Label "Table")
(Label17.AttachLeft True)
(.Label "Decorated layout")
(.Decorated True)
(.TopOffset 4)
(.BottomOffset 4)
(.LeftOffset 4)
(.RightOffset 4)
(.Layout
(Grid (Rows 1111111111111)(Cols 11)
Label2
(Grid (Rows 11)(Cols 1)
CheckButton3
CheckButton1
444 Creo®Parametric TOOLKIT User’sGuide)
Label1
InputPanel1
Label3
Label4
Label5
List1
Label6
OptionMenu1
Label11
ProgressBar1
Label8
RadioGroup1
Label13
Separator1
Label9
Slider1
Label14
SpinBox1
Label17
Table1
Label10
TextArea1
Label7
ThumbWheel1
)
)
)
)
(Layout Layout8
(Components
(Label Label15)
)
(Resources
(Label15.Bitmap "ptc_logo")
(.Label "Second layout")
(.Layout
(Grid (Rows 1)(Cols 1)
Label15
)
)
)
)
Example9:ResourceFileforDialogwithFourComponents
on2x2Grid
Thisexampleshowsasimpledialogwhichcontainsfourcomponents onasingle
2-by-2grid.
UserInterface:Dialogs 445(Dialog Simple
(Components
(PushButton OK)
(PushButton Cancel)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxon2x2Grid
Thisexampleshowsasimpledialogwhichcontainsfourcomponents onasingle
2-by-2grid.
UserInterface:Dialogs 445(Dialog Simple
(Components
(PushButton OK)
(PushButton Cancel)
(Label RadioLabel)
(RadioGroup Tolgroup)
)
(Resources
(OK.Label "OK")
(OK.TopOffset 4)
(OK.BottomOffset 4)
(OK.LeftOffset 4)
(OK.RightOffset 4)
(Cancel.Label "Cancel")
(Cancel.TopOffset 4)
(Cancel.BottomOffset 4)
(Cancel.LeftOffset 4)
(Cancel.RightOffset 4)
(RadioLabel.Label "Value touse")
(RadioLabel.TopOffset 4)
(RadioLabel.BottomOffset 4)
(RadioLabel.LeftOffset 4)
(RadioLabel.RightOffset 4)
(Tolgroup.Orientation True)
(Tolgroup.Names "Top"
"Middle"
"Bottom")
(Tolgroup.Labels "Upper limit"
"Nominal"
"Lower limit")
(.Label "Simple Dialog")
(.Layout
(Grid (Rows 11)(Cols 11)
RadioLabel
Tolgroup
OK
Cancel
)
)
)
)
Example10:ResourceFileforSubgridDialog
Thisexampleshowstheresourcefileforthepreceding subgriddialog.
(Dialog subgrid
(Components
(PushButton OK)
(PushButton Cancel)
(InputPanel FeatNamePanel)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
)
)
)
Example10:ResourceFileforSubgridDialog
Thisexampleshowstheresourcefileforthepreceding subgriddialog.
(Dialog subgrid
(Components
(PushButton OK)
(PushButton Cancel)
(InputPanel FeatNamePanel)
446 Creo®Parametric TOOLKIT User’sGuide(Label FeatNameLabel)
)
(Resources
(OK.Label "OK")
(OK.TopOffset 4)
(OK.BottomOffset 4)
(OK.LeftOffset 4)
(OK.RightOffset 4)
(Cancel.Label "Cancel")
(Cancel.TopOffset 4)
(Cancel.BottomOffset 4)
(Cancel.LeftOffset 4)
(Cancel.RightOffset 4)
(FeatNamePanel.TopOffset 4)
(FeatNamePanel.BottomOffset 4)
(FeatNamePanel.LeftOffset 4)
(FeatNamePanel.RightOffset 4)
(FeatNameLabel.Label "Feature name")
(.Label "Subgrid")
(.Layout
(Grid (Rows 111)(Cols 1)
FeatNameLabel
FeatNamePanel
(Grid (Rows 1)(Cols 11)
OK
Cancel
)
)
)
)
)
Example11:ResourceFileforSubgridDialogwithResize
Abetterwaytolayoutthedialoginthepreviousexamplewouldbetoplacethe
inputpaneltexttotheleftoftheinputpanel.Ifthisweredonewithasingle2-by-2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
)
)
)
)
Example11:ResourceFileforSubgridDialogwithResize
Abetterwaytolayoutthedialoginthepreviousexamplewouldbetoplacethe
inputpaneltexttotheleftoftheinputpanel.Ifthisweredonewithasingle2-by-2
grid,theinputpanellabelandpanelitselfwouldresizetotakeupthesamewidth
astheOKandCancelbuttons.Toavoidthisyoucanputthefirsttwocomponents
inalayoutoftheirown,whichthereforehasitsowngrid,sothecolumnscantake
uptheirownwidths.
Thisexampledemonstrates thismethod.
(Dialog subgrid
(Components
(PushButton OK)
(PushButton Cancel)
(InputPanel FeatNamePanel)
(Label FeatNameLabel)
)
(Resources
UserInterface:Dialogs 447(OK.Label "OK")
(OK.TopOffset 4)
(OK.BottomOffset 4)
(OK.LeftOffset 4)
(OK.RightOffset 4)
(Cancel.Label "Cancel")
(Cancel.TopOffset 4)
(Cancel.BottomOffset 4)
(Cancel.LeftOffset 4)
(Cancel.RightOffset 4)
(FeatNamePanel.TopOffset 4)
(FeatNamePanel.BottomOffset 4)
(FeatNamePanel.LeftOffset 4)
(FeatNamePanel.RightOffset 4)
(FeatNameLabel.Label "Feature name")
(.Label "Subgrid")
(.Layoutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(FeatNamePanel.TopOffset 4)
(FeatNamePanel.BottomOffset 4)
(FeatNamePanel.LeftOffset 4)
(FeatNamePanel.RightOffset 4)
(FeatNameLabel.Label "Feature name")
(.Label "Subgrid")
(.Layout
(Grid (Rows 111)(Cols 1)
FeatNameLabel
FeatNamePanel
(Grid (Rows 1)(Cols 11)
OK
Cancel
)
)
)
)
)
Example12:ResourceFilewithOffsets,Attachments, and
HelpText
Thisexampleshowsasectionofresourcefilewhichspecifiesoffsets,attachments,
andhelptextisshownbelow.Thisisanextendedversionoftheprevious
example.
(Resources
(FeatNameLabel.Label "Feature name")
(FeatNameLabel.AttachLeft True)
(FeatNameLabel.TopOffset 4)
(FeatNameLabel.BottomOffset 4)
(FeatNameLabel.LeftOffset 4)
(FeatNameLabel.RightOffset 4)
(FeatNamePanel.HelpText "Enter the Feature name
here.")
(FeatNamePanel.TopOffset 4)
(FeatNamePanel.BottomOffset 4)
(FeatNamePanel.LeftOffset 4)
(FeatNamePanel.RightOffset 4)
....
)
448 Creo®Parametric TOOLKIT User’sGuideThe.Bitmapattributeisthenameofafilewhichcontainsabitmapdescription ofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(FeatNamePanel.LeftOffset 4)
(FeatNamePanel.RightOffset 4)
....
)
448 Creo®Parametric TOOLKIT User’sGuideThe.Bitmapattributeisthenameofafilewhichcontainsabitmapdescription of
animagewhichshouldbeappliedtothecomponent. Thefilecanbeoneofthe
followingtypes:
•.GIF
•.PNG
•.PCX
•.BMP
•.ICO
•.CUR
Ifyousupplyonlytherootofthefilename,the.bifformatwillbeassumed.
Example13:ResourceFilewithTextQuestion,OKand
CancelButtons
Thisexampleshowstheuseofasimpledialog,whichcontainsatextquestionand
OKandCancelbuttons.Itwouldbeusedforanykindofconfirmation request.
Foraprogramatic methodofcreatingthisdialogboxrefertoExample1:Source
forDialogwithTextQuestion,OKandCancelButtonsonpage350.
(Dialog confirm
(Components
(Label Question)
(PushButton OK)
(PushButton Cancel)
)
(Resources
(Question.Label "Dummy label")
(Question.TopOffset 4)
(Question.BottomOffset 4)
(Question.LeftOffset 4)
(Question.RightOffset 4)
(OK.Label "OK")
(OK.TopOffset 4)
(OK.BottomOffset 4)
(OK.LeftOffset 4)
(OK.RightOffset 4)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(Question.TopOffset 4)
(Question.BottomOffset 4)
(Question.LeftOffset 4)
(Question.RightOffset 4)
(OK.Label "OK")
(OK.TopOffset 4)
(OK.BottomOffset 4)
(OK.LeftOffset 4)
(OK.RightOffset 4)
(Cancel.Label "Cancel")
(Cancel.TopOffset 4)
(Cancel.BottomOffset 4)
(Cancel.LeftOffset 4)
(Cancel.RightOffset 4)
(.Label "Confirm")
(.Layout
(Grid (Rows 11)(Cols 1)
Question
(Grid (Rows 1)(Cols 11)
UserInterface:Dialogs 449OK Cancel
)
)
)
)
)
Example14:UIListResourceFile
TheexamplebelowshowstheresourcefileusedtocreateUIList.Fora
programatic methodofcreatingtheUIListrefertoExample2:TouseUIList
Functions onpage375.
(Dialog ug_uilist
(Components
(SubLayout ug_uilist_layout1)
(SubLayout ug_uilist_layout2)
)
(Resources
(.Label "UI List")
(.Layout
(Grid (Rows 11)(Cols 1)
ug_uilist_layout1
ug_uilist_layout2
)
)
)
)
(Layout ug_uilist_layout1
(Components
(List ug_uilist_comp)
(Label ug_uilist_label_1)
(TextArea ug_uilist_txtarea)
(Label ug_uilist_lable_2)
)
(Resources
(ug_uilist_label_1.Label "List area")xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
)
)
)
(Layout ug_uilist_layout1
(Components
(List ug_uilist_comp)
(Label ug_uilist_label_1)
(TextArea ug_uilist_txtarea)
(Label ug_uilist_lable_2)
)
(Resources
(ug_uilist_label_1.Label "List area")
(ug_uilist_txtarea.FontStyle 4)
(ug_uilist_lable_2.Label "Text Area")
(.Decorated True)
(.DecoratedStyle 3)
(.Layout
(Grid (Rows 1111)(Cols 1)
ug_uilist_label_1
ug_uilist_comp
ug_uilist_lable_2
ug_uilist_txtarea
)
450 Creo®Parametric TOOLKIT User’sGuide)
)
)
(Layout ug_uilist_layout2
(Components
(PushButton ug_uilist_ok)
(PushButton ug_uilist_cancel)
)
(Resources
(ug_uilist_ok.Label "Ok")
(ug_uilist_ok.TopOffset 4)
(ug_uilist_ok.BottomOffset 4)
(ug_uilist_ok.RightOffset 20)
(ug_uilist_cancel.Label "Cancel")
(ug_uilist_cancel.TopOffset 4)
(ug_uilist_cancel.BottomOffset 4)
(ug_uilist_cancel.LeftOffset 20)
(.Layout
(Grid (Rows 1)(Cols 111)
ug_uilist_ok
(Pos 13)
ug_uilist_cancel
)
)
)
)
Example15:ResourceFileforDialogwithMenubar
Theexamplebelowshowstheresourcefileusedtocreatethedialogwithxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(.Layout
(Grid (Rows 1)(Cols 111)
ug_uilist_ok
(Pos 13)
ug_uilist_cancel
)
)
)
)
Example15:ResourceFileforDialogwithMenubar
Theexamplebelowshowstheresourcefileusedtocreatethedialogwith
MenuBars asdescribedinsectionExample9:ResourceFileforDialogwithFour
Components on2x2Gridonpage445.
(Dialog menus
(Components
(MenuBar MenuBar1
MenuPane1
MenuPane2)
(TextArea TextArea1)
)
(Resources
(TextArea1.Rows 10)
(TextArea1.Columns 25)
(.Label "Menubar dialog")
(.Layout
(Grid (Rows 1)(Cols 1)
TextArea1
)
UserInterface:Dialogs 451)
)
)
(MenuPane MenuPane1
(Components
(PushButton PushButton1)
(PushButton PushButton2)
)
(Resources
(.Label "MenuPane1")
(PushButton1.Label "Button1")
(PushButton2.Label "Button2")
)
)
(MenuPane MenuPane2
(Components
(PushButton PushButton3)
(Separator Separator1)
(RadioGroup RadioGroup1)
(RadioGroup RadioGroup2)
(Separator Separator2)
(CascadeButton CascadeButton2
MenuPane4)
(CheckButton CheckButton1)
)
(Resources
(.Label "MenuPane2")
(PushButton3.Label "Pushbutton")xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(RadioGroup RadioGroup2)
(Separator Separator2)
(CascadeButton CascadeButton2
MenuPane4)
(CheckButton CheckButton1)
)
(Resources
(.Label "MenuPane2")
(PushButton3.Label "Pushbutton")
(RadioGroup1.Names "RG1"
"RG2")
(RadioGroup1.Labels "Radio group 1"
"Radio group 2")
(CascadeButton2.Label "Cascade button")
(CheckButton1.Label "Checkbutton")
)
)
(MenuPane MenuPane4
(Components
(PushButton PushButton5)
(PushButton PushButton6)
)
(Resources
(PushButton5.Label "Pushbutton")
(PushButton6.Label "Pushbutton")
)
452 Creo®Parametric TOOLKIT User’sGuide)
Example16:ProgressBarResourceFile
(Dialog progressbars
(Components
(ProgressBar ProgressBar2)
(ProgressBar ProgressBar3)
(ProgressBar ProgressBar4)
(ProgressBar ProgressBar5)
(Label Label2)
(Label Label3)
(Label Label4)
(Label Label5)
(Separator Separator1)
(SpinBox SpinBox1)
(SpinBox SpinBox2)
(ThumbWheel ThumbWheel1)
)
(Resources
(ProgressBar2.ProgressStyle 0)
(ProgressBar2.TopOffset 4)
(ProgressBar2.BottomOffset 4)
(ProgressBar2.LeftOffset 4)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(SpinBox SpinBox1)
(SpinBox SpinBox2)
(ThumbWheel ThumbWheel1)
)
(Resources
(ProgressBar2.ProgressStyle 0)
(ProgressBar2.TopOffset 4)
(ProgressBar2.BottomOffset 4)
(ProgressBar2.LeftOffset 4)
(ProgressBar2.RightOffset 4)
(ProgressBar3.ProgressStyle 1)
(ProgressBar3.TopOffset 4)
(ProgressBar3.BottomOffset 4)
(ProgressBar3.LeftOffset 4)
(ProgressBar3.RightOffset 4)
(ProgressBar4.TopOffset 4)
(ProgressBar4.BottomOffset 4)
(ProgressBar4.LeftOffset 4)
(ProgressBar4.RightOffset 4)
(ProgressBar5.ProgressStyle 3)
(ProgressBar5.TopOffset 4)
(ProgressBar5.BottomOffset 4)
(ProgressBar5.LeftOffset 4)
(ProgressBar5.RightOffset 4)
(Label2.Label "No text")
(Label2.AttachLeft True)
(Label3.Label "Value")
(Label3.AttachLeft True)
(Label4.Label "Percentage")
(Label4.AttachLeft True)
(Label5.Label "Interval")
(Label5.AttachLeft True)
(Separator1.Orientation True)
(SpinBox1.Columns 8)
(SpinBox1.Editable False)
UserInterface:Dialogs 453(SpinBox1.IntegerBase 8)
(SpinBox1.Rate 1)
(SpinBox1.InputType 3)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(Label5.AttachLeft True)
(Separator1.Orientation True)
(SpinBox1.Columns 8)
(SpinBox1.Editable False)
UserInterface:Dialogs 453(SpinBox1.IntegerBase 8)
(SpinBox1.Rate 1)
(SpinBox1.InputType 3)
(SpinBox1.Digits 3)
(SpinBox1.DoubleFormat "%12.*le")
(ThumbWheel1.DecoratedStyle 4)
(ThumbWheel1.InfiniteRange False)
(.Layout
(Grid (Rows 111111)(Cols 111)
(Pos 12)
Label2
ProgressBar2
(Pos 22)
Label3
ProgressBar3
(Pos 32)
Label4
ProgressBar4
(Pos 51)
Label5
Separator1
ProgressBar5
SpinBox1
SpinBox2
ThumbWheel1
)
)
)
)
Example17:Component VisibilityResourceFile
Foraprogramatic methodofcreatingthisdialogboxrefertoExample3:
Controlling Component VisibilityorSensitivity atRuntimeonpage384.
(Dialog uguivisibility
(Components
(SubLayout PushbuttonVisibility)
(PushButton CloseButton)
)
(Resources
(CloseButton.Label "Close")
(CloseButton.TopOffset 4)
(CloseButton.BottomOffset 4)
(CloseButton.LeftOffset 4)
(CloseButton.RightOffset 4)
(.Label "Component Visibility")
(.Layout
(Grid (Rows 11)(Cols 1)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(CloseButton.TopOffset 4)
(CloseButton.BottomOffset 4)
(CloseButton.LeftOffset 4)
(CloseButton.RightOffset 4)
(.Label "Component Visibility")
(.Layout
(Grid (Rows 11)(Cols 1)
PushbuttonVisibility
454 Creo®Parametric TOOLKIT User’sGuideCloseButton
)
)
)
)
(Layout PushbuttonVisibility
(Components
(PushButton TargetBtn)
(CheckButton VisibleCheck)
(CheckButton SensitiveCheck)
(InputPanel ButtonLabel)
)
(Resources
(TargetBtn.Label "PushButton")
(TargetBtn.TopOffset 4)
(TargetBtn.BottomOffset 4)
(TargetBtn.LeftOffset 4)
(TargetBtn.RightOffset 4)
(TargetBtn.Resizeable True)
(VisibleCheck.Label "Visible")
(VisibleCheck.Set True)
(VisibleCheck.TopOffset 4)
(VisibleCheck.BottomOffset 4)
(VisibleCheck.LeftOffset 4)
(VisibleCheck.RightOffset 4)
(SensitiveCheck.Label "Sensitive")
(SensitiveCheck.Set True)
(SensitiveCheck.TopOffset 4)
(SensitiveCheck.BottomOffset 4)
(SensitiveCheck.LeftOffset 4)
(SensitiveCheck.RightOffset 4)
(ButtonLabel.Value "PushButton")
(ButtonLabel.TopOffset 4)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(SensitiveCheck.TopOffset 4)
(SensitiveCheck.BottomOffset 4)
(SensitiveCheck.LeftOffset 4)
(SensitiveCheck.RightOffset 4)
(ButtonLabel.Value "PushButton")
(ButtonLabel.TopOffset 4)
(ButtonLabel.BottomOffset 4)
(ButtonLabel.LeftOffset 4)
(ButtonLabel.RightOffset 4)
(.Label "PushButtons")
(.Layout
(Grid (Rows 1)(Cols 1111)
TargetBtn
VisibleCheck
SensitiveCheck
ButtonLabel
)
)
)
)
UserInterface:Dialogs 455Example18:ResourceFileforDialogwithSliderandLinked
InputPanel
Thisexampleshowstheresourcefileforadialogwithsliderandlinkedinput
panel.Foraprogramatic methodofcreatingthisdialogboxrefertoExample4:
SourceofDialogwithSliderandLinkedInputPanel onpage389.
(Dialog angle
(Components
(SubLayout Layout1)
(SubLayout Layout2)
)
(Resources
(.Label "Angle")
(.DefaultButton "OK")
(.Layout
(Grid (Rows 11)(Cols 1)
Layout1 Layout2
)
)
)
)
(Layout Layout1
(Components
(Slider Slider)
(InputPanel InputPanel)
(Label Prompt)
)
(Resources
(Slider.MinInteger -180)
(Slider.MaxInteger 180)
(Slider.Length 12)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLayout1 Layout2
)
)
)
)
(Layout Layout1
(Components
(Slider Slider)
(InputPanel InputPanel)
(Label Prompt)
)
(Resources
(Slider.MinInteger -180)
(Slider.MaxInteger 180)
(Slider.Length 12)
(Slider.Tracking True)
(Slider.TopOffset 4)
(Slider.BottomOffset 4)
(Slider.LeftOffset 4)
(Slider.RightOffset 4)
(InputPanel.Columns 4)
(InputPanel.AttachLeft False)
(InputPanel.AttachRight False)
(InputPanel.MinInteger -180)
(InputPanel.MaxInteger 180)
(InputPanel.TopOffset 4)
(InputPanel.BottomOffset 4)
(InputPanel.LeftOffset 4)
(InputPanel.RightOffset 4)
(InputPanel.InputType 2)
(Prompt.Label "Dummy text")
(.Layout
(Grid (Rows 11)(Cols 1)
Prompt
(Grid (Rows 1)(Cols 11)
456 Creo®Parametric TOOLKIT User’sGuideSlider
InputPanel
)
)
)
)
)
(Layout Layout2
(Components
(PushButton OK)
(PushButton Cancel)
)
(Resources
(OK.Label "OK")
(OK.TopOffset 4)
(OK.BottomOffset 4)
(OK.LeftOffset 4)
(OK.RightOffset 4)
(Cancel.Label "Cancel")
(Cancel.TopOffset 4)
(Cancel.BottomOffset 4)
(Cancel.LeftOffset 4)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
(Resources
(OK.Label "OK")
(OK.TopOffset 4)
(OK.BottomOffset 4)
(OK.LeftOffset 4)
(OK.RightOffset 4)
(Cancel.Label "Cancel")
(Cancel.TopOffset 4)
(Cancel.BottomOffset 4)
(Cancel.LeftOffset 4)
(Cancel.RightOffset 4)
(.Layout
(Grid (Rows 1)(Cols 11)
OK Cancel
)
)
)
)
Example19:UGTablesResourceFile
Thefollowingexampleshowsaresourcefilecontaining atable.Components may
beassignedtoatablethroughthetablelayout.Components ofthetablelayoutare
invisibleuntilassignedorcopiedintoatablecell.
(Dialog uguitableexample
(Components
(SubLayout TableLayout)
(SubLayout ButtonLayout)
(OptionMenu ToCopy)
)
(Resources
(ToCopy.Visible False)
(ToCopy.AttachTop True)
(ToCopy.AttachBottom True)
(ToCopy.Names "ONE"
"MANY")
(ToCopy.Labels "Select One"
UserInterface:Dialogs 457"Select Many")
(.Label "UG Tables")
(.Layout
(Grid (Rows 101)(Cols 1)
TableLayout
ButtonLayout
ToCopy
)
)
)
)
(Layout TableLayout
(Components
(Table LargeTable)
)
(Resources
(LargeTable.Columns 40)
(LargeTable.MinRows 4)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(.Layout
(Grid (Rows 101)(Cols 1)
TableLayout
ButtonLayout
ToCopy
)
)
)
)
(Layout TableLayout
(Components
(Table LargeTable)
)
(Resources
(LargeTable.Columns 40)
(LargeTable.MinRows 4)
(LargeTable.TopOffset 4)
(LargeTable.BottomOffset 4)
(LargeTable.LeftOffset 4)
(LargeTable.RightOffset 4)
(LargeTable.RowNames "A"
"B"
"C"
"D"
"E")
(LargeTable.ColumnNames "1"
"2"
"3"
"4")
(LargeTable.RowLabels "Alpha"
"Beta"
"Gamma"
"Delta"
"Epsilon")
(LargeTable.ColumnLabels "One"
"Two"
"Three"
"Four")
(LargeTable.ShowGrid True)
(.AttachLeft True)
(.AttachRight True)
(.AttachTop True)
(.AttachBottom True)
(.Layout
(Grid (Rows 1)(Cols 1)
LargeTable
)
458 Creo®Parametric TOOLKIT User’sGuide)
)
)
(TableLayout LargeTable
(Components
(PushButton BaseButton)
(CheckButton BaseCheckButton)
(InputPanel BaseInputPanel)
)
(Resources
(BaseButton.Label "Table Button")
(BaseCheckButton.Label "Table Check Button")
(BaseInputPanel.Value "Table Input Panel")
)
)
(Layout ButtonLayout
(Components
(PushButton CloseButton)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
(Resources
(BaseButton.Label "Table Button")
(BaseCheckButton.Label "Table Check Button")
(BaseInputPanel.Value "Table Input Panel")
)
)
(Layout ButtonLayout
(Components
(PushButton CloseButton)
(PushButton ModifySelectButton)
(Label Label1)
)
(Resources
(CloseButton.Label "Close")
(CloseButton.TopOffset 4)
(CloseButton.BottomOffset 4)
(CloseButton.LeftOffset 4)
(CloseButton.RightOffset 4)
(ModifySelectButton.Label "Toggle cells")
(ModifySelectButton.Visible False)
(ModifySelectButton.TopOffset 4)
(ModifySelectButton.BottomOffset 4)
(ModifySelectButton.LeftOffset 4)
(ModifySelectButton.RightOffset 4)
(.Layout
(Grid (Rows 11)(Cols 111)
(Pos 13)
Label1
ModifySelectButton
CloseButton
)
)
)
)
UserInterface:Dialogs 459Example20:UGTablesComponent ResourceFile
Thefollowingexampledemonstrates differentmethodsthatcanbeusedtoassign
components intotablecells.Theexampledirectlyassignsastoredcomponent,
copiesastoredcomponent, copiesacomponent fromelsewhere inthedialog,andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponents intotablecells.Theexampledirectlyassignsastoredcomponent,
copiesastoredcomponent, copiesacomponent fromelsewhere inthedialog,and
copiesacomponent fromanotherindependent dialog.
TheExample19:UGTablesResourceFileonpage457istheprimaryresource
fileforthefollowingexample.Thetablecomponents dialogisanotherdialog
fromwhichthefollowingresourcecodewillcopyacomponent intothetable.
Foraprogramatic methodofassigningcomponents intotablecellsreferto
Example5:ToAssignComponents intoTableCellsonpage398.
(Dialog uguitablecomponents
(Components
(PushButton ExternalButtonToCopy)
)
(Resources
(ExternalButtonToCopy.Label "From other dialog...")
(.Layout
(Grid (Rows 1)(Cols 1)
ExternalButtonToCopy
)
)
)
)
460 Creo®Parametric TOOLKIT User’sGuide19
UserInterface:Dashboards
Introduction toDashboards ......................................................................................462xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
)
)
)
460 Creo®Parametric TOOLKIT User’sGuide19
UserInterface:Dashboards
Introduction toDashboards ......................................................................................462
Dashboard..............................................................................................................462
DashboardPage.....................................................................................................465
Thischapterintroduces thebasicsofdashboards anddescribeshowCreo
Parametric TOOLKIToffersthecapability tocreateandcontroldashboards. Creo
Parametric TOOLKITapplications canconstructdashboards foranytoolwhere
theywouldtypicallyrequireadialogbox.
ThebehavioroftheCreoParametric TOOLKITdashboard issimilartotheCreo
Parametric dashboard. TheTOOLKITdashboards usethesamecommands and
dismissmechanism asthenativeCreoParametric dashboard. However,individual
commands mayhavedifferentaccessibility logicandsodifferentdashboards can
haveslightlydifferentcommands available.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdismissmechanism asthenativeCreoParametric dashboard. However,individual
commands mayhavedifferentaccessibility logicandsodifferentdashboards can
haveslightlydifferentcommands available.
461Introduction toDashboards
Adashboard isanembedded "dialogbox"atthetopoftheCreoParametric
graphicswindow.Adashboard typicallyappearswhenyoucreateormodifya
featureinCreoParametric. Itoffersthenecessarycontrols,inputs,statusand
guidanceforcreatingoreditingoffeatures.
Dashboard components
1ToolIcon
2DialogBar
3Slide-down Panels
4StandardButtons
Adashboard consistsofthefollowingcomponents:
•Amaindialogbar,whichshowthecommonly usedcommands andentry
fields.Youperformmostofyourmodelingtasksinthegraphicswindowand
thedialogbar.Whenyouactivateatool,thedialogbardisplayscommonly
usedoptionsandcollectors.
•Standardbuttonsforcontrolling thetool.
•Slide-down panelsthatopentoreveallesscommonly-used functionality .You
canusethemtoperformadvancedmodelingactionsorretrievecomprehensive
featureinformation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Standardbuttonsforcontrolling thetool.
•Slide-down panelsthatopentoreveallesscommonly-used functionality .You
canusethemtoperformadvancedmodelingactionsorretrievecomprehensive
featureinformation.
•Abitmapidentifiesthetool(typicallythesameiconusedonbuttonsthat
invokethetool).
CreoParametric usesthedashboard tocreatefeaturesthatinvolveextensive
interaction withuserinterfacecomponents andgeometrymanipulation. Youcan
usedashboards inCreoParametric TOOLKITapplications:
•Whereadialogboxistoolargeinsizeorisintrusiveontothegraphics
window.Dashboards enableyoutomakeasmooth-flow tool.
•Topresentastreamlined "simple-user" activitywithmorecomplicated actions
availableto"expertusers".
•WhereCreoParametric TOOLKITdashboards arenotonlylimitedtofeature
creationactivitiesandsolidmodelmodes.
Dashboard
Anopaquepointer ProUIDashboard isahandletotheoveralldashboard tool
afterithasbeenshown.
462 Creo®Parametric TOOLKIT User’sGuideShowingaDashboard
Functions Introduced:
•ProUIDashboardShow()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDashboard
Anopaquepointer ProUIDashboard isahandletotheoveralldashboard tool
afterithasbeenshown.
462 Creo®Parametric TOOLKIT User’sGuideShowingaDashboard
Functions Introduced:
•ProUIDashboardShow()
•ProUIDashboardshowoptionsAlloc()
•ProUIDashboardshowoptionsNotificationSet()
•ProUIDashboardshowoptionsTi tleSet()
•ProUIDashboardshowoptionsIconSet()
•ProUIDashboardshowoptionsHelpT extSet()
•ProUIDashboardshowoptionsFre e()
•ProUIDashboardDestr oy()
Usethefunction ProUIDashboardShow() topushanewdashboard User
Interfaceintothedashboard stackmechanism. Thedashboard willbeshowninthe
messageareaofCreoParametric. Thisfunctioncreatesaneventloop,andthus
doesnotexituntilthedashboard isbeingdismissed.
Usethefunction ProUIDashboardshowoptionsAlloc() toallocatea
handlecontaining datausedtobuildadashboard. Theinputargumentsforthis
functionare:
•main_page—Specifies themainpageforthedashboard.
•slideup_pages—Specifies aProArray ofhandlesrepresenting theslide-
downpages,ifneeded.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionare:
•main_page—Specifies themainpageforthedashboard.
•slideup_pages—Specifies aProArray ofhandlesrepresenting theslide-
downpages,ifneeded.
•appdata—Specifies theapplication datatobestoredwiththedashboard.
Usethefunction ProUIDashboardshowoptionsNotificationSet() to
assignacallbackfunctiontobecalledfortheindicatedeventoccurrence inthe
dashboard. Theinputargumentsforthisfunctionare:
•options—Specifies ahandletodatausedtobuildadashboard.
•notification—Specifies thenotification functiontobecalledforthegiven
event.
•appdata—Specifies theapplication datatobepassedtothecallbackfunction
whenitisinvoked.
Youcanregistereventnotifications forthefollowingeventsonthedashboard:
•PRO_UI_DASHBOARD_CREATE—when thedashboard isfirstinitialized
(beforethepagesareinitialized).
•PRO_UI_DASHBOARD_SHOW—when thedashboard isshownorresumed.
•PRO_UI_DASHBOARD_HIDE—when thedashboard ispausedandreplaced
byanothertool.
UserInterface:Dashboards 463•PRO_UI_DASHBOARD_ENTER—when youswitchtoadashboard fromxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_UI_DASHBOARD_HIDE—when thedashboard ispausedandreplaced
byanothertool.
UserInterface:Dashboards 463•PRO_UI_DASHBOARD_ENTER—when youswitchtoadashboard from
anothercomponent intheribbonuserinterface
•PRO_UI_DASHBOARD_EXIT—when youleavethedashboardandreturnto
acomponent ontheribbonuserinterface
•PRO_UI_DASHBOARD_DISMISS—upon thedashboard “close”event.
•PRO_UI_DASHBOARD_DESTROY—when thedashboard isfinallydestroyed.
Thefunction ProUIDashboardshowoptionsTitleSet() setsthetitleof
thedashboard. Theinputargumentsofthisfunctionare:
•dash_options—Specifies thehandlecontaining datathatisusedtobuildthe
dashboard.
•title—Specifies thetitleofthedashboard.
Usethefunction ProUIDashboardshowoptionsIconSet() tosetanicon
forthespecifieddashboard. Thisisthefirsticoninthefirstgroupfromthelefton
thedashboard.
Thefunction ProUIDashboardshowoptionsHelpTextSet() setsthe
helptextforthespecifieddashboard.
•1.Dashboard icon
•2.Dashboard helptext
Youcanusethefunction ProUIDashboardshowoptionsFree() tofreeaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProUIDashboardshowoptionsHelpTextSet() setsthe
helptextforthespecifieddashboard.
•1.Dashboard icon
•2.Dashboard helptext
Youcanusethefunction ProUIDashboardshowoptionsFree() tofreea
handlecontaining thedatausedtobuildadashboard.
Usethefunction ProUIDashboardDestroy() topopthedashboard fromthe
dashboard stackmechanism. Thedashboard UserInterfacewillbedestroyed.
AccessingaDashboard
Functions Introduced:
•ProUIDashboardUserdataGet()
•ProUIDashboardStdlayoutGet()
•ProUIDashboardBitmapSet()
Usethefunctions ProUIDashboardUserdataGet() togettheapplication
datayouattachedtothedashboard itemsuponregistration. Thiscanbeusedto
storethecurrentstateofthetool,andthustocontrolthevisibilityofcomponents.
464 Creo®Parametric TOOLKIT User’sGuideCreoParametric TOOLKITdoesnotcurrentlyprovideaccesstocreatethefeature
dashboard’ sstandardbuttons.However,youcanuse
ProUIDashboardStdlayoutGet() togetthelayoutnamewhereyoucan
createandplacethebuttonsinthestandardbuttonarea.Typicallythisconsistsofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdashboard’ sstandardbuttons.However,youcanuse
ProUIDashboardStdlayoutGet() togetthelayoutnamewhereyoucan
createandplacethebuttonsinthestandardbuttonarea.Typicallythisconsistsof
(atleast)OKandCancelbuttons.
Usethefunction ProUIDashboardBitmapSet() toassigntheiconforthe
dashboard, whichappearstotheleftoftheslide-down panelbuttons.
Dashboard Page
Eachsectionofcontentinadashboard iscalledadashboard page.Theopaque
handle ProUIDashboardPage represents anindividual page,thatis,eitherthe
dialogbar,orasingleslide-down panel.
Dashboard PageOptions
Functions Introduced:
•ProUIDashboardpageoptionsAlloc()
•ProUIDashboardpageoptionsNotificationSet()
•ProUIDashboardpageoptionsFr ee()
Usethefunction ProUIDashboardpageoptionsAlloc() toallocatea
handlerepresenting asinglepage(orlayout)thatwillbeshowninadashboard.
Theinputargumentsforthisfunctionare:
•page_name— Specifiesthepagename(mustbeunique).
•resour ce_name—Specifies thenameoftheresourcefiletouse(whosetopxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheinputargumentsforthisfunctionare:
•page_name— Specifiesthepagename(mustbeunique).
•resour ce_name—Specifies thenameoftheresourcefiletouse(whosetop
component mustbealayout,notadialog).IfNULL,anemptydefaultlayoutis
used.
•application_data—Specifies theapplication datastoredforthepage.
Usethefunction ProUIDashboardpageoptionsNotificationSet() to
assignafunctiontobecalleduponacertaineventoccurringinthedashboard. The
inputargumentsforthisfunctionare:
•options—Specifies ahandlerepresenting adashboard page.
•notification—Specifies thefunctiontobecalleduponthedesignated event
occurrence.
•appdata—Specifies theapplication datapassedtothecallbackfunctionwhen
itisinvoked.
Youcanregistereventnotifications forthefollowingeventsonthedashboard
page:
UserInterface:Dashboards 465•PRO_UI_DASHBOARD_PAGE_CREATE—when thepageisfirstcreated.
•PRO_UI_DASHBOARD_PAGE_SHOW—when thepageisshown(slide-down
panelsonly).
•PRO_UI_DASHBOARD_PAGE_HIDE—when thepageishidden(slide-down
panelsonly).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_UI_DASHBOARD_PAGE_SHOW—when thepageisshown(slide-down
panelsonly).
•PRO_UI_DASHBOARD_PAGE_HIDE—when thepageishidden(slide-down
panelsonly).
•PRO_UI_DASHBOARD_PAGE_DESTROY—when thepageisdestroyed.
Youcanusethefunction ProUIDashboardpageoptionsFree() tofreea
handlerepresenting asinglepage(orlayout)thatwillbeshowninadashboard.
AccessingaDashboard Page
Functions Introduced:
•ProUIDashboardPageGet()
•ProUIDashboardpageT itleSet()
•ProUIDashboardpageFor egro undcolorSet()
•ProUIDashboardpageNameGet()
•ProUIDashboardpageDashboardGet()
•ProUIDashboardpageUserdataGet()
•ProUIDashboardpageClose()
Usethefunction ProUIDashboardPageGet() toobtainthehandletoagiven
pagefromthedashboard. Theinputargumentsforthisfunctionare:
•dashboar d—Specifies thedashboard handle.
•name—Specifies thepagename.PassNULLtogetthehandletothemain
page.
Usethefunction ProUIDashboardpageTitleSet() toassignthetitle
stringforthedashboard page.Thiswillbeshownasthebuttonnamefortheslide-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•name—Specifies thepagename.PassNULLtogetthehandletothemain
page.
Usethefunction ProUIDashboardpageTitleSet() toassignthetitle
stringforthedashboard page.Thiswillbeshownasthebuttonnamefortheslide-
downpanel.ThisshouldtypicallybecalledfromtheCREATEnotification ofthe
dashboard page.
Usethefunction ProUIDashboardpageForegroundcolorSet() toset
thetextcolorforthebuttonthatinvokesaslide-down panel.Thistechniqueis
usedinseveralCreoParametric toolstonotifytheuserthattheymustenteroneof
thepanelstocompletethetool.
Usethefunction ProUIDashboardpageNameGet() toobtainthenameof
thepage.
Usethefunction ProUIDashboardpageDashboardGet() toobtainthe
dashboard thatownsthispage.
466 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProUIDashboardpageUserdataGet() toobtainsthe
application storedwiththisdashboard pageonregistration.
Usethefunction ProUIDashboardpageClose() toclosethedashboard
slide-down page.
AccessingComponents intheDashboard Pagesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplication storedwiththisdashboard pageonregistration.
Usethefunction ProUIDashboardpageClose() toclosethedashboard
slide-down page.
AccessingComponents intheDashboard Pages
Components addedtothedashboard areactually"owned"bytheCreoParametric
dialogwindow.CreoParametric automatically modifiesthenamesofcomponents
loadedfromresourcefilestoensurethatnonamecollisionsoccurwhenthe
components areadded.Thefunctionsinthissectionallowyoutolocatethenames
ofcomponents thatyouneedtoaccess.
Functions Introduced:
•ProUIDashboardpageDevicenameGet()
•ProUIDashboardpageComponentnameGet()
Usethefunction ProUIDashboardpageDevicenameGet() toobtainthe
devicenameowningthedashboard page.Thisnameshouldbeusedinother
ProUIfunctionstoaccessthecomponents storedinthedashboard page.
Usethefunction ProUIDashboardpageComponentnameGet() toobtain
therealcomponent nameinthedashboard page,ifthepagecontentswereloaded
fromalayout.ThisnameshouldbeusedinProUIfunctionsforaccessinga
component inthedashboard.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtherealcomponent nameinthedashboard page,ifthepagecontentswereloaded
fromalayout.ThisnameshouldbeusedinProUIfunctionsforaccessinga
component inthedashboard.
UserInterface:Dashboards 46720
UserInterface:BasicGraphics
Manipulating Windows.............................................................................................469
FlushingtheDisplayCommandstoWindow..............................................................474
SolidOrientation......................................................................................................474
GraphicsColorsandLineStyles...............................................................................477
DisplayingGraphics.................................................................................................481
DisplayingText........................................................................................................483xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDisplayingText........................................................................................................483
ValidatingTextStyles...............................................................................................484
DisplayLists...........................................................................................................485
GettingMouseInput................................................................................................486
CosmeticProperties................................................................................................487
Creating3DShadedDataforRendering...................................................................492
ThischapterdescribesallthefunctionsprovidedbyCreoParametric TOOLKIT
thatcreateandmanipulate graphicsandobjectdisplays.
CreoParametric TOOLKITreferstowindowsusingintegeridentifiers. Thebase
window(thebiggraphicswindowcreatedautomatically whenyouenterCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatcreateandmanipulate graphicsandobjectdisplays.
CreoParametric TOOLKITreferstowindowsusingintegeridentifiers. Thebase
window(thebiggraphicswindowcreatedautomatically whenyouenterCreo
Parametric) iswindow0,andthetextmessagewindowatthebottomiswindow1.
Inmanyofthefunctionsinthissection,youcanusetheidentifier“–1”toreferto
thecurrentwindow(theonecurrenttotheCreoParametric user).
468 Creo®Parametric TOOLKIT User’sGuideManipulating Windows
Thissectiondescribeshowtomanipulate windowsusingCreoParametric
TOOLKIT.Itisdividedintothefollowingsubsections:
•ResizingWindowsonpage469
•Manipulating theEmbedded BrowserinWindowsonpage470
•Repainting Windowsonpage470
•Controlling WhichWindowisCurrentonpage471
•CreatingandRemoving Windowsonpage472
•Retrieving theOwnerofaWindowonpage473
•VisitingWindowsonpage473
•Activating Windowsonpage473
Windows
Functions Introduced:
•ProWindowNameGet()
Thefunction ProWindowNameGet() returnsthewindownameforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•VisitingWindowsonpage473
•Activating Windowsonpage473
Windows
Functions Introduced:
•ProWindowNameGet()
Thefunction ProWindowNameGet() returnsthewindownameforthe
specifiedwindowidentifier.Theinputparameter win_idistheidentifierofthe
CreoParametric window.Theoutputparameter win_name isthenameoftheCreo
Parametric window.
ResizingWindows
Functions Introduced:
•ProWindowSizeGet()
•ProGraphicW indowSizeGet()
•ProWindowPixelOutlineGet()
•ProWindowCoordinatePixelGet()
Thefunction ProWindowSizeGet() returnsthesizeoftheCreoParametric
windowincludingtheUserInterfaceborder.
Thefunction ProGraphicWindowSizeGet() returnsthesizeoftheCreo
Parametric graphicswindowwithouttheborder.Ifthewindowoccupiesthewhole
screen.thewindowsizeisreturnedas1.Ifthescreenis1024pixelswideandthe
windowis512pixels,thewidthwillbereturnedas0.5.
Thefunction ProWindowPixelOutlineGet() returnstheoutlineofthe
CreoParametric windowinpixels.Theoutlineistheheightandwidthofthe
graphicarea.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwindowis512pixels,thewidthwillbereturnedas0.5.
Thefunction ProWindowPixelOutlineGet() returnstheoutlineofthe
CreoParametric windowinpixels.Theoutlineistheheightandwidthofthe
graphicarea.
UserInterface:BasicGraphics 469Thefunction ProWindowCoordinatePixelGet() convertstheWindows
coordinates receivedthroughtheinputargument pointintoPixelcoordinates. The
inputargumentsareasfollows:
•window_id—V alidwindowidentifier.
•point—Windowspace3Dcoordinates givenbyProArray ofthe
Pro3dPnt object.
Theoutputargument pixelSpaceCoor disthe2Dpixelcoordinates inintegersand
isreturnedbyaProArray ofthePro2dPnt object.
Manipulating theEmbeddedBrowserinWindows
Functions Introduced:
•ProWindowBr owserSizeGet()
•ProWindowBr owserSizeSet()
•ProWindowURLShow()
•ProWindowURLGet()
Thefunctions ProWindowBrowserSizeGet() and
ProWindowBrowserSizeSet() enableyoutofindandchangesizeofthe
embedded browserintheCreoParametric window.Thesefunctionsrefertothe
browsersizeintermsofapercentage ofthegraphicswindow(0.0to100.0).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProWindowBrowserSizeSet() enableyoutofindandchangesizeofthe
embedded browserintheCreoParametric window.Thesefunctionsrefertothe
browsersizeintermsofapercentage ofthegraphicswindow(0.0to100.0).
Note
Thefunctions ProWindowBrowserSizeGet() and
ProWindowBrowserSizeSet() arenotsupported ifthebrowserisopen
inaseparatewindow.
Thefunctions ProWindowURLGet() andProWindowURLShow() enable
youtofindandchangetheURLdisplayedintheembedded browserintheCreo
Parametric window.
RepaintingWindows
Functions Introduced:
•ProWindowClear()
•ProWindowRepaint()
•ProWindowRefre sh()
•ProWindowRefit()
•ProTreetoolRefre sh()
470 Creo®Parametric TOOLKIT User’sGuideThefunction ProWindowClear() temporarily removesallgraphicsfromthe
specifiedwindow.Ifyougivethefunctionawindowidentifierof–1,itclearsthe
currentwindow.
Thisfunctionisnotequivalent totheCreoParametric optiontoquitthewindow.
Itdoesnotbreaktheconnection betweenthecurrentsolidandthewindow.Thatis
thepurposeofthefunction ProWindowDelete(), describedlaterinthisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxItdoesnotbreaktheconnection betweenthecurrentsolidandthewindow.Thatis
thepurposeofthefunction ProWindowDelete(), describedlaterinthis
chapter.
TheProWindowRepaint() functionisequivalent totheCreoParametric
commandRepaintintheGraphicstoolbar,andremoveshighlights. Thefunction
accepts–1astheidentifier,whichindicatesthecurrentview.
Thefunction ProWindowRefresh() isdesignedprimarilyforthepurposesof
animation. Itupdatesthedisplayveryefficiently,butdoesnotremovehighlights.
Thefunctionaccepts–1asthewindowidentifier,whichindicatesthecurrent
window.
Thefunction ProWindowRefit() performsexactlythesameactionasthe
CreoParametric commandView▶▶Refit.(Itdoesnotaccept-1asthecurrent
window.UseProWindowCurrentGet() ifyouneedtheidofthecurrent
window.)
Thefunction ProTreetoolRefresh() refreshesthedisplayofthemodeltree
forthespecifiedmodel.Thisfunctionisusefulwhenyouaremodifying themodel
insomeway,suchaswhenyouarecreatingpatternsorfeatures.
Controlling WhichWindowisCurrent
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforthespecifiedmodel.Thisfunctionisusefulwhenyouaremodifying themodel
insomeway,suchaswhenyouarecreatingpatternsorfeatures.
Controlling WhichWindowisCurrent
Functions Introduced:
•ProWindowCurre ntGet()
•ProWindowCurre ntSet()
•ProAccessorywindowAboveactivewindowSet()
Thefunctions ProWindowCurrentGet() andProWindowCurrentSet()
enableyoutofindoutandchangethecurrentwindow.Thewindowiscurrentonly
forthepurposesoftheotherCreoParametric TOOLKITcommands thataffect
windows.
Thefunction ProWindowCurrentSet() isnotequivalent totheCreo
Parametric command tochangethewindowandhasnoeffectontheobject
returnedbyProMdlCurrentGet().
Thefunction ProAccessorywindowAboveactivewindowSet() allows
youtodisplaytheaccessorywindowalwaysabovetheactiveCreoParametric
window,forthecurrentCreoParametric TOOLKITapplication. Passtheinput
argument above_active_window asPRO_B_TRUE todisplaytheaccessory
windowontopofthecurrentwindow.Toremovethissetting,passtheinput
argument above_active_window asPRO_B_FALSE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxargument above_active_window asPRO_B_TRUE todisplaytheaccessory
windowontopofthecurrentwindow.Toremovethissetting,passtheinput
argument above_active_window asPRO_B_FALSE.
UserInterface:BasicGraphics 471Note
Theconfiguration option accessory_window_above allowsyouto
controlthedisplayofaccessorywindowinCreoParametric. Thevalidvalues
are:
•yes—Always displaystheaccessorywindowabovetheactivewindow.
•no—Does notdisplaytheaccessorywindowabovetheactivewindow.
Here,whichever istheactivewindowisdisplayedontop.
CreatingandRemovingWindows
Functions Introduced:
•ProObjectwindowMdlnameCr eate()
•ProWindowDelete()
•ProWindowCurre ntClose()
•ProAccessorywindowW ithTreeMdlnameCreate ()
Thefunction ProObjectwindowMdlnameCreate() opensanewwindow
containing aspecifiedsolid.Thesolidmustalreadybeinmemory.Ifawindowis
alreadyopenonthatsolid,thefunctionreturnstheidentifierofthatwindow.Ifthe
MainWindowisempty,thefunctionusesitinsteadofcreatinganewone.The
sectionGraphicsColorsandLineStylesonpage477showshowtousexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalreadyopenonthatsolid,thefunctionreturnstheidentifierofthatwindow.Ifthe
MainWindowisempty,thefunctionusesitinsteadofcreatinganewone.The
sectionGraphicsColorsandLineStylesonpage477showshowtouse
ProObjectwindowMdlnameCreate().
Thefunction ProWindowDelete() istheequivalent oftheCreoParametric
command toquitthewindow.IfthewindowisnottheMainWindow,itisalso
deletedfromthescreen.
Toclosethecurrentwindow,usethefunction ProWindowCurrentClose().
Whenyoucallthisfunction,thecontrolmustbereturnedtoCreoParametric to
closethecurrentwindow.
Thisfunctionduplicates thebehavioroftheView▶▶Closecommand inCreo
Parametric. IfthecurrentwindowistheoriginalwindowcreatedwhenCreo
Parametric wasstarted,thefunctionclearsthewindow;otherwise, thefunction
removesthewindowfromthescreen.
Note
Anyworkdonesincethelastsavewillbelost.
472 Creo®Parametric TOOLKIT User’sGuideInCreoParametric, whenthemainwindowisactive,youcanopenanaccessory
windowforoperations suchaseditaninsertedcomponent orafeature,previewanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx472 Creo®Parametric TOOLKIT User’sGuideInCreoParametric, whenthemainwindowisactive,youcanopenanaccessory
windowforoperations suchaseditaninsertedcomponent orafeature,previewan
object,selectareference, andsomeotheroperations. Themodeltreeassociated
withthisCreoParametric objectisalsodisplayedintheaccessorywindow.For
moreinformation abouttheaccessorywindow,refertheCreoParametric help.
InCreoParametric TOOLKIT,thefunction
ProAccessorywindowWithTreeMdlnameCreate() opensanaccessory
windowcontaining thespecifiedobject.Ifawindowisalreadyopenwiththe
specifiedobject,thefunctionreturnstheidentifierofthatwindow.Ifanempty
windowexists,thefunctionusesthatwindowtoopentheobject.Theinput
argument tree_flagcontrolsthedisplayofthemodeltreeintheaccessorywindow.
IfthisflagissettoPRO_B_TRUE themodeltreeisdisplayed.
RetrievingtheOwnerofaWindow
FunctionIntroduced:
•ProWindowMdlGet()
ThefunctionProWindowMdlGet()retrieves theCreoParametric modelthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIfthisflagissettoPRO_B_TRUE themodeltreeisdisplayed.
RetrievingtheOwnerofaWindow
FunctionIntroduced:
•ProWindowMdlGet()
ThefunctionProWindowMdlGet()retrieves theCreoParametric modelthat
ownsthespecifiedwindow.Thisfunctiongivesyoudetailsaboutthewindow
neededtoperformnecessaryactionsonit.
Note
Ifnomodelisassociated withthespecifiedwindow,CreoParametric
TOOLKITreturns NULLasamodelpointerandPRO_TK_NO_ERROR asa
returnvalue.
VisitingWindows
FunctionIntroduced:
•ProWindowsV isit()
Thefunction ProWindowsVisit() enablesyoutovisitalltheCreoParametric
windows.Foradetailedexplanation ofvisitingfunctions, seethesectionVisit
Functions intheFundamentals onpage22chapter.
ActivatingWindows
FunctionIntroduced:
•ProWindowActivate()
UserInterface:BasicGraphics 473Thefunction ProWindowActivate() activatesthespecifiedwindowandsets
itasthecurrentwindow.Whenyoucallthisfunction,thecontrolmustbereturned
toCreoParametric toactivatethespecifiedwindow.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxitasthecurrentwindow.Whenyoucallthisfunction,thecontrolmustbereturned
toCreoParametric toactivatethespecifiedwindow.
Thisfunctionality isequivalent tochangingtheactivewindowbyselectingand
activating awindowusingthepull-down menuofWindowscommand underthe
ViewtabinCreoParametric.
Note
Thisfunctionworksinasynchronous modeonly.
FlushingtheDisplayCommands to
Window
FunctionIntroduced:
•ProWindowDeviceFlush()
Whenanapplication sendscommands todisplaygraphics,thesecallsarebuffered.
Thebufferedcommands areexecutedwheneverthereisamovement ofmousein
thegraphicswindow.IftheCreoParametric TOOLKITapplication modifiesthe
currentdisplay,butdoesnothaveanyinteraction withthegraphicswindow,the
function ProWindowDeviceFlush() mustbecalled.Thefunctionflushesthe
buffersandexecutesallthedisplaycommands onthespecifiedwindow.For
example,consideralinkwhichisclickedinanembedded browser.Thislinkalters
thedisplayinthegraphicswindow.Asthereisnomovement ofthemouseinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexample,consideralinkwhichisclickedinanembedded browser.Thislinkalters
thedisplayinthegraphicswindow.Asthereisnomovement ofthemouseinthe
graphicswindow,thefunction ProWindowDeviceFlush() mustbecalledto
executethedisplaycalls.
Note
Youmustnotcallthisfunctionoften,asitcausesthesystemsrunningon
WindowsVistaandWindows7toslowdown.Itisrecommended thatyoucall
thisfunctiononlyafteryoucompleteallthedisplayoperations.
SolidOrientation
Functions Introduced:
•ProWindowCurre ntMatrixGet()
•ProViewMatrixGet()
474 Creo®Parametric TOOLKIT User’sGuide•ProViewMatrixSet()
•ProViewReset()
•ProViewRotate()
•ProWindowPanZoomMatrixSet()
•ProViewRefit()
Eachgraphicswindowinsolid(PartorAssembly) modehastwotransformation
matricesassociated withit—theviewmatrixandthewindowmatrix.Theview
matrixdescribesthetransformation betweensolidcoordinates andscreen
coordinates. Therefore, theviewmatrixdescribestheorientation ofthesolidinthe
window.
Thewindowmatrixisthetransformation betweenscreencoordinates andwindowxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcoordinates. Therefore, theviewmatrixdescribestheorientation ofthesolidinthe
window.
Thewindowmatrixisthetransformation betweenscreencoordinates andwindow
coordinates. Thewindowmatrixdescribesthepanandzoomfactors.Thescreen
coordinate atwhichaparticularpointonasolidisdisplayedisnotaffectedby
pansandzooms—this affectswindowcoordinates only.
Theviewmatrixisimportantbecausethemouseinputfunctionsandsomeofthe
graphicsdrawingfunctionsusescreencoordinates, whileallsolidgeometryuses
solidcoordinates. Theviewmatrixenablesyoutotransformbetweenthetwo
systems.Thefunction ProWindowCurrentMatrixGet() providesthe
windowmatrixforthecurrentwindow.
Thefunction ProWindowPanZoomMatrixSet() enablesyoutosetthepan
andzoommatrix(windowmatrix)forthecurrentwindow.
Thefunction ProViewRefit() zoomsandpanstheviewtodisplaythe
specifiedobjectinthewindow.Theinputargumentsare:
•model—Handle totheobject.Thesupported objecttypesaredrawing,part,
andassembly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProViewRefit() zoomsandpanstheviewtodisplaythe
specifiedobjectinthewindow.Theinputargumentsare:
•model—Handle totheobject.Thesupported objecttypesaredrawing,part,
andassembly.
•view—Handle totheview,whichisusedtodisplaytheobject.Iftheobjectisa
solidmodel,andisdisplayedinthecurrentwindow,youcanpassthe
argumentasNULL.
Iftheobjectisadrawing,passthehandletothebackground view.Usethe
function ProDrawingBackgroundViewGet() togetthehandletothe
background view.
GettingandSettingtheViewMatrix
Thefunction ProViewMatrixGet() providestheviewmatrixforaspecified
window.SettheviewargumenttoNULLforthecurrentview.
Thefunction ProViewMatrixSet() enablesyoutosettheviewmatrix(if
normalized), andthereforetheorientation ofthesolidintheview.
UserInterface:BasicGraphics 475Note
Function ProViewMatrixSet() doesnotcausetheviewtoberepainted.
A4x4transformation matrixdescribesashiftandascaling,aswellasa
reorientation. Yousettheviewmatrixtodefineaneworientation. CreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunction ProViewMatrixSet() doesnotcausetheviewtoberepainted.
A4x4transformation matrixdescribesashiftandascaling,aswellasa
reorientation. Yousettheviewmatrixtodefineaneworientation. CreoParametric
appliesitsownshiftandscalingtotheviewmatrixyouprovidetoensurethatthe
solidfitsproperlyintotheview.Thisimpliesthefollowing:
•ThematrixoutputbyProViewMatrixGet() isnotthesameastheone
youpreviously inputtothefunction ProViewMatrixSet(), althoughits
orientation isthesame.
•EachrowofthematrixyouprovidetoProViewMatrixSet() musthavea
lengthof1.0,andthebottomrowmustbe0,0,0,1.
•ThematrixyouprovidetoProViewMatrixSet() mustbenormalized—it
cannotincludescalingorshift.Example1:SavingThreeViewsonpage494
showshowtonormalize amatrix.
StoringNamedViews
Functions Introduced:
•ProViewStor e()
•ProViewRetrieve()
•ProViewNamesGet()
•ProViewFro mModelitemGet()
•ProViewNameLineGet()
•ProViewIdFr omNameLineGet()
•ProViewNameSet()
•ProViewDelete()
TheProViewStore() andProViewRetrieve() functionsenableyoutoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProViewNamesGet()
•ProViewFro mModelitemGet()
•ProViewNameLineGet()
•ProViewIdFr omNameLineGet()
•ProViewNameSet()
•ProViewDelete()
TheProViewStore() andProViewRetrieve() functionsenableyouto
saveanduseanamedviewofthesolid.Theyareequivalent totheCreo
Parametric View▶▶Reorientcommands Save,andSetintheSavedViewstab,under
theOrientation dialogbox.Youcanthenselecttheviewyouwantfromthelistof
viewnames.
Thefunction ProViewNamesGet() retrievesthenamesoftheviewsinthe
specifiedsolid.
Thefunction ProViewFromModelitemGet() retrievestheviewhandlefrom
amodelitemhandle.ThemodelitemmustbeoftypePRO_VIEW.
476 Creo®Parametric TOOLKIT User’sGuideThefunction ProViewNameGet() hasbeensuperseded bythefunction
ProViewNameLineGet(). Thefunction ProViewNameLineGet()
retrievesthenameoftheviewfromtheviewhandle.
Thefunction ProViewIdFromNameGet() hasbeensuperseded bythe
function ProViewIdFromNameLineGet(). Thefunction
ProViewIdFromNameLineGet() retrievestheIDoftheview.Theinput
argumentsare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProViewIdFromNameGet() hasbeensuperseded bythe
function ProViewIdFromNameLineGet(). Thefunction
ProViewIdFromNameLineGet() retrievestheIDoftheview.Theinput
argumentsare:
•model—Specifies thehandletothepartorassemblyassociated withthe
drawing,ortothedrawingthatcontainstheview.Thisargumentcannotbe
NULL.
•view_name—Specifies thenameoftheview.ThisargumentcannotbeNULL.
Thefunction ProViewNameSet() setsthenameoftheviewinthespecified
solid.Theinputsargumentsare:
•model—Specifies thehandletoapart,assembly,ordrawing.Thisargument
cannotbeNULL.
•p_view—Specifies thehandleoftheview.
•p_name—Specifies thenameoftheview.
Thefunction ProViewDelete() deletestheviewfromthespecifiedsolid.The
inputargumentsare:
•model—Specifies thehandletoapart,assembly,drawing.Thisargument
cannotbeNULL.
•p_view—Specifies thehandleoftheview.
Example1:SavingThreeViews
ThesamplecodeinUgGraphViewsSave.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_graphics showsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcannotbeNULL.
•p_view—Specifies thehandleoftheview.
Example1:SavingThreeViews
ThesamplecodeinUgGraphViewsSave.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_graphics shows
howtosettheviewmatrixandstoreanamedview.
GraphicsColorsandLineStyles
CreoParametric usesseveralpredefined colorsinitscolormap.Thecolorsare
represented bythevaluesofProColorType(), definedinthefile
ProToolkit.h. Thenamesofthetypesgenerallyindicatewhattheyareused
forinCreoParametric, althoughmanycolormapentriesareusedforseveral
differentpurposes.Thesealsocorrespond tothesystemcolorspresentedtothe
userthroughtheuserinterface.
UserInterface:BasicGraphics 477Note
PTCreservestherighttochangeboththedefinitions ofthepredefined
colormapandalsooftheassignment ofentitiestomembersofthecolormap
asrequiredbyimprovements totheuserinterface.PTCrecommends not
relyingonthepredefined RGBcolorfordisplaying ofCreoParametric
TOOLKITentitiesorgraphics,andalsorecommends againstrelyingonthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasrequiredbyimprovements totheuserinterface.PTCrecommends not
relyingonthepredefined RGBcolorfordisplaying ofCreoParametric
TOOLKITentitiesorgraphics,andalsorecommends againstrelyingonthe
relationship betweencertaincolormapentriesandtypesofentities.The
followingsectiondescribehowtoconstructyourapplication sothatitdoesnot
relyonpotentially variantproperties inCreoParametric.
SettingColorstoDesiredValues
Functions Introduced:
•ProTextColorModify()
•ProGraphicsColorModify()
Thefunctions ProTextColorModify() and
ProGraphicsColorModify() enableyoutoselectadifferentcolortobe
usedforeitherofthefollowing:
•Graphicstext—User customtextdrawnbythe
ProGraphicsTextDisplay. Graphicstextisbydefaultdisplayedusing
PRO_COLOR_LETTER.
•Graphics—User customgraphicsdrawnbyProGraphics function,whichis
bydefaultdisplayedusing PRO_COLOR_DRAWING.
Bothfunctionsonlyaffectthecolorusedfornewgraphics,youdrawusingCreo
Parametric TOOLKIT,notthecolorsusedforitemsCreoParametric draws.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbydefaultdisplayedusing PRO_COLOR_DRAWING.
Bothfunctionsonlyaffectthecolorusedfornewgraphics,youdrawusingCreo
Parametric TOOLKIT,notthecolorsusedforitemsCreoParametric draws.
BothfunctionstakeaProColorstructureasinput.Thisstructureallowsyouto
specifycolorbyoneofthefollowingthreemethods:
•DEFAULT—usethedefaultCreoParametric colorentryfornewgraphicsor
text.
•TYPE—use apredefined ProColortype color.
•RGB-useacustomRGBvalue.Thismethodshouldbeusedforanygraphics
whichshouldnotbeallowedtochangecolor(forexample;ifanapplication
wantsayellowlineonthescreenthatshouldalwaysbeyellowandnotdepend
onthechosencolorscheme.
Bothfunctionsoutputthevalueoftheprevioussetting.Itisgoodpracticeto
returnthecolortoitspreviousvalueafterhavingfinisheddrawinganobject.
478 Creo®Parametric TOOLKIT User’sGuideSettingColorstoMatchExistingEntities
Functions Introduced:
•ProColorByT ypeGet()
Thefunctions ProGraphicsColorModify() and
ProColorTextModify() allowyoutodrawgraphicsthatwillchangecolorxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProColorByT ypeGet()
Thefunctions ProGraphicsColorModify() and
ProColorTextModify() allowyoutodrawgraphicsthatwillchangecolor
basedonchangestotheCreoParametric colormap. Thisallowsyoutodraw
entitiesinsimilarcolorstorelatedentitiescreatedbyCreoParametric. However,
iftheassociations betweenobjectsandcolormapentriesshouldchangeinanew
releaseofCreoParametric, theassociation betweentheapplication entitiesandthe
CreoParametric entitieswouldbelost.Thefunction ProColorByTypeGet()
returnsthestandardcolormapentrycorresponding toaparticularentityinCreo
Parametric. Thisallowsapplications todrawgraphicsthatwillalwaysmatchthe
colorofaparticularCreoParametric entity.
Example2:SettingtheGraphicsColortoaSpecificRGB
Value
ThesamplecodeinUgGraphColorsAdjust.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
graphics showshowtosetthegraphicscolortoaspecificRGBvalue.
Example3:SettingTheGraphicsColortoFollowtheColor
ofCreoParametric Entityxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolkit_loadpoint>/protk_appls/pt_userguide/ptu_
graphics showshowtosetthegraphicscolortoaspecificRGBvalue.
Example3:SettingTheGraphicsColortoFollowtheColor
ofCreoParametric Entity
ThesamplecodeinUgGraphColorsAdjust.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
graphics showshowtosetthegraphicscolortofollowthecolorofCreo
Parametric Entity.
ModifyingtheCreoParametric ColorMap
Functions Introduced:
•ProColormapGet()
•ProColormapSet()
ThesefunctionsenableyoutofindoutandalterthecolorsettingsforCreo
Parametric. Eachcolorisdefinedintermsofthered,green,andbluevalues.The
RGBvaluesshouldbeexpressed inarangefrom0.0to1.0.Notethatsomecolors
relatedtoselectionandhighlighting arefixedandmaynotbemodified.
CreoParametric usesthesecolorsforeverything itdisplays.
ChangestothecolormaparepreservedfortherestoftheCreoParametric
session.Ifyouwanttohavepermanent changes,callProColormapSet() in
user_initialize().
UserInterface:BasicGraphics 479NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxChangestothecolormaparepreservedfortherestoftheCreoParametric
session.Ifyouwanttohavepermanent changes,callProColormapSet() in
user_initialize().
UserInterface:BasicGraphics 479Note
ChangingtheCreoParametric colormapcanhaveunintended effectsifthe
userhaschosenanalternatecolorscheme.Itmaycausecertainentriesto
blendintothebackground ortobeconfusedwithothertypesofentries.
Example4:ModifyingtheColoroftheHALF_TONEDisplay
ThesamplecodeinUgGraphColorsAdjust.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
graphics showshowtomodifythedefaulthalf-tonecolor(gray)toabrighter
color,usingthefunction ProColormapSet(). CreoParametric useshalf-tone
colortodisplayhiddenlines.
CreoParametric ColorSchemes
Functions Introduced:
•ProColormapAlternateschemeGet()
•ProColormapAlternateschemeSet()
Thefunctions ProColormapAlternateschemeGet() and
ProColormapAlternateschemeSet() enableyoutochangethecolor
schemeofCreoParametric toapredefined colorschemebyturningonandoffthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctions ProColormapAlternateschemeGet() and
ProColormapAlternateschemeSet() enableyoutochangethecolor
schemeofCreoParametric toapredefined colorschemebyturningonandoffthe
blendedbackground (lighttodarkgrey)foralternateschemes.Thepossible
alternatecolorschemesareasfollows:
•PRO_COLORMAP_ALT_BLACK_ON_WHITE—Displays blackentitiesshown
onawhitebackground.
•PRO_COLORMAP_ALT_WHITE_ON_BLACK—Displays whiteentitiesshown
onablackbackground.
•PRO_COLORMAP_ALT_WHITE_ON_GREEN—Displays whiteentitiesshown
onadarkgreenbackground.
•PRO_COLORMAP_OPTIONAL1—Represents thecolorschemewithadark
background.
•PRO_COLORMAP_OPTIONAL2—Represents thecolorschemewitha
mediumbackground.
•PRO_COLORMAP_CLASSIC_WF—Resets thecolorschemetothelightto
darkgreybackground (defaultuptoPro/ENGINEER Wildfire4.0).
480 Creo®Parametric TOOLKIT User’sGuide•PRO_COLORMAP_ALT_DEFAULT—Resets thecolorschemetothedefault
colorschemeoflighttodarkbluegradientbackground (fromPro/ENGINEER
Wildfire5.0onwards).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx480 Creo®Parametric TOOLKIT User’sGuide•PRO_COLORMAP_ALT_DEFAULT—Resets thecolorschemetothedefault
colorschemeoflighttodarkbluegradientbackground (fromPro/ENGINEER
Wildfire5.0onwards).
SettingLineStylesforCreoParametric TOOLKIT
Graphics
Functions Introduced:
•ProLinestyleSet()
•ProLinestyleDataGet()
•ProGraphicsModeSet()
Thefunction ProLineStyleSet() enablesyoutosetthestyleofgraphicsyou
draw.Thefunction ProLinestyleDataGet()queries thedefinitionofthe
linestyle.
Thepossiblevaluesforthelinestyleareasfollows:
•PRO_LINESTYLE_SOLID—Solid line
•PRO_LINESTYLE_DOT—Dotted line
•PRO_LINESTYLE_CENTERLINE—Alternating longandshortdashes
•PRO_LINESTYLE_PHANTOM—Alternating longdashesandtwodots
DisplayingtheColorSelectionDialogBox
FunctionIntroduced:
•ProUIColorSelectionShow()
Thefunction ProUIColorSelectionShow() displaysthedialogboxusedto
selectvaluesforthered,green,blue(RGB)colors.Theinputargumentsofthis
functionare:
•title–Specifiesthetitleoftheselectiondialogbox.Ifthisargumentisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectvaluesforthered,green,blue(RGB)colors.Theinputargumentsofthis
functionare:
•title–Specifiesthetitleoftheselectiondialogbox.Ifthisargumentis
NULL,thedefaultvalueRGBwillbeused.
•default_rgb_color –SpecifiesthedefaultRGBvaluesthatwillbe
displayedwhenthedialogboxisopened.Thecolorblackisselected,ifthe
valuespecifiedforthisargumentisinvalid.
DisplayingGraphics
Functions Introduced:
•ProGraphicsPenPosition()
•ProGraphicsLineDraw()
UserInterface:BasicGraphics 481•ProGraphicsPolylineDraw()
•ProGraphicsMultiPolylinesDraw()
•ProGraphicsAr cDraw()
•ProGraphicsCirc leDraw()
•ProGraphicsPolygonDraw()
Allthefunctionsinthissectiondrawgraphicsinthecurrentwindow(theCreo
Parametric currentwindow,unlessredefinedbyacallto
ProWindowCurrentSet()), andusethecolorandlinestylesetbycallsto
ProGraphicsColorSet() andProLinestyleSet(). Thefunctionsdraw
thegraphicsintheCreoParametric graphicscolor.Thedefaultgraphicscoloris
white.
Bydefault,thegraphicselementsarenotstoredintheCreoParametric displayxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthegraphicsintheCreoParametric graphicscolor.Thedefaultgraphicscoloris
white.
Bydefault,thegraphicselementsarenotstoredintheCreoParametric display
list,sotheydonotgetredrawnbyCreoParametric whentheuserselectsthe
Repaintcommand ortheorientation commands intheOrientation groupinthe
Viewtab.However,ifyoustoregraphicselementsineither2-Dor3-Ddisplay
lists,CreoParametric redrawsthem.SeethesectionDisplayListsonpage485for
moreinformation.
Thefunctions ProGraphicsPenPosition() and
ProGraphicsLineDraw() drawthree-dimensional polylinesinsolidmode,
andtakesolidcoordinates.
Thefunction ProGraphicsPenPosition() setsthepointatwhichyouwant
tostartdrawingtheline.Thefunction ProGraphicsLineDraw() drawsaline
tothegivenpointfromthepositiongiveninthelastcalltoeitherofthetwo
functions. YoucallProGraphicsPenPosition() forthestartofthe
polyline,andProGraphicsLineDraw() foreachvertex.
IfyouusethesefunctionsinDrawingmodetheyworkcorrectly,butusescreen
coordinates insteadofsolidcoordinates.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpolyline,andProGraphicsLineDraw() foreachvertex.
IfyouusethesefunctionsinDrawingmodetheyworkcorrectly,butusescreen
coordinates insteadofsolidcoordinates.
TheProGraphicsPolylineDraw() and
ProGraphicsMultiPolylinesDraw() functionsalsodrawpolylines,but
youneedtohavethewholepolylinedefinedinalocalarraybeforeyoucalleither
function.Ifyouaredrawingmanylines,use
ProGraphicsMultipolylinesDraw() tominimizethenumberoffunction
calls.
Thefunction ProGraphicsArcDraw() drawsanarc,inscreencoordinates.
Thefunction ProGraphicsCircleDraw() usessolidcoordinates forthe
centerofthecircleandtheradiusvalue,butdrawsthecircleparalleltotheplane
ofthewindow.Youcanpositionthecircleatachosensolidvertex,forexample,
andthecirclewillalwaysbeclearlyvisibleasacircle,regardless ofthecurrent
solidorientation.
482 Creo®Parametric TOOLKIT User’sGuideExample5:DisplayingLinesandCircles
ThesamplecodeinUgGraphLineCircleDraw.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsolidorientation.
482 Creo®Parametric TOOLKIT User’sGuideExample5:DisplayingLinesandCircles
ThesamplecodeinUgGraphLineCircleDraw.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
graphics showshowtodrawsacircleateachpointanddrawslinesbetween
thepoints.
Inthisexample,theuserselectsaseriesofpointsonapartsurface.
DisplayingText
FunctionIntroduced:
•ProGraphicsT extDisplay()
Thefunction ProGraphicsTextDisplay() placestext,specifiedasawide
string,atapositionspecifiedinscreencoordinates. Therefore, ifyouwanttoadd
texttoaparticularpositiononthesolid,youmusttransformthesolidcoordinates
intoscreencoordinates byusingtheviewmatrix.
Likethegraphicspolylines,arcs,andsoon(addedbythefunctionsdescribedin
thesectionDisplaying Graphicsonpage481),thetextitemsdrawnby
ProGraphicsTextDisplay() arenotknowntoCreoParametric, and
thereforearenotredrawnwhenyouusetheRepaintcommand. Usethenotifyor
displaylistfunctionstotellCreoParametric abouttheitems.SeethesectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGraphicsTextDisplay() arenotknowntoCreoParametric, and
thereforearenotredrawnwhenyouusetheRepaintcommand. Usethenotifyor
displaylistfunctionstotellCreoParametric abouttheitems.Seethesection
DisplayListsonpage485formoreinformation onthedisplaylistfunctions. To
addpermanent texttoadrawing(forexample,adrawingnote),seethesection
Drawingsonpage1206.
Controlling TextAttributes
Functions Introduced:
•ProTextAttributesCurr entGet()
•ProTextFontIdCurr entSet()
•ProTextHeightCurr entSet()
•ProTextRotationAngleCurr entSet()
•ProTextSlantAngleCurr entSet()
•ProTextW idthFactorCurren tSet()
Thesefunctionscontroltheattributesoftextaddedbycallsto
ProGraphicsTextDisplay(). Youcangetandsetthefollowing
information:
•Thefontidentifier
•Thetextheight,inscreencoordinates
UserInterface:BasicGraphics 483•Theratioofthewidthofeachcharacter(including thegap)asaproportion of
theheight
•Theangleofrotationofthewholetext,incounterclockwise degrees
•Theangleofslantofthetext,inclockwise degreesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheheight
•Theangleofrotationofthewholetext,incounterclockwise degrees
•Theangleofslantofthetext,inclockwise degrees
Controlling TextFonts
Functions Introduced:
•ProTextFontDefaultIdGet()
•ProTextFontNameGet()
•ProTextFontNameT oId()
•ProTextFontRetrieve()
•ProTextStyleFontGet()
•ProTextStyleFontSet()
Thefunction ProTextFontDefaultIdGet() returnstheidentifierofthe
defaultCreoParametric textfont.
ThetextfontsareidentifiedinCreoParametric bynames,andinCreoParametric
TOOLKITbyintegeridentifiers. Tomovebetweenthetwotypesoffont
identifiers, usethefunctions ProTextFontNameGet() and
ProTextFontNameToId(). Becausetheinternalfontidentifiers couldchange
betweenCreoParametric sessions,itisimportanttocall
ProTextFontNameToId() eachtimeyouwanttomodifythefontinCreo
Parametric TOOLKIT.
Thefunction ProTextFontRetrieve() loadsafontwiththespecifiedname
thatcanbeusedtodisplaythetext.
Thefunctions ProTextStyleFontGet() andProTextStyleFontSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKIT.
Thefunction ProTextFontRetrieve() loadsafontwiththespecifiedname
thatcanbeusedtodisplaythetext.
Thefunctions ProTextStyleFontGet() andProTextStyleFontSet()
getandsetthefontusedtodisplaythetext.Thefontsarethoseavailableinthe
FontselectorintheTextStyledialoginCreoParametric.
ValidatingTextStyles
Functions Introduced:
•ProTextStyleV alidate()
Thefunction ProTextStyleValidate() checkswhethertheproperties of
textstyleappliedtothespecifiedobjecttypearevalid.Theinputargumentsare:
•obj_type—Specifies thetypeofobjectonwhichthetextstylemustbeapplied.
Theenumerated datatypeProTextStyleObjectType definestheobject
type.
484 Creo®Parametric TOOLKIT User’sGuide•r_text_style—Specifies thetextstylethatshouldbeappliedonthespecified
objecttype.
Thefunctionreturnsmessagesifitfindstextstyleswhicharenotsupported inthe
specifiedobjecttype.Themessageisreturnedasarrayoflines.Usethefunction
ProWstringArrayFree() tofreememory.
DisplayLists
Functions Introduced:
•ProDisplist2dCre ate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedobjecttype.Themessageisreturnedasarrayoflines.Usethefunction
ProWstringArrayFree() tofreememory.
DisplayLists
Functions Introduced:
•ProDisplist2dCre ate()
•ProDisplist2dDisplay()
•ProDisplist2dDelete()
•ProDisplist3dCre ate()
•ProDisplist3dDisplay()
•ProDisplist3dDelete()
Togeneratethedisplayofasolidinawindow,CreoParametric maintainstwo
displaylists.Adisplaylistcontainsasetofvectorsusedtorepresenttheshapeof
thesolidintheview.
The3-Ddisplaylistcontainsasetofthree-dimensional vectorsthatrepresentan
approximation tothegeometryoftheedgesofthesolid.Itgetsrebuilteverytime
thesolidisregenerated.
The2-Ddisplaylistcontainsthetwo-dimensional projections ofthe3-Ddisplay
listontothecurrentwindow.Itisrebuiltfromthe3-Ddisplaylistwhenthe
orientation ofthesolidchanges.
Thefunctionsinthissectionenableyoutoaddyourownvectorstothedisplay
lists,soyourowngraphicswillberedisplayed automatically byCreoParametric,
untilthedisplaylistsarerebuilt.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionsinthissectionenableyoutoaddyourownvectorstothedisplay
lists,soyourowngraphicswillberedisplayed automatically byCreoParametric,
untilthedisplaylistsarerebuilt.
Forexample,ifyoujustusethefunctionsdescribedinthesectionDisplaying
Graphicsonpage481,theitemsyoudrawremainonthescreenonlyuntilthe
windowisrepainted. Furthermore, theobjectsarenotplottedwiththerestofthe
contentsofthewindowbecauseCreoParametric doesnotknowaboutthem.
If,however,youaddthesamegraphicsitemstothe2-Ddisplaylist,theywill
surviveeachrepaint(whenzoomingandpanning,forexample)andwillbe
includedinplotscreatedbyCreoParametric.
Ifyouaddgraphicstothe3-Ddisplaylist,yougetthefurtherbenefitthatthe
graphicssurviveachangetotheorientation ofthesolidandaredisplayed, even
whenyouspinthesoliddynamically .
UserInterface:BasicGraphics 485Toaddgraphicstoadisplaylist,youmustwriteafunctionthatdisplaysthe
necessaryvectorsinthreedimensions, usingthegraphicsdisplayfunctionsinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserInterface:BasicGraphics 485Toaddgraphicstoadisplaylist,youmustwriteafunctionthatdisplaysthe
necessaryvectorsinthreedimensions, usingthegraphicsdisplayfunctionsinthe
usualway.Forthe2-Ddisplaylist,youcallProDisplist2dCreate() totell
CreoParametric touseyourfunctiontocreatethedisplaylistvectors,thencall
ProDisplist2dDisplay() toaskittodisplaythenewgraphicsthose
vectorsrepresent.
Note
Ifyousavethedisplayinformation, youcanreuseitinanysession.The
application shoulddeletethedisplaylistdatawhenitisnolongerneeded.
Using3-Ddisplaylistsisexactlyanalogous tousing2-Ddisplaylists.
Notethatthefunction ProWindowRefresh() doesnotcauseeitherofthe
displayliststoberegenerated, butsimplyrepaintsthewindowusingthe2-D
displaylist.
Thefunction ProSolidDisplay() regenerates bothdisplaylists,and
thereforenotonlyrecentersthesolidintheviewandremovesanyhighlights, but
alsoremovesanygraphicsyouaddedusingthe2-Ddisplaylistfunctions.
GettingMouseInput
Functions Introduced:
•ProMousePickGet()
•ProMouseT rack()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalsoremovesanygraphicsyouaddedusingthe2-Ddisplaylistfunctions.
GettingMouseInput
Functions Introduced:
•ProMousePickGet()
•ProMouseT rack()
•ProMouseBoxInput()
Thefunctions ProMousePickGet() andProMouseTrack() areusedto
readthepositionofthemouse,inscreencoordinates. Eachfunctionoutputsthe
positionandanenumerated typedescription ofwhichmousebuttonswerepressed
whenthemousewasatthatposition.ThevaluesaredefinedinProGraphic.h,
andareasfollows:
•PRO_LEFT_BUTTON
•PRO_MIDDLE_BUTTON
•PRO_RIGHT_BUTTON
ThefunctionProMousePickGet() reportsthemousepositiononlywhenyou
pressabutton.Ithasaninputargumentthatisadescription ofthemousebuttons
youwanttowaitfor(youmusthaveatleastone).Forexample,youcansetthe
expected_button argumentto:
PRO_LEFT_BUTTON |PRO_RIGHT_BUTTON
486 Creo®Parametric TOOLKIT User’sGuideInthisexample,thefunctiondoesnotreturnuntilyoupresseithertheleftorright
button.Youcouldalsospecifythevalue PRO_ANY_BUTTON.
Thefunction ProMouseTrack()returns wheneverthemouseismoved,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbutton.Youcouldalsospecifythevalue PRO_ANY_BUTTON.
Thefunction ProMouseTrack()returns wheneverthemouseismoved,
regardless ofwhetherabuttonispressed.Therefore, thefunctioncanreturnthe
value PRO_NO_BUTTON. Itsinputargumentenablesyoutocontrolwhetherthe
reportedpositionsaresnappedtogrid.
Example6:DrawingaRubber-Band Line
ThesamplecodeinUgGraphPolyLineDrawUtil.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
graphics showshowtousethecomplement drawingmode.Theexample
followsthemousepositiondynamically .
CosmeticProperties
YoucanenhanceyourmodelusingCreoParametric TOOLKITfunctionsthat
changethesurfaceproperties, orsetdifferentlightsources.Thefollowingsections
describethesefunctionsindetail.
SurfaceProperties
Functions Introduced:
•ProSurfaceSideAppearancepr opsGet()
•ProSurfaceSideAppearancepr opsSet()
•ProTextur ePathGet()
•ProSurfaceSideT extur eplacementpro psGet()
•ProSurfaceSideT extur eplacementpro psSet()
•ProSurfaceSideT extur eprop sGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSurfaceSideAppearancepr opsSet()
•ProTextur ePathGet()
•ProSurfaceSideT extur eplacementpro psGet()
•ProSurfaceSideT extur eplacementpro psSet()
•ProSurfaceSideT extur eprop sGet()
•ProSurfaceSideT extur eprop sSet()
•ProPartT essellate()
•ProPartT essellationFr ee()
FromCreoParametric5.0.0.0 onwards,thefollowingfunctionshavebeen
deprecated:
•ProSurfaceAppearancepropsGet()
•ProSurfaceAppearancepropsSet()
•ProSurfaceTextureplacementpropsGet()
•ProSurfaceTextureplacementpropsSet()
•ProSurfaceTexturepropsGet()
UserInterface:BasicGraphics 487•ProSurfaceTexturepropsSet()
Thefunctionsdescribedinthissectionenableyoutoretrieveandsetthesurface
andtextureproperties forthefirstlevelmodelsinthemodelhierarchy.
Usethefunctions ProSurfaceSideAppearancepropsGet() and
ProSurfaceSideAppearancepropsSet() toretrieveandsetthesurface
properties onaspecifiedsideofthesurfaceforthespecifiedelementusingthe
ProSurfaceAppearanceProps datastructure.
Thedatastructureisdefinedasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxproperties onaspecifiedsideofthesurfaceforthespecifiedelementusingthe
ProSurfaceAppearanceProps datastructure.
Thedatastructureisdefinedasfollows:
typedef struct pro_surf_appearance_props
{
double ambient;
double diffuse;
double highlite;
double shininess;
double transparency;
ProVector color_rgb;
ProVector highlight_color;
double reflection;
ProPath name;
ProPath label;
ProPath description;
ProPath keywords;
}ProSurfaceAppearanceProps;
TheProSurfaceAppearanceProps datastructurecontainsthefollowing
fields:
•ambient—Specifies theindirect,scatteredlightthemodelreceivesfromits
surroundings. Thevalidrangeis0.0to1.0.
•diffuse—Specifies thereflectedlightthatcomesfromdirectional, point,or
spotlights.Thevalidrangeis0.0to1.0.
•highlite—Specifies theintensityofthelightreflectedfromahighlighted
surfacearea.Thevalidrangeis0.0to1.0.
•shininess—Specifies theproperties ofahighlighted surfacearea.Aplastic
modelwouldhavealowershininessvalue,whileametallicmodelwouldhavexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacearea.Thevalidrangeis0.0to1.0.
•shininess—Specifies theproperties ofahighlighted surfacearea.Aplastic
modelwouldhavealowershininessvalue,whileametallicmodelwouldhave
ahighervalue.Thevalidrangeis0.0.to1.0.
•transparency—Specifies thetransparency value,whichisbetween0
(completely opaque)and1.0(completely transparent).
•color_rgb[3]—Specifies thecolor,intermsofred,green,andblue.The
validrangeis0.0.to1.0.
•highlight_color—Specifies thehighlightcolor,intermsofred,green,
andblue.Thevalidrangeis0.0to1.0.
•reflection—Specifies howreflectivethesurfaceis.Thevalidrangeis0
(dull)to100(shiny).
488 Creo®Parametric TOOLKIT User’sGuide•keywords—Mandatory field.Specifieshowtosetthetextureonamodel
surface.Ifyoudonotwanttosetavalueforthisfield,setaNULLstringtoit.
Note
Tosetthedefaultsurfaceappearance properties, passtheargument
appearance_pr opertiesasNULLinthe
ProSurfaceAppearancepropsSet() function.
Theinputargumentstothefunction
ProSurfaceSideAppearancepropsGet() are:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxappearance_pr opertiesasNULLinthe
ProSurfaceAppearancepropsSet() function.
Theinputargumentstothefunction
ProSurfaceSideAppearancepropsGet() are:
•item—Specifies theProModelitem objectthatrepresents thepart,assembly
component, subassembly ,quilt,orsurface.
•surface_side—Specifies thedirectionofthesideforthesurfaceorquilt.Pass
thevalueas0tospecifythesidewhichisalongthesurfacenormal.Pass1to
specifythesideoppositetothesurfacenormal.
Incosmeticshademode,CreoParametric tessellates eachsurfacebybreakingit
intoasetofconnected triangularplanes.Thefunction
ProSurfaceTessellationGet() invokesthisalgorithmonasingle
specifiedsurfaceandprovidesthecoordinates ofthetrianglecornersandthe
normalateachvertex.Thisfunctiontessellates asinglesurfaceonly.
Youcanusethefunction ProTexturePathGet() toretrievethefullpathto
thetexture,decal,orbumpmapfile.
RefertotheTessellation onpage179sectionofCore:3DGeometry onpage168
thechapterforfunctions ProPartTessellate() and
ProPartTessellationFree().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthetexture,decal,orbumpmapfile.
RefertotheTessellation onpage179sectionofCore:3DGeometry onpage168
thechapterforfunctions ProPartTessellate() and
ProPartTessellationFree().
Youcanapplytexturestothesurfaces.Usethefunction
ProSurfaceSideTexturepropsGet() togetthetextureproperties forthe
specifiedsideofthesurface.Usethefunction
ProSurfaceSideTexturepropsSet() tosetthesurfacetextureproperties
forthespecifiedsideofthesurface.Boththesefunctionsusethe
ProSurfaceTextureProps datastructuretoretrieveandsetthesurface
textureproperties.
Thedatastructureisdefinedasfollows:
typedef struct pro_surface_texture_props
{
ProCharPath decal;
ProCharPath texture_map;
ProCharPath bump_map;
}ProSurfaceTextureProps;
TheProSurfaceTextureProps datastructurecontainsthefollowingfields:
UserInterface:BasicGraphics 489•decal—Specifies thefullpathtothetexturemapwiththealphachannel
(transparency). Otherwise, useNULL.
•texture_map—Specifies thefullpathtothetexturemap.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserInterface:BasicGraphics 489•decal—Specifies thefullpathtothetexturemapwiththealphachannel
(transparency). Otherwise, useNULL.
•texture_map—Specifies thefullpathtothetexturemap.
•bump_map—Specifies thefullpathtothebumpmap.Abumpmapenables
youtocreatebumpsonthesurfaceofthetexturemap.
Youcanmanipulate theplacement ofthesurfacetextures.Usethefunction
ProSurfaceSideTextureplacementpropsGet() togettheproperties
relatedtotheplacement ofsurfacetextureforthespecifiedsideofthesurface.
Usethefunction ProSurfaceSideTextureplacementpropsSet() to
settheplacement properties forthespecifiedsideofthesurfacetexture.The
functions ProSurfaceSideTextureplacementpropsGet() and
ProSurfaceSideTextureplacementpropsSet() usethe
ProSurfaceTexturePlacementProps datastructure.
Thedatastructureisdefinedasfollows:
typedef struct pro_surface_texture_placement_props
{
ProTextureProjectionType
projection;
ProTextureType
texture_type;
ProLineEnvelope
local_csys;
double horizontal_
offset;
double vertical_
offset;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypedef struct pro_surface_texture_placement_props
{
ProTextureProjectionType
projection;
ProTextureType
texture_type;
ProLineEnvelope
local_csys;
double horizontal_
offset;
double vertical_
offset;
double rotate;
double horizontal_
scale;
double vertical_
scale;
double bump_height;
double decal_
intensity;
ProBoolean flip_
horizontal;
ProBoolean flip_
vertical;
}ProSurfaceTexturePlacementProps;
TheProSurfaceTexturePlacementProps datastructurecontainsthe
followingfields:
•projection—Specifies theprojection type—planar ,spherical,cylindrical,
orbox.
•texture_type—Specifies thetypeoftexture.
490 Creo®Parametric TOOLKIT User’sGuide•local_csys—Specifies thedirection(forplanarprojection), orthewhole
coordinate system(whichdefinesthecenterfortheotherprojection types).
•horizontal_offset andvertical_offset—Specifies the
percentage ofhorizontal andverticalshiftofthetexturemaponthesurface.
•rotate—Specifies theangletorotatethetexturemaponthesurface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•horizontal_offset andvertical_offset—Specifies the
percentage ofhorizontal andverticalshiftofthetexturemaponthesurface.
•rotate—Specifies theangletorotatethetexturemaponthesurface.
•horizontal_scale andvertical_scale—Specifies thehorizontal
andverticalscalingofthetexturemap.
•bump_height—Specifies theheightofthebumponthesurfaceofthe
texturemap.
•decal_intensity—Specifies thealphaortransparency maskintensityon
thesurface.
•flip_horizontal andflip_vertical—Specifies thatthetexture
maponthesurfaceshouldbeflippedhorizontally orvertically.
SettingLightSources
Functions Introduced:
•ProLightSour cesGet()
•ProLightSour cesSet()
Thesefunctionsretrieveandsettheinformation associated withthespecified
window,respectively ,usingtheProLightInfo datastructure.Thedatastructureis
definedasfollows:
typedef struct pro_tk_light
{
wchar_t
name[PRO_NAME_SIZE];
ProLightType
type;
ProBoolean
status; /*active orinactive */
double
rgb[3]; /*for all types */
double
position[3]; /*for point and spot */
doublexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx{
wchar_t
name[PRO_NAME_SIZE];
ProLightType
type;
ProBoolean
status; /*active orinactive */
double
rgb[3]; /*for all types */
double
position[3]; /*for point and spot */
double
direction[3]; /*for direction and spot */
double
spread_angle; /*for spot, inradian */
ProBoolean
cast_shadows;
}ProLightInfo;
ThePro_light structurecontainsthefollowingfields:
•name—Specifies thenameofthelightsource.
UserInterface:BasicGraphics 491•type—Specifies thelighttype—ambient, direction,point,orspot.
•status—Specifies whetherthelightsourceisactiveorinactive.
•rgb—Specifies thered,green,andbluevalues,regardless ofthelighttype.
•position—Specifies thepositionofthelight,forpointandspotlightsonly.
•direction—Specifies thedirectionofthelight,fordirectionandspotlights
only.
•spread_angle—Specifies theanglethelightisspread,forspotlightsonly.
•cast_shadows—Specifies whetherthelightcastsshadows.Thisappliesto
CreoRenderStudioonly.RefertotheCreoRenderStudioHelpformore
information onCreoRenderStudio.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•cast_shadows—Specifies whetherthelightcastsshadows.Thisappliesto
CreoRenderStudioonly.RefertotheCreoRenderStudioHelpformore
information onCreoRenderStudio.
Creating3DShadedDataforRendering
Thefunctionsdescribedinthissectionenableyoutocreate3Dshadeddatathat
canbeattachedtoasceneandrenderedinCreoParametric.
Functions Introduced:
•ProDispObjectCr eate()
•ProDispObjectAttach()
•ProDispObjectDetach()
•ProDispObjectDelete()
•ProDispObjectSetT ransform()
•ProDispObjectSetSurfaceAppearancePr ops()
Thefunction ProDispObjectCreate()creates adisplayobject.Adisplay
objectcollectsuserspecifiedshadedtriangledata.Whenyourenderanobjectin
CreoParametric, renderingisdonebasedonthetriangledatausinglightsand
materials.Thedisplayobjectmustbeattachedtothescenetoberendered.The
objectisalwaysdisplayedinshadedmodeirrespective ofthedisplaymodeofthe
currentview.NoHLRoperations aredoneondisplayobjects.Theinput
argumentsare:
•object_name—Specifies thenameofthedisplayobject.Thenamemustbe
unique.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurrentview.NoHLRoperations aredoneondisplayobjects.Theinput
argumentsare:
•object_name—Specifies thenameofthedisplayobject.Thenamemustbe
unique.
•flag—Specifies abitmaskthatisusedtosetthepropertyofthedisplayobject.
Thebitmaskhasthefollowingbitflags:
○0x0—This isthedefaultvalue.Nobitflagispassed.Ifnobitisset,the
displayobjectbehaveslikeasolid.
○PRO_DISP_OBJECT_TWO_SIDED—When thisbitflagisset,the
displayobjectbehaveslikeaquilt.
492 Creo®Parametric TOOLKIT User’sGuide○PRO_DISP_OBJECT_DYNAMIC_PREVIEW—When thisbitflagisset,
thedisplayobjectisconsidered temporary whichwillbedeletedand
recreatedfrequently bytheuserapplication. Whenthisflagisset,Creo
Parametric willnotstorethedataongraphicscard.
•num_strips—Specifies thenumberoftrianglestripsthatwillcontainthe
triangledata.
•strip_size—Specifies thenumberofverticesineachtrianglestrip.Itisa
ProArray ofsizenum_strips.
•strips_array—Specifies aProArray ofProTriVertex structure.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtriangledata.
•strip_size—Specifies thenumberofverticesineachtrianglestrip.Itisa
ProArray ofsizenum_strips.
•strips_array—Specifies aProArray ofProTriVertex structure.The
structurecontainsinformation aboutthepositionandnormalsofthevertices
fortriangles.
Thefunction ProDispObjectAttach() attachesthedisplayobjecttoaCreo
Parametric scene.
Aftertheobjectisattached,itwillberenderedalongwiththeCreoParametric
graphics.Ifthesceneisregenerated, theCreoParametric TOOLKITapplication
mustreattachit.ThisAPIissupported onlyfor3Dmode,thatis,part,assembly,
andsoonanddoesnotworkin2Dmode,thatis,drawings,sketch,layout,andso
on.Theinputargumentsare:
•window—Specifies theIDofthewindowinwhichthedisplayobjectmustbe
attachedtoaCreoParametric scene.
•obj—Specifies thehandletothedisplayobject.
•key_list—Specifies aProArray whichcontainsthememberidentifiertable
ofthecomponent towhichthedisplayobjectwillbeattached.Specify NULL
ifyouwanttoattachthedisplayobjecttothetoplevelcomponent.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•key_list—Specifies aProArray whichcontainsthememberidentifiertable
ofthecomponent towhichthedisplayobjectwillbeattached.Specify NULL
ifyouwanttoattachthedisplayobjecttothetoplevelcomponent.
•new_key—Specifies theIDofthenewnodeinthescenegraphwherethe
displayobjectwillbeattached.
•transform—Specifies thepositionofthedisplayobjectrelativetoitsparentas
aProMatrix object.
Usethefunction ProDispObjectDetach() todetachadisplayobjectfrom
theCreoParametric scene.Theinputargumentsare:
•window—Specifies theIDofthewindowfromwhichthedisplayobjectwill
bedetachedfromaCreoParametric scene.
•key_list—Specifies aProArray whichcontainsthememberidentifiertable
ofthedisplayobject ProDispObject whichwillbedetachedfromthe
scene.Passasinput key_listalongwithnew_keydefinedintheAPI
ProDispObjectAttach().
Thefunction ProDispObjectDelete() deletesthespecifieddisplayobject.
Youmustdetachthedisplayobjectbeforedeletingit.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxscene.Passasinput key_listalongwithnew_keydefinedintheAPI
ProDispObjectAttach().
Thefunction ProDispObjectDelete() deletesthespecifieddisplayobject.
Youmustdetachthedisplayobjectbeforedeletingit.
UserInterface:BasicGraphics 493Thefunction ProDispObjectSetTransform() transforms adisplayobject
relativetoitsparentinthescene.SpecifythenewpositionusingtheProMatrix
object.ItreturnstheoriginalpositionofthedisplayobjectasaProMatrix
object.
Usethefunction ProDispObjectSetSurfaceAppearanceProps() to
setthedisplayproperties ofthedisplayobjectattachedtoasceneusingthe
ProSurfaceAppearanceProps datastructure.RefertothesectionSurface
Properties onpage487formoreinformation on
ProSurfaceAppearanceProps.
Example1:CreatingaDisplayObject
ThesamplecodeinTestDispObject.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_examples/pt_dispobj showshowto
createadisplayobjectandattachittoascene.Italsoshowshowtosetthedisplay
properties forthedisplayobject.
494 Creo®Parametric TOOLKIT User’sGuide21xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloadpoint>/protk_appls/pt_examples/pt_dispobj showshowto
createadisplayobjectandattachittoascene.Italsoshowshowtosetthedisplay
properties forthedisplayobject.
494 Creo®Parametric TOOLKIT User’sGuide21
UserInterface:Selection
TheSelectionObject...............................................................................................496
InteractiveSelection................................................................................................499
Highlighting.............................................................................................................503
SelectionBuffer.......................................................................................................504
ThischaptercontainsfunctionsthatenableyoutoselectobjectsinCreo
Parametric fromwithintheGraphicsWindowortheModelTreeusingthemouse
orthekeyboard.
495TheSelectionObject
LikeProModelitem, theobject ProSelection identifiesamodeliteminthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric fromwithintheGraphicsWindowortheModelTreeusingthemouse
orthekeyboard.
495TheSelectionObject
LikeProModelitem, theobject ProSelection identifiesamodeliteminthe
CreoParametric database. ProSelection, however,containsmoreinformation
thanProModelitem, andisthereforesometimes usedinsteadof
ProModelitem insituationswheretheextrainformation isneeded.Themost
importantuseofProSelection isastheoutputofthefunctionforinteractive
selection, ProSelect() (thusthenameProSelection).
ProSelection isdeclaredasanopaquepointer,andis,strictlyspeaking,a
WHandlebecause,althoughthemodelitemisareferencetoaCreoParametric
databaseitem,theotherinformation isnot.
Functions Introduced:
•ProSelectionAlloc()
•ProSelectionSet()
•ProSelectionCopy()
•ProSelectionFr ee()
•ProSelectionAsmcomppathGet()
•ProSelectionModelitemGet()
•ProSelectionUvParamGet()
•ProSelectionV iewGet()
•ProSelectionPoint3dGet()
•ProSelectionDepthGet()
•ProSelectionV erify()
•ProSelectionW indowIdGet()
•ProSelectionUvParamSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSelectionUvParamGet()
•ProSelectionV iewGet()
•ProSelectionPoint3dGet()
•ProSelectionDepthGet()
•ProSelectionV erify()
•ProSelectionW indowIdGet()
•ProSelectionUvParamSet()
•ProSelectionV iewSet()
•ProSelectionPoint3dSet()
•ProSelectionDrawingGet()
•ProSelectionDwgtblcellGet()
UnpackingaProSelection Object
Foreachitemofinformation thatProSelection cancontain,thereisaCreo
Parametric TOOLKITfunctionthatextractsthatinformation. Thefollowingtable
liststheseitems.
496 Creo®Parametric TOOLKIT User’sGuideCreoParametric TOOLKIT
FunctionCreoParametric TOOLKIT
ObjectMeaning
ProSelectionAsmcomp
pathGet()ProAsmcomppath Assembly component path
ProSelectionModelitem
Get()ProModelitem Modelitem
ProSelectionPoint3dG
et()ProPoint3d 3-Dpointonthemodelitem
ProSelectionUvParam
Set()ProUvParam uandv,ort,ofthatpoint
ProSelectionDepthGet() double Selectiondepth
ProSelectionDistance
Eval()double Distancebetweentwoselected
objects.Theselectionobjectscan
besurfaces,entities,surface-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSelectionDepthGet() double Selectiondepth
ProSelectionDistance
Eval()double Distancebetweentwoselected
objects.Theselectionobjectscan
besurfaces,entities,surface-
curves,surface-nodes, orpoints.
ProSelectionViewGet() ProView Drawingviewinwhichthe
selectionwasmade
ProSelectionWindow
IdGet()int Windowwhereaselectionisdone
ProSelectionDrawing
Get()ProDrawing Drawinginwhichtheselection
wasmade.
ProSelectionDwgtblcell
Get()severalintegers Tablesegment,row,andcolumn
ofaselecteddrawingtablecell
Theassemblycomponent pathisthepathdownfromtherootassemblytothe
modelthatownsthedatabaseitembeingreferenced. Itisrepresented bytheobject
ProAsmcomppath andisdescribedfullyintheAssembly: BasicAssembly
Accessonpage1112section.
Themodelitemdescribesthedatabaseiteminthecontextofitsowningmodel,
butdoesnotrefertoanyparentassembly.
The3-Dpointisthelocation,insolidcoordinates, ofaselectedpointonthe
modelitem,ifitisageometryobject.Thesolidcoordinates arethoseofthesolid
directlyowningthemodelitem.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThe3-Dpointisthelocation,insolidcoordinates, ofaselectedpointonthe
modelitem,ifitisageometryobject.Thesolidcoordinates arethoseofthesolid
directlyowningthemodelitem.
Ifthemodelitemisasurface, ProUvParam containstheuandvvaluesthat
correspond tothe3-Dselectionpointdescribedabove.Iftheitemisanedgeor
curve, ProUvParam containsthetvalue.
Theselectiondepthisthedistancebetweentheselectedpointandthepointfrom
whichtheselectionsearchstarted.Thisisimportantonlywhenyouareusing
ProSolidRayIntersectionCompute(), describedinthesectionRay
Tracingonpage192.
Theviewisusedtodistinguish differentviewsofasolidinadrawing.
UserInterface:Selection 497BuildingaProSelection Object
SomeCreoParametric TOOLKITfunctionrequireaProSelection objectas
aninput.Inmanycasestheassemblypath—ProAsmcomppath—and the
modelitem willbeallthatisneeded,soProSelectionAlloc() or
ProSelectionSet() canbeused.Inothercases,forexamplewhena
ProSelection needstoidentifyaspecificdrawingview,oraspecificlocationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelitem willbeallthatisneeded,soProSelectionAlloc() or
ProSelectionSet() canbeused.Inothercases,forexamplewhena
ProSelection needstoidentifyaspecificdrawingview,oraspecificlocation
onageometryitem,youmayalsoneedtocallfunctions
ProSelectionViewSet(), ProSelectionUvParamSet(), and
ProSelectionPoint3dSet().
ProSelection FunctionExamples
Examples ofCreoParametric TOOLKITfunctionsthatuseProSelection are
asfollows:
•ProSelect() usesProSelection asitsoutputtodescribeeverything
abouttheselecteditem.
•ProGeomitemDistanceEval() usesProSelection asitsinput,
insteadofProGeomitem, soitcanmeasurethedistancebetweenmodel
itemsindifferentsubassemblies.
•ProSelectionHighlight() andProSelectionUnhighlight()
useProSelection asinputstodistinguish differentinstancesofthesame
modelitemindifferentsubassemblies, andalsodifferentdrawingviewsofthe
samemodel.
•ProFeatureCreate() usuallyusesProSelection objectstoidentify
thegeometryitemsthefeatureneedstoreference.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelitemindifferentsubassemblies, andalsodifferentdrawingviewsofthe
samemodel.
•ProFeatureCreate() usuallyusesProSelection objectstoidentify
thegeometryitemsthefeatureneedstoreference.
•ProDrawingDimensionCreate() usesProSelection objectsto
identifytheentitiesthedimension willattachtoandthedrawingviewin
whichthedimension istobedisplayed.
InacasesuchasProGeomitemDistanceEval(), whichuses
ProSelection asaninput,youmightneedtobuildaProSelection object
outofitscomponent dataitems.Thefunction ProSelectionAlloc()
allocatesanewProSelection structure,andsetstheProAsmcomppath and
ProModelitem datainit.Thefunction ProSelectionSet() setsthat
information inaProSelection objectthatalreadyexists.Thefunction
ProSelectionVerify() checkstomakesurethecontentsofa
ProSelection areconsistent.
ThefunctionProSelectionCopy() copiesoneProSelection objectto
another.ProSelectionFree() freesthememoryofaProSelection
createdbyProSelectionAlloc() orasoutputbyaCreoParametric
TOOLKITfunction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionProSelectionCopy() copiesoneProSelection objectto
another.ProSelectionFree() freesthememoryofaProSelection
createdbyProSelectionAlloc() orasoutputbyaCreoParametric
TOOLKITfunction.
498 Creo®Parametric TOOLKIT User’sGuideInteractiveSelection
FunctionIntroduced:
•ProSelect()
ProSelect() istheCreoParametric TOOLKITfunctionthatforcestheuserto
makeaninteractive graphicsselectioninCreoParametric. Usingthisfunctionthe
usercanspecifyfilterswhichcontroltheitemsthatcanbeselected.
Typically,theuserhascontroloverthefilteroptionsavailablefromthefilter
menulocatedinthestatusbaratthebottomoftheCreoParametric graphics
window.AcalltoProSelect() setsapplication desiredfiltersforthenext
expectedselection.
Theuserinterfaceshownwhenprompting foraninteractive selectionwillbethe
selectiondialog,withOKorCancelbuttons.Depending ontheselectiontypes
permittedtheuserwillbeabletoselectitemsvia:
•Thegraphicswindow
•Themodeltree
•Thesearchtool
•Externalobject
•Itemsexternaltotheactivatedcomponentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpermittedtheuserwillbeabletoselectitemsvia:
•Thegraphicswindow
•Themodeltree
•Thesearchtool
•Externalobject
•Itemsexternaltotheactivatedcomponent
Noneoftheseselections orpossibleselections willprovideguidancetotheuser
aboutwhattoselectandwhy.Therefore, itisimportanttoprovidedetailed
instructions totheuserthroughthemessagewindowordialogboxthatthe
application expectstheusertomakeaselection.Usethefunction
ProMessageDisplay() toexplaintotheuserthetypeorpurposeofthe
selectionyouwantthemtomake.
Note
WhenusingthisfunctioninaUIcommand, makesurethatthecommand
priorityfortheUIcommand isappropriate forusing ProSelect().
Improperprioritysettingscancauseunpredictable results.SeealsoNormal
priorityactionsonpageintheUserInterface:Menuonpage297chapter.
ThesynopsisofProSelect() isasfollows:
ProError ProSelect (
char option[], /*(In) The selection
filter. */
int max_count, /*(In) The maximum number
of
selections allowed.
*/
UserInterface:Selection 499ProSelection *p_in_sel, /*(In) Anarray ofpointers
toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxchar option[], /*(In) The selection
filter. */
int max_count, /*(In) The maximum number
of
selections allowed.
*/
UserInterface:Selection 499ProSelection *p_in_sel, /*(In) Anarray ofpointers
to
selection structures
used
toinitialize the
array
ofselections. This
can
beNULL. */
ProSelFunctions *sel_func, /*(In) Apointer toa
structure
offilter functions.
This
can beNULL. */
ProSelectionEnv sel_env, /*(In) Use attribute PRO_
SELECT_ACTIVE_
COMPONENT_IGNORE to
also select items
external tothe
activate component. */
ProSelAppAction appl_act_data, /*(In) Use NULL. */
ProSelection **p_sel_array, /*(Out) Apointer toan
array of
pointers toselected
items.
This argument points
tostatic
memory allocated by
the
function. Itis
reallocated
onsubsequent calls
tothis
function.*/
int *p_n_sels /*(Out) The actual number of
selections made. The
function allocates
the
memory for this
function
and reuses iton
subsequent calls.*/
)
ThefirstinputargumenttoProSelect(), option,isthesetofitemtypesthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselections made. The
function allocates
the
memory for this
function
and reuses iton
subsequent calls.*/
)
ThefirstinputargumenttoProSelect(), option,isthesetofitemtypesthat
canbeselected.ThisisintheformofaCstringwhichcontainsthenamesofthe
typesseparatedbycommas(butnospaces).Thefollowingtableliststheitem
typesthatcanbeselectedbyProSelect(), thenameofthetypethatmust
appearintheoptionargument,andthevalueofProType containedinthe
ProModelitem fortheselecteditem.
500 Creo®Parametric TOOLKIT User’sGuideCreoParametric Database
ItemProSelect() Option ProType
Geometry Items
Datumpoint point PRO_POINT
Datumaxis axis PRO_AXIS
Datumplane datum PRO_SURFACE
Coordinate systemdatum csys PRO_CSYS
Coordinate SystemAxis csys_axis PRO_CSYS_AXIS_X PRO_
CSYS_AXIS_Y PRO_CSYS_
AXIS_Z
Edge(solidordatumsurface) edge PRO_EDGE
Vertex edge_end PRO_EDGE_START, orPRO_
EDGE_END
Datumcurve curve PRO_CURVE
Datumcurveend curve_end PRO_CRV_START, orPRO_
CRV_END
Composite Curve comp_crv PRO_CURVExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVertex edge_end PRO_EDGE_START, orPRO_
EDGE_END
Datumcurve curve PRO_CURVE
Datumcurveend curve_end PRO_CRV_START, orPRO_
CRV_END
Composite Curve comp_crv PRO_CURVE
Edge(solidonly) sldedge PRO_EDGE
Edge(datumsurfaceonly) qltedge PRO_EDGE
Pipesegmentend pipeseg_end PRO_PSEG_START orPRO_
PSEG_END
Surface(solidorquilt) surface PRO_SURFACE
Surface(solid) sldface PRO_SURFACE
Surface(datumsurface) qltface PRO_SURFACE
Surface(point) pntsrf PRO_SURFACE_PNT
Quilt dtmqlt PRO_QUILT
Annotations
Dimension dimension PRO_DIMENSION
Reference dimension ref_dim PRO_REF_DIMENSION
Geometric tolerance gtol PRO_GTOL
3Dsymbol symbol_3d PRO_SYMBOL_INSTANCE
Note any_note PRO_NOTE
3DNote note_3d PRO_NOTE
3Dsurfacefinish surffin_3d PRO_SURF_FIN
Annotation element annot_elem PRO_ANNOTATION_ELEM
DrawingItems
Drawingview dwg_view PRO_VIEW
Drawingtable dwg_table PRO_DRAW_TABLE
Draftentity draft_ent PRO_DRAFT_ENTITY
Detailsymbol dtl_symbol PRO_SYMBOL_INSTANCE
Detailnote any_note PRO_NOTExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDrawingItems
Drawingview dwg_view PRO_VIEW
Drawingtable dwg_table PRO_DRAW_TABLE
Draftentity draft_ent PRO_DRAFT_ENTITY
Detailsymbol dtl_symbol PRO_SYMBOL_INSTANCE
Detailnote any_note PRO_NOTE
Tablecell table_cell PRO_DRAW_TABLE
SolidsandFeatures
Feature feature PRO_FEATURE
Part part PRO_PART
UserInterface:Selection 501CreoParametric Database
ItemProSelect() Option ProType
Component Feature membfeat PRO_FEATURE
Assembly component model component PRO_PART, PRO_ASSEMBLY
Partorsubassembly prt_or_asm PRO_PART, orPRO_ASSEMBLY
Miscellaneous Items
CreoSimulateItems RefertothetableinthesectionSelectionofCreoSimulateItemson
page1828
Externalobject ext_obj PRO_EXTOBJ
Diagramfixedconnector,fixed
component, orparametric
connectordgm_obj PRO_DIAGRAM_OBJECT
Diagramwire(notacable) dgm_non_cable_wire PRO_DIAGRAM_OBJECT
SolidBody 3d_body PRO_BODY
ECADconductor ecad_cu PRO_ECAD_CONDUCTOR
Thesecondargumentspecifiesthemaximum numberofitemstheusercanselect.
Ifthereisnomaximum, setthisargumentto-1.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSolidBody 3d_body PRO_BODY
ECADconductor ecad_cu PRO_ECAD_CONDUCTOR
Thesecondargumentspecifiesthemaximum numberofitemstheusercanselect.
Ifthereisnomaximum, setthisargumentto-1.
ThethirdargumenttoProSelect() isanexpandable arrayof
ProSelection structures(createdusing ProArrayAlloc() and
ProSelectionAlloc()) usedtoinitializetheselectionlist.Formore
information refertosectionExpandable Arraysonpage59inthechapter
Fundamentals onpage22.ThisisusedinsituationslikeFeature,DefineinCreo
Parametric wheretheuserhastheoptionofremovingadefaultselectionfora
featurereference.
Thefourthargumentisanoptionalstructurethatspecifiesthree,user-definedfilter
functions. Theseenableyoutofiltertheitemsthatareselectable inacustomized
way.Forexample,youcouldarrangethatonlystraightedgesareselectable by
writingafilterthatwouldcheckthetypeoftheedge,andreturnanappropriate
status.Thisfunctionwouldthenbecalledwithin ProSelect() topreventthe
userfromselectingacurvededge.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwritingafilterthatwouldcheckthetypeoftheedge,andreturnanappropriate
status.Thisfunctionwouldthenbecalledwithin ProSelect() topreventthe
userfromselectingacurvededge.
ThefifthargumentallowstheusertopassasetofattributestoProSelect()
usingthefunction ProSelectionEnvAlloc(). Thefunction
ProSelectionEnvAlloc() returnstheProSelectionEnv handlewhich
isgivenasinputtoProSelect(). Theattributesof
ProSelectionEnvAlloc() are:
•PRO_SELECT_DONE_REQUIRED—Specifies thatuserhastoclickOKinthe
Selectdialogboxtogettheselecteditems.
•PRO_SELECT_BY_MENU_ALLOWED—Specifies thatsearchtoolisavailable
inthefunction ProSelect() whentheattributevalueissettoTrue,which
isthedefaultvalue.
502 Creo®Parametric TOOLKIT User’sGuide•PRO_SELECT_BY_BOX_ALLOWED—Specifies thatusermustdrawa
boundingboxtogettheitemsselectedwithinthebox.
Note
Theattribute PRO_SELECT_BY_BOX_ALLOWED canbeusedonlyfor
thetypesspecifiedunder“Geometry Items”intheabovetable.
•PRO_SELECT_ACTIVE_COMPONENT_IGNORE—Specifies thatusercanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Theattribute PRO_SELECT_BY_BOX_ALLOWED canbeusedonlyfor
thetypesspecifiedunder“Geometry Items”intheabovetable.
•PRO_SELECT_ACTIVE_COMPONENT_IGNORE—Specifies thatusercan
selectitemsexternaltotheactivatecomponent.
•PRO_SELECT_HIDE_SEL_DLG—Specifies thattheSelectdialogboxmust
behidden.
ThesixthargumentisnotusedinthisreleaseandshouldbesettoNULL.
Thefinaltwoargumentsaretheoutputs,thatis,anexpandable arrayof
ProSelection structures, andthenumberofitemsinthearray.Theprevious
sectionexplainshowtoanalyzethecontentsofaProSelection object.
Note
ThearrayofProSelections isallocatedandreusedonsubsequent callsto
ProSelect().
Therefore, youmustnotfreetheoutputarray.Also,ifyouwishtopreserveanyof
theselections made,youshouldcopythatselectionusing
ProSelectionCopy().
Note
•Whenusingthefunction ProSelect() fromwithinaloop,ifyouencounter
theerrorPRO_TK_PICK_ABOVE (-14),thenyoumusthandlethiserrorby
returningcontrolbacktoCreoParametric.
•Thefunction ProSelect() returns PRO_TK_NO_ERROR whenyouendthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheerrorPRO_TK_PICK_ABOVE (-14),thenyoumusthandlethiserrorby
returningcontrolbacktoCreoParametric.
•Thefunction ProSelect() returns PRO_TK_NO_ERROR whenyouendthe
command withoutmakinganyselectioninCreoParametric. Thefunction
returnstheoutputargument p_n_sels aszeroandthearray p_sel_array
asNULL.
Highlighting
Functions Introduced:
UserInterface:Selection 503•ProSelectionHighlight()
•ProSelectionDisplay()
•ProSelectionUnhighlight()
Thefunction ProSelectionHighlight() highlights anitemspecifiedbya
ProSelection objectinacolorchosenfromtheenumerated type
ProColortype. ThishighlightisthesameastheoneusedbyCreoParametric
(andProSelect()) whenselectinganitem—itjustrepaintsthewire-frame
displayinthenewcolor.ThehighlightisremovedifyouusetheViewRepaint
command orProWindowRepaint(); itisnotremovedifyouuse
ProWindowRefresh().
Thefunction ProSelectionUnhighlight() removesthehighlight.
ProSelectionHighlight() willnotchangethehighlightcolorofanitem
alreadyhighlighted. Ifyouneedtodothis,callxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProWindowRefresh().
Thefunction ProSelectionUnhighlight() removesthehighlight.
ProSelectionHighlight() willnotchangethehighlightcolorofanitem
alreadyhighlighted. Ifyouneedtodothis,call
ProSelectionUnhighlight() onthefirstitem.
Thefunction ProSelectionDisplay() doesthesamehighlightas
ProSelectionHighlight() butusesthestandardhighlightcolorusedby
CreoParametric.
Note
Forperformance reasons,callstoProSelectionHighlight() are
cachedandexecutedafterashortdelayorafterawindowrepaint.
SelectionBuffer
Introduction toSelectionBuffers
Selectionistheprocessofchoosingitemsonwhichyouwanttoperforman
operation. InCreoParametric, beforeafeaturetoolisinvoked,theusercanselect
itemstobeusedinagiventool'scollectors. Collectors arelikestoragebinsofthe
references ofselecteditems.Thelocationwherepreselected itemsarestoredis
calledtheselectionbuffer.
Depending onthesituation,differentselectionbuffersmaybeactiveatanyone
time.InPartandAssembly mode,CreoParametric offersthedefaultselectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcalledtheselectionbuffer.
Depending onthesituation,differentselectionbuffersmaybeactiveatanyone
time.InPartandAssembly mode,CreoParametric offersthedefaultselection
buffer,theEditselectionbuffer,andothermorespecialized buffers.OtherCreo
Parametric modesofferdifferentselectionbuffers.
InthedefaultPartandAssembly buffertherearetwolevelsatwhichselectionis
done:
•FirstLevelSelection
504 Creo®Parametric TOOLKIT User’sGuideProvidesaccesstohigher-levelobjectssuchasfeaturesorcomponents. Youcan
makeasecondlevelselectiononlyafteryouselectthehigher-levelobject.
•SecondLevelSelection
Providesaccesstogeometric objectssuchasedgesandfaces.
Note
First-level andsecond-level objectsareusuallyincompatible intheselection
buffer.
CreoParametric TOOLKITallowsaccesstothecontentsofthecurrentlyactive
selectionbuffer.Theavailablefunctionsallowyourapplication to:
•Getthecontentsoftheactiveselectionbuffer.
•Removethecontentsoftheactiveselectionbuffer.
•Addtothecontentsoftheactiveselectionbuffer.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectionbuffer.Theavailablefunctionsallowyourapplication to:
•Getthecontentsoftheactiveselectionbuffer.
•Removethecontentsoftheactiveselectionbuffer.
•Addtothecontentsoftheactiveselectionbuffer.
ReadingtheContentsoftheSelectionBuffer
Functions Introduced:
•ProSelbufferSelectionsGet()
•ProSelectionCollectionGet()
Usethefunction ProSelbufferSelectionsGet() toaccessthecontentsof
thecurrentselectionbuffer.Thefunctionreturnsindependent copiesofthe
selections intheselectionbuffer(ifthebufferiscleared,thisarrayisstillvalid).
Ifthereisnoactiveselectionbufferthisfunctionreturnsanerror.
UsethestandardCreoParametric TOOLKITfunctionstoparsethecontentsofthe
ProSelection array.
However,theselectionbufferstoreschainandsurfacecollections usingaspecial
mechanism. Thefunction ProSelectionCollectionGet() canbeusedto
extracttheProCollection objectfromaProSelection.
UserInterface:Selection 505Note
Asperthemannerofstorageofthecollection intheselectionbuffer,oncethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxextracttheProCollection objectfromaProSelection.
UserInterface:Selection 505Note
Asperthemannerofstorageofthecollection intheselectionbuffer,oncethe
collection hasbeenclearedfromthebuffertheProSelection referringto
thecollection isnolongervalid.Therefore itisrecommended toextractthe
ProCollection objectfromtheProSelection beforethereisa
possibility thatitmaybeclearedfromtheselectionbuffer.
RemovingtheItemsfromtheSelectionBuffer
Functions Introduced:
•ProSelbufferClear()
•ProSelbufferSelectionRemove()
Usethefunction ProSelbufferClear() toclearthecurrentlyactive
selectionbufferofallcontents.Afterthebufferiscleared,allcontentsarelost.
Usethefunction ProSelbufferSelectionRemove() toremoveaspecific
selectionfromtheselectionbuffer.Theinputargumentistheindexoftheitem
(theindexwheretheitemwasfoundinthecallto
ProSelbufferSelectionsGet()).
Note
Becauseofthespecialized natureoftheEditbufferinCreoParametric,
modification ofthecontentsoftheEditbufferisnotsupported.
AddingItemstotheSelectionBufferxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSelbufferSelectionsGet()).
Note
Becauseofthespecialized natureoftheEditbufferinCreoParametric,
modification ofthecontentsoftheEditbufferisnotsupported.
AddingItemstotheSelectionBuffer
Functions Introduced:
•ProSelbufferSelectionAdd()
•ProSelbufferCollectionAdd()
Usethefunction ProSelbufferSelectionAdd() toaddanitemtothe
activeselectionbuffer.
506 Creo®Parametric TOOLKIT User’sGuideNote
Theselecteditemmustrefertoanitemthatisinthecurrentmodelsuchasits
owner,component pathordrawingview.
Thisfunctionmayfailduetoanyofthefollowingreasons:
•Thereisnocurrentselectionbufferactive.
•Theselectiondoesnotrefertothecurrentmodel.
•Theitemisnotcurrentlydisplayedandsocannotbeaddedtothebuffer.
•Theselectioncannotbeaddedtothebufferincombination withoneormore
objectsthatarealreadyinthebuffer.Forexample:geometryandfeatures
cannotbeselectedinthedefaultbufferatthesametime.
Usethefunction ProSelbufferCollectionAdd() toaddachainorsurface
collection totheactiveselectionbuffer.Ithassimilarrestrictions asxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcannotbeselectedinthedefaultbufferatthesametime.
Usethefunction ProSelbufferCollectionAdd() toaddachainorsurface
collection totheactiveselectionbuffer.Ithassimilarrestrictions as
ProSelbufferSelectionAdd().
Note
becauseofthespecialized natureoftheEditbufferinCreoParametric,
modification ofthecontentsoftheEditbufferisnotsupported.
RefertothesamplecodeExample3:Assigning CreoParametric command to
popupmenusonpage316.Thisexampledemonstrates theuseoftheselection
buffertodetermine thecontextforapopupmenubutton.
UserInterface:Selection 50722
UserInterface:CurveandSurface
Collection
Introduction toCurveandSurfaceCollection.............................................................509
InteractiveCollection...............................................................................................510
AccessingCollectionobjectfromSelectionBuffer......................................................513xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingCollectionobjectfromSelectionBuffer......................................................513
AddingaCollectionObjecttotheSelectionBuffer......................................................514
Programmatic AccesstoCollections.........................................................................514
AccessofCollectionObjectfromFeatureElementTrees............................................524
Programmatic AccesstoLegacyCollections.............................................................525
Example1:InteractiveCurveCollectionusingCreoParametricTOOLKIT...................526
Example2:InteractiveSurfaceCollectionusingCreoParametricTOOLKIT.................526
ThischapterdescribestheCreoParametric TOOLKITfunctionstoaccessthe
detailsofcurveandsurfacecollections forqueryandmodification. Curveand
surfacecollections arerequiredinputstoavarietyofCreoParametric toolssuch
asRound,Chamfer,andDraft.
508 Creo®Parametric TOOLKIT User’sGuideIntroduction toCurveandSurface
Collectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacecollections arerequiredinputstoavarietyofCreoParametric toolssuch
asRound,Chamfer,andDraft.
508 Creo®Parametric TOOLKIT User’sGuideIntroduction toCurveandSurface
Collection
Acurvecollection orchainisagroupofseparateedgesorcurvesthatarerelated,
forexample,byacommonvertex,ortangency.Onceselected,theseseparate
entitiesareidentifiedasachainsotheycanbemodifiedasoneunit.
Thedifferentchaintypesareasfollows:
•One-by-one—a chainofedges,curvesorcomposite curves,eachadjacentpair
ofwhichhasacoincident endpoint.Someapplications mayplaceother
conditions ontheresultingchain.
•Tangent—a chaindefinedbytheselecteditemandtheextenttowhich
adjacententitiesaretangent.
•Curve—an entirecomposite curveorsomeportionofitthatisdefinedbytwo
component curvesofthecurve.
•Boundary—an entireloopofone-sidededgesthatboundaquiltorsome
portionthereofdefinedbytwoedgesoftheboundaryloop.
•SurfChain—an entireloopofedgesthatboundaface(solidorsurface)or
someportionofitthatisdefinedbytwoedgesoftheloop.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxportionthereofdefinedbytwoedgesoftheboundaryloop.
•SurfChain—an entireloopofedgesthatboundaface(solidorsurface)or
someportionofitthatisdefinedbytwoedgesoftheloop.
•IntentChain—an intentchainentity,usuallycreatedastheresultoftwo
intersecting features.
•From/To—achainthatbeginsatastart-point, followsanedgeline,andendsat
theend-point.
Surfacesetsareoneormoresetsofsurfaceseitherforusewithinatool,orbefore
enteringatool.
Thedefinitionofasurfacesetmaynotbeindependent inallrespectsfromthatof
anyother.Inotherwords,theabilitytoconstructsometypesofsurfacesetsmay
dependonthepresenceoforonthecontentofothers.Onthisaccount,wehave
differentsurfacesetsasfollows:
•One-by-One SurfaceSet—Represents asingleorasetofsingleselected
surfaces,whichbelongtosolidorsurfacegeometry.
•IntentSurfaceSet—Represents asingleorsetofintentsurfaces,whichare
usedfortheconstruction ofthegeometryoffeatures.Thisinstruction
facilitatesthereuseofthefeatureconstruction surfacegeometryas"intent"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•IntentSurfaceSet—Represents asingleorsetofintentsurfaces,whichare
usedfortheconstruction ofthegeometryoffeatures.Thisinstruction
facilitatesthereuseofthefeatureconstruction surfacegeometryas"intent"
reference. Thisisalsoknownas"logicalobjectsurfaceset".
•AllSolidorQuiltSurfaceSet—Represents allthesolidorquiltsurfacesinthe
model.
•LoopSurfaceSet—Represents allthesurfacesintheloopinrelationwiththe
selectedsurfaceandtheedge.Thisisalsoknownas"neighboring surfaceset".
UserInterface:CurveandSurfaceCollection 509•SeedandBoundary SurfaceSet—Represents allthesurfacesbetweentheseed
surfaceandtheboundarysurface,excluding theboundarysurfaceitself.
Surfacesetcollection canbeidentifiedasagatheringaparametric setofsurfaces
inthecontextofatoolthatspecifically requestssurfacesetsandisnearlyidentical
toselectionofasurfaceset.
Chaincollection canbeidentifiedasagatheringachaininthecontextofatool
thatspecifically requestschainobjectsandisnearlyidenticaltochainselection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoselectionofasurfaceset.
Chaincollection canbeidentifiedasagatheringachaininthecontextofatool
thatspecifically requestschainobjectsandisnearlyidenticaltochainselection.
Collection isrelatedtoSelectionasfollows:
Selectionisthedefaultmethodofinteraction withCreoParametric system.
Selectionisperformed withoutthecontextofanytool.Inotherwords,thesystem
doesnotknowwhattodowithselecteditemsuntiltheusertellsthesystemwhat
todo.Collection isessentially Selectionwithinthecontextofatool.Itemsare
gatheredforaspecificuseorpurposeasdefinedbythetool,whichformsthe
Collection. Itispossibletoconvertthecollections intothesetsofselections using
thecollection APIs.
TheProCollection object
AProCollection objectisanopaquepointertoastructureinwhichasurface
orcurvecollection isstored.Itrepresents achainorsurfacesetandextractsthe
detailsfromanappropriate structurefromCreoParametric.
InteractiveCollection
Functions Introduced:
•ProCurvesCollect()
•ProSurfacesCollect()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdetailsfromanappropriate structurefromCreoParametric.
InteractiveCollection
Functions Introduced:
•ProCurvesCollect()
•ProSurfacesCollect()
Usethefunction ProCurvesCollect() tointeractively createacollection of
curvesbyinvokingachaincollection userinterface.
510 Creo®Parametric TOOLKIT User’sGuideChaincollectionUserInterface
Usethefunction ProSurfacesCollect() tointeractively createacollection
ofsurfacesbyinvokingasurfacesetsdialog.
UserInterface:CurveandSurfaceCollection 511SurfaceSetsdialogbox
Forthefunctions ProCurvesCollect() andProSurfacesCollect()
theinputargumentsareasfollows:
•types—Specifies anarraydefiningthepermittedinstruction types.The
followinginstruction typesaresupported:
○PRO_CHAINCOLLUI_ONE_BY_ONE—for creating"OnebyOne"chain.
○PRO_CHAINCOLLUI_TAN_CHAIN—for creating"Tangent"chain.
○PRO_CHAINCOLLUI_CURVE_CHAIN—for creating"Curve"chain.
○PRO_CHAINCOLLUI_BNDRY_CHAIN—for creating"Boundary Loop"
chain.
○PRO_CHAINCOLLUI_FROM_TO—for creating"From-To"chain.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_CHAINCOLLUI_CURVE_CHAIN—for creating"Curve"chain.
○PRO_CHAINCOLLUI_BNDRY_CHAIN—for creating"Boundary Loop"
chain.
○PRO_CHAINCOLLUI_FROM_TO—for creating"From-To"chain.
512 Creo®Parametric TOOLKIT User’sGuide○PRO_CHAINCOLLUI_ALLOW_LENGTH_ADJUSTMENT—for allowing
lengthadjustment incurves.
○PRO_CHAINCOLLUI_ALLOW_ALL—for allowingallthesupported
instruction types.
○PRO_CHAINCOLLUI_ALLOW_EXCLUDED—for excluding chain.
○PRO_CHAINCOLLUI_ALLOW_APPENDED—for appending chain.
•n_types—Specifies thesizeofthetypesarray.
•filter_func—Specifies thefilterfunction.Thefilterfunctioniscalledbefore
eachselectionisaccepted.Ifyourapplication wishestorejectacertain
selection,itcanreturnanerrorstatusfromthisfilter.YoumaypassNULLto
skipthefilter.
•app_data—Specifies theapplication datathatwillbepassedtofilter_func.
YoumaypassNULLwhenthisisnotrequired.
•collection—Specifies thecollection objectwheretheresultswillbestored.
Thisshouldbepreallocated using ProCollectionAlloc() (forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoumaypassNULLwhenthisisnotrequired.
•collection—Specifies thecollection objectwheretheresultswillbestored.
Thisshouldbepreallocated using ProCollectionAlloc() (for
ProCurvesCollect()) andProSrfcollectionAlloc() (for
ProSurfacesCollect()) respectively .Thecollection properties and
instructions willbestoredinthishandleafterthecalltothefunctions
ProCurvesCollect() andProSurfacesCollect(). Usethe
functionsforprogrammatic accesstocurveandsurfacecollections andto
extracttherequiredinformation.
Theoutputargumentsareasfollows:
•sel_list—Specifies apointertoanarrayofProSelection objects
describing thecurrentresultingcurvesandedgesorsurfacesresultingfromthe
collection. YoumaypassNULLifyouarenotcurrentlyinterestedinthe
resultsofthecollection.
•n_sel—Specifies thenumberofentriesinsel_list.
AccessingCollectionobjectfrom
SelectionBuffer
FunctionIntroduced:
•ProSelectionCollectionGet()
Theselectionbufferstoreschainandsurfacecollections usingaspecialxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingCollectionobjectfrom
SelectionBuffer
FunctionIntroduced:
•ProSelectionCollectionGet()
Theselectionbufferstoreschainandsurfacecollections usingaspecial
mechanism. Thefunction ProSelectionCollectionGet() canbeusedto
extracttheProCollection objectfromaProSelection. Thefunction
ProSelectionCollectionGet() mayfailduetothefollowingconditions:
UserInterface:CurveandSurfaceCollection 513•PRO_TK_INVALID_TYPE—The selectionobjectdoesnotcontaina
collection.
•PRO_TK_INVALID_PTR—The selectionobjectcontainsachain,butthis
chainreferenceisnolongervalid.Chainreferences containedinProSelections
areonlyvalidforaslongasthechainisselectedintheselectionbuffer.
Note
Itisrecommended toextracttheProCollection objectfromthe
ProSelection beforeitcanbeclearedfromtheselectionbuffer.
AddingaCollectionObjecttothe
SelectionBuffer
FunctionIntroduced:
•ProSelbufferCollectionAdd()
Usethefunction ProSelbufferCollectionAdd() toaddachainorsurface
collection totheactiveselectionbuffer.ThefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSelectionBuffer
FunctionIntroduced:
•ProSelbufferCollectionAdd()
Usethefunction ProSelbufferCollectionAdd() toaddachainorsurface
collection totheactiveselectionbuffer.Thefunction
ProSelbufferCollectionAdd() mayfailduetothefollowingconditions:
•PRO_TK_INVALID_ITEM—The collection doesnotcorrectlyreferencethe
currentmodel.
•PRO_TK_NOT_DISPLAYED—The collection containsoneormoreitemsthat
arenotcurrentlydisplayed(forexample,duetoinactivegeometry) andso
cannotbeaddedtothebuffer.
•PRO_TK_BAD_CONTEXT—The selectioncannotbeaddedtothebufferin
combination withoneormoreobjectsthatarealreadyinthebuffer(for
examplegeometryandfeaturesselectedatthesametime).
Forfurtherinformation onrelatedfunctions, refertothesectionSelectionBuffer
onpage504ofchapterUserInterface:Selectiononpage495.
Programmatic AccesstoCollections
AProCollection objectmaybereturnedfromsomeindeterminate contexts
orfunctions, howeveritcanonlybeoneofthefollowingtypes:
•PRO_COLLECTION_LEGACY—legacy curvecollection type(generated byxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAProCollection objectmaybereturnedfromsomeindeterminate contexts
orfunctions, howeveritcanonlybeoneofthefollowingtypes:
•PRO_COLLECTION_LEGACY—legacy curvecollection type(generated by
ProCurvesCollect() orasuperseded functionlike
ProCollectionAlloc().
514 Creo®Parametric TOOLKIT User’sGuide•PRO_COLLECTION_SRFCOLL—surface collection type.
•PRO_COLLECTION_CRVCOLL—curve collection type.
FunctionIntroduced:
•ProCollectionT ypeGet()
Usethefunction ProCollectionTypeGet()ProCollectionType
ContentsofCurveCollection
Functions Introduced:
•ProCrvcollectionInstructionsGet()
•ProCrvcollinstrT ypeGet()
•ProCrvcollinstrAttributeIsSet()
•ProCrvcollinstrRefer encesGet()
•ProCrvcollinstrV alueGet()
•ProCrvcollinstrFr ee()
•ProCrvcollinstrArrayFr ee()
Usethefunction ProCrvcollectionInstructionsGet() togetthe
instructions fromthecurvecollection.
Usethefunction ProCrvcollinstrTypeGet() togetthecurvecollection
instruction type.
Curvecollection instructions canbeofthefollowingtypes:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinstructions fromthecurvecollection.
Usethefunction ProCrvcollinstrTypeGet() togetthecurvecollection
instruction type.
Curvecollection instructions canbeofthefollowingtypes:
•PRO_CURVCOLL_EMPTY_INSTR—to beusedwhenyoudonotwanttopass
anyotherinstruction.
•PRO_CURVCOLL_ADD_ONE_INSTR—for creating"OnebyOne"chain.
•PRO_CURVCOLL_TAN_INSTR—for creating"Tangent"chain.
•PRO_CURVCOLL_CURVE_INSTR—for creating"Curve"chain.
•PRO_CURVCOLL_SURF_INSTR—for creating"SurfaceLoop"chain.
•PRO_CURVCOLL_BNDRY_INSTR—for creating"Boundary Loop"chain.
•PRO_CURVCOLL_LOG_OBJ_INSTR—for creating"LogicalObject"chain.
•PRO_CURVCOLL_PART_INSTR—for creatingchainonallpossible
references, ortochoosefromconvexorconcaveonly.
•PRO_CURVCOLL_FEATURE_INSTR—for creatingchainfromfeature
curves.
•PRO_CURVCOLL_FROM_TO_INSTR—for creating"From-To"chain.
UserInterface:CurveandSurfaceCollection 515•PRO_CURVCOLL_EXCLUDE_ONE_INSTR—for excluding theentityfrom
thechain.
•PRO_CURVCOLL_TRIM_INSTR—to trimchain.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUserInterface:CurveandSurfaceCollection 515•PRO_CURVCOLL_EXCLUDE_ONE_INSTR—for excluding theentityfrom
thechain.
•PRO_CURVCOLL_TRIM_INSTR—to trimchain.
•PRO_CURVCOLL_EXTEND_INSTR—to extendchain.
•PRO_CURVCOLL_START_PNT_INSTR—to setthechainstartpoint.
•PRO_CURVCOLL_ADD_TANGENT_INSTR—to addalledgestangenttothe
endsofthechain.
•PRO_CURVCOLL_ADD_POINT_INSTR—to addselectedpointorpointsto
thecollection.
•PRO_CURVCOLL_OPEN_CLOSE_LOOP_INSTR—to addaclosedchainthat
isconsidered asopen.
•PRO_CURVCOLL_QUERY_INSTR—for creating“Query”chain.
•PRO_CURVCOLL_CNTR_INSTR—to addcontourstothecollection.
•PRO_CURVCOLL_RESERVED_INSTR—to determine thenumberof
instructions definedinthecurveinstruction.
Usethefunction ProCrvcollinstrAttributeIsSet() tocheckwhether
aspecialattributeissetforthecurvecollection instruction.
Thecurvecollection instruction attributescanbeofthefollowingtypes:
•PRO_CURVCOLL_NO_ATTR—applicable whentherearenoattributes
present.
•PRO_CURVCOLL_ALL—applicable foralledges.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThecurvecollection instruction attributescanbeofthefollowingtypes:
•PRO_CURVCOLL_NO_ATTR—applicable whentherearenoattributes
present.
•PRO_CURVCOLL_ALL—applicable foralledges.
•PRO_CURVCOLL_CONVEX—applicable forconvexedgesonly.
•PRO_CURVCOLL_CONCAVE—applicable forconcaveedgesonly.
Usethefunction ProCrvcollinstrReferencesGet() togetthe
references containedinacurvecollection instruction.
Usethefunction ProCrvcollinstrValueGet() togetthevalueofacurve
collection instruction. Thisisvalidforinstructions ofPRO_CURVCOLL_TRIM_
INSTRandPRO_CURVCOLL_EXTEND_INSTR type.
Usethefunction ProCrvcollinstrFree() toreleaseacurvecollection
instruction.
Usethefunction ProCrvcollinstrArrayFree() toreleasetheProArray
ofcurvecollection instructions.
CreationandModification ofCurveCollections
Functions Introduced:
•ProCrvcollectionAlloc()
516 Creo®Parametric TOOLKIT User’sGuide•ProCrvcollectionCopy()
•ProCrvcollectionInstructionAdd()
•ProCrvcollectionInstructionRemove()
•ProCrvcollinstrAlloc()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProCrvcollectionAlloc()
516 Creo®Parametric TOOLKIT User’sGuide•ProCrvcollectionCopy()
•ProCrvcollectionInstructionAdd()
•ProCrvcollectionInstructionRemove()
•ProCrvcollinstrAlloc()
•ProCrvcollinstrAttributeSet()
•ProCrvcollinstrAttributeUnset()
•ProCrvcollinstrRefer enceAdd()
•ProCrvcollinstrRefer enceRemove()
•ProCrvcollinstrV alueSet()
•ProCrvcollectionRegenerate()
Usethefunction ProCrvcollectionAlloc() toallocateacurvecollection.
Usethefunction ProCrvcollectionCopy() tocopyacurvecollection
whichisanewlyallocatedcollection objectinternallyandcanbefreedfrom
memoryusingthefunction ProCollectionFree().
Note
ProCrvcollectionCopy() functionshouldbeusedtoconvertthe
collection objectreturnedbyProCurvesCollect() toaPRO_
COLLECTION_CRVCOLL typeofcollection sothatitcanbeusedbythe
curvecollection accessfunctions.
Usethefunction ProCrvcollectionInstructionAdd() toaddan
instruction toacurvecollection.
Usethefunction ProCrvcollectionInstructionRemove() toremovexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurvecollection accessfunctions.
Usethefunction ProCrvcollectionInstructionAdd() toaddan
instruction toacurvecollection.
Usethefunction ProCrvcollectionInstructionRemove() toremove
aninstruction fromacurvecollection.
Usethefunction ProCrvcollinstrAlloc()to allocateacurvecollection
instruction.
Usethefunction CrvcollinstrAttributeSet() toaddanattributetothe
curvecollection instruction.
Usethefunction ProCrvcollinstrAttributeUnset() toremovean
attributeofacurvecollection instruction.
Usethefunction ProCrvcollinstrReferenceAdd() toaddareferenceto
curvecollection instruction references.
Usethefunction ProCrvcollinstrReferenceRemove() toremovea
referencetocurvecollection instruction.
UserInterface:CurveandSurfaceCollection 517Usethefunction ProCrvcollinstrValueSet() tosetvalueofthecurve
collection instruction.
Usethefunction ProCrvcollectionRegenerate() togenerateanarrayof
objectsbasedontherulesandinformation inthecollection.
ContentsofSurfaceCollection
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcollection instruction.
Usethefunction ProCrvcollectionRegenerate() togenerateanarrayof
objectsbasedontherulesandinformation inthecollection.
ContentsofSurfaceCollection
Functions Introduced:
•ProSrfcollectionInstructionsGet()
•ProSrfcollinstrT ypeGet()
•ProSrfcollinstrIncludeGet()
•ProSrfCollinstrInfoGet()
•ProSrfcollinstrRefere ncesGet()
•ProSrfcollinstrArrayFr ee()
•ProSrfcollinstrFre e()
•ProSrfcollr efTypeGet()
•ProSrfcollr efItemGet()
•ProSrfcollr efArrayFre e()
•ProSrfcollr efFree()
Usethefunction ProSrfcollectionInstructionsGet() togetanarray
ofinstructions assignedtothesurfacecollection.
Usethefunction ProSrfcollinstrTypeGet() togetthetypeofsurface
collection instruction.
Surfacecollection instructions canbeofthefollowingtypes:
•PRO_SURFCOLL_SINGLE_SURF—Instruction specifying asetofsingle
surfaces.
•PRO_SURFCOLL_SEED_N_BND—Instruction specifying acombination of
SeedandBoundary typeofsurfaces.
•PRO_SURFCOLL_SEED_N_BND_INC_BND—Instruction specifying axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfaces.
•PRO_SURFCOLL_SEED_N_BND—Instruction specifying acombination of
SeedandBoundary typeofsurfaces.
•PRO_SURFCOLL_SEED_N_BND_INC_BND—Instruction specifying a
combination ofSeedandBoundary typeofsurfacesandalsoincludestheseed
surfaces.
•PRO_SURFCOLL_QUILT_SRFS—Instruction specifying quilttypeof
surfaces.
•PRO_SURFCOLL_ALL_SOLID_SRFS—Instruction specifying allsolid
surfacesinthemodel.
518 Creo®Parametric TOOLKIT User’sGuide•PRO_SURFCOLL_NEIGHBOR—Instruction specifying neighbortypeof
surfaces(boundary loop).
•PRO_SURFCOLL_NEIGHBOR_INC—Instruction specifying neighbortypeof
surfaces(boundary loop)andalsoincludestheseedsurfaces.
•PRO_SURFCOLL_LOGOBJ_SRFS—Instruction specifying intentsurfaces.
Intentsurfacesarealsoknownas"logicalobjects".
•PRO_SURFCOLL_GEOM_RULE—— Instruction specifying collection of
surfacesusinggeometryrules.
•PRO_SURFCOLL_SHAPE_BASED—Instruction specifying collection of
shapebasedsurfaces.
•PRO_SURFCOLL_TANG_SRF—Instruction specifying collection oftangent
surfaces.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacesusinggeometryrules.
•PRO_SURFCOLL_SHAPE_BASED—Instruction specifying collection of
shapebasedsurfaces.
•PRO_SURFCOLL_TANG_SRF—Instruction specifying collection oftangent
surfaces.
ThefollowingflagsareusedasaninputtoProSurfacesCollect anddrive
itsbehavioroftheinteractive collection.
•PRO_SURFCOLL_DISALLOW_QLT—Do notallowselections fromquilts.
•PRO_SURFCOLL_DISALLOW_SLD—Do notallowselections fromsolid
geometry.
•PRO_SURFCOLL_DONT_MIX—Allow selections fromonlysolidoronly
quiltbutnomixing.
•PRO_SURFCOLL_SAME_SRF_LST—Allow selections fromsamesolidor
samequilt.
•PRO_SURFCOLL_USE_BACKUP—Prompts CreoParametric toregenerate
usingbackups.
•PRO_SURFCOLL_DONT_BACKUP—Do notbackupcopyofreferences.
•PRO_SURFCOLL_DISALLOW_LOBJ—Do notallowselections fromintent
surfacesorlogicalobjects.
•PRO_SURFCOLL_ALLOW_DTM_PLN—Allows datumplaneselection.Itis
notsupported inPro/ENGINEER Wildfire2.0.
Usethefunction ProSrfcollinstrIncludeGet() tocheckwhetherthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacesorlogicalobjects.
•PRO_SURFCOLL_ALLOW_DTM_PLN—Allows datumplaneselection.Itis
notsupported inPro/ENGINEER Wildfire2.0.
Usethefunction ProSrfcollinstrIncludeGet() tocheckwhetherthe
include flagofthesurfacecollection instruction isset.Iftheinclude flagis
PRO_B_TRUE, thesurfacesgeneratedbythisinstruction addsurfacestothe
overallset.Iftheinclude flagisPRO_B_FALSE, thesurfacesgeneratedby
thisinstruction areremovedfromintheoverallset.
Usethefunction ProSrfCollinstrInfoGet() togettheinformation about
thebitflagsfromthesurfacecollection instruction. Formoreinformation onbit
flags,seethefunction ProSrfCollinstrInfoSet() inthesectionCreation
andModification ofSurfaceCollections onpage521.
UserInterface:CurveandSurfaceCollection 519Usethefunction ProSrfcollinstrReferencesGet() togetthe
references containedinasurfacecollection instruction.
Usethefunction ProSrfcollinstrArrayFree() tofreeaProArray of
surfacecollection referencehandles.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferences containedinasurfacecollection instruction.
Usethefunction ProSrfcollinstrArrayFree() tofreeaProArray of
surfacecollection referencehandles.
Usethefunction ProSrfcollinstrFree() toreleasethesurfacecollection
instructions.
Usethefunction ProSrfcollrefTypeGet() togetthetypeofreference
containedinthesurfacecollection reference.
Surfacecollection references canbeofthefollowingtypes:
•PRO_SURFCOLL_REF_SINGLE—Specifying thecollection reference
belonging tothe"singlesurfaceset"typeofinstruction. Thistypeofreference
canbelongtosinglesurfacetypeofinstruction.
•PRO_SURFCOLL_REF_SINGLE_EDGE—Specifying thecollection
referencebelonging tothean"singlesurfaceset"edgetypeofinstruction.
•PRO_SURFCOLL_REF_SEED—Specifying thecollection referencetobethe
seedsurface.Thistypeofreferencecanbelongtoseedandboundarytypeof
instruction.
•PRO_SURFCOLL_REF_SEED_EDGE—Specifying thecollection reference
ofseededgetype.Thistypeofreferencecanbelongtoseedandboundary
typeofinstruction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinstruction.
•PRO_SURFCOLL_REF_SEED_EDGE—Specifying thecollection reference
ofseededgetype.Thistypeofreferencecanbelongtoseedandboundary
typeofinstruction.
•PRO_SURFCOLL_REF_BND—Specifying thecollection referencetobea
boundarysurface.Thistypeofreferencecanbelongtoseedandboundarytype
ofinstruction.
Asingleseedandboundarytypeofinstruction willhaveatleastoneofeach
seedandboundarytypeofreference.
•PRO_SURFCOLL_REF_NEIGHBOR—Specifying thecollection referenceto
beofneighbortype.Thistypeofreferencebelongsneighbortypeof
instruction.
•PRO_SURFCOLL_REF_NEIGHBOR_EDGE—Specifying thecollection
referenceofneighboredgetype.Thistypeofreferencebelongstoneighbor
typeofinstruction.
Aneighbortypeofinstruction willhaveoneneighborandoneneighboredge
typeofreference.
•PRO_SURFCOLL_REF_GENERIC—Specifying thecollection referencetobe
ofgenerictype.Thistypeofreferencecanbelongtointentsurfaces,quiltand
all-solidtypeofinstructions.
Usethefunction ProSrfcollrefArrayFree() tofreeaProArray ofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofgenerictype.Thistypeofreferencecanbelongtointentsurfaces,quiltand
all-solidtypeofinstructions.
Usethefunction ProSrfcollrefArrayFree() tofreeaProArray of
surfacecollection referencehandles.
520 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProSrfcollrefFree() tofreeasurfacecollection reference
handle.
Usethefunction ProSrfcollrefItemGet() togetthegeometryitem
containedinthesurfacecollection reference.
CreationandModification ofSurfaceCollections
Functions Introduced:
•ProSrfcollectionAlloc()
•ProSrfcollectionCopy()
•ProSrfcollectionInstructionAdd()
•ProSrfcollectionInstructionRemove()
•ProSrfcollinstrAlloc()
•ProSrfcollinstrIncludeSet()
•ProSrfCollinstrInfoSet()
•ProSrfcollinstrRefere nceAdd()
•ProSrfcollinstrRefere nceRemove()
•ProSrfcollr efAlloc()
•ProSrfcollectionRegenerate()
Usethefunction ProSrfcollectionAlloc() toallocateasurface
collection.
Usethefunction ProSrfcollectionCopy() tocopyasurfacecollection into
anewlyallocated ProCollection handle.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProSrfcollectionAlloc() toallocateasurface
collection.
Usethefunction ProSrfcollectionCopy() tocopyasurfacecollection into
anewlyallocated ProCollection handle.
Usethefunction ProSrfcollectionInstructionAdd() toaddan
instruction tosurfacecollection.
Usethefunction ProSrfcollectionInstructionRemove() toremove
theinstructions fromsurfacecollections.
Thefunction ProSrfcollectionInstructionRemove() mayfaildueto
invalidindexspecifications fortheinstruction orifthecollection contains
instruction forcurves.
Usethefunction ProSrfcollinstrAlloc() toallocateasurfacecollection
instruction.
Usethefunction ProSrfcollinstrIncludeSet() tosettheinclude
flagforasurfacecollection instruction.
UserInterface:CurveandSurfaceCollection 521Note
Inthefunctions ProSrfcollinstrAlloc() and
ProSrfcollinstrIncludeSet() toexcludethesurfacesgeneratedin
thecollection instruction passtheinputargumentsasfollows:
•Specifythesurfacecollection instruction asPRO_SURFCOLL_SINGLE_
SURF.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSrfcollinstrIncludeSet() toexcludethesurfacesgeneratedin
thecollection instruction passtheinputargumentsasfollows:
•Specifythesurfacecollection instruction asPRO_SURFCOLL_SINGLE_
SURF.
•SpecifytheincludeargumentasPRO_B_FALSE.
Usethefunction ProSrfCollinstrInfoSet() tosettheinformation about
thebitflagsinthesurfacecollection instruction. Youcanpassthebitmaps
information asbitmaskcontaining oneormorebitflags.
Thefollowingbitflagscanbepassedasinputargument:
•PRO_SURFCOLL_ALL_GEOM_RULE—Specifies thatwhenthisflagis
includedwithotherruleflags,alltherulesareapplied.Otherwise, any
applicable geometryruleisapplied.
•PRO_SURFCOLL_CO_PLANNAR_GEOM_RULE—Specifies thatthesurfaces
coplanartotheseedsurfaceshouldbecollected.
•PRO_SURFCOLL_PARALLEL_GEOM_RULE—Specifies thatthesurfaces
paralleltotheseedsurfaceshouldbecollected.
•PPRO_SURFCOLL_CO_AXIAL_GEOM_RULE—Specifies thatthesurfaces
coaxialwiththeseedsurfaceshouldbecollected.
•PRO_SURFCOLL_EQ_RADIUS_GEOM_RULE—Specifies thatthesurfacesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PPRO_SURFCOLL_CO_AXIAL_GEOM_RULE—Specifies thatthesurfaces
coaxialwiththeseedsurfaceshouldbecollected.
•PRO_SURFCOLL_EQ_RADIUS_GEOM_RULE—Specifies thatthesurfaces
withthesameradiusandtypeastheseedsurfaceshouldbecollected.
•PRO_SURFCOLL_SAME_CONVEXITY_GEOM_RULE—Specifies thatthe
surfacesthathavethesameconvexity andtypeastheseedsurfaceshouldbe
collected.
Note
ThebitflagsPRO_SURFCOLL_ALL_GEOM_RULE, PRO_SURFCOLL_
CO_PLANNAR_GEOM_RULE, PRO_SURFCOLL_PARALLEL_GEOM_
RULE, PRO_SURFCOLL_CO_AXIAL_GEOM_RULE, PRO_SURFCOLL_
EQ_RADIUS_GEOM_RULE, andPRO_SURFCOLL_SAME_
CONVEXITY_GEOM_RULE arerelatedtoPRO_SURFCOLL_GEOM_
RULE,thatis,thegeometryrulesurfaceset.
522 Creo®Parametric TOOLKIT User’sGuide•PRO_SURFCOLL_SHAPE_CHAMFER—Collects surfaceswithchamfered
edges.Ifusedalonethenonlyprimarychamfershapesareaddedtothe
collection set.
•PRO_SURFCOLL_SHAPE_ROUND—Collects surfaceswithroundshape.If
usedalonethenonlytheprimaryroundshapesareaddedtothecollection set.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcollection set.
•PRO_SURFCOLL_SHAPE_ROUND—Collects surfaceswithroundshape.If
usedalonethenonlytheprimaryroundshapesareaddedtothecollection set.
•PRO_SURFCOLL_SHAPE_PROTR_BOSS—Collects surfacesofthetype
boss.Theprotrusion surfaceswiththesecondary shapesarealsoaddedtothe
set.
•PRO_SURFCOLL_SHAPE_PROTR_RIB—Collects surfacesofthetyperib.
Theprotrusion surfaceswithoutthesecondary shapesareaddedtoset.
•PRO_SURFCOLL_SHAPE_CUT_POCKET—Collects cutsurfaceswiththe
secondary shapes.
•PRO_SURFCOLL_SHAPE_CUT_SLOT—Collects cutsurfaceswithoutthe
secondary shapesbeingaddedtoset.
•PRO_SURFCOLL_SHAPE_MORE_SHAPES—Use thisflagonlywithPRO_
SURFCOLL_SHAPE_CHAMFER andPRO_SURFCOLL_SHAPE_ROUND to
addthesecondary chamferandroundshapestothesurfaceset.
Note
ThebitflagsPRO_SURFCOLL_SHAPE_ROUND, PRO_SURFCOLL_
SHAPE_PROTR_BOSS, PRO_SURFCOLL_SHAPE_PROTR_RIB, PRO_
SURFCOLL_SHAPE_CUT_POCKET, PRO_SURFCOLL_SHAPE_CUT_
SLOT, PRO_SURFCOLL_SHAPE_MORE_SHAPES andPRO_
SURFCOLL_SHAPE_CHAMFER arerelatedtoPRO_SURFCOLL_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSHAPE_PROTR_BOSS, PRO_SURFCOLL_SHAPE_PROTR_RIB, PRO_
SURFCOLL_SHAPE_CUT_POCKET, PRO_SURFCOLL_SHAPE_CUT_
SLOT, PRO_SURFCOLL_SHAPE_MORE_SHAPES andPRO_
SURFCOLL_SHAPE_CHAMFER arerelatedtoPRO_SURFCOLL_
SHAPE_BASED, thatis,theshapesurfaceset.
•PRO_SURFCOLL_TANGENT_NEIGBOURS_ONLY—Specifies thatthe
surfacesthathaveatleastonetangentedgewithanothersurfaceinthetangent
surfaceset,startingfromtheseedsurfaceshouldbecollected.
Note
ThebitflagPRO_SURFCOLL_TANGENT_NEIGBOURS_ONLY isrelated
toPRO_SURFCOLL_TANG_SRF, thatis,thetangentsurfaceset.
UserInterface:CurveandSurfaceCollection 523Note
•BeforeyoucallProSrfCollinstrInfoSet() function,youmustset
theincludeflag(PRO_B_TRUE /PRO_B_FALSE) forthesurface
collection instruction usingtheProSrfcollinstrIncludeSet().
•Forthegeometrybased,theshapebased,andthetangentbasedsurface
collections, thesurfacecollection referencetype(firstinputargumentto
thefunction ProSrfcollrefAlloc()) mustbePRO_SURFCOLL_
REF_SEED.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Forthegeometrybased,theshapebased,andthetangentbasedsurface
collections, thesurfacecollection referencetype(firstinputargumentto
thefunction ProSrfcollrefAlloc()) mustbePRO_SURFCOLL_
REF_SEED.
•Ifyouwanttoapplyallthegeometryruleflagsincludedintheinfo
argumentofthefunction ProSrfCollinstrInfoSet(), theflag
PRO_SURFCOLL_ALL_GEOM_RULE mustbeincludedininfoargument.
IfyoudonotincludethePRO_SURFCOLL_ALL_GEOM_RULE flag,any
ofthegeometryruleflagswillbeapplied.
Usethefunction ProSrfcollinstrReferenceAdd() toaddareferenceto
thesurfacecollection instruction.
Usethefunction ProSrfcollinstrReferenceRemove() toremovea
referencefromthesurfacecollection instruction.
Usethefunction ProSrfcollectionRegenerate() togenerateanarrayof
objectsbasedontherulesandinformation inthecollection.
AccessofCollectionObjectfromFeature
ElementTrees
Functions Introduced:
•ProElementCollectionGet()
•ProElementCollectionSet()
•ProElementCollectionPr ocess()
Usethefunction ProElementCollectionGet() toextractacollectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees
Functions Introduced:
•ProElementCollectionGet()
•ProElementCollectionSet()
•ProElementCollectionPr ocess()
Usethefunction ProElementCollectionGet() toextractacollection
objectfromanelementofafeatureelementtreeofthefollowingtypes:
•PRO_E_STD_CURVE_COLLECTION_APPL
•PRO_E_STD_SURF_COLLECTION_APPL
Usethefunction ProElementCollectionSet() toassignacollection
objectintotheappropriate elementsoftheabovementioned types.
524 Creo®Parametric TOOLKIT User’sGuideNote
Pointcollections (PRO_E_POINT_COLLECTION_APPL) areaccessedfrom
theelementasnormal ProReference object—by using
ProElementReferenceGet() andProElementReferenceSet()
APIs.
Usethefunction ProElementCollectionProcess() togeneratealistof
geometric itemsintheformofarrayofProReference objectconstituting the
collection. ItreturnsaProArray oftheselectedcurves,edges,orsurfacesthat
existinthecollection ownedbytheelement.Thisfunctiondiffersfrom
ProCrvcollectionRegenerate() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcollection. ItreturnsaProArray oftheselectedcurves,edges,orsurfacesthat
existinthecollection ownedbytheelement.Thisfunctiondiffersfrom
ProCrvcollectionRegenerate() and
ProSrfcollectionRegenerate() becausethosefunctionsgeneratealist
ofcollectedentitiesbasedonstandardrules.Thefunction
ProElementCollectionProcess(), ifappliedtoacollection element
fromagivenfeature,willusethefeature'srulestoprocessthecollection and
returntheexactgeometric entitiesusedbythefeature.
Note
Ifthiselementisextractedfromanexistingfeaturetreeusing
ProFeatureElemtreeExtract(), thereturned reference_array
willbeonthebasisofthefeaturerules.Ontheotherhand,ifthiselementis
newlycreatedandnotyetassignedtoafeature,thenthereturned
reference_array willbeasperthedefaultrules.
Programmatic AccesstoLegacy
Collections
Functions Introduced:
•ProCollectionAlloc()
•ProCollectionr efAlloc()
•ProCollectionr efSelectionSet()
•ProCollectionr efTypeSet()
•ProCollectioninstrAlloc()
•ProCollectioninstrT ypeSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCollections
Functions Introduced:
•ProCollectionAlloc()
•ProCollectionr efAlloc()
•ProCollectionr efSelectionSet()
•ProCollectionr efTypeSet()
•ProCollectioninstrAlloc()
•ProCollectioninstrT ypeSet()
•ProCollectioninstrRefAdd()
UserInterface:CurveandSurfaceCollection 525•ProCollectionInstrAdd()
•ProCollectionInstrV isit()
•ProCollectioninstrT ypeGet()
•ProCollectioninstrRefV isit()
•ProCollectionr efSelectionGet()
•ProCollectionr efTypeGet()
•ProCollectionFr ee()
•ProCollectioninstrFr ee()
•ProCollectionr efFree()
•ProCollectionInstrRemove()
•ProCollectioninstrRefRemove()
•ProCrvcollectionInstrRegen()
Thefunctionslistedinthissectionhavebeensuperseded. PTCrecommends using
theProCrvcollection* andProSrfcollection* functionsinsteadof
these;documentation forthesefunctionsisprovidedformaintenance ofexisting
applications.
Example1:InteractiveCurveCollection
usingCreoParametric TOOLKIT
ThesamplecodeinthefileUgGeomCurveLength.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplications.
Example1:InteractiveCurveCollection
usingCreoParametric TOOLKIT
ThesamplecodeinthefileUgGeomCurveLength.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
geometry demonstrates theinteractive curvescollection andcomputesthetotal
curvelength-consisting ofadditionoflengthsofindividual curvesinresulting
selectionset.Thecollection filterfunctionissettoallowonlyedgetypeof
selections.
Example2:InteractiveSurfaceCollection
usingCreoParametric TOOLKIT
ThesamplecodeinthefileUgGeomSurfArea.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
geometry demonstrates theinteractive surfacecollection andcomputesthetotal
area-consisting ofadditionofareasofindividual surfacesinresultingselection
set.Italsocreatesparameter ofdoubletypeontheindividual surfacesandassigns
itwiththevalueoftheindividual surfacearea.
526 Creo®Parametric TOOLKIT User’sGuide23
UserInterface:Animationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxset.Italsocreatesparameter ofdoubletypeontheindividual surfacesandassigns
itwiththevalueoftheindividual surfacearea.
526 Creo®Parametric TOOLKIT User’sGuide23
UserInterface:Animation
Introduction.............................................................................................................528
AnimationObjects...................................................................................................529
AnimationFrames...................................................................................................529
PlayingAnimations..................................................................................................530
ThischapterdescribestheCreoParametric TOOLKITfunctionsthatenableyouto
createanimation framesandmovies.
527Introduction
CreoParametric TOOLKITprovidesthefunctionsthatenableyoutoanimate
partsandassemblies. CreoParametric TOOLKIThandleslower-level
considerations, suchashardware-dependent graphicsandtheuserinterface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKITprovidesthefunctionsthatenableyoutoanimate
partsandassemblies. CreoParametric TOOLKIThandleslower-level
considerations, suchashardware-dependent graphicsandtheuserinterface.
Twoanimation techniques areavailable:
•Batchanimation—Y oucreateananimation movie(ProAnimMovie object)
anduserscontrolthemovieusinganinterfacesimilartoaVCR.Userscan
performsuchoperations as“Play”,“Fast-Forward”, “Rewind”, andsoon.The
followingfigureshowstheanimation dialogbox.
AnimationDialogBox
•Frame-by-frame (single)animation—Y oucreateasingleanimation
(ProSingleAnim object)andcodethecontrolloopintoyourapplication.
Thebatchanimation interfacedoesnotappear.Toreplaythemovie,youmust
reexecutethecontrolloopofyourapplication.
Forbothbatchandsingleanimation, youmustbuildtheanimation fromtwo
importantelements.Theseelementsare:
•Animation object(ProAnimObj object)—Contains theobjecttobeanimated
anditstransformation, withrespecttoitsimmediate parent.Inconstructing thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxximportantelements.Theseelementsare:
•Animation object(ProAnimObj object)—Contains theobjecttobeanimated
anditstransformation, withrespecttoitsimmediate parent.Inconstructing the
animation, youcanshowmotionbycreatingaseriesofProAnimObj
objects,eachwithadifferenttransformation.
•Animation frame(ProAnimFrame object)—Captures theimageofthe
animation objectsatoneinstanceoftheanimation. Yourfinalanimation isa
seriesofanimation framesshowninsuccession.
528 Creo®Parametric TOOLKIT User’sGuideAnimationObjects
Functions Introduced:
•ProAnimobjectCr eate()
•ProAnimobjectDelete()
Ananimation objectcanbeapartoranassembly.Tocreateananimation object,
callthefunction ProAnimobjectCreate() andpassasinputthecomponent
pathoftheobjecttobeanimated.Youmustalsosupplythelocationofthe
animation objectwithrespecttoitsimmediate parent—not withrespecttothetop-
levelassembly.Thisdistinction isimportantwhenthedepthoftheassembly
hierarchyisgreaterthan1.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanimation objectwithrespecttoitsimmediate parent—not withrespecttothetop-
levelassembly.Thisdistinction isimportantwhenthedepthoftheassembly
hierarchyisgreaterthan1.
Todeleteananimation object,usethefunction ProAnimobjectDelete().
AnimationFrames
Functions Introduced:
•ProAnimframeCr eate()
•ProAnimframeObjAdd()
•ProAnimframeObjRemove()
•ProAnimframeDelete()
•ProAnimframeObjV isit()
Afteryouhavecreatedanimation objects,youmustcreateananimation framein
whichtostoretheobjects.Tocreateananimation frame,callthefunction
ProAnimframeCreate() andsupplyaframeviewmatrix.Theframeview
matrixisatransformation fromthetopmodelcoordinate systemthatallowsyou
toaltertheviewofthetop-levelmodelinyouranimation. Thisfunctionality could
beused,forexample,tochangetheviewofanassemblywhiletheassembly
components (animation objects)moveasspecifiedinthecallto
ProAnimobjectCreate().
Note
Theframeviewmatrixisspecifiedasatransformation fromtherootassembly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponents (animation objects)moveasspecifiedinthecallto
ProAnimobjectCreate().
Note
Theframeviewmatrixisspecifiedasatransformation fromtherootassembly.
Creatingananimation framedoesnotcausetheanimation objectstobecontained
intheframe.Toaddanimation objectstoaframe,youmustcallthefunction
ProAnimframeObjAdd().
UserInterface:Animation 529Toremoveanobjectfromaframe,callthefunction
ProAnimframeObjRemove(). Todeleteaframe,call
ProAnimframeDelete().
Thefunction ProAnimframeObjVisit() enablesyoutovisiteachanimation
objectinananimation frame.Theinputargumentsofthefunctionspecifythe
actionandfiltrationfunctions, whichareoftypeProAnimObjAct.
PlayingAnimations
Thissectiondescribeshowtouseyouranimation framestoconstructandplaythe
animation. Aspreviously mentioned, therearetwotypesofanimation—single and
batch.
SingleAnimation
Functions Introduced:
•ProSingleAnimationInit()
•ProSingleAnimationPlay()
•ProSingleAnimationClear()
Ifyouwanttousesingleanimation, yourCreoParametric TOOLKITapplicationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbatch.
SingleAnimation
Functions Introduced:
•ProSingleAnimationInit()
•ProSingleAnimationPlay()
•ProSingleAnimationClear()
Ifyouwanttousesingleanimation, yourCreoParametric TOOLKITapplication
mustincludeacontrolloopthatdisplaysoneanimation frameafteranother.
Beforeexecutingyourcontrolloop,initializethesingleanimation bycalling
ProSingleAnimationInit(). Withintheloop,displayeachframeinturn
usingthefunction ProSingleAnimationPlay().
Note
Singleanimation doesnotinvolvethebatchanimation userinterface.The
controloverasingleanimation iscontainedentirelywithinyourapplication.
Thefunction ProSingleAnimationClear() clearsthespecifiedsingle
animation.
BatchAnimation
Batchanimation implements theuserinterfaceshownintheIntroduction onpage
528section.Theinterfaceenablesuserstocontroltheplayingofyouranimation
movie.
530 Creo®Parametric TOOLKIT User’sGuideAnimationMovies
Functions Introduced:
•ProAnimmovieCre ate()
•ProAnimmovieFrameAdd()
•ProAnimmovieFrameRemove()
•ProAnimmovieDelete()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmovie.
530 Creo®Parametric TOOLKIT User’sGuideAnimationMovies
Functions Introduced:
•ProAnimmovieCre ate()
•ProAnimmovieFrameAdd()
•ProAnimmovieFrameRemove()
•ProAnimmovieDelete()
•ProAnimmovieFrameV isit()
Thefunction ProAnimmovieCreate() createsananimation movie.Atits
creation,amoviedoesnotcontainanyframes.Toaddframestotheanimation
movie,callthefunction ProAnimmovieFrameAdd().
Toremoveaframefromananimation movie,callthefunction
ProAnimmovieFrameRemove(). Notethatthisactiondoesnotcausethe
frametobedeleted;useProAnimmovieDelete() toreleasethememoryof
theanimation frame.
Thefunction ProAnimmovieFrameVisit() enablesyoutovisiteachofthe
framesinananimation movie.Theinputargumentstothefunctionspecifythe
actionandfiltrationfunctions, whichareoftypeProAnimFrameAct.
PlayingaBatchAnimation
FunctionIntroduced:
•ProBatchAnimationStart()
•ProAnimmovieSpinflagSet()
Batchanimation managesthedisplayofanimation framesinsideCreoParametric.
WhenyoucallProBatchAnimationStart(), thesystemdisplaystheVCR-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProBatchAnimationStart()
•ProAnimmovieSpinflagSet()
Batchanimation managesthedisplayofanimation framesinsideCreoParametric.
WhenyoucallProBatchAnimationStart(), thesystemdisplaystheVCR-
likeuserinterface.Thisinterfaceenablesuserstocontrolthespeedanddirection
oftheanimation.
Thefunction ProBatchAnimationStart() requiresasinputtheanimation
movietobestarted(animated). Inaddition,youcansupplyacallbackfunctionto
beinvokedbeforeeachanimation frameisdisplayed. Thecallbackfunctionisof
typeProBatchAnimAct.
Usethefunction ProAnimmovieSpinflagSet() tosettheProBoolean
flagthatallowsspininabatchanimation process.Iftheanimation includesview
modifications, thisflagshouldbesettofalse,otherwiseitcanbetrue.
UserInterface:Animation 531Example1:CreatingaBatchAnimation
ThesamplecodeinthefileUgAnimAsmcompAnim.c locatedat<creo_
toolkit_loadpoint>\protk_appls\pt_userguide\ptu_anim,
showshowtoanimateanassemblycomponent. Theselectedcomponent rotates
aboutthex-axis.
532 Creo®Parametric TOOLKIT User’sGuide24xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolkit_loadpoint>\protk_appls\pt_userguide\ptu_anim,
showshowtoanimateanassemblycomponent. Theselectedcomponent rotates
aboutthex-axis.
532 Creo®Parametric TOOLKIT User’sGuide24
Annotations: Annotation Features
andAnnotations
OverviewofAnnotationFeatures..............................................................................534
CreatingAnnotationFeatures...................................................................................534
RedefiningAnnotationFeatures...............................................................................535
VisitingAnnotationFeatures.....................................................................................536
CreatingDatumTargets...........................................................................................536
VisitingAnnotationElements....................................................................................537xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVisitingAnnotationElements....................................................................................537
AccessingAnnotationElements...............................................................................538
Modification ofAnnotationElements.........................................................................540
AutomaticPropagation ofAnnotationElements.........................................................543
DetailTree..............................................................................................................544
AccesstoAnnotations .............................................................................................545
ConvertingAnnotations toLatestVersion..................................................................549
AnnotationTextStyles.............................................................................................549xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotationTextStyles.............................................................................................549
AnnotationOrientation.............................................................................................550
AnnotationAssociativity ...........................................................................................553
InteractiveSelection................................................................................................555
DisplayModes........................................................................................................555
Designating Dimensions andSymbols......................................................................555
Dimensions.............................................................................................................556
Notes.....................................................................................................................586xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNotes.....................................................................................................................586
GeometricTolerances..............................................................................................595
AccessingSetDatumTags......................................................................................595
AccessingSetDatumsforDatumAxesorPlanes......................................................599
SurfaceFinishAnnotations ......................................................................................600
SymbolAnnotations. ................................................................................................602
Thischapterdescribeshowtoaccessannotation featuresforspecial
customizations. Itprovidesspecificfunctionsforcreation,access,and
modification ofannotation featuresandelements.
533OverviewofAnnotation Features
Anannotation featureisanewfeatureavailableinPro/ENGINEER Wildfire2.0.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodification ofannotation featuresandelements.
533OverviewofAnnotation Features
Anannotation featureisanewfeatureavailableinPro/ENGINEER Wildfire2.0.
Itiscomposed ofoneormore"annotation elements". Eachannotation elementis
composed ofreferences, parameters andannotations (notes,symbols,geometric
tolerances, surfacefinishes,referencedimensions, drivendimensions, and
manufacturing templateannotations). Theannotation featureallowsannotation
information tohavethesamebenefitsasgeometryinCreoParametric models,
thatis,parameters canbeassignedtotheseannotation elements,andmissing
geometric references cancausefeaturestofailinsomesituations.
ThefeaturetypePRO_FEAT_ANNOTATION represents anannotation feature.
Functions referringtoannotation featuresusethestructure
ProAnnotationfeat, whichisidenticaltoProFeature.
Functions referringtoannotation elementsusethestructure
ProAnnotationElem whichisidenticaltothestructure ProModelitem and
isdefinedas
typedef struct pro_model_item
{
ProType type;
int id;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions referringtoannotation elementsusethestructure
ProAnnotationElem whichisidenticaltothestructure ProModelitem and
isdefinedas
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProAnnotationElem
Likeother ProModelitem derivatives, eachannotation elementhasauniqueid
assignedtoitinthemodel.
Annotation elementsmaybelongtoannotation features,ormayalsobefoundin
data-sharing features(featureslikeCopyGeometry,PublishGeometry,Merge,
Cutout,andShrinkwrap features).
CreoParametric TOOLKITdoesnotexposethefeatureelementtreefor
annotation featuresbecausesomeelementsinthetreeareusedfornon-standard
purposes.Instead,CreoParametric TOOLKITprovidesspecificfunctionsfor
creating,redefining, andreadingtheproperties ofannotation featuresand
annotation elements.
CreatingAnnotation Features
Functions Introduced:
•ProAnnotationfeatCr eate()
•ProDatumtargetAnnotationfeature Create()
Thefunction ProAnnotationfeatCreate() createsanewannotationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxannotation elements.
CreatingAnnotation Features
Functions Introduced:
•ProAnnotationfeatCr eate()
•ProDatumtargetAnnotationfeature Create()
Thefunction ProAnnotationfeatCreate() createsanewannotation
featureinthemodel.Specifythefollowingastheinputparameters forthis
function:
534 Creo®Parametric TOOLKIT User’sGuide•model—Specify thesolidmodelonwhichthefeaturewillbecreated.Specify
thecomponent pathifthefeatureiscreatedinanassemblycontext.
•use_ui—Specifies abooleanflagthatdetermines howtheannotation features
willbecreated.Itcanhavethefollowingvalues:
○FALSE—Indicates thatthefeaturewillbeanewemptyannotation feature
withonegeneralannotation elementinit.Modifythenewannotation
elementandaddothersusingsubsequent steps.
○TRUE—Indicates thatCreoParametric willinvoketheannotation feature
creationuserinterface.
Thefunction ProDatumtargetAnnotationfeatureCreate() createsa
newDatumTargetAnnotation Feature(DTAF)inthemodel.Thisfunctiontakes
thesameinputargumentsastheearlierfunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreationuserinterface.
Thefunction ProDatumtargetAnnotationfeatureCreate() createsa
newDatumTargetAnnotation Feature(DTAF)inthemodel.Thisfunctiontakes
thesameinputargumentsastheearlierfunction
ProAnnotationfeatCreate().
RedefiningAnnotation Features
Redefining anannotation featureinvolvescreationofnewannotation elements,
deletionofelementsthatarenotrequiredandmodification ofthefeature
properties.
Note
Thefunctionsinthissectionareshortcutstoredefining thefeaturecontaining
theannotation elements.Becauseofthis,CreoParametric mustregenerate the
modelaftermakingtherequiredchangestotheannotation element.The
functionsincludeaflagtooptionally allowtheFixModelUserInterfaceto
appearuponaregeneration failure.
Functions Introduced:
•ProAnnotationfeatElementAdd()
•ProAnnotationfeatElementArrayAdd()
•ProAnnotationfeatElementDelete()
•ProAnnotationfeatElementCopy()
Thefunction ProAnnotationfeatElementAdd() addsanewnon-
graphicalannotation elementtothefeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProAnnotationfeatElementArrayAdd()
•ProAnnotationfeatElementDelete()
•ProAnnotationfeatElementCopy()
Thefunction ProAnnotationfeatElementAdd() addsanewnon-
graphicalannotation elementtothefeature.
Thefunction ProAnnotationfeatElementArrayAdd() addsaseriesof
newannotation elementstothefeature.Eachelementmaybecreatedasnon-
graphicalormaybeassignedapre-existing annotation.
Annotations: Annotation FeaturesandAnnotations 535Note
IncaseofDatumTargetAnnotation Features(DTAFs),youcanaddonlyone
setdatumtagannotation elementusingthefunction
ProAnnotationfeatElementArrayAdd().
Thefunction ProAnnotationfeatElementDelete() deletesan
annotation elementfromthefeature.Thefunctiondeletestheannotation element,
itsannotations, parameters, references, andapplication datafromthefeature.
Note
IncaseofDatumTargetAnnotation Features(DTAFs),
ProAnnotationfeatElementDelete() allowsyoutodeleteonlya
DatumTargetAnnotation Element(DTAE)fromaDTAF.ThisfunctiondoesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
IncaseofDatumTargetAnnotation Features(DTAFs),
ProAnnotationfeatElementDelete() allowsyoutodeleteonlya
DatumTargetAnnotation Element(DTAE)fromaDTAF.Thisfunctiondoes
notallowdeletionofasetdatumtagannotation elementfromtheDTAF.
Thefunction ProAnnotationfeatElementCopy() copiesandaddsan
existingannotation elementtothespecifiedannotation feature.
VisitingAnnotation Features
Functions Introduced:
•ProSolidFeatV isit()
•ProModelitemNameGet()
Usethefunction ProSolidFeatVisit() tovisittheannotation featuresinthe
specifiedmodel.
Thefunction ProModelitemNameGet() returnsthenameoftheannotation
feature.
CreatingDatumTargets
Functions Introduced:
•ProMdlDatumT argetCr eate()
536 Creo®Parametric TOOLKIT User’sGuideThefunction ProAnnotationfeatDatumtargetCreate() hasbeen
deprecated. Usethefunction ProMdlDatumTargetCreate() instead.The
function ProMdlDatumTargetCreate() createsanewdatumtarget.The
inputargumentsare:
•p_owner_mdl—Specifies themodelinwhichthedatumtargetwillbecreated.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction ProMdlDatumTargetCreate() createsanewdatumtarget.The
inputargumentsare:
•p_owner_mdl—Specifies themodelinwhichthedatumtargetwillbecreated.
•type—Specifies thetypeoftargetareausingtheenumerated datatype
ProDatumTargetType. Thevalidvaluesare:
○PRO_DATUM_TARGET_NONE
○PRO_DATUM_TARGET_POINT
○PRO_DATUM_TARGET_CIRCLE
○PRO_DATUM_TARGET_RECTANGLE
•annot_plane—Specifies theannotation plane.
•attach_sels—Specifies thereferencetowhichthedatumtargetwillbe
attached.Tospecifyasinglereference, passProSelection forindex 0and
NULLforindex 1.
Forapairofreferences, passProSelection forbothindexes.Inthiscase,
thedatumtargetisattachedtothesolidattheintersection pointofthetwo
references.
•text_pnt—Specifies thelocationofthetextinthedatumtarget.
VisitingAnnotation Elements
Thefunctionsdescribedinthissectionenableyoutovisitalltheannotation
elementsinasolidmodel.
Functions Introduced:
•ProFeatur eAnnotationelemsV isit()
•ProSolidAnnotationelemsV isit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionsdescribedinthissectionenableyoutovisitalltheannotation
elementsinasolidmodel.
Functions Introduced:
•ProFeatur eAnnotationelemsV isit()
•ProSolidAnnotationelemsV isit()
Thefunction ProFeatureAnnotationelemsVisit() visitstheannotation
elementsinthespecifiedfeature.
Thefunction ProSolidAnnotationelemsVisit() visitstheannotation
elementsinasolidmodel.
Thefilterfunction ProAnnotationelemFilterAction() andthevisit
function ProAnnotationelemVisitAction() arespecifiedasinput
argumentsfortheabovefunctions.
Thefunction ProAnnotationelemFilterAction() isagenericfunction
forfilteringanannotation element.Itreturnsthefilterstatusofthespecified
annotation element.Thefilterstatusispassedastheinputargumenttothe
function ProAnnotationelemVisitAction() whichisagenericfunction
forvisitingannotation elements.
Annotations: Annotation FeaturesandAnnotations 537AccessingAnnotation Elements
Thefollowingfunctionsprovideaccesstotheproperties ofanannotation element.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations: Annotation FeaturesandAnnotations 537AccessingAnnotation Elements
Thefollowingfunctionsprovideaccesstotheproperties ofanannotation element.
Functions Introduced:
•ProAnnotationelemAnnotationGet()
•ProAnnotationelemCopyGet()
•ProAnnotationelemFeatur eGet()
•ProAnnotationelemIsDependent()
•ProAnnotationelemIsIncomplete()
•ProAnnotationelemRefer encesCollect()
•ProAnnotationelemQuiltr eferenceSurfacesCollect()
•ProAnnotationelemT ypeGet()
•ProAnnotationelemRefer enceDescriptionGet()
•ProAnnotationelemRefer enceIsStron g()
•ProAnnotationelemRefer enceAutopr opagateGet()
•ProAnnotationelemHasMissingr efs()
Thefunction ProAnnotationelemAnnotationGet() returnsthe
annotation containedinanannotation element.
Thefunction ProAnnotationelemCopyGet() returnsthecopyflagofthe
annotation elements.Thispropertyisnotsupported forelementsindatasharing
features.
Thefunction ProAnnotationelemFeatureGet() returnsthefeaturethat
ownstheannotation element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxannotation elements.Thispropertyisnotsupported forelementsindatasharing
features.
Thefunction ProAnnotationelemFeatureGet() returnsthefeaturethat
ownstheannotation element.
Thefunction ProAnnotationelemIsDependent() returnsthevalueofthe
dependency flagfortheannotation element.Thispropertyissupported onlyfor
theelementsindatasharingfeatures.
Thefunction ProAnnotationelemIsIncomplete() returnsatruevalueif
theannotation elementhasmissingstrongreferences.
Thefunction ProAnnotationelemReferencesCollect() returnsan
arrayofreferences containedinthespecifiedannotation element.Theinput
argumentsforthisfunctionare:
•element—Specifies theannotation element.
•ref_type—Specifies thetypeofreferences andcanhaveoneofthefollowing
values:
○PRO_ANNOTATION_REF_ALL—All references
○PRO_ANNOTATION_REF_WEAK—W eakreferences
538 Creo®Parametric TOOLKIT User’sGuide○PRO_ANNOTATION_REF_STRONG—Strong references
•source—Specifies thesourceofthereferences andcanhaveoneofthe
followingvalues:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx538 Creo®Parametric TOOLKIT User’sGuide○PRO_ANNOTATION_REF_STRONG—Strong references
•source—Specifies thesourceofthereferences andcanhaveoneofthe
followingvalues:
○PRO_ANNOTATION_REF_ALL—From bothuserandannotation.
○PRO_ANNOTATION_REF_FROM_ANNOTATION—From theannotation
(orcustomdata)only.
○PRE_ANNOTATION_REF_FROM_USER—From theuseronly.
Annotation elementshavespecialdefaultbehaviorforpropagation ofdatum
pointstofeaturesinothermodels.Theflagthatcontrolsthisbehaviorcan
automatically propagate datumpointsoranyotherapplicable itemstodatasharing
featuresaftertheuserhasselectedallotherstrongreferences oftheannotation
elements.
Here,applicable itemsareitemsthataredesignated toauto-propagate, usinga
checkboxinthereferences collector,forspecificannotation elements.
Thefunction
ProAnnotationelemQuiltreferenceSurfacesCollect() returns
thesurfaceswhichmakeupaquiltsurfacecollection referencefortheannotation
element.
Note
Allthesurfacesmadeinactivebyfeaturesoccurringaftertheannotationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesurfaceswhichmakeupaquiltsurfacecollection referencefortheannotation
element.
Note
Allthesurfacesmadeinactivebyfeaturesoccurringaftertheannotation
elementinthemodelregeneration arealsoreturned.
Thefunction ProAnnotationelemReferenceAutopropagateGet()
getstheautopropagate flagofthespecifiedannotation elementreference.
Thefunction ProAnnotationelemTypeGet() returnsthetypeofthe
annotation containedintheannotation element.Itcanhaveoneofthefollowing
values:
•PRO_ANNOT_TYPE_NONE—Specifies anon-graphical annotation.
•PRO_ANNOT_TYPE_NOTE—Specifies anote.RefertothesectionNoteson
page586fordetails.
•PRO_ANNOT_TYPE_GTOL—Specifies ageometric tolerance.Refertothe
chapterGeometric Tolerancesonpage595fordetails.
•PRO_ANNOT_TYPE_SRFFIN—Specifies asurfacefinish.Refertothe
sectionSurfaceFinishAnnotations onpage600fordetails.
•PRO_ANNOT_TYPE_SYMBOL—Specifies asymbol.Refertothesection
SymbolAnnotations onpage602fordetails.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionSurfaceFinishAnnotations onpage600fordetails.
•PRO_ANNOT_TYPE_SYMBOL—Specifies asymbol.Refertothesection
SymbolAnnotations onpage602fordetails.
Annotations: Annotation FeaturesandAnnotations 539•PRO_ANNOT_TYPE_DRVDIM —Specifies adrivendimension. Refertothe
sectionAccessing Reference andDrivenDimensions onpage579fordetails.
•PRO_ANNOT_TYPE_REFDIM—Specifies areferencedimension. Refertothe
sectionAccessing Reference andDrivenDimensions onpage579fordetails.
•PRO_ANNOT_TYPE_CUSTOM—Specifies amanufacturing template
annotation.
•PRO_ANNOT_TYPE_SET_DATUM_TAG—Specifies asetdatumtag.Referto
thesectionAccessing SetDatumTagsonpage595fordetails.
•PRO_ANNOT_TYPE_DRIVINGDIM—Specifies adrivingdimension
annotation element.RefertothesectionDrivingDimension Annotation
Elementsonpage579fordetails.
Thefunction ProAnnotationelemReferenceDescriptionGet() gets
thedescription propertyforagivenannotation elementreference.
Note
Thedescription stringissameasthatofthetooltiptextforthereferencenamexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProAnnotationelemReferenceDescriptionGet() gets
thedescription propertyforagivenannotation elementreference.
Note
Thedescription stringissameasthatofthetooltiptextforthereferencename
intheAnnotation FeatureUI.
Thefunction ProAnnotationelemReferenceIsStrong() identifiesifa
referenceisweakorstronginagivenannotation element.
Thefunction ProAnnotationelemHasMissingrefs() enablesyouto
identifyifanannotation elementhasmissingreferences. Theinputparameters of
thisfunctionallowyoutoinvestigate specifictypesandsourcesofreferences, or
checkallreferences simultaneously .
Modification ofAnnotation Elements
Thefunctionsdescribedinthissectionallowyoutomodifytheproperties ofan
annotation element.
Note
Thefunctionsinthissectionareshortcutstoredefining thefeaturecontaining
theannotation elements.Becauseofthis,CreoParametric mustregenerate the
modelaftermakingtheindicatedchangestotheannotation element.The
functionsincludeaflagtooptionally allowtheFixModelUserInterfacetoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheannotation elements.Becauseofthis,CreoParametric mustregenerate the
modelaftermakingtheindicatedchangestotheannotation element.The
functionsincludeaflagtooptionally allowtheFixModelUserInterfaceto
appearuponaregeneration failure.
540 Creo®Parametric TOOLKIT User’sGuideFunctions Introduced:
•ProAnnotationelemAnnotationSet()
•ProAnnotationelemCopySet()
•ProAnnotationelemDependencySet()
•ProAnnotationelemRefer enceAdd()
•ProAnnotationelemRefer enceRemove()
•ProAnnotationelemRefer enceStr engthen()
•ProAnnotationelemRefer enceW eaken()
•ProAnnotationelemRefer enceDescriptionSet()
•ProAnnotationelemRefer enceAutopr opagateSet()
•ProAnnotationelemRefer encesSet()
•ProAnnotationelemArrayRefer encesSet()
•ProAnnotationr eferencesetAlloc()
•ProAnnotationr eferencesetRefer enceAdd()
•ProAnnotationr eferencesetFr ee()
•ProAnnotationr eferencesetPr oarrayFr ee()
Thefunction ProAnnotationelemAnnotationSet() allowsyouto
modifytheannotation containedinanannotation element.Specifythevalueforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProAnnotationr eferencesetPr oarrayFr ee()
Thefunction ProAnnotationelemAnnotationSet() allowsyouto
modifytheannotation containedinanannotation element.Specifythevaluefor
theinputargument annotation asNULLtomodifytheannotation elementtobea
non-graphical annotation.
Note
TheabovefunctiondoesnotsupportDatumTargetAnnotation Elements
(DTAEs).
Ifyoumodifytheannotation containedintheannotation element,theoriginal
annotation isautomatically removedfromtheelementandisownedbythemodel.
Thefunction ProAnnotationelemCopySet() provideswriteaccesstothe
copyflagoftheannotation element.Thispropertyisnotsupported forannotations
indatasharingfeatures.
Thefunction ProAnnotationelemDependencySet() setsthevalueforthe
dependency flag.Thispropertyissupported onlyforannotations indatasharing
features.
Thefunction ProAnnotationelemReferenceAdd() addsastronguser-
definedreferencetotheannotation element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdependency flag.Thispropertyissupported onlyforannotations indatasharing
features.
Thefunction ProAnnotationelemReferenceAdd() addsastronguser-
definedreferencetotheannotation element.
Annotations: Annotation FeaturesandAnnotations 541Thefunction ProAnnotationelemReferenceRemove() removestheuser
definedreferencefromtheannotation element.
Thefunction ProAnnotationelemReferenceStrengthen() convertsa
weakreferencetoastrongreference.
Thefunction ProAnnotationelemReferenceWeaken() convertsastrong
referencetoaweakreference.
Thefunction ProAnnotationelemReferenceDescriptionSet() sets
thedescription propertyforagivenannotation elementreference.
Thefunction ProAnnotationelemReferenceAutopropagateSet()
setstheautopropagate flagofthespecifiedannotation elementreference.
Thefunction ProAnnotationelemReferencesSet() replacesalltheuser-
definedreferences intheannotation elementwithaProArray ofreferences
specifiedastheinputargument.
Thefunction ProAnnotationelemArrayReferencesSet() replacesallxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedreferences intheannotation elementwithaProArray ofreferences
specifiedastheinputargument.
Thefunction ProAnnotationelemArrayReferencesSet() replacesall
theuser-definedreferences foraProArray ofannotation elementswiththe
ProArray ofreferencesetsspecifiedastheinputargument.
Note
Alltheannotation elementsmustbelongtothesamefeature.Thenumberof
referencesetsshouldmatchthenumberofannotation elementstobemodified.
Thefunction ProAnnotationreferencesetAlloc() allocatesasetof
user-definedreferences tobeassignedtoanannotation element.
Thefunction ProAnnotationreferencesetReferenceAdd() addsa
newreferencetoanexistingsetofuser-definedannotation references.
Thefunction ProAnnotationreferencesetFree() releasesthesetof
user-definedreferences tobeassignedtoanannotation element.
Thefunction ProAnnotationreferencesetProarrayFree() releases
anarrayofreferencesetstobeassignedtoanannotation element.
Parameters AssignedtoAnnotation ElementsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProAnnotationreferencesetProarrayFree() releases
anarrayofreferencesetstobeassignedtoanannotation element.
Parameters AssignedtoAnnotation Elements
Thefunctionsdescribedinthissectionallowyoutoaccessparameters assignedto
theannotation element.Specifytheannotation elementastheparameter ownerfor
thesefunctions.
Functions Introduced:
•ProParameterIsEnumerated()
•ProParameterRangeGet()
542 Creo®Parametric TOOLKIT User’sGuideThefunction ProParameterIsEnumerated() identifiesanenumerated
parameter andreturnstheavailablevaluesassignedtoit.Theoutputofthe
functionisPRO_B_TRUE iftheparameter isenumerated andPRO_B_FALSE ifit
isnot.Theoutputargumentalsopresents ProArray ofvaluesthatcanbe
assignedtotheenumerated parameter.
Thefunction ProParameterRangeGet() identifieswhetheraparameter is
restrictedtoarangeofvalues.Itoptionally providestheboundaryconditions for
therange.
Formoreinformation onfunctionsthatallowyoutoview,create,delete,and
modifyparameters, refertoCore:Parameters onpage208.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtherange.
Formoreinformation onfunctionsthatallowyoutoview,create,delete,and
modifyparameters, refertoCore:Parameters onpage208.
AutomaticPropagation ofAnnotation
Elements
Automatic localpropagation ofannotation elementscanbedonebasedonsome
specifiedconditions, usingaCreoParametric TOOLKITapplication. ACreo
Parametric TOOLKITapplication canregisterthefollowingnotification event
types(ProNotifyType):
•PRO_FEATURE_CREATE_POST
•PRO_FEATURE_REDEFINE_POST
Whenanappropriate eventoccursduringaCreoParametric session,the
associated notification functioncaninvokealocalpropagation.
Functions Introduced:
•ProAnnotationelemAutopr opagate()
Thefunction ProAnnotationelemAutopropagate() causesthelocaland
automatic propagation ofannotation elementstothecurrentlyselectedfeature
withinthesamemodel,afterasupported featurehaseitherbeencreatedor
modified.Thepropagation behaviorisdependant onthestandardCreoParametric
algorithmandonthecurrentcontentsoftheselectionbuffer.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwithinthesamemodel,afterasupported featurehaseitherbeencreatedor
modified.Thepropagation behaviorisdependant onthestandardCreoParametric
algorithmandonthecurrentcontentsoftheselectionbuffer.
Following arethelistofsupported features:
•Draft
○Surface
○Solid
•Offset
○Surface
○WithDraft
○Expand
Annotations: Annotation FeaturesandAnnotations 543•MirrorSurface
•CopySurface
•MoveSurface
TheCreoParametric TOOLKITapplication canbewrittensoastospecifythe
conditionfortheautomatic propagation, basedoncreatedfeature-type, subtypeor
anyotherrequiredproperties.
Thefunctionpropagates basedonthecurrentcontentsoftheselectionbuffer.
Fornotification oftypePRO_FEATURE_REDEFINE_POST, CreoParametric
doesnotautomatically populatetheselectionbufferwiththefeaturethatwas
redefined. TheCreoParametric TOOLKITapplication wouldbethenrequiredto
populatetheselectionbufferwiththefeatureusingtheappropriate functions.
RefertothesectionSelectionBufferonpage504inthechapterUserInterface:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpopulatetheselectionbufferwiththefeatureusingtheappropriate functions.
RefertothesectionSelectionBufferonpage504inthechapterUserInterface:
Selectiononpage495formoreinformation onselectionbuffer.
Note
Thefunction ProAnnotationelemAutopropagate() worksregardless
ofthecurrentvaluefortheconfiguration option, auto_propagate_ae.
PTCadvisesthattheCreoParametric TOOLKITapplication respectthe
currentvalueofthisconfiguration option;otherwise, duplicateversionsofthe
propagated annotations canresult.
DetailTree
CreoParametric 1.0onwards,whenthe3DAnnotation tabisactive,youcanview
theactivecombination stateofamodelandtheannotations assignedtoit.This
representation iscalledaDetailTree.Formoreinformation onDetailTree,seethe
CreoParametric help.Usethefollowingfunctionstorefresh,expand,andcollapse
thedetailtree:
Functions Introduced:
•ProDetailtre eRefresh ()
•ProDetailtre eExpand()
•ProDetailtre eCollapse()
Usethefunction ProDetailtreeRefresh() torebuildthedetailtreeinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthedetailtree:
Functions Introduced:
•ProDetailtre eRefresh ()
•ProDetailtre eExpand()
•ProDetailtre eCollapse()
Usethefunction ProDetailtreeRefresh() torebuildthedetailtreeinthe
CreoParametric windowthatcontainsthemodel.
Usethefunction ProDetailtreeExpand() toexpandthedetailtreeinthe
CreoParametric window.
544 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProDetailtreeCollapse() tocollapseallnodesofthe
detailtreeintheCreoParametric windowandmakeitschildnodesinvisible.
Theinputargumentstothesefunctionsare:
•solid—Handle tothemodelthatcontainsthedetailtree.
•window_id—ID oftheCreoParametric windowinwhichyouwanttorefresh,
expand,orcollapsethedetailtree.
Note
UsePRO_VALUE_UNUSED torefresh,expand,orcollapsethedetailtree
intheactivewindow.
AccesstoAnnotations
Thestructurefortheannotations issimilartothestructure ProModelitem and
isdefinedas
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProAnnotation
Thevalueoftypefordifferentannotations isasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisdefinedas
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProAnnotation
Thevalueoftypefordifferentannotations isasfollows:
•PRO_NOTE—Specifies anote.Functions specifictonotesusetheobjecttype
ProNote.
•PRO_SYMBOL_INSTANCE—Specifies asymbolinstance.Functions specific
tosymbolsusetheobject ProDtlsyminst.
•PRO_GTOL—Specifies ageometric tolerance.Functions specifictoGtolsuse
theobject ProGtol.
•PRO_SURF_FIN—Specifies asurfacefinish.Functions specifictosurface
finishusetheobject ProSurfFinish.
•PRO_REF_DIMENSION—Specifies areferencedimension.
•PRO_DIMENSION—Specifies adrivingordrivendimension. Reference,
drivenanddrivingdimension functionsmayusetheobjecttype
ProDimension.
•PRO_SET_DATUM_TAG—Specifies asetdatumtagannotation. Functions
specifictosetdatumtagusetheobjecttypeProSetdatumtag.
Annotations: Annotation FeaturesandAnnotations 545•PRO_CUSTOM_ANNOTATION—Specifies acustomannotation type.
Currently,usedonlyformanufacturing templateannotations.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations: Annotation FeaturesandAnnotations 545•PRO_CUSTOM_ANNOTATION—Specifies acustomannotation type.
Currently,usedonlyformanufacturing templateannotations.
Functions Introduced:
•ProAnnotationElementGet()
•ProAnnotationByV iewShow()
•ProAnnotationByFeature Show()
•ProAnnotationByComponentShow()
•ProCombstateAnnotationErase()
•ProDrawingAnnotationErase()
•ProAnnotationShow()
•ProAnnotationIsShown()
•ProAnnotationIsInactive()
•ProAnnotationDisplay()
•ProAnnotationUndisplay()
•ProAnnotationUpdate()
•ProFeatur eParamsDisplay()
Thefunction ProAnnotationElementGet() returnstheannotation element
thatcontainstheannotation.
Thefunction ProAnnotationByViewShow() displaystheannotation ofthe
specifiedtypeintheselectedview.
Thefunction ProAnnotationByFeatureShow() displaystheannotation of
thespecifiedtypefortheselectedfeature.
Thefunction ProAnnotationByComponentShow() displaystheannotation
ofthespecifiedtypefortheselectedcomponent.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedtypefortheselectedfeature.
Thefunction ProAnnotationByComponentShow() displaystheannotation
ofthespecifiedtypefortheselectedcomponent.
FromCreoParametric 2.0M060onward,youcanspecifytheviewinwhichthe
annotations fortheselectedfeatureandcomponent mustbedisplayed. Forthe
functions ProAnnotationByFeatureShow() and
ProAnnotationByComponentShow(), specifytheviewwherethe
annotations mustbedisplayed. Ifyoupasstheinputargument viewasNULL,the
annotations aredisplayedinalltheviews.
Note
InCreoParametric 2.0M050,youmustpasstheinputargument viewas
NULL.
546 Creo®Parametric TOOLKIT User’sGuideThefollowingtypesofannotations aredisplayedforthefunctions
ProAnnotationByViewShow(), ProAnnotationByFeatureShow(),
andProAnnotationByComponentShow():
•PRO_DIMENSION
•PRO_REF_DIMENSION
•PRO_NOTE
•PRO_GTOL
•PRO_SURF_FIN
•PRO_AXIS
•PRO_SET_DATUM_TAG
•PRO_SYMBOL_INSTANCE
•PRO_DATUM_TARGET
Ifyouwanttodisplayanannotation whichisdependent onanotherannotation forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_REF_DIMENSION
•PRO_NOTE
•PRO_GTOL
•PRO_SURF_FIN
•PRO_AXIS
•PRO_SET_DATUM_TAG
•PRO_SYMBOL_INSTANCE
•PRO_DATUM_TARGET
Ifyouwanttodisplayanannotation whichisdependent onanotherannotation for
itsdisplayinthedrawing,thentheCreoParametric TOOLKITapplication must
firstdisplaytheparentannotation. Onlyaftertheparentannotation isdisplayed,
theapplication candisplayitsdependent annotations. Forexample,ifageometric
toleranceisplacedonadimension, thentheapplication mustcallthefunction
ProAnnotationByViewShow() forPRO_DIMENSION type.Thedimension
isdisplayed. Todisplaythegeometric tolerance,callthefunction
ProAnnotationByViewShow() forPRO_GTOL. Thesamelogicappliesfor
thefunctions ProAnnotationByFeatureShow(), and
ProAnnotationByComponentShow().
Thefunction ProCombstateAnnotationErase() removesanannotation
fromthedisplayforthespecifiedcombined state.
Thefunction ProDrawingAnnotationErase() removesanannotation from
thedisplayforthespecifieddrawing.Theannotation isnotshowninthespecified
drawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfromthedisplayforthespecifiedcombined state.
Thefunction ProDrawingAnnotationErase() removesanannotation from
thedisplayforthespecifieddrawing.Theannotation isnotshowninthespecified
drawing.
Note
Theannotation whichwasremovedfromthedisplayusingthefunctions
ProCombstateAnnotationErase() and
ProDrawingAnnotationErase() willbecomevisibleagain,onlyifthe
function ProAnnotationShow() iscalledtoexplicitlydisplaythe
annotation.
Thefunction ProAnnotationShow() showstheannotation inthecurrent
combined state.Theannotation willbevisibleuntilitisexplicitlyerasedfromthe
combined state.Thefunctionalsoaddsthespecifiedannotation tothecurrent
Annotations: Annotation FeaturesandAnnotations 547combined state,ifnotadded.Ifthespecifiedannotation hasbeenerased,thenthe
functionchangesthedisplaystatusoftheerasedannotation andmakesitvisiblein
thecombined state,thatis,itunerasestheannotation.
Thisfunctionisalsocapableofshowinganannotation inadrawingviewsimilarxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionchangesthedisplaystatusoftheerasedannotation andmakesitvisiblein
thecombined state,thatis,itunerasestheannotation.
Thisfunctionisalsocapableofshowinganannotation inadrawingviewsimilar
totheCreoParametric command ShowandErase.Thisfunctionsupersedes the
functions ProDimensionShow() andProNoteDisplay().
Thefunction ProAnnotationIsShown() returnsthedisplaystatusofthe
annotation inthecurrentcombined stateordrawing.
Note
Togetthedisplaystatusofsetdatumtagsinadrawing,usethefunction
ProDrawingSetDatumTagIsShown().
Thefunction ProAnnotationIsInactive() indicateswhetherthe
annotation canbeshownornot.Anannotation becomesinactiveifalltheweak
references itpointstohavebeenlostorconsumed.
Thefunctions ProAnnotatonDisplay() and
ProAnnotationUndisplay() temporarily displayandremoveanannotation
fromthedisplayforthespecifiedcombined stateordrawing.Thefunctions
ProAnnotatonDisplay() andProAnnotationUndisplay() shouldbe
usedtogether.Toeditashownannotation, itmustbefirstremovedtemporarilyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfromthedisplayforthespecifiedcombined stateordrawing.Thefunctions
ProAnnotatonDisplay() andProAnnotationUndisplay() shouldbe
usedtogether.Toeditashownannotation, itmustbefirstremovedtemporarily
fromdisplayusingthefunction ProAnnotationUndisplay() followedby
theeditingfunctioncalls,andfinallymustberedisplayed usingthefunction
ProAnnotationDisplay(), sothattheupdatedannotation iscorrectly
visibletotheuser.
Thefunction ProAnnotationUpdate() updatesthedisplayofanannotation,
butdoesnotactuallydisplayit.Iftheannotation isnotcurrentlydisplayed
(becauseitishiddenbylayerstatusorinactivegeometry), thetextextractedfrom
theannotation withthemode PRODISPMODE_NUMERIC mayincludecallout
symbols,insteadofthetextshowntotheuser.ProAnnotationUpdate()
informsCreoParametric toupdatethecontentsoftheannotation inordertocross-
referencethesecalloutvalues.Thisfunctionsupports3Dmodelnotesofthetype
ProNote anddetailnotesofthetypeProDtlnote.
Whenyouwanttoforcethedisplayofdimensions orparameters, geometricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferencethesecalloutvalues.Thisfunctionsupports3Dmodelnotesofthetype
ProNote anddetailnotesofthetypeProDtlnote.
Whenyouwanttoforcethedisplayofdimensions orparameters, geometric
tolerances (gtols),andsoononasinglefeature,usethefunction
ProFeatureParamsDisplay().
548 Creo®Parametric TOOLKIT User’sGuideNote
•Thefunction ProAnnotationDisplay() supersedes thefunctions
ProDimensionShow() andProGtolShow().
•Thefunction ProAnnotationUndisplay() supersedes thefunctions
ProDimensionErase() andProGtolErase().
•Thefunction ProDimensionDisplayUpdate() issuperseded bya
combination ofProAnnotationDisplay() and
ProAnnotationUndisplay().
Converting Annotations toLatestVersion
Functions Introduced:
•ProAnnotationNeedsConversion()
•ProAnnotationLegacyConvert()
Thefunction ProAnnotationNeedsConversion() returnstrueinthe
followingcases:
•Annotations createdinreleasesearlierthanCreoParametric 4.0F000
•Annotations createdusingthedeprecated functions ProGtolCreate() or
ProSetdatumtagCreate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingcases:
•Annotations createdinreleasesearlierthanCreoParametric 4.0F000
•Annotations createdusingthedeprecated functions ProGtolCreate() or
ProSetdatumtagCreate()
Theinputargument annotation canbeagtol,referencedimension, driven
dimension, setdatumtag,ordatumtagwhichneedstobeconverted.
Thefunctionreturnsthefollowingvaluesfortheoutputargument needs_
conversion:
•PRO_B_TRUE—When theannotation needsconversion.
•PRO_B_FALSE—When theannotation isalreadyconverted.
Thefunction ProAnnotationLegacyConvert() convertsannotations to
thelatestCreoParametric version.
Youcancallthefunction ProAnnotationLegacyConvert() onlyifthe
function ProAnnotationNeedsConversion() returnstrue.
Annotation TextStyles
Functions Introduced:
•ProAnnotationT extstyleGet()
Annotations: Annotation FeaturesandAnnotations 549•ProAnnotationT extstyleSet()
•ProTextStyleFr ee()
Thefunction ProAnnotationTextstyleGet() retrievesthetextstylefor
thespecifiedannotation. Theinputargumentsare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProTextStyleFr ee()
Thefunction ProAnnotationTextstyleGet() retrievesthetextstylefor
thespecifiedannotation. Theinputargumentsare:
•annotation—Specifies theannotation.
•drawing—Specifies adrawingonlywhentheannotation isownedbythesolid,
butisdisplayedinthedrawing.
•comp_path—Specifies thecomponent pathtothesolidthatownsthe
annotation.
Usethefunction ProTextStyleFree() tofreetheallocateddatastructure.
Themethod ProAnnotationTextstyleSet() setsthetextstyleforthe
specifiedannotation.
Annotation Orientation
AnAnnotation Orientation referstotheannotation planeortheparallelplanein
whichtheannotation lies,theviewingdirection,andthetextrotation.Youcan
definetheannotation orientation usingadatumplaneorflatsurface,anamed
view,orasflattoscreen.Iftheorientation isdefinedbyadatumplane,youcan
setitsreferencetofrozenordriven;where frozenindicatesthatthe
referencetothedatumplaneornamedviewhasbeenremoved.
Functions Introduced:
•ProAnnotationplaneCre ate()
•ProAnnotationplaneFr omV iewCr eate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferencetothedatumplaneornamedviewhasbeenremoved.
Functions Introduced:
•ProAnnotationplaneCre ate()
•ProAnnotationplaneFr omV iewCr eate()
•ProAnnotationplaneFlatT oScree nCreate()
•ProAnnotationplaneT ypeGet()
•ProAnnotationplaneRefer enceGet()
•ProAnnotationplanePlaneGet()
•ProAnnotationplaneV ectorGet()
•ProAnnotationplaneFr ozenGet()
•ProAnnotationplaneFr ozenSet()
•ProAnnotationplaneForc etoplaneflagGet()
•ProAnnotationplaneForc etoplaneflagSet()
•ProAnnotationplaneV iewnameGet()
•ProAnnotationplaneAngleGet()
•ProAnnotationplaneActiveGet()
550 Creo®Parametric TOOLKIT User’sGuide•ProMdlAnnotplanesFr omGalleryCollect()
•ProMdlAnnotationplanesCollect()
•ProAnnotationplaneNamesGet()
•ProAnnotationplaneByNameInit()
•ProAnnotationplaneNameAssign()
•ProAnnotationplaneAddT oGallery()
•ProAnnotationplaneRemoveFr omGallery()
•ProAnnotationRotate()
Thefunction ProAnnotationplaneCreate() createsanewannotation
planefromeitheradatumplane,aflatsurface,oranexistingannotation thatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProAnnotationplaneRemoveFr omGallery()
•ProAnnotationRotate()
Thefunction ProAnnotationplaneCreate() createsanewannotation
planefromeitheradatumplane,aflatsurface,oranexistingannotation that
alreadycontainsanannotation plane.
Thefunction ProAnnotationplaneFromViewCreate() createsanew
annotation planefromasavedmodelview.
Thefunction ProAnnotationplaneFlatToScreenCreate() returnsthe
annotation planeitemrepresenting aflat-to-screen annotation inthemodel.This
functiontakesaProBoolean inputargument by_scr een_point, whichidentifies
whethertheannotations onthisplanearelocatedbyscreenpoints,orbymodel
units.
Note
Youcanonlyplacenotes,surfacefinishes,andsymbolsasflattoscreen.
Dimensions, geometric tolerances andsetdatumtagsarenotsupported asflat-
to-screenannotations.
Usethefunction ProAnnotationplaneTypeGet() toobtaintheannotation
planetype.Itcanhaveoneofthefollowingvalues:
•PRO_ANNOTATIONPLANE_REFERENCE—The annotation planeiscreatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxto-screenannotations.
Usethefunction ProAnnotationplaneTypeGet() toobtaintheannotation
planetype.Itcanhaveoneofthefollowingvalues:
•PRO_ANNOTATIONPLANE_REFERENCE—The annotation planeiscreated
fromadatumplaneoraflatsurface,andcanbefrozenorbeassociative tothe
reference.
•PRO_ANNOTATIONPLANE_NAMED_VIEW—The annotation planeiscreated
fromanamedvieworaviewinthedrawing.
•PRO_ANNOTATIONPLANE_FLATTOSCREEN_BY_MODELPNT—The
annotation planeisflat-to-screen andannotations arelocatedbymodelunits.
•PRO_ANNOTATIONPLANE_FLATTOSCREEN_BY_SCREENPNT—The
annotation planeisflat-to-screen andannotations arelocatedbyscreenpoints.
•PRO_ANNOTATIONPLANE_FLATTOSCREEN_LEGACY—The annotation
usesalegacyflat-to-screen format(locatedinmodelspace).
Annotations: Annotation FeaturesandAnnotations 551Thefunction ProAnnotationplaneReferenceGet() returnstheplanar
surfaceusedastheannotation plane.
Thefunction ProAnnotationplanePlaneGet() returnsthegeometryofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfaceusedastheannotation plane.
Thefunction ProAnnotationplanePlaneGet() returnsthegeometryof
theannotation planeintermsoftheProPlanedata objectcontaining theorigin
andorientation oftheannotation plane.
Thefunctions ProAnnotationplaneFrozenGet() and
ProAnnotationplaneFrozenSet() determine andassign,respectively ,
whethertheannotation orientation isfrozenordrivenbyreferencetotheplane
geometry.Thesefunctionsareapplicable onlyforannotation planesgovernedby
references.
Thefunctions ProAnnotationplaneForcetoplaneflagGet() and
ProAnnotationplaneForcetoplaneflagSet() returnandassign,
respectively ,thevalueoftheProBoolean argument force_to_plane foran
annotation plane.IfthisargumentissettoPRO_B_TRUE, thentheannotations
thatreferencetheannotation planeareplacedonthatplane.Iftheannotation
orientation isnotfrozen,thatis,drivenbythereferenceplane,andifthe
referenceplaneismoved,thentheannotations alsomovealongwiththeplane.
Thefunction ProAnnotationplaneViewnameGet() obtainsthenameofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorientation isnotfrozen,thatis,drivenbythereferenceplane,andifthe
referenceplaneismoved,thentheannotations alsomovealongwiththeplane.
Thefunction ProAnnotationplaneViewnameGet() obtainsthenameof
theviewthatwasoriginallyusedtodetermine theorientation oftheannotation
plane.
Note
Ifthenamedvieworientation hasbeenchangedaftertheannotation planewas
created,theorientation oftheplanewillnotmatchthecurrentorientation of
theview.
Thefunction ProAnnotationplaneVectorGet() returnsthenormalvector
thatdetermines theviewingdirectionoftheannotation plane.
Thefunction ProAnnotationplaneAngleGet() returnsthecurrent
rotationangleindegreesforagivenannotation planeandthetextorientation of
allannotations onthatplane.
Thefunction ProAnnotationplaneActiveGet() returnstheactive
annotation planeinthespecifiedmodel.
Thefunction ProMdlAnnotplanesFromGalleryCollect() collectsthe
namesofalltheannotation planesinthegallery.Theoutputargument namesisa
ProArray ofnamesinthegallery.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMdlAnnotplanesFromGalleryCollect() collectsthe
namesofalltheannotation planesinthegallery.Theoutputargument namesisa
ProArray ofnamesinthegallery.Usethefunction
ProWstringArrayFree() tofreetheallocatedmemory.Thefunctionreturns
theerrorPRO_TK_EMPTY iftherearenoannotation planesinthegallery.
552 Creo®Parametric TOOLKIT User’sGuideThefunction ProMdlAnnotationplanesCollect() collectsthenamesof
allthenamedannotation planesinthespecifiedmodel.Thefunctionreturnsthe
errorPRO_TK_EMPTY iftherearenoannotation planesinthemodel.
Thefunction ProAnnotationplaneNamesGet() returnsthenamesofthe
specifiedannotation plane.
Thefunction ProAnnotationplaneByNameInit() findsandreturnsthe
annotation planewiththespecifiedname.ThefunctionreturnstheerrorPRO_
TK_E_NOT_FOUND iftheannotation planewiththespecifiednamedoesnot
exist.
Thefunction ProAnnotationplaneNameAssign() assignsanametothe
specifiedannotation plane.ThefunctionreturnstheerrorPRO_TK_E_NOT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTK_E_NOT_FOUND iftheannotation planewiththespecifiednamedoesnot
exist.
Thefunction ProAnnotationplaneNameAssign() assignsanametothe
specifiedannotation plane.ThefunctionreturnstheerrorPRO_TK_E_NOT_
FOUNDifthespecifiedannotation planedoesnotexistinthemodel.Thefunction
returnstheerrorPRO_TK_E_FOUND ifanannotation planewiththespecified
namealreadyexistsinthemodel.
Usethefunction ProAnnotationplaneAddToGallery() toaddan
annotation planewiththespecifiednametothegallery.
Usethefunction ProAnnotationplaneRemoveFromGallery() to
removetheannotation planewiththespecifiednamefromthegallery.
Thefunction ProAnnotationRotate() rotatesagivenannotation bythe
specifiedangle.Thismovestheannotation toanewannotation planewiththe
appropriate rotationassigned.Otherannotations ontheannotation’ scurrentplane
areunaffectedbythisfunction.
Note
Youcanonlyrotateannotations thatbelongtoannotation elementsusingthe
abovefunction.
Annotation Associativityxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxareunaffectedbythisfunction.
Note
Youcanonlyrotateannotations thatbelongtoannotation elementsusingthe
abovefunction.
Annotation Associativity
Thefunctionsdescribedinthissectionallowyoutoensureassociativity between
shownannotations indrawingsand3Dmodels.Youcanindependently controlthe
positionassociativity andattachment associativity ofadrawingannotation.
Annotations: Annotation FeaturesandAnnotations 553Note
•Drawingannotations canhaveonlyuni-directional associativity ,thatis,
changestothepositionandattachment oftheannotation inthe3Dmodelare
reflectedfortheannotation inthedrawingview,butnotvice-versa.
•Youcannotmodifythepositionassociativity andattachment associativity ofa
drawingannotation fromthe3Dmodel.
•Youcannotmakefree,flat-to-screen annotations inadrawingviewassociative
totheannotations inthe3Dmodel.
•Annotation properties suchastext,jogs,breaks,skew,witnesslineclippings,
andfliparrowstatesarenotassociative.
Functions Introduced:
•ProAnnotationIsAssociative()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtotheannotations inthe3Dmodel.
•Annotation properties suchastext,jogs,breaks,skew,witnesslineclippings,
andfliparrowstatesarenotassociative.
Functions Introduced:
•ProAnnotationIsAssociative()
•ProAnnotationPositionUpdate()
•ProAnnotationAttachmentUpdate()
Thefunction ProAnnotationIsAssociative() identifiesifagiven
annotation inadrawingviewisassociative totheannotation inthe3Dmodel.It
hasthefollowingoutputarguments:
•assoc_position—Specifies ifthepositionoftheannotation isassociative.
•assoc_attach—Specifies theattachment associativity .Ittakesoneofthe
followingvalues:
○PRO_ANNOTATTACH_ASSOCIATIVITY_PARTIAL—Specifies thatthe
drawingannotation ispartiallyassociative.
○PRO_ANNOTATTACH_ASSOCIATIVITY_FULL—Specifies thatthe
drawingannotation isfullyassociative.
•future_use—This argumentisforfutureuse.
Thefunction ProAnnotationPositionUpdate() updatesthepositionof
thedrawingannotation, andmakesitassociative tothepositionoftheannotation
inthe3Dmodel.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•future_use—This argumentisforfutureuse.
Thefunction ProAnnotationPositionUpdate() updatesthepositionof
thedrawingannotation, andmakesitassociative tothepositionoftheannotation
inthe3Dmodel.
Note
Youcanupdatetheassociative positiononlyfordrawingannotations thathave
theirplacement basedonmodelcoordinates.
554 Creo®Parametric TOOLKIT User’sGuideThefunction ProAnnotationAttachmentUpdate() updatesthe
attachment ofthedrawingannotation, andmakesitassociative totheattachment
oftheannotation inthe3Dmodel.Associative attachment ofanannotation refers
toboth–itsreferences anditsattachment pointonitsreferences.
Note
Youcanupdatetheassociative attachment onlyfordrawingannotations that
areattachedtothegeometry.
InteractiveSelection
Annotation features,annotation elements,andannotations canbeselected
interactively using ProSelect() orcanbeobtainedfromtheselectionbuffer
usingthefunction ProSelbufferSelectionsGet().
Formoreinformation oninteractive selectionrefertochapterUserInterface:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinteractively using ProSelect() orcanbeobtainedfromtheselectionbuffer
usingthefunction ProSelbufferSelectionsGet().
Formoreinformation oninteractive selectionrefertochapterUserInterface:
Selectiononpage495.
DisplayModes
Functions Introduced:
•ProDisplaymodeGet()
•ProDisplaymodeSet()
Thesefunctionsspecifywhetherthedisplayofdimensions showssymbolsor
values,andenablesyoutoswitchthemode.Thisistheequivalent totheCreo
Parametric commandSwitchDimensions intheRelationsdialogbox.
Designating Dimensions andSymbols
FunctionIntroduced:
•ProSymbolDesignate()
•ProSymbolUndesignate()
•ProSymbolDesignationV erify()
Thefunction ProSymbolDesignate() designates adimension, dimension
tolerance,geometric toleranceorsurfacefinishsymboltothespecifiedmodel.
Thefunction ProSymbolUndesignate() undesignates thedimension,
dimension tolerance,geometric toleranceorsurfacefinishsymbolfromthe
specifiedmodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProSymbolUndesignate() undesignates thedimension,
dimension tolerance,geometric toleranceorsurfacefinishsymbolfromthe
specifiedmodel.
Annotations: Annotation FeaturesandAnnotations 555Thefunction ProSymbolDesignationVerify() determines ifadimension,
dimension tolerance,geometric toleranceorsurfacefinishsymbolhasbeen
designated toamodel.
Dimensions
TheProDimension Object
TheProDimension objecthandleisaDHandlethatisequivalent to
ProModelitem. Theownerfieldcanbeasolidoradrawing,depending upon
wherethedimension isstored.Dimensions createdindrawingmodemaybe
storedinthedrawingorinthesoliddepending uponthesettingofthe
config.pro option CREATE_DRAWING_DIMS_ONLY. Thetypefieldis
either PRO_DIMENSION orPRO_REF_DIMENSION. TheIDistheintegerused
toidentifythedimension insideCreoParametric. Itcorresponds tothenumerical
partofthedefaultsymbolassignedtothedimension whenitiscreated.
TheProDimension objectalsoinheritsfromProModelitem, whichmeans
thatfunctionssuchasProModelitemInit() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpartofthedefaultsymbolassignedtothedimension whenitiscreated.
TheProDimension objectalsoinheritsfromProModelitem, whichmeans
thatfunctionssuchasProModelitemInit() and
ProSelectionModelitemGet() canbeusedforit
(ProDimensionSymbolGet() andProDimensionSymbolSet() are
recommended forthispurpose,insteadofProModelitemNameGet() and
ProModelitemNameSet()).
VisitingDimensions
Functions Introduced:
•ProSolidDimensionV isit()
•ProDrawingDimensionV isit()
•ProDimensionSymbolGet()
•ProDimensionV alueGet()
•ProDimensionPar entGet()
•ProDimensionT ypeGet()
•ProDimensionNomvalueGet()
•ProDimensionIsDisplayRoundedV alue()
•ProDimensionDisplayRoundedV alueSet()
•ProDimensionDisplayedV alueGet()
•ProDimensionOverridevalueGet()
•ProDimensionV aluedisplayGet()
•ProDimensionIsFractional()
556 Creo®Parametric TOOLKIT User’sGuide•ProDimensionDecimalsGet()
•ProDimensionDenominatorGet()
•ProDimensionIsReldriven()
•ProDimensionIsRegenednegative()
•ProDimensionBoundGet()
•ProDimensionOwnerfeatur eGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDimensionDenominatorGet()
•ProDimensionIsReldriven()
•ProDimensionIsRegenednegative()
•ProDimensionBoundGet()
•ProDimensionOwnerfeatur eGet()
•ProDimensionIsAccessibleInModel()
•ProDimensionIsSignDriven()
•ProDimensionDisplayFormatGet()
•ProDimensionOriginSideGet()
•ProSelectionDimW itnessLineGet()
Thetwovisitfunctions ProSolidDimensionVisit() and
ProDrawingDimensionVisit() conformtotheusualstyleofvisit
functions. (RefertosectionVisitFunctions onpage62inthechapter
Fundamentals onpage22.)Adimension isstoredinasolidifitisa“shown”
dimension, thatis,ifitwascreatedautomatically byCreoParametric aspartofthe
featuredefinition. Adimension willalsobestoredinasolidifitwascreatedin
drawingmodewhiletheconfig.pro option CREATE_DRAWING_DIMS_
ONLYwassettoNO.
Thefunction ProDimensionSymbolGet() returnsthesymbol(thename)of
thespecifieddimension.
Thefunction ProDimensionValueGet() returnsthevalueofthedimension.
Somefeaturedimensions aredependent ondimensions ofotherfeatures.Toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifieddimension.
Thefunction ProDimensionValueGet() returnsthevalueofthedimension.
Somefeaturedimensions aredependent ondimensions ofotherfeatures.To
modifythedependent dimension, youmustgettheparentdimension andmodify
it.Usethefunction ProDimensionParentGet() togettheparentdimension
ofthespecifieddependent dimension. Forexample,considerasketchfeature,
whichisusedtocreateanextrudefeature.Inthiscase,thesectiondimensions of
theextrudefeaturedependonthedimensions ofthesketchfeature.Tomodifythe
sectiondimensions ofextrudefeature,thedimensions ofthesketchfeaturemust
beretrievedandmodified.
Note
Multipledimensions maydependonasingleparentdimension.
Thefunction ProDimensionTypeGet() returnsthetypeofthedimension in
termsofthefollowingvalues:
•PRODIMTYPE_LINEAR
Annotations: Annotation FeaturesandAnnotations 557•PRODIMTYPE_RADIUS
•PRODIMTYPE_DIAMETER
•PRODIMTYPE_ANGLE
•PRODIMTYPE_ARC_LENGTH
Thefunction ProDimensionNomvalueGet() returnsthenominalvalueofaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations: Annotation FeaturesandAnnotations 557•PRODIMTYPE_RADIUS
•PRODIMTYPE_DIAMETER
•PRODIMTYPE_ANGLE
•PRODIMTYPE_ARC_LENGTH
Thefunction ProDimensionNomvalueGet() returnsthenominalvalueofa
dimension. Thefunctionreturnsthenominalvalueevenifthedimension issetto
theupperorlowerbound.Thenominalvalueisreturnedindegreesforanangular
dimension andinthesystemofunitsforothertypesofdimensions.
Usethefunction ProDimensionIsDisplayRoundedValue() to
determine whetherthespecifieddimension issettodisplayitsroundedoffvalue.
InCreoParametric TOOLKIT, aroundedoffvalueisadecimalvaluethat
containsonlythedesirednumberofdigitsafterthedecimalpoint.Forexample,if
adimension hasthestoredvalue 10.34132 andyouwanttodisplayonlytwo
digitsafterthedecimalpoint,youmustroundoffthestoredvaluetotwodecimal
places.Thus,roundingoffconverts 10.34132 to10.34.
Usethefunction ProDimensionDisplayRoundedValueSet() tosetthe
attributeofthegivendimension todisplayeithertheroundedoffvalueorthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxplaces.Thus,roundingoffconverts 10.34132 to10.34.
Usethefunction ProDimensionDisplayRoundedValueSet() tosetthe
attributeofthegivendimension todisplayeithertheroundedoffvalueorthe
storedvalue.Youcanusethisfunctionforalldimensions, exceptangular
dimensions createdpriortoPro/ENGINEER Wildfire4.0,ordinatebaseline
dimensions, anddimensions oftypeDIM_IPAR_INT. Forthesedimensions, the
functionsreturnsanerrorstatus PRO_TK_NOT_VALID.
Ifyouchoosetodisplaytheroundedoffvalue,thefunction
ProDimensionDisplayedValueGet() retrievesthedisplayedrounded
valueofthespecifieddimension. Otherwise, itretrievesthestoredvalue.
Thefunction ProDimensionOverridevalueGet() returnstheoverride
valueforadimension. Thedefaultoverridevalueiszero.
Note
Theoverridevalueisavailableonlyfordrivendimensions.
Usethefunction ProDimensionValuedisplayGet() toobtainthetypeof
valuedisplayedforadimension. Thevalidtypesare:
•PRO_DIMVALUEDISPLAY_NOMINAL—Displays theactualvalueofthe
dimension alongwiththetolerancevalue.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluedisplayedforadimension. Thevalidtypesare:
•PRO_DIMVALUEDISPLAY_NOMINAL—Displays theactualvalueofthe
dimension alongwiththetolerancevalue.
•PRO_DIMVALUEDISPLAY_OVERRIDE—Displays theoverridevaluefor
thedimension alongwiththetolerancevalue.
•PRO_DIMVALUEDISPLAY_HIDE—Displays onlythetolerancevalueforthe
dimension.
558 Creo®Parametric TOOLKIT User’sGuideThefunction ProDimensionIsFractional() returnswhetherthe
dimension isexpressed intermsofafractionratherthanadecimal.Ifthe
dimension isdecimal,thefunction ProDimensionDecimalsGet() outputs
thenumberofdecimalsdigitsthataresignificant; ifthedimension isfractional,
thefunction ProDimensionDenominatorGet() returnsthevalueofthe
largestpossibledenominator usedtodefinethefractionalvalue.
Thefunction ProDimensionIsReldriven() returnswhetherthedimension
isdrivenbyarelation.
Thefunction ProDimensionIsRegenednegative() returnswhetherthe
dimension reallyhasanegativevalueinrelationtoitsoriginaldefinition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisdrivenbyarelation.
Thefunction ProDimensionIsRegenednegative() returnswhetherthe
dimension reallyhasanegativevalueinrelationtoitsoriginaldefinition.
Dimensions arealwaysdisplayedinCreoParametric withpositivevalues,and
ProDimensionValueGet() willalwaysreturnapositivevalue,sothis
functionisneededtoshowwhetheradimension hasbeen“flipped”asaresultof
beingassignedanegativevalueduringthelastregeneration.
Thefunction ProDimensionBoundGet() returnstheboundstatusofa
dimension.
Thefunction ProDimensionFeatureGet() hasbeendeprecated. Usethe
function ProDimensionOwnerfeatureGet() instead.
Thefunction ProDimensionOwnerfeatureGet() returnsthefeaturethat
ownsthespecifieddimension.
Note
Fordimensions orreferencedimensions inannotation elements,thefunction
ProDimensionOwnerfeatureGet() returnstheannotation featurethat
directlyownstheannotation element.
Thefunction ProDimensionIsAccessibleInModel() identifiesifa
specifieddimension isownedbythemodel.Bydefault,thedimension is
accessible inthemodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdirectlyownstheannotation element.
Thefunction ProDimensionIsAccessibleInModel() identifiesifa
specifieddimension isownedbythemodel.Bydefault,thedimension is
accessible inthemodel.
Whenyousetanegativevaluetoadimension, itwilleitherchangethedimension
tothisnegativevalue,orflipthedirectionarounditsreferenceandshowa
positivevaluedimension instead.Usethefunction
ProDimensionIsSignDriven() tocheckthis.Thefunctionreturnsthe
followingvaluesfortheoutputargument is_sign_driven:
•PRO_B_TRUE—When thenegativesigninthedimension valueisusedtoflip
thedirection.
•PRO_B_FALSE—When thenegativesignisusedtoindicateanegativevalue,
thatis,thedimension isnegative.
Theconfiguration option show_dim_sign whensettoyesallowsyouto
displaynegativedimensions intheCreoParametric userinterface.
Annotations: Annotation FeaturesandAnnotations 559Whentheoptionissetno,thedimensions alwaysshowpositivevalue.However,
inthiscase,ifyousetanegativevalueforthedimension, thedirectionisflipped.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations: Annotation FeaturesandAnnotations 559Whentheoptionissetno,thedimensions alwaysshowpositivevalue.However,
inthiscase,ifyousetanegativevalueforthedimension, thedirectionisflipped.
Note
Somefeaturetypes,suchas,dimensions forcoordinate systemsanddatum
pointoffsets,alwaysshownegativeorpositivevalues,eveniftheoptionisset
tono.Thesefeaturesdonotdependontheconfiguration option.
Thefunction ProDimensionDisplayFormatGet() retrievestheformatin
whichthespecifieddimension isdisplayed. Theenumerated datatype
ProDimensionDisplayFormat returnsthefollowingvalues:
•PRO_DIM_DISPLAY_DECIMAL—Specifies thatthedimension isdisplayed
indecimalformat.
•PRO_DIM_DISPLAY_FRACTIONAL—Specifies thatthedimension is
displayedinfractionalformat.
Fordimensions, sometimes itmayberequiredtoindicatetheoriginorstartof
measurement. Theoriginisindicatedbyplacingthedimension originsymbolon
thewitnessline.Thefunction ProDimensionOriginSideGet() retrievesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmeasurement. Theoriginisindicatedbyplacingthedimension originsymbolon
thewitnessline.Thefunction ProDimensionOriginSideGet() retrieves
thewitnesslinewhichissetastheoriginforadimension. Theoutputargument
dim_sidereturnstheindexofwitnessline.Ifdimension originhasnotbeensetfor
thespecifieddimension, theargumentreturns -1.
Youcanplaceannotations suchas,geometric tolerances anddatumfeature
symbol,onthewitnesslinesofdimensions. Thefunction
ProSelectionDimWitnessLineGet() getsinformation aboutthe
dimension whichhasanannotation attachedtoitswitnessline.Youmustgetthe
inputobject ProSelection fromtheannotation whichisattachedtothe
witnessline.Forexample,iftheleaderofageometric toleranceisattachedtothe
witnesslineofadimension, theProSelection objectisreturnedbythe
function ProGtolAttachLeadersGet(). Theoutputargumentsare:
•dimension—Specifies apointertothedimension whichisassociated withthe
selectedwitnessline.
•wline_side—Specifies theindexofthewitnesslinetowhichtheannotation is
attached.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•dimension—Specifies apointertothedimension whichisassociated withthe
selectedwitnessline.
•wline_side—Specifies theindexofthewitnesslinetowhichtheannotation is
attached.
•location—Specifies thelocationonthewitnesslinewheretheannotation is
attached.
560 Creo®Parametric TOOLKIT User’sGuideExample2:ChangingtheDisplayedValueofSelected
ModelDimensiontoRoundedorNon-Rounded
ThesamplecodeinthefileUgDimDisplayRounded.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_dims,
showsthedisplayedvalueofaselectedmodeldimension torounded/non-rounded.
ModifyingDimensions
Functions Introduced:
•ProDimensionSymbolSet()
•ProDimensionV alueSet()
•ProDimensionOverridevalueSet()
•ProDimensionV aluedisplaySet()
•ProDimensionDecimalsSet()
•ProDimensionDenominatorSet()
•ProDimensionBoundSet()
•ProDimensionDimensionReset()
•ProDimensionBasicSet()
•ProDimensionInspectionSet()
•ProDimensionElbowSet()
•ProDimensionArro wtypeSet()
•ProDimensionSimpleBr eakCr eate()
•ProDimensionJogCr eate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDimensionDimensionReset()
•ProDimensionBasicSet()
•ProDimensionInspectionSet()
•ProDimensionElbowSet()
•ProDimensionArro wtypeSet()
•ProDimensionSimpleBr eakCr eate()
•ProDimensionJogCr eate()
•ProDimensionW itnesslineErase()
•ProDimensionW itnesslineShow()
•ProDimensionDisplayFormatSet()
•ProDimensionOriginSideSet()
•ProDimensionEnvelopeGet()
Thefunction ProDimensionSymbolSet() allowsyoutochangethesymbol
(thename)ofadimension. Youcanusethisfunctiononlywithsoliddimensions.
Note
ThefunctionwillreturntheerrorPRO_TK_NO_CHANGE ifthespecified
symbolalreadyexistsforanotherdimension inthemodel.
Annotations: Annotation FeaturesandAnnotations 561Thefunction ProDimensionValueSet() changesthevalueofadimension.
Itdoesnotallowyoutochangethevalueofanydimension whosevalueisdriven
insomeotherway,forexample,adrivenorreferencedimension oradimension
thatisdrivenbyarelation.
Thefunction ProDimensionOverridevalueSet() assignstheoverride
valueforadimension. Thisvalueisrestrictedtorealnumbers.Thedefaultxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatisdrivenbyarelation.
Thefunction ProDimensionOverridevalueSet() assignstheoverride
valueforadimension. Thisvalueisrestrictedtorealnumbers.Thedefault
overridevalueiszero.
Note
Youcansettheoverridevalueonlyfordrivendimensions.
Thefunction ProDimensionValuedisplaySet() setsthetypeofvalueto
bedisplayedforadimension.
Thefunction ProDimensionDecimalsSet() setsthenumberofdecimal
placesforadecimaldimension.
Whenyoucallthefunction ProDimensionDecimalsSet() foradriving
dimension:
•Ifthenumberofdecimalplacesrequiredtodisplaythestoredvalueofthe
dimension isgreaterthanthenumberofdecimalplacesspecifiedinthe
function ProDimensionDecimalsSet() andtheRoundDisplayed Value
attributeofthedimension isON,thestoredvalueisunchanged. Onlythe
displayednumberofdecimalplacesischangedandthedisplayedvalueis
updatedaccordingly .
Forexample,consideradimension withitsstoredvalueas12.12323andthe
RoundDisplayed Valueattributeofthedimension issettoON.Ifthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxupdatedaccordingly .
Forexample,consideradimension withitsstoredvalueas12.12323andthe
RoundDisplayed Valueattributeofthedimension issettoON.Ifthefunction
ProDimensionDecimalsSet() setsthenumberofdecimalplacesto3,
thestoredvalueofthedimension isunchanged, thatis,thestoredvaluewillbe
12.12323. Thedisplayedvalueofthedimension isroundedto3decimal
places,thatis,12.123.TheRoundDisplayed Valueattributeisnotchanged.
•Ifthenumberofdecimalplacesrequiredtodisplaythestoredvalueofthe
dimension isgreaterthanthenumberofdecimalplacesspecifiedinthe
function ProDimensionDecimalsSet() andtheRoundDisplayed Value
attributeofthedimension isOFF,thenumberofdecimalplacesofthe
dimension ismodifiedandthestoredvalueisroundedtothespecifiednumber
ofdecimalplaces.
Forexample,consideradimension withitsstoredvalueas12.12323andthe
RoundDisplayed Valueattributeofthedimension isOFF.Ifthefunction
ProDimensionDecimalsSet() setsthedimension to3decimalplaces,
thenthestoredvalueofthedimension isroundedto3decimalplacesandisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRoundDisplayed Valueattributeofthedimension isOFF.Ifthefunction
ProDimensionDecimalsSet() setsthedimension to3decimalplaces,
thenthestoredvalueofthedimension isroundedto3decimalplacesandis
modifiedto12.123.Thedimension isdisplayedas12.123.
562 Creo®Parametric TOOLKIT User’sGuide•Ifthenumberofdecimalplacesrequiredtodisplaythestoredvalueofthe
dimension islessthanthenumberofdecimalplacesspecifiedinthefunction
ProDimensionDecimalsSet(), thenumberofdecimalplacesissetto
thespecifiedvalue.ThestatusoftheRoundDisplayed Valueattributeisnot
considered, asnochangeoranincreasetothenumberofdecimalplaceswill
havenoeffectonthestoredvalue.
Forexample,consideradimension withitsstoredvalueas12.12323. Ifthe
function ProDimensionDecimalsSet() setsthedimension to8decimal
placesandiftrailingzerosaredisplayed, thenthedimension isdisplayedas
12.12323000.
Foradrivendimension:
•Ifthenumberofdecimalplacessetbythefunctionisgreaterthanorequalto
thenumberofdecimalplacesrequiredtodisplaythestoredvalueofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx12.12323000.
Foradrivendimension:
•Ifthenumberofdecimalplacessetbythefunctionisgreaterthanorequalto
thenumberofdecimalplacesrequiredtodisplaythestoredvalueofthe
dimension, thedecimalplacesvalueischangedandnochangetotheRound
Displayed Valueattributeismade.
•Ifthenumberofdecimalplacesofthedimension islessthanthenumber
requiredtodisplaythestoredvalueofthedimension, theRoundDisplayed
ValueattributeisAUTOMATICALLYsettoONasitisnotpossibletochange
thestoredvalueofadrivendimension.
Note
Thevaluegivenfortheinputargumentdecimalsofthefunction
ProDimensionDecimalsSet() shouldbeanon-negative number.It
shouldbesuchthatwhenyouapplyeithertheupperorthelowervaluesofthe
tolerancetothegivendimension, thetotalnumberofdigitsbeforeandafter
thedecimalpointintheresultingvaluesdoesnotexceed13.
Thefunction ProDimensionDenominatorSet() setsthedenominator for
thefractionaldimensions. Whenyoucallthefunction
ProDimensionDenominatorSet():
•Thestoredvalueremainsunchanged if,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDimensionDenominatorSet() setsthedenominator for
thefractionaldimensions. Whenyoucallthefunction
ProDimensionDenominatorSet():
•Thestoredvalueremainsunchanged if,
○itcanbeexpressed asanexactfractionwiththegivendenominator ,
regardless ofwhethertheround-offattributeissetornot.
○thestoredvaluecannotbeexpressed asanexactfraction,buttheround-off
attributeisset.Inthiscase,thefractionistheapproximate representation
ofthestoredvalue.
•Thestoredvaluechangestothenearestfractionandtriggersaregeneration of
themodel,ifitcannotbeexpressed asanexactfractionwiththegiven
denominator andtheround-offattributeisnotset.
Annotations: Annotation FeaturesandAnnotations 563Thefunctions ProDimensionBoundSet() setstheboundstatusofthe
dimension.
Thefunction ProDimensionDimensionReset() setsthedimension tothe
valueithadattheendofthelastsuccessful regeneration. Youcanusethis
functiontorecoverfromafailedregeneration.
Thefunction ProDimensionBasicSet() andthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueithadattheendofthelastsuccessful regeneration. Youcanusethis
functiontorecoverfromafailedregeneration.
Thefunction ProDimensionBasicSet() andthefunction
ProDimensionInspectionSet() setthebasicandinspection notationsof
thedimension. Thesefunctionsareapplicable tobothdrivenanddriving
dimensions.
Note
Thebasicandinspection notationsofthedimension arenotavailablewhen
onlythetolerancevalueforadimension isdisplayed.
Thefunction ProDimensionElbowSet() setsthelengthoftheelbowforthe
specifieddimension inasolid.Thefunctioncanalsobeusedtosetthelengthof
theelbowforadimension inadrawing,wherethedimension iscreatedinasolid
andisdisplayedinadrawing.Toworkwithdimensions showninadrawing,pass
thenameofthedrawingintheinputargument drawing.
Thefunction ProDimensionSimpleBreakCreate() createsasimplebreak
onanexistingdimension witnessline.Theinputargumentsare:
•dimension—Specifies apointertothedimension whosewitnesslineisto
bebroken.
•drawing—Specifies thedrawinginwhichthedimension ispresent.Youcanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonanexistingdimension witnessline.Theinputargumentsare:
•dimension—Specifies apointertothedimension whosewitnesslineisto
bebroken.
•drawing—Specifies thedrawinginwhichthedimension ispresent.Youcan
specifyaNULLvalue.
•index—Specifies theindexofthewitnessline.Depending onwhichsideof
thedimension thewitnesslinelies,specifythevalueas1or2.Usethe
method ProDimlocationWitnesslinesGet togetthelocationofthe
witnesslineendpointsforadimension.
Note
Thisargumentisnotapplicable forordinate,radius,anddiameter
dimensions.
•break_start—Specifies thestartpointofthebreak.
•break_end—Specifies theendpointofthebreak.
564 Creo®Parametric TOOLKIT User’sGuideThefunction ProDimensionJogCreate() createsajogonanexisting
dimension witnessline.Theinputargumentsare:
•dimension—Specifies apointertothedimension wherethejogwillbe
created.
•drawing—Specifies thedrawinginwhichthedimension ispresent.Youcan
specifyaNULLvalue.
•index—Specifies theindexofthewitnessline.Depending onwhichsideofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreated.
•drawing—Specifies thedrawinginwhichthedimension ispresent.Youcan
specifyaNULLvalue.
•index—Specifies theindexofthewitnessline.Depending onwhichsideof
thedimension thewitnesslinelies,specifythevalueas1or2.Usethe
method ProDimlocationWitnesslinesGet togetthelocationofthe
witnesslineendpointsforadimension.
Note
Thisargumentisnotapplicable forordinate,radius,anddiameter
dimensions.
•jog_points—Specifies anarrayofpointstopositionthejog.Ifthe
specifiedwitnesslinehasnojogaddedtoit,thenyoumustspecifyminimum
twopointsthatis,thestartpointandendpointofthejog.
Note
Thefunctions ProDimensionSimpleBreakCreate() and
ProDimensionJogCreate() returntheerrortypePRO_TK_INVALID_
TYPEwhenbreaksandjogsarenotsupported forthespecifieddimension
type,forexample,diameterdimension.
ThefunctionsreturntheerrortypePRO_TK_ABORT whenitisnotpossibleto
createbreaksorjogsforthespecifieddimension witnessline.Forexample,if
youaddajogthatisduplicatetoanexistingjogonthedimension witnessline.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreatebreaksorjogsforthespecifieddimension witnessline.Forexample,if
youaddajogthatisduplicatetoanexistingjogonthedimension witnessline.
Thefunction ProDimensionArrowtypeSet() setsthearrowtypeforthe
specifiedarrowinadimension. Theinputargumentsare:
•dimension—Specifies thedimension.
•drawing—Specifies thedrawinginwhichthedimension isdisplayed. Toset
thearrowtypeintheownermodel,specifytheargumentvalueasNULL.
Annotations: Annotation FeaturesandAnnotations 565•arrow_index—Specifies theindexofthewitnessline.Depending onwhich
sideofthedimension thewitnesslinelies,specifythevalueas1or2.
Note
Thevalueofarrow_indexisignoredforordinateandradiusdimensions.
•arrow_type—Specifies thetypeofarrowusingtheenumerated datatype
ProLeaderType.
Thefunction ProDimensionWitnesslineErase() erasesaspecified
witnesslinefromthedimension. Theinputargumentsare:
•dimension—Specifies thedimension whosewitnesslinemustbeerased.This
argumentcannotbeNULL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDimensionWitnesslineErase() erasesaspecified
witnesslinefromthedimension. Theinputargumentsare:
•dimension—Specifies thedimension whosewitnesslinemustbeerased.This
argumentcannotbeNULL.
•drawing—Specifies thedrawinginwhichthedimension isdisplayed. Toerase
awitnesslinefromasolid,specifythisargumentasNULL.
•WitnesslineIndex—Specifies theindexofthewitnessline.Specifythevalueas
1or2depending onwhichsideofthedimension thewitnesslinelies.Usethe
method ProDimlocationWitnesslinesGet() togetthelocationof
thewitnesslineendpointsforadimension.
Usethefunction ProDimensionWitnesslineShow() toshowtheerased
witnesslineforthespecifieddimension.
Note
Thefunctions ProDimensionWitnesslineErase() and
ProDimensionWitnesslineShow() eraseandshowthewitnesslines
ofdimensions andreferencedimensions, respectively .Thesefunctionswork
withbothdrawingsandsolids.
Thefunction ProDimensionDisplayFormatSet() setstheformatin
whichthespecifieddimension mustbedisplayed.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofdimensions andreferencedimensions, respectively .Thesefunctionswork
withbothdrawingsandsolids.
Thefunction ProDimensionDisplayFormatSet() setstheformatin
whichthespecifieddimension mustbedisplayed.
Usethefunction ProDimensionOriginSideSet() tosetawitnesslineas
theoriginorstartofmeasurement forthespecifieddimension. Specifytheindex
ofthewitnesslineintheinputargument dim_side.Ifawitnesslineisalreadyset
asorigin,passdim_sideas-1toremovetheorigin.
Thefunction ProDimensionEnvelopeGet() returnstheenvelopeofaline
inthespecifieddimension. Whileretrievingcoordinates ofthedimension ina
specifiedsolid,ifthedimension isdisplayedinthesolidaswellasinthedrawing,
thedrawingmustnotbeactive.Theinputargumentsfollow:
•dimension—Dimension
566 Creo®Parametric TOOLKIT User’sGuide•drawing—Drawing. Thevalueforthisinputargumentmustbepassedonlyif
thesoliddimension isshowninthedrawing.Else,passitasNULL.
•line_number—The linenumberofthedimension. Togetafulldimension
envelope,passthisvalueasPRO_VALUE_UNUSED.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesoliddimension isshowninthedrawing.Else,passitasNULL.
•line_number—The linenumberofthedimension. Togetafulldimension
envelope,passthisvalueasPRO_VALUE_UNUSED.
Theoutputargument envelope istheenvelopesurrounding thetextlineinthe
modelcoordinate system.Fordrawing,theenvelopesurrounding thedimension is
inthescreencoordinates.
Example3:ModifyingaDimension
ThesamplecodeinthefileUgDimsChange.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_dims demonstrates
howtomodifyadimension. Thedimensions belonging toagivenfeatureare
displayed. Youcanchoosethedimension youwishtomodify.
DimensionReferences
Thefunctionsexplainedinthissectionenableyoutoworkwithsemantic
dimension references.
FunctionIntroduced:
•ProDimensionAdditionalRefsAdd()
•ProDimensionAdditionalRefsGet()
•ProDimensionAdditionalRefDelete()
Thefunction ProDimensionAdditionalRefsAdd() addsadditional
semanticreferences inthespecifieddimension. Theinputargumentsare:
•dim—Specifies adimension.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDimensionAdditionalRefDelete()
Thefunction ProDimensionAdditionalRefsAdd() addsadditional
semanticreferences inthespecifieddimension. Theinputargumentsare:
•dim—Specifies adimension.
•type—Specifies thetypeofreferenceusingtheenumerated datatype
ProDimensionReferenceType. Thetypeisclassifiedbasedonthelist
towhichthereferences areadded.Thevalidvaluesare:
○PRO_DIM_REF_FIRST—Adds thesemanticreferences tothefirstlistof
references.
○PRO_DIM_REF_SECOND—Adds thesemanticreferences tothesecond
listofreferences.
•refs—Specifies aProArray ofreferences thatwillbeaddedtothespecified
dimension.
Thefunction ProDimensionAdditionalRefsGet() returnsaProArray
ofreferences ofthespecifiedtypeforadimension. Intheinputargument type,
specifythetypeofreferenceusingtheenumerated datatype
ProDimensionReferenceType. Usethefunction ProArrayFree() to
releasethememoryassignedtotheProArray ofreferences.
Annotations: Annotation FeaturesandAnnotations 567Usethefunction ProDimensionAdditionalRefDelete() todeletethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreleasethememoryassignedtotheProArray ofreferences.
Annotations: Annotation FeaturesandAnnotations 567Usethefunction ProDimensionAdditionalRefDelete() todeletethe
specifiedreference. Thereferences arespecifiedbytheirindexnumber.
CleanUpDimensions
Youcancleanuptheplacement ofdimensions inadrawingtomeettheindustry
standards, andenableeasierreadingofyourmodeldetailing.Youcanadjustthe
locationanddisplayofdimensions bysettingcontrolsontheplacement ofa
dimension. Youcanalsosetthecosmeticattributes, likeflipthedirectionofarrow
whenthearrowsdonotfitbetweenthewitnesslinesandcenterthedimension text
betweentwowitnesslines.
FunctionIntroduced:
•ProDrawingDimensionsCleanup()
Usethefunction ProDrawingDimensionsCleanup() tocleanupthe
dimensions inadrawing.Theinputargumentsare:
•draw—Specifies thedrawing.
•view—Specifies theviewinwhichthedimensions mustbecleaned.Ifyou
passthevalueasNULL,thedimensions arecleanedforalltheviewsinthe
specifieddrawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•draw—Specifies thedrawing.
•view—Specifies theviewinwhichthedimensions mustbecleaned.Ifyou
passthevalueasNULL,thedimensions arecleanedforalltheviewsinthe
specifieddrawing.
Thedimensions arecleanedusingthedefaultvaluessetintheCleanDimensions
dialogboxinCreoParametric userinterface.
DimensionTolerances
Functions Introduced:
•ProToleranceDefaultGet()
•ProDimensionDisplayedT oleranceGet()
•ProSolidT oleranceGet()
•ProSolidT oleranceSet()
•ProDimensionIsT oleranceDisplayed()
•ProDimensionT oltypeGet()
•ProDimensionT oltypeSet()
•ProDimensionT oleranceGet()
•ProDimensionT oleranceSet()
•ProDimensionT olerancedecimalsGet()
•ProDimensionT olerancedecimalsSet()
•ProDimensionT olerancedenominatorGet()
•ProDimensionT olerancedenominatorSet()
568 Creo®Parametric TOOLKIT User’sGuideThefunction ProToleranceDefaultGet() tellsyouthecurrentdefault
valueforagiventolerance,thatis,thevaluesetintheconfiguration filetobeused
fornewmodels.Thereisaseparatetoleranceforlinearandangulardimensionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueforagiventolerance,thatis,thevaluesetintheconfiguration filetobeused
fornewmodels.Thereisaseparatetoleranceforlinearandangulardimensions
(PROTOLERANCE_LINEAR andPROTOLERANCE_ANGULAR) andforeach
numberofdecimalplacesintherange1to6(12tolerancesettingsinall).
Iftheroundoffattributeforthegivendimension isset,thefunction
ProDimensionDisplayedToleranceGet() retrievesthedisplayed
roundedvaluesoftheupperandlowerlimitsofthespecifieddimension.
Otherwise, itretrievesthestoredvaluesofthetolerances asdonebythefunction
ProSolidToleranceGet(). Forexample,consideradimension thatissetto
roundofftotwodecimalplacesandhastheupperandlowertolerances 0.123456.
Bydefault,thetolerancevaluesdisplayedarealsoroundedofftotwodecimal
places.Inthiscase,thefunction
ProDimensionDisplayedToleranceGet() retrievestheupperandlower
valuesas0.12.
Theinputargumentofthefunction
ProDimensionDisplayedToleranceGet() isadimension handle.The
outputargumentsofthisfunctionarepointerstotheroundedvaluesoftheupperxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesas0.12.
Theinputargumentofthefunction
ProDimensionDisplayedToleranceGet() isadimension handle.The
outputargumentsofthisfunctionarepointerstotheroundedvaluesoftheupper
andlowerlimitsofthespecifieddimension. Youmustallocateamemorylocation
foreachoftheoutputarguments.PassaNULLpointerifyoudonotwanttousean
outputargument.Youcannotpassanullforboththeoutputarguments.
Thefunctions ProSolidToleranceGet() and
ProSolidToleranceSet() letyoufindandsetthecurrentvalueofthe
specifieddimensional tolerance.Thefunction
ProDimensionIsToleranceDisplayed() tellsyouwhetherthe
tolerances ofthespecifieddimension arecurrentlybeingdisplayed. Refertothe
CreoParametric DetailedDrawingsHelpformoreinformation.
Thefunction ProDimensionToltypeGet() returnsthedisplayformatfor
thespecifieddimension toleranceusingtheenumerated datatype
ProDimToleranceType. Thevalidvaluesare:
•PRO_TOL_DEFAULT—Displays dimensions withouttolerances. Similarto
thenominaloptioninCreoParametric.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifieddimension toleranceusingtheenumerated datatype
ProDimToleranceType. Thevalidvaluesare:
•PRO_TOL_DEFAULT—Displays dimensions withouttolerances. Similarto
thenominaloptioninCreoParametric.
•PRO_TOL_LIMITS—Displays dimension tolerances asupperandlower
limits.
Note
Thisformatisnotavailablewhenonlythetolerancevalueforadimension
isdisplayed.
•PRO_TOL_PLUS_MINUS—Displays dimensions asnominalwithplus-minus
tolerances. Thepositiveandnegativevaluesareindependent.
Annotations: Annotation FeaturesandAnnotations 569•PRO_TOL_PLUS_MINUS_SYM—Displays dimensions asnominalwitha
singlevalueforboththepositiveandthenegativetolerance.
•PRO_DIM_TOL_SYM_SUPERSCRIPT—Displays dimensions asnominal
withasinglevalueforpositiveandnegativetolerance.Thetextofthe
toleranceisdisplayedinasuperscript formatwithrespecttothedimension
text.
•PRO_DIM_TOL_BASIC—Displays dimensions asbasicdimensions. Basic
dimensions aredisplayedinanenclosedfeaturecontrolframe.Tolerancesarexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtext.
•PRO_DIM_TOL_BASIC—Displays dimensions asbasicdimensions. Basic
dimensions aredisplayedinanenclosedfeaturecontrolframe.Tolerancesare
notdisplayedinbasicdimensions, onlythenumerical partofthedimension
valueanditssymbolareenclosedintherectangular box.Anyadditional text
inthedimension valueisnotincludedinthebox.
Usethefunction ProDimensionToltypeSet() tosetthedisplayformatfor
thespecifieddimension tolerance.
Thefunction ProDimensionToleranceGet() reportsthedeviationofthe
upperandlowertolerances fromthenominalvalue.Thevaluesarealways
reportedasindependent upperandlowertolerancevalues;theactualdisplayofthe
toleranceisdetermined byProDimensionToltypeGet(). Tolerancesarenot
applicable forreferencedimensions.
Note
Iftheuppertolerancevalueisnegative,itwillbedisplayedwitha‘-’sign.But
ifthelowertolerancevalueisnegative,itwillbedisplayedwitha‘+’sign.
Thefunction ProDimensionToleranceSet() setstheupperandlower
tolerancelimits.Thevaluesarealwaysacceptedasindependent upperandlowerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxifthelowertolerancevalueisnegative,itwillbedisplayedwitha‘+’sign.
Thefunction ProDimensionToleranceSet() setstheupperandlower
tolerancelimits.Thevaluesarealwaysacceptedasindependent upperandlower
tolerancevalues;theactualdisplayofthetoleranceisdetermined by
ProDimensionToltypeSet(). Itisnotapplicable toreferencedimensions.
Thefunctions ProDimensionTolerancedecimalsGet() and
ProDimensionTolerancedecimalsSet() obtainandassignthenumber
ofdecimalplacesshownfortheupperandlowervaluesofthedimension
tolerance.Thus,thedecimalsofthedimension tolerancecanbesetindependent of
thenumberofdimension decimals.Bydefault,thenumberofdecimalplacesfor
tolerancevaluesiscalculated baseduponthe“linear_tol” settingsofthemodel.
570 Creo®Parametric TOOLKIT User’sGuideNote
Theinput tolerance_decimals tothe
ProDimensionTolerancedecimalsSet() functionshouldbeanon-
negativenumberanditshouldbesuchthatwhenyouapplyeithertheupperor
thelowervaluesofthetolerancetothegivendimension, thetotalnumberofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDimensionTolerancedecimalsSet() functionshouldbeanon-
negativenumberanditshouldbesuchthatwhenyouapplyeithertheupperor
thelowervaluesofthetolerancetothegivendimension, thetotalnumberof
digitsbeforeandafterthedecimalpointintheresultingvaluesdoesnot
exceed13.
Ifthedimension tolerancevalueisafraction,thefunctions
ProDimensionTolerancedenominatorGet() and
ProDimensiondenominatorSet() obtainandassignthevalueforthe
largestpossibledenominator fortheupperandlowertolerancevalues.Bydefault,
thisvalueisdefinedbytheconfig.pro option, dim_fraction_
denominator.
ISO/DINToleranceTableUse
Functions Introduced:
•ProSolidModelclassGet()
•ProSolidModelclassSet()
•ProSolidT olclassLoad()
•ProDimensionT ollabelGet()
•ProDimensionT ollabelSet()
CreoParametric TOOLKITprovidesfunctionsthatprogrammatically setand
return ISO/DIN tolerancetabledata.Thesefunctionsallowchangestovalues
beforethelabelisset.Forallotherlabels,usethe
ProDimensionTollabelSet() command.
Thefunctions ProSolidModelclassGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreturn ISO/DIN tolerancetabledata.Thesefunctionsallowchangestovalues
beforethelabelisset.Forallotherlabels,usethe
ProDimensionTollabelSet() command.
Thefunctions ProSolidModelclassGet() and
ProSolidModelclassSet() respectively returnorsetthetypeoftolerance
touseforaparticularmodel.Validsettingsare:
•COARSE
•FINE
•MEDIUM
•VERY_COARSE
Thefunction ProSolidTolclassLoad() loadsaholeorshaftISO/DIN
tolerancetableintothecurrentsessionmemory.
Annotations: Annotation FeaturesandAnnotations 571Thefunctions ProDimensionTollabelGet() and
ProDimensionTollabelSet() respectively getorsettheISO/DIN
tolerancetableassignedtothespecifieddimension.
DimensionText
Functions Introduced:
•ProDimensionT extWstringsGet()
•ProDimensionT extWstringsSet()
Superseded Functions:
•ProDimensionT extGet()
•ProDimensionT extSet()
Thefunctions ProDimensionTextGet() andProDimensionTextSet()
havebeendeprecated. Usethefunctions
ProDimensionTextWstringsGet() and
ProDimensionTextWstringsSet() instead.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDimensionT extSet()
Thefunctions ProDimensionTextGet() andProDimensionTextSet()
havebeendeprecated. Usethefunctions
ProDimensionTextWstringsGet() and
ProDimensionTextWstringsSet() instead.
Thefunction ProDimensionTextWstringsGet() retrievesthetextofthe
specifieddimension asaProArray ofwidecharacterstrings.Usethefunction
ProWstringproarrayFree() toreleasethememoryallocatedforthe
ProArray.
Thefunction ProDimensionTextWstringsSet() setsthetextofthe
specifieddimension usingaProArray ofwidecharacterstrings.Thisis
equivalent toeditingdimensions inCreoParametric.
Note
FromCreoParametric 2.0onward,thefunctions
ProDimensionTextWstringsGet() and
ProDimensionTextGet() willalwaysincludethedimension value @D
thatappearsintheDimensionProperties dialogbox.
DimensionTextStyle
Functions Introduced:
•ProDimensionT extstyleGet()
•ProDimensionT extstyleSet()
Thefunction ProDimensionTextstyleGet() returnsthetextstyleassigned
toaspecifieddimension orreferencedimension.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProDimensionT extstyleGet()
•ProDimensionT extstyleSet()
Thefunction ProDimensionTextstyleGet() returnsthetextstyleassigned
toaspecifieddimension orreferencedimension.
572 Creo®Parametric TOOLKIT User’sGuideThefunction ProDimensionTextstyleSet() setsthetextstyleassignedto
aspecifieddimension orreferencedimension.
Note
Onlysomeofthetextstyleproperties maybeassignedtodimensions.
DimensionPrefixandSuffix
Functions Introduced:
•ProDimensionPr efixGet()
•ProDimensionPr efixSet()
•ProDimensionSuffixGet()
•ProDimensionSuffixSet()
Thefunction ProDimensionPrefixGet() retrievestheprefixassignedtoa
specifieddimension. Usethefunction ProDimensionPrefixSet() tosetthe
prefixofthetypeProLine foradimension.
Thefunction ProDimensionSuffixGet() retrievesthesuffixassignedtoa
specifieddimension. Usethefunction ProDimensionSuffixSet() tosetthe
suffixofthetypeProLine foradimension.
DimensionLocation
Thefunctionsdescribedinthissectionextractthedimension locationandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifieddimension. Usethefunction ProDimensionSuffixSet() tosetthe
suffixofthetypeProLine foradimension.
DimensionLocation
Thefunctionsdescribedinthissectionextractthedimension locationand
geometryin3Dspaceforsolidmodeldimensions.
Functions Introduced:
•ProDimensionLocationGet()
•ProDimlocationFre e()
•ProDimensionMove()
Thefunction ProDimensionLocationGet() returnsthelocationofthe
elementsthatmakeupasoliddimension orreferencedimension.
Thisfunctionoptionally takesaviewusedtodetermine theorientation ofthe
modelwhencalculating thedimension locations.Theorientation oftendetermines
thetextlocation,presenceorabsenceofelbows,andotherdimension location
properties.
Usethefunction ProDimlocationFree() tofreethestructurecontaining the
dimension locationdata.
Annotations: Annotation FeaturesandAnnotations 573Thefunction ProDimensionMove() enablesyoutomovethespecified
dimension tothegivenlocationwithinitsownermodel.
DimensionEntityLocationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations: Annotation FeaturesandAnnotations 573Thefunction ProDimensionMove() enablesyoutomovethespecified
dimension tothegivenlocationwithinitsownermodel.
DimensionEntityLocation
Thefollowingfunctionsextractthelocationsofgeometric endpointsforthe
dimension. Youcancalculatethedimension locationplane,witnessline,and
dimension orientation vectorsfromthesepoints.Thelocationofthepointsis
specifiedinthesamecoordinate systemasthesolidmodel.
Functions Introduced:
•ProDimlocationT extGet()
•ProDimlocationArr owsGet()
•ProDimlocationW itnesslinesGet()
•ProDimlocationArr owtypesGet()
•ProDimlocationCenterleadertypeGet()
•ProDimlocationZExtensionlinesGet()
•ProDimlocationNormalGet()
Thefunction ProDimlocationTextGet() returnsthelocationofthe
dimension textinmodelcoordinates. Ifthedimension containsanelbow,the
functionreturnsthelocationoftheelbowjointandthelengthoftheelbowin
modelcoordinates.
Note
Ifthevalueoftheelbowlengthwasoriginallysetbythefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionreturnsthelocationoftheelbowjointandthelengthoftheelbowin
modelcoordinates.
Note
Ifthevalueoftheelbowlengthwasoriginallysetbythefunction
ProDimensionElbowlengthSet(), thenthevaluereturnedby
ProDimlocationTextGet() isequaltothevaluesetbythefunction
ProDimensionElbowlengthSet() minusthepaddingaroundthetext
foralldimension types.
Thefunction ProDimlocationArrowsGet() returnsthelocationofthe
arrowheadsforthedimension.
Thefunction ProDimlocationWitnesslinesGet() returnsthelocationof
thewitnesslineendsforthedimension.
Thefunction ProDimlocationArrowtypesGet() returnsthetypeof
arrowsusedfortheleaderofaspecified3Ddimension. Thedimension location
obtainedusingthefunction ProDimensionLocationGet() servesasan
inputargumentforthisfunction.
574 Creo®Parametric TOOLKIT User’sGuideNote
Incaseofradialdimensions wherethearrowheadtypecannotbechanged,the
function ProDimlocationArrowtypesGet() alwaysreturnsthe
“Arrowhead”leadertype.
Thefunction ProDimlocationCenterleadertypeGet() obtainsthetypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction ProDimlocationArrowtypesGet() alwaysreturnsthe
“Arrowhead”leadertype.
Thefunction ProDimlocationCenterleadertypeGet() obtainsthetype
ofcenterleaderusedforthedimension, ifthedimension usesacenterleader.The
typeofcenterleaderisdetermined bytheorientation ofthedimension text.This
functionalsoreturnsthelengthanddirectionoftheelbowusedbythecenter
leaderandtheleaderendsymbol.
•PRO_DIM_CLEADER_CENTERED_ELBOW—Specifies thatthedimension
textisplacednexttoandcenteredabouttheelbowofthecenterleader.
•PRO_DIM_CLEADER_ABOVE_ELBOW—Specifies thatthedimension textis
placednexttoandabovetheelbowofthecenterleader.
•PRO_DIM_CLEADER_ABOVE_EXT_ELBOW—Specifies thatthedimension
textisplacedabovetheextendedelbowofthecenterleader.
•PRO_DIM_PARALLEL_ABOVE—Specifies thatthedimension textisplaced
paralleltoandabovethecenterleader.
•PRO_DIM_PARALLEL_BELOW—Specifies thatthedimension textisplaced
paralleltoandbelowthecenterleader.
Note
○Acenterleadertypeisavailableonlyforlinearanddiameterdimensions.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_DIM_PARALLEL_BELOW—Specifies thatthedimension textisplaced
paralleltoandbelowthecenterleader.
Note
○Acenterleadertypeisavailableonlyforlinearanddiameterdimensions.
○TheelbowlengthanddirectionisnotavailableforPRO_DIM_
PARALLEL_ABOVE andPRO_DIM_PARALLEL_BELOW centerleader
types.
Thefunction ProDimlocationZExtensionlinesGet() obtainsthe
endpointsoftheZ-extension linecreatedforaspecifieddimension. Z-extension
linesareautomatically createdwheneverthedimension’ sattachment doesnot
intersectitsreferenceintheZ-Direction. TheZ-extension lineisattachedatthe
edgeofthesurfaceattheclosestdistancefromthedimension witnessline.
Thefunction ProDimlocationNormalGet() returnsthevectornormalto
thedimensioning planeforaradialordiameterdimension. Thisnormalvector
shouldcorrespond totheaxisnormaltothearcbeingmeasuredbytheradialor
diameterdimension.
Annotations: Annotation FeaturesandAnnotations 575Thefollowingfiguresillustratethepotentiallocationofthearrowheadsandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdiameterdimension.
Annotations: Annotation FeaturesandAnnotations 575Thefollowingfiguresillustratethepotentiallocationofthearrowheadsand
witnesslinesfordifferentdimension types.
Linearandpsuedo-linear dimensions
Foralineartypeofdimension, therearetypicallytwoarrowlocationsA1andA2
asshownintheabovefigure.w1andw2indicatethetwowitnesslinelocations.
Ifthedimension typehasanelbowjointindicatedbyE,theelbowlengthisthe
distancebetweenthetextandE.Ifthedimension doesnothaveanelbow,thetext
occursonthelinebetweenA1andA2,anditspositionisreturnedbythefunction
ProDimensionTextGet(). Patternparameter dimensions andlength-of-arc
dimensions alsotypicallyreturnthisdimension structure.
576 Creo®Parametric TOOLKIT User’sGuideAngulardimensions
Foranangulartypeofdimension, therearetwoarrowlocationsA1andA2as
shownintheabovefigure.w1andw2indicatethetwowitnesslinelocations.For
someangulardimensions thetwowitnesslineendpointsarecoincident, buttheyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxshownintheabovefigure.w1andw2indicatethetwowitnesslinelocations.For
someangulardimensions thetwowitnesslineendpointsarecoincident, butthey
arereturnedasindependent locations.Thisdimension typedoesnothavean
elbowjoint.
Diameterdimensions
Foradiametertypeofdimension, therearetwoarrowlocationsA1andA2as
shownintheabovefigure.Theelbowjointforthisdimension isindicatedbyE.
Theelbowlengthisthedistancebetweenthetextandtheelbowjoint.This
dimension typedoesnothaveanywitnesslinelocations.
Annotations: Annotation FeaturesandAnnotations 577Radiusdimensions
Foraradiustypedimension, thereisonearrowlocationindicatedbyA1andan
elbowjointindicatedbyE.Theelbowlengthisthedistancebetweenthetextand
theelbowjoint.
Thefunction ProDimlocationArrowsGet() returnsaNULLvalueforthe
secondarrowlocation.Thisdimension typedoesnothaveanywitnessline
locations.
Example4:DimensionLocationProperties
ThesamplecodeinthefileUgDimLocationUtils.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_dimsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocations.
Example4:DimensionLocationProperties
ThesamplecodeinthefileUgDimLocationUtils.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_dims
demonstrates useofthedimension locationproperties. Itfindslineardimensions
thatareorientedparalleltoaspecifieddirectionvector.Itshowsthesedimensions
intheCreoParametric userinterface.Theorientation ofthedimension is
determined fromthecoordinates ofthetwodimension arrowheads.
DimensionOrientation
Functions Introduced:
•ProDimensionPlaneSet()
•ProDimensionPlaneGet()
Thefunction ProDimensionPlaneSet() assignsanannotation planeasthe
orientation ofaspecifieddimension storedinanannotation element.
Thefunction ProDimensionPlaneGet() obtainstheorientation ofa
specifieddimension storedinanannotation element.
578 Creo®Parametric TOOLKIT User’sGuideNote
Fordimensions thatarenotassignedaspecificorientation, theorientation
obtainedincludes PRO_ID_NO_ANNOTATION_PLANE asitsID.
DrivingDimensionAnnotation ElementsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFordimensions thatarenotassignedaspecificorientation, theorientation
obtainedincludes PRO_ID_NO_ANNOTATION_PLANE asitsID.
DrivingDimensionAnnotation Elements
Youcanconvertdrivingdimensions createdbyfeaturesintoannotation elements
andplacethemonannotation planes.However,youcancreatethedriving
dimension annotation elementsonlyinthefeaturesthatownthedimensions.
Theseannotation elementscannothaveanyuserdefinedorsystemreferences.
InCreoParametric TOOLKIT, adrivingdimension annotation elementusesthe
ProModelitem handlewiththetypefieldPRO_DIMENSION andthe
appropriate dimension ID.
Functions suchasProSolidDimensionVisit() and
ProFeatureDimensionVisit() canbeusedtofindbotheditdimensions
anddrivingdimension annotation elements.
Functions Introduced:
•ProDimensionAnnotationelemCr eate()
•ProDimensionAnnotationelemDelete()
Thefunction ProDimensionAnnotationelemCreate() createsan
annotation elementforaspecifieddrivingdimension, basedonthedesired
annotation orientation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDimensionAnnotationelemDelete()
Thefunction ProDimensionAnnotationelemCreate() createsan
annotation elementforaspecifieddrivingdimension, basedonthedesired
annotation orientation.
Thefunction ProDimensionAnnotationelemDelete() removesthe
annotation elementcontaining thedrivingdimension. Itdeletesalltheparameters
andrelationsassociated withtheannotation element.
AccessingReferenceandDrivenDimensions
Thefunctionsdescribedinthissectionprovideadditional accesstoreferenceand
drivendimension annotations.
Manyfunctionslistedintheprevioussectionsthatareapplicable fordriving
dimensions arealsoapplicable forreferenceanddrivendimensions.
Functions Introduced:
•ProDimensionIsDriving()
•ProDimensionCr eate()
•ProDimensionAttachmentsGet()
Annotations: Annotation FeaturesandAnnotations 579•ProDimensionAttachmentsSet()
•ProDimensionDelete()
•ProDimensionCanRegenerate()
•ProDimensionCanRegen()
Thefunction ProDimensionIsDriving() determines ifadimension isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDimensionDelete()
•ProDimensionCanRegenerate()
•ProDimensionCanRegen()
Thefunction ProDimensionIsDriving() determines ifadimension is
drivinggeometryorisdrivenbyit.Ifadimension drivesgeometry,itsvaluecan
bemodifiedandthemodelregenerated withthegivenchange.Ifadimension is
drivenbygeometry,itsvalueisfixedbutitcanbedeletedandredefinedas
necessary.Adrivendimension mayalsobeincludedinanannotation element.
Thefunction ProDimensionCreate() createsanewdrivenorreference
dimension. Specifythegeometric references andparameters requiredtoconstruct
therequireddimension astheinputparameters forthisfunction.Oncethe
referencedimension iscreated,usethefunction ProAnnotationShow() to
displayit.Theinputargumentsofthisfunctionareasfollows:
•model—Specifies thesolidmodel.
•dimension_type—Specifies thetypeofdimension. Thisparameter canhave
thefollowingvalues:
○PRO_REF_DIMENSION—Specifies areferencedimension.
○PRO_DIMENSION—Specifies adrivendimension.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•dimension_type—Specifies thetypeofdimension. Thisparameter canhave
thefollowingvalues:
○PRO_REF_DIMENSION—Specifies areferencedimension.
○PRO_DIMENSION—Specifies adrivendimension.
•annotation_plane—Specifies theannotation planeforthedimensions.
•attachments_arr—Specifies thepointsonthemodelwhereyouwanttoattach
thedimension.
Note
Theattachments structureisanarrayoftwoProSelection entities.It
isprovidedtosupportoptionssuchasintersectwheretwoentitiesmustbe
passedasinput.FromCreoParametric 3.0onward,youcancreate
dimensions thathaveintersection typeofreference. Theintersection type
ofreferenceisareferencethatisderivedfromtheintersection oftwo
entities.RefertotheCreoParametric DetailedDrawingsHelpformore
information onintersection typeofreference.
•dsense_arr—Specifies moreinformation abouthowthedimension attachesto
eachattachment pointofthemodel,thatis,towhatpartoftheentity
•orient_hint—Specifies theorientation ofthedimension andhasoneofthe
followingvalues:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxeachattachment pointofthemodel,thatis,towhatpartoftheentity
•orient_hint—Specifies theorientation ofthedimension andhasoneofthe
followingvalues:
○PRO_DIM_ORNT_HORIZ—Specifies ahorizontal dimension.
580 Creo®Parametric TOOLKIT User’sGuide○PRO_DIM_ORNT_VERT—Specifies averticaldimension.
○PRO_DIM_ORNT_SLANTED—Specifies theshortestdistancebetween
twoattachment points(available onlywhenthedimension isattachedto
points).
○PRO_DIM_ORNT_ELPS_RAD1—Specifies thestartradiusfora
dimension onanellipse.
○PRO_DIM_ORNT_ELPS_RAD2—Specifies theendradiusfora
dimension onanellipse.
○PRO_DIM_ORNT_ARC_ANG—Specifies theangleofthearcfora
dimension ofanarc.
○PRO_DIM_ORNT_ARC_LENGTH—Specifies thelengthofthearcfora
dimension ofanarc.
○PRO_DIM_ORNT_LIN_TANCRV_ANG—Specifies thevalueto
dimension theanglebetweenthelineandthetangentatacurvepoint(the
pointonthecurvemustbeanendpoint).
○PRO_DIM_ORNT_RAD_DIFF—Specifies thelineardimension ofthe
radialdistancebetweentwoconcentric arcsorcircles.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpointonthecurvemustbeanendpoint).
○PRO_DIM_ORNT_RAD_DIFF—Specifies thelineardimension ofthe
radialdistancebetweentwoconcentric arcsorcircles.
○PRO_DIM_ORNT_NORMAL—Specifies thelineardimension betweentwo
pointstobeplacednormaltotheselectedreference.
○PRO_DIM_ORNT_PARALLEL—Specifies thelineardimension between
twopointstobeplacedparalleltotheselectedreference.
•location—Specifies theinitiallocationofthedimension text.
Thefunction ProDimensionAttachmentsGet() and
ProDimensionAttachmentSet() provideaccesstothegeometric
references andparameters ofthedrivenorreferencedimension. Thesefunctions
supportdimensions thatarecreatedwithintersection typeofreference.
Thefunction ProDimensionDelete() deletesthedrivenorreference
dimension. Dimensions storedinannotation elementsshouldbedeletedusing
ProAnnotationfeatElementDelete().
Thefunction ProDimensionCanRegenerate() supersedes thefunction
ProDimensionCanRegen(). Thefunction
ProDimensionCanRegenerate() checksifadrivendimension canbexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAnnotationfeatElementDelete().
Thefunction ProDimensionCanRegenerate() supersedes thefunction
ProDimensionCanRegen(). Thefunction
ProDimensionCanRegenerate() checksifadrivendimension canbe
regenerated. Fordrivendimensions createdindrawingmodeandownedbya
solid,whichcanbedisplayedonlyinthecontextofthatdrawing,specifythe
nameofthedrawingintheinputargument drawing.Thefunction
ProDimensionCanRegen() isequivalent to
ProDimensionCanRegenerate() whentheinputargument drawingis
NULL.
Annotations: Annotation FeaturesandAnnotations 58145-degreeChamferDimensions
Youcancreate45-degree chamferdimensions byreferencing oneofthefollowing
items:
•Edges,includingsolidorsurfaceedges,silhouetteedges,curves,andsketches.
•Surfaces
•Revolvesurfaces
Thefunctionsdescribedinthissectionprovideaccesstothedisplaystyleof45-
degreechamferdimensions inasolid.Thesefunctionscanalsobeusedtoaccess
thedisplaystyleofthechamferdimension inadrawing,wherethedimension isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdegreechamferdimensions inasolid.Thesefunctionscanalsobeusedtoaccess
thedisplaystyleofthechamferdimension inadrawing,wherethedimension is
createdinasolidandisdisplayedinadrawing.Toworkwithdimensions shown
inadrawing,passthenameofthedrawingintheinputargument drawinginthe
functions.
Note
Thedefaultdisplayofa45-degree chamferdimension dependsuponthe
settingoftheconfig.pro option, default_chamfer_text.
Functions Introduced:
•ProDimensionChamferLeaderGet()
•ProDimensionChamferLeaderSet()
•ProDimensionChamferT extGet()
•ProDimensionChamferT extSet()
•ProDimensionConfigGet()
•ProDimensionConfigSet()
FromCreoParametric 3.0M060onward,thefunctions
ProDimensionChamferLdrstyleGet() and
ProDimensionChamferLdrstyleSet() havebeendeprecated. Usethe
functions ProDimensionChamferLeaderGet() and
ProDimensionChamferLeaderSet() instead.
Thefunctions ProDimensionChamferLeaderGet() and
ProDimensionChamferLeaderSet() retrieveandsetthestyleofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctions ProDimensionChamferLeaderGet() and
ProDimensionChamferLeaderSet() instead.
Thefunctions ProDimensionChamferLeaderGet() and
ProDimensionChamferLeaderSet() retrieveandsetthestyleofthe
leaderforthespecified45-degree chamferdimension. Thevalidvaluesareas
follows:
•PRO_DIM_CHMFR_LEADER_STYLE_NORMAL—Specifies thattheleaderof
achamferdimension isnormaltothechamferedge(ASME,ANSI,JIS,ISO
Standard).
582 Creo®Parametric TOOLKIT User’sGuide•PRO_DIM_CHMFR_LEADER_STYLE_LINEAR—Specifies thattheleaderof
achamferdimension haslinearstyleofdisplay.
•PRO_DIM_CHMFR_LEADER_STYLE_DEFAULT—Specifies thatthe
chamferdimension leaderstyleshouldbedisplayedusingthedefaultvalueset
inthedetailoption default_chamfer_leader_style.
FromCreoParametric 3.0M060onward,thefunctions
ProDimensionChamferstyleGet() and
ProDimensionChamferstyleSet() havebeendeprecated. Usethe
functions ProDimensionChamferTextGet() and
ProDimensionChamferTextSet() instead.
Thefunctions ProDimensionChamferTextGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDimensionChamferstyleSet() havebeendeprecated. Usethe
functions ProDimensionChamferTextGet() and
ProDimensionChamferTextSet() instead.
Thefunctions ProDimensionChamferTextGet() and
ProDimensionChamferTextSet() retrieveandsetthedimension scheme
forthespecified45-degree chamferdimension. Thevalidvaluesareasfollows:
•PRO_DIM_CHMFRSTYLE_CD—Specifies thatthechamferdimension text
shouldbedisplayedintheC(Dimension value)format(JIS/GBStandard).
•PRO_DIM_CHMFRSTYLE_D_X_45—Specifies thatthechamferdimension
textshouldbedisplayedinthe(Dimension value)X45°format(ISO/DIN
Standards).
•PRO_DIM_CHMFRSTYLE_DEFAULT—Specifies thatthechamferdimension
textshouldbedisplayedusingthedefaultvaluesetinthedrawingdetail
optiondefault_chamfer_text.
•PRO_DIM_CHMFRSTYLE_45_X_D—Specifies thatthechamferdimension
textshouldbedisplayedinthe45°X(Dimension value)format(ASME/ANSI
Standards).
FromCreoParametric 3.0M060onward,thefunctions
ProDimensionConfigurationGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtextshouldbedisplayedinthe45°X(Dimension value)format(ASME/ANSI
Standards).
FromCreoParametric 3.0M060onward,thefunctions
ProDimensionConfigurationGet() and
ProDimensionConfigurationSet() havebeendeprecated. Usethe
functions ProDimensionConfigGet() and
ProDimensionConfigSet() instead.
Thefunctions ProDimensionConfigGet() and
ProDimensionConfigSet() retrieveandsetthedimension configuration for
chamferdimensions. Thedimension configuration definesthestyleinwhichthe
dimension mustbedisplayed. Thevalidvaluesareasfollows:
•PRO_DIMCONFIG_LEADER—Creates thedimension withaleader.
•PRO_DIMCONFIG_LINEAR—Creates alineardimension.
•PRO_DIMCONFIG_CENTER_LEADER—Creates thedimension withthe
leadernoteattachedtothecenterofthedimension leaderline.
Annotations: Annotation FeaturesandAnnotations 583AccessingOrdinateandBaselineDimensions
Thefunctionsdescribedinthissectionenableyoutocreate3Dordinatedriven
dimensions in3Dmodelsasmodelannotations orasannotation elements.TheyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionsdescribedinthissectionenableyoutocreate3Dordinatedriven
dimensions in3Dmodelsasmodelannotations orasannotation elements.They
alsoprovidetheabilitytodefineabaselineannotation element,andthendefine
modelordinatedimension annotations andordinatedimension annotation
elementsthatreferencethebaselineannotation element.
BaselineDimensions
Functions Introduced:
•ProAnnotationfeatBaselineCr eate()
•ProDimensionIsBaseline()
Thefunction ProAnnotationfeatBaselineCreate() createsanordinate
baselineannotation elementandcorresponding dimension. Specifythefeature
referencegeometry,textlocation,directionandannotation planeasinput
argumentsforthisfunction.
Thefunction ProDimensionIsBaseline() identifieswhetheradimension
isabaselinedimension.
OrdinateDimensions
FunctionIntroduced:
•ProDimensionOrdinateCr eate()
•ProDimensionOrdinatestandardGet()
•ProDimensionOrdinatestandardSet()
•ProDimensionOrdinatere ferencesSet()
•ProDimensionMove()
•ProDimensionIsOrdinate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDimensionOrdinateCr eate()
•ProDimensionOrdinatestandardGet()
•ProDimensionOrdinatestandardSet()
•ProDimensionOrdinatere ferencesSet()
•ProDimensionMove()
•ProDimensionIsOrdinate()
•ProDimensionAutoOrdinateCr eate()
Thefunction ProDimensionOrdinateCreate() createsanewmodel
ordinatedrivendimension oramodelordinatereferencedimension inasolid
model.Itrequirestheinputofareferencebaselineannotation aswellasa
geometryreference. Theannotation planeforthenewdimension willbeinherited
fromthebaseline.Oncethereferencedimension iscreated,usethefunction
ProAnnotationShow() todisplayit.
Tocreateanordinatedrivendimension elementoramodelordinatereference
dimension passtheordinatedimensions createdby
ProDimensionOrdinateCreate() tothefunction
ProAnnotationelemAnnotationSet().
584 Creo®Parametric TOOLKIT User’sGuideThefunction ProDimensionOrdinatestandardGet() returnsthedisplay
standardfortheordinatedimensions inthedrawing.Thestyleoftheordinate
dimension maybeasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx584 Creo®Parametric TOOLKIT User’sGuideThefunction ProDimensionOrdinatestandardGet() returnsthedisplay
standardfortheordinatedimensions inthedrawing.Thestyleoftheordinate
dimension maybeasfollows:
•PRO_DIM_ORDSTD_DEFAULT—Specifies thedefaultstylefortheordinate
dimensions.
•PRO_DIM_ORDSTD_ANSI—Specifies theAmerican NationalStandardstyle
fortheordinatedimension. Itplacestherelatedordinatedimensions withouta
connecting line.
•PRO_DIM_ORDSTD_JIS—Specifies theJapaneseIndustrialStandardstyle
fortheordinatedimension. Itplacestheordinatedimensions alonga
connecting linethatisperpendicular tothebaselineandstartswithanopen
circle.
•PRO_DIM_ORDSTD_ISO—Specifies theInternational Standardof
Organization stylefortheordinatedimension.
•PRO_DIM_ORDSTD_DIN—Specifies theGermanInstitutefor
Standardization stylefortheordinatedimension.
•PRO_DIM_ORDSTD_SAME_AS_3D—Specifies theordinatedimension style
for2Ddrawings.Notusedin3Dordinatedimensions.
Thefunction ProDimensionOrdinatestandardSet() setsthestyleforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_DIM_ORDSTD_SAME_AS_3D—Specifies theordinatedimension style
for2Ddrawings.Notusedin3Dordinatedimensions.
Thefunction ProDimensionOrdinatestandardSet() setsthestylefor
thespecifiedordinatedimension orasetofordinatedimensions.
Thefunction ProDimensionAttachmentsGet() returnstheattachment
geometryforthedimension.
Inordertochangethedimension's attachments youmustusethefunction
ProDimensionOrdinatereferencesSet().
Thefunction ProDimensionMove() enablesyoutomovethespecified3D
ordinatedimension tothespecifiedlocationwithinitsownermodel.Forordinate
dimensions intheJISorISO/DIN style,alldimensions stayalignedduring
movement. Forordinatedimensions intheANSIstyle,eachdimension canbe
adjustedindependent oftheotherdimensions. IfthestyleischangedbacktoJIS
orISO/DIN, allthedimensions becomealignedwiththebaseline.
Thefunction ProDimensionIsOrdinate() identifiesifadimension is
ordinate.
Thefunction ProDimensionAutoOrdinateCreate() createsordinatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorISO/DIN, allthedimensions becomealignedwiththebaseline.
Thefunction ProDimensionIsOrdinate() identifiesifadimension is
ordinate.
Thefunction ProDimensionAutoOrdinateCreate() createsordinate
dimensions automatically fortheselectedsurfaces.Thefunctionreturnsa
ProArray ofdimensions. Theinputargumentsare:
•drawing—Specifies thedrawingwheretheordinatedimensions mustbe
automatically created.
Annotations: Annotation FeaturesandAnnotations 585•surface_array—Specifies asetofparallelsurfacesforwhichtheordinate
dimensions mustbecreated.ThisisaProArray ofselectionhandles.You
canfreethisarrayusingthefunction ProSelectionarrayFree().
•baseline—Specifies areferenceelementusedtocreatethebaseline
dimension. Thereferenceelementcanbeanedge,acurve,oradatumplane.
Notes
ThefunctionsinthissectionenableyoutoaccessthenotescreatedinCreo
Parametric .
Note
Thesefunctionsareapplicable tosolids(partsandassemblies) only.However,
whennotesonasolidareviewedfromDrawingmode,theycanalsobexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric .
Note
Thesefunctionsareapplicable tosolids(partsandassemblies) only.However,
whennotesonasolidareviewedfromDrawingmode,theycanalsobe
accessedusingtheProDtlnote() functionsdescribedinthechapter
Drawingsonpage1206.
AnoteismodeledinCreoParametric TOOLKITasaninstanceof
ProModelitem withthetypePRO_NOTE. Youcanselectanotebysupplying
theselectionoption note_3d toProSelect(). Youcanaccessthenameofa
noteusingthefunctions ProModelitemNameGet() and
ProModelitemNameSet().
CreatingandDeletingNotes
Functions Introduced:
•ProSolidNoteCr eate()
•ProNoteDelete()
Thefunction ProSolidNoteCreate() takesasinputaProMdlforthesolid
(eitherapartoranassembly), aProModelitem fortheownerofthenote,and
anexpandable array ProLineList forthenotetext.Thefunctionoutputsa
ProNote objectforthecreatednote.Oncethenoteiscreated,usethefunction
ProAnnotationShow() todisplayit.
Thefunction ProNoteDelete() deletesthenotespecifiedbyitsProNote
object.Notesstoredinannotation elementsshouldbedeletedusingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAnnotationShow() todisplayit.
Thefunction ProNoteDelete() deletesthenotespecifiedbyitsProNote
object.Notesstoredinannotation elementsshouldbedeletedusing
ProAnnotationfeatElementDelete().
NoteProperties
Functions Introduced:
586 Creo®Parametric TOOLKIT User’sGuide•ProNoteT extGet()
•ProNoteT extSet()
•ProNoteURLGet()
•ProNoteURLSet()
•ProNoteURL WstringGet()
•ProNoteURL WstringSet()
•ProNoteOwnerGet()
•ProNoteLeaderstyleGet()
•ProNoteLeaderstyleSet()
•ProNoteElbowlengthGet()
•ProNoteElbowlengthSet()
•ProNoteLineEnvelopeGet()
•ProNoteAttachNormtanleaderGet()
•ProNoteAttachScr eenSet()
•ProNoteWr apTextGet()
•ProNoteWr apTextSet()
•ProNoteRefer encesAdd()
•ProNoteRefer encesGet()
•ProNoteRefer enceDelete()
Thefunction ProNoteTextGet() returnsthetextofa3Dmodelnote.The
function ProNoteTextSet() modifiesthetextofanexisitng3Dmodelnote.
Youcanalsomakesymbolstobecalledoutinthe3Dnotesusingthefunction
ProNoteTextSet().
Usethefunction ProNoteUndisplay() followedbyProNoteDisplay()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanalsomakesymbolstobecalledoutinthe3Dnotesusingthefunction
ProNoteTextSet().
Usethefunction ProNoteUndisplay() followedbyProNoteDisplay()
toupdatethedisplaystatusofthenote.
Thefunction ProNoteURLGet() retrievestheUniformResourceLocator
(URL)associated withthespecifiednote,whereas ProNoteURLSet() setsthe
associated URLforthespecifiednote.SpecifythenoteandtheURLwidestring
orthenameofthevalidcombined stateasinputargumentstothefunction
ProNoteURLWstringSet.
Annotations: Annotation FeaturesandAnnotations 587Note
Thefunctions ProNoteURLGet() andProNoteURLSet() havebeen
deprecated. Instead,usethefunctions ProNoteURLWstringGet() and
ProNoteURLWstringSet() thatreturnandset,respectively ,theUniform
ResourceLocator(URL)associated withthespecifiednoteasawidestring.
Thefunction ProNoteOwnerGet() retrievestheownerofthespecifiednote.
Theownercanbethesolidmodel,auser-chosenfeature,orthefeaturethat
containsthenote'sannotation element.
Thefunction ProNoteLeaderstyleGet() returnstheleaderstyleusedforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheownercanbethesolidmodel,auser-chosenfeature,orthefeaturethat
containsthenote'sannotation element.
Thefunction ProNoteLeaderstyleGet() returnstheleaderstyleusedfor
thenote.ItcanbeeitherstandardorISO.Thefunction
ProNoteLeaderstyleSet() setstheleaderstyleofthenote.
Thefunction ProNoteElbowlengthGet() returnstheelbowproperties for
thespecifiednote.
Thefunction ProNoteElbowlengthSet() setstheelbowproperties ofthe
note.Thisisequivalent toMoveTextoptionintheDimensionProperties dialog
boxinCreoParametric.
Note
Theelbowproperties canberetrievedandsetfortheflat-to-screen notesand
thedrawingnotes.
Thefunction ProNoteLineEnvelopeGet() returnstheenvelopeofalinefor
aspecifiednote.
Thefunction ProNoteAttachNormtanleaderGet() returnstheproperties
ofaleaderednotewhichisnormal/tangent tospecifiednote.
Note
CreoParametric addshardlinebreakstothemultiplelinesdrawingnotes
createdinCreoElements/Pro duringretrieval.Thehardlinebreaksdisplaythe
textofthenoteonseparatelinesintheNoteProperties dialogboxastheyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric addshardlinebreakstothemultiplelinesdrawingnotes
createdinCreoElements/Pro duringretrieval.Thehardlinebreaksdisplaythe
textofthenoteonseparatelinesintheNoteProperties dialogboxasthey
actuallyappearinthedrawingnote.
Thefunction ProNoteAttachScreenSet() setsthelocationofthenotetext
atthescreenlocation.Theinputarguments follow:
•note_attach—Specifies thehandleforProNoteAttach.
588 Creo®Parametric TOOLKIT User’sGuide•p1—Theparameter intheXdirection.
•p2—Theparameter intheYdirection.
•p3—Theparameter intheZdirection.
Thefunctions ProNoteWrapTextGet() andProNoteWrapTextSet()
getandsetthewrapstatusofthetextforaspecifiednoteinasolid.Thefunction
ProDtlnoteWrapTextSet() setsthetextwrappingstatustoONorOFF.
Theinputargumentsarelistedbelow:
•note—Specifies thenoteforwhichthewrapstatusistobeset.
•wrap—Specifies ifthetextiswrapped.Towrapthetextspecifythevalueas
Pro_B_True.
•wrapwidth—Specifies thewidthofthewrappedtextline,iftheinputargument
wrapissettoPro_B_True.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•wrap—Specifies ifthetextiswrapped.Towrapthetextspecifythevalueas
Pro_B_True.
•wrapwidth—Specifies thewidthofthewrappedtextline,iftheinputargument
wrapissettoPro_B_True.
Thefunction ProNoteReferencesAdd() addssemanticreferences toa
specifiednoteinasolid.Theinputargumentsareasfollows:
•note—Specifies thenotetowhichtheadditional semanticreferences aretobe
added.
•refs—Specifies thearrayofadditional semanticreferences usingthe
enumerated datatypeProAnnotationReference.
Thefunction ProNoteReferencesGet() returnsaProArray ofadditional
semanticreferences foranote.
Thefunction ProNoteReferenceDelete() deletestheadditional semantic
references. Theinputargumentsareasfollows:
•note—Specifies thenotefromwhichtheadditional semanticreferences areto
bedeleted.
•index_r ef—Specifies theindexreferences. Indicesstartfrom0.
VisitingNotes
Functionintroduced:
•ProMdlNoteV isit()
Thefunction ProMdlNoteVisit() enablesyoutovisitallthenotesinthe
specifiedsolidmodel.
NoteTextStyles
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVisitingNotes
Functionintroduced:
•ProMdlNoteV isit()
Thefunction ProMdlNoteVisit() enablesyoutovisitallthenotesinthe
specifiedsolidmodel.
NoteTextStyles
Functions Introduced:
•ProTextStyleAlloc()
•ProTextStyleFr ee()
Annotations: Annotation FeaturesandAnnotations 589•ProNoteT extStyleGet()
•ProNoteT extStyleSet()
Thefunction ProTextStyleAlloc() allocatestheopaquehandlefora
ProTextStyle datastructure.Thefunction ProTextStyleFree() frees
theallocateddatastructure.
Thefunction ProNoteTextStyleGet() enablesyoutoretrievethetextstyle
ofaspecifiednote,whereas ProNoteTextStyleSet() enablesyoutosetthe
textstyleofthenote.
TextStyleProperties
Functions introduced
•ProTextStyleHeightGet()
•ProTextStyleHeightSet()
•ProTextStyleW idthGet()
•ProTextStyleW idthSet()
•ProTextStyleAngleGet()
•ProTextStyleAngleSet()
•ProTextStyleSlantAngleGet()
•ProTextStyleSlantAngleSet()
•ProTextStyleThicknessGet()
•ProTextStyleThicknessSet()
•ProTextStyleUnderlineGet()
•ProTextStyleUnderlineSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProTextStyleAngleSet()
•ProTextStyleSlantAngleGet()
•ProTextStyleSlantAngleSet()
•ProTextStyleThicknessGet()
•ProTextStyleThicknessSet()
•ProTextStyleUnderlineGet()
•ProTextStyleUnderlineSet()
•ProTextStyleMirr orGet()
•ProTextStyleMirr orSet()
•ProTextStyleJustificationGet()
•ProTextStyleJustificationSet()
•ProTextStyleV ertJustificationGet()
•ProTextStyleV ertJustificationSet()
•ProTextStyleColorGetW ithDef()
•ProTextStyleColorSetW ithDef()
•ProTextStyleIsHeightInModelUnits()
•ProTextStyleHeightInModelUnitsSet()
•ProSolidDefaulttextheightGet()
590 Creo®Parametric TOOLKIT User’sGuideThesefunctionsenableyoutoretrieveandsettheproperties ofthespecifiedtext
style.Youcanretrieveandsettextproperties suchastheheight,widthfactor,
angle,slantangle,thickness, underline, mirror.
Note
Thesystemusesthevalue–1.0forproperties thatusedefaultvalues,orthat
havenotbeensetyet.
Thefunction ProTextStyleJustificationGet() returnsthehorizontal
justification forthetextstyleobject.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Thesystemusesthevalue–1.0forproperties thatusedefaultvalues,orthat
havenotbeensetyet.
Thefunction ProTextStyleJustificationGet() returnsthehorizontal
justification forthetextstyleobject.
Thefunction ProTextStyleJustificationSet() setsthehorizontal
justification forthetextstyleobjectusingtheenumerated datatype
ProTextHrzJustification. Thevaluesdefinedbytheenumerated typeare
asfollows:
•PRO_TEXT_HRZJUST_DEFAULT—Aligns thetextusingthedefault
justification. Thejustification selectedforthefirstnotebecomesthedefault
forallsuccessive notesaddedduringthecurrentsession.
•PRO_TEXT_HRZJUST_LEFT—Aligns thetextstyleobjecttotheleft.
•PRO_TEXT_HRZJUST_CENTER—Aligns thetextstyleobjectinthecentre.
•PRO_TEXT_HRZJUST_RIGHT—Aligns thetextstyleobjecttotheright
Thefunction ProTextStyleVertJustificationGet() returnsthe
verticaljustification forthetextstyleobject.
Thefunction ProTextStyleVertJustificationSet() setsthevertical
justification forthetextstyleobjectusingtheenumerated datatypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxverticaljustification forthetextstyleobject.
Thefunction ProTextStyleVertJustificationSet() setsthevertical
justification forthetextstyleobjectusingtheenumerated datatype
ProVerticalJustification. Thevaluesdefinedbytheenumerated type
areasfollows:
•PRO_VERTJUST_DEFAULT—Aligns thetextusingthedefaultjustification.
Thejustification selectedforthefirstnotebecomesthedefaultforall
successive notesaddedduringthecurrentsession.
•PRO_VERTJUST_TOP—Aligns thetextstyleobjecttothetop.
•PRO_VERTJUST_MIDDLE—Aligns thetextstyleobjecttothemiddle.
•PRO_VERTJUST_BOTTOM—Aligns thetextstyleobjecttothebottom.
Thefunction ProTextStyleColorGet() returnsthecolorforthetextstyle
object.Ifthetextstyleobjectisofdefaultcolor,thefunctionreturns PRO_
COLOR_METHOD_TYPE withundefined color.FromCreoParametric 2.0M200
onward,thefunction ProTextStyleColorGetWithDef() supersedes the
function ProTextStyleColorGet(). ThefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCOLOR_METHOD_TYPE withundefined color.FromCreoParametric 2.0M200
onward,thefunction ProTextStyleColorGetWithDef() supersedes the
function ProTextStyleColorGet(). Thefunction
Annotations: Annotation FeaturesandAnnotations 591ProTextStyleColorGetWithDef() alsosupportsdefaultcolor.Ifthe
specifiedtextstyleobjectisofdefaultcolor,PRO_COLOR_METHOD_DEFAULT
willbereturned.
Thefunction ProTextStyleColorSet() setsthecolorforthetextstyle
object.FromCreoParametric 2.0M200onward,thefunction
ProTextStyleColorSetWithDef() supersedes thefunction
ProTextStyleColorSet(). Thefunction
ProTextStyleColorSetWithDef() alsosupportsdefaultcolorand
enablesyoutosetthetextstyleobjecttothedefaultcolor.
Thefunctions ProTextStyleIsHeightInModelUnits() and
ProTextStyleHeightInModelUnitsSet() obtainandassignwhether
thetextheightisinrelationtothemodelunits,orafractionofthescreensize.
Thesefunctionsareapplicable onlyforflat-to-screen annotations.
Thefunction ProSolidDefaulttextheightGet() returnsthedefaulttextxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthetextheightisinrelationtothemodelunits,orafractionofthescreensize.
Thesefunctionsareapplicable onlyforflat-to-screen annotations.
Thefunction ProSolidDefaulttextheightGet() returnsthedefaulttext
heightforannotations anddimensions foragivensolidmodel.
AccessingtheNotePlacement
Thefunctionsdescribedinthissectionprovideaccesstotheproperties ofa3D
note.
Functions Introduced:
•ProNotePlacementGet()
•ProNoteAttachFr eeGet()
•ProSolidDispoutlineGet()
•ProNoteAttachLeadersGet()
•ProNoteAttachOnitemGet()
•ProNoteAttachPlaneGet()
•ProNoteAttachRelease()
Thefunction ProNotePlacementGet() retrievestheaProNoteAttach
structureforthegivennote.TheProNoteAttach objectisanopaquehandle
thatdescribesthelocationofanoteandtheleadersattachedtoit.Thefunctionsin
thissectionenableyoutosetupaProNoteAttach objectandassignittoa
note,andtoreadtheProNoteAttach information onanote.
Thefunction ProNoteAttachFreeGet() retrievesthelocationofthenote
text.Thenotetextisstoredinrelativemodelcoordinates, where{0.5,0.5,0.5}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnote,andtoreadtheProNoteAttach information onanote.
Thefunction ProNoteAttachFreeGet() retrievesthelocationofthenote
text.Thenotetextisstoredinrelativemodelcoordinates, where{0.5,0.5,0.5}
indicatestheexactcenterofthemodel'sdisplayboundingboxobtainedfrom
ProSolidDispoutlineGet(), and{0.0,0.0,0.0}and{1.0,1.0,1.0}
representthecornersofthebox.
592 Creo®Parametric TOOLKIT User’sGuideThefunction ProSolidDispoutlineGet() providesyouwiththemaximum
andminimumvaluesofX,Y,andZoccupiedbythedisplayoutlineofthesolid,
withrespecttothedefaultprovidedcoordinate system.
Thefunction ProNoteAttachLeadersGet() returnstheattachment points
andproperties fortheleadersstoredinthespecifiednoteattachment data.
Note
Thefunction ProNoteAttachLeadersGet() requirestheownerofthe
notetobedisplayed.
Thefunctions ProNoteAttachOnitemGet() providesthelocationofan"On
Item"noteattachment data.
Thefunctions ProNoteAttachPlaneGet() returnstheannotation plane
assignedtothenoteattachment data.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctions ProNoteAttachOnitemGet() providesthelocationofan"On
Item"noteattachment data.
Thefunctions ProNoteAttachPlaneGet() returnstheannotation plane
assignedtothenoteattachment data.
Thefunction ProNoteAttachRelease() releasestheallocatedopaque
handle.
Modifying3DNoteAttachments
TheactualnotecreatedinCreoParametric willnotbemodifiedbytheaccess
functionsuntilthenoteattachment isassignedtothenoteusingthemodification
function ProNotePlacementSet().
Functions Introduced:
•ProNoteAttachAlloc()
•ProNoteAttachFr eeSet()
•ProNoteAttachAddend()
•ProNoteAttachLeaderAdd()
•ProNoteAttachLeaderRemove()
•ProNoteAttachOnitemSet()
•ProNoteAttachPlaneSet()
•ProNotePlacementSet()
Thefunction ProNoteAttachAlloc() allocatesaProNoteAttach object
foranoteattachment.
Tosetthelocationofanattachment point,callthefunction
ProNoteAttachFreeSet(). Seethedescription of
ProNoteAttachFreeGet() foranexplanation ofthecoordinates usedby
thisfunction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforanoteattachment.
Tosetthelocationofanattachment point,callthefunction
ProNoteAttachFreeSet(). Seethedescription of
ProNoteAttachFreeGet() foranexplanation ofthecoordinates usedby
thisfunction.
Annotations: Annotation FeaturesandAnnotations 593Thefunction ProNoteAttachAddend() addsaleadertothespecified
attachment. Theleaderpointstoalocationontheparentmodelspecifiedbyan
argumentoftypeProSelection.
Theattachment typesarespecifiedinProNoteAttachAttr. Thepossible
valuesareasfollows:
•PRO_NOTE_ATT_NONE
•PRO_NOTE_ATT_NORMAL
•PRO_NOTE_ATT_TANGENT
Usethefunction ProNoteAttachLeaderAdd() tospecifythetypeof
arrowhead fortheleader.Thisfunctionsupersedes thefunction
ProNoteAttachAddend().
Thefunction ProNoteAttachLeaderAdd() addsaleadertothespecified
attachment. Theleaderpointstoalocationontheparentmodelspecifiedbyan
argumentoftypeProSelection. TheselectionUVparameters determine the
preciseattachment pointforthenoteleader.Theattachment typesarespecifiedbyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxargumentoftypeProSelection. TheselectionUVparameters determine the
preciseattachment pointforthenoteleader.Theattachment typesarespecifiedby
theparameter attrandcanhaveoneofthefollowingvalues:
•PRO_NOTE_ATT_NORMAL—Specifies anormalattachment.
•PRO_NOTE_ATT_TANGENT—Specifies atangentattachment.
Thefunction ProNoteAttachLeaderRemove() removesaleaderfromthe
noteattachment data.
Thefunction ProNoteAttachOnitemSet() setsthelocationofan"On
Item"noteplacement. Usingthisfunctionremovesanyleaderscurrentlyassigned
tothenoteattachment.
Thefunction ProNoteAttachPlaneSet() setstheannotation planeofthe
notes.Theannotation planeofanoteinanannotation elementmaynotbe
removed.
Thefunction ProNotePlacementSet() assignstheaProNoteAttach
structureforthegivennote,thusdefiningorredefining theplacement forthenote.
Note
Ifmodifying anexistingnote,thefunctions ProNoteAttach*Set() do
notmodifythenoteuntilthenoteattachment isreassigned tothenoteusing
themodification function ProNotePlacementSet().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Ifmodifying anexistingnote,thefunctions ProNoteAttach*Set() do
notmodifythenoteuntilthenoteattachment isreassigned tothenoteusing
themodification function ProNotePlacementSet().
594 Creo®Parametric TOOLKIT User’sGuideGeometricTolerances
Formoreinformation onGeometric TolerancesrefertothechapterAnnotations:
Geometric Tolerancesonpage605.
AccessingSetDatumTags
Thefunctionsdescribedinthissectionprovidetheabilitytoaccessanddisplayset
datumtagannotations in3Dmodels.
Functions Introduced:
•ProSolidSetdatumtagV isit()
•ProSetdatumtagRefere nceGet()
•ProGeomitemSetdatumtagGet()
•ProSetdatumtagAttachmentGet()
•ProSetdatumtagAttachmentSet()
•ProSetdatumtagPlacementGet()
•ProSetdatumtagPlaneGet()
•ProSetdatumtagPlaneSet()
•ProSetdatumtagT extstyleGet()
•ProSetdatumtagT extstyleSet()
•ProMdlSetdatumtagCr eate()
•ProMdlSetdatumtagDelete()
•ProSetdatumtagLabelGet()
•ProSetdatumtagLabelSet()
•ProSetdatumtagAdditionalT extGet()
•ProSetdatumtagAdditionalT extSet()
•ProSetdatumtagElbowGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMdlSetdatumtagDelete()
•ProSetdatumtagLabelGet()
•ProSetdatumtagLabelSet()
•ProSetdatumtagAdditionalT extGet()
•ProSetdatumtagAdditionalT extSet()
•ProSetdatumtagElbowGet()
•ProSetdatumtagElbowSet()
•ProSetdatumtagASMEDisplayGet()
•ProSetdatumtagASMEDisplaySet()
•ProSetdatumtagRefere ncesAdd()
•ProSetdatumtagRefere ncesGet()
•ProSetdatumtagRefere nceDelete()
•ProSetdatumtagT extPointGet()
•ProSetdatumtagAdditionalT extLocationGet()
Annotations: Annotation FeaturesandAnnotations 595•ProDrawingSetDatumT agIsShown()
•ProDrawingSetdatumtagErase()
•ProDrawingSetdatumtagV isit()
Thefunction ProSolidSetdatumtagVisit() enablesyoutovisittheset
datumtagannotations inasolidmodel.
Thefunction ProSetdatumtagCreate() isdeprecated. Usethefunction
ProMdlSetdatumtagCreate() instead.Thefunction
ProSetdatumtagCreate() createsanewsetdatumtagannotation. The
inputargumentsareasfollows:
•reference—Specify adatumreference(planeoraxis)fromthemodelasthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMdlSetdatumtagCreate() instead.Thefunction
ProSetdatumtagCreate() createsanewsetdatumtagannotation. The
inputargumentsareasfollows:
•reference—Specify adatumreference(planeoraxis)fromthemodelasthe
geometric referenceforthesetdatumtag.Ifyouwanttomakethistag
referencemodelgeometry,useCreoParametric TOOLKITtocreateadatum
planeoraxisreferencing thegeometryfirst,andthenusethatdatuminthis
argument.
•annotation_plane—Specify anAnnotation Planefortheannotation.
•attachment—Optionally ,specifythelocationforplacement ofthesetdatum
tag.Theargumentcancontain:
○Adimension
○Agtol.
○Ageometryselectiontowhichthesetdatumwillbeattached.
Note
Oncethesetdatumtagannotation iscreated,usethefunction
ProAnnotationShow() todisplayit.
Thefunction ProSetdatumtagAttachmentGet() returnstheitemon
whichthedatumtagisplaced.
Thefunction ProSetdatumtagAttachmentSet() specifiestheitemon
whichthedatumtagisplaced.
Note
FromCreoParametric 2.0M090onward,tospecifythedatumplaneordatumxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichthedatumtagisplaced.
Thefunction ProSetdatumtagAttachmentSet() specifiestheitemon
whichthedatumtagisplaced.
Note
FromCreoParametric 2.0M090onward,tospecifythedatumplaneordatum
axisastheattachment option,passtheinputargument attachment as
NULLinthefunction ProSetdatumtagAttachmentSet(). Thedatum
tagisattachedtothedatumaxisatthedefaultlocation.
596 Creo®Parametric TOOLKIT User’sGuideThefunction ProSetdatumtagPlacementGet() returnstheitemtype,id,
andowneronwhichthesetdatumtagisplaced.Usethisfunctionincaseswhere
itisnotpossibletoconstructtheselection.Forexample,whenthesolidowned
datumfeaturesymbolisattachedtoasolidowneddimension thatiscreatedina
drawing.Thefunctionreturnstheattachment itemcontainedinthe
ProModelitem structure.
Thefunction ProSetdatumtagPlaneGet() returnstheannotation planefor
thespecifiedsetdatumtag.
Thefunction ProSetdatumtagPlaneSet() setstheannotation planeforthe
setdatumtag.
Thefunction ProGeomitemSetdatumtagGet() returnsthesetdatumtagxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedsetdatumtag.
Thefunction ProSetdatumtagPlaneSet() setstheannotation planeforthe
setdatumtag.
Thefunction ProGeomitemSetdatumtagGet() returnsthesetdatumtag
thatusesthespecifiedgeometric itemasthereference, ifavailable.
Thefunction ProSetdatumtagReferenceGet() returnsthedatum
specifiedasareferenceforthesetdatumtag.
Note
Thefunctions ProGeomitemSetdatumtagGet() and
ProSetdatumtagReferenceGet() returninformation onlyfordatum
tagscreatedinreleasespriortoCreoParametric 4.0F000.
Thefunction ProSetdatumtagTextstyleGet() returnsthetextstyle
detailsforthesetdatumtag.Thefunction
ProSetdatumtagTextstyleGet() isdeprecated. Usethefunction
ProAnnotationTextstyleGet() instead.
Thefunction ProSetdatumtagTextstyleSet() setsthetextstyledetails
forthesetdatumtag.Thefunction ProSetdatumtagTextstyleSet() is
deprecated. Usethefunction ProAnnotationTextstyleSet() instead.
Thefunction ProMdlSetdatumtagCreate() createsadatumfeaturesymbolxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforthesetdatumtag.Thefunction ProSetdatumtagTextstyleSet() is
deprecated. Usethefunction ProAnnotationTextstyleSet() instead.
Thefunction ProMdlSetdatumtagCreate() createsadatumfeaturesymbol
inthespecifieddrawingorsolid.Aftercreatingadatumfeaturesymbol,todisplay
it,callthefunction ProAnnotationShow(). Theinputargumentsareas
follows:
•p_mdl—Specifies adrawingorsolid.
•attachment—Specifies thelocationofthedatumfeaturesymbolonthe
geometry.Theargumentcancontain:
○Adimension
○Agtol
○Ageometryselectiontowhichthesetdatumwillbeattached
Annotations: Annotation FeaturesandAnnotations 597•annotation_plane—Specifies anannotation planefortheannotation. Ifthe
datumfeaturesymbolisattachedtoadimension orgtol,theargumentcanbe
NULL.However,foradrawing,theargumentmustbepassedasNULL.
•label—Specifies thelabelforthedatumfeaturesymbol.
Usethefunction ProMdlSetdatumtagDelete() todeletethespecified
datumfeature.
Youcanspecifyastringidentifierasalabelthatwillappearwithinthedatumxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•label—Specifies thelabelforthedatumfeaturesymbol.
Usethefunction ProMdlSetdatumtagDelete() todeletethespecified
datumfeature.
Youcanspecifyastringidentifierasalabelthatwillappearwithinthedatum
featuresymbolframe.Thefunctions ProSetdatumtagLabelGet() and
ProSetdatumtagLabelSet() getandsetthelabelforthespecifieddatum
featuresymbol.
Youcanalsospecifyadditional textthatappearsalongwiththedatumfeature
symbolinstance.Thelabelforthedatumfeaturesymbolandtheadditional text
appearhorizontally alignedtothescreen.Thefunctions
ProSetdatumtagAdditionalTextGet() and
ProSetdatumtagAdditionalTextSet() getandsettheadditional text
forthespecifieddatumfeaturesymbol.Thefunctionsalsoenableyoutogetand
setthepositionoftheadditional textaroundtheframeofthedatumfeature
symbolusingtheenumerated datatypeProDtmFeatAddlTextPos. Thevalid
valuesare:
•PRO_DTM_FEAT_ADDL_TEXT_RIGHT
•PRO_DTM_FEAT_ADDL_TEXT_BOTTOM
•PRO_DTM_FEAT_ADDL_TEXT_LEFT
•PRO_DTM_FEAT_ADDL_TEXT_TOP
•PRO_DTM_FEAT_ADDL_TEXT_DEFAULTxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesare:
•PRO_DTM_FEAT_ADDL_TEXT_RIGHT
•PRO_DTM_FEAT_ADDL_TEXT_BOTTOM
•PRO_DTM_FEAT_ADDL_TEXT_LEFT
•PRO_DTM_FEAT_ADDL_TEXT_TOP
•PRO_DTM_FEAT_ADDL_TEXT_DEFAULT
Itispossibletosetthedisplaystyleoftheleaderwhichattachesthedatumfeature
symboltothegeometry.Youcansettheappearance oftheleaderasstraightor
haveanelbow.Thefunction ProSetdatumtagElbowSet() enablesyouset
thedisplayoftheleader.Passtheinputargument elbowasPRO_B_TRUE toset
theleaderwithanelbow.Thefunction ProSetdatumtagElbowGet() checks
iftheleaderofthespecifieddatumfeaturesymbolhasanelbow.
Thefunction ProSetdatumtagASMEDisplaySet displaysthedatumfeature
symbolaccording totheASMEstandard.Usethefunction
ProSetdatumtagASMEDisplayGet() tocheckifthespecifieddatum
featuresymbolisdisplayedasperASMEstandard.
Thefunction ProSetdatumtagReferencesAdd() addssemanticreferences
tothespecifieddatumfeaturesymbol.Thefunction
ProSetdatumtagReferencesGet() returnsaProArray ofsemantic
references thatwereusedtoplacethespecifieddatumfeaturesymbol.Usethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtothespecifieddatumfeaturesymbol.Thefunction
ProSetdatumtagReferencesGet() returnsaProArray ofsemantic
references thatwereusedtoplacethespecifieddatumfeaturesymbol.Usethe
function ProSetdatumtagReferenceDelete() todeletesemantic
references inthespecifieddatumfeaturesymbol.Thereferences arespecifiedby
theirindexnumber.
598 Creo®Parametric TOOLKIT User’sGuideInCreoParametric 7.0.0.0andlater,thefunction
ProSetdatumtagTextLocationGet() isdeprecated.
Usethefunction ProSetdatumtagTextPointGet() instead.Thefunction
ProSetdatumtagTextPointGet() retrievesthetextpointforthespecified
datumfeaturesymbol.
Thefunction ProSetdatumtagAdditionalTextLocationGet()
retrievesthelocationofadditional textforthespecifieddatumfeaturesymbol.
Thefunction ProDrawingSetDatumTagIsShown() returnsthedisplay
statusofthesetdatumtaginthespecifiedviewofadrawing.Theinputarguments
are:
•set_datum_tag—Specifies thesetdatumtag.
•drawing—Specifies thedrawingthatshowstheannotation.
•view—Specifies thedrawingview.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatusofthesetdatumtaginthespecifiedviewofadrawing.Theinputarguments
are:
•set_datum_tag—Specifies thesetdatumtag.
•drawing—Specifies thedrawingthatshowstheannotation.
•view—Specifies thedrawingview.
Thefunctionreturns PRO_B_TRUE ifthesetdatumtagisshowninthespecified
drawingview,andPRO_B_FALSE ifitisnotshowninthedrawingview.
Thefunction ProDrawingSetDatumTagIsShown() returnstheerrorPRO_
TK_BAD_CONTEXT ifthedatumfeaturesymbolcannotbeshowninthespecified
drawingview.
Usethefunction ProDrawingSetdatumtagErase() tosetasetdatumtag
tobeerasedfromthespecifiedviewofadrawing.Theannotation isnotdisplayed
untilitisexplicitlydisplayedusingthefunction ProAnnotationShow().
Thefunction ProDrawingSetdatumtagVisit() enablesyoutovisittheset
datumtagannotations inthespecifieddrawing.
AccessingSetDatumsforDatumAxesor
Planes
Thefunctionsdescribedinthissectionprovideaccesstothe“SetDatum”statusof
adatumaxisorplane.
Note
Thesefunctionsupportthe“SetDatum”capability whichexistedbeforeSet
DatumTagannotations.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPlanes
Thefunctionsdescribedinthissectionprovideaccesstothe“SetDatum”statusof
adatumaxisorplane.
Note
Thesefunctionsupportthe“SetDatum”capability whichexistedbeforeSet
DatumTagannotations.
Functions Introduced:
•ProGeomitemSetdatumGet()
•ProGeomitemSetdatumSet()
Annotations: Annotation FeaturesandAnnotations 599•ProGeomitemSetdatumClear()
Thefunction ProGeomitemSetdatumGet() specifieswhetherthedatum
planeoraxisisa“SetDatum”.Thisfunctionsupersedes thefunction
ProGeomitemIsGtolref().
Thefunction ProGeomitemSetdatumSet() setsthedatumplaneoraxisto
bea“SetDatum”.Thisfunctionsupersedes thefunction
ProGeomitemGtolrefSet().
Thefunction ProGeomitemSetdatumClear() removesthe“SetDatum”
statusofadatumplaneoraxis.Thisfunctionsupersedes thefunction
ProGeomitemGtolrefClear().
SurfaceFinishAnnotations
Thefunctionsdescribedinthissectionprovidereadaccesstotheproperties ofthe
surfacefinishobject.Theyalsoallowyoutocreateandmodifysurfacefinishes.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGeomitemGtolrefClear().
SurfaceFinishAnnotations
Thefunctionsdescribedinthissectionprovidereadaccesstotheproperties ofthe
surfacefinishobject.Theyalsoallowyoutocreateandmodifysurfacefinishes.
ThestyleofsurfacefinishesforreleasesprevioustoPro/ENGINEER Wildfire2.0
wasaflat-to-screen symbolattachedtoasinglesurface.FromPro/ENGINEER
Wildfire2.0onwards,themethodforconstruction ofsurfacefinisheshasbeen
modified.Thenewstyleofsurfacefinishisasymbolinstancethatmaybe
attachedonasurfaceorwithaleader.Thefollowingfunctionssupportboththe
oldandnewsurfacefinishannotations, exceptwherespecified.
Functions Introduced:
•ProSolidSurffinishV isit()
•ProSurffinishCre ate()
•ProSurffinishRefer encesGet()
•ProSurffinishSrfcollectionGet()
•ProSurffinishSrfcollectionSet()
•ProSurffinishNameGet()
•ProSurffinishNameSet()
•ProSurffinishDataGet()
•ProSurffinishModify()
•ProSurffinishV alueGet()
•ProSurffinishV alueSet()
•ProSurffinishDelete()
Thefunction ProSolidSurffinishVisit() visitsthesurfacefinishesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSurffinishDataGet()
•ProSurffinishModify()
•ProSurffinishV alueGet()
•ProSurffinishV alueSet()
•ProSurffinishDelete()
Thefunction ProSolidSurffinishVisit() visitsthesurfacefinishes
storedinthespecifiedsolidmodel.Thisfunctionacceptsavisitfunction
ProSurfaceVisitAction() andafilterfunction
ProSurfaceFilterAction() astheinputarguments.
600 Creo®Parametric TOOLKIT User’sGuideThefunction ProSurffinishCreate() createsanewsymbol-based surface
finishannotation. Thefunctionrequiresasymbolinstancedatastructurefor
creation.Oncethesurfacefinishannotation iscreated,usethefunction
ProAnnotationShow() todisplayit.
Note
Thedatamustconformtotherequirements forsurfacefinishes,thatis,
attachment mustbevialeadertoorononeormoresurfaces.
Youcanusethestandardsurfacefinishsymboldefinitions fromthesymbol
instancedatastructure.Usethefunction ProSolidDtlsymdefRetrieve()
toretrievethesurfacefinishsymboldefinitions fromthelocation PRO_
DTLSYMDEF_SRC_SURF_FINISH_DIR. Thesurfacefinishvalueshouldbesetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinstancedatastructure.Usethefunction ProSolidDtlsymdefRetrieve()
toretrievethesurfacefinishsymboldefinitions fromthelocation PRO_
DTLSYMDEF_SRC_SURF_FINISH_DIR. Thesurfacefinishvalueshouldbeset
usingthevarianttextoptionsforsymbolinstances.
Thefunction ProSurffinishReferencesGet() returnsthesurfaceor
surfacesreferenced bythesurfacefinish.
Thefunction ProSurffinishSrfcollectionGet() obtainsasurface
collection whichcontainsthereferences ofthesurfacefinish.
Thefunction ProSurffinishSrfcollectionSet() assignsasurface
collection tobethereferences ofthesurfacefinish.Thisoverwrites allcurrent
surfacefinishreferences. Thefollowingtypesofsurfacecollections aresupported:
•Onebyonesurfaceset
•Intentsurfaceset
•Excludedsurfaceset
•SeedandBoundary surfaceset
•Loopsurfaceset
•Solidsurfaceset
•Quiltsurfaceset
Note
Onlythosesurfacefinishesthatarecontainedwithinannotation elementsmay
useacollection ofreferences insteadofasinglesurfacereference.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Loopsurfaceset
•Solidsurfaceset
•Quiltsurfaceset
Note
Onlythosesurfacefinishesthatarecontainedwithinannotation elementsmay
useacollection ofreferences insteadofasinglesurfacereference.
Thefunction ProSurffinishNameGet() returnsthenameofthesurface
finishannotation.
Thefunction ProSurffinishNameSet() setsthenameofthesurfacefinish
annotation.
Annotations: Annotation FeaturesandAnnotations 601Thefunction ProSurffinishDataGet() returnsthesymbolinstancedata
forthesurfacefinish.Thisfunctionsupportsonlynewsymbol-based surface
finishes.
Thefunction ProSurffinishModify() modifiesthesymbolinstancedata
forthespecifiedsurfacefinish.Thisfunctionsupportsonlynewsymbol-based
surfacefinishes.
Thefunction ProSurffinishValueGet() retrievesthevalueofasurface
finishannotation.
Thefunction ProSurffinishValueSet() setsthevalueofasurfacefinish
annotation.
Thefunction ProSurffinishDelete() deletesthespecifiedsurfacefinish.
Thefunctionsdescribedabovesupersede thePro/Develop functions pro_surf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxannotation.
Thefunction ProSurffinishDelete() deletesthespecifiedsurfacefinish.
Thefunctionsdescribedabovesupersede thePro/Develop functions pro_surf_
finish_number(), pro_get_surf_finish(), pro_delete_
surface_finish() andpro_set_surface_finish().
SymbolAnnotations
Thefunctionsdescribedinthissectionprovidesupportfor3Dmodesymbols.
CreoParametric TOOLKITfunctionsforsymbolinstancesareusedinboth2D
and3Dmodes.Symbolsforaparticularmodemustconformtotherequirements
forthatmode.Some ProDtlsyminst functionshavebeenmodifiedtoaccepta
ProMdlobjectastheinputinsteadofProDrawing objecttosupport3Dmode
operations.
Creating,ReadingandModifying3DSymbols
Functions Introduced:
•ProDtlsyminstCre ate()
•ProDtlsyminstDataGet()
•ProDtlsyminstModify()
•ProDtlsyminstdataPlaneGet()
•ProDtlsyminstdataPlaneSet()
Thefunction ProDtlsyminstCreate() createsasymbolinstanceinthe
specifiedmodel.Oncethesymbolinstanceiscreated,usethefunction
ProAnnotationShow() todisplayit.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDtlsyminstdataPlaneSet()
Thefunction ProDtlsyminstCreate() createsasymbolinstanceinthe
specifiedmodel.Oncethesymbolinstanceiscreated,usethefunction
ProAnnotationShow() todisplayit.
Thefunction ProDtlsyminstDataGet() returnsthesymbolinstancedata.
Thefunction ProDtlsyminstModify() modifiesthesymbolinstance.
602 Creo®Parametric TOOLKIT User’sGuideFormoreinformation aboutcreating,accessingandmodifying symbolsviathe
ProDtlsyminst andProDtlsyminstdata structures, refertotheDrawings
onpage1206chapter.
Thefunctions ProDtlsyminstdataPlaneGet() and
ProDtlsyminstdataPlaneSet() provideaccesstothesymbolannotation
plane.Annotation planesarerequiredfor3Dsymbolinstancesbutarenot
applicable for2Dsymbolinstances.
LocatingandCollecting3DSymbolsandSymbol
Definitions
Functions Introduced:
•ProSolidDtlsymdefV isit()
•ProSolidDtlsyminstV isit()
•ProSolidDtlsymdefEntityV isit()
•ProSolidDtlsymdefNoteV isit()
•ProSolidDtlsymdefRetrieve()
•ProSolidDtlsyminstsCollect()
•ProSolidDtlsymdefsCollect()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSolidDtlsyminstV isit()
•ProSolidDtlsymdefEntityV isit()
•ProSolidDtlsymdefNoteV isit()
•ProSolidDtlsymdefRetrieve()
•ProSolidDtlsyminstsCollect()
•ProSolidDtlsymdefsCollect()
Thefunctions ProSolidDtlsymdefVisit() and
ProSolidDtlsyminstVisit() allowtraversalofsymboldefinitions and
instancesinasolidmodel.
Thefunctions ProSolidDtlsymdefEntityVisit() and
ProSolidDtlsymdefNoteVisit() allowtraversalofitemscontainedina
symboldefinitionstoredinasolidmodel.
Thefunction ProSolidDtlsymdefRetrieve() allowsretrievalofasymbol
definitionintoagivensolidmodel.Theinputargumentsforthisfunctionareas
follows:
•solid—Specifies ahandletothesolidmodel.
•location—Specifies thelocationofthesymboldefinitionfile.Itcanoneofthe
followingvalues:
○PRO_DTLSYMDEF_SRC_SYSTEM—Specifies thesystemsymbol
definitiondirectory.
○PRO_DTLSTMDEF_SRC_SYMBOL_DIR—Specifies thesystemsurface
finishsymboldefinitiondirectory.
○PRO_DTLSYMDEF_SRC_SYMBOL_DIR—Specifies thelocation
controlled bytheconfiguration option pro_symbol_dir.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_DTLSTMDEF_SRC_SYMBOL_DIR—Specifies thesystemsurface
finishsymboldefinitiondirectory.
○PRO_DTLSYMDEF_SRC_SYMBOL_DIR—Specifies thelocation
controlled bytheconfiguration option pro_symbol_dir.
Annotations: Annotation FeaturesandAnnotations 603○PRO_DTLSYMDEF_SRC_PATH—Specifies theabsolutepathtoa
directorycontaining thesymboldefinition.
•filepath—Specifies thepathtothefilewithasymboldefinition. Thepathis
relativetothelocationspecifiedintheargument location.
•filename—Specifies thenameofthesymboldefinitionfile.
•version—Specifies theversionofthesymboldefinitionfile.
•update—Specifies theupdateflag.IfTRUE,thedefinitionwillbeloadedeven
ifadefinitionofthatnamealreadyexistsinthemodel.IfFALSE,theretrieval
willnottakeplaceifthedefinitionexistsinthemodel.
Youcanusesymbolinstancesfromdifferentsymboldefinitions inasolid.The
function ProSolidDtlsyminstsCollect() collectsallthesymbol
instancesusedinthespecifiedsolidasaProArray. ThefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanusesymbolinstancesfromdifferentsymboldefinitions inasolid.The
function ProSolidDtlsyminstsCollect() collectsallthesymbol
instancesusedinthespecifiedsolidasaProArray. Thefunction
ProSolidDtlsymdefsCollect() returnsaProArray ofallthesymbol
definitions usedinthespecifiedsolid.Thefunctionreturnssymboldefinitions
onlyforthesymbolinstancesusedinthesolid.Usethefunction
ProArrayFree() toreleasethememoryassignedtotheProArray ofsymbol
definitions andsymbolinstances.
604 Creo®Parametric TOOLKIT User’sGuide25
Annotations: Geometric
Tolerances
GeometricToleranceObjects...................................................................................606
VisitingGeometricTolerances..................................................................................606
ReadingGeometricTolerances................................................................................607
CreatingaGeometricTolerance...............................................................................611xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatingaGeometricTolerance...............................................................................611
DeletingaGeometricTolerance................................................................................617
ValidatingaGeometricTolerance.............................................................................617
GeometricToleranceLayout.....................................................................................617
AdditionalTextforGeometricTolerances...................................................................618
GeometricToleranceTextStyle................................................................................619
PrefixandSuffixforGeometricTolerances................................................................620
Parameters forGeometricToleranceAttributes..........................................................621
ThefunctionsinthischapterallowaCreoParametric TOOLKITapplication toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParameters forGeometricToleranceAttributes..........................................................621
ThefunctionsinthischapterallowaCreoParametric TOOLKITapplication to
read,modify,andcreategeometric tolerances (gtols)inasolidordrawing.We
recommend thatyoustudytheCreoParametric documentation ongeometric
tolerances, anddevelopexperience withmanipulating geometric tolerances using
theCreoParametric commands beforeattempting tousethesefunctions.
605GeometricToleranceObjects
Overview
Thegeometric toleranceobjectsenableyoutoaccessinternaldatastructureof
geometric tolerances (gtol).Theobjectalsoreferences andgetsattachment details
forgtols.
FromCreoParametric 4.0F000onward,theobject Gtoldata hasbeen
deprecated. AlltheProGtolData* functionshavealsobeendeprecated. Use
thenewProGtol* functionsinstead.Thenewfunctionsaredefinedinthe
headerfilesProGtol.h andProGtolAttach.h.
Note
Geometric tolerancefunctionsdeprecated inCreoParametric 4.0F000mustxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthenewProGtol* functionsinstead.Thenewfunctionsaredefinedinthe
headerfilesProGtol.h andProGtolAttach.h.
Note
Geometric tolerancefunctionsdeprecated inCreoParametric 4.0F000must
notbeusedwiththenewgeometric tolerancefunctionsavailablefromCreo
Parametric 4.0F000inaCreoParametric TOOLKITapplication. Ifthe
functionsareusedtogetherinanapplication, theresultsmaybeunpredictable.
ProGtol
Geometric tolerances inaCreoParametric modelarereferenced bythedata
handle, ProGtol. ThishandleisidenticaltoProModelitem, inwhichthe
typefieldissettoPRO_GTOL. YoucanuseProSelect() withtheoption
gtoltoselectagtol,afterwhichyoucanextracttheProGtol handleusing
ProSelectionModelitemGet().
ProGtolAttach
Thisisanopaquehandleobjectthatreferences aninternaldatastructurewhich
providescompleteattachment detailsforagtol.Thestructurecontainsattachment
information suchas,typeofplacement, annotation plane,locationandreferences
andsoonforagtol.
VisitingGeometricTolerances
FunctionIntroduced:
•ProMdlGtolV isit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation suchas,typeofplacement, annotation plane,locationandreferences
andsoonforagtol.
VisitingGeometricTolerances
FunctionIntroduced:
•ProMdlGtolV isit()
606 Creo®Parametric TOOLKIT User’sGuideThefunction ProMdlGtolVisit() visitsgeometric tolerances storedinapart,
assembly,ordrawing.Theformsofthevisitandfilterfunctionsaresimilarto
thoseofmostothervisitfunctions-they receiveaProGtol pointerasinput
argumenttoidentifythegtol.
ReadingGeometricTolerances
Thefunctionsexplainedinthissectionenableyoutoaccessandreadthe
properties ofageometric tolerance.
FunctionIntroduced:
•ProGtolNameGet()
•ProGtolT ypeGet()
•ProGtolT opModelGet()
•ProGtolRefer encesGet()
•ProGtolDatumRefere ncesGet()
•ProGtolV alueStringGet()
•ProGtolCompositeGet()
•ProGtolCompositeShare RefGet()
•ProGtolSymbolStringGet()
•ProGtolIndicatorsGet()
•ProGtolAllAr oundGet()
•ProGtolAllOverGet()
•ProGtolAddlT extBoxedGet()
•ProGtolBoundaryDisplayGet()
•ProGtolUnilateralGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProGtolSymbolStringGet()
•ProGtolIndicatorsGet()
•ProGtolAllAr oundGet()
•ProGtolAllOverGet()
•ProGtolAddlT extBoxedGet()
•ProGtolBoundaryDisplayGet()
•ProGtolUnilateralGet()
Thefunction ProGtolNameGet() returnsthenameofthegeometric tolerance
(gtol)asawchar_t* string.Usethefunction ProWstringFree() tofreethe
string.
Thefunction ProGtolTypeGet() returnsthetypeofthegtolusingthe
enumerated datatypeProGtolType. Thevarioustypesofgtol,arestraightness,
flatness,andsoon.
Thefunction ProGtolTopModelGet() returnsthemodelthatdefinesthe
originofProSelection structuresusedtodefinereferences insidethegtol.
Thiswillusuallybethemodelthatcontainsthegtol;butifthegtolwascreatedin
drawingmodeandaddedtoasolidinadrawingview,theownerwillbethe
drawing,whilethemodelisthesolid.
Annotations: Geometric Tolerances 607ProGtolReferencesGet() returnsaProArray ofthegeometric entities
referenced bythespecifiedgtol.Theentitiesareadditional references usedto
createthegtol.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations: Geometric Tolerances 607ProGtolReferencesGet() returnsaProArray ofthegeometric entities
referenced bythespecifiedgtol.Theentitiesareadditional references usedto
createthegtol.
Usethefunction ProAnnotationreferencearrayFree() tofreethe
ProArray.
Thefunction ProGtolDatumReferencesGet() returnstheprimary,
secondary,andtertiarydatumreferences foragtolaswchar_t* strings.Usethe
function ProWstringFree() tofreethestrings.
Thefunction ProGtolCompositeGet() retrievesthevalueandthedatum
references, thatis,theprimary,secondary,andtertiaryreferences forthespecified
composite gtol.
Thefunction ProGtolCompositeGet() returnsanarrayofvaluesinwhich
thefirstvalueistheprimaryvalueofthegtolandtherestaresecondary,tertiary,
andsoon.
Thefunction ProGtolValueStringGet() retrievesthevaluespecifiedin
thegtolasawchar_t* string.Usethefunction ProWstringFree() tofree
thestring.
Thefunction ProGtolValueStringGet() returnsavaluestringwhichisthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthegtolasawchar_t* string.Usethefunction ProWstringFree() tofree
thestring.
Thefunction ProGtolValueStringGet() returnsavaluestringwhichisthe
primaryvalueofthegtolandisdisplayedinthefirstboxoftheComposite Frame
inthegtolribbon.
Formoreinformation aboutgtolsandtheribbontab,refertotheCreoParametric
onlinehelp.
Usethefunction ProGtolSymbolStringGet() toretrievethestringvaluein
thespecifiedfontforthegtolsymbol.Theinputargumentsare:
•symbol—Specifies thetypeofsymbolusingtheenumerated datatype
ProGtolSymbol. Thevalidvaluesare:
○PRO_GTOL_SYMBOL_DIAMETER—Specifies thediameterforthe
feature.
○PRO_GTOL_SYMBOL_FREE_STATE—Specifies thatthemodelisnot
subjectedtoanyforce,exceptthegravitational force.
○PRO_GTOL_SYMBOL_STAT_TOL—Specifies statisticaltolerance.
○PRO_GTOL_SYMBOL_TANGENT_PLANE—Specifies thetangentplane.
○MaterialSymbols—The materialconditions arerepresented usingthe
followingvalues:
PRO_GTOL_SYMBOL_LMC—Specifies leastmaterialconditionandis
displayedbythesymbol
 .xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○MaterialSymbols—The materialconditions arerepresented usingthe
followingvalues:
PRO_GTOL_SYMBOL_LMC—Specifies leastmaterialconditionandis
displayedbythesymbol
 .
608 Creo®Parametric TOOLKIT User’sGuide○PRO_GTOL_SYMBOL_MMC—Specifies maximum materialconditionand
isdisplayedbythesymbol
 .
○PRO_GTOL_SYMBOL_RFS—Specifies thematerialconditionregardless
ofthefeaturesizeandisdisplayedbythesymbol
 .
○PRO_GTOL_SYMBOL_DEFAULT_RFS—Specifies thematerialcondition
regardless ofthefeaturesize,butdoesnotshowasymbolintheframe.
○PRO_GTOL_SYMBOL_LMC_R—Specifies leastmaterialconditionwith
reciprocity .Thereciprocity isdisplayedondrawingswiththesymbol®
afterthesymbol
 .
○PRO_GTOL_SYMBOL_MMC_R—Specifies maximum materialcondition
withreciprocity .Thereciprocity isdisplayedondrawingswiththesymbol
®afterthesymbol
 .
Note
Youcanusethereciprocity conditiontogetherwiththemaximum
materialconditionortheminimummaterialconditiontousethe
maximum toleranceallowedforafeature.Thematerialconditions withxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx®afterthesymbol
 .
Note
Youcanusethereciprocity conditiontogetherwiththemaximum
materialconditionortheminimummaterialconditiontousethe
maximum toleranceallowedforafeature.Thematerialconditions with
reciprocity areapplicable onlyfortheISOstandard.
○IndicatorSymbols—Indicators aredisplayedafterthegtolsymbol
according tothestandard.TheIndicatorsymbolsarerepresented usingthe
followingvalues:
PRO_INDICATOR_SYMBOL_ANGULARITY—Specifies theangular
positionofafeaturetoareference.
○PRO_INDICATOR_SYMBOL_PERPENDICULARITY—Specifies thatthe
twofeaturesmustbeperpendicular toeachother.Itisalsousedtoindicate
perpendicularity forfeaturessuchasaxistoareference.
○PRO_INDICATOR_SYMBOL_PARALLELISM—Specifies thatthetwo
featuresmustbeparalleltoeachother.Itisalsousedtoindicate
parallelism forfeaturessuchasaxistoareference.
○PRO_INDICATOR_SYMBOL_SYMMETRY—Specifies thatthetwo
featuresmustbesymmetric aboutacenter.
○PRO_INDICATOR_SYMBOL_RUNOUT—Applicable onlyfordirectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparallelism forfeaturessuchasaxistoareference.
○PRO_INDICATOR_SYMBOL_SYMMETRY—Specifies thatthetwo
featuresmustbesymmetric aboutacenter.
○PRO_INDICATOR_SYMBOL_RUNOUT—Applicable onlyfordirection
feature.Specifiesthatthedirectionofthewidthofthetolerancezoneis
equaltorun-out,thatisperpendicular tothesurfaceofthetolerance
feature.
Annotations: Geometric Tolerances 609•font—Specifies thetolerancing fontusedforsymbols.Thevalidvaluesare
definedintheenumerated dataProSymbolFont:
○PRO_FONT_LEGACY—Specifies thatsymbolsusethelegacyfont.
○PRO_FONT_ASME—Specifies thatsymbolsuseASMEfont.
○PRO_FONT_ISO—Specifies thatsymbolsuseISOfont.
○PRO_FONT_STROKED_ASME—Specifies thatsymbolsusestroked
ASMEfontsthatarenativetoCreo.
○PRO_FONT_STROKED_ISO—Specifies thatsymbolsusestrokedISO
fontsthatarenativetoCreo.
Thefunction ProGtolIndicatorsGet() retrievesalltheindicators assigned
tothespecifiedgtol.Itreturns ProArray ofindicatortypes,symbols,anddatum
featuresymbols.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfontsthatarenativetoCreo.
Thefunction ProGtolIndicatorsGet() retrievesalltheindicators assigned
tothespecifiedgtol.Itreturns ProArray ofindicatortypes,symbols,anddatum
featuresymbols.
Thefunction ProGtolCompositeShareRefGet() checksifthedatum
references aresharedbetweenalltherowsdefinedinthecomposite gtol.
Thefunctions ProGtolSymbolStringGet() and
ProGtolValueStringGet(), provideinformation onthedifferentsymbolic
modifiersavailabletothegtol.
Thefunction ProGtolAllOverGet() returnsabooleanvaluethatindicatesif
theAllOversymbolhasbeensetinthespecifiedgtol.Thefunction
ProGtolAllAroundGet() checksiftheAllAroundsymbolhasbeensetfor
thespecifiedgtol.TheAllOversymbolandAllAroundsymbolspecifiesthatthe
profiletolerancemustbeappliedtoallthethreedimensional profileofthepart.
Thesymbolisavailableonlyforsurfaceprofilegtol,thatis,oftype
PROGTOLTYPE_SURFACE.
Thefunction ProGtolAddlTextBoxedGet() checksifaboxhasbeen
createdaroundthespecifiedadditional textinageometric tolerance.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPROGTOLTYPE_SURFACE.
Thefunction ProGtolAddlTextBoxedGet() checksifaboxhasbeen
createdaroundthespecifiedadditional textinageometric tolerance.
Thefunction ProGtolBoundaryDisplayGet() checksiftheboundary
modifierhasbeensetforthespecifiedgtol.Usethefunction
ProGtolUnilateralGet() tocheckiftheprofileboundaryhasbeensetto
unilateralinthespecifiedgtol.Ifsettounilateral, thefunctionalsochecksifthe
tolerancedisposition isintheoutwarddirectionoftheprofile.
610 Creo®Parametric TOOLKIT User’sGuideNote
WhenthenewProGtol*Get() functions, except
ProGtolTopModelGet(), ProGtolReferencesGet(),
ProGtolReferenceDelete(), andProGtolValidate() arecalled
ongeometric tolerances createdinreleasespriortoCreoParametric 4.0F000,
theselegacygeometric tolerances areconverted tothenewCreoParametric
4.0geometric tolerances. Inthiscase,therevisionnumberofthemodelisalso
incremented.
CreatingaGeometricTolerance
Functions Introduced:
•ProGtolT ypeSet()
•ProGtolRefer encesAdd()
•ProGtolRefer enceDelete()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxincremented.
CreatingaGeometricTolerance
Functions Introduced:
•ProGtolT ypeSet()
•ProGtolRefer encesAdd()
•ProGtolRefer enceDelete()
•ProGtolDatumRefere ncesSet()
•ProGtolV alueStringSet()
•ProGtolCompositeSet()
•ProGtolCompositeShare RefSet()
•ProGtolAllAr oundSet()
•ProGtolAllOverSet()
•ProGtolAddlT extBoxedSet()
•ProGtolElbowlengthSet()
•ProGtolBoundaryDisplaySet()
•ProGtolUnilateralSet()
•ProMdlGtolCr eate()
•ProGtolDtlnotesCollect()
Thebasicstepsincreatingagtolare:
1.AllocateaProGtolAttach structureusing ProGtolAttachAlloc().
2.Settheattachment properties usingtheProGtolAttach*Set() functions.
3.Settoleranceproperties usingtheProGtol*Set() functions.
4.Createthetoleranceusing ProMdlGtolCreate(). Oncethetoleranceis
created,youmustusethefunction ProAnnotationShow() todisplayit.
Annotations: Geometric Tolerances 6115.FreeProGtolAttach using ProGtolAttachFree().
Thefunction ProGtolTypeSet() setsthetypeofgeometric toleranceusing
theenumerated datatypeProGtolType.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations: Geometric Tolerances 6115.FreeProGtolAttach using ProGtolAttachFree().
Thefunction ProGtolTypeSet() setsthetypeofgeometric toleranceusing
theenumerated datatypeProGtolType.
Usethefunction ProGtolReferencesAdd() toadddatumreferences tothe
specifiedgtol.Usethefunction ProGtolReferenceDelete() todeletethe
datumreferences fromthespecifiedgtol.
Thefunction ProGtolIndicatorsSet() setstheindicators forthespecified
gtol.Theinputargumentsare:
•gtol—Specifies thegtol.
•types—Specifies aProArray ofindicatortypesusingtheenumerated data
typeProGtolIndicatorType. Usethefunction ProArrayFree() to
freethearray.
•symbols—Specifies aProArray ofstringsforindicatorsymbols.Freethe
arrayusingthefunction ProWstringproarrayFree().
•dfs—Specifies aProArray ofstringsfordatumfeaturesymbols.Freethe
arrayusingthefunction ProWstringproarrayFree().
Thefunction ProGtolCompositeSet() setsthevalueanddatumreferences,
primary,secondary,andtertiaryforthespecifiedcomposite gtol.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayusingthefunction ProWstringproarrayFree().
Thefunction ProGtolCompositeSet() setsthevalueanddatumreferences,
primary,secondary,andtertiaryforthespecifiedcomposite gtol.
Usethefunction ProGtolCompositeShareRefSet() tospecifyifdatum
references inacomposite gtolmustbesharedbetweenallthedefinedrows.Pass
theinputargument shareasPRO_B_TRUE tosharethereferences.
Thefunction ProGtolValueStringSet() setsthespecifiedvalueforagtol.
Usethefunction ProGtolDatumReferencesSet() tosetthedatum
references forthespecifiedgtol.Thedatumreferences aresetaswchar_t*
strings.Usethefunction ProWstringFree() tofreethestrings.
Thedatumreferences aregiventoProGtolDatumReferencesSet() inthe
formofwchar_t* strings.Usethefunction ProWstringFree() tofreethe
strings.
Thefunction ProGtolElbowlengthSet() setstheelbowalongwithits
properties foraleadertypeofgtol.Thefunctionissupported forleadertypegtols
whichareplacedontheannotation plane.Theinputargumentsare:
•gtol—Specifies agtol.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxproperties foraleadertypeofgtol.Thefunctionissupported forleadertypegtols
whichareplacedontheannotation plane.Theinputargumentsare:
•gtol—Specifies agtol.
•elbow_length—Specifies thelengthoftheelbowinmodelcoordinates.
•elbow_dir ection—Specifies thedirectionoftheelbowinmodelcoordinates.
Thegtoltextalsomovesinthisdirection.
Thefunction ProGtolBoundaryDisplaySet() setstheboundarymodifier
forthespecifiedgtol.Usethefunction ProGtolUnilateralSet() tosetthe
profileboundaryasunilateralinthespecifiedgtol.Thefunctionalsosetsthe
tolerancedisposition totheoutwarddirectionoftheprofile.
612 Creo®Parametric TOOLKIT User’sGuideThefunction ProGtolAllAroundSet() setstheAllOversymbolforthe
specifiedgeometric tolerance.
Thefunction ProGtolAllAroundSet() setstheAllAroundsymbolforthe
specifiedgeometric tolerance.
Thefunction ProGtolAddlTextBoxedSet() createsaboxaroundthe
specifiedadditional textinageometric tolerance.Boxescanbecreatedaround
additional textaddedaboveandbelowtheframeofthegeometric tolerance.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProGtolAddlTextBoxedSet() createsaboxaroundthe
specifiedadditional textinageometric tolerance.Boxescanbecreatedaround
additional textaddedaboveandbelowtheframeofthegeometric tolerance.
FromCreoParametric 4.0F000onward,stackedgeometric tolerancecreates
separatenotesforeachtolerance.Forastackedgeometric tolerance,thefunctions
ProGtolDtlnoteGet(), ProDtlnoteDataGet(), and
ProDtlnotedataLinesCollect() willreturninformation aboutindividual
notesforeachgeometric tolerance.
Thefunction ProGtolDtlnotesCollect() returnsthedetailnotesthat
representageometric toleranceinthespecifieddrawing.Theinputarguments
follow:
•solid_model_gtol—The handletothegeometric tolerance.
•drawing—Thedrawingwherethenoteisdisplayed.
Thefunctionreturnsanarrayofdrawingnotesthatrepresents thegeometric
tolerance.
AttachingtheGeometricTolerances
Thefunctionsexplainedinthissectionenableyoutoaccessandsetattachment
optionsforthegeometric tolerance.
FunctionIntroduced:
•ProGtolAttachGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtolerance.
AttachingtheGeometricTolerances
Thefunctionsexplainedinthissectionenableyoutoaccessandsetattachment
optionsforthegeometric tolerance.
FunctionIntroduced:
•ProGtolAttachGet()
•ProGtolAttachSuppr essedLeadersGet()
•ProGtolAttachSet()
•ProGtolAttachT ypeGet()
•ProGtolAttachLeadersGet()
•ProGtolAttachLeadersSet()
•ProGtolleaderGet()
•ProGtolleaderZExtensionlineGet()
•ProGtolEnvelopeGet()
•ProGtolleadersFr ee()
•ProGtolAttachOffsetItemGet()
•ProGtolAttachOffsetItemSet()
•ProGtolAttachFr eeGet()
Annotations: Geometric Tolerances 613•ProGtolAttachFr eeSet()
•ProGtolleaderFr ee()
•ProGtolAttachOnDatumGet()
•ProGtolAttachOnDatumSet()
•ProGtolAttachOnAnnotationGet()
•ProGtolAttachOnAnnotationSet()
•ProGtolAttachMakeDimGet()
•ProGtolAttachMakeDimSet()
Thefunction ProGtolAttachGet() retrievesalltheattachment related
information foragtolasaProGtolAttach structure.Usethefunction
ProGtolAttachSet() tosettheattachment options.IfthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProGtolAttachGet() retrievesalltheattachment related
information foragtolasaProGtolAttach structure.Usethefunction
ProGtolAttachSet() tosettheattachment options.Ifthefunction
ProGtolAttachSet() specifiesoneormoreleaders,theleadersaredescribed
byaseparateopaqueobjectcalled ProGtolleader. Thisobjectisallocatedby
calltothefunction ProGtolleaderAlloc(). Usethefunction
ProGtolleaderFree() tofreetheallocatedmemory.
Thefunction ProGtolAttachTypeGet() retrievesthetypeofattachment for
agtol.Itusestheenumerated datatypeProGtolAttachType toprovide
information abouttheplacement ofthegtol.Thevalidvaluesare:
•PRO_GTOL_ATTACH_DATUM –Specifiesthatthegtolisplacedonits
referencedatum.
•PRO_GTOL_ATTACH_ANNOTATION—Specifies thatthegtolisattachedto
anannotation.
•PRO_GTOL_ATTACH_ANNOTATION_ELBOW—Specifies thatthegtolis
attachedtotheelbowofanannotation.
•PRO_GTOL_ATTACH_FREE—Specifies thatthegtolisplacedasafree.Itis
unattached tothemodelordrawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_GTOL_ATTACH_ANNOTATION_ELBOW—Specifies thatthegtolis
attachedtotheelbowofanannotation.
•PRO_GTOL_ATTACH_FREE—Specifies thatthegtolisplacedasafree.Itis
unattached tothemodelordrawing.
•PRO_GTOL_ATTACH_LEADERS—Specifies thatthegtolisattachedwith
oneormoreleadertogeometrysuchas,edge,dimension witnessline,
coordinate system,axiscenter,axislines,curves,orsurfacepoints,vertices,
sectionentities,draftentities,andsoon.Theleadersarerepresented usingan
opaquehandle, ProGtolleader.
•PRO_GTOL_ATTACH_OFFSET—Specifies thatthegtolframecanbeplaced
atanoffsetfromthefollowingdrawingobjects:dimension, dimension arrow,
gtol,note,andsymbol.
•PRO_GTOL_ATTACH_MAKE_DIM—Specifies thatthegtolframeisattached
toadimension line.
Usethefunction ProGtolAttachLeadersGet() togetattachment details
forleadertypeofgtol.Theoutputargumentsare:
•plane—Specifies theannotation plane.Forgtolsdefinedindrawing,itreturns
NULL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProGtolAttachLeadersGet() togetattachment details
forleadertypeofgtol.Theoutputargumentsare:
•plane—Specifies theannotation plane.Forgtolsdefinedindrawing,itreturns
NULL.
614 Creo®Parametric TOOLKIT User’sGuide•type—Specifies theattachment typefortheleaderusingtheenumerated data
typeProGtolLeaderAttachType.
•leaders—Specifies aProArray ofgtolleaders.
•location—Specifies thelocationofgtoltextinmodelcoordinates.
Usethefunction ProGtolAttachSuppressedLeadersGet() togetthe
numberofleadersthataresuppressed duetomissingreferences.
Usethefunction ProGtolAttachLeadersSet() tosettheattachment
optionsforleadertypeofgtol.
Tounpacktheinformation intheProGtolleader handle,usethefunction
ProGtolleaderGet(). Afterreadingtheleaders,freetheleaderarrayby
calling ProGtolleadersFree().
Thefunction ProGtolleaderZExtensionlineGet() retrievestheZ-
Extension lineofthegtolleader.Theleaderlocationcoordinates arerequired
whenthegtolismovedtoadifferentannotation plane.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProGtolleaderZExtensionlineGet() retrievestheZ-
Extension lineofthegtolleader.Theleaderlocationcoordinates arerequired
whenthegtolismovedtoadifferentannotation plane.
Thefunction ProGtolEnvelopeGet() returnstheenvelopeofthegtol.The
outputargument envelope istheenvelopesurrounding thegtolinthe
coordinate systemofthemodel.Fordrawing,theenvelopeofthegtolisinthe
screencoordinates. Whileretrievingcoordinates ofthegtolinaspecifiedsolid,if
thegtolisdisplayedinthesolidaswellasinthedrawing,thedrawingmustnotbe
active.
Thefunction ProGtolAttachOffsetItemGet() returnstheoffset
references forthespecified ProGtolAttach structure.Thefunctionreturnsthe
followingoutputarguments:
•offset_r ef—Specifies theoffsetreferenceasaProSelection object.The
referencecanbeadimension, arrowofadimension, anothergeometric
tolerance,note,orasymbolinstance.Iftherearenooffsetreferences, the
outputargumentreturns NULL.
•offset—Specifies thepositionoftheoffsetreferenceasmodelcoordinates.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtolerance,note,orasymbolinstance.Iftherearenooffsetreferences, the
outputargumentreturns NULL.
•offset—Specifies thepositionoftheoffsetreferenceasmodelcoordinates.
Usethefunction ProGtolAttachOffsetItemSet() tosettheoffset
references forthespecified ProGtolAttach structure.
Thefunction ProGtolAttachFreeGet() getsthedetailsforfreetypeofgtol.
Itretrievesinformation abouttheannotation planeandlocationofthegtoltextin
modelcoordinates. Forgtolsdefinedindrawing,thefunctionreturns NULLfor
annotation plane.Usethefunction ProGtolAttachFreeSet() tosetthe
optionsforfreetypegtol.
Thefunctions ProGtolAttachOnDatumGet() and
ProGtolAttachOnDatumSet() getandsetdatumsymbolforthegeometric
tolerance.FromCreoParametric 4.0F000onward,datumsymbolsaredefined
usingdatumfeaturesymbol.Thefunctionsworkwiththenewdatumfeature
symbolalongwiththelegacydatumtagannotations.
Annotations: Geometric Tolerances 615Thefunction ProGtolAttachOnAnnotationGet() retrievestheannotationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsymbolalongwiththelegacydatumtagannotations.
Annotations: Geometric Tolerances 615Thefunction ProGtolAttachOnAnnotationGet() retrievestheannotation
forthespecified ProGtolAttach structure.Thefunction
ProGtolAttachOnAnnotationSet() setsthespecifiedannotation tothe
attachment structure.Theinputargumentsare:
•gtol_attach—Specifies theattachment structure ProGtolAttach fora
geometric tolerance.
•p_annot—Specifies theannotation. ForgtolsinthesolidyoucansetPRO_
DIMENSION, PRO_GTOL, andPRO_NOTE typeofannotations. Fordrawing
gtols,youcansetPRO_DIMENSION, PRO_GTOL, andPRO_NOTE typeof
annotations.
•elbow—Specifies thattheannotation mustbeplacedontheelbowofthe
leaderinsteadofthegtoltext.Iftheannotation typeissetasPRO_NOTE, then
youmustsetelbowasPRO_B_TRUE.
Thefunction ProGtolAttachMakeDimGet() getsalltheinformation fora
geometric tolerancecreatedwithMakeDimtypeofreference.MakeDimtypeof
referencemodeenablesyoutocreateadimension lineandplacethegtolframexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProGtolAttachMakeDimGet() getsalltheinformation fora
geometric tolerancecreatedwithMakeDimtypeofreference.MakeDimtypeof
referencemodeenablesyoutocreateadimension lineandplacethegtolframe
attachedtoit.Thegeometric toleranceappearsinstandarddimension format,but
withthegeometric toleranceinsteadofadimension value.Theoutputarguments
are:
•plane—Specifies theannotation planeforthegtol.
•attachments_arr—Specifies thepointsonthemodelordrawingwherethegtol
isattached.
•dsense_arr—Specifies moreinformation abouthowthegtolattachestoeach
attachment pointofthemodelordrawing.
•orient_hint—Specifies theorientation ofthegtolusingtheenumerated data
typeProDimOrient. Thevalidvaluesare
○PRO_DIM_ORNT_HORIZ—Specifies ahorizontal dimension.
○PRO_DIM_ORNT_VERT—Specifies averticaldimension.
○PRO_DIM_ORNT_SLANTED—Specifies theshortestdistancebetween
twoattachment points.Thisvalueisavailableonlywhenthedimension is
attachedtopoints.
○PRO_DIM_ORNT_ELPS_RAD1—Specifies thestartradiusforaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_DIM_ORNT_SLANTED—Specifies theshortestdistancebetween
twoattachment points.Thisvalueisavailableonlywhenthedimension is
attachedtopoints.
○PRO_DIM_ORNT_ELPS_RAD1—Specifies thestartradiusfora
dimension onanellipse.
○PRO_DIM_ORNT_ELPS_RAD2—Specifies theendradiusfora
dimension onanellipse.
○PRO_DIM_ORNT_ARC_ANG—Specifies theangleofthearcfora
dimension ofanarc.
○PRO_DIM_ORNT_ARC_LENGTH—Specifies thelengthofthearcfora
dimension ofanarc.
616 Creo®Parametric TOOLKIT User’sGuide○PRO_DIM_ORNT_LIN_TANCRV_ANG—If thedimension isattachedtoa
lineandanendpointofacurve,thedefaultdimension willbealinear
dimension showingthedistancebetweenthelineandthecurvepoint.Set
thisvalueifyouwantthedimension toshowinsteadtheanglebetweenthe
lineandthetangentatthecurvepoint.
○PRO_DIM_ORNT_RAD_DIFF—Specifies thelineardimension ofthe
radialdistancebetweentwoconcentric arcsorcircles.
○PRO_DIM_ORNT_NORMAL—Specifies thelineardimension betweentwo
pointstobeplacednormaltotheselectedreference.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxradialdistancebetweentwoconcentric arcsorcircles.
○PRO_DIM_ORNT_NORMAL—Specifies thelineardimension betweentwo
pointstobeplacednormaltotheselectedreference.
○PRO_DIM_ORNT_PARALLEL—Specifies thelineardimension between
twopointstobeplacedparalleltotheselectedreference.
•location—Specifies thelocationofgtoltextasmodelcoordinates.
Thefunction ProGtolAttachMakeDimSet() setsalltheoptionstocreatea
geometric tolerancewithMakeDimtypeofreference.
DeletingaGeometricTolerance
FunctionIntroduced:
•ProGtolDelete()
Thefunction ProGtolDelete permanently removesagtol.
ValidatingaGeometricTolerance
FunctionIntroduced:
•ProGtolV alidate()
Thefunction ProGtolValidate checksifthespecifiedgeometric toleranceis
syntactically correct.Forexample,whenastringisspecifiedinsteadofanumber
foratolerancevalue,itisconsidered assyntactically incorrect.Theinput
argumentsare:
•gtol—Specifies thegeometric tolerancetobechecked.
•ProGtolV alidityCheckT ype—Specifies thetypeofcheck.Currently,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforatolerancevalue,itisconsidered assyntactically incorrect.Theinput
argumentsare:
•gtol—Specifies thegeometric tolerancetobechecked.
•ProGtolV alidityCheckT ype—Specifies thetypeofcheck.Currently,the
toleranceischeckedforcorrectsyntax.
GeometricToleranceLayout
Thefunctionsdescribedinthissectionprovideaccesstothelayoutforthetextand
symbolsinageometric tolerance.
Functions Introduced:
•ProGtolElbowlengthGet()
Annotations: Geometric Tolerances 617•ProGtolLineEnvelopeGet()
•ProGtolRightT extEnvelopeGet()
Thefunction ProGtolElbowlengthGet() returnsthelengthanddirectionof
thegeometric toleranceleaderelbow.
Thefunction ProGtolLineEnvelopeGet() returnstheboundingbox
coordinates foronelinefromthegeometric tolerance.
Thefunction ProGtolRightTextEnvelopeGet() returnstheboundingbox
coordinates fortherighttextinaspecifiedgeometric tolerance.
Note
Thefunctions ProGtolLineEnvelopeGet() and
ProGtolRightTextEnvelopeGet() supportthegeometric tolerances
placedonannotation planes.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcoordinates fortherighttextinaspecifiedgeometric tolerance.
Note
Thefunctions ProGtolLineEnvelopeGet() and
ProGtolRightTextEnvelopeGet() supportthegeometric tolerances
placedonannotation planes.
AdditionalTextforGeometricTolerances
Youcanplacemulti-line additional texttotheright,left,bottom,andabovea
geometric tolerancecontrolframewhilecreatingandeditingagtolinboth
drawingandmodelmodes.
Functions Introduced:
•ProGtolRightT extGet()
•ProGtolRightT extSet()
•ProGtolLeftT extGet()
•ProGtolLeftT extSet()
•ProGtolT opTextGet()
•ProGtolT opTextSet()
•ProGtolBottomT extGet()
•ProGtolBottomT extSet()
Thefunction ProGtolRightTextGet() retrievesthetextaddedtotheright
ofthespecifiedgeometric tolerance.
Usethefunction ProGtolRightTextSet() tosetthetexttobeaddedtothe
rightofthespecifiedgeometric tolerance.
Thefunction ProGtolLeftTextGet() retrievesthetextaddedtotheleftof
thespecifiedgeometric tolerance.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrightofthespecifiedgeometric tolerance.
Thefunction ProGtolLeftTextGet() retrievesthetextaddedtotheleftof
thespecifiedgeometric tolerance.
618 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProGtolLeftTextSet() tosetthetexttobeaddedtothe
leftofthespecifiedgeometric tolerance.
Thefunction ProGtolTopTextGet() retrievesthetextaddedtothetopofthe
specifiedgeometric tolerance.
Usethefunction ProGtolTopTextSet() tosetthetexttobeaddedtothetop
ofthespecifiedgeometric tolerance.
Thefunction ProGtolBottomTextGet() retrievesthetextaddedtothe
bottomofthespecifiedgeometric tolerance.
Usethefunction ProGtolBottomTextSet() tosetthetexttobeaddedtothe
bottomofthespecifiedgeometric tolerance.
Note
Iftheadditional textextendsovermultiplelines,theinputstringmustcontain
\ncharacters toindicatelinebreaks.Theoutputstringalsocontains \n
characters indicating linebreaks.Thetextaddedtothetopofagtolcannot
extendbeyondthelengthofthegeometric tolerancecontrolframe.
GeometricToleranceTextStylexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcharacters indicating linebreaks.Thetextaddedtothetopofagtolcannot
extendbeyondthelengthofthegeometric tolerancecontrolframe.
GeometricToleranceTextStyle
Thefunctionsdescribedinthissectionaccessthetextstyleproperties ofa
geometric tolerance.
Functions Introduced:
•ProGtolT extstyleGet()
•ProGtolT extstyleSet()
•ProGtoltextT extstyleGet()
•ProGtoltextT extstyleSet()
•ProGtolT opTextHorizJustificationSet()
•ProGtolT opTextHorizJustificationGet()
•ProGtolBottomT extHorizJustificationSet()
•ProGtolBottomT extHorizJustificationGet()
Thefunction ProGtolTextstyleGet() returnsthetextstyleassignedofa
specifiedgeometric tolerance.
Thefunction ProGtolTextstyleSet() assignsthetextstyleofaspecified
geometric tolerance.
Annotations: Geometric Tolerances 619Thefunction ProGtoltextTextstyleGet() retrievesthetextstyleofthe
additional textappliedtothespecifiedgeometric tolerance.
Thefunction ProGtoltextTextstyleSet() assignsthetextstyleofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxadditional textappliedtothespecifiedgeometric tolerance.
Thefunction ProGtoltextTextstyleSet() assignsthetextstyleofthe
additional textappliedtothespecifiedgeometric tolerance.Specifytheinstanceof
theadditional texttobeaccessedusingtheenumerated datatype
ProGtolTextType.
Thefunction ProGtolTopTextHorizJustificationSet() setsthe
horizontal justification fortheadditional textappliedtothespecifiedgeometric
toleranceatthetop.
Thefunction ProGtolTopTextHorizJustificationGet() retrievesthe
horizontal justification fortheadditional textappliedtothespecifiedgeometric
toleranceatthetop.
Thefunction ProGtolBottomTextHorizJustificationSet() setsthe
horizontal justification fortheadditional textappliedtothespecifiedgeometric
toleranceatthebottom.
Thefunction ProGtolBottomTextHorizJustificationGet() retrieves
thehorizontal justification fortheadditional textappliedtothespecified
geometric toleranceatthebottom.
PrefixandSuffixforGeometric
Tolerancesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthehorizontal justification fortheadditional textappliedtothespecified
geometric toleranceatthebottom.
PrefixandSuffixforGeometric
Tolerances
Youcaneasilyaddaprefixandsuffixtoageometric toleranceinbothdrawing
andmodelmodes.Theyhavethesametextstyleasthegeometric tolerancetext.
Aprefixwillbeplacedbeforethetolerancevalue;asuffixwillbeplacedafterthe
materialcondition, ifoneexists.
Functions Introduced:
•ProGtolPr efixGet()
•ProGtolPr efixSet()
•ProGtolSuffixGet()
•ProGtolSuffixSet()
Thefunction ProGtolPrefixGet() obtainstheprefixtextforthespecified
geometric tolerance.
Thefunction ProGtolPrefixSet() assignstheprefixsetforthespecified
geometric tolerance.
Thefunction ProGtolSuffixGet() obtainsthesuffixtextforthespecified
geometric tolerance.
620 Creo®Parametric TOOLKIT User’sGuideThefunction ProGtolSuffixSet() assignsthesuffixtextforthespecified
geometric tolerance.
Parameters forGeometricTolerance
Attributes
Systemparameters areautomatically generatedfortheattributesofageometricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometric tolerance.
Parameters forGeometricTolerance
Attributes
Systemparameters areautomatically generatedfortheattributesofageometric
toleranceuponthecreationofthegeometric tolerance.Theseparameters areused
fordownstream processessuchasCoordinate Measuring Machine(CMM)
operations, andindrivingotherannotation andfeaturerelationships.
Note
Parameters aregeneratedonlyforgeometric tolerances createdwithin
annotation featuresbecause2Dor3Dgeometric tolerances createdoutside
annotation elementsdonothaveaplaceholder forparameters.
Thefollowingtableliststhevarioussystemparameters andthegtolattributesfor
whichtheparameters aregenerated:
Parameter GtolAttribute
PTC_GTOL_PRIMAY_TOL Primarytolerancevalue
PTC_GTOL_TYPE Geometric tolerancetype
PTC_GTOL_MATERIAL_CONDITION Materialconditionfortheprimarytolerancevalue
PTC_GTOL_COMPOSITE_TOL Composite tolerancevalue;availableonlyifthegtol
typeisSurfaceorPosition
PTC_GTOL_PERUNIT_TOL Pre-unittolerancevalue;availableonlyifthegtolxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPTC_GTOL_COMPOSITE_TOL Composite tolerancevalue;availableonlyifthegtol
typeisSurfaceorPosition
PTC_GTOL_PERUNIT_TOL Pre-unittolerancevalue;availableonlyifthegtol
typeisStraightness, Perpendicular ,Surface,Parallel,
orFlatness
PTC_GTOL_UNITLENGTH_TOL Unitlengthvalue;availableonlyifthegtoltypeis
Straightness, Perpendicular ,Surface,orParallel
PTC_GTOL_UNITAREA_TOL Unitareavalue;availableonlyifthegtoltypeis
Flatness
PTC_GTOL_PROJECTEDTOLZONE_TOL Projectedtolerancezonevalue;availableonlyifthe
gtoltypeisAngular,Perpendicular ,Parallel,or
Position
PTC_GTOL_UNEQUALLYDISPOSED_TOL Unequally disposedtolerancevalue;availableonlyif
thegtoltypeisSurface
Youcanaccesstheparameters ofgtolattributesbyusingtheCreoParametric
TOOLKITparameter functions ProParameter*Get() and
ProParameter*Set(), andtheUDFplacement functionsrelatedtovariable
parameters ProUdfvarparam*() andProUdfdataVarparamAdd().
RefertothechapterCore:Parameters onpage208formoreinformation on
parameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProParameter*Set(), andtheUDFplacement functionsrelatedtovariable
parameters ProUdfvarparam*() andProUdfdataVarparamAdd().
RefertothechapterCore:Parameters onpage208formoreinformation on
parameters.
Annotations: Geometric Tolerances 62126
Annotations: Designated Area
Feature
Introduction toDesignatedAreaFeature...................................................................623
FeatureElementTreefortheDesignatedArea..........................................................623
AccessingDesignatedAreaProperties.....................................................................625
Thischapterdescribeshowtoaccessdesignated areafeaturesthroughCreo
Parametric TOOLKIT.
622 Creo®Parametric TOOLKIT User’sGuideIntroduction toDesignated AreaFeature
ADesignated Areaisa“cosmetic surface"thatcanbereferenced byannotations
(including drivendimensions), andpropagates asyouaddgeometrytothemodel.
Itisusedtoindicateanareathatneedstobecloselyexaminedortreated
differently.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(including drivendimensions), andpropagates asyouaddgeometrytothemodel.
Itisusedtoindicateanareathatneedstobecloselyexaminedortreated
differently.
Thedesignated areaismadeupofsetsofchainsconstructed byaselectionof
edgesorcurves.Thecurvesmightlieonasolid(bydefault),aquilt,oronaplane.
Ifthechainslieonmultipleobjecttypes,thenyoumustdecideononeobjecttype
toplacethetargetarea.
Youcanattachanannotation tothecreatedsurfaceortoitsboundaries. Youcan
alsoincludethedesignated areaasareferenceinadatasharingfeature,ifits
parentsurfaceisincluded.Geometry ofthisfeaturecanbeaccessedusing
standardCreoParametric TOOLKITfunctionssuchas
ProFeatureGeomitemVisit() andProSolidQuiltVisit().
FeatureElementTreefortheDesignated
Area
TheelementtreefortheDesignated Areafeatureisdocumented intheheaderfile
ProDesignatedArea.h. Thefollowingfiguredemonstrates thefeature
elementtreestructure:
FeatureElementTreeforaDesignated Area
Thefollowinglistdetailsspecialinformation abouttheelementsinthistree:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDesignatedArea.h. Thefollowingfiguredemonstrates thefeature
elementtreestructure:
FeatureElementTreeforaDesignated Area
Thefollowinglistdetailsspecialinformation abouttheelementsinthistree:
Annotations: Designated AreaFeature 623•PRO_E_FEATURE_TYPE—Specifies thefeaturetype,shouldalwayshave
thevalue PRO_FEAT_DSGNT_AREA.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthedesignated area
feature.
•PRO_E_DSGNTAREA_CREATION—Specifies thedatausedforcreationof
thedesignated area.Itconsistsofthefollowingelements:
○PRO_E_DSGNTAREA_CREATION_TYPE—Specifies whetherthe
designated arealiesonasolid,aquilt,oronaplane,wherethenew
surfacewillbeconstructed fromachainnotrelatedtoexistingsurfaces.It
canhaveoneofthefollowingvalues:
○PRO_DSGNTA_CR_SOLID —Specifiesthatthefeatureiscreatedona
solidmodel.
○PRO_DSGNTA_CR_QUILT —Specifiesthatthefeatureiscreatedona
selectedquilt
○PRO_DSGNTA_CR_AIR —Specifiesthatthefeatureiscreatedonaplane
fromachainofcurvesnotlyingonanymodelsurfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsolidmodel.
○PRO_DSGNTA_CR_QUILT —Specifiesthatthefeatureiscreatedona
selectedquilt
○PRO_DSGNTA_CR_AIR —Specifiesthatthefeatureiscreatedonaplane
fromachainofcurvesnotlyingonanymodelsurface
○PRO_E_DSGNTAREA_LIE_ON —Specifiestheplacement referenceof
thefeature.IfthetypeisPRO_DSGNTA_CR_QUILT, thefeaturemust
includetheplacement quilt.IfthetypeisPRO_DSGNTA_CR_SOLID, it
canoptionally includeasinglesurfaceofthesolid,whichwillbetheonly
surfaceofthesolidusedinconstructing thefeature.Ifyoudonotspecifya
singlesurface,allsolidsurfaceswillbeincludedinthedesignated area
featurereferences.
○PRO_E_DSGNTAREA_CREATION_FLIP —Specifiestheflipoptionto
switchbetweeninsideandoutsidetheboundarychains,andcanbesetto
either TRUEorFALSE.
•PRO_E_DSGNTAREA_SETS—Specifies anarrayofcompound elementsof
thetypePRO_E_DSGNTAREA_SET thatcontainthedesignated area
boundaries.
624 Creo®Parametric TOOLKIT User’sGuideElementDetailsofPRO_E_DSGNT AREA_SET
PRO_E_DSGNT AREA_SETS
EachPRO_E_DSGNTAREA_SET containsthefollowingelement:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxboundaries.
624 Creo®Parametric TOOLKIT User’sGuideElementDetailsofPRO_E_DSGNT AREA_SET
PRO_E_DSGNT AREA_SETS
EachPRO_E_DSGNTAREA_SET containsthefollowingelement:
PRO_E_DSGNTAREA_SET_REFS —Specifiesthesetofreferences tobeused
forcreationofthedesignated areaandconsistsofthefollowingelement:
•PRO_E_STD_CHAIN_HOLDER —Specifiesthesetofchainsandcan
consistsofoneormoreofthefollowingelement:
○PRO_E_STD_CURVE_COLLECTION_APPL —Specifiesthecollection
ofcurvestobeusedasreference. Eachcurvesetmustconsistofaclosed
loop.Formoreinformation aboutcurvecollections, refertothechapter,
UserInterface:CurveandSurfaceCollection.
AccessingDesignated AreaProperties
Thefollowingfunctionsdetermine theappearance ofthedesignated areaby
controlling itsboundaryproperties suchasthelinestyleandtheappearance ofthe
surface.
Functions Introduced:
•ProDesignatedar eaStatusGet()
•ProDesignatedar eaLinestyleGet()
•ProDesignatedar eaLinestyleSet()
•ProDesignatedar eaColorGet()
•ProDesignatedar eaColorSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurface.
Functions Introduced:
•ProDesignatedar eaStatusGet()
•ProDesignatedar eaLinestyleGet()
•ProDesignatedar eaLinestyleSet()
•ProDesignatedar eaColorGet()
•ProDesignatedar eaColorSet()
Thefunction ProDesignatedareaStatusGet() identifiesthecurrent
statusofthegeometryofthecreateddesignated area.Theinputvaluetothis
functionisaquiltfromthedesignated area,orfromadatasharingfeature
referencing thedesignated area.
Theoutputgeometrycanhaveoneofthefollowingvalues:
Annotations: Designated AreaFeature 625•PRO_DSGNTAREA_STATUS_ACTIVE—Specifies thatthegeometryis
activeintheindicatedmodel.
•PRO_DSGNTAREA_STATUS_INACTIVE—Specifies thatthegeometryis
inactiveduetogeometryfeaturesoccurringafterthedesignated areafeaturein
theregeneration order.
•PRO_DSGNTAREA_STATUS_OUT_OF_COPIED_GEOM—Specifies thatthe
parentgeometryusedfromthetrimmingwascutoutfromthemodel.
Thefunction ProDesignatedareaLinestyleGet() returnsthelinestyle
usedfortheboundaryofthedesignated area.Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparentgeometryusedfromthetrimmingwascutoutfromthemodel.
Thefunction ProDesignatedareaLinestyleGet() returnsthelinestyle
usedfortheboundaryofthedesignated area.Usethefunction
ProDesignatedareaLinestyleSet() tosetthelinestyle.
Thefunction ProDesignatedareaColorGet() returnsthecolorusedfor
theboundaryofthedesignated area.Usethefunction
ProDesignatedareaColorSet() tosetthecolor.
626 Creo®Parametric TOOLKIT User’sGuide27
DataManagement: Windchill
Operations
Introduction.............................................................................................................628
AccessingaWindchillServerfromaCreoParametricSession...................................628
AccessingtheWorkspace........................................................................................631
WorkflowtoRegisteraServer..................................................................................633xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxWorkflowtoRegisteraServer..................................................................................633
AliasedURL............................................................................................................633
ServerOperations...................................................................................................634
UtilityAPIs..............................................................................................................648
SampleBatchWorkflow...........................................................................................649
CreoParametric hasthecapability tobedirectlyconnected toWindchillsolutions,
includingWindchillProjectLink, Pro/INTRALINK andPDMLink servers.This
accessallowsuserstomanageandcontroltheproductdataseamlessly from
withinCreoParametric.
ThischapterlistsCreoParametric TOOLKITAPIsthatsupportWindchillservers
andserveroperations inaconnected CreoParametric session.
627IntroductionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwithinCreoParametric.
ThischapterlistsCreoParametric TOOLKITAPIsthatsupportWindchillservers
andserveroperations inaconnected CreoParametric session.
627Introduction
Thefunctionsintroduced inthischapterprovidesupportforthebasicWindchill
serveroperations fromwithinCreoParametric. Refertothecompatibility matrix
onPTC.comforinformation ontheversionsofWindchillcompatible withCreo
Parametric.
Withthesefunctions, operations suchasregistering aWindchillserver,managing
workspaces, andcheckinorcheckoutofobjectswillbepossibleviaCreo
Parametric TOOLKIT.
Thecapabilities oftheAPIsdescribedinthischapteraresimilartotheoperations
availablefromwithintheCreoParametric client,withsomerestrictions. Someof
theAPIsspecifiedinthissectionaresupported innon-interactive mode,thatis,
batchmodeapplication orasynchronous application.
Note
WhenCreoParametric applications arerunninginasynchronous non-
graphicalmode,theyrequirelogincredentials beforeexecution. Ifyouwanttoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbatchmodeapplication orasynchronous application.
Note
WhenCreoParametric applications arerunninginasynchronous non-
graphicalmode,theyrequirelogincredentials beforeexecution. Ifyouwantto
overridetherequirement ofspecifying logincredentials forCreoParametric
applications, settheenvironment variable PROWT_AUTH_MODE toPROWT_
AUTH_UNATTENDED.
Formoreinformation aboutbatchmoderefertothesectionUsingCreo
Parametric TOOLKITtoMakeaBatchCreoParametric Sessiononpage52and
forasynchronous moderefertothechapterCore:Asynchronous Modeonpage
273.
AccessingaWindchillServerfromaCreo
Parametric Session
CreoParametric allowsyoutoregisterWindchillserversasaconnection between
theWindchilldatabaseandCreoParametric. Althoughtherepresented Windchill
databasecanbefromProjectLink, Pro/INTRALINK orPDMLink, alltypesof
databasesarerepresented inthesameway.
Youcanusethefollowingidentifiers whenreferringtoWindchillserversinCreo
Parametric TOOLKIT:
•Codebase URL—This istherootportionoftheURLthatisusedtoconnectxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatabasesarerepresented inthesameway.
Youcanusethefollowingidentifiers whenreferringtoWindchillserversinCreo
Parametric TOOLKIT:
•Codebase URL—This istherootportionoftheURLthatisusedtoconnect
toaWindchillserver.Forexample,http://wcserver .company.com/Windchill.
•Server Alias—A serveraliasisusedtorefertotheserverafterithasbeen
registered. Thealiasisalsousedtoconstructpathstofilesintheserver
workspaces andcommonspaces. Theserveraliasischosenbytheuseror
628 Creo®Parametric TOOLKIT User’sGuideapplication anditneednothaveanydirectrelationship tothecodebaseURL.
Analiascanbeanynormalname,suchasmy_alias.
AccessingInformation BeforeRegistering aServer
TostartworkingwithaWindchillserver,youmustestablishaconnection by
registering theserverinCreoParametric. Thefunctionsdescribedinthissection
enableyoutoconnecttoaWindchillserverandaccessinformation relatedtothe
server.
Functions Introduced:
•ProBro wserAuthenticate()
•ProServerClassGet()
•ProServerV ersionGet()
•ProServerContextsCollect()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxenableyoutoconnecttoaWindchillserverandaccessinformation relatedtothe
server.
Functions Introduced:
•ProBro wserAuthenticate()
•ProServerClassGet()
•ProServerV ersionGet()
•ProServerContextsCollect()
•ProServerW orkspacesCollect()
Usethefunction ProBrowserAuthenticate() tosettheauthentication
contextusingavalidusernameandpassword. Asuccessful calltothisfunction
allowstheCreoParametric sessiontoregisterwithanyserveracceptingthe
usernameandpasswordcombination. Asuccessful calltothisfunctionalso
ensuresthatanauthentication dialogboxdoesnotappearduringtheregistration
process.Youcancallthisfunctionanynumberoftimestosettheauthentication
contextforanynumberofWindchillservers,providedthatyouregisterthe
appropriate serversorserversimmediately aftersettingthecontext.
Thefunction ProServerClassGet() returnstheclassoftheserver.The
valuesare:
•Windchill—Denotes aWindchillPDMLink server.
•ProjectLink—Denotes WindchillProjectLink typeofservers.
ThisfunctionacceptstheservercodebaseURLastheinput.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesare:
•Windchill—Denotes aWindchillPDMLink server.
•ProjectLink—Denotes WindchillProjectLink typeofservers.
ThisfunctionacceptstheservercodebaseURLastheinput.
Thefunction ProServerVersionGet() returnstheversionofWindchillthat
isconfigured ontheserver,forexample, 9.0or10.0.Thisfunctionacceptsthe
servercodebaseURLastheinput.
Note
ProServerVersionGet() worksonlyforWindchillserversandreturns
thePRO_TK_UNSUPPORTED error,iftheserverisnotaWindchillserver.
DataManagement: WindchillOperations 629Thefunction ProServerContextsCollect() givesalistofallthe
availablecontextsforaspecifiedserver.Acontextisusedtoassociatea
workspace withaproduct,project,orlibrary.Thisfunctionacceptstheserver
codebaseURLastheinput.
Thefunction ProServerWorkspacesCollect() returnsthelistofavailable
workspaces forthespecifiedserver.Theworkspace datareturnedcontainsthe
nameoftheworkspace anditscontext.Thisfunctionacceptstheservercodebase
URLastheinput.
Registering andActivatingaServerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxworkspaces forthespecifiedserver.Theworkspace datareturnedcontainsthe
nameoftheworkspace anditscontext.Thisfunctionacceptstheservercodebase
URLastheinput.
Registering andActivatingaServer
FromCreoParametric 2.0onward,theCreoParametric TOOLKITAPIscallthe
sameunderlying APIasCreoParametric toregisterandunregister servers.Hence,
registering theserversusingCreoParametric TOOLKITAPIsissimilarto
registering theserversusingtheCreoParametric userinterface.Therefore, the
serversregistered byCreoParametric TOOLKITareavailableintheCreo
Parametric ServerRegistry.Theserversarealsoavailableinotherlocationsinthe
CreoParametric userinterfacesuchas,theFolderNavigatorandtheembedded
browser.
Functions Introduced:
•ProServerRegister()
•ProServerActivate()
•ProServerUnre gister()
Thefunction ProServerRegister() registersthespecifiedserverwiththe
codebaseURL.Youcanautomatetheregistration ofserversininteractive mode.
Topreregister theserversusethestandard config.fld setup.IfyoudonotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcodebaseURL.Youcanautomatetheregistration ofserversininteractive mode.
Topreregister theserversusethestandard config.fld setup.Ifyoudonot
wanttheserverstobepreregistered inbatchmode,settheenvironment variable
PTC_WF_ROOT toanemptydirectorybeforestartingCreoParametric.
Asuccessful calltoProBrowserAuthenticate() withavalidusername
andpasswordisessentialforProServerRegister() toregistertheserver
withoutlaunching theauthentication dialogbox.Registration oftheserver
establishes theserveralias.
Thefunction ProServerActivate() setsthespecifiedserverastheactive
serverintheCreoParametric session.
Thefunction ProServerUnregister() unregisters thespecifiedserver.This
issimilartoServerRegistry ▶▶Deletethroughtheuserinterface.
AccessingInformation FromaRegistered Server
Functions Introduced:
•ProServerActiveGet()
630 Creo®Parametric TOOLKIT User’sGuide•ProServerContextGet()
•ProServerAliasGet()
•ProServersCollect()
•ProServerLocationGet()
•ProServerIsOnline()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProServerActiveGet()
630 Creo®Parametric TOOLKIT User’sGuide•ProServerContextGet()
•ProServerAliasGet()
•ProServersCollect()
•ProServerLocationGet()
•ProServerIsOnline()
Thefunction ProServerActiveGet() returnstheprimaryserver.
Thefunction ProServerContextGet() returnstheactivecontextofthe
activeserver.
Thefunction ProServerAliasGet() returnsthealiasofaserverifyou
specifythecodebaseURL.
Thefunction ProServersCollect() returnsalistofthealiasesofallthe
registered servers.
Thefunction ProServerLocationGet() returnsthecodebaseURLforthe
serverifyouspecifythealias.
Thefunction ProServerIsOnline() checksifthespecifiedserverisonline
oroffline.Itreturns PRO_B_TRUE iftheserverisonline.
AccessingtheWorkspace
Foreveryworkspace, anewdistinctstoragelocationismaintained intheuser’s
personalfolderontheserver(server-sideworkspace) andontheclient(client-side
workspace cache).Together,theserver-sideworkspace andtheclient-side
workspace cachemakeuptheworkspace.
WorkspaceDataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpersonalfolderontheserver(server-sideworkspace) andontheclient(client-side
workspace cache).Together,theserver-sideworkspace andtheclient-side
workspace cachemakeuptheworkspace.
WorkspaceData
Functions Introduced:
•ProServerworkspacedataAlloc()
•ProServerworkspacedataNameGet()
•ProServerworkspacedataContextGet()
•ProServerworkspacedataFre e()
•ProServerworkspacedataPro arrayFre e()
Theworkspace dataisanopaquehandlethatcontainsthenameandcontextofthe
workspace. Thefunction ProServerWorkspacesCollect() returnsan
arrayofworkspace data.Workspacedataisalsorequiredforthefunction
ProServerWorkspaceCreate() tocreateaworkspace withagivenname
andaspecificcontext.
DataManagement: WindchillOperations 631Thefunction ProServerworkspacedataAlloc() createsaworkspace data
structuretodescribeaworkspace. Theworkspace containsthenameofthe
workspace andthecontextinwhichtheworkspace isstored.
Thefunction ProServerworkspacedataNameGet() retrievesthenameof
theworkspace fromtheworkspace data.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxworkspace andthecontextinwhichtheworkspace isstored.
Thefunction ProServerworkspacedataNameGet() retrievesthenameof
theworkspace fromtheworkspace data.
Thefunction ProServerworkspacedataContextGet() retrievesthe
contextoftheworkspace fromtheworkspace data.
Usethefunction ProServerworkspacedataFree() tofreetheworkspace
datastructurefrommemory.
Usethefunction ProServerworkspacedataProarrayFree() tofreethe
workspace dataarrayfromthememory.
CreatingandModifyingtheWorkspace
Functions Introduced
•ProServerW orkspaceCr eate()
•ProServerW orkspaceGet()
•ProServerW orkspaceSet()
•ProServerW orkspaceDelete()
Thefunction ProServerWorkspaceCreate() createsandactivatesanew
workspace.
Thefunction ProServerWorkspaceGet() retrievesthenameoftheactive
workspace.
Thefunction ProServerWorkspaceSet() setsaspecifiedworkspace asan
activeworkspace.
Thefunction ProServerWorkspaceDelete() deletesthespecified
workspace. Thefunctiondeletestheworkspace onlyifthefollowingconditions
aremet:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxactiveworkspace.
Thefunction ProServerWorkspaceDelete() deletesthespecified
workspace. Thefunctiondeletestheworkspace onlyifthefollowingconditions
aremet:
•Theworkspace isnottheactiveworkspace.
•Theworkspace doesnotcontainanycheckedoutobjects.
Useoneofthefollowingtechniques todeleteanactiveworkspace:
•Maketherequiredworkspace inactiveusing
ProServerWorkspaceSet() withthenameofsomeotherworkspace
andthencallProServerWorkspaceDelete().
•Unregister theserverusing ProServerUnregister() anddeletethe
workspace usingthecodebaseURLinsteadofthealias.
632 Creo®Parametric TOOLKIT User’sGuideWorkflowtoRegisteraServer
ToRegisteraServerwithanExistingWorkspace
PerformthefollowingstepstoregisteraWindchillserverwithanexisting
workspace:
1.Settheappropriate authentication contextusingthefunction
ProBrowserAuthenticate() withavalidusernameandpassword.
2.Lookupthelistofworkspaces usingthefunction
ProServerWorkspacesCollect(). Ifyoualreadyknowthenameof
theworkspace ontheserver,thenignorethisstep.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2.Lookupthelistofworkspaces usingthefunction
ProServerWorkspacesCollect(). Ifyoualreadyknowthenameof
theworkspace ontheserver,thenignorethisstep.
3.Registertheworkspace usingthefunction ProServerRegister() with
anexistingworkspace nameontheserver.
4.Activatetheserverusingthefunction ProServerActivate().
ToRegisteraServerwithaNewWorkspace
PerformthefollowingstepstoregisteraWindchillserverwithanewworkspace:
1.Performsteps1to4inthepreceding sectiontoregistertheWindchillserver
withanexistingworkspace.
2.Usethefunction ProServerContextsCollect() tochoosetherequired
contextfortheserver.
3.Createanewworkspace withtherequiredcontextusingthefunction
ProServerWorkspaceCreate(). Thisfunctionautomatically makesthe
createdworkspace active.
Note
Youcancreateaworkspace onlyaftertheserverisregistered.
AliasedURL
AnaliasedURLservesasahandletotheserverobjects.Youcanaccesstheserver
objectsinthecommonspace (sharedfolders)andtheworkspace usingthealiasedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAliasedURL
AnaliasedURLservesasahandletotheserverobjects.Youcanaccesstheserver
objectsinthecommonspace (sharedfolders)andtheworkspace usingthealiased
URL.AnaliasedURLisauniqueidentifierfortheserverobjectandtheformatis
asfollows:
•Objectinworkspace hasaprefix wtws
DataManagement: WindchillOperations 633wtws://<server_alias>/<workspace_name>/<object_
server_name>
where <object_server_name> includes <object_
name>.<object_extension>
Forexample, wtws://my_server/my_workspace/abcd.prt,
wtws://my_server/my_workspace/intf_file.igs
where
<server_alias> ismy_server
<workspace_name> ismy_workspace
•Objectincommonspace hasaprefix wtpub
wtpub://<server_alias>/<folder_location>/<object_
server_name>
Forexample, wtpub://my_server/path/to/cs_folder/
abcd.prt
where
<server_alias> =my_server
<folder_location> =path/to/cs_folder
Note
○<object_server_name> mustbeinlowercase.
○TheAPIsarecase-sensitive tothealiasedURL.
○<object_extension> shouldnotcontainCreoParametric versions,
forexample,.1or.2,andsoon.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
○<object_server_name> mustbeinlowercase.
○TheAPIsarecase-sensitive tothealiasedURL.
○<object_extension> shouldnotcontainCreoParametric versions,
forexample,.1or.2,andsoon.
ServerOperations
Afterregistering theWindchillserverwithCreoParametric, youcanstart
accessingthedataontheWindchillservers.TheCreoParametric interaction with
Windchillserversleveragesthefollowinglocations:
•Commonspace (Sharedfolders)
•Workspace(Server-sideworkspace)
•Workspacelocalcache(Client-side workspace)
•CreoParametric session
634 Creo®Parametric TOOLKIT User’sGuide•Localdisk
Thefunctionsdescribedinthissectionenableyoutoperformthebasicserver
operations. Thefollowingdiagramillustrateshowdataistransferred amongthese
locations.
Save
Functions Introduced:
•ProMdlSave()
Thefunction ProMdlSave() storestheobjectfromthesessioninthelocal
workspace cache,whenaserverisactive.
Upload
AnuploadtransfersCreoParametric filesandanyotherdependencies fromthe
localworkspace cachetotheserver-sideworkspace.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxworkspace cache,whenaserverisactive.
Upload
AnuploadtransfersCreoParametric filesandanyotherdependencies fromthe
localworkspace cachetotheserver-sideworkspace.
DataManagement: WindchillOperations 635FunctionIntroduced:
•ProServerObjectsUpload()
Thefunction ProServerObjectsUpload() uploadsthespecifiedobjectto
theworkspace. TheobjecttobeuploadedmustbepresentinthecurrentCreo
Parametric session.Additionally ,ensurethatyousavetheobjectusingthe
function ProMdlSave() beforeyouuploadit.
Note
Touploadalltheobjectstotheworkspace withoutretrievingtheminthe
currentCreoParametric session,usethefunction
ProServerObjectsCheckin() withthecheckinoption upload_only set
toPRO_B_TRUE.
CheckIn
Afteryouhavefinishedworkingonobjectsinyourworkspace, youcansharethe
designchangeswithotherusers.Thecheckinoperationcopiestheinformation and
filesassociated withallchangedobjectsfromtheworkspace totheWindchill
database.
Functions Introduced
•ProServerObjectsCheckin()
•ProServer checkinoptsAlloc()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfilesassociated withallchangedobjectsfromtheworkspace totheWindchill
database.
Functions Introduced
•ProServerObjectsCheckin()
•ProServer checkinoptsAlloc()
•ProServer checkinoptsDeflocationSet()
•ProServer checkinoptsLocationAdd()
•ProServer checkinoptsBaselineSet()
•ProServer checkinoptsKeepcheckedoutSet()
•ProServer checkinoptsAutor esolveSet()
•ProServer checkinoptsUploadonlySet()
•ProServer checkinoptsFre e()
Thefunction ProServerObjectsCheckin() checksinoruploadsanobject
tothedatabase.Theobjecttobecheckedinoruploadedmustbepresentinthe
currentCreoParametric session.Changesmadetotheobjectarenotincluded
unlessyousavetheobjecttotheworkspace usingthefunction ProMdlSave()
beforeitischeckedinoruploaded.
636 Creo®Parametric TOOLKIT User’sGuideNote
ProServerObjectsCheckin() checksinthetargetobjectbydefault.To
onlyuploadtheobject,setthecheckinoption upload_only toPRO_B_TRUE.
IfyoupassNULLasthevalueoftheinputargument options,thecheckinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProServerObjectsCheckin() checksinthetargetobjectbydefault.To
onlyuploadtheobject,setthecheckinoption upload_only toPRO_B_TRUE.
IfyoupassNULLasthevalueoftheinputargument options,thecheckin
operationissimilartotheAutoCheckInoptioninCreoParametric. Formore
detailsonAutoCheckIn,refertotheonlinehelpforCreoParametric.
Byusinganappropriately constructed optionsargument,youcancontrolthe
checkinoruploadoperation. TheAPIsdescribedinthissectionhelpin
constructing theoptionsargument.
Thefunction ProServercheckinoptsAlloc() allocatesasetofcheckinor
uploadoptionsfortheobject.Theseoptionsareasfollows:
•Defaultlocation—Specifies thedefault folder_location ontheserverforthe
automatic checkinoperation. Usethefunction
ProServercheckinoptsDeflocationSet() tosetthislocation.
•Serverlocation—Specifies thefolder_location ontheserverinwhichan
objectwillbecheckedinoruploaded.Usethefunction
ProServercheckinoptsLocationAdd() tosetthislocation.
•Baseline—Specifies thebaselineinformation fortheobjectsuponcheckin.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxobjectwillbecheckedinoruploaded.Usethefunction
ProServercheckinoptsLocationAdd() tosetthislocation.
•Baseline—Specifies thebaselineinformation fortheobjectsuponcheckin.
Thisinformation doesnotapplytouploadoperations. Usethefunction
ProServercheckinoptsBaselineSet() tocreateanewbaseline.
Thebaselineinformation foracheckinoperationisasfollows:
○baseline_name—Specifies thenameofthebaseline.
○baseline_number—Specifies thenumberofthebaseline.
ThedefaultformatforthebaselinenameandbaselinenumberisUsername
+time (GMT) inmilliseconds.
○baseline_location—Specifies thelocationofthebaseline.
○baseline_lifecycle—Specifies thenameofthelifecycle.
•keep_checked_out—If thisoptionissettoPRO_B_TRUE, thenthecontentsof
theselectedobjectarecheckedintotheWindchillserverandautomatically
checkedoutagainforfurthermodification. ThedefaultvalueisPRO_B_
FALSE.Thisoptiondoesnotapplytouploadoperations. Usethefunction
ProServercheckinoptsKeepcheckedoutSet() tosetthekeep_
checked_out flag.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcheckedoutagainforfurthermodification. ThedefaultvalueisPRO_B_
FALSE.Thisoptiondoesnotapplytouploadoperations. Usethefunction
ProServercheckinoptsKeepcheckedoutSet() tosetthekeep_
checked_out flag.
•autor esolve—Specifies theoptionusedtoautomatically resolveobjectsthat
havenotbeencompletely checkedinoruploadedtothedatabase.The
DataManagement: WindchillOperations 637autoresolve optionsspecifiedbytheenumerated type
ProServerAutoresolveOption areasfollows:
○PRO_SERVER_DONT_AUTORESOLVE—Model references missingfrom
theworkspace arenotautomatically resolved.Thismayresultinaconflict
uponcheckin.Thisoptionisusedbydefault.
○PRO_SERVER_AUTORESOLVE_IGNORE—Missing references are
automatically resolvedbyignoringthem.
○SERVER_AUTORESOLVE_UPDATE_IGNORE—Missing references are
automatically resolvedbyupdatingtheminthedatabaseandignoringthem
ifnotfound.
Usethefunction ProServercheckinoptsAutoresolveSet() to
assigntheappropriate autor esolveoption.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxautomatically resolvedbyupdatingtheminthedatabaseandignoringthem
ifnotfound.
Usethefunction ProServercheckinoptsAutoresolveSet() to
assigntheappropriate autor esolveoption.
•upload_only—Specifies theoptiontofullycheckinthetargetobjectoronly
uploadtheobjecttotheserver.SetthisoptiontoPRO_B_TRUE toonlyupload
andnotcheckinthetargetobjectsandtoPRO_B_FALSE touploadandcheck
intheobjects.Bydefault,thisoptionisPRO_B_FALSE, ifnotexplicitlyset,
tocauseacheckin.Usethefunction
ProServercheckinoptsUploadonlySet() tosettheupload_only
flag.
Usethefunction ProServercheckinoptsFree() tofreethememoryofthe
checkinoptions.
Notification Functions
ACreoParametric TOOLKITnotification iscalledbeforeyouattempttocheckin
amodelthroughtheCreoParametric userinterface.Thenotification functionsare
established inasessionusingthefunction ProNotificationSet().
FunctionIntroduced:
•ProCheckinUIPr eAction()
Thenotification function ProCheckinUIPreAction() iscalledwhenyouxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxestablished inasessionusingthefunction ProNotificationSet().
FunctionIntroduced:
•ProCheckinUIPr eAction()
Thenotification function ProCheckinUIPreAction() iscalledwhenyou
selectFile>AutoCheckIn,File>CustomCheckIn,orthecorresponding optionson
theModelTreemenuintheCreoParametric userinterface.Itiscalledbeforeany
actionisperformed bythecorresponding menucommands. Thisfunctionis
availablebycalling ProNotificationSet() withthevalueofthenotify
typeasPRO_CHECKIN_UI_PRE.
Retrieval
StandardCreoParametric TOOLKITprovidesseveralfunctionsthatarecapable
ofretrievingmodels.WhenusingthesefunctionswithWindchillservers,
remember thatthesefunctionsdonotcheckouttheobjecttoallowmodifications.
638 Creo®Parametric TOOLKIT User’sGuideFunctions Introduced:
•ProMdlnameRetrieve()
•ProMdlFiletypeLoad()
Thefunction ProMdlnameRetrieve() loadsanobjectintoasessiongivenits
nameandtype.Thisfunctionsearchesfortheobjectintheactiveworkspace, the
localdirectory,andanyotherpathsspecifiedbytheconfiguration optionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnameandtype.Thisfunctionsearchesfortheobjectintheactiveworkspace, the
localdirectory,andanyotherpathsspecifiedbytheconfiguration option
search_path.
Thefunction ProMdlFiletypeLoad() loadsanobjectintosessiongivenits
path.Thepathcanbeadiskpath,aworkspace path,oracommonspace path.
RefertothesectionAliasedURLonpage633forexamplesofthesetypesof
paths.
CheckoutandDownload
Tomodifyanobjectfromthecommonspace, youmustcheckouttheobject.The
processofcheckingoutcommunicates yourintentiontomodifyadesigntothe
Windchillserver.Theobjectinthedatabaseislocked,sothatotheruserscan
obtainread-onlycopiesoftheobject,andareprevented frommodifying theobject
whileyouhaveitcheckedout.
Checkoutisoftenaccompanied byadownload action,wheretheobjectsare
broughtfromtheserver-sideworkspace tothelocalworkspace cache.InCreo
Parametric TOOLKIT, bothoperations arecoveredbythesamesetoffunctions.
Functions Introduced:
•ProServerObjectsCheckout()
•ProServerMultiobjectsCheckout()
•ProServer checkoutoptsAlloc()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKIT, bothoperations arecoveredbythesamesetoffunctions.
Functions Introduced:
•ProServerObjectsCheckout()
•ProServerMultiobjectsCheckout()
•ProServer checkoutoptsAlloc()
•ProServer checkoutoptsFre e()
•ProServer checkoutoptsDependencySet()
•ProServer checkoutoptsIncludeinstancesSet()
•ProServer checkoutoptsV ersionSet()
•ProServer checkoutoptsDownloadSet()
•ProServer checkoutoptsReadonlySet()
Thefunction ProServerObjectsCheckout() checksoutandoptionally
downloads theobjecttotheworkspace basedontheconfiguration specifications
oftheworkspace. Ittakesthefollowingtwopotentialidentifiers forthemodelto
checkout:
•ProMdlhandle—Specifies theobjecttobecheckedout.Thisisapplicable if
themodelhasalreadybeenretrievedwithoutcheckingout.
DataManagement: WindchillOperations 639•AliasedURL—Specifies thecommonspace pathoftheobject.
Usethefunction ProServerMultiobjectsCheckout() tocheckoutand
download aProArray ofobjectstotheworkspace basedontheconfiguration
specifications oftheworkspace.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProServerMultiobjectsCheckout() tocheckoutand
download aProArray ofobjectstotheworkspace basedontheconfiguration
specifications oftheworkspace.
Note
CreoParametric TOOLKITfunctionsdonotsupporttheAS_STORED
configuration.
Ifyouspecifythevalueoftheinputargument checkoutasPRO_B_TRUE inthe
abovefunctions, theselectedobjectischeckedout.Otherwise, theobjectis
downloaded withoutbeingcheckedout.Thedownload actionenablesyoutobring
read-onlycopiesofobjectsintoyourworkspace. Thisallowsyoutoexaminethe
objectwithoutplacingalockonit.
IfyoupassNULLasthevalueoftheinputargument optionsintheabove
functions, thenthedefaultCreoParametric checkoutrulesapply.
Thefunction ProServercheckoutoptsAlloc() allocatesasetofcheckout
optionsfortheobject.Theseoptionsareasfollows:
•dependency—Specifies thedependency ruleusedwhilecheckingout
dependents oftheobjectselectedforcheckout.Thefunction
ProServercheckoutoptsDependencySet() setsthedependencyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•dependency—Specifies thedependency ruleusedwhilecheckingout
dependents oftheobjectselectedforcheckout.Thefunction
ProServercheckoutoptsDependencySet() setsthedependency
ruleforcheckout.Thetypesofdependencies specifiedbytheenumerated type
ProServerDependency areasfollows:
○PRO_SERVER_DEPENDENCY_ALL—All theobjectsthataredependent
ontheselectedobjectaredownloaded, thatis,theyareaddedtothe
workspace.
○PRO_SERVER_DEPENDENCY_REQUIRED—All theobjectsthatare
requiredtosuccessfully retrievetheselectedobjectintheCADapplication
aredownloaded, thatis,theyareaddedtoworkspace.
○PRO_SERVER_DEPENDENCY_NONE—None ofthedependent objects
fromtheselectedobjectaredownloaded, thatis,theyarenotaddedto
workspace.
•include_option—Specifies theruleforincludinginstancesfromthefamily
tableduringcheckout.Thefunction
ProServercheckoutoptsIncludeinstancesSet() setstheflagto
includeinstancesduringcheckout.Thetypeofinstancesspecifiedbythe
enumerated typeProServerInclude areasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtableduringcheckout.Thefunction
ProServercheckoutoptsIncludeinstancesSet() setstheflagto
includeinstancesduringcheckout.Thetypeofinstancesspecifiedbythe
enumerated typeProServerInclude areasfollows:
640 Creo®Parametric TOOLKIT User’sGuide○PRO_SERVER_INCLUDE_ALL—All theinstancesoftheselectedobject
arecheckedout.
○PRO_SERVER_INCLUDE_SELECTED—The application selectsthe
instancemembersfromthefamilytabletobeincludedduringcheckout.
○PRO_SERVER_INCLUDE_NONE—No additional instancesfromthe
familytableareaddedtotheobjectlist.
•version—Specifies theversionoftheobjectthatischeckedoutordownloaded
totheworkspace. Ifversionisnotset,theobjectischeckedoutaccording to
thecurrentworkspace configuration. Thefunction
ProServercheckoutoptsVersionSet() setstheversionofthe
object.
•download—Specifies thecheckouttypeasdownload orlink.Thevalue
download specifiesthattheobjectcontentisdownloaded andcheckedout,
while linkspecifiesthatonlythemetadataisdownloaded andcheckedout.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•download—Specifies thecheckouttypeasdownload orlink.Thevalue
download specifiesthattheobjectcontentisdownloaded andcheckedout,
while linkspecifiesthatonlythemetadataisdownloaded andcheckedout.
Usethefunction ProServercheckoutoptsDownloadSet() tosetthis
option.
•readonly—Downloads thefilewithoutcheckingoutthefile.Tousethisoption
youmustsetthecheckoutargumentofthefunction
ProServerObjectsCheckout() asPRO_B_FALSE. Usethefunction
ProServercheckoutoptsReadonlySet() tosetthereadonlyflagto
PRO_B_TRUE.
Usethefunction ProServercheckoutoptsFree() tofreethememoryof
thecheckoutoptions.
Thefollowingtruthtableexplainsthedependencies ofthedifferentcontrolfactors
inProServerObjectsCheckout() andtheeffectofdifferentcombinations
ontheendresult.
Argument checkout
inProServerObjects
Checkout()ProServer
checkoutopts
DownloadSet()ProServer
checkoutopts
ReadonlySet()Result
PRO_B_TRUE PRO_B_TRUE NA Objectischeckedoutandits
contentisdownloaded.
PRO_B_TRUE PRO_B_FALSE NA Objectischeckedoutbutcontentisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcheckoutopts
DownloadSet()ProServer
checkoutopts
ReadonlySet()Result
PRO_B_TRUE PRO_B_TRUE NA Objectischeckedoutandits
contentisdownloaded.
PRO_B_TRUE PRO_B_FALSE NA Objectischeckedoutbutcontentis
notdownloaded.
PRO_B_FALSE NA PRO_B_TRUE Objectisdownloaded without
checkoutandasread-only.
PRO_B_FALSE NA PRO_B_FALSE Thiscombination isinvalidandis
notsupported.
Thefunction ProServercheckoutoptsReadonlySet() canbeusedto
download objectswithoutcheckingthemout.Todownload objects,youmustset
thecheckoutargumentofthefunction ProServerObjectsCheckout() as
PRO_B_FALSE beforeusing ProServercheckoutoptsReadonlySet().
DataManagement: WindchillOperations 641Thefollowingtabledescribesthedifferentvaluesthatcanbespecifiedforthe
checkoutoptionsforthefunctions
ProServercheckoutoptsReadonlySet() and
ProServerObjectsCheckout(). Italsodescribestheactionsthatcanbe
performed onthedownloaded orcheckedoutobjectfromtheCreoParametric
userinterfaceorusingtheCreoParametric TOOLKITapplications.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProServerObjectsCheckout(). Italsodescribestheactionsthatcanbe
performed onthedownloaded orcheckedoutobjectfromtheCreoParametric
userinterfaceorusingtheCreoParametric TOOLKITapplications.
Thefollowingtableexplainsthedependencies ofthedifferentcontrolfactorson
ProServercheckoutoptsReadonlySet():
Argument
readonlyin
ProServer-
checkoutopts-
ReadonlySet()Argument
checkoutin
ProServerOb-
jectsCheck-
out()StateofObject
ContentOptions
Availablein
theCreo
Parametric
UserInterfaceActionsthatcanbe
PerformedUsingCreo
Parametric TOOLKIT
Applications
PRO_B_TRUE PRO_B_FALSE Downloaded but
notcheckedoutTheConflicts
dialogboxallows
youtoperform
oneofthe
following
operations onthe
object:checkout,
reviseandcheck
out,continue
with
modifications, or
maketheobject
readonly.
RefertotheCreo
Parametric Help
formore
information on
resolving
conflicts.Checkouttheobjectand
modifyit
PRO_B_FALSE PRO_B_FALSE CheckedoutTheobjectcanbe
modified.Theobjectcanbemodified.
PRO_B_TRUE PRO_B_TRUE CheckedoutTheobjectcanbexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation on
resolving
conflicts.Checkouttheobjectand
modifyit
PRO_B_FALSE PRO_B_FALSE CheckedoutTheobjectcanbe
modified.Theobjectcanbemodified.
PRO_B_TRUE PRO_B_TRUE CheckedoutTheobjectcanbe
modified.Theobjectcanbemodified.
Nooptionset PRO_B_FALSE Downloaded but
notcheckedoutTheConflicts
dialogboxallows
youtoperform
oneofthe
following
operations onthe
object:checkout,
reviseandcheck
out,continue
with
modifications, or
maketheobject
readonly.Checkouttheobjectand
modifyit
642 Creo®Parametric TOOLKIT User’sGuideUndoCheckout
FunctionIntroduced:
•ProServerObjectsUndocheckout()
Usethefunction ProServerObjectsUndocheckout() toundoacheckout
ofthespecifiedobject.Whenyouundoacheckout,thechangesthatyouhave
madetothecontentandmetadataoftheobjectarediscardedandthecontent,as
storedintheserver,isdownloaded totheworkspace. Thisfunctionisapplicable
onlyforthemodelintheactiveCreoParametric session.
ImportandExport
CreoParametric TOOLKITprovidesyouwiththecapability oftransferringxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonlyforthemodelintheactiveCreoParametric session.
ImportandExport
CreoParametric TOOLKITprovidesyouwiththecapability oftransferring
specifiedobjectstoandfromaworkspace. Importandexportoperations musttake
placeinasessionwithnomodels.
Functions Introduced:
•ProCurr entW orkspaceImport()
•ProCurr entW orkspaceExport()
•ProCurr entW orkspaceImpexMessagesGet()
•ProWsimpexmessageDataGet()
•ProWsimpexmessageArrayFr ee()
•ProWsexportSecondarycontentoptionSet()
Thefunction ProCurrentWorkspaceImport() importsspecifiedobjects
fromdisktothecurrentworkspace inalinkedsessionofCreoParametric.
Thefunction ProCurrentWorkspaceExport() exportsthespecified
objectsfromthecurrentworkspace toalocationondiskinalinkedsessionof
CreoParametric.
BothProCurrentWorkspaceImport() and
ProCurrentWorkspaceExport() allowyoutospecifyadependency
criteriontoprocessthefollowingitems:
•Allexternaldependencies
•Onlyrequireddependencies
•NoexternaldependenciesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProCurrentWorkspaceExport() allowyoutospecifyadependency
criteriontoprocessthefollowingitems:
•Allexternaldependencies
•Onlyrequireddependencies
•Noexternaldependencies
Allwarnings,conflicts,orerrorsgeneratedduringimportorexportoperations are
loggedintheproimpex.errors filecreatedintheCreoParametric working
directory.Alternatively ,youcanobtainthisinformation usingthefunction
ProCurrentWorkspaceImpexMessagesGet(). Thisfunctionreturnsa
DataManagement: WindchillOperations 643ProArray ofmessagesgeneratedbythelastcallto
ProCurrentWorkspaceImport() or
ProCurrentWorkspaceExport().
Thefunction ProWsimpexmessageDataGet() extractsthecontentsofthe
messagegeneratedbyProCurrentWorkspaceImport() or
ProCurrentWorkspaceExport(). Themessagecontainsthefollowing
items:
•type—Specifies theseverityofthemessageintheformoftheenumerated type
ProWSImpexMessageType. Theseverityisoneofthefollowingtypes:
○PRO_WSIMPEX_MSG_INFO—Specifies aninformational typeof
message.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxitems:
•type—Specifies theseverityofthemessageintheformoftheenumerated type
ProWSImpexMessageType. Theseverityisoneofthefollowingtypes:
○PRO_WSIMPEX_MSG_INFO—Specifies aninformational typeof
message.
○PRO_WSIMPEX_MSG_WARNING—Specifies alowseverityproblemthat
canberesolvedaccording totheconfigured rules.
○PRO_WSIMPEX_MSG_CONFLICT—Specifies aconflictthatcanbe
overridden.
○PRO_WSIMPEX_MSG_ERROR—Specifies aconflictthatcannotbe
overridden oraseriousproblemthatpreventsprocessing ofanobject.
•object—Specifies theobjectnameorthenameoftheobjectpathdescribedin
themessage.
•description—Specifies thedescription oftheproblemorthemessage
information.
•resolution—Specifies theresolution appliedtoresolveaconflictthatcanbe
overridden. Thisisapplicable whenthemessageisofthetypePRO_
WSIMPEX_MSG_CONFLICT.
•succeeded—Determines whethertheresolution succeeded ornot.Thisis
applicable whenthemessageisofthetypePRO_WSIMPEX_MSG_
CONFLICT.
Usethefunction ProWsimpexmessageArrayFree() tofreethememoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•succeeded—Determines whethertheresolution succeeded ornot.Thisis
applicable whenthemessageisofthetypePRO_WSIMPEX_MSG_
CONFLICT.
Usethefunction ProWsimpexmessageArrayFree() tofreethememory
allocatedtothearrayofmessagesreturnedby
ProCurrentWorkspaceImpexMessagesGet().
Thefunction ProWsexportSecondarycontentoptionSet() setsthe
ProBoolean optionthatcontrolstheexportofsecondary contents.Ifthisoption
issettoPRO_B_TRUE, secondary contentsareexportedalongwiththeprimary
CreoParametric modelfiles.Bydefault,itisPRO_B_TRUE.
FileCopy
CreoParametric TOOLKITprovidesyouwiththecapability ofcopyingafile
fromtheworkspace ortargetfoldertoalocationonthediskandvice-versa.
644 Creo®Parametric TOOLKIT User’sGuideFunctions Introduced:
•ProFileCopyT oWS()
•ProFileCopyFro mWS()
•ProFileCopyFro mWSDocument()
•ProFileselectionDocNameGet()
•ProDocumentFileContentsRead()
Usethefunction ProFileCopyToWS() tocopyafilefromdisktothe
workspace. Thefilecanoptionally beaddedassecondary contenttoagivenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProFileselectionDocNameGet()
•ProDocumentFileContentsRead()
Usethefunction ProFileCopyToWS() tocopyafilefromdisktothe
workspace. Thefilecanoptionally beaddedassecondary contenttoagiven
workspace file.Iftheviewablefileisaddedassecondary content,adependency is
createdbetweentheCreoParametric modelandtheviewablefile.
Usethefunction ProFileCopyFromWS() tocopyafilefromtheworkspace to
alocationondisk.
Note
Whenimporting orexportingCreoParametric models,PTCrecommends that
youuseProCurrentWorkspaceImport() and
ProCurrentWorkspaceExport(), respectively ,toperformthe
operation. Functions thatcopyindividual filesdonottraverseCreoParametric
modeldependencies, andthereforedonotcopyafullyretrievable setof
modelsatthesametime.
Additionally ,onlythefunctions ProCurrentWorkspaceImport() and
ProCurrentWorkspaceExport() providefullmetadataexchangeand
support.Thatmeans ProCurrentWorkspaceImport() can
communicate alltheCreoParametric designated parameters, dependencies,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProCurrentWorkspaceExport() providefullmetadataexchangeand
support.Thatmeans ProCurrentWorkspaceImport() can
communicate alltheCreoParametric designated parameters, dependencies,
andfamilytableinformation toaPDMsystemwhile
ProCurrentWorkspaceExport() canupdateexportedCreoParametric
datawithPDMsystemchangestodesignated andsystemparameters,
dependencies, andfamilytableinformation. HencePTCrecommends theuse
ofProFileCopyToWS() andProFileCopyFromWS() toprocessonly
non-CreoParametric files.
Thefunction ProFileCopyFromWSDocument() copiesaprimaryor
secondary filefromtheworkspace tothespecifiedlocationondisk.Theinput
argumentsare:
•source_file—Specifies thepathtotheprimaryorsecondary file.Thepath
mustbespecifiedaswtws://<path tothefile>.
Usethefunctionssuchas,ProFileMdlnameOpen() and
ProFileMdlfiletypeOpen(), togetthepathtothefiles.
DataManagement: WindchillOperations 645•document_name—Specifies thenameoftheprimaryfile,whichisassociatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFileMdlfiletypeOpen(), togetthepathtothefiles.
DataManagement: WindchillOperations 645•document_name—Specifies thenameoftheprimaryfile,whichisassociated
withthesecondary filespecifiedintheargument source_file.Usethefunction
ProFileselectionDocNameGet() togetthenameoftheprimaryfile
forasecondary file.
Intheargument source_file,ifaprimaryfileisspecified,thenpassthe
argument document_name asNULL.
•target_dir ectory—Specifies apathonthelocaldiskwherethefilemustbe
copied.
Thefunction ProFileselectionDocNameGet() returnsthenameofthe
primaryfilefortheselectedsecondary file.Thesecondary filesareselectedinthe
fileopenfunctions. Thefunctionssuchas,ProFileOpen(),
ProFileMdlnameOpen(), ProFileMdlfiletypeOpen() andsoon,are
usedtoopenthedialogboxwhereyoucanbrowseandselectasecondary file.The
function ProFileselectionDocNameGet() returnsthenameofthe
primaryfileforthelastselectedsecondary fileinthefileopenfunctions. Ifyou
selectaprimaryfileinthesefileopenfunctions, thenthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction ProFileselectionDocNameGet() returnsthenameofthe
primaryfileforthelastselectedsecondary fileinthefileopenfunctions. Ifyou
selectaprimaryfileinthesefileopenfunctions, thenthefunction
ProFileselectionDocNameGet() returnstheerrorPRO_TK_E_NOT_
FOUND.
Thefunction ProDocumentFileContentsRead() readsthecontentsofthe
specifiedfile.ThefilecanbelocatedonthelocaldiskorWindchill.Thefunction
returnsaProArray ofcharacters. Declaretheoutputvariableaschar*and
typecastitasProArray* whenyoupassittotheAPI.Usethefunction
ProArrayFree() tofreetheProArray.
Note
Thefunction ProDocumentFileContentsRead() isnotsupported for
CADmodels.
ServerObjectStatus
FunctionIntroduced:
•ProServerObjectIsModified()
Thefunction ProServerObjectIsModified() verifiesthecurrentstatusof
theobjectintheworkspace aswellasinthelocalworkspace cache.Thestatusof
theobjectisasfollows:
•checkout_status—Specifies whethertheobjectischeckedoutfor
modification. Thevalue PRO_B_TRUE indicatesthatthespecifiedobjectisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheobjectisasfollows:
•checkout_status—Specifies whethertheobjectischeckedoutfor
modification. Thevalue PRO_B_TRUE indicatesthatthespecifiedobjectis
checkedouttotheactiveworkspace.
646 Creo®Parametric TOOLKIT User’sGuideThevalue PRO_B_FALSE indicatesoneofthefollowingstatuses:
○Thespecifiedobjectisnotcheckedout
○Thespecifiedobjectisonlyuploadedtotheworkspace, butwasnever
checkedin
○Thespecifiedobjectisonlysavedtothelocalworkspace cache,butwas
neveruploaded
•modifiedInWS—Specifies whethertheobjecthasbeenmodifiedinthe
workspace sincecheckout.ThevalueofthisargumentisPRO_B_FALSE if
thenewlycreatedobjecthasnotbeenuploaded.
•modifiedLocally—Specifies whethertheobjecthasbeenmodifiedinthelocal
workspace cache.ThevalueofthisargumentisPRO_B_TRUE iftheobject
hasbeensavedinthelocalworkspace cache.Theargumentreturns PRO_B_
FALSEiftheobjecthasnotbeensavedaftermodifying itinthelocal
workspace cache.
Note
Thefunction ProServerObjectStatusGet() isdeprecated. UsethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFALSEiftheobjecthasnotbeensavedaftermodifying itinthelocal
workspace cache.
Note
Thefunction ProServerObjectStatusGet() isdeprecated. Usethe
function ProServerObjectIsModified() instead.
DeleteObjects
FunctionIntroduced:
•ProServerObjectsRemove()
Thefunction ProServerObjectsRemove() deletesthearrayofobjectsfrom
theworkspace. Whenpassedwiththemode_names arrayasNULL,thisfunction
removesalltheobjectsintheactiveworkspace.
ConflictsDuringServerOperations
Functions Introduced:
•ProServer conflictsDescriptionGet()
•ProServer conflictsFr ee()
Conflictobjectsareprovidedtocapturetheerrorconditionwhileperforming the
followingserveroperations usingthespecifiedAPIs:
DataManagement: WindchillOperations 647Operation API ErrorObject
Checkinanobjectorworkspace ProServerObjectsCheckin
()ProServerCheckinCon
flicts
Checkoutanobject ProServerObjects
Checkout()ProServerCheckoutCon
flicts
Undocheckoutofanobject ProServerObjects
Undocheckout()ProServerUndoCheckout
Conflicts
Uploadobject ProServerObjectsUpxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxflicts
Checkoutanobject ProServerObjects
Checkout()ProServerCheckoutCon
flicts
Undocheckoutofanobject ProServerObjects
Undocheckout()ProServerUndoCheckout
Conflicts
Uploadobject ProServerObjectsUp
load()ProServerUploadCon
flicts
Download object ProServerObjects
Checkout() (withdownload as
PRO_B_TRUE)ProServerCheckoutCon
flicts
Deleteworkspace ProServerWorkspaceDe
lete()ProServerDeleteCon
flicts
Removeobject ProServerObjectsRe
move()ProServerRemoveCon
flicts
TheseAPIsreturnacommonstatus PRO_TK_CHECKOUT_CONFLICT anda
conflictobject ProServerConflicts. Theconflictobjectisusedtogetmore
detailsabouttheerrorcondition.
Usethefunction ProServerConflictsDescriptionGet() toextract
detailsoftheerrorcondition. Thisdescription issimilartothedescription
displayedbytheCreoParametric HTMLUserInterfaceintheconflictreport.
Thefunction ProServerconflictsFree() freesthememoryoftheconflict
structurereturnedbythefunctions.
UtilityAPIs
ThefunctionsspecifiedinthissectionenableyoutoobtainthehandletothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProServerconflictsFree() freesthememoryoftheconflict
structurereturnedbythefunctions.
UtilityAPIs
Thefunctionsspecifiedinthissectionenableyoutoobtainthehandletothe
serverobjectstoaccessthem.ThehandlemaybetheAliasedURLorthemodel
nameofthehttpURL.Theseutilitiesenabletheconversion ofonetypeofhandle
totheothertype.
Functions Introduced:
•ProServerModelNameT oAliasedURL()
•ProServerAliasedURL ToModelName()
•ProServerAliasedURL ToURL()
Thefunction ProServerModelNameToAliasedURL() enablesyouto
searchforaserverobjectbyitsname.Specifythecompletefilenameoftheobject
astheinput,forexample, test_part.prt. Thefunctionreturnsthealiased
URLforamodelontheserver.Formoreinformation regardingthealiasedURL,
refertothesectionAliasedURLonpage633.Duringthesearchoperation, the
workspace takesprecedence overthesharedspace.
648 Creo®Parametric TOOLKIT User’sGuideYoucanalsousethisfunctiontosearchforfilesthatarenotintheCreo
Parametric format.Forexample, my_text.txt, prodev.dat, intf_
file.stp, andsoon.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx648 Creo®Parametric TOOLKIT User’sGuideYoucanalsousethisfunctiontosearchforfilesthatarenotintheCreo
Parametric format.Forexample, my_text.txt, prodev.dat, intf_
file.stp, andsoon.
Thefunction ProServerAliasedURLToModelName() returnsthenameof
theobjectfromthegivenaliasedURLontheserver.
Thefunction ProServerAliaseURLToURL() convertsanaliasedURLtoa
standardURLtotheobjectsontheserver.
Forexample, wtws://my_alias/Wildfire/abcd.prt isconverted toan
appropriate URLontheserverashttp://server .mycompany .com/Windchill.
SampleBatchWorkflow
AtypicalworkflowusingtheWindchillAPIsforanasynchronous non-graphical
application isasfollows:
1.StartaCreoParametric sessionusingthefunction
ProEngineerConnectionStart().
2.Authenticate thebrowserusingthefunction
ProBrowserAuthenticate().
3.Registertheserverwiththenewworkspace usingthefunction
ProServerRegister().
4.Activatetheserverusingthefunction ProServerActivate().
5.CheckoutandretrievethemodelfromthevaultURLusingthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3.Registertheserverwiththenewworkspace usingthefunction
ProServerRegister().
4.Activatetheserverusingthefunction ProServerActivate().
5.CheckoutandretrievethemodelfromthevaultURLusingthefunction
ProServerObjectsCheckout() followedby
ProMdlnameRetrieve().
6.Modifythemodelaccording totheapplication logic.
7.Savethemodeltotheworkspace usingthefunction ProMdlSave().
8.Checkinthemodifiedmodelbacktotheserverusingthefunction
ProServerObjectsCheckin().
9.Afterprocessing allmodels,unregister fromtheserverusingthefunction
ProServerUnregister().
10.Deletetheworkspace using ProServerWorkspaceDelete().
11.StopCreoParametric usingthefunction ProEngineerEnd().
DataManagement: WindchillOperations 64928
Interface:DataExchange
ExportingInformationFiles.......................................................................................651
Exporting2DModels...............................................................................................653xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExporting2DModels...............................................................................................653
AutomaticPrintingof3DModels...............................................................................658
Exporting3DModels...............................................................................................664
ShrinkwrapExport...................................................................................................680
ExportingtoPDFandU3D.......................................................................................684
ImportingParameterFiles........................................................................................692
Importing2DModels...............................................................................................694
Importing3DModels...............................................................................................695xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxImporting3DModels...............................................................................................695
ValidationScoreforImports.....................................................................................703
Thischapterdescribesvariousmethodsofimporting andexportingfilesinCreo
Parametric TOOLKIT.
650 Creo®Parametric TOOLKIT User’sGuideExportingInformation Files
Functions Introduced:
•ProOutputFileMdlnameW rite()
Thefunction ProOutputFileMdlnameWrite() isusedtocreatefilesof
severaltypesfromdatainCreoParametric. Thisfunctionoperatesonlyonthe
currentobject.ThefiletypesaredeclaredinProUtil.h. Theexportformats
andtheirtypeconstantsareaslistedinthefollowingtable.
ExportFormat CreoParametric TOOLKIT
functionTypeConstant
Billsofmaterial ProOutputFileMdlname
Write()PRO_BOM_FILE
Drawingsetupfile PRO_DWG_SETUP_FILE
Featureidentifier PRO_FEAT_INFO, PRO_FEAT_
INFO
Materialfile(currently assigned
material)PRO_MATERIAL_FILE
CLDataoutput,NCSequencefile PRO_MFG_FEAT_CLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDrawingsetupfile PRO_DWG_SETUP_FILE
Featureidentifier PRO_FEAT_INFO, PRO_FEAT_
INFO
Materialfile(currently assigned
material)PRO_MATERIAL_FILE
CLDataoutput,NCSequencefile PRO_MFG_FEAT_CL
CLDataoperationfile PRO_MFG_OPER_CL
Information onCreoParametric
ObjectsPRO_MODEL_INFO
Programfile PRO_PROGRAM_FILE
CableParameters file PRO_CABLE_PARAMS_FILE
Connector Parameters file PRO_CONNECTOR_PARAMS_FILE
Spoolfile PRO_SPOOL_FILE
Difference Reportfile PRO_DIFF_REPORT_FILE
IGESfile PRO_IGES_FILE
DXFfile PRO_DXF_FILE
DWGfile PRO_DWG_FILE
Renderfile PRO_RENDER_FILE
SLAASCIIfile PRO_SLA_ASCII_FILE
SLABinaryfile PRO_SLA_BINARY_FILE
INVENTOR file PRO_INVENTOR_FILE
CATIAfacetsfile PRO_CATIAFACETS_FILE
IGES3Dfile PRO_IGES_3D_FILE
STEPfile PRO_STEP_FILE
VDAfile PRO_VDA_FILE
FIATfile PRO_FIAT_FILE
CATIADIRECTfile PRO_CATIA_DIRECT_FILE
ACISfile PRO_ACIS_FILE
CGMfile PRO_CGM_FILE
Theoption PRO_RELATION_FILE createsafilethatcontainsalistofallthe
modelrelationsandparameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFIATfile PRO_FIAT_FILE
CATIADIRECTfile PRO_CATIA_DIRECT_FILE
ACISfile PRO_ACIS_FILE
CGMfile PRO_CGM_FILE
Theoption PRO_RELATION_FILE createsafilethatcontainsalistofallthe
modelrelationsandparameters.
Interface:DataExchange 651Toaccessparameters ontheconnector entryports,youmustcallthe
functionProOutputFileMdlnameWrite() withtheoption PRO_
CONNECTOR_PARAMS_FILE. Thefunctionwritesatextfiletodisk.Thistext
fileisinthesameformatasthefilethatyoueditwhenusingtheCreoParametric
commandConnector ▶▶ModifyParameters ▶▶ModParam.
TogenerateandexportadifferencereporttotextorCSVformat,callthefunction
ProOutputFileMdlnameWrite() withtheoption PRO_DIFF_REPORT_
FILE.
Note
AsthisreportisgeneratedandexportedfromtheCreoParametric embedded
browser,usingthisoutputtypewillcauseCreoParametric toshowthe
differencereportinthebrowser.
ForsomeoftheoptionsusedwithProOutputFileMdlnameWrite(), you
mustprovidesomemoreinformation, usingthelastfourarguments.The
followinglistshowstheargumentstobesetandwhen:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdifferencereportinthebrowser.
ForsomeoftheoptionsusedwithProOutputFileMdlnameWrite(), you
mustprovidesomemoreinformation, usingthelastfourarguments.The
followinglistshowstheargumentstobesetandwhen:
•ForPRO_RENDER_FILE, PRO_INVENTOR_FILE, PRO_CATIAFACETS_
FILE, PRO_SLA_ASCII_FILE, andPRO_SLA_BINARY_FILE, setthe
followingargument:
○arg1—Thenameofthecoordinate system.IfthisNULL,thefunctionuses
thedefaultcoordinate system.
•ForPRO_SPOOL_FILE, setarg1tothespoolname.
•ForPRO_FEAT_INFO, PRO_MFG_FEAT_CL, andPRO_MFG_OPER_CL,
setthefollowingargument:
○arg2—Theintegeridentifierofthefeature.
•ForPRO_IGES_3D_FILE, PRO_STEP_FILE, PRO_VDA_FILE, PRO_
FIAT_FILE, PRO_CATIA_DIRECT_FILE, orPRO_ACIS_FILE, setthe
followingargument:
○arg2—Theintegerpointertoanoddorevennumber.
•ForPRO_CGM_FILE, setthefollowingarguments:
○arg2—Represents theintegerpointertotheexporttypePRO_EXPORT_
CGM_CLEAR_TEXT orPRO_EXPORT_CGM_MIL_SPEC.
○arg3—Represents theintegerpointertothescalartypePRO_EXPORT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○arg2—Represents theintegerpointertotheexporttypePRO_EXPORT_
CGM_CLEAR_TEXT orPRO_EXPORT_CGM_MIL_SPEC.
○arg3—Represents theintegerpointertothescalartypePRO_EXPORT_
CGM_ABSTRACT orPRO_EXPORT_CGM_METRIC.
•ForPRO_CONNECTOR_PARAMS, setthefollowingarguments:
652 Creo®Parametric TOOLKIT User’sGuide○arg1—Represents theintegerpointertoProIdTable. ProIdTable is
anintegerarrayofcomponent identifiers.
○arg2—Represents theintegerpointertothenumberofcomponent
identifiers.
•ForPRO_CABLE_PARAMS_FILE, setthefollowingarguments:
○arg1—Represents aProSolid (partpointer).
○arg2—Represents thecablename.
•ForPRO_DIFF_REPORT_FILE, setthefollowingargument:
○arg4—Represents themodeltowhichtheinputmodeliscompared to
generatethedifferencereport.
•ForPRO_RELATION_FILE, setthefollowingargument:
○arg2—Represents theindividual featurerelations.Itisanintegerpointerto
thefeatureidentifierthatgetstherelationscontainedinafeature.Ifthisis
NULLyougettherelationscontainedinthemodel.
Exporting2DModels
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefeatureidentifierthatgetstherelationscontainedinafeature.Ifthisis
NULLyougettherelationscontainedinthemodel.
Exporting2DModels
Functions Introduced:
•Pro2dExport()
•Pro2dExportdataAlloc()
•Pro2dExportdataFr ee()
•Pro2dExportdataSheetoptionSet()
•Pro2dExportdataSheetsSet()
•Pro2dExportdataModelspacesheetSet()
•ProPro ductviewexportoptsAlloc()
•ProPro ductviewexportoptsFr ee()
•ProPro ductviewexportoptsFormatSet()
•ProPro ductviewFormattedMdlnameExport()
•ProPrintPrinterOptionsGet()
•ProPrintMdlOptionsGet()
•ProPrintPlacementOptionsGet()
•ProPrintPCFOptionsGet()
•ProPrintExecute()
Interface:DataExchange 653ExportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
STEP Pro2dExport() PRO_STEP_FILE
IGES PRO_IGES_FILE
MEDUSA PRO_MEDUSA_FILE
DXF PRO_DXF_FILE
DWG PRO_DWG_FILE
CGM PRO_CGM_FILE
TIFF PRO_SNAP_TIFF_FILE
Stheno PRO_STHENO_FILE
DXF ProOutputFileMdlnameWrite() PRO_DXF_FILE
DWG PRO_DWG_FILE
CGMfile PRO_CGM_FILE
PVSfile,Plotfile ProProductviewFormatted
Export()PRO_PV_FORMAT_PVSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTIFF PRO_SNAP_TIFF_FILE
Stheno PRO_STHENO_FILE
DXF ProOutputFileMdlnameWrite() PRO_DXF_FILE
DWG PRO_DWG_FILE
CGMfile PRO_CGM_FILE
PVSfile,Plotfile ProProductviewFormatted
Export()PRO_PV_FORMAT_PVS
EDfile,Plotfile PRO_PV_FORMAT_ED
EDZfile PRO_PV_FORMAT_EDZ
PVZfile PRO_PV_FORMAT_PVZ
Plotfile ProPrintExecute() N/A
Thefunction Pro2dExport() exportsexistingtwo-dimensional modelsintoa
singleobjectfile.Theexportedmodelcanbeasingledrawing,notebookor
diagram,ormultiplesheetsofadrawing.ItsupportstheSTEP,SET,IGES,
Medusa,DXF,CGM,TIFF,Stheno,and DWGformats.Theinterfacefileobtained
usingthefunction Pro2dExport() iscontrolled byoneofitsinputargument
data,aninstanceofthePro2dExportdata object.Notethatthedataargument
isoptional;youdonothavetospecifyitwhenexportingonlythecurrentsheetof
the2Dmodel.Additionally ,severalCreoParametric configuration optionsrelated
toentitytypeexportoptionscanaffecttheresultsoftheexportoperation. Referto
theCreoParametric OnlineHelpfordetailsontheconfiguration options.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoentitytypeexportoptionscanaffecttheresultsoftheexportoperation. Referto
theCreoParametric OnlineHelpfordetailsontheconfiguration options.
Example1PublishingaDrawing
ThesamplecodeinUgDwgPublishContext.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_dwg
showshowtopublishadrawinginthegivencontext.
Thefunctions Pro2dExportdataAlloc() and
Pro2dExportdataFree() allocateandfreethememoryforthe
Pro2dExportdata objectcontaining the2Dexportoptionsandflags.
Thefunction Pro2dExportdataSheetoptionSet() assignsthesheet
exportoptionforexporttothespecified2Dformat.Thesheetexportoptioncan
takeoneofthefollowingvalues:
•PRO2DEXPORT_CURRENT_TO_MODEL_SPACE—Specifies thatonlythe
drawing’scurrentsheetwillbeexportedasmodelspaceintothespecified2D
format.Thisisthedefaultvalue.
654 Creo®Parametric TOOLKIT User’sGuide•PRO2DEXPORT_CURRENT_TO_PAPER_SPACE—Specifies thatonlythe
drawing’scurrentsheetwillbeexportedaspaperspaceintothespecified2Dxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxformat.Thisisthedefaultvalue.
654 Creo®Parametric TOOLKIT User’sGuide•PRO2DEXPORT_CURRENT_TO_PAPER_SPACE—Specifies thatonlythe
drawing’scurrentsheetwillbeexportedaspaperspaceintothespecified2D
format.Thisvalueisonlyavailableforformatsthatsupporttheconceptof
modelspaceandpaperspace,forexample,DXFandDWG.
•PRO2DEXPORT_ALL—Specifies thatallthesheetsinadrawingwillbe
exportedintothespecified2Dformataspaperspace,ifapplicable tothe
formattype.
•PRO2DEXPORT_SELECTED—Specifies thatselectedsheetsinadrawing
willbeexportedaspaperspaceandonesheetwillbeexportedasmodelspace.
Thefunction Pro2dExportdataSheetsSet() assignsthesheetnumbersto
beexportedaspaperspacetothespecified2Dexportformatfile.Usethis
functiononlyifthesheetexportoptionissettoPRO2DEXPORT_SELECTED.
Thefunction Pro2dExportdataModelspacesheetSet() assignsthe
sheetnumbertobeexportedasmodelspace.Usethisfunctiononlyiftheexport
formatsupportstheconceptofmodelspaceandpaperspace,andifthesheet
exportoptionissettoPRO2DEXPORT_SELECTED.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsheetnumbertobeexportedasmodelspace.Usethisfunctiononlyiftheexport
formatsupportstheconceptofmodelspaceandpaperspace,andifthesheet
exportoptionissettoPRO2DEXPORT_SELECTED.
Thefunctions ProProductviewexportoptsAlloc() and
ProProductviewexportoptsFree() allocateandfreethememory
assignedtotheProProductviewExportOptions objectcontaining the
CreoViewexportformats.
Thefunction ProProductviewexportoptsFormatSet() assignstheflag
specifying theCreoViewexportformat.
Thefunction ProProductviewFormattedMdlnameExport() exportsa
drawingtooneofthefollowinguser-definedCreoViewformats:
•PRO_PV_FORMAT_PVS
•PRO_PV_FORMAT_ED
•PRO_PV_FORMAT_EDZ
•PRO_PV_FORMAT_PVZ
Usethefunction ProPrintPrinterOptionsGet() togettheoptionsfora
specifiedprinter.Specifytheprintertypeastheinputargumentforthisfunction.
Thesupported printertypesare:
•POSTSCRIPT—Generic Postscript
•COLORPOSTSC—Color Postscript
•MS_PRINT_MGR—MS PrintManager
Interface:DataExchange 655NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThesupported printertypesare:
•POSTSCRIPT—Generic Postscript
•COLORPOSTSC—Color Postscript
•MS_PRINT_MGR—MS PrintManager
Interface:DataExchange 655Note
Foralistofallsupported printers,pleaserefertotheAddPrinterTypelist
inthePrinterConfiguration dialogboxofCreoParametric.
Thefunctiongetstheinitialized printeroptions.Theoptionsincludethefile
relatedoptions,printcommand optionsandprinterspecificoptionsasfollows:
•FileRelated:
○save_to_file—Saves aplottoafile.
○save_method—Specifies iftheplotistobeappendedtoafile,savedtoa
singlefile,orsavedtomultiplefiles.
○filename—Specifies thenameofthefiletowhichtheplotissaved.
○delete_after—Deletes theplotfileafterprinting.
•PrintCommand:
○send_to_printer—Sends theplotdirectlytotheprinter.
○print_command—Specifies thecompletecommand thatyouwanttouse
forprinting.
○pen_table—Specifies thecompletepathtothefilecontaining thepentable.
○paper_size—Specifies thesizeofthepapertobeprinted.
○quantity—Specifies thenumberofcopiestobeprinted.
•PrinterSpecific:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○pen_table—Specifies thecompletepathtothefilecontaining thepentable.
○paper_size—Specifies thesizeofthepapertobeprinted.
○quantity—Specifies thenumberofcopiestobeprinted.
•PrinterSpecific:
○sw_handshake—Specifies thetypeofthehandshake initialization
sequence.SpecifythevalueasTruetosettheinitialization sequenceto
SoftwareandasFalsetosetittoHardware.
Note
Consultyoursystemadministrator formoreinformation onhandshaking.
○roll_media—Specifies whethertouseroll-media orcut-sheet.
○use_ttf—Specifies whethertouseTrueTypefontorstrokedtext.
○slew—Specifies thespeedofthepenincentimeters persecondinXandY
direction.
○rotate_plot—Specifies thattheplotistoberotatedby90degrees.
656 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProPrintMdlOptionsGet() togettheinitialized model
optionsforthemodeltobeprinted.Theavailablemodeloptionsare:
•mdl—Specifies themodeltobeprinted.
•quality—Determines thequalityofthemodeltobeprinted.Itchecksforno
line,nooverlap,simpleoverlap,andcomplexoverlap.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•mdl—Specifies themodeltobeprinted.
•quality—Determines thequalityofthemodeltobeprinted.Itchecksforno
line,nooverlap,simpleoverlap,andcomplexoverlap.
Themodeloptionsspecifictodrawingobjectsare:
•use_drawing_size—Overrides thesizeofthepaperspecifiedinthePrinter
options.
•draw_format—Prints thedrawingformatused.
•segmented—If true,thatisthevalueissettoabooleanof1,theprinterprints
drawingfullsize,butinsegmentsthatarecompatible withtheselectedpaper
size.Thisoptionisavailableonlyifyouareplottingasinglepage.
•layer_only—Prints thespecifiedlayeronly.
•layer_name—Prints thenameofthelayer.
•sheets—Prints thecurrentsheet,allsheets,orselectedsheets.
•range—An arrayoftwointegersspecifying thestartandendsheetnumbers.
Themodeloptionspecifictosolidobjectsis:
•use_solid_scale—Prints usingthescaleusedinthesolidmodel.
Usethefunction ProPrintPlacementOptionsGet() togetthecurrent
printplacement optionssuchasprintscale,offset,zoom,andsoon.Theoptions
availablefortheobjectplacement are:
•Placement Options:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProPrintPlacementOptionsGet() togetthecurrent
printplacement optionssuchasprintscale,offset,zoom,andsoon.Theoptions
availablefortheobjectplacement are:
•Placement Options:
○scale—Specifies thescaleusedfortheselectedplot.
○offset—Anarrayoftwodoublesrepresenting theoffsetfromthelower-left
corneroftheplot.
○keep_panzoom—Maintains thepanandzoomvaluesofawindow.
•ClippingOptions:
○clip_plot—Specifies whetheryouwanttocliptheplot.
○shift_to_ll_corner—Shifts theclipareatothelower-leftcorneroftheplot
○clip_area—T wodimensional arrayoffourdoublerepresenting thearea
thatisclipped.Therangeofthevaluesofthisoptionis0.0through1.0.
•LabelOptions:
○place_label—Specifies whetheryouwanttoplacethelabelontheplot.
○label_height—Height ofthelabelininches.
Interface:DataExchange 657Usethefunction ProPrintPCFOptionsGet() togettheprintoptionsfroma
specifiedPlotterConfiguration File.Specifythenameoftheplotterconfiguration
fileandthenameofthemodeltobeprinted.Thefunctiongetstheprinteroptions,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedPlotterConfiguration File.Specifythenameoftheplotterconfiguration
fileandthenameofthemodeltobeprinted.Thefunctiongetstheprinteroptions,
modeloptionsandplacement options.
Usethefunction ProPrintExecute() toprintaCreoParametric window
usingthespecifiedprinteroptions,modeloptionsandplacement options.The
drawingmustbedisplayedinawindowtobesuccessfully printed.
AutomaticPrintingof3DModels
CreoParametric TOOLKITprovidesthecapability ofautomatically creatingand
plottingadrawingofasolidmodel.TheCreoParametric TOOLKITapplication
needsonlytosupplyinstructions fortheprintactivity,andCreoParametric will
automatically createthedrawing,printit,andthendiscardit.
Themethodslistedhereareanalogous tothecommandFile▶▶Print▶▶Quick
DrawinginCreoParametric’ suserinterface.
Functions Introduced:
•ProQuickprintoptionsAlloc()
•ProQuickprintoptionsFre e()
•ProQuickprintoptionsLayouttypeSet()
•ProQuickprintoptionsOrientationSet()
•ProQuickprintoptionsSizeSet()
•ProQuickprintoptionsV iewAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProQuickprintoptionsAlloc()
•ProQuickprintoptionsFre e()
•ProQuickprintoptionsLayouttypeSet()
•ProQuickprintoptionsOrientationSet()
•ProQuickprintoptionsSizeSet()
•ProQuickprintoptionsV iewAdd()
•ProQuickprintoptionsThr eeviewlayoutSet()
•ProQuickprintoptionsPro jectionsSet()
•ProQuickprintoptionsT emplateSet()
•ProQuickprintoptionsPrintFlatT oScre enAnnotsSet()
•ProQuickprintExecute()
Thefunction ProQuickprintoptionsAlloc() allocatesaquickdrawing
optionshandle.
Usethefunction ProQuickprintoptionsFree() tofreeaquickdrawing
optionshandle.
Usethefunction ProQuickprintoptionsLayouttypeSet() toassignthe
layouttypeforthequickdrawingoperation. Youcaneitherspecifyadrawing
layoutusingtheinstructions oruseatemplatetodefinethedrawing.The
followingaretheavailablelayouttypes:
•PRO_QPRINT_LAYOUT_PROJ—Use aprojectedview-type layout.
658 Creo®Parametric TOOLKIT User’sGuide•PRO_QPRINT_LAYOUT_MANUAL—Use amanuallyarrangedlayout.
•PRO_QPRINT_LAYOUT_TEMPLATE—Use adrawingtemplatetodefinethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx658 Creo®Parametric TOOLKIT User’sGuide•PRO_QPRINT_LAYOUT_MANUAL—Use amanuallyarrangedlayout.
•PRO_QPRINT_LAYOUT_TEMPLATE—Use adrawingtemplatetodefinethe
layout.Ifthisoptionisused,onlythetemplatenameisneededtodefinethe
print;otheroptionsarenotused.
Usethefunction ProQuickprintoptionsOrientationSet() toassign
thesheetorientation forthequickdrawingoperation. Thefollowingarethe
availablesheetorientation types:
•PRODEV_ORIENTATION_PORTRAIT
•PRODEV_ORIENTATION_LANDSCAPE
Usethefunction ProQuickprintoptionsSizeSet() toassignthesizeof
theprintforthequickdrawingoperation. ProPlotPaperSize specifiesthe
papersizeandcanbeanyofthefollowingtypes:
•A_SIZE_PLOT
•B_SIZE_PLOT
•C_SIZE_PLOT
•D_SIZE_PLOT
•E_SIZE_PLOT
•A4_SIZE_PLOT
•A3_SIZE_PLOT
•A2_SIZE_PLOT
•A1_SIZE_PLOT
•A0_SIZE_PLOT
•F_SIZE_PLOT
Note
Variablesizeplotsarenotsupported bythisutility.
Usethefunction ProQuickprintoptionsViewAdd() toaddanewgeneral
view.Theinputarguments ofthisfunctionare:
•options—Specifies theoptionshandle.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Variablesizeplotsarenotsupported bythisutility.
Usethefunction ProQuickprintoptionsViewAdd() toaddanewgeneral
view.Theinputarguments ofthisfunctionare:
•options—Specifies theoptionshandle.
•location—Specifies thelocationoftheviewbeingaddedforprojectedview
layout.Thisoptionisignoredforamanualviewlayout.Itcanbeofthe
followingtypes:
○PRO_QPRINTPROJ_GENVIEW_MAIN
○PRO_QPRINTPROJ_GENVIEW_NW
Interface:DataExchange 659○PRO_QPRINTPROJ_GENVIEW_SW
○PRO_QPRINTPROJ_GENVIEW_SE
○PRO_QPRINTPROJ_GENVIEW_NE
Thegeneralviewlocationoptionsareanalogous tothelocationsinthequick
drawinguser_interface:
660 Creo®Parametric TOOLKIT User’sGuideNote
Formanualviewlayouts,theorderinwhichtheviewsareaddeddetermine
theirfinallocationinthedrawing.Forthisconfiguration, PTCdoesnot
supportusingmorethanfourviews.
•view_name—Specifies thenameofthesavedmodelview.
•scale—Specifies theviewscale.
•display_style—Specifies theviewdisplaystyletouseandisofthefollowing
types:
○PRO_DISPSTYLE_DEFAULT
○PRO_DISPSTYLE_WIREFRAMExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•scale—Specifies theviewscale.
•display_style—Specifies theviewdisplaystyletouseandisofthefollowing
types:
○PRO_DISPSTYLE_DEFAULT
○PRO_DISPSTYLE_WIREFRAME
○PRO_DISPSTYLE_HIDDEN_LINE
○PRO_DISPSTYLE_NO_HIDDEN
○PRO_DISPSTYLE_SHADED
○PRO_DISPSTYLE_FOLLOW_ENVIRONMENT
○PRO_DISPSTYLE_SHADED_WITH_EDGES
Usethefunction ProQuickprintoptionsThreeviewlayoutSet() to
assignthelayouttypewhenthreeviewsarebeingusedinamanuallayout(PRO_
QPRINT_LAYOUT_MANUAL). Thelayoutcanbeeitherofthefollowingtypes:
•PRO_QPRINTMANUAL_3VIEW_1_23VERT
•PRO_QPRINTMANUAL_3VIEW_23_VERT1
•PRO_QPRINTMANUAL_3VIEW_123_HORIZ
Theseoptionscorrespond tothediagramsintheuserinterface:
Interface:DataExchange 661Usethefunction ProQuickprintoptionsProjectionsSet() assignthe
projectedviewstobeincludedinthequickdrawingoperation. Thefunction
appliesonlytoPRO_QPRINT_LAYOUT_PROJ. Theprojections areofthe
followingtypes:
•PRO_QPRINTPROJ_TOP_VIEW
•PRO_QPRINTPROJ_RIGHT_VIEW
•PRO_QPRINTPROJ_LEFT_VIEW
•PRO_QPRINTPROJ_BOTTOM_VIEWxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxappliesonlytoPRO_QPRINT_LAYOUT_PROJ. Theprojections areofthe
followingtypes:
•PRO_QPRINTPROJ_TOP_VIEW
•PRO_QPRINTPROJ_RIGHT_VIEW
•PRO_QPRINTPROJ_LEFT_VIEW
•PRO_QPRINTPROJ_BOTTOM_VIEW
•PRO_QPRINTPROJ_BACK_NORTH
•PRO_QPRINTPROJ_BACK_EAST
•PRO_QPRINTPROJ_BACK_SOUTH
•PRO_QPRINTPROJ_BACK_WEST
Note
Projection viewstakesthesameviewscaleanddisplaystyleasthemain
view.
Theoptionscorrespond totheprojectedmembersofthediagramintheuser
interface:
662 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProQuickprintoptionsTemplateSet() toassignthe
pathtothedrawingtemplatefiletobeusedforthequickdrawingoperation. The
functionappliesonlytolayouttypePRO_QPRINT_LAYOUT_TEMPLATE.
Note
Thequickdrawingoperationshowstheexactimageofthemodelasisshown
on-screen. Therefore, ifthedrawingtemplatehasdrawingviewssetwith
displayoptionssuchasviewclipping,simplified representations, orlayers,
thesesettingsareignoredwhileplotting.Theresultingplotreflectswhateveris
seenon-screen.
Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplayoptionssuchasviewclipping,simplified representations, orlayers,
thesesettingsareignoredwhileplotting.Theresultingplotreflectswhateveris
seenon-screen.
Usethefunction
ProQuickprintoptionsPrintFlatToScreenAnnotsSet() tosetthe
ProBoolean flagtoprintflat-to-screen annotations. Theflat-to-screen
annotations createdatscreenlocationsintheCreoParametric graphicswindow
areprintedattheirrelativelocationsinthedrawing.Youcanprintflat-to-screen
annotations suchasnotes,symbols,andsurfacefinishsymbols.
Oncetheinstructions havebeenprepared,usethefunction
ProQuickprintExecute() toexecuteaprintoperationforagivensolid
model.Ithasthefollowinginputarguments:
•solid—Specifies thesolidmodeltobeprinted.
Interface:DataExchange 663•pcf_path—Specifies thepathtotheplotterconfiguration filetouse.Ifnopath
isspecified,thenthepathwillhavethevalueoftheconfiguration option
quick_print_plotter_config_file.
•options—Specifies thedetailsofthequickdrawingoperationgivenbythe
ProQuickprintOptions handle.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisspecified,thenthepathwillhavethevalueoftheconfiguration option
quick_print_plotter_config_file.
•options—Specifies thedetailsofthequickdrawingoperationgivenbythe
ProQuickprintOptions handle.
Exporting3DModels
CreoParametric TOOLKITprovidesexportcapabilities forthreedimensional
geometrytovariousformats.
Functions Introduced:
•ProIntf3DFileW rite()
•ProIntf3DFileW riteWithD efaultPro file()
•ProIntf3DLayerSetupFileSet()
•ProIntf3DLayerSetupFileIsIgnore d()
•ProIntf3DCsysSet()
•ProIntf3DCsysIsIgnore d()
•ProIntf3DModelDataClear()
•ProOutputBre pRepr esentationAlloc()
•ProOutputBre pRepr esentationFlagsSet()
•ProIntfExportPr ofileLoad()
•ProOutputBre pRepr esentationIsSupported()
•ProOutputBre pRepr esentationFr ee()
•ProOutputInclusionAlloc()
•ProOutputInclusionFacetparamsSet()
•ProOutputInclusionWi thOptionsSet()
•ProOutputInclusionFlagsSet()
•ProOutputInclusionFr ee()
•ProOutputLayerOptionsAlloc()
•ProOutputLayerOptionsAutoidSet()
•ProOutputLayerOptionsSetupfileSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProOutputInclusionWi thOptionsSet()
•ProOutputInclusionFlagsSet()
•ProOutputInclusionFr ee()
•ProOutputLayerOptionsAlloc()
•ProOutputLayerOptionsAutoidSet()
•ProOutputLayerOptionsSetupfileSet()
•ProOutputLayerOptionsFre e()
•ProOutputAssemblyConfigurationIsSupported()
•ProRasterFileW rite()
•ProIntfSliceFileW ithOptionsMdlnameExport()
664 Creo®Parametric TOOLKIT User’sGuide•ProExportVRML()
•ProPro ductviewexportoptsAlloc()
•ProPro ductviewexportoptsFr ee()
•ProPro ductviewexportoptsFormatSet()
•ProPro ductviewFormattedMdlnameExport()
ExportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
STEPfile(Standardforthe
Exchange ofProductModelData)ProIntf3DFileWrite()
ProIntf3DFileWriteWith
DefaultProfile()PRO_INTF_EXPORT_STEP
VDAfile PRO_INTF_EXPORT_VDA
IGES(3D)file PRO_INTF_EXPORT_IGES
CATIA(.model)file PRO_INTF_EXPORT_CATIA_
MODEL
SATfile(ACISformatforCreo
Parametric)PRO_INTF_EXPORT_SAT
NEUTRAL file(ASCIItext) PRO_INTF_EXPORT_NEUTRAL
CADDSfile PRO_INTF_EXPORT_CADDSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCATIA(.model)file PRO_INTF_EXPORT_CATIA_
MODEL
SATfile(ACISformatforCreo
Parametric)PRO_INTF_EXPORT_SAT
NEUTRAL file(ASCIItext) PRO_INTF_EXPORT_NEUTRAL
CADDSfile PRO_INTF_EXPORT_CADDS
CATIA(.session)file PRO_INTF_EXPORT_CATIA_
SESSION
Parasolidfile PRO_INTF_EXPORT_
PARASOLID
UGfile PRO_INTF_EXPORT_UG
CATIAV5Partfile PRO_INTF_EXPORT_CATIA_
PART
CATIAV5Assembly file PRO_INTF_EXPORT_CATIA_
PRODUCT
JTOpenformat PRO_INTF_EXPORT_JT
CATIAGraphical Representation
(CGR)formatPRO_INTF_EXPORT_CATIA_
CGR
DWGfile PRO_INTF_EXPORT_DWG
DXFfile PRO_INTF_EXPORT_DXF
SolidWorksPartFile PRO_INTF_EXPORT_SW_PART
SolidWorksAssembly File PRO_INTF_EXPORT_SW_
ASSEM
3DManufacturing Format(3MF) PRO_INTF_EXPORT_3MF
CATIAfacetsfile ProIntfSliceFileWithOp
tionsMdlnameExport()PRO_CATIAFACETS_FILE
INVENTOR file PRO_INVENTOR_FILE
Renderfile PRO_RENDER_FILE
SLAASCIIfile PRO_SLA_ASCII_FILE
SLABinaryfile PRO_SLA_BINARY_FILE
Additivemanufacturing file PRO_AMF_FILE
JPEGfile ProRasterFileWrite() PRORASTERTYPE_JPEGxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRenderfile PRO_RENDER_FILE
SLAASCIIfile PRO_SLA_ASCII_FILE
SLABinaryfile PRO_SLA_BINARY_FILE
Additivemanufacturing file PRO_AMF_FILE
JPEGfile ProRasterFileWrite() PRORASTERTYPE_JPEG
BMPfile PRORASTERTYPE_BMP
TIFFfile PRORASTERTYPE_TIFF
EPSfile(Postscript) PRORASTERTYPE_EPS
Interface:DataExchange 665ExportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
PVSfile,OLfile
(aseparateOLfileiscreatedfor
eachPARTinanassembly)ProProductviewFormatted
Export()PRO_PV_FORMAT_PVS
EDfile,OLfile
(aseparateOLfileiscreatedfor
eachPARTinanassembly)PRO_PV_FORMAT_ED
EDZfile PRO_PV_FORMAT_EDZ
PVZfile PRO_PV_FORMAT_PVZ
VRML ProExportVRML() N/A
Shrinkwrap ProSolidShrinkwrap
Create()N/A
ThefollowingdataisincludedduringtheexportofCreoParametric modelsto
otherformats:
•3DManufacturing Format(3MF)—From CreoParametric 5.0.1.0onward,you
canexportCreoParametric modelstothe3MFformat.Theexportincludes
part-levelcolors,top-assembly parameters, facetgeometry,andhidden
entities.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcanexportCreoParametric modelstothe3MFformat.Theexportincludes
part-levelcolors,top-assembly parameters, facetgeometry,andhidden
entities.
•JT—Creo Parametric modelsareexportedtoJTwiththeircoloroverrides.
Components withcoloroverridesatanylevelinanassemblystructureare
supported.
FromCreoParametric 3.0onward,theProductManufacturing Information
(PMI)oftheannotations isexportedassemanticrepresentation fromCreo
Parametric toJTmodels.Thesemanticexportissupported onlyfor3Dnotes
andbasicdimensions. Alltheothertypesofannotations areexportedas
graphicalentities.Youcanexportplanarandzonalcross-sections attachedto
combined statesfromCreoParametric filestoJT.
Note
FromCreoParametric 2.0M200onwardthelicense INTF_for_JT is
requiredtoexportaCreoParametric modeltoJT.Ifthelicenseisnot
availablethefunctionsreturntheerrorPRO_TK_NO_LICENSE.
•CreoView—Youcanexportcolorsassignedtothecomponents ofassemblies
andtheirsub-assembly models,includingthecolorsofthesub-levelentitiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxavailablethefunctionsreturntheerrorPRO_TK_NO_LICENSE.
•CreoView—Youcanexportcolorsassignedtothecomponents ofassemblies
andtheirsub-assembly models,includingthecolorsofthesub-levelentities
suchasparts,quilts,andfacesfromCreoParametric toCreoView.
666 Creo®Parametric TOOLKIT User’sGuideCreoParametric modelsareexportedtoCreoViewwiththeircoloroverrides.
Components withcoloroverridesatanylevelinanassemblystructureare
supported. Alongwithcomponents, coloroverridesarealsosupported for
component modelitems,suchas,faceandquilts.
•SolidWorks—From CreoParametric 3.0onward,youcanexportCreo
Parametric modelstoSolidWorks.Theexportincludesbasicgeometrysuchas
datumfeatures,colors,attributes, andlayers,partmodels,assemblystructures,
boundaryrepresentation geometry,andnon-geometric data.
•Unigraphics—The exportofCreoParametric modelstoUnigraphics includes
theexportofbasicgeometrysuchasdatumfeatures,colors,attributes, and
layers.
Note
RefertotheCreoParametric DataExchange Helpformoreinformation onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheexportofbasicgeometrysuchasdatumfeatures,colors,attributes, and
layers.
Note
RefertotheCreoParametric DataExchange Helpformoreinformation on
exportinggeometryfromCreoParametric tootherformats.Refertothe
compatibility matrixonPTC.comforthesupported softwareversions.
Thefollowingfunctionswillbedeprecated inafuturereleaseofCreoParametric.
Usethefunction ProIntf3DFileWriteWithDefaultProfile() instead
toexportCreoParametric modelstootherfileformats.Alltheoptionsthatcanbe
setwiththesefunctions, canalsobesetusingtheexportprofileoptioninCreo
Parametric. RefertotheCreoParametric DataExchange OnlineHelpformore
information.
•ProIntf3DFileWrite()
•ProOutputInclusionAlloc()
•ProOutputInclusionFree()
•ProOutputInclusionFlagsSet()
•ProOutputLayerOptionsAlloc()
•ProOutputLayerOptionsAutoidSet()
•ProOutputLayerOptionsSetupfileSet()
•ProOutputLayerOptionsFree()
•ProOutputInclusionWithOptionsSet()
Thefunction ProIntf3DFileWriteWithDefaultProfile() exportsaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProOutputLayerOptionsAutoidSet()
•ProOutputLayerOptionsSetupfileSet()
•ProOutputLayerOptionsFree()
•ProOutputInclusionWithOptionsSet()
Thefunction ProIntf3DFileWriteWithDefaultProfile() exportsa
CreoParametric modeltothespecifiedoutputformatusingthedefaultexport
profile.
Interface:DataExchange 667Thefunction ProIntf3DFileWrite() willbedeprecated inafuturerelease
ofCreoParametric. UsethefunctionProIntf3DFileW riteWithDefaultProfile()
instead.Thefunction ProIntf3DFileWrite() exportsaCreoParametric
modeltothespecifiedoutputformat.Thefollowingtypesofoutputformatsare
supported:
•STEP
•VDA
•IGES
•CATIAMODEL
•SAT(ACISformatinCreoParametric)
•NEUTRAL
•CADDS
•CATIASESSION
•PARASOLID
•UG
•CATIAV5
•JTOpen
•CATIAGraphical Representation
•DWG
•DXF
Whileexportingthemodel,youcanspecifythestructureandcontentsofthe
outputfilesas:
•FlatFile—Exports allofthegeometryoftheassemblytoasinglefileasifit
wereapart.ThisissimilartotheSingleFileformatinCreoParametric for
STEPoutput.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoutputfilesas:
•FlatFile—Exports allofthegeometryoftheassemblytoasinglefileasifit
wereapart.ThisissimilartotheSingleFileformatinCreoParametric for
STEPoutput.
•SingleFile—Exports anassemblystructuretoafilewithexternalreferences to
component files.Thisfilecontainsonlytop-levelgeometry.Thisissimilarto
theDittosformatinCreoParametric forCATIA,SeparatePartsOnlyfor
STEPandOneLevelforIGESoutputs.Apartoranassemblyisexportedasa
singlefilefortheDXFandtheDWGformats.
•MultiFiles—Exports anassemblystructuretoasinglefileandthe
components tocomponent files.Itcreatescomponent partsandsubassemblies
withtheirrespective geometryandexternalreferences. Thisoptionsupports
alllevelsofhierarchy.ThisissimilartoAllLevelsformatforIGESand
SeparateAllPartsforSTEPinCreoParametric.
668 Creo®Parametric TOOLKIT User’sGuide•Parts—Exports anassemblyasmultiplefilescontaining geometryinformation
ofitscomponents andassemblyfeatures.ThisissimilartoAllPartsformatfor
IGESinCreoParametric.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx668 Creo®Parametric TOOLKIT User’sGuide•Parts—Exports anassemblyasmultiplefilescontaining geometryinformation
ofitscomponents andassemblyfeatures.ThisissimilartoAllPartsformatfor
IGESinCreoParametric.
Someoutputformatssupportonlycertaintypesofassemblyconfigurations. The
defaultassemblyconfiguration isaflatfile.
Interface:DataExchange 669Note
UsingtheCreoParametric TOOLKITfunction ProIntf3DFileWrite()
youcanexportaCreoParametric 3DmodeltoaJTfileformat.
FromCreoParametric 2.0M200onward,thefunction
ProIntf3DFileWrite() exportsaCreoParametric 3DmodeltoJTfile
formatonlyifthelicense INTF_for_JT isavailable.Ifthelicenseisnot
availablethefunctionreturnstheerrorPRO_TK_NO_LICENSE.
StartingwithCreoParametric1.0, XT-brepdataformatissupported alongwith
theJT-brepformatforstoringthe3Dmodeldatatoexport.Usethenew
configuration option intf3d_ out_jt_brep toexporttheCreoParametric
modelusingthefunctionProIntf3DFileW rite().Thisconfiguration option
takesthefollowingvalues:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconfiguration option intf3d_ out_jt_brep toexporttheCreoParametric
modelusingthefunctionProIntf3DFileW rite().Thisconfiguration option
takesthefollowingvalues:
•NO—This isthedefaultvalue.Whenyousettheconfiguration option
intf3d_out_jt_brep asNO,thefunction
ProIntf3DFileWrite() exportstheCreoParametric modeltoJT
formatasfacetrepresentation only.
•JT_BREP—When yousettheconfiguration option intf3d_out_jt_
breptoJT_BREP, theexportedCreoParametric modelhasboththeJT-
brepformatandthefacetedrepresentation.
•XT_BREP—When yousettheconfiguration option intf3d_out_jt_
breptoXT_BREP, theexportedCreoParametric modelhasboththeXT-
brepformatandthefacetedrepresentation.
•TheexportofaCreoParametric 3DmodeltoaJTfileformatusingthe
function ProIntf3DFileWrite() isalsoimpactedbythefollowing
configuration options:
670 Creo®Parametric TOOLKIT User’sGuide○intf3d_out_jt_auto_lods—It takesthevalues yesorno*.Ifyou
settheconfiguration option intf3d_out_jt_auto_lods toyes,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconfiguration options:
670 Creo®Parametric TOOLKIT User’sGuide○intf3d_out_jt_auto_lods—It takesthevalues yesorno*.Ifyou
settheconfiguration option intf3d_out_jt_auto_lods toyes,
youcanexportuptothreeLevelsofDetail(LODs)totheJTformat.
○intf3d_out_jt_config_name—Name oftheJTconfiguration file.
Youcandefineaconfiguration filejt.config. Youcandefine
parameters andexportoptionsinthisfile.Youcanalsocontroltheexport
oftheLODstotheJTformatviaCreoParametric TOOLKITusingthis
file.Theoptionssetinthisfileoverridethesettingoftheconfiguration
option intf3d_out_jt_auto_lods. RefertothesectionExport
OptionsintheJTConfiguration Fileonpage677formoreinformation
abouttheoptionsthatcanbesetinthejt.config file.
○intf3d_out_jt_config_path—Path oftheJTconfiguration file.
•Theconfiguration option intf3d_out_export_as_facets isnow
obsolete.
Thefunction ProIntf3DLayerSetupFileSet() setsthelayersetupfilefor
theexport.Theinputargumentsfollow:
•model—The modelusedforexport.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Theconfiguration option intf3d_out_export_as_facets isnow
obsolete.
Thefunction ProIntf3DLayerSetupFileSet() setsthelayersetupfilefor
theexport.Theinputargumentsfollow:
•model—The modelusedforexport.
•layer_setup_file—The fullpathoftheinputlayersetupfile.Passthevalueas
NULLtosetdefaultlayersetupsettingsforinput file_type. Layersetup
fileisnotsupported forPRO_INTF_EXPORT_CADDS andPRO_INTF_
EXPORT_NEUTRAL filetypes.
Thefunction ProIntf3DLayerSetupFileIsIgnored() checksiflayer
setupfileisignoredornotduringexport.Thisfunctionreturnsifthelayersetup
fileisusedforthelastexport,usingthefunction
ProIntf3DFileWriteWithDefaultProfile().
Forreliableresults,callthefunction
ProIntf3DFileWriteWithDefaultProfile() beforecalling
ProIntf3DLayerSetupFileIsIgnored().
Theoutputargument is_ignored returns PRO_B_TRUE ifthelayersetupfile
isignoredandreturns PRO_B_FALSE iflayersetupfileisnotignored.
Thefunction ProIntf3DCsysSet() setsthereferencecoordinate systemCsys
fortheexport.Theinputargumentsfollow:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisignoredandreturns PRO_B_FALSE iflayersetupfileisnotignored.
Thefunction ProIntf3DCsysSet() setsthereferencecoordinate systemCsys
fortheexport.Theinputargumentsfollow:
•model—The modelusedforexport.
•csys_sel—The referencecoordinate system.PassthevalueasNULLtoset
defaultcoordinate system.Reference Csysisnotsupported forPRO_INTF_
EXPORT_CADDS andPRO_INTF_EXPORT_NEUTRAL filetypes.
Interface:DataExchange 671Thefunction ProIntf3DCsysIsIgnored() checksifthereference
coordinate systemisignoredornotduringexport.Thefunctionreturnsifthe
referenceCsysisusedforthelastexport,usingthefunction
ProIntf3DFileWriteWithDefaultProfile().
Forreliableresults,callthefunction
ProIntf3DFileWriteWithDefaultProfile() beforecalling
ProIntf3DLayerSetupFileIsIgnored().
Theoutputargument is_ignored returns PRO_B_TRUE ifthereferenceCsys
isignoredandreturns PRO_B_FALSE ifthereferenceCsysisnotignored.
Thefunction ProIntf3DModelDataClear() clearsthemodeldatasetby
thefunctions ProIntf3DLayerSetupFileSet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisignoredandreturns PRO_B_FALSE ifthereferenceCsysisnotignored.
Thefunction ProIntf3DModelDataClear() clearsthemodeldatasetby
thefunctions ProIntf3DLayerSetupFileSet() and
ProIntf3DCsysSet().
Usethefunction ProOutputAssemblyConfigurationIsSupported()
tocheckifthespecifiedassemblyconfiguration isvalidfortheparticularmodel
andthespecifiedexportformat.Thisfunctionmustbecalledbeforeexportingthe
modeltothespecifiedoutputformatusingthefunction
ProIntf3DFileWrite() exceptfortheCADDSandSTEP2Dformats.
Thefunction ProOutputBrepRepresentationAlloc() allocatesmemory
forthegeometric representation datastructure.Thisdatastructurerepresents the
typesofgeometrysupported bytheexportoperation. Thetypesofgeometric
representations are:
•Wireframe
•Surfaces
•Solid
•Quilts(ShellinCreoParametric)
Thesecorrespond totheoptionsshownintheCreoParametric dialogboxfor
export.Notethatsomeformatsallowacombination oftypestobeinput.
Thefunction ProOutputBrepRepresentationFlagsSet() setstheflagsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThesecorrespond totheoptionsshownintheCreoParametric dialogboxfor
export.Notethatsomeformatsallowacombination oftypestobeinput.
Thefunction ProOutputBrepRepresentationFlagsSet() setstheflags
forthegeometric representation datastructure.Itspecifiesthetypeofgeometryto
beexported.
Thefunction ProIntfExportProfileLoad() loadsthespecifiedprofilefor
export.Youcanusethisfunctionwhenyouwanttousetheexportprofileofyour
choiceinsteadofthedefaultexportprofileinaparticularCreoParametric session.
Theinputargument profileisthefullpathtotheprofilealongwiththeprofile
nameandextension.
672 Creo®Parametric TOOLKIT User’sGuideNote
OncetheexportprofilefileisloadedinaCreoParametric session,itwillbe
activeintheinteractive modeaswell.
Thefunction ProOutputBrepRepresentationIsSupported() checks
ifthespecifiedgeometric representation isvalidforaparticularexportformat.
Thisfunctionshouldbecalledbeforeexportingthemodeltothespecifiedoutput
formatusingthefunction ProIntf3DFileWrite(), tocheckiftheplannedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThisfunctionshouldbecalledbeforeexportingthemodeltothespecifiedoutput
formatusingthefunction ProIntf3DFileWrite(), tocheckiftheplanned
configuration issupported bytheCreoParametric interfaceoptions.
Thefunction ProOutputBrepRepresentationFree() freesthememory
allocatedforthegeometrydatastructure.
Thefunction ProOutputInclusionAlloc() willbedeprecated inafuture
releaseofCreoParametric. Thefunction ProOutputInclusionAlloc()
allocatesmemoryfortheinclusionstructuretobeusedwhileexportingthemodel.
Thefunction ProOutputInclusionFlagsSet() willbedeprecated ina
futurereleaseofCreoParametric. Itisrecommended thatyousetthisoptionin
exportprofilefileinCreoParametric. Thefunction
ProOutputInclusionFlagsSet() determines whethertoincludecertain
entitiesduringexport.Thetypesofentitiesare:
•Datums—Determines whetherdatumcurvesareincludedwhenexporting
files.Iftheflagissettotruethedatumcurveandpointinformation isincluded
duringexport.Thedefaultvalueisfalse.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Datums—Determines whetherdatumcurvesareincludedwhenexporting
files.Iftheflagissettotruethedatumcurveandpointinformation isincluded
duringexport.Thedefaultvalueisfalse.
•Blanked—Determines whetherentitiesonblankedlayersareexported.Ifthe
flagissettotrue,entitiesonblankedlayersareexported.Thedefaultvalueis
false.
•Facets—Determines whetherfacetedgeometryisincludedwhenexportingthe
models.Thedefaultvalueoftheflagisfalse.
Thefunction ProOutputInclusionFacetparamsSet() assignsthe
parameters tousewhileexportingthemodeltoafacetedformatsuchasPRO_
INTF_EXPORT_CATIA_CGR. Theseparameters areasfollows:
•chord_height—The chordheighttousefortheexportedfacets.
•angle_contr ol—Theanglecontroltousefortheexportedfacets.
Interface:DataExchange 673Note
Thefunction ProOutputInclusionFacetparamsSet() hasbeen
deprecated. Usethefunction
ProOutputInclusionWithOptionsSet() instead.
Thefunction ProOutputInclusionWithOptionsSet() willbe
deprecated inafuturereleaseofCreoParametric. Itisrecommended thatyousetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdeprecated. Usethefunction
ProOutputInclusionWithOptionsSet() instead.
Thefunction ProOutputInclusionWithOptionsSet() willbe
deprecated inafuturereleaseofCreoParametric. Itisrecommended thatyouset
thisoptioninexportprofilefileinCreoParametric. Usethefunction
ProOutputInclusionWithOptionsSet() tosettheparameters and
configuration flagsusedwhileexportingthemodeltoafacetedformatsuchas
PRO_INTF_EXPORT_CATIA_CGR. Theinputargumentsareasfollows:
•parameters—Specifies aProArray ofparameters thatconsistsofthe
followingthreeelements:
○chord_height—The chordheightoftheexportedfacets.
○angle_contr ol—Theanglecontroloftheexportedfacets.Specifyavalue
between0.0to1.0.Iftheanglecontrolisoutofbounds,CreoParametric
changesittotheclosestlimitwithoutreturninganerror.
○step_size—The stepsizeoftheexportedfacets.Ifthestepsizeislessor
equalto0,itisignored.
Note
Ifthechordheightorstepsizearetoosmallortoobig,thenCreo
Parametric resetsittothesmallestorbiggestacceptable value,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxequalto0,itisignored.
Note
Ifthechordheightorstepsizearetoosmallortoobig,thenCreo
Parametric resetsittothesmallestorbiggestacceptable value,
respectively ,withoutreturninganerror.
•config_flags—Specifies theconfiguration flagsthatcontroltheexport
operation. Theyareasfollows:
○PRO_FACET_STEP_SIZE_OFF—Switches offthestepsizecontrol.
○PRO_FACET_FORCE_INTO_RANGE—Forces theout-of-range
parameters intorange.IfanyofthePRO_FACET_*_DEFAULT optionis
set,thentheoption PRO_FACET_FORCE_INTO_RANGE isnotapplied
onthatparameter.
○PRO_FACET_STEP_SIZE_ADJUST—Adjusts thestepsizeaccording to
thecomponent size.
○PRO_FACET_CHORD_HEIGHT_ADJUST—Adjusts thechordheight
according tothecomponent size.
674 Creo®Parametric TOOLKIT User’sGuide○PRO_FACET_USE_CONFIG—If thisflagisset,valuesoftheflagsPRO_
FACET_STEP_SIZE_OFF, PRO_FACET_STEP_SIZE_ADJUST, and
PRO_FACET_CHORD_HEIGHT_ADJUST areignoredandthe
configuration settingsfromtheCreoParametric userinterfaceareused
duringtheexportoperationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFACET_STEP_SIZE_OFF, PRO_FACET_STEP_SIZE_ADJUST, and
PRO_FACET_CHORD_HEIGHT_ADJUST areignoredandthe
configuration settingsfromtheCreoParametric userinterfaceareused
duringtheexportoperation
○PRO_FACET_CHORD_HEIGHT_DEFAULT—Uses thedefaultvalueset
intheCreoParametric userinterfaceforthechordheight.
○PRO_FACET_ANGLE_CONTROL_DEFAULT—Uses thedefaultvalueset
intheCreoParametric userinterfacefortheanglecontrol.
○PRO_FACET_STEP_SIZE_DEFAULT—Uses thedefaultvaluesetinthe
CreoParametric userinterfaceforthestepsize.
○PRO_FACET_INCLUDE_QUILTS—Includes quiltsintheexportofCreo
Parametric modeltothespecifiedformat.
○PRO_EXPORT_INCLUDE_ANNOTATIONS—Includes annotations inthe
exportofCreoParametric modeltothespecifiedformat.
Note
Toincludeannotations, duringtheexportofCreoParametric model,
youmustcallthefunction ProMdlDisplay() beforecalling
ProIntf3DFileWrite().
○PRO_FACET_VISIBLE_MODELS—Exports modelswhichhavetheir
visibilitystatussettoShowinCreoParametric. Modelsthatarehiddenare
notexported.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProIntf3DFileWrite().
○PRO_FACET_VISIBLE_MODELS—Exports modelswhichhavetheir
visibilitystatussettoShowinCreoParametric. Modelsthatarehiddenare
notexported.
Note
Thebehaviorofthefunction
ProOutputInclusionWithOptionsSet() issimilartothefunction
ProOutputInclusionFacetparamsSet() iftheconfiguration flag
PRO_FACET_STEP_SIZE_OFF isset.
Thefunction ProOutputInclusionFree() willbedeprecated inafuture
releaseofCreoParametric. Thefunction ProOutputInclusionFree() frees
thememoryallocatedfortheinclusionstructure.
Thefunction ProOutputLayerOptionsAlloc() willbedeprecated ina
futurereleaseofCreoParametric. Thefunction
ProOutputLayerOptionsAlloc() allocatesmemoryforthelayeroptions
datastructure.Thelayeroptionsare:
Interface:DataExchange 675•AutoId—A flagindicating whetherlayersshouldbeautomatically assigned
numerical idswhenexporting.
•LayerSetupFile—The layersetupfilecontainsthenameofthelayer,its
displaystatus,theinterfaceIDandnumberofsublayers.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnumerical idswhenexporting.
•LayerSetupFile—The layersetupfilecontainsthenameofthelayer,its
displaystatus,theinterfaceIDandnumberofsublayers.
Specifythenameandcompletepathofthelayersetupfile.Thisfilecontainsthe
layerassignment information.
Thefunction ProOutputLayerOptionsAutoidSet() willbedeprecated
inafuturereleaseofCreoParametric. Itisrecommended thatyousetthisoption
inexportprofilefileinCreoParametric. Thefunction
ProOutputLayerOptionsAutoidSet() enablesyoutosetorremovean
interfacelayerID.Iftrue,automatically assignsinterfaceidstolayersnot
assignedidsandexportsthem.Thedefaultvalueisfalse.
Thefunction ProOutputLayerOptionsSetupfileSet() willbe
deprecated inafuturereleaseofCreoParametric. Itisrecommended thatyouset
thisoptioninexportprofilefileinCreoParametric. Usethefunction
ProOutputLayerOptionsSetupfileSet() tospecifythenameand
completepathofthelayersetupfile.
Thefunction ProOutputLayerOptionsFree() willbedeprecated ina
futurereleaseofCreoParametric. ThefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProOutputLayerOptionsSetupfileSet() tospecifythenameand
completepathofthelayersetupfile.
Thefunction ProOutputLayerOptionsFree() willbedeprecated ina
futurereleaseofCreoParametric. Thefunction
ProOutputLayerOptionsFree() freesthememoryallocatedforthelayer
optionsstructure.
Usefunction ProRasterFileWrite() tocreateastandardCreoParametric
rasteroutputfile.Notethatthisfunctiondoesnotsupportoutputofdrawings(2-
dimensional objects)inDrawingmode.
ThePRO_SPOOL_FILE optionreadsinaDiagramspoolfile.
Thefunction ProIntfSliceFileWithOptionsMdlnameExport()
exportstotesellatedformatssuchasSTL,Render,AMF,Inventor,CatiaFacets,
3MF,andOptegraVisualizerbasedonthevaluesofaProArray ofparameters
andtwoconfiguration flags.Theseformatsrequirethemaximum chordheight,
anglecontrol,andtransformation tobespecifiedforthemodelbeingexported.If
thespecifiedmodelisanassembly,thelastinputargumentofthefunctionisthe
component path;ifthemodelisapart,thisargumentisNULL.Theseparametersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedmodelisanassembly,thelastinputargumentofthefunctionisthe
component path;ifthemodelisapart,thisargumentisNULL.Theseparameters
andconfiguration flagsaresameastheonesassignedbythefunction
ProOutputInclusionWithOptionsSet() describedearlierinthis
section.Refertoitsdescription formoreinformation ontheparameters and
configuration flags.
Thefunction ProExportVRML() exportsasolidfromaCreoParametric
session,oraCreoParametric solidstoredinafile,intoadirectoryofVRMLfiles.
Thisoutputdirectorycontainsassemblystructuredata,partandassemblynames,
andgeometrical datarepresenting theparts.Thisfunctionacceptsasinputonly
CreoParametric assemblies orparts.
676 Creo®Parametric TOOLKIT User’sGuideProExportVRML() supportscreationofmultipleoutputfilesfromeitherparts
orassemblies. Ifyouexportanassembly,thefunctioncreatesanoutputfilefor
eachmemberoftheassemblyandonefortheassemblyitself.Defaultfilenames
are:
asm1_a.wrl, asm2_a.wrl, ... asmN_a.wrl
where asmistheassemblyname.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxeachmemberoftheassemblyandonefortheassemblyitself.Defaultfilenames
are:
asm1_a.wrl, asm2_a.wrl, ... asmN_a.wrl
where asmistheassemblyname.
Ifyouexportparts, ProExportVRML() createsanoutputfileforeachpart.
Defaultnamesarepart_p.wrl, wherepartisthepartname.Formore
information onProExportVRML(), referto“Exporting FilestoVRML”or
“BatchUtilities”inthe“Interface” sectionofCreoParametric help.
Thefunctions ProProductviewexportoptsAlloc() and
ProProductviewexportoptsFree() allocateandfreethememory
assignedtotheProProductviewExportOptions objectcontaining the
CreoViewexportformats.
Thefunction ProProductviewexportoptsFormatSet() assignstheflag
specifying theCreoViewexportformat.
Thefunction ProProductviewFormattedMdlnameExport() exportsa
partoranassemblytooneofthefollowinguser-definedCreoViewformats.
•PRO_PV_FORMAT_PVS
•PRO_PV_FORMAT_ED
•PRO_PV_FORMAT_EDZ
•PRO_PV_FORMAT_PVZ
Example2:ToExportaModelFiletoIGESFormat
ThesamplecodeinUgInterfaceExport.c locatedat<creo_toolkit_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_PV_FORMAT_PVS
•PRO_PV_FORMAT_ED
•PRO_PV_FORMAT_EDZ
•PRO_PV_FORMAT_PVZ
Example2:ToExportaModelFiletoIGESFormat
ThesamplecodeinUgInterfaceExport.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_interface shows
howtoexportamodelfiletoIGESformatusingoptionssimilartothoseseenin
theUI.
ExportOptionsintheJTConfiguration File
Youcanexportuptothreelevelsofdetail(LODs)fromCreoParametric filesto
theJTformat.AnLODisagraphicalrepresentation ofdetailssuchasthechord
height,anglecontrol,andstepsizeforfacetedsurfaces.Eachfacetedsurfaceis
madeupofaspecificnumberoftriangles.Theseshadedtrianglesrepresentthe
object.Themoretrianglesthatdescribetheobject,themoredetailsyoucanview.
Interface:DataExchange 677Youcancreateanduseaconfiguration file,jt.config, tocontroltheexportof
theLODsfromCreoParametric filestotheJTformat.Thejt.config fileis
locatedinthe<creo_loadpoint>\<datecode>\Common Files\text\
jt\directory.Theoptionssetinthisfileoverridetheconfiguration optionsinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheLODsfromCreoParametric filestotheJTformat.Thejt.config fileis
locatedinthe<creo_loadpoint>\<datecode>\Common Files\text\
jt\directory.Theoptionssetinthisfileoverridetheconfiguration optionsinthe
config.pro configuration file.
Youcanincludethefollowingparameters orexportoptionsinthejt.config
file:
•EAITranslator—Specifies thesettingfortheexportofcontrolparameters.
○chordalOption—Specifies whethertoapplythechordalvalueasan
absolutevalueinmodelunitsorasarelativevaluethatisapercentage of
thepartsize.Thevalidvaluesare:
◆RELATIVE—T essellatesallthepartsinamodelrelativetotheirsize
equally.Thechordalvalueisappliedasafractionalpercentage.
◆ABSOLUTE—T essellatesallthepartsinamodelregardless oftheir
size.Thechordalvalueisappliedasanabsolutevalue.
○structureOption—Specifies themappingoftheJTproductstructure
totheJTfilestructureintheJTfilesafterexport.Thesupported product
structuresare:
◆JtkPER_PART—Specifies thattheassemblyisexportedasasinglexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○structureOption—Specifies themappingoftheJTproductstructure
totheJTfilestructureintheJTfilesafterexport.Thesupported product
structuresare:
◆JtkPER_PART—Specifies thattheassemblyisexportedasasingle
JTfile.Thepartsintheassemblyareexportedandsavedasindividual
JTfilesinasub-directory ofthesamenameasthetop-levelassembly
file.
◆JtkFULL_SHATTER—Specifies thateachcomponent ofthe
assemblyisexportedasaseparateJTfile.
◆JtkMONOLITHIC—Specifies thattheassemblyisexportedasa
singleJTfile.
○writeWhichFiles—Specifies whichcomponents mustbeexportedto
JTformat.
◆ALL—This isthedefaultoption.Specifiesthattheentireassembly
alongwithitspartsmustbeexported.
◆ASSEMBLY_ONLY—Specifies thatonlytheproductstructuremustbe
exported.
◆PARTS_ONLY—Specifies thatonlythepartsintheassemblymustbe
exportedwithouttheassemblystructure.
○JtFileFormat—Specifies theversionoftheJTformatinwhichthe
filesmustbeexported.RefertotheCreoParametric DataExchange Help,
formoreinformation onAUTOoption.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexportedwithouttheassemblystructure.
○JtFileFormat—Specifies theversionoftheJTformatinwhichthe
filesmustbeexported.RefertotheCreoParametric DataExchange Help,
formoreinformation onAUTOoption.
678 Creo®Parametric TOOLKIT User’sGuide○includeBrep—Specifies abooleanvaluetoincludethegeometry
boundaryrepresentation definition, thatis,JT-breporXT-brep,inthefiles
exportedtoJTformat.Itcontrolstheexportofannotations assemantic
representations. YoucannotincludetheJT-brepandtheXT-brepdata
structuresinthesamefile.Thevalidvaluesaretrueorfalse.
○autoXtBrep—Specifies abooleanvaluetoautomatically convertthe
boundaryrepresentation geometrytoparasolidformatduringtheexport.
Whenyousettheoptiontotrue,theboundaryrepresentation datais
converted totheparasolidformat.Whensettofalse,theboundary
representation dataisstoredintheproprietary JTformat.
YoucanusetheautoXtBrep optionwiththeincludeBrep optionto
switchbetweentheJT-brepandtheXT-brepstructures.
○numLODs—Specifies thenumberofLODdefinitions. PTCrecommendsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanusetheautoXtBrep optionwiththeincludeBrep optionto
switchbetweentheJT-brepandtheXT-brepstructures.
○numLODs—Specifies thenumberofLODdefinitions. PTCrecommends
creatinguptothreeLODs.
•LOD—Specifies agroupofparameters thatcontroltessellation foraspecific
LOD.ItalsospecifiesthenumberofthecurrentLOD.
○Level—Specifies thecurrentLODnumber.
○Chordal—Specifies themaximum distancethatatessellated line
segmentdeviatesfromtheactualcurveitapproximates. Ittakesthevalue
asafloatingnumberfrom[0.0,1.0].Thevaluespecifiedisasdetermined
bythechordalOption option.Ifthechordalvalueexceedsthemodel
size,youcanconsiderthemodelsizeasthechordalvalue.
Note
Forbestresults,usechordalvaluesinconjunction withtheAngular
parameter.Chordalvaluesprimarilyaffectthelargerfeaturesofthe
modelwhiletheangularvaluesaffectthesmallerfeaturesofthe
model.
○Length—Specifies themaximum absolutelengthofthetessellated line
segmentsinacurveapproximation. IftheLengthvalueexceedsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelwhiletheangularvaluesaffectthesmallerfeaturesofthe
model.
○Length—Specifies themaximum absolutelengthofthetessellated line
segmentsinacurveapproximation. IftheLengthvalueexceedsthe
modelsize,considerthedefaultvalueas(model_size/30).
○Label—Specifies theuser-definednamefortheLOD.
○Angular—Specifies theanglecontrolvalueforLODdefinitions and
triangulation exporttoJTformat.Thisparameter setstheabsolute
maximum anglebetweentwoadjacentlinesegmentsinacurve
approximation. Theanglehasitsvaluebetween0and90degrees.The
maximum anglevalueindicatescoarsetessellation whilethelowestvalue
indicatesfinetessellation andhighqualityLOD.
•proeConfig—Specifies theoptionsthatarespecifictoCreoParametric.
Interface:DataExchange 679○autoLODgeneration—Specifies abooleanvaluetoautomatically
generatethreeLODsfromCreoParametric. Thevalidvaluesaretrueor
false.
Note
When autoLODgeneration issettotrue,theLODoptionssetin
thejt.config fileareignored.
○autoLODStepSize—Specifies abooleanvaluetousethestepsizexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfalse.
Note
When autoLODgeneration issettotrue,theLODoptionssetin
thejt.config fileareignored.
○autoLODStepSize—Specifies abooleanvaluetousethestepsize
parameter duringtheautomatic generation ofLODsusingtheoptionsset
inCreoParametric. Thisoptionisavailableonlywhen
autoLODgeneration issettotrue.
Note
When autoLODStepSize issettotrue,thestepsizesetinthe
jt.config fileisignored.
○LOD[n]angle—Regulates theamountofadditional improvement along
curveswithsmallradiiforLOD1,LOD2,andLOD3.Ittakesthevalueas
afloatingnumberfrom[0.0,1.0].Thisoptionisavailableonlywhen
autoLODgeneration issettofalse.
•UseJTAngularControl—Specifies thetypeofanglecontroltobeused.
Anglescanbecontrolled usingtheCreoParametric anglecontrolvaluesorthe
JTanglecontrolvalues.Setthisparameter totruetousetheJTanglecontrol
values.SpecifytheanglecontrolvaluesintheAngular option.
Bydefault,thisparameter issettofalse.Inthiscase,theCreoParametric
anglecontroloptions, LOD1angle, LOD2angle, LOD3angle, andsoon,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalues.SpecifytheanglecontrolvaluesintheAngular option.
Bydefault,thisparameter issettofalse.Inthiscase,theCreoParametric
anglecontroloptions, LOD1angle, LOD2angle, LOD3angle, andsoon,
areusedtodefinetheLODgeneration.
Youmustsettheconfiguration options intf3d_out_jt_config_name and
intf3d_out_jt_config_path tospecifythenameandlocationofthe
jt.config file.
Shrinkwrap Export
Toimproveperformance inlargeassemblydesign,youcanexportlightweight
representations ofmodelscalledShrinkwrap models.Ashrinkwrap modelis
basedontheexternalsurfacesofthesourcepartorassemblymodelandcaptures
theoutershapeofthesourcemodel.
680 Creo®Parametric TOOLKIT User’sGuideYoucancreatethefollowingtypesofnonassociative exportedShrinkwrap
models:
•SurfaceSubset—This typeconsistsofasubsetoftheoriginalmodel’s
surfaces.
•FacetedSolid—This typeisafacetedsolidrepresenting theoriginalsolid.
•MergedSolid—The externalcomponents fromthereferenceassemblymodel
aremergedintoasinglepartrepresenting thesolidgeometryinallcollectedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•MergedSolid—The externalcomponents fromthereferenceassemblymodel
aremergedintoasinglepartrepresenting thesolidgeometryinallcollected
components.
ExportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
Shrinkwrap ProSolidShrinkwrap
Create()N/A
FunctionIntroduced:
•ProSolidShrinkwrapMdlnameCr eate()
YoucanexportthespecifiedsolidmodelasaShrinkwrap modelusingthe
function ProSolidShrinkwrapMdlnameCreate(). Thisfunctionrequires:
•ThemodeltobeexportedasShrinkwrap
•ThetemplatemodelwheretheShrinkwrap geometrywillbecreated.
•ThenameoftheexportedfileiftheexportformatisVRMLorSTL.
SettingShrinkwrap Options
Functions Introduced:
•ProShrinkwrapoptionsAlloc()
•ProShrinkwrapoptionsFr ee()
•ProShrinkwrapoptionsQualitySet()
•ProShrinkwrapoptionsAutoholefillingSet()
•ProShrinkwrapoptionsIgnor eskeletonsSet()
•ProShrinkwrapoptionsIgnor equiltsSet()
•ProShrinkwrapoptionsIgnor econstrbodiesSet()
•ProShrinkwrapoptionsAssignmasspr opsSet()
•ProShrinkwrapoptionsDatumr efsSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProShrinkwrapoptionsIgnor equiltsSet()
•ProShrinkwrapoptionsIgnor econstrbodiesSet()
•ProShrinkwrapoptionsAssignmasspr opsSet()
•ProShrinkwrapoptionsDatumr efsSet()
Thefunction ProShrinkwrapoptionsAlloc() allocatesmemoryforthe
structuredefiningtheshrinkwrap options.Thetypesofshrinkwrap methodsare:
•PRO_SWCREATE_SURF_SUBSET—Surface Subset
•PRO_SWCREATE_FACETED_SOLID—Faceted Solid
Interface:DataExchange 681•PRO_SWCREATE_MERGED_SOLID—Mer gedSolid
Thefunctionreturnstheoptionshandlewhichisusedtosetthemembersofthe
structuredefiningtheshrinkwrap options.
Thefunction ProShrinkwrapoptionsFree() freesthememoryallocated
bythefunction ProShrinkwrapoptionsAlloc().
Thefunction ProShrinkwrapoptionsQualitySet() specifiesthequality
levelforthesystemtousewhenidentifying surfacesorcomponents thatwill
contribute totheShrinkwrap model.Qualityrangesfrom1whichproducesthe
coarsestrepresentation ofthemodelinthefastesttime,to10whichproducesthe
mostexactrepresentation. Thedefaultvalueistrue.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontribute totheShrinkwrap model.Qualityrangesfrom1whichproducesthe
coarsestrepresentation ofthemodelinthefastesttime,to10whichproducesthe
mostexactrepresentation. Thedefaultvalueistrue.
Thefunction ProShrinkwrapoptionsAutoholefillingSet() setsa
flagthatforcesCreoParametric toidentifyallholesandsurfacesthatintersecta
singlesurfaceandfillsthoseholesduringshrinkwrap. Thedefaultvalueistrue.
Thefunction ProShrinkwrapoptionsIgnoreskeletonsSet()
determines whethertheskeletonmodelgeometrymustbeincludedinthe
Shrinkwrap model.
ProShrinkwrapoptionsIgnorequiltsSet() determines whether
externalquiltswillbeincludedintheShrinkwrap model.
ProShrinkwrapoptionsIgnoreconstrbodiesSet() determines
whetherconstruction bodiesareincludedintheShrinkwrap model.
ProShrinkwrapoptionsAssignmasspropsSet() assignsmass
properties totheShrinkwrap model.Thedefaultvalueisfalseandthemass
properties oftheoriginalmodelisassignedtotheShrinkwrap model.Ifthevalue
issettotrue,theuserwillhavetoassignavalueforthemassproperties.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxproperties totheShrinkwrap model.Thedefaultvalueisfalseandthemass
properties oftheoriginalmodelisassignedtotheShrinkwrap model.Ifthevalue
issettotrue,theuserwillhavetoassignavalueforthemassproperties.
ProShrinkwrapoptionsDatumrefsSet() selectsthedatumplanes,
points,curves,axes,andcoordinate systemreferences tobeincludedfromthe
Shrinkwrap model.
SurfaceSubsetOptions
Functions Introduced:
•ProShrinkwrapoptionsIgnor esmallsurfsSet()
•ProShrinkwrapoptionsAdditionalsurfacesSet()
Thefunction ProShrinkwrapoptionsIgnoresmallsurfsSet() setsa
flagthatforcesCreoParametric toskipsurfacessmallerthanacertainsize.The
defaultvalueofthisargumentisfalse.Thesizeofthesurfaceisspecifiedasa
percentage ofthemodel’ssize.
UseProShrinkwrapoptionsAdditionalsurfacesSet() toselect
individual surfacestobeincludedintheShrinkwrap model.
682 Creo®Parametric TOOLKIT User’sGuideFacetedSolidOptions
Functions Introduced:
•ProShrinkwrapoptionsFacetedformatSet()
•ProShrinkwrapoptionsFramesFileSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx682 Creo®Parametric TOOLKIT User’sGuideFacetedSolidOptions
Functions Introduced:
•ProShrinkwrapoptionsFacetedformatSet()
•ProShrinkwrapoptionsFramesFileSet()
Usethefunction ProShrinkwrapoptionsFacetedformatSet() to
specifytheoutputfileformatoftheShrinkwrap model.Thetypesofoutputformat
are:
•PRO_SWFACETED_PART——Creo Parametric partwithnormalgeometry.
Thisisthedefaultformattype.
•PRO_SWFACETED_LIGHTWEIGHT_PART—Lightweight CreoParametric
partwithlightweight, facetedgeometry.
•PRO_SWFACETED_STL—An STLfile
•PRO_SWFACETED_VRML—A VRMLfile
Thefunction ProShrinkwrapoptionsFramesFileSet() enablesyouto
selectaframefiletocreateafacetedsolidmotionenvelopemodelthatrepresents
thefullmotionofthemechanism capturedintheframefile.Specifythenameand
completepathoftheframefile.
MergedSolidOptions
FunctionIntroduced:
•ProShrinkwrapoptionsAdditionalcomponentsSet()
Usethefunction
ProShrinkwrapoptionsAdditionalcomponentsSet() toselect
individual components oftheassemblytobemergedintotheShrinkwrap model.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProShrinkwrapoptionsAdditionalcomponentsSet()
Usethefunction
ProShrinkwrapoptionsAdditionalcomponentsSet() toselect
individual components oftheassemblytobemergedintotheShrinkwrap model.
Example3:ToExportaModeltoVRMLFormat
ThesamplecodeinUgInterfaceExport.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_interface shows
howtocreateafacetedshrinkwrap modelinVRMLformat
Example4:ToCreateaShrinkwrap PartModelasa
MergedSolid
ThesamplecodeinUgInterfaceExport.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_interface shows
howtocreateanewemptymodelandcopythemergedsolidshrinkwrap
information intoit.
Interface:DataExchange 683ExportingtoPDFandU3D
ThefunctionsdescribedinthissectionsupporttheexportofCreoParametric
drawingsandsolidmodelstoPortableDocument Format(PDF)andU3Dformat.
Youcanexportadrawingora2Dmodelasa2Drasterimageembedded inaPDF
file.YoucanexportCreoParametric solidmodelsinthefollowingways:
•AsaU3Dmodelembedded inaone-pagePDFfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanexportadrawingora2Dmodelasa2Drasterimageembedded inaPDF
file.YoucanexportCreoParametric solidmodelsinthefollowingways:
•AsaU3Dmodelembedded inaone-pagePDFfile
•As2Drasterimagesembedded inthepagesofaPDFfilerepresenting saved
views
•Asastandalone U3Dfile
WhileexportingmultiplesheetsofaCreoParametric drawingtoaPDFfile,you
canchoosetoexportallsheets,thecurrentsheet,orselectedsheets.
Thesefunctionsalsoallowyoutoinsertavarietyofnon-geometric information to
improvedocument content,navigation, andsearch.
Functions Introduced:
•ProPDFoptionsAlloc()
•ProPDFoptionsIntpr opertySet()
•ProPDFoptionsBoolpr opertySet()
•ProPDFoptionsStringpro pertySet()
•ProPDFoptionsDoublepro pertySet()
•ProPDFExport()
•ProPDFW ithPr ofileExport()
•ProPDFoptionsFr ee()
Thefunction ProPDFoptionsAlloc() allocatesmemoryforthePDFoptions
structure.
Thefunction ProPDFoptionsIntpropertySet() setsthevalueforan
integerorenumpropertyofthePDFoptionsstructure.Thetypesofexportoptions
areasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructure.
Thefunction ProPDFoptionsIntpropertySet() setsthevalueforan
integerorenumpropertyofthePDFoptionsstructure.Thetypesofexportoptions
areasfollows:
•PRO_PDFOPT_EXPORT_MODE—Enables youtoselecttheobjecttobe
exportedtoPDFandtheexportformat.Thevaluesare:
○PRO_PDF_2D_DRAWING—Specifies thatonly2Ddrawingswillbe
exportedtoPDF.Thisisthedefault.
○PRO_PDF_3D_AS_NAMED_VIEWS—Specifies thatCreoParametric
modelswillbeexportedas2Drasterimagesembedded inPDFfiles.
○PRO_PDF_3D_AS_U3D_PDF—Specifies thatCreoParametric models
willbeexportedasU3Dmodelsembedded inone-pagePDFfiles.
684 Creo®Parametric TOOLKIT User’sGuide○PRO_PDF_3D_AS_U3D—Specifies thataCreoParametric modelwillbe
exportedasaU3D(*.u3d)file.Thisvalueignorestheoptionsavailablefor
thePDFoptionsstructure.
•PRO_PDFOPT_PDF_SAVE—Enables youtospecifythePDFformatwhile
exporting2Ddrawingsandsolidmodels.Thevaluesare:
○PRO_PDF_ARCHIVE_1—Exports the2DdrawingtothePDF/Aformat.
Thistypeisapplicable onlyfor2Ddrawings,thatis,whenyousetthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexporting2Ddrawingsandsolidmodels.Thevaluesare:
○PRO_PDF_ARCHIVE_1—Exports the2DdrawingtothePDF/Aformat.
Thistypeisapplicable onlyfor2Ddrawings,thatis,whenyousetthe
option PRO_PDFOPT_EXPORT_MODE toPRO_PDF_2D_DRAWING.
Ifyousettheoption PRO_PDFOPT_PDF_SAVE toPRO_PDF_
ARCHIVE_1, thefollowingoptionsaresetasshownbelow:
◆PRO_PDFOPT_LAYER_MODE issettoPRO_PDF_LAYERS_NONE.
◆PRO_PDFOPT_HYPERLINKS issettoFALSE,thatis,hyperlinks are
notcreatedinthePDF.
◆Shadedviewswillnotbetransparent andmayoverlapotherdata.
◆PRO_PDFOPT_PASSWORD_TO_OPEN issettoNULL.
◆PRO_PDFOPT_MASTER_PASSWORD issettoNULL.
◆PRO_PDF_FULL—Exports theobjecttothestandardPDFformat.
Thisisthedefaultvalue.
•PRO_PDFOPT_FONT_STROKE—Enables youtoswitchbetweenusing
TrueTypefontsintheresultingdocument anddrawingor"stroking" textas
linesegments. Thevaluesare:
○PRO_PDF_USE_TRUE_TYPE_FONTS—Specifies TrueTypefonts.This
isthedefault.
○PRO_PDF_STROKE_ALL_FONTS—Specifies theoptiontostrokeall
fonts.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlinesegments. Thevaluesare:
○PRO_PDF_USE_TRUE_TYPE_FONTS—Specifies TrueTypefonts.This
isthedefault.
○PRO_PDF_STROKE_ALL_FONTS—Specifies theoptiontostrokeall
fonts.
•PRO_PDFOPT_COLOR_DEPTH—Enables youtochoosebetweencolor,
grayscale, ormonochrome output.Thevaluesare:
○PRO_PDF_CD_COLOR—Specifies coloroutput.Thisisthedefault.
○PRO_PDF_CD_GRAY—Specifies grayscaleoutput.
○PRO_PDF_CD_MONO—Specifies monochrome output.
•PRO_PDFOPT_HIDDENLINE_MODE—Enables youtosetthestylefor
hiddenlinesintheresultingPDFdocument. Thevaluesare:
○PRO_PDF_HLM_DASHED—Specifies dashedhiddenlines.Thisisthe
default.
○PRO_PDF_HLM_SOLID—Specifies solidhiddenlines.
Interface:DataExchange 685•PRO_PDFOPT_RASTER_DPI—Enables youtosettheresolution forthe
outputofanyshadedviewsinDPI.Thevalueisrestrictedtothevaluesin
ProDotsPerInch, andthedefaultisPRORASTERDPI_300.
•PRO_PDFOPT_LAYER_MODE—Enables youtosettheavailability oflayers
inthedocument. Thevaluesare:
○PRO_PDF_LAYERS_VISIBLE—Exports onlyvisiblelayersina
drawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_PDFOPT_LAYER_MODE—Enables youtosettheavailability oflayers
inthedocument. Thevaluesare:
○PRO_PDF_LAYERS_VISIBLE—Exports onlyvisiblelayersina
drawing.
○PRO_PDF_LAYERS_NONE—Exports onlythevisibleentitiesinthe
drawing,butnotthelayersonwhichtheyareplaced.
○PRO_PDF_LAYERS_ALL—Exports thevisiblelayersandentities.Thisis
thedefault.
•PRO_PDFOPT_PARAM_MODE—Enables youtosettheavailability ofmodel
parameters assearchable metadatainthePDFdocument. Thevaluesare:
○PRO_PDF_PARAMS_DESIGNATED—Exports onlythespecifiedmodel
parameters inthePDFmetadata.
○PRO_PDF_PARAMS_NONE—Exports thedrawingtoPDFwithoutthe
modelparameters.
○PRO_PDF_PARAMS_ALL—Exports thedrawingandthemodel
parameters toPDF.Thisisthedefault.
•PRO_PDFOPT_ALLOW_MODE—Defines thechangesthatyoucanmakein
thePDFdocument. ThisoptioncanbesetonlyifPRO_PDFOPT_
RESTRICT_OPERATIONS issettotrue.Thepermittedvieweroperations are
givenbythefollowingvalues:
○PRO_PDF_RESTRICT_NONE—This isthedefaultvalueanditrestrictsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRESTRICT_OPERATIONS issettotrue.Thepermittedvieweroperations are
givenbythefollowingvalues:
○PRO_PDF_RESTRICT_NONE—This isthedefaultvalueanditrestricts
youfromperforming alloperations inthePDFdocument.
○PRO_PDF_RESTRICT_FORMS_SIGNING—Allows youtofillinthe
fieldsoftheform,createtemplates, andadddigitalsignatures tothePDF
document.
○PRO_PDF_RESTRICT_INSERT_DELETE_ROTATE—Allows youto
insert,delete,androtatepagesinthePDFdocument.
○PRO_PDF_RESTRICT_COMMENT_FORM_SIGNING—Allows youto
addoreditcomments, fillinthefieldsoftheform,createtemplates, and
adddigitalsignatures tothePDFdocument.
○PRO_PDF_RESTRICT_EXTRACTING—Allows youtoperformall
vieweroperations, exceptforextracting pagesfromthePDFdocument.
•PRO_PDFOPT_ALLOW_PRINTING_MODE—Allows youtosettheprint
resolution. Thisoptioncanbesetonlyiftheoptions PRO_PDFOPT_
686 Creo®Parametric TOOLKIT User’sGuideRESTRICT_OPERATIONS andPRO_PDFOPT_ALLOW_PRINTING areset
totrue.Thevaluesare:
○PRO_PDF_PRINTING_LOW_RES—Specifies lowresolution for
printing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx686 Creo®Parametric TOOLKIT User’sGuideRESTRICT_OPERATIONS andPRO_PDFOPT_ALLOW_PRINTING areset
totrue.Thevaluesare:
○PRO_PDF_PRINTING_LOW_RES—Specifies lowresolution for
printing.
○PRO_PDF_PRINTING_HIGH_RES—Specifies highresolution for
printing.Thisisthedefault.
•PRO_PDFOPT_LINECAP—Enables youtocontrolthetreatmentoftheends
ofthegeometrylinesexportedtoPDF.Thevaluesare:
○PRO_PDF_LINECAP_BUTT—Specifies thebuttcapsquareend.Thisis
thedefault.
○PRO_PDF_LINECAP_ROUND—Specifies theroundcapend.
○PRO_PDF_LINECAP_PROJECTING_SQUARE—Specifies the
projecting squarecapend.
•PRO_PDFOPT_LINEJOIN—Enables youtocontrolthetreatmentofthe
joinedcornersofconnected linesexportedtoPDF.Thevaluesare:
○PRO_PDF_LINEJOIN_MITER—Specifies themiterjoin.Thisisthe
default.
○PRO_PDF_LINEJOIN_ROUND—Specifies theroundjoin.
○PRO_PDF_LINEJOIN_BEVEL—Specifies thebeveljoin.
•PRO_PDFOPT_SHEETS—Enables youtospecifythesheetsfromaCreo
Parametric drawingthataretobeexportedtoPDF.Thevaluesare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_PDF_LINEJOIN_BEVEL—Specifies thebeveljoin.
•PRO_PDFOPT_SHEETS—Enables youtospecifythesheetsfromaCreo
Parametric drawingthataretobeexportedtoPDF.Thevaluesare:
○PRINT_CURRENT_SHEET—Specifies thatonlythecurrentsheetwillbe
exportedtothePDFfile.
○PRINT_ALL_SHEETS—Specifies thatallthesheetswillbeexportedto
thePDFfile.Thisisthedefault.
○PRINT_SELECTED_SHEETS—Specifies thatsheetsofaspecifiedrange
willbeexportedtothePDFfile.Ifthisvalueisassigned,thenthevalueof
thestringproperty PRO_PDFOPT_SHEET_RANGE mustalsobeincluded.
•PRO_PDFOPT_LIGHT_DEFAULT—Enables youtosetthedefaultlighting
styleusedwhileexportingCreoParametric modelsintheU3Dformattoa
one-pagePDFfile.Thevaluesare:
○PRO_PDF_U3D_LIGHT_NONE—Specifies nolights.
○PRO_PDF_U3D_LIGHT_WHITE—Specifies whitelights.
○PRO_PDF_U3D_LIGHT_DAY—Specifies daylights.
○PRO_PDF_U3D_LIGHT_BRIGHT— Specifiesbrightlights.
○PRO_PDF_U3D_LIGHT_PRIMARY—Specifies primarycolorlights.
Interface:DataExchange 687○PRO_PDF_U3D_LIGHT_NIGHT—Specifies nightlights.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_PDF_U3D_LIGHT_BRIGHT— Specifiesbrightlights.
○PRO_PDF_U3D_LIGHT_PRIMARY—Specifies primarycolorlights.
Interface:DataExchange 687○PRO_PDF_U3D_LIGHT_NIGHT—Specifies nightlights.
○PRO_PDF_U3D_LIGHT_BLUE—Specifies bluelights.
○PRO_PDF_U3D_LIGHT_RED—Specifies redlights.
○PRO_PDF_U3D_LIGHT_CUBE—Specifies cubelights.
○PRO_PDF_U3D_LIGHT_CAD—Specifies CADoptimized lights.Thisis
thedefaultvalue.
○PRO_PDF_U3D_LIGHT_HEADLAMP—Specifies headlamplights.
•PRO_PDFOPT_RENDER_STYLE_DEFAULT—Enables youtosetthedefault
renderingstyleusedwhileexportingCreoParametric modelsintheU3D
formattoaone-pagePDFfile.Thevaluesare:
○PRO_PDF_U3D_RENDER_BOUNDING_BOX—Specifies boundingbox
rendering.
○PRO_PDF_U3D_RENDER_TRANSPARENT_BOUNDING_BOX—
Specifiestransparent boundingboxrendering.
○PRO_PDF_U3D_RENDER_TRANSPARENT_BOUNDING_BOX_
OUTLINE—Specifies transparent boundingboxoutlinerendering.
○PRO_PDF_U3D_RENDER_VERTICES—Specifies verticesrendering.
○PRO_PDF_U3D_RENDER_SHADED_VERTICES—Specifies shaded
verticesrendering.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOUTLINE—Specifies transparent boundingboxoutlinerendering.
○PRO_PDF_U3D_RENDER_VERTICES—Specifies verticesrendering.
○PRO_PDF_U3D_RENDER_SHADED_VERTICES—Specifies shaded
verticesrendering.
○PRO_PDF_U3D_RENDER_WIREFRAME—Specifies wireframe
rendering.
○PRO_PDF_U3D_RENDER_SHADED_WIREFRAME—Specifies shaded
wireframe rendering.
○PRO_PDF_U3D_RENDER_SOLID—Specifies solidrendering. Thisisthe
default.
○PRO_PDF_U3D_RENDER_TRANSPARENT—Specifies transparent
rendering.
○PRO_PDF_U3D_RENDER_SOLID_WIREFRAME—Specifies solid
wireframe rendering.
○PRO_PDF_U3D_RENDER_TRANSPARENT_WIREFRAME—Specifies
transparent wireframe rendering.
○PRO_PDF_U3D_RENDER_ILLUSTRATION—Specifies illustrated
rendering.
○PRO_PDF_U3D_RENDER_SOLID_OUTLINE—Specifies solidoutlined
rendering.
○PRO_PDF_U3D_RENDER_SHADED_ILLUSTRATION—Specifies
shadedillustrated rendering.
688 Creo®Parametric TOOLKIT User’sGuide○PRO_PDF_U3D_RENDER_HIDDEN_WIREFRAME—Specifies hidden
wireframe rendering.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_PDF_U3D_RENDER_SHADED_ILLUSTRATION—Specifies
shadedillustrated rendering.
688 Creo®Parametric TOOLKIT User’sGuide○PRO_PDF_U3D_RENDER_HIDDEN_WIREFRAME—Specifies hidden
wireframe rendering.
•PRO_PDFOPT_SIZE—Enables youtospecifythepagesizeoftheexported
PDFfile.ThevaluesarerestrictedtothevalueofProPlotPaperSize. If
thevalueisVARIABLE_SIZE_IN_MM_PLOT orVARIABLE_SIZE_PLOT,
thesizemustbespecifiedinthePRO_PDFOPT_HEIGHT andPRO_
PDFOPT_WIDTH properties.
•PRO_PDFOPT_ORIENTATION—Enables youtospecifytheorientation of
thepagesintheexportedPDFfile.Thevaluesare:
○PRO_ORIENTATION_PORTRAIT—Exports thepagesinportrait
orientation. Thisisthedefault.
○PRO_ORIENTATION_LANDSCAPE—Exports thepagesinlandscape
orientation.
Theoption PRO_PDFOPT_ORIENTATION isnotavailableiftheproperty
PRO_PDFOPT_SIZE issettoVARIABLE_SIZE_IN_MM_PLOT or
VARIABLE_SIZE_PLOT
•PRO_PDFOPT_VIEW_TO_EXPORT—Enables youtospecifytheviewor
viewstobeexportedtothePDFfile.Thevaluesare:
○PRO_PDF_VIEW_SELECT_CURRENT—Exports thecurrentgraphicalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVARIABLE_SIZE_PLOT
•PRO_PDFOPT_VIEW_TO_EXPORT—Enables youtospecifytheviewor
viewstobeexportedtothePDFfile.Thevaluesare:
○PRO_PDF_VIEW_SELECT_CURRENT—Exports thecurrentgraphical
areatoaone-pagePDFfile.
○PRO_PDF_VIEW_SELECT_BY_NAME—Exports theselectedviewtoa
one-pagePDFfilewiththeviewnameprintedatthebottomcenterofthe
viewport.Ifthisvalueisassigned,thenthevalueofthestringproperty
PRO_PDFOPT_SELECTED_VIEW mustalsobeincluded.
○PRO_PDF_VIEW_SELECT_ALL—Exports alltheviewstoamulti-page
PDFfile.Eachpagecontainsoneviewwiththeviewnamedisplayedat
thebottomcenteroftheviewport.
•PRO_PDFOPT_INCL_ANNOT—Enables youtospecifyifannotations must
beincludedwhenCreoParametric modelsareexportedasU3Dgraphicsina
PDFfile.Thevaluesare:
○PRO_PDF_INCLUDE_ANNOTATION—Includes annotations when
modelsareexported.
○PRO_PDF_EXCLUDE_ANNOTATION—Excludes annotations when
modelsareexported.Thisisthedefaultvalue.
Thefunction ProPDFoptionsBoolpropertySet() setsthevalueforaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelsareexported.
○PRO_PDF_EXCLUDE_ANNOTATION—Excludes annotations when
modelsareexported.Thisisthedefaultvalue.
Thefunction ProPDFoptionsBoolpropertySet() setsthevaluefora
booleanpropertyofthePDFoptionsstructure.Thetypesofexportoptionsareas
follows:
Interface:DataExchange 689•PRO_PDFOPT_SEARCHABLE_TEXT—If true,strokedtextissearchable.
Thedefaultvalueistrue.
•PRO_PDFOPT_LAUNCH_VIEWER—If true,launchestheAdobeAcrobat
Reader.Thedefaultvalueistrue.
•PRO_PDFOPT_HYPERLINKS—Sets Webhyperlinks tobeexportedaslabel
textonlyorsetstheunderlying hyperlinkURLsasactive.Thedefaultvalueis
true,specifying thatthehyperlinks areactive.
•PRO_PDFOPT_BOOKMARK_ZONES—If true,addsbookmarks tothePDF
showingzoomedinregionsorzonesinthedrawingsheet.ThezoneonanA4-
sizedrawingsheetisignored.
•PRO_PDFOPT_BOOKMARK_VIEWS—If true,addsbookmarks tothePDF
document showingzoomedinviewsonthedrawing.
•PRO_PDFOPT_BOOKMARK_SHEETS—If true,addsbookmarks tothePDF
document showingeachofthedrawingsheets.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_PDFOPT_BOOKMARK_VIEWS—If true,addsbookmarks tothePDF
document showingzoomedinviewsonthedrawing.
•PRO_PDFOPT_BOOKMARK_SHEETS—If true,addsbookmarks tothePDF
document showingeachofthedrawingsheets.
•PRO_PDFOPT_BOOKMARK_FLAG_NOTES—If true,addsbookmarks tothe
PDFdocument showingthetextoftheflagnote.
•PRO_PDFOPT_RESTRICT_OPERATIONS—If true,allowsyoutorestrictor
limitoperations onthePDFdocument usingthe
ProPDFRestrictOperationsMode modification flags.Thedefaultis
false.
•PRO_PDFOPT_ALLOW_PRINTING—If true,allowsyoutoprintthePDF
document. Thedefaultvalueistrue.
•PRO_PDFOPT_ALLOW_COPYING—If true,allowsyoutocopycontentfrom
thePDFdocument. Thedefaultvalueistrue.
•PRO_PDFOPT_ALLOW_ACCESSIBILITY—If true,enablesvisually-
impairedscreenreaderdevicestoextractdataindependent ofthevalueofthe
enum ProPDFRestrictOperationsMode. Thedefaultvalueistrue.
•PRO_PDFOPT_PENTABLE—If true,usesthestandardCreoParametric
pentabletocontrolthelineweight,linestyle,andlinecoloroftheexportedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxenum ProPDFRestrictOperationsMode. Thedefaultvalueistrue.
•PRO_PDFOPT_PENTABLE—If true,usesthestandardCreoParametric
pentabletocontrolthelineweight,linestyle,andlinecoloroftheexported
geometry.Thedefaultvalueisfalse.
•PRO_PDFOPT_PENTAB_FOR_TEXT—If true,thestandardCreoParametric
pentableisusedtocontrolthethicknessofthestrokedtextoftheexported
geometry.Iffalse,thestrokedtextwillbeexportedwiththeiroriginal
thicknessandthethicknessvaluedefinedbythepentablewillbeignored.The
defaultvalueistrue.
•PRO_PDFOPT_ADD_VIEWS—If true,allowsyoutoaddviewdefinitions to
theU3Dmodelfromafile.Thedefaultvalueistrue.
690 Creo®Parametric TOOLKIT User’sGuideThefunction ProPDFoptionsStringpropertySet() setsthevaluefora
stringpropertyofthePDFoptionsstructure.Thetypesofexportoptionsareas
follows:
•PRO_PDFOPT_TITLE—Specifies atitleforthePDFdocument.
•PRO_PDFOPT_AUTHOR—Specifies thenameofthepersongenerating the
PDFdocument.
•PRO_PDFOPT_SUBJECT—Specifies thesubjectofthePDFdocument.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollows:
•PRO_PDFOPT_TITLE—Specifies atitleforthePDFdocument.
•PRO_PDFOPT_AUTHOR—Specifies thenameofthepersongenerating the
PDFdocument.
•PRO_PDFOPT_SUBJECT—Specifies thesubjectofthePDFdocument.
•PRO_PDFOPT_KEYWORDS—Specifies relevantkeywordsinthePDF
document.
•PRO_PDFOPT_PASSWORD_TO_OPEN—Sets apasswordtoopenthePDF
document. IfthevalueisnotsetorNULL,anyonecanopenthePDFdocument
withoutapassword.
•PRO_PDFOPT_MASTER_PASSWORD—Sets apasswordtorestrictorlimit
thevieweroperations thatyoucanperformontheopenedPDFdocument. If
thevalueissettoNULL,youcanmakeanychangestothePDFdocument
regardless ofthesettingsofthePRO_PDFOPT_ALLOW_* modification flags.
•PRO_PDFOPT_SHEET_RANGE—Specifies therangeofsheetsinaCreo
Parametric drawingthataretobeexportedtoaPDFfile.Ifthispropertyis
assigned,thentheintegerproperty PRO_PDFOPT_SHEETS issettothevalue
PRINT_SELECTED_SHEETS.
•PRO_PDFOPT_SELECTED_VIEW—Sets theoption PRO_PDFOPT_VIEW_
TO_EXPORT tothevalue PRO_PDF_VIEW_SELECT_BY_NAME, ifthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRINT_SELECTED_SHEETS.
•PRO_PDFOPT_SELECTED_VIEW—Sets theoption PRO_PDFOPT_VIEW_
TO_EXPORT tothevalue PRO_PDF_VIEW_SELECT_BY_NAME, ifthe
corresponding viewissuccessfully found.
Thefunction ProPDFoptionsDoublepropertySet()sets thevaluefora
doublepropertyofthePDFoptionsstructure.Thetypesofexportoptionsareas
follows:
•PRO_PDFOPT_HEIGHT—Enables youtosettheheightforauser-defined
pagesizeoftheexportedPDFfile.Thedefaultvalueis0.0.Thisoptionis
availableonlyiftheenum PRO_PDFOPT_SIZE issettoVARIABLE_
SIZE_IN_MM_PLOT orVARIABLE_SIZE_PLOT.
•PRO_PDFOPT_WIDTH—Enables youtosetthewidthforauser-definedpage
sizeoftheexportedPDFfile.Thedefaultvalueis0.0.Thisoptionisavailable
onlyiftheenum PRO_PDFOPT_SIZE issettoVARIABLE_SIZE_IN_MM_
PLOTorVARIABLE_SIZE_PLOT.
•PRO_PDFOPT_TOP_MARGIN—Enables youtospecifythetopmarginofthe
viewport.Thedefaultvalueis0.0.
•PRO_PDFOPT_LEFT_MARGIN—Enables youtospecifytheleftmarginof
theviewport.Thedefaultvalueis0.0.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_PDFOPT_TOP_MARGIN—Enables youtospecifythetopmarginofthe
viewport.Thedefaultvalueis0.0.
•PRO_PDFOPT_LEFT_MARGIN—Enables youtospecifytheleftmarginof
theviewport.Thedefaultvalueis0.0.
Interface:DataExchange 691•PRO_PDFOPT_BACKGROUND_COLOR_RED—Enables youtospecifythe
defaultredbackground colorthatappearsbehindtheU3Dmodel.Youcanset
anyvaluewithintherangeof0.0through255.0.Thedefaultvalueis255.0.
•PRO_PDFOPT_BACKGROUND_COLOR_GREEN—Enables youtospecifythe
defaultgreenbackground colorthatappearsbehindtheU3Dmodel.Youcan
setanyvaluewithintherangeof0.0through255.0.Thedefaultvalueis255.0.
•PRO_PDFOPT_BACKGROUND_COLOR_BLUE—Enables youtospecifythe
defaultbluebackground colorthatappearsbehindtheU3Dmodel.Youcanset
anyvaluewithintherangeof0.0through255.0.Thedefaultvalueis255.0.
Thefunction ProPDFExport() exportsthefiletoaPDFdocument basedon
theexportsettingsdefinedinthePDFoptionsstructure.Specifythecomplete
nameandpath,includingtheextensionoftheoutputfile.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProPDFExport() exportsthefiletoaPDFdocument basedon
theexportsettingsdefinedinthePDFoptionsstructure.Specifythecomplete
nameandpath,includingtheextensionoftheoutputfile.
Usethefunction ProPDFWithProfileExport() torepeatedly export2D
drawingstothePDFformatwiththesameexportoptions.Theseoptionsare
storedinanXMLfilecalledaprofile.Youcanhaveseveralsuchprofiles.The
inputargumentstothisfunctionare:
•model—A drawingmodeltoexport.Thisdrawingmodelmustbeopenandthe
drawingwindowmustbeactive.
•output_file—The completepathtotheoutputfilewithextension.
•profile—The pathtotheprofiletobeused.
Usethefunction ProPDFoptionsFree() tofreethememorycontainedinthe
PDFoptionsstructure.
ImportingParameterFiles
Functions Introduced:
•ProInputFileRead()
Thefunction ProInputFileRead() importsfilesofseveraltypestocreate
datainCreoParametric. ThefiletypesaredeclaredinProUtil.h. Theimport
formatsandtheirtypeconstantsareaslistedinthefollowingtable:
ImportFormat CreoParametric TOOLKIT
FunctionsTypeConstantxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatainCreoParametric. ThefiletypesaredeclaredinProUtil.h. Theimport
formatsandtheirtypeconstantsareaslistedinthefollowingtable:
ImportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
Relationsfile ProInputFileRead() PRO_RELATION_FILE
Programfile PRO_PROGRAM_FILE
Configuration optionsfile PRO_CONFIG_FILE
Setupfile PRO_DWG_SETUP_FILE
Spoolfile PRO_SPOOL_FILE
CableParameters file PRO_CABLE_PARAMS_FILE
Connector Parameters file PRO_CONNECTOR_PARAMS_FILE
ModelTreeConfiguration PRO_ASSEM_TREE_CFG_FILE
692 Creo®Parametric TOOLKIT User’sGuideImportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
file
Wirelistfile PRO_WIRELIST_FILE
SLDVariantfile SLD_VARIANT_FILE
Theoption PRO_RELATION_FILE readsatextfilethatcontainsalistofallthe
modelrelationsandparameters relationsinexactlythesameformatastheCreo
Parametric userentersthem.
Usethefunction ProInputFileRead() withtheargument PRO_
CONNECTOR_PARAMS toidentifytheconnectors. Toaccessparameters onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric userentersthem.
Usethefunction ProInputFileRead() withtheargument PRO_
CONNECTOR_PARAMS toidentifytheconnectors. Toaccessparameters on
connectors andtheirentryportsusethefollowingarguments:
•arg1—Represents theintegerpointertoProIdTable. ProIdTableisan
integerarrayofcomponent identifiers.
•arg2—Represents theintegerpointertothenumberofcomponent identifiers.
Usethefunction ProInputFileRead() withtheargument PRO_CABLE_
PARAMS_FILE toreadcableparameters. Youneedtosetthefollowing
arguments:
•arg1—Represents aProSolid (partpointer).
•arg2—Represents thecablename.
Usethefunction ProInputFileRead() withtheargument PRO_
WIRELIST_FILE toreadfilesinMentorGraphicsLCABLEformat.This
functiondoesnotcreatewires,butprovidesparameters fromawirelistforuse
whencreatinginaharnessassemblyawirewiththesamenameasthatinthe
LCABLEfile.
Usethefunction ProInputFileRead() withtheargument PRO_
RELATION_FILE togettheindividual featurerelations.Toaccessfeature
relationsusethefollowingarguments:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLCABLEfile.
Usethefunction ProInputFileRead() withtheargument PRO_
RELATION_FILE togettheindividual featurerelations.Toaccessfeature
relationsusethefollowingarguments:
•arg2—Represents theindividual featurerelations.Itisanintegerpointertothe
featureidentifierthatgetstherelationscontainedinafeature.IfthisisNULL
yougettherelationscontainedinthemodel.
•arg3—Itisanintegerpointer.Ifitpointsto1,thentherelationsinthefile
mustbeaddedtothecurrentrelations,otherwisetherelationsinthefilemust
replacethecurrentrelations.
Usefunction ProInputFileRead() withargument PRO_SPOOL_FILE to
createnewspoolsorupdateexistingones.
Interface:DataExchange 693Importing2DModels
ImportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
STEPfile Pro2dImportMdlnameCreate(),
Pro2dImportAppend()PRO_STEP_FILE
IGES(2D)file PRO_IGES_FILE
DXFfile PRO_DXF_FILE
DWGfile PRO_DWG_FILE
CGMfile PRO_CGM_FILE
MEDUSA file PRO_MEDUSA_FILE
CreoElements/Direct
draftingfiles(.mi,
.bi,and.bdl)PRO_CCD_DRAWING_FILExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIGES(2D)file PRO_IGES_FILE
DXFfile PRO_DXF_FILE
DWGfile PRO_DWG_FILE
CGMfile PRO_CGM_FILE
MEDUSA file PRO_MEDUSA_FILE
CreoElements/Direct
draftingfiles(.mi,
.bi,and.bdl)PRO_CCD_DRAWING_FILE
IGES(2D)file ProInputFileRead() PRO_IGES_SECTION
Functions Introduced:
•Pro2dImportMdlnameCr eate()
•Pro2dImportAllSheets()
•Pro2dImportAppend()
•ProInputFileRead()
Thefunction Pro2dImportMdlnameCreate() importsinterfacefilesand
createsanewtwo-dimensional modelwiththespecifiedname.Thecreated
modelscanbedrawings,layouts,diagrams,drawingformats.Usetheargumentto
controlwhetherornottoimporttwo-dimensional views.
Ifyouwanttoimportallthedrawingsheetsforformatsthatsupportmultiple
drawingsheets,usethefunction Pro2dImportAllSheets(). Thefunction
importsinterfacefileswithallthedrawingsheets,andcreatesanewtwo-
dimensional model.ForthemodeltypePRO_MDL_DWGFORM, onlythefirsttwo
drawingsheetsareimported.
Thefunction Pro2dImportAppend() appendsatwo-dimensional modelto
thespecifiedmodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdimensional model.ForthemodeltypePRO_MDL_DWGFORM, onlythefirsttwo
drawingsheetsareimported.
Thefunction Pro2dImportAppend() appendsatwo-dimensional modelto
thespecifiedmodel.
YoucanimportandappendtheCreoElements/Direct draftingfilesusingthe
functions Pro2dImportMdlnameCreate() and
Pro2dImportAppend().
Usethefunction Pro2dImportMdlnameCreate() toimporttheCreo
Elements/Direct draftingfiletoaCreoParametric drawingfile.Thefollowing
dataisimportedfromthe.mi, .bi,and.bdlformatfiles:
•Basicentitiessuchaspoint,line,arc,fillet,circle,polygon,text,spline,b-
spline,centerline,symmetry line,referencetextline,andprojectedreference
points
•2Dconstruction geometrysuchaslines,arcs,circles,splines,andsoon
•Linear,angular,radial,diameter,ordinate,andleaderdimensions
694 Creo®Parametric TOOLKIT User’sGuide•Tolerancevaluesindimensions
•Leaderandnon-leader notes
•Annotation views
•Drawingsheets,symbol,views,andlayers
•Theattributesofcolor,layers,linetypes,andtextfontsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Leaderandnon-leader notes
•Annotation views
•Drawingsheets,symbol,views,andlayers
•Theattributesofcolor,layers,linetypes,andtextfonts
•Alltypesofhatchincludinguser-definedhatches
Youcansetthemappingoptionsinthemappingfilemi_import.pro. The
entityattributessuchascolor,linetype,textfonts,leaderarrowstylesandsoon
areimportedfromCreoElements/Direct draftingfilestoCreoParametric drawing
filesdepending onthesettingsinthemappingfile.
RefertotheCreoParametric DataExchange Helpformoreinformation on
importing Creo/Elements DirectdraftingfilesinCreoParametric drawingfile.
Usethefunction ProInputFileRead() withtheargument PRO_IGES_
SECTION toimporta2DIGESsectionintoasketch.
Importing3DModels
Thefunctionsdescribedinthissectionareusedtoimportfilesofdifferentformat
typesintoCreoParametric.
Functions Introduced:
•ProIntfimportSour ceTypeGet()
•ProIntfimportModelWi thOptionsMdlnameCr eate()
•ProIntfimportLayerFilter()
ImportFormat CreoParametric TOOLKIT
FunctionsTypeConstantxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProIntfimportSour ceTypeGet()
•ProIntfimportModelWi thOptionsMdlnameCr eate()
•ProIntfimportLayerFilter()
ImportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
ACISfile ProIntfimportModelWi
thOptionsMdlname
Create()PRO_INTF_IMPORT_ACIS
CADDSfile PRO_INTF_IMPORT_CADDS
CATIA(.model)file PRO_INTF_IMPORT_CATIA_
MODEL
CATIA(.session)file PRO_INTF_IMPORT_CATIA_
SESSION
DXFfile PRO_INTF_IMPORT_DXF
ICEMfile PRO_INTF_IMPORT_ICEM
IGESfile PRO_INTF_IMPORT_IGES
Neutralfile PRO_INTF_IMPORT_NEUTRAL
Parasolid-based CADDSsystem
filePRO_INTF_IMPORT_PARASOLID
POLTXTfile PRO_INTF_IMPORT_POLTXT
STEPfile PRO_INTF_IMPORT_STEP
VDAfile PRO_INTF_IMPORT_VDA
CATIA(.CATpart)file PRO_INTF_IMPORT_CATIA_
PART
Interface:DataExchange 695ImportFormat CreoParametric TOOLKIT
FunctionsTypeConstant
UGfile PRO_INTF_IMPORT_UG
CreoView(.oland.ed)files PRO_INTF_IMPORT_
PRODUCTVIEW
JTOpenformat PRO_INTF_IMPORT_JT
CATIAGraphical Representation
(CGR)formatPRO_INTF_IMPORT_CATIA_CGRxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctionsTypeConstant
UGfile PRO_INTF_IMPORT_UG
CreoView(.oland.ed)files PRO_INTF_IMPORT_
PRODUCTVIEW
JTOpenformat PRO_INTF_IMPORT_JT
CATIAGraphical Representation
(CGR)formatPRO_INTF_IMPORT_CATIA_CGR
SolidWorksPart(.sldprt)file PRO_INTF_IMPORT_SW_PART
SolidWorksAsembly(.sldasm)
filePRO_INTF_IMPORT_SW_ASSEM
InventorPart(.ipt)file PRO_INTF_IMPORT_INVENTOR_
PART
InventorAssembly (.iam)file PRO_INTF_IMPORT_INVENTOR_
ASSEM
STLfile PRO_INTF_IMPORT_STL
VRMLfile PRO_INTF_IMPORT_VRML
CATIA(.product) file PRO_INTF_IMPORT_CATIA_
PRODUCT
CreoElements/Direct file
(Assemblies andparts)
•bundle—.bdl
•modeling—soliddesigner .sda,
.sdp,.sdac, and.sdpc
•package—.pkgPRO_INTF_IMPORT_CC
SolidEdgePart(.par)file PRO_INTF_IMPORT_SEDGE_
PART
SolidEdgeAssembly (.asm)file PRO_INTF_IMPORT_SEDGE_
ASSEMBLY
SolidEdgeSheetmetal(.psm)file PRO_INTF_IMPORT_SEDGE_
SHEETMETAL_PART
3DManufacturing Format(3MF) PRO_INTF_IMPORT_3MF
Thefollowingdataisincludedduringtheimportofmodelsfromotherformatsto
CreoParametric:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSolidEdgeSheetmetal(.psm)file PRO_INTF_IMPORT_SEDGE_
SHEETMETAL_PART
3DManufacturing Format(3MF) PRO_INTF_IMPORT_3MF
Thefollowingdataisincludedduringtheimportofmodelsfromotherformatsto
CreoParametric:
•3DManufacturing Format(3MF)—From CreoParametric 5.0.1.0onward,you
canimport3MFfilescontaining partandassemblymodelstoCreoParametric.
Youcanimportpart-levelcolors,top-assembly parameters, andfacetgeometry
from3MFmodelstoCreoParametric.
696 Creo®Parametric TOOLKIT User’sGuide•AutodeskInventor—Y oucanimportAutodeskInventormodelstoCreo
Parametric. Theimportincludesbasicgeometrysuchassolids,quilts,and
surfacesfromAutodeskInventormodelstoCreoParametric. Youcanalso
importdatumfeatures,colors,attributes, andwirebodydatumcurvesfrom
Inventorpartandassemblymodels.
Note
Depending ontheAutodeskInventormodel,CreoParametric importsthe
modelasapartoranassembly.ToletCreoParametric decideifthe
AutodeskInventormodelmustbeimportedasapartorassembly,inthe
functionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Depending ontheAutodeskInventormodel,CreoParametric importsthe
modelasapartoranassembly.ToletCreoParametric decideifthe
AutodeskInventormodelmustbeimportedasapartorassembly,inthe
function
ProIntfimportModelWithOptionsMdlnameCreate(), you
mustspecifytheinputargument ProMdlType asPRO_MDL_UNUSED.
•JT—JTmodelsareimportedtoCreoParametric withtheircoloroverrides.
Components withcoloroverridesatanylevelinanassemblystructureare
supported.
FromCreoParametric 3.0onward,theProductManufacturing Information
(PMI)oftheannotations isimportedassemanticrepresentation fromJT
modelstoCreoParametric models.Thesemanticimportissupported onlyfor
3Dnotesandbasicdimensions. Alltheothertypesofannotations areimported
asgraphicalentities.Youcanimporttheplanarandzonalcross-sections of
partandassemblymodelsfromJTfilestoCreoParametric.
Note
FromCreoParametric 2.0M200onward,thelicense INTF_for_JT is
requiredtoimportaJTfiletoCreoParametric. Ifthelicenseisnot
availablethefunctionsreturntheerrorPRO_TK_NO_LICENSE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
FromCreoParametric 2.0M200onward,thelicense INTF_for_JT is
requiredtoimportaJTfiletoCreoParametric. Ifthelicenseisnot
availablethefunctionsreturntheerrorPRO_TK_NO_LICENSE.
•CreoElements/Direct—From CreoParametric 3.0onward,theProduct
Manufacturing Information (PMI)oftheannotations isimportedassemantic
representation fromCreoElements/Direct modelstoCreoParametric models.
Thesemanticimportissupported onlyfor3Dnotesandbasicdimensions. All
theothertypesofannotations areimportedasgraphicalentities.Youcanalso
importtheclippingfeaturesownedbytheCreoElements/Direct partand
assemblymodelsascross-sections inCreoParametric.
•CreoView—Youcanimportcolorsassignedtothecomponents ofassemblies
andtheirsub-assembly models,includingthecolorsofthesub-levelentities
suchasparts,quilts,andfacesfromCreoViewtoCreoParametric. CreoView
modelsareimportedtoCreoParametric withtheircoloroverrides.
Interface:DataExchange 697Components withcoloroverridesatanylevelinanassemblystructurearexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelsareimportedtoCreoParametric withtheircoloroverrides.
Interface:DataExchange 697Components withcoloroverridesatanylevelinanassemblystructureare
supported. Alongwithcomponents, coloroverridesarealsosupported for
component modelitems,suchas,faceandquilts.
•SolidWorks—Youcanimportbasicgeometrysuchassolids,quilts,and
surfacesfromSolidWorksmodelstoCreoParametric. Theimportincludes
datumfeatures,colors,attributes, andlayers.
Note
Depending ontheSolidWorksmodel,CreoParametric importsthemodel
asapartoranassembly.ToletCreoParametric decideiftheSolidWorks
modelmustbeimportedasapartorassembly,inthefunction
ProIntfimportModelWithOptionsMdlnameCreate(), you
mustspecifytheinputargument ProMdlType asPRO_MDL_UNUSED.
•SolidEdge—From CreoParametric 3.0M010onward,youcanimportSolid
EdgepartandassemblymodelstoCreoParametric. Theimportincludes
boundaryrepresentation geometry,datumfeatures,colors,andattributes.
FromCreoParametric 3.0M030onward,SolidEdgemodelsareimportedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEdgepartandassemblymodelstoCreoParametric. Theimportincludes
boundaryrepresentation geometry,datumfeatures,colors,andattributes.
FromCreoParametric 3.0M030onward,SolidEdgemodelsareimportedto
CreoParametric withtheircoloroverrides. Components withcoloroverrides
atanylevelinanassemblystructurearesupported.
FromCreoParametric 3.0M020onward,youcanalsoimportaSolidEdge
sheetmetalparttoCreoParametric.
Note
Depending ontheSolidEdgemodel,CreoParametric importsthemodel
asapartoranassembly.ToletCreoParametric decideiftheSolidEdge
modelmustbeimportedasapartorassembly,inthefunction
ProIntfimportModelWithOptionsMdlnameCreate(), you
mustspecifytheinputargument ProMdlType asPRO_MDL_UNUSED.
698 Creo®Parametric TOOLKIT User’sGuide•Unigraphics—Y oucanimportbasicgeometrysuchassolids,quilts,and
surfacesfromUnigraphics modelstoCreoParametric. Theimportincludes
datumfeatures,colors,attributes, andlayers.
Note
Depending ontheUnigraphics model,CreoParametric importsthemodelxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacesfromUnigraphics modelstoCreoParametric. Theimportincludes
datumfeatures,colors,attributes, andlayers.
Note
Depending ontheUnigraphics model,CreoParametric importsthemodel
asapartoranassembly.ToletCreoParametric decideiftheUnigraphics
modelmustbeimportedasapartorassembly,inthefunction
ProIntfimportModelWithOptionsMdlnameCreate(), you
mustspecifytheinputargument ProMdlType asPRO_MDL_UNUSED.
Note
RefertotheCreoParametric DataExchange Helpformoreinformation on
importing geometrytoCreoParametric. Refertothecompatibility matrixon
PTC.comforthesupported softwareversions.
Thefunction ProIntfimportSourceTypeGet() isautilitythatreturnsthe
typeofmodelthatcanbecreatedfromthegeometryfile.Thisfunctionisnot
applicable forallformats.Ifthisfunctionisnotvalidforageometric file,youwill
needtoknowthetypeofmodelyouwanttocreate(part,assembly,ordrawing).
Thefunction ProIntfimportModelWithOptionsMdlnameCreate()
importsobjectsofotherformatsusingaprofileandcreatesanewmodelorsetofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxneedtoknowthetypeofmodelyouwanttocreate(part,assembly,ordrawing).
Thefunction ProIntfimportModelWithOptionsMdlnameCreate()
importsobjectsofotherformatsusingaprofileandcreatesanewmodelorsetof
modelswiththespecifiednameandrepresentation. Oncetheprofileisset,it
remainsvalidfortheentiresessionunlessitisresetwithanotherprofile.The
inputargumentsofthisfunctionare:
•import_file—Full pathtofiletobeimported.
•profile—The importprofilepath.AnimportprofileisanXMLfilewiththe
extension .dip.Itcontainstheoptionsthatcontrolanimportoperation. It
alsocontainsalltheoptionsforthesupported 3Dimportformats.Refertothe
CreoParametric OnlineHelpformoreinformation oncreationand
modification ofimportprofiles.
Note
Theinputargument profileallowsyoutoincludetheimportofCreo
Elements/Direct containers, faceparts,wireparts,andemptyparts.
Interface:DataExchange 699•type—The typeoffiletobeimported.
Thefollowingformatsaresupported forimporting structureandgraphicslevel
ofdetails:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxInterface:DataExchange 699•type—The typeoffiletobeimported.
Thefollowingformatsaresupported forimporting structureandgraphicslevel
ofdetails:
○CreoView(i.e.ProductView,.ol,.ed,.edz,.pvs,.pvz)files(PRO_INTF_
IMPORT_PRODUCTVIEW)
○CATIAV5(CATPart(PRO_INTF_IMPORT_CATIA_PART, CATProduct
(PRO_INTF_IMPORT_CATIA_PRODUCT), CGR(PRO_INTF_
IMPORT_CATIA_CGR)) files
○SolidWorks(.sldprt(PRO_INTF_IMPORT_SW_PART), .sldasm(PRO_
INTF_IMPORT_SW_ASSEM)) files
○Unigraphics NX(PRO_INTF_IMPORT_UG) files
•create_type—The typeofmodeltocreate.Thiscouldbepart,assembly,or
drawing(forSTEPassociative drawings).
•reptype—The representation typetobeusedforimporting. Theenumerated
typeProImportRepType definestherepresentation typeandhasthe
followingvalues:
○PRO_IMPORTREP_MASTER—This isthedefaultimporttype.Itimports
thegeometric andthenongeometric data(annotations, datums,coordinate
systems,creationoffeaturesandsoon)oftheassemblyanddisplaysthe
fullrepresentation oftheassembly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthegeometric andthenongeometric data(annotations, datums,coordinate
systems,creationoffeaturesandsoon)oftheassemblyanddisplaysthe
fullrepresentation oftheassembly.
○PRO_IMPORTREP_STRUCTURE—Imports theproductstructureorthe
metadataoftheassemblies.
○PRO_IMPORTREP_GRAPHICS—Imports thedisplaydataofthe
assemblies.
Note
Theimportrepresentation types PRO_IMPORTREP_STRUCTURE and
PRO_IMPORTREP_GRAPHICS donotcreatemodelgeometryinCreo
Parametric, althoughtheyallowtheimportofthefully-functional
assemblies.
•new_model_name— Thenameofthenewtoplevelimportmodel.
•filter_func—Callback tothefunction ProIntfimportLayerFilter()
thatdetermines howtodisplayandmaplayersfromtheimportedmodel.If
thisisNULL,thedefaultlayerhandlingwilltakeplace.
•application_data—The application datatobepassedtothefilterfunction.Can
beNULL.
700 Creo®Parametric TOOLKIT User’sGuide•created_model—The handletothecreatedmodel(incaseofanassembly–the
handletothetopassembly). EvenifthisisNULL,themodeliscreated.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeNULL.
700 Creo®Parametric TOOLKIT User’sGuide•created_model—The handletothecreatedmodel(incaseofanassembly–the
handletothetopassembly). EvenifthisisNULL,themodeliscreated.
Note
•Whenimporting anassemblyusingthefunction
ProIntfimportModelWithOptionsMdlnameCreate() ifany
component oftheassemblyismissing,thenduringimportanempty
placeholder withthemissingcomponent nameiscreatedinthemodeltree.For
example,duringimportifthemissingcomponent isapart,anemptypartis
created.Similarly,ifthemissingcomponent isasubassembly ,thenanempty
subassembly iscreated.Placeholders formissingcomponents arecreatedonly
forthefollowingformats:
○CATIAV5
○CATIAV4
○Unigraphics
○CADDS5
○SolidWorks
○CreoView(.oland.ed)files
○JTOpenformat
•Thefunctions ProIntfimportModelCreate() and
ProIntfimportModelWithOptionsCreate() havebeendeprecated.
Thefunction
ProIntfimportModelWithOptionsMdlnameCreate() supersedes
thefunctions ProIntfimportModelCreate() and
ProIntfimportModelWithOptionsCreate(). ThedeprecatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction
ProIntfimportModelWithOptionsMdlnameCreate() supersedes
thefunctions ProIntfimportModelCreate() and
ProIntfimportModelWithOptionsCreate(). Thedeprecated
functionsmaynotbesupported infuturereleasesofCreoParametric Itis
recommended thatyourebuildyourapplications withthenewfunction.
Interface:DataExchange 701Usethefunction
ProIntfimportModelWithOptionsMdlnameCreate() insteadwith
profileasNULLandreptype(representation type)asPRO_IMPORTREP_
MASTER.
○FromCreoParametric 3.0M080onward,thefunction
ProIntfimportModelWithOptionsMdlnameCreate() imports
aJTfiletoCreoParametric onlyifthelicense INTF_for_JT is
available.IfthelicenseisnotavailablethefunctionsreturntheerrorPRO_
TK_NO_LICENSE.
○FromCreoParametric 2.0M200onward,thefunctions
ProIntfimportModelCreate(),
ProIntfimportModelWithOptionsCreate() and
ProIntfimportModelWithProfileCreate() importaJTfileto
CreoParametric onlyifthelicense INTF_for_JT isavailable.Ifthe
licenseisnotavailablethefunctionsreturntheerrorPRO_TK_NO_
LICENSE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProIntfimportModelWithProfileCreate() importaJTfileto
CreoParametric onlyifthelicense INTF_for_JT isavailable.Ifthe
licenseisnotavailablethefunctionsreturntheerrorPRO_TK_NO_
LICENSE.
Thefunction ProIntfimportModelWithProfileCreate() imports
objectsofotherformatsusingaprofileandcreatesanewmodelorsetofmodels
withthespecifiedname.
Thefunction ProIntfimportModelWithProfileCreate() hasbeen
deprecated. Usethefunction
ProIntfimportModelWithOptionsMdlnameCreate() insteadwith
PRO_IMPORTREP_MASTER astherepresentation type.
Thefunction ProIntfimportLayerFilter() isacallbackfunctionthat
allowsyourapplication todetermine thestatusofeachoftheimportedlayers.You
canmodifythelayerinformation usingthefunctionsdescribedinthenextsection.
ModifyingtheImportedLayers
Layershelpyouorganizemodelitemssothatyoucanperformoperations onthose
itemscollectively .Theseoperations primarilyincludewaysofshowingtheitems
inthemodel,suchasdisplaying orblanking,selecting,andsuppressing. Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxitemscollectively .Theseoperations primarilyincludewaysofshowingtheitems
inthemodel,suchasdisplaying orblanking,selecting,andsuppressing. The
methodsdescribedinthissectionmodifytheattributesoftheimportedlayers.
Functions Introduced:
•ProLayerfilterdataNameGet()
•ProLayerfilterdataNameSet()
•ProLayerfilterdataCountsGet()
•ProLayerfilterdataActionSet()
702 Creo®Parametric TOOLKIT User’sGuideImportedlayersareidentifiedbytheirnames.Thefunction
ProLayerfilterdataNameGet() returnsthenameofthelayerwhilethe
function ProLayerfilterdataNameSet() canbeusedtosetthenameof
thelayer.
Thefunction ProLayerfilterdataCountsGet() specifiesthefollowing:
•Numberofcurvesonthespecifiedlayer
•Numberofsurfacesonthespecifiedlayer
•Numberoftrimmedsurfacesonthespecifiedlayer
Thefunction ProLayerfilterdataActionSet() setsthedisplaystatusof
theimportedlayers.Youcansetthedisplaystatusofthelayerstooneofthe
following:
•Show—Display thespecifiedlayer.
•Blank—Make thespecifiedlayerblanked.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheimportedlayers.Youcansetthedisplaystatusofthelayerstooneofthe
following:
•Show—Display thespecifiedlayer.
•Blank—Make thespecifiedlayerblanked.
•Hidden—(Assembly modeonly)Makethespecifiedlayerhidden.
•Skip—Do notimporttheentitiesonthislayer.
•Ignore—Import onlyentitiesonthislayerbutnotthelayer
Example5:Importinga3DModelWithLayerFilterOptions
ThesamplecodeinUgInterfaceImport.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_interface shows
howtoimportfromanIGESfilewhilefilteringoutacertainlayertoberenamed
andblanked,usingthefilterfunction UserLayerFilter(). Italso
demonstrates howtousethefunction ProIntfimportSourceTypeGet() to
determine thetypeofthemodel.
ValidationScoreforImports
Functions Introduced:
•ProIntfimportV alidationscor eCalculate()
•ProIntfimportV alidationscor eGet()
•ProIntfimportV alidationpr eferencesLoad()
YoucanimportCATIAV5,NX,SolidWorks,SolidEdge, AutodeskInventor,and
CreoViewfileswithvariousproperties suchassurfacearea,volume,andthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProIntfimportV alidationpr eferencesLoad()
YoucanimportCATIAV5,NX,SolidWorks,SolidEdge, AutodeskInventor,and
CreoViewfileswithvariousproperties suchassurfacearea,volume,andthe
coordinates forthecenterofgravity(COG)intoCreoParametric. Afterimport,
CreoParametric hastocalculatethevalueoftheseproperties andreportifthere
areanydifferencesinthevalues.Alsogeneralfailuresduringimport,suchas,
failuretoimportanassemblycomponent orfailuretosolidifyapartmustbe
reported.
Interface:DataExchange 703Toreportthevaluedifferencesandfailures,thevalidation scoreforamodelis
created.Thevalidation scoreiscreatedforimported,regenerated, orupdated
models.Theproperties suchas,surfacearea,volume,andthecoordinates forthe
centerofgravity(COG)areconverted intogeometrical validation properties.
Assembly modelsincludethevalidation propertythatisrelatedtotheproduct
structure.CreoParametric comparesthevalidation properties oftheimported
modelswiththemassproperties ofthesourcemodelsandcomputesascoreofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructure.CreoParametric comparesthevalidation properties oftheimported
modelswiththemassproperties ofthesourcemodelsandcomputesascoreofthe
dataconversion. Thevalidation scoreofamodel PTC_VAL_IMP_SCORE isa
modelparameter.Thescoreiscreatedfortheparentassemblyanditsindividual
components andhasthefollowingvalues:
•PASS
•PASS_WITH_WARNINGS
•FAIL
Usethefunction ProIntfimportValidationscoreCalculate() to
calculatethevalidation scoreforthespecifiedmodel.Thefunction
ProIntfimportValidationscoreGet() retrievesthevalidation scorefor
thespecifiedmodel,wherethescoreisalreadycalculated usingthefunction
ProIntfimportValidationscoreCalculate().
Thevalidation scoredependsonthedataconversion fromsourcefilestoCreo
Parametric. Ifyouwantcertainparameters tobeignoredandpassed,youcanset
thesepreferences forvalidation dataintheconfig.val file.Usethefunction
ProIntfimportValidationpreferencesLoad() tospecifythe
config.val filethatmustbeusedtoloadthepreferences fordatavalidationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesepreferences forvalidation dataintheconfig.val file.Usethefunction
ProIntfimportValidationpreferencesLoad() tospecifythe
config.val filethatmustbeusedtoloadthepreferences fordatavalidation
whilecalculating validation score.
RefertotheCreoParametric DataExchange onlinehelp,formoreinformation.
704 Creo®Parametric TOOLKIT User’sGuide29
Interface:ImportingFeatures
CreatingImportFeaturesfromFiles..........................................................................706
CreatingImportFeaturesfromArbitraryGeometricData............................................709
RedefiningtheImportFeature..................................................................................722
ImportFeatureProperties........................................................................................723
ExtractingCreoParametricGeometryasInterfaceData.............................................725
AssociativeTopologyBusEnabledInterfaces............................................................726xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExtractingCreoParametricGeometryasInterfaceData.............................................725
AssociativeTopologyBusEnabledInterfaces............................................................726
AssociativeTopologyBusEnabledModelsandFeatures...........................................727
ThischapterdescribeshowtocreateimportfeaturesinCreoParametric.
Note
PTCstronglyrecommends thatyoucreateimportfeaturesinaCreo
Parametric sessionthathasonlythosemodelsopenwherethefeatureistobe
created.Itisalsorecommended nottofollowthecreationofimportfeatures
withcallstothefunctions ProMdlErase() orProMdlEraseAll() until
thecontrolreturnstoCreoParametric, sincethismayinterferewitherasing
temporary objectsattheendoftheimport.
705CreatingImportFeaturesfromFiles
TocreateimportfeaturesinCreoParametric fromexternalformatfilesusethe
functionsdescribedinthissection.
Functions Introduced:
•ProIntfDataSour ceInit()
•ProImportfeatCr eate()
•ProImportfeatur eWithPr ofileCreate ()
Superseded Functionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionsdescribedinthissection.
Functions Introduced:
•ProIntfDataSour ceInit()
•ProImportfeatCr eate()
•ProImportfeatur eWithPr ofileCreate ()
Superseded Functions
•ProImportfeatW ithPr ofileCr eate()
Thefunction ProIntfDataSourceInit() isusedtobuildtheinterfacedata
sourcerequiredbythefunctions ProImportfeatCreate() and
ProImportfeatureWithProfileCreate().
Theinputargumentsofthisfunctionare:
•intf_type—Specifies thetypeoffiletoimport.Thevalidformatfilesfrom
whichtheusercancreatetheimportfeaturesarespecifiedintheenumerated
datatypeProIntfType:
TypeConstant ImportFormat
PRO_INTF_NEUTRAL_FILE Neutralfile
PRO_INTF_IGES IGES3Dfile
PRO_INTF_STEP STEPfile
PRO_INTF_VDA VDAfile
PRO_INTF_SET SETfile
PRO_INTF_PDGS PDGSfile
PRO_INTF_ICEM ICEMfile
PRO_INTF_ACIS(*.sat) ACISformatfile
PRO_INTF_DXF DXFfile
PRO_INTF_CDRS CDRSfile
PRO_INTF_STL STLfile
PRO_INTF_VRML VRMLfile
PRO_INTF_PARASOLID Parasolid-based CADDSsystemfile
PRO_INTF_AI AIfile
PRO_INTF_CATIA_PART CATIA(.CATpart)file
PRO_INTF_UG UGfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_INTF_CDRS CDRSfile
PRO_INTF_STL STLfile
PRO_INTF_VRML VRMLfile
PRO_INTF_PARASOLID Parasolid-based CADDSsystemfile
PRO_INTF_AI AIfile
PRO_INTF_CATIA_PART CATIA(.CATpart)file
PRO_INTF_UG UGfile
PRO_INTF_PRODUCTVIEW CreoView(.ol)files
PRO_INTF_CATIA_PRODUCT CATIAV5Assembly file
PRO_INTF_CATIA_CGR CATIAGraphical Representation (CGR)format
PRO_INTF_JT JTOpenInterface
PRO_INTF_INVENTOR_PART InventorPart(.ipt)file
PRO_INTF_INVENTOR_ASM InventorAssembly (.iam)file
706 Creo®Parametric TOOLKIT User’sGuideTypeConstant ImportFormat
PRO_INTF_SE_PART SolidEdgepart(.par)file
PRO_INTF_SE_SHEETMETAL_PART SolidEdgeSheetmetal(.psm)file
PRO_INTF_3MF 3DManufacturing Format(3MF)
•p_sour ce—thenameofthefilewithextension. Thespecifiedformatfile
shouldexistinthecurrentworkingdirectoryorinapathspecifiedinthe
search_path configuration option.
ThisfunctionreturnsthehandletotheProIntfDataSource object,which
shouldbepassedtothefunctions ProImportfeatCreate() and
ProImportfeatureWithProfileCreate().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsearch_path configuration option.
ThisfunctionreturnsthehandletotheProIntfDataSource object,which
shouldbepassedtothefunctions ProImportfeatCreate() and
ProImportfeatureWithProfileCreate().
Thefunction ProImportfeatCreate() isusedtocreateanewimport
featureintheCreoParametric solidmodel.Theinputargumentsofthisfunction
are:
•p_solid—Specifies thepartinwhichtheuserwantstocreatetheimport
feature.
•data_sour ce—Specifies apointertotheinterfacedatasource.Usethefunction
ProIntfDataSourceInit() togetthehandletothe
ProIntfDataSource object.
•p_csys—Specifiesthecoordinate systemofthepartwithwhichtheuser
wantstoaligntheimportfeature.IfthisisNULL,thefunctionusesthedefault
coordinate systemintheCreoParametric modelandtheimportfeaturewillbe
alignedwithrespecttothiscoordinate system.
•p_attributes—Specifies theattributesforthecreationofthenewimport
feature.PleaseseethesectionImportFeatureAttributes onpage721formore
information.
Note
FromCreoParametric 2.0M200onward,thefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•p_attributes—Specifies theattributesforthecreationofthenewimport
feature.PleaseseethesectionImportFeatureAttributes onpage721formore
information.
Note
FromCreoParametric 2.0M200onward,thefunction
ProImportfeatCreate() importsaJTfiletoCreoParametric only
ifthelicense INTF_for_JT isavailable.Ifthelicenseisnotavailable
thefunctionreturnstheerrorPRO_TK_NO_LICENSE.
Thefunction ProImportfeatCreate() returnstheProFeature handlefor
thecreatedimportfeature.
InCreoParametric 7.0.0.0andlater,thefunction
ProImportfeatWithProfileCreate() isdeprecated. Usethefunction
ProImportfeatureWithProfileCreate() instead.
Interface:Importing Features 707Thefunction ProImportfeatureWithProfileCreate() isusedtocreate
anewimportfeatureintheCreoParametric solidmodel.Theinputarguments
follow:
•p_solid—Pointer tothesolidpart.Assembly caseisnotsupported.
•data_sour ce—Source ofdatatocreatetheimportfeature.
•p_csys—Pointer tothereferencecoordinate system.IfthisisNULL,the
functionusesthedefaultcoordinate system.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•data_sour ce—Source ofdatatocreatetheimportfeature.
•p_csys—Pointer tothereferencecoordinate system.IfthisisNULL,the
functionusesthedefaultcoordinate system.
•profile—Path totheimportfile.IfthisvalueisNULL,thefunction
ProImportfeatureWithProfileCreate() workssameas
ProImportfeatCreate().
Note
AnimportprofileisanXMLfilewiththeextension dip(DexInProfile)
andcontainstheoptionsthatcontrolanimportoperation. Itcontainsallthe
optionsforthesupported 3Dimportformats.RefertotheCreoParametric
Helpformoreinformation oncreationandmodification ofimportprofiles.
•cut_or_add—Set toPRO_B_TRUE forimportedgeometryrepresenting acut
orPRO_B_FALSE otherwise.
•body_use_opt—Generic bodyoptions.
•body_arr—ProArray ofbodies.SizeofProArray mustbe1.
Theoutputargument p_feat_handle isthehandletothenewimportfeature.
IfthisisNULL,thefeatureisstillcreated.
Note
•Thefunction ProImportfeatureWithProfileCreate()( cannot
createanimportfeatureusinganimportprofilefortheSTLandVRMLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIfthisisNULL,thefeatureisstillcreated.
Note
•Thefunction ProImportfeatureWithProfileCreate()( cannot
createanimportfeatureusinganimportprofilefortheSTLandVRML
formats.Onceaprofileisset,itremainsvalidfortheentiresessionunlessitis
resetwithanotherprofile.
•FromCreoParametric 2.0M200onward,thefunction
ProImportfeatureWithProfileCreate() importsaJTfiletoCreo
Parametric onlyifthelicense INTF_for_JT isavailable.Ifthelicenseisnot
availablethefunctionreturnstheerrorPRO_TK_NO_LICENSE.
Thefunction ProDatumcurveFromfileCreate() createsanewimport
featurecontaining adatumcurveintheCreoParametric model.Theinput
argumentsofthisfunctionare:
708 Creo®Parametric TOOLKIT User’sGuide•p_solid—Specifies thepartinwhichyoucreatetheimportfeature.
•full_file_name—Specifies thenameofthefilefromwhichyoucreatethe
importfeature.
•file_type—Specifies thefiletypetoimport.ItisgivenbytheProIntfType
enumerated type.Thefiletypessupported bythisfunctionareasfollows.
TypeConstant ImportFormatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxximportfeature.
•file_type—Specifies thefiletypetoimport.ItisgivenbytheProIntfType
enumerated type.Thefiletypessupported bythisfunctionareasfollows.
TypeConstant ImportFormat
PRO_INTF_NEUTRAL_FILE Neutralfile
PRO_INTF_IGES IGES3Dfile
PRO_INTF_STEP STEPfile
PRO_INTF_VDA VDAfile
PRO_INTF_ACIS ACISformatfile
PRO_INTF_DXF DXFfile
PRO_INTF_AI AIfile
PRO_INTF_CA TIA_PART CATIA(.CATpart)file
PRO_INTF_UG UGfile
PRO_INTF_JT JTOpenInterface
PRO_INTF_IBL IBLfile
PRO_INTF_PTS PTSfile
Forallotherfiletypesthatarenotsupported, thefunction
ProDatumcurveFromfileCreate() returns PRO_TK_INVALID_
TYPE.
•p_csys—Specifiesthecoordinate systemofthepartwithwhichyoualignthe
importfeatureIfthisisNULL,thefunctionusesthedefaultcoordinate system
andtheimportfeatureisalignedwithrespecttothiscoordinate system.
Note
FromCreoParametric 2.0M200onward,thefunction
ProDatumcurveFromfileCreate() createsanewimportJTfeature
onlyifthelicense INTF_for_JT isavailable.IfthelicenseisnotavailablexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
FromCreoParametric 2.0M200onward,thefunction
ProDatumcurveFromfileCreate() createsanewimportJTfeature
onlyifthelicense INTF_for_JT isavailable.Ifthelicenseisnotavailable
thefunctionreturnstheerrorPRO_TK_NO_LICENSE.
CreatingImportFeaturesfromArbitrary
GeometricData
YoucancreateanimportfeatureinaCreoParametric modelbybuildingthe
requiredentitydataintheCreoParametric TOOLKITapplication.
Interface:Importing Features 709Theadvantages ofimporting featuresfromaCreoParametric TOOLKIT
application are:
•Youcancreatevirtuallynon-parametric user-definedgeometryatadesired
location.Thisissometimes analternative toparametric featurecreation,which
canbemorecomplicated.
•Importfeaturesareregenerated morequicklythancorresponding groupsof
parametric features.
•YoucanintegrateCreoParametric withnon-CreoParametric supported
geometryfileformats.
Thefollowingsequenceofstepsisrequiredtocreatetheimportfeaturefrom
memory:
•Allocatetheinterfacedata.
•Addsurfaces,edges,quilts,anddatums.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometryfileformats.
Thefollowingsequenceofstepsisrequiredtocreatetheimportfeaturefrom
memory:
•Allocatetheinterfacedata.
•Addsurfaces,edges,quilts,anddatums.
•Createtheimportfeaturefromtheinterfacedata.
Thesestepsaredescribedindetailinthefollowingsections.
AllocatingProInterfacedata
FunctionIntroduced:
•ProIntfDataAlloc()
Usethefunction ProIntfDataAlloc() toallocatememoryfortheinterface
datastructure.
AddingSurfaces
FunctionIntroduced:
•ProSurfacedataAlloc()
Usethefunction ProSurfacedataAlloc() toallocatememoryforthe
surfacedata.Oncethesurfacedataisinitialized, itwillbeappendedtothe
interfacedata.
InitializingSurfaceData
Functions Introduced:
•ProSurfacedataInit()
•ProPlanedataInit()
•ProCylinderdataInit()
•ProConedataInit()
710 Creo®Parametric TOOLKIT User’sGuide•ProTorusdataInit()
•ProSrfr evdataInit()
•ProTabcyldataInit()
•ProRulsrfdataInit()
•ProSplinesrfdataInit()
•ProCylsplsrfdataInit()
•ProBsplinesrfdataInit()
•ProFilsrfdataInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSrfr evdataInit()
•ProTabcyldataInit()
•ProRulsrfdataInit()
•ProSplinesrfdataInit()
•ProCylsplsrfdataInit()
•ProBsplinesrfdataInit()
•ProFilsrfdataInit()
Usethefunction ProSurfacedataInit() toinitializethesurfacedata
structure.
Theinputargumentsofthisfunctionare:
•Surface_type—Specifies thetypeofsurfacetobecreated.Thetypesof
surfacesare:
○PRO_SRF_PLANE—Plane
○PRO_SRF_CYL—Cylinder
○PRO_SRF_CONE—Cone
○PRO_SRF_TORUS—T orus
○PRO_SRF_COONS—Coons Patch
○PRO_SRF_SPL—Spline Surface
○PRO_SRF_FIL—Fillet Surface
○PRO_SRF_RUL—Ruled Surface
○PRO_SRF_REV—General SurfaceofRevolution
○PRO_SRF_TABCYL—T abulatedCylinder
○PRO_SRF_B_SPL—B-spline surface
○PRO_SRF_FOREIGN—Foreign Surface
○PRO_SRF_CYL_SPL—Cylindrical SplineSurface
Thetypeofthesurfacedetermines thefunctiontobeusedtoinitializethe
surfacedatastructure.For example,ifthetypeofsurfacetobecreatedisPRO_
SRF_PLANE, thenthefunction ProPlanedataInit() shouldbeusedto
initializethesurfacedatastructurexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacedatastructure.For example,ifthetypeofsurfacetobecreatedisPRO_
SRF_PLANE, thenthefunction ProPlanedataInit() shouldbeusedto
initializethesurfacedatastructure
•surf_uv_min—Specifies theminimumuvextentsofthesurface.
•surf_uv_max—Specifies themaximum uvextentsofthesurface.
•surf_orient—Specifies theorientation ofthesurface.Bydefaultthevalueis
PRO_SURF_ORIENT_OUT
Interface:Importing Features 711•p_surf_shape—The datacontaining theinformation abouttheshapeofthe
surface.
•Surface_Id—Specifies auniqueidentifieroftheSurface.
Depending ontheshapeofthesurface,calloneofthefollowingfunctionsto
createthesurfacedatastructure ProSurfaceshapedata andassignitto
variable p_surf_shape offunction ProSurfacedataInit(). Ensurethat
thefunctionusedtocreatetheProSurfaceshapedata matcheswiththe
ProSrftype valueusedinProSurfacedataInit().
•ProPlanedataInit()
•ProCylinderdataInit()
•ProConedataInit()
•ProTorusdataInit()
•ProSrfrevdataInit()
•ProTabcyldataInit()
•ProRulsrfdataInit()
•ProSplinesrfdataInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProPlanedataInit()
•ProCylinderdataInit()
•ProConedataInit()
•ProTorusdataInit()
•ProSrfrevdataInit()
•ProTabcyldataInit()
•ProRulsrfdataInit()
•ProSplinesrfdataInit()
•ProCylsplsrfdataInit()
•ProBsplinesrfdataInit()
Note
Settheconfiguration option intf_in_keep_high_deg_bspl_srfs
toYEStopreservetheB-splinesurfacesreturnedby
ProBsplinesrfdataInit() intheProIntData datastructure.If
thisconfiguration optionisnotset,thesesurfacesareinterpreted asspline
surfaces.
•ProFilsrfdataInit()
RefertotheGeometry Representations onpage2240appendixformore
information onhowtousetheabovefunctions.
712 Creo®Parametric TOOLKIT User’sGuideNote
Thefollowingreturnvaluesforthefunctions
ProBsplinesrfdataInit(), ProRulsrfdataInit(),
ProSrfrevdataInit(), andProTabcyldataInit() shouldbe
treatedaswarnings:
PRO_TK_BSPL_UNSUITABLE_DEGREE
PRO_TK_BSPL_NON_STD_END_KNOTS
PRO_TK_BSPL_MULTI_INNER_KNOTS
TheyindicatethatthegeometryfinallyimportedinCreoParametric isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtreatedaswarnings:
PRO_TK_BSPL_UNSUITABLE_DEGREE
PRO_TK_BSPL_NON_STD_END_KNOTS
PRO_TK_BSPL_MULTI_INNER_KNOTS
TheyindicatethatthegeometryfinallyimportedinCreoParametric is
differentfromthegeometryinitiallysuppliedtotheabovefunctions. The
geometryisnotrejectedbythefunctionsandisusedtogeneratethe
ProSurfaceshapedata datastructure.
Surfacedata Contours
Thegeometric representation ofthesurfacecreatedaboveisunbounded, thatis
thenatureofthesurfaceboundaries isdetermined byitsarrayofcontours.
Multiplecontourscanbeusedforsurfaceswithinternalvoids.
Functions Introduced:
•ProSurfacedataContourArraySet()
•ProContourdataAlloc()
•ProContourdataInit()
•ProContourdataEdgeIdArraySet()
Usethefunction ProSurfacedataContourArraySet() tosetanarrayof
contoursonthesurface.
Theinputargumentsofthisfunctionare:
•p_surf_data—Specifies thesurfacedatatowhichthearrayofcontourdatais
tobeset.
•contour_array—Specifies anarrayofcontoursonthesurface.The
ProContourdata handlecanbeobtainedbyusingthefollowingfunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•p_surf_data—Specifies thesurfacedatatowhichthearrayofcontourdatais
tobeset.
•contour_array—Specifies anarrayofcontoursonthesurface.The
ProContourdata handlecanbeobtainedbyusingthefollowingfunctions
insequence:
ProContourdataAlloc()
ProContourdataInit()
ProContourdataEdgeIdArraySet()
Interface:Importing Features 713Usethefunction ProContourdataAlloc() toallocatememorytothe
contourdatastructure.
Usethefunction ProContourdataInit() toinitializethecontourdata
structure.Theinputargumentofthisfunctionis:
•contour_trav —Specifiesthecontourtraversal.Thisparameter hasthe
followingvalues:
○PRO_CONTOUR_TRAV_INTERNAL—Internal Contour
○PRO_CONTOUR_TRAV_EXTERNAL—External Contour
Thefunctionreturnstheallocatedcontourdatastructure.
Usethefunction ProContourdataEdgeIdArraySet() tosetidentifiers to
anarrayofedges,thatformtheboundaryofthespecifiedsurface.
Theinputargumentsofthisfunctionare:
•p_contour_data—Specifies thecontourdatatowhichthearrayofedge
identifiers havetobeset.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanarrayofedges,thatformtheboundaryofthespecifiedsurface.
Theinputargumentsofthisfunctionare:
•p_contour_data—Specifies thecontourdatatowhichthearrayofedge
identifiers havetobeset.
•edge_id_arr—Specifies thearrayofedgeidentifiers. Theseidentifiers mustbe
sameasthoseprovidedintheProEdgedata structuresdescribedbelow.
Forexample,ifthesurfaceisboundedby4edges,thentheidentifierofeach
edgeshouldbeassignedtoeachelementofanarrayofintegersofsize4.
Appending theSurfaceDatatotheInterfaceData
FunctionIntroduced:
•ProIntfDataSurfaceAppend()
Usethefunction ProIntfDataSurfaceAppend() toappendthesurface
dataintotheinterfacedata.
Repeatthesequenceforeachsurfacedesiredintheimportfeature.
AddingEdges
Functions Introduced:
•ProEdgedataAlloc()
•ProEdgedataInit()
•ProCurvedataAlloc()
•ProLinedataInit()
•ProArcdataInit()
•ProEllipsedataInit()
714 Creo®Parametric TOOLKIT User’sGuide•ProSplinedataInit()
•ProBsplinedataInit()
Iftheimportfeaturetobecreatedrequiresanyedgeinformation, thencallthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProArcdataInit()
•ProEllipsedataInit()
714 Creo®Parametric TOOLKIT User’sGuide•ProSplinedataInit()
•ProBsplinedataInit()
Iftheimportfeaturetobecreatedrequiresanyedgeinformation, thencallthe
functionslistaboveinsequence,elseskipthissection.
Usethefunction ProEdgedataAlloc() toallocatememoryfortheedgedata
structure.Afterinitialization, thisdatawillbeappendedtotheinterfacedata.
Usethefunction ProEdgedataInit() toinitializetheedgedatastructure.
Thefollowingaretheinputarguments:
•edge_id—Specifiesauniqueidentifieroftheedge.
•edge_surf_ids—Specifies theIDofthesurfacesoneithersideoftheedge.
•edge_dir ections—Specifies theedgedirections onthesurface.
•edge_uv_point_arr —Specifies anarrayofUVpointsonthesurfaces.The
valuecanbeNULL.
•p_edge_uv_curve_data—Specifies theedgeUVcurvesonthesurfaces.The
valuecanbeNULL.
•p_edge_curve_data—Specifies thecurvedatahandleintheformofthe
ProCurvedata structure.Thisdatahandleisreturnedbythefunctions
ProLinedataInit(), ProArcdataInit(),xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluecanbeNULL.
•p_edge_curve_data—Specifies thecurvedatahandleintheformofthe
ProCurvedata structure.Thisdatahandleisreturnedbythefunctions
ProLinedataInit(), ProArcdataInit(),
ProEllipsedataInit(), ProSplinedataInit(), or
ProBsplinedataInit(). Usethefunction ProCurvedataFree to
freetheProCurvedata datahandle.
Note
PTCrecommends thatyousplittheclosedloopedgeintotwoormore
continuous edgeswhilespecifying theinputstothefunction
ProEdgedataInit(). Forexample,tocreateacircularedge,instead
ofspecifying thestartangleas0andtheendangleas360,splitthecircular
edgeinto2ormoreedges.Theangularmeasurements ofthesplitedges
couldbe0to30forthefirstsplitand30to360forthesecondsplit.The
function ProEdgedataInit() mustbecalledforeachsplit.
Usethefunction ProCurvedataAlloc() toallocatememoryforthecurve
datastructure.Thecurvedatastructuredefinestheedgeprofile.
Depending onthetypeofcurvespecifiedfortheedge,calloneofthefollowing
functionstoinitializethecurvedata.
•ProLinedataInit()
•ProArcdataInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatastructure.Thecurvedatastructuredefinestheedgeprofile.
Depending onthetypeofcurvespecifiedfortheedge,calloneofthefollowing
functionstoinitializethecurvedata.
•ProLinedataInit()
•ProArcdataInit()
Interface:Importing Features 715•ProEllipsedataInit()
•ProSplinedataInit()
•ProBsplinedataInit()
Usethefunction ProLinedataInit() toinitializethelinedatastructure.
Specifythestartofthelineandendofthelineasinputsofthisfunction.
Usethefunction ProArcdataInit() toinitializeanarcdatastructure.The
inputargumentsofthisfunctionare:
•vector1—Specifies thefirstvectorofthearccoordinate system.
•vector2—Specifies thesecondvectorofthearccoordinate system.
•origin—Specifies thecenterofthearccoordinate system
•start_angle—Specifies thestartingangle(inradians)ofthearc.
•end_angle —Specifies theendangle(inradians)ofthearc.
•radius—Specifies theradiusofthearc.
Usethefunction ProEllipsedataInit() toinitializeanellipsedata
structure.Theinputarguments ofthisfunctionare:
•center—Specifies thecenteroftheellipse.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•radius—Specifies theradiusofthearc.
Usethefunction ProEllipsedataInit() toinitializeanellipsedata
structure.Theinputarguments ofthisfunctionare:
•center—Specifies thecenteroftheellipse.
•x_axis—Specifies thefirst(x)axisvectoroftheellipse.
•plane_normal—Specifies theaxisvectorthatisnormaltotheplaneofthe
ellipse.
•x_radius—Specifies theradiusoftheellipseinthedirectionof‘x’axis.
•y_radius—Specifies theradiusoftheellipseinthedirectionof‘y’axis.The
‘y’axiscanbefoundasavectorproductoftheplane_normal onx_
axis.
•start_ang—Specifies thestartingangle(inradians)oftheellipse.
•end_ang—Specifies theendangle(inradians)oftheellipse.
Usethefunction ProSplinedataInit() toinitializethesplinedatastructure.
Theinputargumentsofthisfunctionare:
•par_arr—Specifies anarrayofsplineparameters
•pnt_arr—Specifies anarrayofsplineinterpolant points
•tan_arr—Specifies anarrayoftangentvectorsateachpoint
•num_points—Specifies thesizeforallthearrays
Usethefunction ProBsplinedataInit() toinitializetheB-splinedataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•tan_arr—Specifies anarrayoftangentvectorsateachpoint
•num_points—Specifies thesizeforallthearrays
Usethefunction ProBsplinedataInit() toinitializetheB-splinedata
structure.Theinputarguments ofthisfunctionare:
•degree—Specifies thedegreeofthebasisfunction.
•params—Specifies anarrayofknotsontheparameter line.
716 Creo®Parametric TOOLKIT User’sGuide•weights—InthecaseofrationalB-splines, itspecifiesanarrayofthesame
dimension asthearrayofc_pnts.Else,thevalueofthisargumentisNULL.
•c_pnts—Specifies anarrayofknotsoncontrolpoints.
•num_knots—Specifies thesizeoftheparamsarray.
•num_c_points—Specifies thesizeofthec_pntsandthesizeofweightsifitis
notNULL.
Note
Although ProBsplinedataInit() returnsB-splinecurves,these
curvesareinterpreted assplinecurvesintheProIntData datastructure
usedbythefunction ProImportfeatCreate() whilecreatingthe
importfeature.
Thevalues PRO_TK_BSPL_UNSUITABLE_DEGREE andPRO_TK_
BSPL_NON_STD_END_KNOTS returnedby
ProBsplinedataInit() shouldbetreatedaswarnings.Thesevaluesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxximportfeature.
Thevalues PRO_TK_BSPL_UNSUITABLE_DEGREE andPRO_TK_
BSPL_NON_STD_END_KNOTS returnedby
ProBsplinedataInit() shouldbetreatedaswarnings.Thesevalues
indicatethatthegeometryfinallyimportedinCreoParametric isdifferent
fromthegeometryinitiallysuppliedtothefunction.Thegeometryisnot
rejectedbyProBsplinedataInit() andisusedtogeneratethe
ProCurvedata datastructure.
Appending theEdgeDatatotheInterfaceData
FunctionIntroduced:
•ProIntfDataEdgeAppend()
Usethefunction ProIntfDataEdgeAppend() toappendtheedgedatainto
theinterfacedata.
Repeatthesequenceforeachedgerequiredbytheimportfeature.
AddingQuilts
Functions Introduced:
•ProQuiltdataAlloc()
•ProQuiltdataInit()
•ProQuiltdataSurfArraySet()
•ProIntfDataQuiltAppend()
Usethefunction ProQuiltdataAlloc() toallocatememorytothequiltdata
structure.
Interface:Importing Features 717Usethefunction ProQuiltdataInit() toassigntheuserdefinedidentityto
thequiltdatastructure.Specifyauniqueidentityforthequiltastheinputxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructure.
Interface:Importing Features 717Usethefunction ProQuiltdataInit() toassigntheuserdefinedidentityto
thequiltdatastructure.Specifyauniqueidentityforthequiltastheinput
argument.Thefunctionreturnsthehandletothequiltdatastructure.
Usethefunction ProQuiltdataSurfArraySet() todefineanarrayof
surfacesasaquilt.Theinputargumentsofthisfunctionare:
•p_quilt_data—Specifies ahandletothequiltdatatowhichwewanttoassign
thesetofsurfaces.
•arr_p_surf—Specifies anarrayofsurfacesthatwillbedefinedasaquilt.
Usethefunction ProIntfDataQuiltAppend() toappendthequiltdatato
theinterfacedata.Theinputarguments ofthisfunctionare:
•p_intfdata —Specifies ahandletotheinterfacedatatowhichyouwantto
appendthequiltdata.
•p_quiltdata —Handletothequiltdata.
Repeatthesequenceforeachquiltrequiredintheimportfeature.
AddingDatums
Functions Introduced:
•ProDatumdataAlloc()
Usethefunction ProDatumdataAlloc() toallocatememorytothedatum
datastructure.
InitializingDatums
•ProDatumdataInit()
•ProDatumCsysdataInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAddingDatums
Functions Introduced:
•ProDatumdataAlloc()
Usethefunction ProDatumdataAlloc() toallocatememorytothedatum
datastructure.
InitializingDatums
•ProDatumdataInit()
•ProDatumCsysdataInit()
•ProDatumCurvedataInit()
•ProDatumPlanedataInit()
•ProDatumdataMemoryFre e()
Usethefunction ProDatumdataInit() toinitializethedatumdatastructure.
Theinputargumentsofthisfunctionare:
•datum_id—Specifies auniqueidentifierofthedatum.
•datum_type—Specifies thedatumtype.Thetypesofdatumsare:
○PRO_CSYS
○PRO_CURVE
○PRO_DATUM_PLANE
•datum_name—Specifies thenametobeassignedtothedatum.
718 Creo®Parametric TOOLKIT User’sGuide•p_datum_ob j—Thedatumobjectthatcontainsthegeometrical information
aboutthedatum.Depending onthetypeofthedatumtobecreated,oneofthe
followingfunctionsmustbeusedtocreatetheProDatumobject data
structure.
○ProDatumCsysdataInit()
○ProDatumCurvedataInit()
○ProDatumPlanedataInit()
Note
Thevalue PRO_TK_BSPL_MULTI_INNER_KNOTS returnedby
ProDatumCurvedataInit() shouldbetreatedasawarning.Thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructure.
○ProDatumCsysdataInit()
○ProDatumCurvedataInit()
○ProDatumPlanedataInit()
Note
Thevalue PRO_TK_BSPL_MULTI_INNER_KNOTS returnedby
ProDatumCurvedataInit() shouldbetreatedasawarning.This
valueindicatesthatthegeometryfinallyimportedinCreoParametric is
differentfromthegeometryinitiallysuppliedtothefunction.The
geometryisnotrejectedbyProDatumCurvedataInit() andisused
togeneratetheProCurvedata datastructure.
Usethefunction ProDatumdataMemoryFree() tofreethetop-levelmemory
usedbythedatumdatastructure.
Appending theDatumDatatotheInterfaceData
Usethefunction ProIntfDataDatumAppend() toappendthedatumdatato
theinterfacedatarequiredtocreatetheimportfeature.Theinputargumentsare:
•p_intfdata—Specifies theinterfacedatatowhichthedatumdatamustbe
appended.
•p_datumdata —Specifies ahandletothedatumdataobtainedfromthe
function ProDatumdataInit().
•Repeatthesequenceforeachdatummemberrequiredtobeintheimport
feature.
CreatingFeaturesfromtheInterfaceData
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction ProDatumdataInit().
•Repeatthesequenceforeachdatummemberrequiredtobeintheimport
feature.
CreatingFeaturesfromtheInterfaceData
Functions Introduced:
•ProIntfDataSour ceInit()
•ProImportfeatCr eate()
•ProIntfDataFr ee()
Interface:Importing Features 719Usethefunction ProIntfDataSourceInit() tobuildtheinterfacedata
sourcerequiredbythefunctions ProImportfeatCreate() and
ProImportfeatureWithProfileCreate(). Theinputargumentsofthis
functionare:
•intf_type—Specifies thetypeoftheinterface.Sincetheuserbuildsallthedata
requiredbytheinterface,thevalueshouldbePRO_INTF_NEUTRAL.
•p_sour ce—Specifies thehandletotheinterfacedatasource.
Thefunctionreturnsthehandle ProIntfDataSource, whichmustbepassed
tothefunctions ProImportfeatCreate() and
ProImportfeatureWithProfileCreate().
Usethefunction ProImportfeatCreate() tocreatetheimportfeatureinthe
CreoParametric solidmodel.Theinputargumentsofthisfunctionare:
•p_solid—Specifies thepartorassemblyinwhichtheuserwantstocreatethe
importfeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric solidmodel.Theinputargumentsofthisfunctionare:
•p_solid—Specifies thepartorassemblyinwhichtheuserwantstocreatethe
importfeature.
•data_sour ce—Specifies apointertotheinterfacedatasource.Usethefunction
ProIntfDataSourceInit() togetthehandletotheinterfacedata
source.
•p_csys—Specifies theco-ordinate systemofthepartwithwhichyouwantto
aligntheimportfeature.IfthisisNULL,thefunctionusesthedefault
coordinate systemintheCreoParametric modelandtheimportfeaturewillbe
alignedwithrespecttothatcoordinate system.
•p_attributes—Specifies theattributesforthecreationofthenewimport
feature.RefertothesectionImportFeatureAttributes onpage721formore
information.
Thefunction ProImportfeatCreate() returnstheProFeature handlefor
thecreatedimportfeature.
IfyourCreoParametric TOOLKITapplication isbuiltusingCreoParametric 6.0
andyouhavethefunction ProImportfeatCreate() inyourapplication,
thenthesameapplication worksasitisinCreoParametric 7.0.0.0.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIfyourCreoParametric TOOLKITapplication isbuiltusingCreoParametric 6.0
andyouhavethefunction ProImportfeatCreate() inyourapplication,
thenthesameapplication worksasitisinCreoParametric 7.0.0.0.
Note
Ifyouareplanningtorecompile yourCreoParametric TOOLKITinCreo
Parametric 7.0.0.0,youmustsetthedefaultvalueoftheenumerated datatype
body_use_opt toPRO_IMPORT_BODY_USE_DEFAULT, otherwisethe
behaviorofCreoParametric maybeunpredictable.
720 Creo®Parametric TOOLKIT User’sGuideThefunction ProImportfeatureWithProfileCreate() isusedtocreate
anewimportfeatureintheCreoParametric solidmodel.Thisfunctiontakesthe
sameinputargumentsasthefunction ProImportfeatCreate(), exceptfor
theargument profilethatspecifiesthepathtotheimportprofileused.Animport
profileisanXMLfilewiththeextension .dip(DexInProfile)andcontainsthe
optionsthatcontrolanimportoperation. Itcontainsalltheoptionsforthe
supported 3Dimportformats.RefertotheCreoParametric OnlineHelpformore
information oncreationandmodification ofimportprofiles.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoptionsthatcontrolanimportoperation. Itcontainsalltheoptionsforthe
supported 3Dimportformats.RefertotheCreoParametric OnlineHelpformore
information oncreationandmodification ofimportprofiles.
Note
Thefunction ProImportfeatureWithProfileCreate() cannot
createanimportfeatureusinganimportprofilefortheSTLandVRML
formats.
Usethefunction ProIntfDataFree() toreleasethememoryoccupiedbythe
interfacedata.
ImportFeatureAttributes
Attributes definetheactiontobetakenwhencreatingtheimportfeature.
Following arethedefinedattributes:
•attempt_make_solid—Specifies whethertheimportfeatureistobe
createdasasolidorasurfacetype.Setthevalueto1tocreateanimport
featureofsolidtype.Setitto0tocreateasurfacetypeofimportfeature.
Note
Iftheimportfeatureisanopensurface,setting attempt_make_solid
to1doesnotmaketheimportfeatureofsolidtype.
•cut_or_add—Specifies whetherthesolidtypeofimportfeatureistobe
createdasacutoraprotrusion. Thisargumentisvalidonlyifattempt_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxto1doesnotmaketheimportfeatureofsolidtype.
•cut_or_add—Specifies whetherthesolidtypeofimportfeatureistobe
createdasacutoraprotrusion. Thisargumentisvalidonlyifattempt_
make_solid issetto1.Setthevalueto1tocutthesolidimportfeature
fromtheintersecting solid.Setitto0tocreateitasaprotrusion.
Note
When attempt_make_solid issetto0,thevalueassignedtocut_
or_addisnotconsidered.
Interface:Importing Features 721•join_surfaces—Specifies whethertheimportfeatureiscreatedasa
singlequilt(joinedsurface)orseparatesurfaces(asitwasintheoriginalfile)
ifitisofsurfacetype.Thisargumentisvalidonlyifattempt_make_
solidissetto0.Ifthevalueissetto1,allsurfacesthatcanbejoinedare
joinedtoformasinglequilt.
•add_bodies— Createsthesamebodystructureasispresentinthesource
file.
•body_use_opt—Specifies thebodyoptionsyoucanusewhileimporting a
featureandisdefinedbytheenumerated datatype
ProImportBodyUseOpts. Thevalidvaluesareasfollows:
○PRO_IMPORT_BODY_USE_DEFAULT—Imports featureinthedefault
body.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatureandisdefinedbytheenumerated datatype
ProImportBodyUseOpts. Thevalidvaluesareasfollows:
○PRO_IMPORT_BODY_USE_DEFAULT—Imports featureinthedefault
body.
○PRO_IMPORT_BODY_USE_NEW—Imports featureinanewbody.
○PRO_IMPORT_BODY_USE_ALL—Currently notsupported.
○PRO_IMPORT_BODY_USE_SELECTED—Imports featureinaselected
body.
•body_arr—ProArray ofbodiestobeselected.Bydefault,thesizeis1.
SetthisvalueasNULLifyoudonotwanttouseanybodiesintheimport
operation.
RedefiningtheImportFeature
Usethefollowingfunctionsinsequencetoredefinetheimportfeature.
Functions Introduced:
•ProImportfeatRedefSourc eInit()
•ProImportfeatRedefine()
Usethefunction ProImportfeatRedefSourceInit() toinitializethe
redefinesource.CurrentlyCreoParametric TOOLKITusersmay
•Redefinetheattributesofanyimportfeature.
Note
Whenredefining theattributesoftheimportfeature,CreoParametric will
notusethevalueoftheattribute join_surfaces, becausethisattribute
isvalidonlyforimportfeaturecreation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Whenredefining theattributesoftheimportfeature,CreoParametric will
notusethevalueoftheattribute join_surfaces, becausethisattribute
isvalidonlyforimportfeaturecreation.
•Redefinethegeometryofanimportfeaturecreatedfromageometric file.
Importfeaturescreatedfrommemorymaynotberedefined.
722 Creo®Parametric TOOLKIT User’sGuideTheinputargumentsare:
•operation—Specifies thetypeofoperationtousewhenredefining theimport
feature.
•p_sour ce—Specifies thehandletothenewinterfacedataorthenewattributes
structure.
Thefunction ProImportfeatRedefSourceInit() returnsthehandletoa
structure,thatispassedasaninputargumenttothefunction
ProImportfeatRedefine().
Usethefunction ProImportfeatRedefine() toredefinetheimportfeature.
Theinputargumentsare:
•p_feat_handle—Specifies thehandlefortheimportfeaturetoberedefined.
•p_sour ce—Thehandletobeusedforredefinition fromthefunction
ProImportfeatRedefSourceInit().
Note
ProImportfeatRedefine() doesnotsupportATB-enabled features.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•p_sour ce—Thehandletobeusedforredefinition fromthefunction
ProImportfeatRedefSourceInit().
Note
ProImportfeatRedefine() doesnotsupportATB-enabled features.
Itreturns PRO_TK_BAD_CONTEXT whileaccessingsuchfeatures.
ImportFeatureProperties
Functions Introduced:
•ProImportfeatIdArrayCre ate()
•ProImportfeatIdArrayMapCount()
•ProImportfeatIdArrayMapGet()
•ProImportfeatIdArrayFr ee()
•ProImportfeatUserIdT oItemId()
•ProImportfeatItemIdT oUserId()
•ProImportfeatDataGet()
Usethefunction ProImportfeatIdArrayCreate() tocreateanarrayof
mappingsbetweentheuserdefinedidsandtheidsassignedbyCreoParametric to
theentityitemsintheimportfeature.
Specifythehandletothefeature,forwhichtheuserdefinedidsandidsassigned
byCreoParametric havetobemapped,astheinputargumentofthefunction.The
functionreturnsanarrayofmappedids.
Interface:Importing Features 723Usethefunction ProImportfeatIdArrayMapCount() togetthenumber
ofelementsinthearrayofmappings.Use thefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionreturnsanarrayofmappedids.
Interface:Importing Features 723Usethefunction ProImportfeatIdArrayMapCount() togetthenumber
ofelementsinthearrayofmappings.Use thefunction
ProImportfeatIdArrayMapGet() togetthemappingofaparticular
elementinthearray.
Usethefunction ProImportfeatIdArrayFree() tofreethearray.
UsethefunctiontoProImportfeatUserIdToItemId() toobtaintheidor
idsassignedbyCreoParametric forauserdefinedid.Thefunctionreturns
multipleidsinanarrayiftheimportoperationsplitaparticularentity.
Forexample,ifyoucreateacircularedgeasasingleedgedatadefinedbyasingle
id,CreoParametric createsthecirclebysplittingitintotwo.Ifyoupasstheuser
definedidasaninputtothefunction ProImportfeatUserIdToItemId(),
thefunctionwillreturnanarrayoftheidsassignedtoeachhalfofthecircle.
Theinputargumentsofthisfunctionare:
•p_feat_handle—Specifies thehandleoftheimportfeature.
•user_id—Specifies theidentifierofthegeometryitem.
•item_type—Specifies thetypeofthegeometryitem.Thetypesofgeometry
are:
○PRO_SURFACExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•p_feat_handle—Specifies thehandleoftheimportfeature.
•user_id—Specifies theidentifierofthegeometryitem.
•item_type—Specifies thetypeofthegeometryitem.Thetypesofgeometry
are:
○PRO_SURFACE
○PRO_EDGE
○PRO_QUILT
Usethefunction ProImportfeatItemIdToUserId() toconvertaCreo
Parametric itemidtoanarrayofuserdefinedids.
Forexample,iftheedgesdefinedbytheuserarecreatedasasingleedgebyCreo
Parametric, andyoupassasingleitemidassignedbyCreoParametric tothe
function ProImportfeatItemIdToUserId(), itwillreturnanarrayofuser
ids.
•p_feat_handle—Specifies thehandleoftheimportfeature.
•item_id—Specifies theidentifierofthegeometryitem.
•item_type—Specifies thetypeofthegeometryitem.Thetypesofgeometry
are:
○PRO_SURFACE
○PRO_EDGE
○PRO_QUILT
Usethefunction ProImportfeatDataGet() toretrievetheparameters
assignedtotheimportfeature.Theoutputreturnedbythisfunctionwillcontains
thefollowing:
•Information abouttheinterfacetypeoftheimportfeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProImportfeatDataGet() toretrievetheparameters
assignedtotheimportfeature.Theoutputreturnedbythisfunctionwillcontains
thefollowing:
•Information abouttheinterfacetypeoftheimportfeature.
724 Creo®Parametric TOOLKIT User’sGuide•Thefilenamefromwhichtheimportfeatureiscreated.Thisisapplicable for
importfeaturescreatedfromafile.
•Thecoordinate systemwithrespecttowhichtheimportfeatureisaligned.
•Theattributesoftheimportfeature.
ExtractingCreoParametric Geometryas
InterfaceData
Functions Introduced:
•ProPartT oProInterfaceData()
•ProIntfDataAccuracyGet()
•ProIntfDataAccuracytypeGet()
•ProIntfDataOutlineGet()
•ProIntfDataDatumCount()
•ProIntfDataDatumGet()
•ProIntfDataEdgeCount()
•ProIntfDataEdgeGet()
•ProIntfDataQuiltCount()
•ProIntfDataQuiltGet()
•ProIntfDataSurfaceCount()
•ProIntfDataSurfaceGet()
Superseded Functions:
•ProPartT oProIntfData()
Usethefunction ProPartToProIntfData() toextractaProIntfData
structuredescribing thegeometryofapartasifitwereanimportfeature.Thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProIntfDataSurfaceGet()
Superseded Functions:
•ProPartT oProIntfData()
Usethefunction ProPartToProIntfData() toextractaProIntfData
structuredescribing thegeometryofapartasifitwereanimportfeature.This
providesasingleinterfacetoextractallgeometric datainordertoconvertitto
anothergeometric format.Thefunction ProPartToProIntfData() extracts
theProIntfData structureonlyifthemodelhasasinglebody,elsereturnsthe
errorPRO_TK_MULTIBODY_UNSUPPORTED.
InCreoParametric 7.0.0.0andlater,thefunction ProPartToProIntfData()
hasbeendeprecated. Usethefunction ProPartToProInterfaceData() to
convertaProPart structuretoaProIntfData structure.Theinputarguments
follow:
•ptk_part—The ProPart datastructurethatneedstobeconverted.
•p_cnv_opts—The optionsfortheconversion definedbythestructure
ProPartConversionOptions.
Interface:Importing Features 725Theinterfacedataisreturnedbytheoutputargument p_intfdata. Youmust
preallocate thememoryforthisargumentbycallingthefunction
ProIntfDataAlloc().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProPartConversionOptions.
Interface:Importing Features 725Theinterfacedataisreturnedbytheoutputargument p_intfdata. Youmust
preallocate thememoryforthisargumentbycallingthefunction
ProIntfDataAlloc().
Thefunctions ProIntfDataAccuracytypeGet(),
ProIntfDataAccuracyGet(), andProIntfDataOutlineGet()
provideaccesstoproperties oftheinterfacedatastructure.
Theotherfunctionsallowyoutocountandaccesseachindividual geometric data
structureintheinterfacedata.
Associative TopologyBusEnabled
Interfaces
ThefollowinginterfacesareATB-enabled bydefault:
•CADDS5
•CATIAV4
•CATIAV5
•CreoElements/Direct
•CreoView
•CreoGranitefile
•ICEM
•Neutral
•OPTEGRA
•SolidWorks
•NX
•Inventor
YoucanindicateintheimportprofiletodisableATB.Youcandothisinthe
ImportProfileEditor(underTools▶▶UtilitiesintheCreoParametric userinterface)
byclearingtheoptionEnableATB.
RefertotheCreoParametric DataExchange Helpformoreinformation onprofile
editingandATB(Associative TopologyBus).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbyclearingtheoptionEnableATB.
RefertotheCreoParametric DataExchange Helpformoreinformation onprofile
editingandATB(Associative TopologyBus).
726 Creo®Parametric TOOLKIT User’sGuideAssociative TopologyBusEnabled
ModelsandFeatures
Associative TopologyBus(ATB)propagates changesmadetotheoriginalCAD
systemdataintheheterogeneous designenvironment. Allgeometric IDs
preservedbythenativesystemafterthechangetothenativefilearealso
preservedintheimportedgeometrybytheATBupdate.WithATB,youcanwork
withCreoParametric partorassemblythatis:
•ATranslatedImageModel(TIM)representation ofamodelimportedfromthe
ATBinterface,suchas,CADDSorCATIA.
•ACreoParametric assemblycontaining oneormorecomponents whichare
modelsimportedfromanATBInterface,suchas,CADDSorCATIA.
•ACreoParametric partcontaining anImportFeaturethatisimportedfroman
ATBInterfacesuchas,ICEM.
Onlyimportoperations inCreoParametric createTIMpartsandassemblies. You
canopenCATIA,CADDSmodelfilesasTIMs.NeutralpartfilesandfilesofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxATBInterfacesuchas,ICEM.
Onlyimportoperations inCreoParametric createTIMpartsandassemblies. You
canopenCATIA,CADDSmodelfilesasTIMs.Neutralpartfilesandfilesof
otherATB-enabled formatsareimportedasnativeCreoParametric partswith
ATB-enabled features.
TheTIMpartsandassemblies storetheirATBinformation atthemodellevel.
However,ATB-enabled importfeaturesstoreATBinformation atthefeature-level.
TheTIMsaredisplayedintheModelTreewithATBiconsthatindicatetheir
statuswithrespecttotheirreferencefileasup-to-date, out-of-date, andsoon.
ThefunctionsrelatedtoATBmodelsorfeaturesareavailableintheheaderfile
ProATB.h. Thesefunctionsenableyoutoperformthefollowingactionsona
TIMmodelorATB-enabled featureortheentiregeometryoftheimportedmodel:
•CheckthestatusoftheTIMsortheATB-enabled features.
•UpdateTIMsorATB-enabled featuresthatareidentifiedasout-of-date.
•ChangethelinkofaTIMorATB-enabled feature.
•Breaktheassociation betweenaTIMortheATB-enabled featureandthe
originalreferencemodel.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ChangethelinkofaTIMorATB-enabled feature.
•Breaktheassociation betweenaTIMortheATB-enabled featureandthe
originalreferencemodel.
Functions Introduced:
•ProModelIsTIM()
•ProModelHasTIMFeatur e()
•ProModelListTIMFeatur es()
•ProATBMdlnameV erify()
•ProATBMarkAsOutOfDate()
•ProATBUpdate()
•ProATBRelink()
Interface:Importing Features 727Thefunction ProModelIsTIM() checksifthespecifiedmodelisaTIM.
Thefunction ProModelHasTIMFeature() checksifthespecifiedmodel
containsaTIMfeature.
Thefunction ProModelListTIMFeatures() listsalltheTIMsorATB-
enabledfeaturespresentinthespecifiedmodel.Thisfunctioncanbecalledafter
thefunction ProModelHasTIMFeature() whichdetermines ifthespecified
modelhasoneormoreTIMfeatures.
Thefunction ProATBMdlnameVerify() verifiesifthespecifiedATBmodel
isoutofdatewiththesourceCADmodel.Thefunctionfirstchecksifthe
specifiedmodelisaTIM.IfthemodelisnotaTIM,thisfunctionchecksifthe
ATB-enabled modelwascreatedbyimporting orappending ICEMorneutralxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisoutofdatewiththesourceCADmodel.Thefunctionfirstchecksifthe
specifiedmodelisaTIM.IfthemodelisnotaTIM,thisfunctionchecksifthe
ATB-enabled modelwascreatedbyimporting orappending ICEMorneutral
surfacestoexistingCreoParametric partmodels.Theinputargumentsforthis
functionare:
•Model—Specify aCreoParametric PartorAssembly thatis—
○ATranslatedImageModel(TIM)representation ofamodelimportedfrom
theATBinterface,suchas,CADDSorCATIA.
○ACreoParametric assemblycontaining oneormorecomponents which
aremodelsimportedfromanATBInterface,suchas,CADDSorCATIA.
○ACreoParametric partcontaining anImportFeaturethatisimportedfrom
anATBInterfacesuchas,ICEM.
•feat_ids—Specify anarrayoffeatureidsfortheATB-enabled featuresinthe
model.IfamodelcontainsmorethanoneATB-enabled feature,theverify
functionworksonlyonthespecifiedfeature.Ifyoudonotspecifyafeatureid,
theProATBMdlnameVerify() functionverifiestheentiremodel
includingTIMsfromnon-native CADmodels.
•search_paths—Specify thecompletelocationtothesourceCADmodel.YouxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheProATBMdlnameVerify() functionverifiestheentiremodel
includingTIMsfromnon-native CADmodels.
•search_paths—Specify thecompletelocationtothesourceCADmodel.You
canspecifymultipledirectories tosearchforthemodel.Ifnosearchpathis
specified,thenthefunctionwillsearchincurrentworkingdirectoryor
locationssetinconfig-option atb_search_path.
TheoutputargumentsofthisfunctionrepresentthestatusoftheTIMsandareas
follows:
•models_out_of_date—Specifies anarrayofTIMsortheATB-enabled features
thatareout-of-date withthesourcemodelandrequireanupdate.These
modelsarerepresented byarediconintheModelTreeintheCreoParametric
userinterface.
•models_unlinked—Specifies anarrayofTIMsortheATB-enabled features
thathavemissinglinksbecausethereferencemodelismissingfromthe
designated searchpath.Thesemodelsarerepresented byayellowiconinthe
ModelTreeintheCreoParametric userinterface.
728 Creo®Parametric TOOLKIT User’sGuide•models_old_version—Specifies anarrayofTIMsforwhichthesourceCADxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxModelTreeintheCreoParametric userinterface.
728 Creo®Parametric TOOLKIT User’sGuide•models_old_version—Specifies anarrayofTIMsforwhichthesourceCAD
modelisolderthantheonewithwhichtheTIMwaslastupdated.These
modelsarerepresented byayellowiconintheModelTreeintheCreo
Parametric userinterface.Usethefunction ProArrayFree() tofreethe
arrayofoutputarguments.
Thefunction ProATBMarkAsOutOfDate() identifiesalltheATB-enabled
featuresthatareoutofdatefortheupdateoperation.
Thefunction ProATBUpdate() updatesonlythoseATB-enabled modelsor
featuresthataredisplayedinthesession.Theupdateactionsynchronizes the
derivedstructureandthecontentsoftheTIMswiththeprimarystructureandthe
contentofthesourcenon-native CADmodels.Thisfunctionreturnsanerrorif
therearenon-displayed modelsinthesessionoriftheinputmodelisnot
displayed.
Note
•IfthelinkofaTIMorATB-enabled featureisbroken,youcannotre-
establishthelinkorupdatethepartthatisindependent andhaslostits
association withthereferencemodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplayed.
Note
•IfthelinkofaTIMorATB-enabled featureisbroken,youcannotre-
establishthelinkorupdatethepartthatisindependent andhaslostits
association withthereferencemodel.
•Thegeometryaddedorremovedfromthemodelbeforetheupdateis
addedorremovedfromtheTIMaftertheupdate.
•Thegeometryaddedorremovedfromthemodelbeforetheupdateis
addedorremovedfromtheTIMaftertheupdate.
•ATBincorrectly identifiestheimportedgeometryasup-to-date basedon
theoldreferencefilewhichisfoundbeforetheupdatedreferencefile.
Thefunction ProATBRelink() relinksaTIMtoasourceCADmodelspecified
bytheinputargumentmaster_model_path. Thisfunctionrelinksallthosemodels
orfeaturesthathavelosttheirassociation orlinkwiththeirmastermodel.Inorder
torelinkamodel,providethenameandlocationofthemastermodel,usingthe
master_model_path towhichthespecifiedmodelorfeatureistobelinked.Ifthe
mastermodelwiththesamenameisfound,theCreoParametric TIMmodelis
linkedtothatmastermodel.
Interface:Importing Features 72930
Interface:Customized PlotDriverxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmastermodelwiththesamenameisfound,theCreoParametric TIMmodelis
linkedtothatmastermodel.
Interface:Importing Features 72930
Interface:Customized PlotDriver
UsingthePlotDriverFunctionality ............................................................................731
Thischapterdescribesthecustomized plotdriverfunctionssupported byCreo
Parametric TOOLKIT.
730 Creo®Parametric TOOLKIT User’sGuideUsingthePlotDriverFunctionality
Thefunctionsdescribedinthissectionenableyoutoplotthetwo-dimensional
entities,suchas,lines,circles,arcs,andtextthatareusedbyCreoParametric.
Thesefunctionsenableyoutoimplement acustomized plotformatinCreo
Parametric. Youcandothisbyprovidingyourownfunctionforplottingeachof
thetwo-dimensional entitiesandthenbindingthemtoCreoParametric sothatit
usesthesefunctionstoplotthecontentsoftheobjectcurrentlyinsession.
Thefollowingrestrictions applywhileusingthisfunctionality:
1.Youcannotplotshadedmodelsusingthesefunctions. Thisappliestoplotsofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusesthesefunctionstoplotthecontentsoftheobjectcurrentlyinsession.
Thefollowingrestrictions applywhileusingthisfunctionality:
1.Youcannotplotshadedmodelsusingthesefunctions. Thisappliestoplotsof
modelsgeneratedfrom3Dmodelmodesaswellasshadeddrawingviews.
2.ThecontentsofOLEobjectsembedded indrawingswillnotbeincludedinthe
output.
3.Textcontentsprovidedtotheimplementation mayincludespecialCreo
Parametric symbols.TheCreoParametric TOOLKITapplication must
transformthistextintosomething thatcanbedisplayedcorrectlyintheoutput
format.
4.Userdefinedplotterformatsregistered usingthefunctionslistedherewillnot
beaccessible fromtheCreoParametric Printdialogbox,orfromtheCreo
Parametric TOOLKITfunction ProPrintExecute(). Inordertoexport
themodelwiththiscustomplotdriver,youmustuse
ProPlotdriverExecute().
Functions Introduced:
•ProPlotdriverInterfaceCr eate()
•ProPlotdriverInterfaceobjectsSet()
•ProPlotdriverAr cPlot()
•ProPlotdriverAr cfunctionSet()
•ProPlotdriverCir clePlot()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProPlotdriverExecute().
Functions Introduced:
•ProPlotdriverInterfaceCr eate()
•ProPlotdriverInterfaceobjectsSet()
•ProPlotdriverAr cPlot()
•ProPlotdriverAr cfunctionSet()
•ProPlotdriverCir clePlot()
•ProPlotdriverCir clefunctionSet()
•ProPlotdriverLinePlot()
•ProPlotdriverLinefunctionSet()
•ProPlotdriverPolygonPlot()
•ProPlotdriverPolygonfunctionSet()
•ProPlotdriverPolylinePlot()
•ProPlotdriverPolylinefunctionSet()
•ProPlotdriverT extPlot()
•ProPlotdriverT extfunctionSet()
Interface:Customized PlotDriver 731•ProPlotdriverExecute()
Thefunction ProPlotdriverInterfaceCreate() searchesforaplot
interfacewithaspecifiedname.Iftheinterfacedoesnotexist,thenthefunction
createsanewinterfacewiththisname.Eachplotformatthatyoudefinemusthave
auniquename.Thisnameisreferenced incallstootherfunctionsdescribedin
thissection.
Thefunction ProPlotdriverInterfaceobjectsSet() specifiesthe
typesofobjectsthataresupported byaparticularplotformat.Specifyalistoffilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthissection.
Thefunction ProPlotdriverInterfaceobjectsSet() specifiesthe
typesofobjectsthataresupported byaparticularplotformat.Specifyalistoffile
extensions, suchas,prt,drw,asm,andsoon,thatdefinethetypesofobjectto
plot.
UsetheProPlotdriver functionstoplotcircles,lines,arcs,polygons,
polylines,andtext.Thesefunctionsacceptasinputacallbackfunctionwhose
signaturematchesthecallbacksspecifiedinthetablebelow.Theinputarguments
ofthecallbackfunctiondescribetheactualentitytobeplotted.
Thefollowingtableliststhenamesoftheplotfunctionsandtheircorresponding
callbacks.Forexample,usethefunction
ProPlotdriverLinefunctionSet() toplotaline.Thefunctionaccepts
asinputacallbackfunctionwhosesignaturematches
ProPlotdriverLinePlot(). Theinputargumentsofthefunction
ProPlotdriverLinePlot() definethelinetobeplotted.
PlotFunction CallBackFunction
ProPlotdriverArcfunctionSet() ProPlotdriverArcPlot()
ProPlotdriverCirclefunctionSet() ProPlotdriverCirclePlot()
ProPlotdriverLinefunctionSet() ProPlotdriverLinePlot()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPlotFunction CallBackFunction
ProPlotdriverArcfunctionSet() ProPlotdriverArcPlot()
ProPlotdriverCirclefunctionSet() ProPlotdriverCirclePlot()
ProPlotdriverLinefunctionSet() ProPlotdriverLinePlot()
ProPlotdriverPolygonfunctionSet() ProPlotdriverPolygonPlot()
ProPlotdriverPolylinefunctionSet() ProPlotdriverPolylinePlot()
ProPlotdriverTextfunctionSet() ProPlotdriverTextPlot()
Thefunction ProPlotdriverExecute() isusedtoinvoketheuser-defined
plotonthecurrentobject.
Example1:SamplePlotDriverProgram
ThesamplecodeinUgPlotUse.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_plot showshowto
usethecustomized plotdriverfunctions.
732 Creo®Parametric TOOLKIT User’sGuide31
WorkingwithMulti-CADModels
UsingCreoUnite
Overview................................................................................................................734
SupportforFileNamesinNon-CreoModels..............................................................735xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSupportforFileNamesinNon-CreoModels..............................................................735
CharacterSupportforFileNamesinNon-CreoModels..............................................735
WorkingwithMulti-CADModelsinCreoParametricTOOLKIT....................................736
FunctionsthatSupportMulti-CADAssemblies...........................................................739
Superseded Functions.............................................................................................741
Restrictions onCharacterLengthforMulti-CADFunctions..........................................743
FunctionalAreasinCreothatdonotSupportMulti-CADAssemblies...........................747
SampleApplications forMulti-CADAssemblies.........................................................747
MigratingApplications UsingTools............................................................................748
Thischapterdescribeshowtoworkwithnon-Creopartsandassemblies using
CreoUnite.
733OverviewxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMigratingApplications UsingTools............................................................................748
Thischapterdescribeshowtoworkwithnon-Creopartsandassemblies using
CreoUnite.
733Overview
CreoUniteenablesyoutoopennon-Creopartsandassemblies inCreoParametric
andotherCreoapplications, suchas,CreoSimulateandCreoDirect,without
creatingseparateCreomodels.Youcanthenassemblethepartandassembly
modelsthatyouopenedascomponents ofCreoassemblies tocreatemulti-CAD
assemblies ofmixedcontent.
Thenon-Creocomponents oftheseheterogeneous assemblies retaintheiroriginal
namesinCreoandcontinuetousetheiroriginalsourceCADapplications asthe
designtool.TheyappearasforeignmodelsandnotasnativeCreomodels.
Youcanopenthepartandassemblymodelsofthefollowingnon-Creofile
formatsinCreoapplications:
•CATIAV5(.CATPart, .CATProduct)
•CATIAV5CGR
•CATIAV4(.Model)
•SolidWorks(.sldasm, .sldprt)
•NX(.prt)
•AutodeskInventor(.ipt, .iam)
•CreoElements/Direct (.sdpc, .sdac, .sdcc,and.sdrc)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•CATIAV5(.CATPart, .CATProduct)
•CATIAV5CGR
•CATIAV4(.Model)
•SolidWorks(.sldasm, .sldprt)
•NX(.prt)
•AutodeskInventor(.ipt, .iam)
•CreoElements/Direct (.sdpc, .sdac, .sdcc,and.sdrc)
FromCreoParametric 4.0F000onward,thefollowingCreoElements/Direct
filescanbeopenedinCreoParametric andotherCreoapplications, suchas,
CreoSimulateandCreoDirect,withoutcreatingseparateCreomodels:
○Partcontentfile(.sdpc)
○Assembly contentfile(.sdac)
Youcanmodifythenon-CreomodelsinCreoapplications, withoutalteringthe
originaldesignintent.Forexample,youcanaddannotations tothenon-Creo
modelsinaCreoapplication.
Youcanalsomakedesignchangestothenon-Creomodelsinamulti-CAD
assembly.Depending ontheconfiguration optionssetinCreo,userconfirmation
mayberequiredtoapplythedesignchanges.RefertotheCreoParametric Data
Exchange onlinehelp,formoreinformation.
Inapplications whereuserconfirmation cannotbeobtainedfordesignchanges,
forexample,whenCreoisrunninginbatchmode,theappropriate functionssuchxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExchange onlinehelp,formoreinformation.
Inapplications whereuserconfirmation cannotbeobtainedfordesignchanges,
forexample,whenCreoisrunninginbatchmode,theappropriate functionssuch
as,ProFeatureWithoptionsCreate(), returnanerror.
Whileworkingwithamulti-CAD model,whenyoucallthefunction
ProFeatureWithoptionsCreate(), theoutputmayvarydepending onthe
valueoftheconfiguration option confirm_on_edit_foreign_models.
734 Creo®Parametric TOOLKIT User’sGuideThedefaultvalueoftheconfiguration option confirm_on_edit_foreign_
modelsisyes.Thefollowingscenariosarepossibledepending onthevalueof
theconfiguration option confirm_on_edit_foreign_models:
•Iftheconfiguration option confirm_on_edit_foreign_models isset
tono,thenon-Creomodelismodifiedwithoutanynotification.
•Iftheconfiguration option confirm_on_edit_foreign_models isset
toyes,ortheoptionisnotdefinedintheconfiguration file,theninbatchmode
theapplication returnstheerrorPRO_TK_GENERAL_ERROR.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Iftheconfiguration option confirm_on_edit_foreign_models isset
toyes,ortheoptionisnotdefinedintheconfiguration file,theninbatchmode
theapplication returnstheerrorPRO_TK_GENERAL_ERROR.
•Insomesituations, youmayneedtoprovideinputintheinteractive modewith
Creo.RefertotheCreoParametric DataExchange onlinehelp,formore
information.
SupportforFileNamesinNon-Creo
Models
Creoapplications supporttheoriginalfilenamesofnon-Creomodels.Filename
cancontainamaximum of80characters andfilepathscancontainamaximum of
260characters. TheCreoParametric TOOLKITfunctionsthatworkwithmulti-
CADmodelssupportfilenameswithamaximum of31or80characters,
depending onthetypeoffunction.
Thefunctionsthatreadinformation fromCreoapplications donothaveany
restriction oncharacterlength.Thesefunctionscanreadfilenamesofanylength.
However,thefunctionsthatcomputearesult,orcreateorsetfeatures,item,
properties, andsoon,mayhaverestrictions oncharacterlength.RefertotheCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxHowever,thefunctionsthatcomputearesult,orcreateorsetfeatures,item,
properties, andsoon,mayhaverestrictions oncharacterlength.RefertotheCreo
Parametric TOOLKITheaderfiles,orthesectionRestrictions onCharacter
LengthforMulti-CAD Functions onpage743,formoreinformation onfunctions
thathaverestrictions oncharacterlength.
CharacterSupportforFileNamesinNon-
CreoModels
Thefollowingspecialcharacters aresupported forfilenamesinnon-Creomodels:
•%(percent)
•^(caret)
•&(ampersand)
•+(plus)
•=(equal)
•'(apostrophe)
•`(graveaccent)
WorkingwithMulti-CAD ModelsUsingCreoUnite 735•,(comma)
•!(exclamation mark)
•$(dollarsign)
•@(atsign)
•;(semicolon)
•#(hash)
•-(dash,hyphen)
•~(tilde)
•()(roundbrackets)
•[](squarebrackets)
•{}(curlybrackets)
•.(period)
•\(backslash)
•/(forwardslash)
•“(quotation marks)
•(space)
Note
Donotusespaceasthefirstcharacterinfilenamesformodels.
WorkingwithMulti-CADModelsinCreo
Parametric TOOLKIT
MostoftheCreoParametric TOOLKITfunctionssupportmulti-CAD assemblies.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•(space)
Note
Donotusespaceasthefirstcharacterinfilenamesformodels.
WorkingwithMulti-CADModelsinCreo
Parametric TOOLKIT
MostoftheCreoParametric TOOLKITfunctionssupportmulti-CAD assemblies.
Thefunctions, whichdonotsupportassemblies withmixedcontent,returnthe
errorPRO_TK_UNSUPPORTED.
Youcanperformbasicoperations, suchas,locatingandretrievingnon-Creo
modelsfromWindchillandopeningtheminCreoapplications. However,you
mustuseWindchillWorkgroupManagertoinitiallycheckinthenon-Creomodels
toWindchill.AftercheckingoutmodelsfromWindchill,youcanworkonthemin
Creoapplications andthencheckinthemodelstoWindchill.
WorkingwithNotifications
Notifications allowtheCreoParametric TOOLKITapplication todetectcertain
typesofeventsinCreoParametric. Youcancallfunctionsbeforeoraftersuch
events.
736 Creo®Parametric TOOLKIT User’sGuideNotifications toallofthefilemanagement operations inCreoParametric, suchas
save,retrieve,copy,rename,andsoon,aresupported forCreoassemblies with
non-Creocomponents.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsave,retrieve,copy,rename,andsoon,aresupported forCreoassemblies with
non-Creocomponents.
Thefollowingtypesoffilemanagement notifications aresupported formulti-
CADassemblies:
•FileManagement Events—Notifications thatarecalledaftersuccessful file
management operations inCreoParametric.
○Pre-fileManagement Events—Y ourcallbackfunctioniscalledbeforethe
filemanagement event.Thefunctionsarecalledonlyformodelsthatare
theexplicitobjectsofthefilemanagement operation.
○Pre-AllFileManagement Events—Y ourcallbackfunctioniscalledbefore
allfilemanagement eventsonmodels,evenifthosemodelswerenot
explicitlyspecifiedbytheuser.
○Post-fileManagement Events—Y ourcallbackfunctioniscalledafterthe
filemanagement operation. Thefunctionsarecalledonlyformodelsthat
aretheexplicitobjectsofthefilemanagement operation.
○PostAllFileManagement Events—Y ourcallbackfunctioniscalledafter
allfilemanagement eventsonmodels,evenifthosemodelswerenot
explicitlyspecifiedbytheuser.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PostAllFileManagement Events—Y ourcallbackfunctioniscalledafter
allfilemanagement eventsonmodels,evenifthosemodelswerenot
explicitlyspecifiedbytheuser.
•FileManagement FailureEvents—Notifications thatarecalledafterthefile
management operations inCreoParametric fail.
Thefollowingeventsandcallbackfunctionsaresupported formulti-CAD
assemblies:
NewEvent NewSignature
Pre-fileManagement Events
PRO_MODEL_RETRIEVE_PRE (*ProModelRetrievePreAction)
PRO_MODEL_SA VE_PRE (*ProModelSavePreAction)
PRO_MODEL_COPY_PRE (*ProModelCopyPreAction)
PRO_MODEL_RENAME_PRE (*ProModelRenamePreAction)
Pre-AllFileManagement Events
PRO_MODEL_SA VE_PRE_ALL (*ProModelSavePreAllAction)
PostFileManagement Events
PRO_MODEL_COPY_POST (*ProModelCopyPostAction)
PRO_MODEL_RENAME_POST (*ProModelRenamePostAction)
PRO_MODEL_ERASE_POST (*ProModelErasePostAction)
PRO_MODEL_RETRIEVE_POST (*ProModelRetrievePostAction)
PRO_MODEL_SA VE_POST (*ProModelSavePostAction)
PostAllFileManagement EventsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_MODEL_ERASE_POST (*ProModelErasePostAction)
PRO_MODEL_RETRIEVE_POST (*ProModelRetrievePostAction)
PRO_MODEL_SA VE_POST (*ProModelSavePostAction)
PostAllFileManagement Events
WorkingwithMulti-CAD ModelsUsingCreoUnite 737NewEvent NewSignature
PRO_MODEL_SA VE_POST_ALL (*ProModelSavePostAllAction)
PRO_MODEL_ERASE_POST_ALL (*ProModelErasePostAllAction)
PRO_MODEL_RETRIEVE_POST_
ALL(*ProModelRetrievePostAllAction)
PRO_MODEL_COPY_POST_ALL (*ProModelCopyPostAllAction)
PRO_MODEL_RENAME_POST_
ALL(*ProModelRenamePostAllAction)
FileManagement FailedEvents
PRO_MODEL_DBMS_F AILURE (*ProModelDbmsFailureAction)
WorkingwithBasicGraphics
Youcancreatewindows,whichcontainthespecifiedmulti-CAD assemblies. The
functions ProObjectwindowMdlnameCreate(),
ProAccessorywindowWithTreeMdlnameCreate(), and
ProBarewindowMdlnameCreate() areusedtocreatewindows.Touse
thesefunctionswithnon-Creocomponents, passoneofthefollowingvaluesas
theinputargument object_type, depending onthetypeofnon-Creomodel:
•PRO_CATIA_PARTxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesefunctionswithnon-Creocomponents, passoneofthefollowingvaluesas
theinputargument object_type, depending onthetypeofnon-Creomodel:
•PRO_CATIA_PART
•PRO_CATIA_PRODUCT
•PRO_CATIA_CGR
•PRO_CATIA_MODEL
•PRO_UG
•PRO_SW_PART
•PRO_SW_ASSEM
•PRO_CC_ASSEMBLY
•PRO_CC_PART
WorkingwithSimplifiedRepresentations
Youcancreatesimplified representations, thatis,master,geometric, graphics,and
user-definedrepresentations, formulti-CAD assemblies. Youcanalsoretrieve
theserepresentations inthesessionusingtheCreoParametric TOOLKIT
functions. Youcaneditasimplified representation createdinaCreoapplication
foranon-Creoassembly.
738 Creo®Parametric TOOLKIT User’sGuideNote
Thefunction ProSolidSimprepVisit() visitsonlyuser-defined
representations. Multi-CAD assemblies canhaveuser-definedrepresentations,
butthenon-Creopartscannothaveuser-definedrepresentations. Therefore,
thefunction ProSolidSimprepVisit() returns PRO_TK_E_NOT_
FOUNDerrorfornon-Creoparts.
WorkingwithConstraintsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbutthenon-Creopartscannothaveuser-definedrepresentations. Therefore,
thefunction ProSolidSimprepVisit() returns PRO_TK_E_NOT_
FOUNDerrorfornon-Creoparts.
WorkingwithConstraints
Youcanretrievetheconstraints ofnon-Creomodelsinmulti-CAD assemblies.
Forretrievingtheconstraints, youmustredefinethenon-Creomodelsusingthe
EditDefinitioncommand intheCreoParametric userinterface.Afterredefinition,
retrievetheconstraints usingtheCreoParametric TOOLKITfunctions.
WorkingwithUser-Defined Features(UDF)
Youcaninsertuser-definedfeaturescreatedinCreoapplications inamulti-CAD
assembly,onlyifitdoesnotalterthestructureofthenon-Creomodels.You
cannotcreateUDFsinanon-Creomodel.
FunctionsthatSupportMulti-CAD
Assemblies
ThefollowingfunctionssupportworkingwithCreoassemblies withmixed
content:
•ProIntfimportModelWi thOptionsMdlnameCr eate()
•ProMdlDependenciesDataList()
•ProMdlMdlnameGet()
•ProMdlfileMdlnameCopy()
•ProMdlnameBackup()
•ProMdlnameCopy()
•ProMdlnameInit()
•ProMdlnameRename()
•ProMdlnameRetrieve()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMdlDependenciesDataList()
•ProMdlMdlnameGet()
•ProMdlfileMdlnameCopy()
•ProMdlnameBackup()
•ProMdlnameCopy()
•ProMdlnameInit()
•ProMdlnameRename()
•ProMdlnameRetrieve()
•ProMdlDire ctoryPathGet()
•ProMdlExtensionGet()
•ProMdlDeclar edDataList()
WorkingwithMulti-CAD ModelsUsingCreoUnite 739•ProMfgMdlCre ate()
•ProRefere nceOriginalownerMdlnameGet()
•ProRefere nceOwnerMdlnameGet()
•ProSolidShrinkwrapMdlnameCr eate()
•ProAssemblySimpre pMdlnameRetrieve()
•ProSimpre pMdlnameRetrieve()
•ProAsmSkeletonMdlnameCr eate()
•ProSolidMdlnameCr eate()
•ProSolidMdlnameInit()
•ProUdfmdlMdlnamesAlloc()
•ProFileMdlnameParse()
•ProOutputFileMdlnameW rite()
•ProFileMdlnameOpen()
•ProFileMdlnameSave()
•ProIntfSliceFileW ithOptionsMdlnameExport()
•Pro2dImportMdlnameCr eate()
•ProPathMdlnameCre ate()
•ProPro ductviewFormattedMdlnameExport()
•ProObjectwindowMdlnameCr eate()
•ProAccessorywindowW ithTreeMdlnameCreate ()
•ProBar ewindowMdlnameCr eate()
•ProATBMdlnameV erify()
•ProAsmcompMdlMdlnameGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProObjectwindowMdlnameCr eate()
•ProAccessorywindowW ithTreeMdlnameCreate ()
•ProBar ewindowMdlnameCr eate()
•ProATBMdlnameV erify()
•ProAsmcompMdlMdlnameGet()
•ProAsmcompMdlnameCr eateCopy()
•ProCavitylayoutLeaderMdlnameSet()
•ProCavitylayoutModelMdlnamesGet()
•ProCavitylayoutModelMdlnamesSet()
•ProMdlFiletypeLoad()
•ProMdlRepr esentationFiletypeLoad()
Forsomeofthesefunctions, youmayhavetospecifythetypeofthenon-Creo
CADmodelusingthedatatypeProMdlfileType. Thevalidvaluesof
ProMdlfileType are:
•PRO_CATIA_PART
•PRO_CATIA_PRODUCT
•PRO_CATIA_CGR
•PRO_CATIA_MODEL
740 Creo®Parametric TOOLKIT User’sGuide•PRO_UG
•PRO_SW_PART
•PRO_SW_ASSEM
•PRO_INVENTOR_PART
•PRO_INVENTOR_ASSEM
Superseded Functions
Thefollowingtableliststhefunctionsthathavebeensuperseded andthe
corresponding newfunctionstosupportmulti-CAD assemblies:
Superseded Function NewFunction
ProIntfimportModelW ithOptionsCreate
()ProIntfimportModelW ithOptionsMdl-
nameCreate()
ProMdlDependenciesList() ProMdlDependenciesDataList()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSuperseded Function NewFunction
ProIntfimportModelW ithOptionsCreate
()ProIntfimportModelW ithOptionsMdl-
nameCreate()
ProMdlDependenciesList() ProMdlDependenciesDataList()
ProMdlNameGet() ProMdlMdlnameGet()
ProMdlfileCopy() ProMdlfileMdlnameCopy()
ProMdlBackup() ProMdlnameBackup()
ProMdlCopy() ProMdlnameCopy()
ProMdlInit() ProMdlnameInit()
ProMdlRename() ProMdlnameRename()
ProMdlRetrieve() ProMdlnameRetrieve()
ProMdlDataGet() ProMdlOriginGet()
ProMdlMdlnameGet()
ProMdlExtensionGet()
ProFilenameParse()
ProMdlDeclaredList() ProMdlDeclaredDataList()
ProMfgCreate() ProMfgMdlCreate()
ProReferenceOriginalownernameGet() ProReferenceOriginalownerMdlname-
Get()
ProReferenceOwnernameGet() ProReferenceOwnerMdlnameGet()
ProSolidShrinkwrapCreate() ProSolidShrinkwrapMdlnameCreate()
ProAssemblySimprepRetrieve() ProAssemblySimprepMdlnameRetrieve
()
ProBoundaryBoxSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProDefaultEnvelopeSimprepRetrieve() ProSimprepMdlnameRetrieve()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAssemblySimprepRetrieve() ProAssemblySimprepMdlnameRetrieve
()
ProBoundaryBoxSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProDefaultEnvelopeSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProGraphicsSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProSimprepMdlnameRetrieve()
WorkingwithMulti-CAD ModelsUsingCreoUnite 741Superseded Function NewFunction
ProLightweightGraphicsSimprepRe-
trieve()
ProPartSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProSymbSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProGeomSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProAsmSkeletonCreate() ProAsmSkeletonMdlnameCreate()
ProSolidCreate() ProSolidMdlnameCreate()
ProSolidInit() ProSolidMdlnameInit()
ProUdfmdlNamesAlloc() ProUdfmdlMdlnamesAlloc()
ProFilenameParse() ProFileMdlnameParse()
ProOutputFileW rite() ProOutputFileMdlnameW rite()
ProFileOpen() ProFileMdlnameOpen()
ProFileMdlfiletypeOpen()
ProFileSave() ProFileMdlnameSave()
ProFileMdlfiletypeSave()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProOutputFileW rite() ProOutputFileMdlnameW rite()
ProFileOpen() ProFileMdlnameOpen()
ProFileMdlfiletypeOpen()
ProFileSave() ProFileMdlnameSave()
ProFileMdlfiletypeSave()
ProIntfSliceFileW ithOptionsExport() ProIntfSliceFileW ithOptionsMdlna-
meExport()
Pro2dImportCreate() Pro2dImportMdlnameCreate()
ProPathCreate() ProPathMdlnameCreate()
ProProductviewFormattedExport() ProProductviewFormattedMdlnameEx-
port()
ProObjectwindowCreate() ProObjectwindowMdlnameCreate()
ProAccessorywindowW ithTreeCreate() ProAccessorywindowW ithTreeMdlna-
meCreate()
ProBarewindowCreate() ProBarewindowMdlnameCreate()
ProATBVerify() ProATBMdlnameV erify()
ProAsmcompMdlNameGet() ProAsmcompMdlMdlnameGet()
ProAsmcompCreateCopy() ProAsmcompMdlnameCreateCopy()
ProCavitylayoutLeaderSet() ProCavitylayoutLeaderMdlnameSet()
ProCavitylayoutModelnamesGet() ProCavitylayoutModelMdlnamesGet()
ProCavitylayoutModelnamesSet() ProCavitylayoutModelMdlnamesSet()
ProMdlLoad() ProMdlFiletypeLoad()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProCavitylayoutModelnamesGet() ProCavitylayoutModelMdlnamesGet()
ProCavitylayoutModelnamesSet() ProCavitylayoutModelMdlnamesSet()
ProMdlLoad() ProMdlFiletypeLoad()
ProMdlRepresentationLoad() ProMdlRepresentationFiletypeLoad()
(*ProMdlSavePreAction) (*ProModelSavePreAction)
(*ProMdlCopyPreAction) (*ProModelCopyPreAction)
(*ProMdlRenamePreAction) (*ProModelRenamePreAction)
742 Creo®Parametric TOOLKIT User’sGuideSuperseded Function NewFunction
(*ProMdlRetrievePreAction) (*ProModelRetrievePreAction)
(*ProMdlSavePostAction) (*ProModelSavePostAction)
(*ProMdlCopyPostAction) (*ProModelCopyPostAction)
(*ProMdlRenamePostAction) (*ProModelRenamePostAction)
(*ProMdlErasePostAction) (*ProModelErasePostAction)
(*ProMdlRetrievePostAction) (*ProModelRetrievePostAction)
(*ProMdlSavePostAllAction) (*ProModelSavePostAllAction)
(*ProMdlCopyPostAllAction) (*ProModelCopyPostAllAction)
(*ProMdlErasePostAllAction) (*ProModelErasePostAllAction)
(*ProMdlRetrievePostAllAction) (*ProModelRetrievePostAllAction)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(*ProMdlCopyPostAllAction) (*ProModelCopyPostAllAction)
(*ProMdlErasePostAllAction) (*ProModelErasePostAllAction)
(*ProMdlRetrievePostAllAction) (*ProModelRetrievePostAllAction)
(*ProMdlDbmsFailureAction) (*ProModelDbmsFailureAction)
Restrictions onCharacterLengthfor
Multi-CADFunctions
Thissectiondescribestherestriction oncharacterlengthsforCreoParametric
TOOLKITfunctionsthatsupportCreoassemblies withmixedcontent.
Thefollowingtableliststhemaximum numberofcharacters supported bythese
functions:
FunctionName CharacterLength
SupportedAdditionalComment
ProSolidShrinkwrapMdl-
nameCreate()31characters
ProSolidMdlnameCreate
()31characters
ProSolidMdlnameInit() 80characters
ProAssemblySim-
prepMdlnameRetrieve()80characters
ProSimprepMdlnameRe-
trieve()80characters
ProAsmSkeletonMdlna-
meCreate()31characters
ProOutputFileMdlname-
Write()31characters
ProFileMdlnameParse() 80characters
ProFileMdlnameOpen() 80characters
ProFileMdlnameSave() 80charactersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAsmSkeletonMdlna-
meCreate()31characters
ProOutputFileMdlname-
Write()31characters
ProFileMdlnameParse() 80characters
ProFileMdlnameOpen() 80characters
ProFileMdlnameSave() 80characters
WorkingwithMulti-CAD ModelsUsingCreoUnite 743FunctionName CharacterLength
SupportedAdditionalComment
ProFileMdlfiletypeOpen() 80characters
ProFileMdlfiletypeSave() 80characters
ProMdlDependenciesDa-
taList()80characters
ProMdlfileMdlnameCopy
()31characters InCreoParametric 3.0,
thisAPIisfunctionally
similartothesuperseded
function
ProMdlfileCopy().
Itreturnsanerrorfor
modelnameslongerthan
31characters.
ProMdlnameBackup() 80characters
ProMdlnameCopy() 31characters InCreoParametric 3.0,
thisAPIisfunctionally
similartothesuperseded
function
ProMdlCopy(). It
returnsanerrorformodel
nameslongerthan31
characters.
Note
Thisfunctionisnot
supported fornon-
CreomodelsandCreo
assemblies with
mixedcontent.
ProMdlnameInit() 80characters
ProMdlnameRetrieve() 80charactersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnameslongerthan31
characters.
Note
Thisfunctionisnot
supported fornon-
CreomodelsandCreo
assemblies with
mixedcontent.
ProMdlnameInit() 80characters
ProMdlnameRetrieve() 80characters
ProMdlnameRename() 31characters InCreoParametric 3.0,
thisAPIisfunctionally
similartothesuperseded
function
ProMdlRename(). It
returnsanerrorformodel
nameslongerthan31
characters.
744 Creo®Parametric TOOLKIT User’sGuideFunctionName CharacterLength
SupportedAdditionalComment
Note
Thisfunctionisnot
supported fornon-
CreomodelsandCreo
assemblies with
mixedcontent.
ProMdlDeclaredDataList
()80characters
ProMfgMdlCreate() 31characters
ProIntfimportModelW i-
thOptionsMdlnameCreate
()31characters InCreoParametric 3.0,
thisAPIisfunctionally
similartothesuperseded
function
ProIntfimportMo
delWithOption
sCreate(). Itreturns
anerrorformodelnames
longerthan31characters.
ProIntfSliceFileW ithOp-
tionsMdlnameExport()31characters
Pro2dImportMdlname-
Create()31characters
ProProductviewFormat-
tedMdlnameExport()31charactersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanerrorformodelnames
longerthan31characters.
ProIntfSliceFileW ithOp-
tionsMdlnameExport()31characters
Pro2dImportMdlname-
Create()31characters
ProProductviewFormat-
tedMdlnameExport()31characters
ProObjectwindowMdlna-
meCreate()80characters
ProAccessorywindow-
WithTreeMdlnameCreate
()80characters
ProBarewindowMdlna-
meCreate()80characters
ProATBMdlnameV erify()80characters
ProAsmcompMdlname-
CreateCopy()31characters
ProCavitylayoutLea-
derMdlnameSet()31characters InCreoParametric 3.0,
thisAPIisfunctionally
similartothesuperseded
function
ProCavitylayout
WorkingwithMulti-CAD ModelsUsingCreoUnite 745FunctionName CharacterLength
SupportedAdditionalComment
LeaderSet(). It
returnsanerrorformodel
nameslongerthan31
characters.
ProCavitylayoutMo-
delMdlnamesSet()31characters InCreoParametric 3.0,
thisAPIisfunctionally
similartothesuperseded
function
ProCavitylayoutMo
delnamesSet(). It
returnsanerrorformodel
nameslongerthan31
characters.
ProUdfmdlMdlnamesAl-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthisAPIisfunctionally
similartothesuperseded
function
ProCavitylayoutMo
delnamesSet(). It
returnsanerrorformodel
nameslongerthan31
characters.
ProUdfmdlMdlnamesAl-
loc()31characters InCreoParametric 3.0,
thisAPIisfunctionally
similartothesuperseded
function
ProUdfmdlNamesAl
loc().Itreturnsanerror
formodelnameslonger
than31characters.
Note
Thisfunctionisnot
supported fornon-
CreomodelsandCreo
assemblies with
mixedcontent.
ProPathMdlnameCreate() Norestriction on
characterlength
ProCavitylayoutMo-
delMdlnamesGet()Norestriction on
characterlength
ProMdlDirectoryPathGet
()Norestriction on
characterlength
ProMdlFiletypeLoad() Norestriction on
characterlength
ProMdlRepresentationFi-
letypeLoad()Norestriction on
characterlength
ProMdlFileT ypeGet() Norestriction on
characterlength
ProMdlExtensionGet() Norestriction on
characterlength
746 Creo®Parametric TOOLKIT User’sGuideFunctionName CharacterLength
SupportedAdditionalComment
ProReferenceOriginalow-
nerMdlnameGet()Norestriction onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcharacterlength
746 Creo®Parametric TOOLKIT User’sGuideFunctionName CharacterLength
SupportedAdditionalComment
ProReferenceOriginalow-
nerMdlnameGet()Norestriction on
characterlength
ProReferenceOwnerMdl-
nameGet()Norestriction on
characterlength
ProMdlMdlnameGet() Norestriction on
characterlength
ProAsmcompMdlMdlna-
meGet()Norestriction on
characterlength
FunctionalAreasinCreothatdonot
SupportMulti-CADAssemblies
Youcannotworkwithmulti-CAD assemblies inthefollowingfunctional areas:
•Familytables
•Flexiblecomponents
•Rename,delete,andcopyoperations fornon-Creomodelsinamulti-CAD
assembly
Note
Whenyousaveacopy,thenon-CreomodelsaresavedasCreomodels.
•Add,delete,replace,reorder,andsupresscomponents inanon-Creoassembly
•Movecomponents toanewsubassembly inanon-Creoassembly
•Creationofexternalreferences. However,youcancreateexternalreferences,
onlyifyouhavesettheexternalreferenceoptioninCreoParametric user
interface.
SampleApplications forMulti-CAD
Assembliesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Creationofexternalreferences. However,youcancreateexternalreferences,
onlyifyouhavesettheexternalreferenceoptioninCreoParametric user
interface.
SampleApplications forMulti-CAD
Assemblies
Thesampleapplications providedwiththeCreoParametric TOOLKIT3.0
installation usethefunctionsthatsupportmulti-CAD assemblies. Thesample
applications areavailableat<creo_loadpoint>\<datecode>\Common
Files\protoolkit\protk_appls. Seethesampleexamplesformore
information onhowtomigrateyourexistingapplications tosupportmulti-CAD
assemblies usingtheCreoParametric TOOLKIT3.0functions.
WorkingwithMulti-CAD ModelsUsingCreoUnite 747MigratingApplications UsingTools
PTCrecommends migratingyourapplications tothenewinterfaces, whichwould
supportmulti-CAD modelsinfuturereleases.
Amappingtablemcm_map.txt, providedwiththeCreoParametric TOOLKIT
3.0installation, listsallthefunctionsthatsupportmulti-CAD assemblies andalso
liststhedeprecated functions.
Youcanmigratetheapplications usingtheperlscript mark_deprecated.pl,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3.0installation, listsallthefunctionsthatsupportmulti-CAD assemblies andalso
liststhedeprecated functions.
Youcanmigratetheapplications usingtheperlscript mark_deprecated.pl,
whichisavailableatthelocation <creo_loadpoint>\<datecode>\
Common Files\protoolkit\scripts. RefertothesectionToolsAvailable
forMigration onpage2178intheappendixMigrating OlderApplications onpage
2177,formoreinformation onthescript.
748 Creo®Parametric TOOLKIT User’sGuide32
ElementTrees:Principlesof
FeatureCreation
OverviewofFeatureCreation...................................................................................750
FeatureInquiry........................................................................................................771
FeatureRedefine....................................................................................................773
XMLRepresentation ofFeatureElementTrees..........................................................773xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxXMLRepresentation ofFeatureElementTrees..........................................................773
Thischapterdescribesthebasicprinciples ofprogrammatic featurecreationthat
areapplicable toalltypesoffeaturethatcanbecreatedinthecurrentversionof
CreoParametric TOOLKIT.Thischapteralsodescribeshowtoextractthe
internaldescription offeaturesofthosefeaturetypesintheCreoParametric
TOOLKITdatabase,andhowtomodifythem.
749OverviewofFeatureCreation
Thissectionprovidesreferences toadditional materialonfeaturecreationandan
overviewofcreatingfeatures.
References toFeatureCreationData
Thecreationofspecificfeaturetypesisdealtwithinmoredetailinthefollowing
chapters:
•ElementTrees:DatumFeaturesonpage792
•ElementTrees:SketchedFeaturesonpage987
•Production Applications: Manufacturing onpage1411
ThischapterdefinesanddescribesthefollowingCreoParametric TOOLKIT
objects:
•ProElement
•ProElempath
•ProValue
ForadefinitionoftheProFeature object,seethechapterCore:Featureson
page130.
FeatureCreationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThischapterdefinesanddescribesthefollowingCreoParametric TOOLKIT
objects:
•ProElement
•ProElempath
•ProValue
ForadefinitionoftheProFeature object,seethechapterCore:Featureson
page130.
FeatureCreation
TherearemanykindsoffeatureinCreoParametric andeachonecancontaina
largeandvariedamountofinformation. Allthisinformation mustbecomplete
andconsistent beforeafeaturecanbeusedinregeneration andgiveriseto
geometry.Thisraisesseveralproblemsforprogrammatic creationoffeatures
throughanAPI.
Itisnecessarytobuildalltheinformation neededbyafeatureintoadatastructure
beforepassingthatwholestructuretoCreoParametric. However,theobject-
orientedstyleofCreoParametric TOOLKITrequiresthatsuchadatastructureis
notdirectlyvisibletotheapplication. Therefore, CreoParametric TOOLKIT
definesthisstructureasaworkspace objectthatcanbeallocatedandfilledusing
specialfunctionsforthatpurpose,butthatisnotpartoftheCreoParametric
database.
TherearethreestepsincreatingafeatureinCreoParametric:
1.Allocatetheworkspace structure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialfunctionsforthatpurpose,butthatisnotpartoftheCreoParametric
database.
TherearethreestepsincreatingafeatureinCreoParametric:
1.Allocatetheworkspace structure.
2.Filltheworkspace structure.
3.Passtheworkspace structuretoCreoParametric tocreatethefeature.
750 Creo®Parametric TOOLKIT User’sGuideNote
Creatingsketchedfeaturesrequiresafewmoresteps.Fordetailed
information, seethechapterElementTrees:SketchedFeaturesonpage
987.
Theprocedure describedaboveallowsafeatureofarbitrarycomplexity tobebuilt
upinasequenceofmanageable steps,withthemaximum oferrorcheckingalong
theway.
AlthoughitisnotyetpossibletocreateallfeaturetypesusingCreoParametric
TOOLKIT, theworkspace structuremustbecapableofdefininganyfeaturetype
sotherangeoffeaturescanbeextendedwithoutaffectingthetechniques already
inuse.Forthisreason,theworkspace structureforfeaturecreationtakestheform
ofatreeofdataelements.Thishastheadvantage ofbeingsimpleforsimple
features,yetisflexibleenoughtoprovideforallpossiblefeaturetypeswithoutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofatreeofdataelements.Thishastheadvantage ofbeingsimpleforsimple
features,yetisflexibleenoughtoprovideforallpossiblefeaturetypeswithout
introducing newprinciples.
Therootandbranchpointsinthetreearecalled“elements,” andthecompletetree
iscalledthe“featureelementtree.”Eachelementismodeledbytheobject
ProElement, whichisapointertoanopaquestructure.
Thefeatureelementtreecontainsalltheinformation requiredtodefinethefeature.
Thisincludesthefollowing:
•Alloptionsandattributes, suchasthematerialsideanddepthtypeforan
extrusionorslot,placement methodforahole,andsoon.
•Allreferences toexistinggeometryitems,suchasplacement references, “up
to”surfaces,sketchingplanes,andsoon.
•References toSketchermodelsusedforsectionsinthefeature.
•Alldimension values.
Note
BecauseCreoParametric TOOLKITisthesametoolkitusedtobuildCreo
Parametric, improvements toCreoParametric mayrequirethedefinitionof
theelementtreetobealteredforsomefeatures.PTCwillmakeeveryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
BecauseCreoParametric TOOLKITisthesametoolkitusedtobuildCreo
Parametric, improvements toCreoParametric mayrequirethedefinitionof
theelementtreetobealteredforsomefeatures.PTCwillmakeevery
efforttomaintainupwardcompatibility .However,theremaybecases
wheretheoldapplication willnotrunwiththenewversionofCreo
Parametric, unlessyourewritetheapplication's codetoconformtothenew
definitionofthefeaturetree.
ElementTrees:Principles ofFeatureCreation 751Notethatalthoughthevaluesofdimensions usedbythefeatureareintheelement
tree,therearenodescriptions of,orreferences to,thedimension objects
themselves. Theonlyexceptionisasfollows:foranelementtreeforafeature
alreadyintheCreoParametric database,youcanasktheidentifierofthe
dimension usedforaparticularelementusingthefunction
ProFeatureElemDimensionIdGet(). Thisisexplainedindetailinthe
sectionFeatureInquiryonpage771.Formoregeneralfunctionsthataccess
dimensions, seethechapterCore:Relationsonpage202.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureElemDimensionIdGet(). Thisisexplainedindetailinthe
sectionFeatureInquiryonpage771.Formoregeneralfunctionsthataccess
dimensions, seethechapterCore:Relationsonpage202.
EachelementinthetreeisassignedanelementID,whichisreallyadescription of
theroleitisplayinginthisfeature—the kindofinformation itissupplying. Itis
calledanelementIDbecausenotwoelementsatthesamelevelinthetreewill
havethesameidentifier,unlesstheybelongtoanarrayelement,sotheelementID
alsoactsasauniqueidentifier.
Thepossibleelementrolesarevaluesinanenumerated typecalled ProElemId,
declaredinProElemId.h. Examplevaluesareasfollows:
•PRO_E_FEATURE_TYPE
•PRO_E_FEATURE_FORM
•PRO_E_EXT_DEPTH
•PRO_E_THICKNESS
•PRO_E_4AXIS_PLANE
Therearefourdifferentelementtypes:
•Single-valued
•Multivalued
•Compound
•Array
Asingle-valued elementcancontainvarioustypesofvalue.Thesimplestisan
integerusedtodefine,forexample,thetypeofthefeature,oroneoftheoption
choices,suchasthematerialsideforathinprotrusion. Thevaluecanbeawidexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintegerusedtodefine,forexample,thetypeofthefeature,oroneoftheoption
choices,suchasthematerialsideforathinprotrusion. Thevaluecanbeawide
string(forexample,thenameofthefeature),oradouble(forexample,thedepth
ofablindextrusion). Iftheelementdefinesareferencetoanexistinggeometry
iteminthesolid,itsvaluecontainsanentire ProSelection objectsoitcan
refertoanythinginanentireassembly.
Amultivalued elementcontainsseveralvaluesofoneofthesetypes.Multivalued
elementsoccuratthelowestleveloftheelementtree—the“leaves.”Anexample
istheelementwiththeidentifier PRO_E_FIXT_COMPONENTS inaFixture
SetupfeatureinCreoNC.Thatelementspecifiesthecomponents intheassembly
thatbelongtothefixture;ingeneral,therecanbeanynumberofsuch
components, sotheelementcontainsseveralcomponent identifiers.
752 Creo®Parametric TOOLKIT User’sGuideAcompound elementisonethatactsasabranchpointinthetree.Itdoesnothave
avalueofitsown,butactsasacontainerforelementsfurtherdowninthe
hierarchy.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx752 Creo®Parametric TOOLKIT User’sGuideAcompound elementisonethatactsasabranchpointinthetree.Itdoesnothave
avalueofitsown,butactsasacontainerforelementsfurtherdowninthe
hierarchy.
Anarrayelementisalsoabranchpoint,butonethatcontainsmanychildelements
ofthesameelementID.AnexampleofthisisthePRO_E_DTMPLN_
CONSTRAINTS elementinadatumplanefeature,whichcontainsanarrayof
elementsoftypePRO_E_DTMPLN_CONSTRAINT (notethesingular),eachof
whichisacompound elementwhosecontentsdescribeoneoftheconstraints that
determine thepositionofthedatumplane.
Thefeatureelementtreeenablesyoutobuildacomplexfeatureinstages,with
onlyasmallsetoffunctions. However,theformofthetreerequiredfora
particularfeatureneedstobeclearlydefinedsoyouknowexactlywhatelements
andvaluestoadd,andsoCreoParametric TOOLKITcancheckforerrorseach
timeyouaddanewelementtothetree.
CreoParametric TOOLKITdocuments thenecessarycontentsoftheelementtree
foreachtypeoffeaturethatcanbecreatedprogrammatically .Itdoesthisthrough
twotypesofdescription:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtimeyouaddanewelementtothetree.
CreoParametric TOOLKITdocuments thenecessarycontentsoftheelementtree
foreachtypeoffeaturethatcanbecreatedprogrammatically .Itdoesthisthrough
twotypesofdescription:
•Featureelementtree
•Featureelementtable
Thefeatureelementtreedefinesthestructureofthetree,specifying theelement
ID(orrole)fortheelementsatalllevelsinthetree,andwhichelementsare
optional.
ThefeatureelementtabledefinesthefollowingforeachoftheelementIDsinthe
tree:
•Adescription ofitsroleinthefeature
•Thevaluetypeithas(thatis,whetheritissinglevalueorcompound; oran
arrayofinteger,double,orstring)
•Therangeofvaluesvalidforitinthiscontext
EachtypeoffeaturethatcanbecreatedusingCreoParametric TOOLKIThasits
ownheaderfilethatcontainsthefeatureelementtreeandtable,intheformof
codecomments. Theheaderfilesforthefeaturetypesthatcanbecreatedinthe
currentversionareasfollows:
HeaderFile FeatureType
ProAnalysis.h ExternalAnalysis
ProAsmcomp.h Assembly component, mechanism connectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurrentversionareasfollows:
HeaderFile FeatureType
ProAnalysis.h ExternalAnalysis
ProAsmcomp.h Assembly component, mechanism connection
ProChamfer.h Chamferorcornerchamfer
ProDataShareFeat.h Generalmerge(merge,cutout,inheritance), copy
geom.,publishgeom.,shrinkwrap
ProDraft.h Draft
ProDtmAxis.h Datumaxis
ProDtmCrv.h Datumcurve
ElementTrees:Principles ofFeatureCreation 753HeaderFile FeatureType
ProDtmCsys.h Datumcoordinate system
ProDtmPln.h Datumplane
ProDtmPnt.h Datumpoint
ProExtrude.h Extrudedprotrusion, cut,surface,surfacetrim,thin,
sheetmetal wall,orsheetmetal cut
ProFixture.h Fixture(forCreoNC)
ProFlatSrf.h Fillsurfaceorsheetmetal flatwall
ProForeignCurve.h Foreigndatumcurve
ProHole.h Hole
ProMerge.h Merge
ProMirror.h Mirror(geometry only)
ProMove.h Moveandcopy(geometry only)
ProMfgoper.h Manufacturing operation
ProNcseq.h Manufacturing CreoNCsequence
ProProcstep.h Processstep
ProReplace.h Surfacereplacement feature
ProRevolve.h Revolvedprotrusion, cut,surface,surfacetrimor
thinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProNcseq.h Manufacturing CreoNCsequence
ProProcstep.h Processstep
ProReplace.h Surfacereplacement feature
ProRevolve.h Revolvedprotrusion, cut,surface,surfacetrimor
thin
ProRib.h Rib
ProRound.h Round
ProShell.h Shell
ProSmtFlangeWall.h Sheetmetal flangewall
ProSmtFlatWall.h Sheetmetal flatwall
ProSolidify.h Solidify
ProStdSection.h Standardsection
ProSweep.h Simplesweptprotrusion, cut
ProThicken.h Thicken
ProTrim.h Trim
ProWcell.h Manufacturing workcell
ThefeatureelementtreefortheFixtureSetupfeaturedefinedintheheaderfile
ProFixture.h isdeprecated. Usetheelementtreedefinedintheheaderfile
ProMfgFeatFixture.h instead.Formoreinformation, pleaserefertothe
sectionManufacturing Holemaking Steponpage1549.
Thefirsttwoelementsarecommontoallfeatures.Therootofafeaturetreeis
alwaysacompound elementwiththeidentifier PRO_E_FEATURE_TREE. The
firstelementwithintherootalwaysspecifiesthefeaturetype;itisasingle-valued
elementwiththeelementIDPRO_E_FEAT_TYPE, whosevalueisoneofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalwaysacompound elementwiththeidentifier PRO_E_FEATURE_TREE. The
firstelementwithintherootalwaysspecifiesthefeaturetype;itisasingle-valued
elementwiththeelementIDPRO_E_FEAT_TYPE, whosevalueisoneofthe
integersinthelistoffeaturetypesinProFeatType.h. Inthiscase,theelement
tableshowsthatthevaluemustbePRO_FEAT_FIXSETUP.
Thenextelementinafixturesetupgivesthenameofthefeature;itselementIDis
PRO_E_FEAT_NAME, anditcontainsasinglewidestring.Theelementtree
showsthatthisisoptional.
754 Creo®Parametric TOOLKIT User’sGuideThePRO_E_FIXT_COMPONENTS isamultivalued element,withthevaluetype
integer,whichcontainstheidentifiers oftheassemblycomponents thatbelongto
thefixture.
ThelastelementinafixturesetupisPRO_E_SETUP_TIME, whichcontainsa
double.
Asyoubuildtheelementsintotheworkspace elementtree,CreoParametric
TOOLKITchecksthecorrectness oftheirtypesagainstthestructuredescribedby
theelementtreeandtableinthecorresponding headerfile.ThismakesiteasytoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKITchecksthecorrectness oftheirtypesagainstthestructuredescribedby
theelementtreeandtableinthecorresponding headerfile.Thismakesiteasyto
diagnoseerrorswhenyouarecreatingfeatures.Thegeometrical correctness is
checkedonlywhenyoutrytocreatethefeatureintheCreoParametric database.
Thefollowingsectionsofthischapterdescribethefunctionsusedtobuildan
elementtreeandcreateafeature.Thesectionsareasfollows:
•FeatureElementValuesonpage755—Introduces theobject ProValue, used
torepresentthevalueofafeatureelement.
•FeatureElementPathsonpage757—Introduces theobject ProElempath,
usedtodescribethelocationofanelementinanelementtree.
•FeatureElementsonpage759—Introduces theProElement functionsused
tobuildandanalyzeanelementtree.
•FeatureElementDiagnostics onpage763—Introduces the
ProElementDiagnostics functionsusedtoobtainthediagnostics fora
featureelement.
•CallingProFeatureCreate() onpage764—Describes the
ProFeatureCreate() functionindetail.
•ExampleofCompleteFeatureCreationonpage766—Shows howtousexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatureelement.
•CallingProFeatureCreate() onpage764—Describes the
ProFeatureCreate() functionindetail.
•ExampleofCompleteFeatureCreationonpage766—Shows howtouse
functionsfromtheothersectionstoperformallthestepsneededtocreatea
feature.
FeatureElementValues
Functions introduced:
•ProValueAlloc()
•ProValueDataGet()
•ProValueDataSet()
•ProValueFr ee()
•ProWstringArrayT oValueArray()
•ProValueArrayT oWstringArray()
•ProValuedataT ransformGet()
•ProValuedataT ransformSet()
ElementTrees:Principles ofFeatureCreation 755Theobject ProValue isanopaqueworkspace handleusedtocontainthevalue
ofafeatureelement.Itistheoutputofthefunctions ProElementValueGet()
andProElementValuesGet(), whichreadthevaluesofafeatureelement,
andistheinputtoProElementValueSet() and
ProElementValuesSet().
YoucanaccessthecontentsofaProValue objectbytranslating itintoanobject
oftypeProValueData, whichisdeclaredasavisibledatastructure.The
declaration isasfollows:
typedef struct pro_value_data
{
ProValueDataType type;
union
{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoftypeProValueData, whichisdeclaredasavisibledatastructure.The
declaration isasfollows:
typedef struct pro_value_data
{
ProValueDataType type;
union
{
int i; /*integer */
double d; /*double */
void *p; /*pointer orreference */
char *s; /*string */
wchar_t *w; /*wchar_t */
ProSelection r; /*selection */
}v;
}ProValueData;
typedef enum pro_value_data_type
{
PRO_VALUE_TYPE_INT =1,
PRO_VALUE_TYPE_DOUBLE,
PRO_VALUE_TYPE_POINTER,
PRO_VALUE_TYPE_STRING,
PRO_VALUE_TYPE_WSTRING,
PRO_VALUE_TYPE_SELECTION
}ProValueDataType;
ProValueData issimplyaholderfordatavaluesofmanydifferenttypes.
Note
FromPro/ENGINEER Wildfire2.0onwards,elementswithmultiplevalues,
forexample, PRO_E_FIXT_COMPONENTS, aredeprecated. Insubsequent
releases,theseelementswillbesuperseded byreferenceelementsorsingle-
value,type-specific elements.Usethefunction
ProElementValuetypeGet() todetermine thetypeoftheelement.
756 Creo®Parametric TOOLKIT User’sGuideNote
Toaccessreferenceelementsusethefunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalue,type-specific elements.Usethefunction
ProElementValuetypeGet() todetermine thetypeoftheelement.
756 Creo®Parametric TOOLKIT User’sGuideNote
Toaccessreferenceelementsusethefunctions
ProElementReferencesGet() orProElementReferencesSet().
Toaccesssingle-value, type-specific elements,usethefunctions
ProElement<type>Get() orProElement<type>Set(), suchas,
ProElementDoubleGet(), ProElementIntegerGet() andsoon.
ThefunctionsinthissectionaccessthecontentsofaProValue throughthe
ProValueData object.
Thefunction ProValueDataGet()provides theProValueData objectfor
thespecified ProValue object.
Thefunction ProValueAlloc() allocatesanewProValue inmemory,as
thefirststeptowardssettingthevalueofafeatureelement.
Thefunction ProValueDataSet() setsthevalueofaProValue object
usingthecontentsofaProValueData structure.
Thefunction ProValueFree() freesaProValue objectinmemory.
Thefunction ProWstringArrayToValueArray() providesaconvenient
waytoallocateandfillanarrayofProValue structuresthatallcontainwidexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProValueFree() freesaProValue objectinmemory.
Thefunction ProWstringArrayToValueArray() providesaconvenient
waytoallocateandfillanarrayofProValue structuresthatallcontainwide
stringvalues.
Thefunction ProValueArrayToWstringArray() performsthereverse
translation, allocating andfillinganarrayofwidestrings.Inbothcases,theoutput
arrayisanexpandable array,soyoushouldreleasethememoryusing
ProArrayFree().
ThetransformmemberoftheunionProValueDataisdeclaredasdouble**. Itmust
bepassedadouble[][] (aProMatrix structure). Theutilityfunctions
ProValuedataTransformGet() and
ProValuedataTransformSet() specifyhowtoassignthe
ProValueData inordertoaccessthematrixcorrectly.
FeatureElementPaths
Functions introduced:
•ProElempathAlloc()
•ProElempathFr ee()
•ProElempathDataSet()
•ProElempathDataGet()
•ProElempathCopy()
ElementTrees:Principles ofFeatureCreation 757•ProElempathCompare ()
•ProElempathSizeGet()
Anelementpathisusedtodescribethelocationofanelementinanelementtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProElempathDataGet()
•ProElempathCopy()
ElementTrees:Principles ofFeatureCreation 757•ProElempathCompare ()
•ProElempathSizeGet()
Anelementpathisusedtodescribethelocationofanelementinanelementtree.
ItisusedbysomeoftheProElement functionsasaconvenient waytoreferto
elementsalreadyinatree.
Theobject ProElempath isdeclaredasanopaquepointer.Itcontainsa
description ofthepathfromtherootofthetreedowntotheelementreferredto.
Atmostlevelsinthetreehierarchy,therelevantpathmemberistheelementIDof
theelement(whichisuniqueatthatlevel).Whenthepathstepsfromanarray
elementtooneofitsmemberarrays,theelementpathinsteadcontainsthearray
indexofthatelement.
TobeabletosetthevalueofaProElempath, CreoParametric TOOLKIT
providesastructurecalled ProElempathItem thatcandescribeanelementID,
ortheindexintoanarrayelement.AnarrayofProElempathItem structuresis
thereforeavisibleequivalent totheopaquecontentsofProElempath.
Thedeclaration ofProElempathItem isasfollows:
typedef struct path
{
ProElempathItemtype type;
unionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthereforeavisibleequivalent totheopaquecontentsofProElempath.
Thedeclaration ofProElempathItem isasfollows:
typedef struct path
{
ProElempathItemtype type;
union
{
int elem_id;
int elem_index;
}path_item;
}ProElempathItem;
typedef enum
{
PRO_ELEM_PATH_ITEM_TYPE_ID,
PRO_ELEM_PATH_ITEM_TYPE_INDEX
}ProElempathItemtype;
Theobject ProElempath, thestructure ProElempathItem, andallthe
functionsinthissectionaredeclaredintheheaderfileProElempath.h.
Thefunction ProElempathAlloc() allocatesanewempty ProElempath
object,whereas ProElempathFree() freesaProElempath.
Thefunction ProElempathDataSet() enablesyoutosetthecontentsofa
ProElempath bycopyingfromanarrayofProElempathItem structures.
Thefunction ProElempathDataGet() readsthecontentsofa
ProElempath intoanarrayofProElempathItem structures. Thearrayisan
expandable arraythatmustbeallocatedbyacalltoProArrayAlloc() before
youcallthefunction.
Thefunction ProElempathCopy() copiesthecontentsofoneProElempathxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexpandable arraythatmustbeallocatedbyacalltoProArrayAlloc() before
youcallthefunction.
Thefunction ProElempathCopy() copiesthecontentsofoneProElempath
objectintoanother.Theoutputobjectisallocatedbythefunction.
758 Creo®Parametric TOOLKIT User’sGuideThefunction ProElempathCompare() tellsyouwhethertwo
ProElempath objectsrefertothesameelement.
Thefunction ProElempathSizeGet() tellsyouthelengthoftheelement
pathcontainedinaProElempath object.
FeatureElements
Functions introduced:
•ProElementAlloc()
•ProElementFr ee()
•ProElementIdGet()
•ProElementIdSet()
•ProElemIdStringGet()
•ProElemtre eElementGet()
•ProElemtre eElementAdd()
•ProElemtre eElementRemove()
•ProElementIsMultival()
•ProElementIsCompound()
•ProElementIsArray()
•ProElementChildr enGet()
•ProElementChildr enSet()
•ProElementArraySet()
•ProElementArrayGet()
•ProElementArrayCount()
•ProElemtre eElementV isit()
Thefunction ProElementAlloc() allocatesanewProElement objectwith
aspecifiedelementID.Thefunction ProElementFree() freesaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProElementArrayGet()
•ProElementArrayCount()
•ProElemtre eElementV isit()
Thefunction ProElementAlloc() allocatesanewProElement objectwith
aspecifiedelementID.Thefunction ProElementFree() freesa
ProElement.
Thefunction ProElementIdGet() outputstheelementIDofaspecified
ProElement. Thefunction ProElementIdSet() enablesyoutosetthe
elementIDofaspecified ProElement.
Thefunction ProElemIdStringGet() returnsthestringrepresentation ofthe
specifiedelementID.
Thefunction ProElemtreeElementGet() enablesyoutoreadaspecified
elementinatree.Theinputsaretherootofthetree,specifiedasaProElement
object,andthepathtotheelement,specifiedbyaProElempath. Theoutputisa
ProElement object.
ElementTrees:Principles ofFeatureCreation 759Thefunction ProElemtreeElementAdd() addsanewelementtothe
specifiedelementtree.TheinputsaretheProElement forthetreeroot,the
ProElempath tothenewelement,andtheProElement forthenewelement.
Thefunction ProElemtreeElementRemove() removesanelementfromaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedelementtree.TheinputsaretheProElement forthetreeroot,the
ProElempath tothenewelement,andtheProElement forthenewelement.
Thefunction ProElemtreeElementRemove() removesanelementfroma
specifiedtreeandpath.ItoutputsaProElement fortheelementremoved.
Thefunctions ProElementIsMultival(), ProElementIsCompound(),
andProElementIsArray() tellyouthetypeofaspecifiedelementinatree.
SeethesectionOverview ofFeatureCreationonpage750foranexplanation of
thetypes.
Thefunction ProElementChildrenGet()provides anexpandable arrayof
ProElement objectsforthechildrenofthespecifiedcompound elementina
tree.Thearraymustbeallocatedusing ProArrayAlloc() beforeyoucallthis
function.Thefunction ProElementChildrenSet()adds asetofelements,
specifiedbyanexpandable arrayofProElement objects,asthechildrenofthe
specifiedelementinatree.
Thefunction ProElementArraySet() addsanexpandable arrayof
ProElement objectsasthemembersofaspecifiedarrayelementinanelement
tree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedelementinatree.
Thefunction ProElementArraySet() addsanexpandable arrayof
ProElement objectsasthemembersofaspecifiedarrayelementinanelement
tree.
Thefunction ProElementArrayGet() fillsanexpandable ProElement
arraywiththemembersofanarrayelementinanelementtree.Thefunction
ProElementArrayCount() tellsyouhowmanymembersareinanarray
elementinthespecifiedelementtree.
Thefunction ProElemtreeElementVisit() visitstheelementsthatare
membersofthespecifiedarrayelementinanelementtree.
AccesstoProElement Data
Inearlierreleases,Pro/TOOLKITrecommended usingfunctionsthataccessthe
elementvalue(s)asProValue objects.Thesefunctionsaremaintained for
compatibility .PTCrecommends usingthefunctionsinthissectiontoprovide
greaterflexibility forallnewdevelopment relatedtoanyPro/ENGINEER feature
type.Useofthesenewfunctionsisrequiredforfeaturesfirstsupported inPro/
ENGINEER Wildfire2.0andlater.
Functions introduced:
•ProElementV aluetypeGet()
•ProElementRefer enceGet()
•ProElementRefer enceSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxENGINEER Wildfire2.0andlater.
Functions introduced:
•ProElementV aluetypeGet()
•ProElementRefer enceGet()
•ProElementRefer enceSet()
•ProElementRefer encesGet()
•ProElementRefer encesSet()
•ProElementIntegerGet()
760 Creo®Parametric TOOLKIT User’sGuide•ProElementIntegerSet()
•ProElementDoubleGet()
•ProElementDoubleSet()
•ProElementDecimalsGet()
•ProElementDecimalsSet()
•ProElementwstr optsAlloc()
•ProElementwstr optsExpre ssionsSet()
•ProElementwstr optsSignoptionsSet()
•ProElementwstr optsFr ee()
•ProElementWstringGet()
•ProElementWstringSet()
•ProElementStringGet()
•ProElementStringSet()
•ProElementSpecialvalueGet()
•ProElementSpecialvalueSet()
•ProElementBooleanGet()
•ProElementBooleanSet()
•ProElementT ransformGet()
•ProElementT ransformSet()
Thesefunctionsarethepreferredmethodofaccessingelementvaluesinformation
overProElementValueGet() orProElementValueSet() and
ProValueDataGet() orProValueDataSet().
Thefunction ProElementValuetypeGet() returnsthenominalvaluetype
fortheelement.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoverProElementValueGet() orProElementValueSet() and
ProValueDataGet() orProValueDataSet().
Thefunction ProElementValuetypeGet() returnsthenominalvaluetype
fortheelement.
Thefunctions ProElementReferenceGet() and
ProElementReferenceSet() returnsandsetsasinglereferencevaluefor
theelement.
Thefunction ProElementReferencesGet() returnsanarrayofreference
valuesfortheelement.Thefunctionoutputsareferencearray,whichisa
ProArray. Freethisoutputusing ProReferencearrayFree().
Thefunction ProElementReferencesSet() setsthemultiplereference
valuesfortheelement.
Thefunction ProElementIntegerGet() returnsanintegervalue
representation fortheelement.Thefunction ProElementIntegerSet() sets
theintegervaluefortheelement.
ElementTrees:Principles ofFeatureCreation 761Thefunction ProElementDoubleGet() returnsadoublevaluerepresentation
fortheelement.Thefunction ProElementDoubleSet() setsthedouble
valuefortheelement.
Thefunction ProElementDecimalsGet() obtainsthenumberofdecimalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfortheelement.Thefunction ProElementDoubleSet() setsthedouble
valuefortheelement.
Thefunction ProElementDecimalsGet() obtainsthenumberofdecimal
placestobeusedforthedoublevalueofanelementinthefeature.
Thefunction ProElementDecimalsSet() assignsthenumberofdecimalsto
beusedforthedoublevalueofanelementinthefeature.Thedoublevalueisused
inthefeaturedimension relatedtothiselement.
Note
Usethefunction ProElementDecimalsSet() beforeusingthefunction
ProElementDoubleSet() toensurethatthedoublevalueisassigned
withthecorrectnumberofdecimalplaces.
Thefollowingfunctionsshowhowoptionsareconstructed andsetfor
ProElement*Get() functions.
Thefunction ProElementwstroptsAlloc() allocatestheoptionsusedto
retrievewidestringvalues.
Thefunction ProElementwstroptsExpressionsSet() setstheoptions
toretrievevaluesasexpressions orrelations,iftheyexist,insteadofastring
representations oftheactualvalue.Thisfunctionisapplicable tonominaldouble
andintegervalueelementsonly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoretrievevaluesasexpressions orrelations,iftheyexist,insteadofastring
representations oftheactualvalue.Thisfunctionisapplicable tonominaldouble
andintegervalueelementsonly.
Thefunction ProElementwstroptsSignoptionsSet() setstheoptions
toretrievevalueswithspecialsignformatting (+/-),etc.Thisfunctionis
applicable tonominaldoubleandintegervalueelementsonly.
Thefunction ProElementwstroptsFree() freestheoptionsusedtoretrieve
stringvalues.
Thefunction ProElementWstringGet() returnsastringvalue
representation fortheelement.Thefunctionallows,optionally,a
ProElementWstrOpts() structurethatdictatestheformatoftheoutput.Use
thefunction ProWstringFree() tofreethisstring.
Thefunction ProElementWstringSet() setsthestringvalueforthe
element.
Thefunction ProElementStringGet() returnsanASCIIstringvalue
representation fortheelement.Theinputsforthisfunctionaretheelementand
optionsforhowthestringshouldbeobtained.TheoutputistheASCIIstring
value.Freethisstringusing ProStringFree().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrepresentation fortheelement.Theinputsforthisfunctionaretheelementand
optionsforhowthestringshouldbeobtained.TheoutputistheASCIIstring
value.Freethisstringusing ProStringFree().
Thefunction ProElementStringSet() setstheASCIIstringvalueforthe
element.
762 Creo®Parametric TOOLKIT User’sGuideThefunction ProElementSpecialvalueGet() returnsthepointer
representation fortheelementandthefunction
ProElementSpecialvalueSet() setsthepointerrepresentation forthe
element.
Thefunction ProElementBooleanGet() returnsthebooleanrepresentation
fortheelementandthefunction ProElementBooleanSet() setstheboolean
valuefortheelement.
Thefunction ProElementTransformGet() returnsthetransform
representation fortheelementandthefunction
ProElementTransformSet() setsthetransformvaluefortheelement.
FeatureElementDiagnostics
Functions Introduced:
•ProElementDiagnosticsCollect()
•ProElemdiagnosticPr oarrayFr ee()
•ProElemdiagnosticSeverityGet()
•ProElemdiagnosticMessageGet()
•ProElemdiagnosticFr ee()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProElementDiagnosticsCollect()
•ProElemdiagnosticPr oarrayFr ee()
•ProElemdiagnosticSeverityGet()
•ProElemdiagnosticMessageGet()
•ProElemdiagnosticFr ee()
•ProRefere nceDiagnosticsCollect()
Thefunction ProElementDiagnosticsCollect() obtainsaProArray
ofdiagnostics fortheelement.Thesediagnostics includewarningsanderrors
regardingthevalueoftheelementwithinthecontextofthefeatureandremainder
oftheelementtree.Usethefunction
ProElemdiagnosticProarrayFree() tofreetheProArray of
diagnostic items.
Thefunction ProElemdiagnosticSeverityGet() returnstheseverityof
thediagnostic itemfortheelement.
Thefunction ProElemdiagnosticMessageGet() obtainsthemessage
describing thediagnostic itemfortheelement.Thismessageisintheuser’s
localizedlanguage.
Thefunction ProElemdiagnosticFree() freesthediagnostic itemforthe
element.
Thefunction ProReferenceDiagnosticsCollect() obtainsa
ProArray ofdiagnostics forthereferenceelement.Thesediagnostics includexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProElemdiagnosticFree() freesthediagnostic itemforthe
element.
Thefunction ProReferenceDiagnosticsCollect() obtainsa
ProArray ofdiagnostics forthereferenceelement.Thesediagnostics include
warningsanderrorsregardingthestateofthereferenceelementwithinthecontext
ofthefeature.
ElementTrees:Principles ofFeatureCreation 763CallingProFeatureCreate()
Functionintroduced:
•ProFeatur eCreate()
ThesyntaxofProFeatureCreate() isasfollows:
ProError ProFeatureCreate (
ProSelection model, /*(In) The part onwhich
the
feature isbeing
created. Ifthe
feature
iscreated inan
assembly, you
must
specify the
component
path. */
ProElement elemtree, /*(In) The element tree.
*/
ProFeatureCreateOptions options[], /*(In) Anarray ofuser
options. */
int num_opts, /*(In) The number of
options
inthe options
array. */
ProFeature *p_feature, /*(Out) The feature
handle. */
ProErrorlist *p_errors /*(Out) The list of
errors. */
)
ThefirstinputargumenttoProFeatureCreate() identifiesthesolidthatisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthe options
array. */
ProFeature *p_feature, /*(Out) The feature
handle. */
ProErrorlist *p_errors /*(Out) The list of
errors. */
)
ThefirstinputargumenttoProFeatureCreate() identifiesthesolidthatis
tocontainthenewfeature.Thisisexpressed intheformofaProSelection
object.
Note
TheProSelection objectinputtoProFeatureCreate(), andallthe
ProSelection objectsassignedtoelementsinthefeatureelementtree,
mustallrefertothesamerootassembly.
ThesecondinputargumentistheProElement objectthatformstherootofthe
featureelementtree.
764 Creo®Parametric TOOLKIT User’sGuideThenexttwoinputsareanarrayofcreationoptionsandthesizeofthearray.The
creationoptionsspecifywhatProFeatureCreate()should doiftheelement
treeisincomplete, orifthegeometrycannotbeconstructed. Eachoptionisoneof
thefollowingvaluesoftheenumerated typeProFeatureCreateOptions:
•PRO_FEAT_CR_NO_OPTS—No optionswerechosen.
•PRO_FEAT_CR_DEFINE_MISS_ELEMS—Prompt theusertocompletethe
featureifanyelementsaremissing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefollowingvaluesoftheenumerated typeProFeatureCreateOptions:
•PRO_FEAT_CR_NO_OPTS—No optionswerechosen.
•PRO_FEAT_CR_DEFINE_MISS_ELEMS—Prompt theusertocompletethe
featureifanyelementsaremissing.
•PRO_FEAT_CR_INCOMPLETE_FEAT—Create thefeature,evenifsome
elementsaremissing.ThefeaturewillappearintheCreoParametric feature
listandmodeltree,butwillnotbeusedinregeneration.
•PRO_FEAT_CR_FIX_MODEL_ON_FAIL—If thefeaturegeometrycannot
beconstructed, prompttheusertofixtheproblem.
Ifnooptionsareneeded,youcansetthearraytoNULL,andthesizetozero.If
youdonotspecifyanyoptions, ProFeatureCreate() failsandreportserrors
iftheelementtreeisincomplete, orifthegeometrycannotbeconstructed.
Tocheckwhetherafeatureisincomplete, usethefunction
ProFeatureIsIncomplete().
ThenextargumentisanoutputthatprovidesaProFeature objectthat
identifiesthenewlycreatedfeature.
Thefinalargumentisanoutputthatreportserrorsfoundinthefeatureelement
tree.Thisisdesignedasanaidtoapplication developers becauseitisreportingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxidentifiesthenewlycreatedfeature.
Thefinalargumentisanoutputthatreportserrorsfoundinthefeatureelement
tree.Thisisdesignedasanaidtoapplication developers becauseitisreporting
errorsthatoccuronlyasaresultofincorrectapplication code;itisnotdesignedas
awayofreportingerrorstotheCreoParametric user.Theerrorsarewrittentoa
structurecalled ProErrorlist whosedeclaration, inProItemerr.h, isas
follows:
typedef struct
{
ProItemerror *error_list;
int error_number;
}ProErrorlist;
typedef struct
{
int err_item_id;
ProErritemType err_item_type;
ProError error;
}ProItemerror;
typedef enum ProErritemTypes
{
PRO_ERRITEM_NONE =-1,
PRO_ERRITEM_FEATELEM =1
}ProErritemType;
ElementTrees:Principles ofFeatureCreation 765Thefielderror_list isanarrayofalltheerrorsinthefeatureelementtree
foundbyProFeatureCreate(). Eacherrorhasavalueexpressed intermsof
thestandardCreoParametric TOOLKITerrortypeProError, andcanreferto
anelementofaspecifiedidentifier,orbeamoregeneralerror.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfoundbyProFeatureCreate(). Eacherrorhasavalueexpressed intermsof
thestandardCreoParametric TOOLKITerrortypeProError, andcanreferto
anelementofaspecifiedidentifier,orbeamoregeneralerror.
Note
•TherearemanyusefulutilitieslocatedintheCreoParametric TOOLKIT
samplecodeundertheCreoParametric TOOLKITloadpoint. Utilitiessuchas
ProUtilElementtreePrint() areparticularly usefulwhenbuilding
anddebugging elementtrees.
•FromPro/ENGINEER Wildfire5.0onward,thefunction
ProFeatureCreate() hasbeendeprecated. Instead,usethefunction
ProFeatureWithoptionsCreate() withitsinputargument flagssetto
PRO_REGEN_NO_FLAGS fortheequivalent behavior.
ProFeatureWithoptionsCreate() hasbeendescribedindetailinthe
Manipulating FeaturesbasedonRegeneration Flagsonpage140sectioninthe
Core:Featuresonpage130chapter.
ExampleofCompleteFeatureCreation
Thissectionillustratesallthetechniques explainedsofarinthischapterby
showingthecoderequiredtocreateadatumplaneinapartoranassembly.ThexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCore:Featuresonpage130chapter.
ExampleofCompleteFeatureCreation
Thissectionillustratesallthetechniques explainedsofarinthischapterby
showingthecoderequiredtocreateadatumplaneinapartoranassembly.The
datumplanecreatedhereisoffsetfromaplanesurface,andthereforehasthe
followingelementtree:
766 Creo®Parametric TOOLKIT User’sGuideExampleElementTree:OffsetDatumPlane
(ThefullelementtreefordatumplanefeaturesisdescribedinthechapterElement
Trees:DatumFeaturesonpage792.)
Inthecodeexamplesthatfollow,nochecksoffunctionreturnstatusesareshown,
forclarity.Novariabledeclarations areshown,butthestyleofthecodesamples
shouldmaketheseself-explanatory .
Theexampleassumesthatthedatumplaneisbeingcreatedbyautilityfunction
thathastwoinputsdescribing theoffsetsurfaceasaProSelection relativeto
thecurrentpartorassembly,andtheoffsetdistance,asfollows:
int ProDatumPlaneCreate (ProSelection offset_surface,
double offset_dist);
Thefirststepistocreatetheelementthatformstherootoftheelementtree.Thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxint ProDatumPlaneCreate (ProSelection offset_surface,
double offset_dist);
Thefirststepistocreatetheelementthatformstherootoftheelementtree.This
elementhastheelementIDPRO_E_FEATURE_TREE buthasnovalue,soitcan
becreatedsimplybyacalltoProElementAlloc():
/*---------------------------------------------------------------*
\
Create the root ofthe element tree.
\*----------------------------------------------------------------
*/
ProElementAlloc (PRO_E_FEATURE_TREE, &elem_tree);
Thefirstelementinsidetherootis,asforallfeatures,thefeaturetype.ItsIDis
PRO_E_FEATURE_TYPE, andithasthesinglevalue PRO_FEAT_DATUM. To
setthevalue,youmustfirstcreateaProValue objectoftypeinteger.
/*---------------------------------------------------------------*
\
ElementTrees:Principles ofFeatureCreation 767Allocate the feature type element.
\*----------------------------------------------------------------
*/
ProElementAlloc (PRO_E_FEATURE_TYPE, &elem_ftype);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:Principles ofFeatureCreation 767Allocate the feature type element.
\*----------------------------------------------------------------
*/
ProElementAlloc (PRO_E_FEATURE_TYPE, &elem_ftype);
/*---------------------------------------------------------------*
\
Set the value ofthe feature type element.
\*----------------------------------------------------------------
*/
value_data.type =PRO_VALUE_TYPE_INT;
value_data.v.i =PRO_FEAT_DATUM;
ProValueAlloc (&value);
ProValueDataSet (value, &value_data);
ProElementValueSet (elem_ftype, value);
/*---------------------------------------------------------------*
\
Add the feature type element asachild ofthe tree root.
\*----------------------------------------------------------------
*/
ProElemtreeElementAdd (elem_tree, NULL, elem_ftype);
Thenextelementissimplytheholderforthedatumplaneconstraints, andthisin
turncontainsasingleconstraint element(tobeusedfortheoffsetconstraint).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*/
ProElemtreeElementAdd (elem_tree, NULL, elem_ftype);
Thenextelementissimplytheholderforthedatumplaneconstraints, andthisin
turncontainsasingleconstraint element(tobeusedfortheoffsetconstraint).
/*---------------------------------------------------------------*
\
Add aPRO_E_DTMPLN_CONSTRAINTS element tothe root ofthe
tree.
\*----------------------------------------------------------------
*/
ProElementAlloc (PRO_E_DTMPLN_CONSTRAINTS, &elem_consts);
ProElemtreeElementAdd (elem_tree, NULL, elem_consts);
/*---------------------------------------------------------------*
\
Add aPRO_E_DTMPLN_CONSTRAINT element tothe constraints
element.
\*----------------------------------------------------------------
*/
ProElementAlloc (PRO_E_DTMPLN_CONSTRAINT, &elem_offset);
ProElemtreeElementAdd (elem_consts, NULL, elem_offset);
Insidethesingleconstraint element,addanelementoftypePRO_E_DTMPLN_
CONSTR_TYPE thatspecifiestheconstraint typetobePRO_DTMPLN_OFFS.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProElemtreeElementAdd (elem_consts, NULL, elem_offset);
Insidethesingleconstraint element,addanelementoftypePRO_E_DTMPLN_
CONSTR_TYPE thatspecifiestheconstraint typetobePRO_DTMPLN_OFFS.
/*---------------------------------------------------------------*
\
Allocate the constraint type element.
\*----------------------------------------------------------------
*/
ProElementAlloc (PRO_E_DTMPLN_CONSTR_TYPE,
&elem_const_type);
/*---------------------------------------------------------------*
\
768 Creo®Parametric TOOLKIT User’sGuideSet its value tobePRO_DTMPLN_OFFS.
\*----------------------------------------------------------------
*/
value_data.type =PRO_VALUE_TYPE_INT;
value_data.v.i =PRO_DTMPLN_OFFS;
ProValueAlloc (&value);
ProValueDataSet (value, &value_data);
ProElementValueSet (elem_const_type, value);
/*---------------------------------------------------------------*
\
Add itasamember ofthe constraint element.
\*----------------------------------------------------------------
*/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/*---------------------------------------------------------------*
\
Add itasamember ofthe constraint element.
\*----------------------------------------------------------------
*/
ProElemtreeElementAdd (elem_offset, NULL, elem_const_type);
Alsointheconstraint element,youneedanelementtoidentifythereferenceplane
surface, PRO_E_DTMPLN_CONSTR_REF, withvaluetypeProSelection.
/*---------------------------------------------------------------*
\
Allocate the offset reference element.
\*----------------------------------------------------------------
*/
ProElementAlloc (PRO_E_DTMPLN_CONSTR_REF, &elem_offset_ref);
/*---------------------------------------------------------------*
\
Set its value tobethe ProSelection for the offset
reference surface.
\*----------------------------------------------------------------
*/
value_data.type =PRO_VALUE_TYPE_SELECTION;
value_data.v.r =offset_surface;
ProValueAlloc (&value);
ProValueDataSet (value, &value_data);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*/
value_data.type =PRO_VALUE_TYPE_SELECTION;
value_data.v.r =offset_surface;
ProValueAlloc (&value);
ProValueDataSet (value, &value_data);
ProElementValueSet (elem_offset_ref, value);
/*---------------------------------------------------------------*
\
Add ittothe constraint element.
\*----------------------------------------------------------------
*/
ProElemtreeElementAdd (elem_offset, NULL, elem_offset_ref);
Finally,youneedanelementoftypePRO_E_DTMPLN_CONSTR_REF_OFFSET
tocontainthedoublevalueoftheoffsetdistance.
/*---------------------------------------------------------------*
\
Allocate the offset distance element.
\*----------------------------------------------------------------
*/
ProElementAlloc (PRO_E_DTMPLN_CONSTR_REF_OFFSET,
&elem_offset_dist);
ElementTrees:Principles ofFeatureCreation 769/*---------------------------------------------------------------*
\
Set its value tobethe offset distance.
\*----------------------------------------------------------------
*/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
Set its value tobethe offset distance.
\*----------------------------------------------------------------
*/
value_data.type =PRO_VALUE_TYPE_DOUBLE;
value_data.v.d =offset_dist;
ProValueAlloc (&value);
ProValueDataSet (value, &value_data);
ProElementValueSet (elem_offset_dist, value);
/*---------------------------------------------------------------*
\
Add ittothe constraint element.
\*----------------------------------------------------------------
*/
ProElemtreeElementAdd (elem_offset, NULL, elem_offset_dist);
Theelementtreeiscomplete.
ThenextstepistosetupaProSelection objectthatreferstothesolidin
whichyouwillcreatethedatumplane.
Youhavetheinformation aboutthecontext,intheformoftheProSelection
object,fortheoffsetsurfacethatwasaninputtothefunctionyouarewriting.The
component pathyouneedisthesameoneusedtospecifythatsurface.Thesolidto
containthenewfeatureistheonethatownstheoffsetsurface.Therefore, youcan
buildtheProSelection objectforitasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponent pathyouneedisthesameoneusedtospecifythatsurface.Thesolidto
containthenewfeatureistheonethatownstheoffsetsurface.Therefore, youcan
buildtheProSelection objectforitasfollows:
/*---------------------------------------------------------------*
\
Get the component path for the offset surface.
\*----------------------------------------------------------------
*/
ProSelectionAsmcomppathGet (offset_surface, &comppath);
/*---------------------------------------------------------------*
\
Get the model item for the offset surface.
\*----------------------------------------------------------------
*/
ProSelectionModelitemGet (offset_surface, &surf_modelitem);
/*---------------------------------------------------------------*
\
Make aProModelitem that refers tothe owner ofthe offset
surface.
\*----------------------------------------------------------------
*/
ProMdlToModelitem (surf_modelitem.owner, &model_modelitem);
/*---------------------------------------------------------------*
\xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\*----------------------------------------------------------------
*/
ProMdlToModelitem (surf_modelitem.owner, &model_modelitem);
/*---------------------------------------------------------------*
\
Make aProSelection for the solid that will contain the
new feature.
770 Creo®Parametric TOOLKIT User’sGuide\*----------------------------------------------------------------
*/
ProSelectionAlloc (&comppath, &model_modelitem, &featsel);
Iftheoffsetsurfacebelongstoapartinacurrentassembly,andyourfunctionis
requiredtoaddthedatumplanenottothepartbuttotheassembly,thecodeabove
wouldbereplacedbythis:
/*---------------------------------------------------------------*
\
Get the component path for the offset surface.
\*----------------------------------------------------------------
*/
ProSelectionAsmcomppathGet (offset_surface, &comppath);
/*---------------------------------------------------------------*
\
Make aProModelitem that refers tothe root ofthe assembly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*/
ProSelectionAsmcomppathGet (offset_surface, &comppath);
/*---------------------------------------------------------------*
\
Make aProModelitem that refers tothe root ofthe assembly.
\*----------------------------------------------------------------
*/
ProMdlToModelitem (comppath.owner, &model_modelitem);
/*---------------------------------------------------------------*
\
Make aProSelection for the root ofthe assembly.
\*----------------------------------------------------------------
*/
ProSelectionAlloc (NULL, &model_modelitem, &featsel);
Finally,callProFeatureCreate().
/*---------------------------------------------------------------*
\
Create the datum plane feature.
\*----------------------------------------------------------------
*/
ProFeatureCreate (featsel, elem_tree, NULL, 0,&feature,
&errors);
FeatureInquiry
Functions introduced:
•ProFeatur eElemtree Create()
•ProFeatur eElemtree Extract()
•ProFeatur eElemtree Free()
•ProFeatur eElemV alueGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&errors);
FeatureInquiry
Functions introduced:
•ProFeatur eElemtree Create()
•ProFeatur eElemtree Extract()
•ProFeatur eElemtree Free()
•ProFeatur eElemV alueGet()
•ProFeatur eElemV aluesGet()
•ProFeatur eElemDimensionIdGet()
•ProFeatur eElemIsV isible()
•ProFeatur eIsIncomplete()
ElementTrees:Principles ofFeatureCreation 771•ProFeatur eElemIsIncomplete()
Thissectiondescribeshowtoextracttheelementtreefromafeatureandanalyze
it.Tofindouthowtoinquireaboutthefeatureasawholeanditsroleinthe
owningsolid,seethesectionFeatureInquiryonpage771.intheCore:Featureson
page130.
Thefunction ProFeatureElemtreeCreate() createsacopyofthefeature
elementtreethatdescribesthecontentsofaspecifiedfeatureintheCreo
Parametric database.Itisapplicable onlytothosefeaturetypesthatcanbecreated
using ProFeatureCreate() (asdescribedinOverview ofFeatureCreation
onpage750).Thetreecanthenbeanalyzedusingtheread-access functions, such
asProElement*Get(),ProElement*Visit(), andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusing ProFeatureCreate() (asdescribedinOverview ofFeatureCreation
onpage750).Thetreecanthenbeanalyzedusingtheread-access functions, such
asProElement*Get(),ProElement*Visit(), and
ProElementArrayCount() describedinthesectionsFeatureElementson
page759andFeatureElementPathsonpage757.
Note
Thefunction ProFeatureElemtreeCreate() hasbeendeprecated asit
doesnotprovideoptionstoresolvethepathsofexternalreferences ofthe
featureincaseofassemblies. UseProFeatureElemtreeExtract()
instead.
Thefunction ProFeatureElemtreeExtract() createsacopyofthefeature
elementtreeofaspecifiedfeature.Italsoprovidesoptionstoresolvethepathsof
externalreferences ofthefeatureincaseofassemblies.
Usethefunction ProFeatureElemtreeFree()to freeacopyofthefeature
elementtreeextractedusing
ProFeatureElemtreeCreate()ProFeatureElemtreeExtract().
Thefunction ProElementFree() doesnotfreeallofthefeature-specific
runtimedataassociated withtheelementtree,andthuscanresultinamemory
leakforcertainfeatures.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProElementFree() doesnotfreeallofthefeature-specific
runtimedataassociated withtheelementtree,andthuscanresultinamemory
leakforcertainfeatures.
Insteadofcopyingtheentireelementtreetoanalyzeit,youcanextract
information aboutparticularelementsdirectlyfromthefeature.Theremaining
functionsinthissectionservethatpurpose.
Thefunction ProFeatureElemValueGet() providesthevalueofasingle-
valuedelementspecifiedbytheProFeature objectandaProElempath. The
function ProFeatureElemValuesGet() providesthevaluesofa
multivalued elementinafeature.
Thefunction ProFeatureElemDimensionIdGet() givesyoutheinteger
identifierofthedimension intheCreoParametric databaseusedtodefinethe
valueofthespecifiedsingle-valued element.
772 Creo®Parametric TOOLKIT User’sGuideThefunction ProFeatureElemIsVisible() distinguishes elementsadded
tothetreebyCreoParametric forinternalreasonsonly,andareneitherdefinedas
neededforcreationofthattypeoffeature,norotherwisedocumented.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtothetreebyCreoParametric forinternalreasonsonly,andareneitherdefinedas
neededforcreationofthattypeoffeature,norotherwisedocumented.
Thefunction ProFeatureIsIncomplete() identifiesfeaturesintheCreo
Parametric databasewhoseelementtreesarestillincomplete. Suchafeaturecan
arisebyusingtheoption PRO_FEAT_CR_INCOMPLETE_FEAT whencalling
ProFeatureCreate(), anddoesnotgiverisetogeometryuntilcompleted. If
afeatureisincomplete, youcanfindoutwhichelementinitstreeisatfaultusing
thefunction ProFeatureElemIsIncomplete(). Itsinputisa
ProFeature andaProElempath.
FeatureRedefine
Functionintroduced:
•ProFeatur eRedefine()
Thefunction ProFeatureRedefine() enablesyoutoredefineafeature.Itis
applicable onlytothosefeaturetypesthatcanbecreatedusing
ProFeatureCreate().
Thefunction ProFeatureRedefine() hasargumentsforthecreateoptions
andfortheresultingelementerrors,likethoseforProFeatureCreate()
ToRedefineaFeature
1.CallProFeatureElemtreeExtract() togetacopyoftheelementtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandfortheresultingelementerrors,likethoseforProFeatureCreate()
ToRedefineaFeature
1.CallProFeatureElemtreeExtract() togetacopyoftheelementtree.
2.Analyzeandmodifythetreeusingfunctions ProFeatureElem*(),
ProElement*(), andProElempath*()
3.CallProFeatureRedefine() toreplacetheoldelementtreewiththe
newone.
XMLRepresentation ofFeatureElement
Trees
CreoParametric TOOLKIToffersthecapability ofrepresenting mostfeature
elementtreesintheXMLformat.TheXMLrepresentation ofelementtrees
simplifies theprocedure ofusingCreoParametric TOOLKITaccesstoCreo
Parametric features.TheCreoParametric TOOLKITAPI’sthataccesstheXML
forelementtreesarecapableofconverting theXMLcontenttoandfroman
elementtreestructure(ProElement.)
ElementTrees:Principles ofFeatureCreation 773InPro/ENGINEER Wildfire2.0,PTCrecommends theuseofXMLrepresentation
forthecorePro/ENGINEER featuresandforthenewsheetmetal wallfeatures.
Manufacturing featuressupportisnotavailableinthisrelease.
Introduction toFeatureElementTreesinXMLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforthecorePro/ENGINEER featuresandforthenewsheetmetal wallfeatures.
Manufacturing featuressupportisnotavailableinthisrelease.
Introduction toFeatureElementTreesinXML
InCreoParametric TOOLKIT, theaccesstoCreoParametric featuresisavailable
usingagenericdata-structure calledelementtree.Youcanusetheelementtree
APIstoquery,modify,andredefinetheCreoParametric features.Tosimplifythe
accesstoCreoParametric featureusingCreoParametric TOOLKIT,theconcept
ofXMLrepresentation oftheelementtreeshasbeenintroduced. TheXML
representation showsthedetailsoftheelementtreeintextformat.TheXMLfiles
areeasytoeditandyoucanrecyclethembacktocreateortoredefinefeatures.All
theCreoParametric TOOLKITsupported featureshavesupportfortheir
respective XMLrepresentations.
Thefunction ProElemtreeWrite() writestheXMLversionoftheelement
treeinatextfileandthefunction ProElemtreeFromXMLCreate() isused
toconverttheXMLversionfromatextfiletotheCreoParametric TOOLKIT
nativeelementtrees.
Functions Introduced:
•ProElemtre eWrite()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtreeinatextfileandthefunction ProElemtreeFromXMLCreate() isused
toconverttheXMLversionfromatextfiletotheCreoParametric TOOLKIT
nativeelementtrees.
Functions Introduced:
•ProElemtre eWrite()
•ProElemtre eFromXMLCre ate()
•ProXmlerro rlistPr oarrayFr ee()
Thefunction ProElemtreeWrite() writesthefeatureelementtreeinXML
formattothespecifiedfile.ThisfunctionusestheCreoParametric TOOLKIT
nativeelementtreeasaninput.Thetypeofoutputrequiredshouldbespecified.
CurrentlyonlyXMLformatfortheoutputissupported. Theonlyoutputargument
isthenameoftheoutputfileincludedwiththelocationandtheextension.
Thefunction ProElemtreeFromXMLCreate() readsintheXMLfileand
convertsintoacorresponding CreoParametric TOOLKITnativeelementtree.
ThisfunctiontakesthenamewithlocationoftheoutputXMLfileasaninputand
returnsthegeneratedelementtreeastheoutput.
ThecreatedelementtreecanbeusedasaninputtoProFeatureCreate or
ProFeatureRedefine.
Incaseoferrorinexecutionofthisfunction,anerrorobjectsispopulated andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreturnsthegeneratedelementtreeastheoutput.
ThecreatedelementtreecanbeusedasaninputtoProFeatureCreate or
ProFeatureRedefine.
Incaseoferrorinexecutionofthisfunction,anerrorobjectsispopulated and
returned.ThiserrorobjectisaProArrayoferrors.Itcontainstheinformation like
typeoftheerror,pathoftheXMLfile,linenumber,columnnumber,andtheerror
message.Thememoryfortheerrorobjectisallocatedbythefunctionisrequired
tobefreedintheCreoParametric TOOLKITapplication using
ProXmlerrorlistProarrayFree(). Thefunctionhasthreelevelsoferror
onthebasisoftheseveritywarning,generalerrorandfatalerror.Upon
774 Creo®Parametric TOOLKIT User’sGuideencountering warningandgeneralerrors,thefunctioncontinuesparsingtheinput
XMLtilltheendandcollectsalltheerrorsintheerrorobject.Forafatalerror,the
functionstopstheparsingandreturnsimmediately .
ValidationUsingXMLSchema
XMLschemasareusedforvalidation ofelementtreewhichisusedforfeature
creation.ElementtreeintheformofXMLrepresentations arevalidatedandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxValidationUsingXMLSchema
XMLschemasareusedforvalidation ofelementtreewhichisusedforfeature
creation.ElementtreeintheformofXMLrepresentations arevalidatedand
passedtoProFeatureCreate() andProFeatureRedefine().
TousetheSchemavalidation, thefollowingconfigoptionmustbeset
TheXMLSchemadefinesthestructureanddatatypeforXML.Theelement
nameiscompared withtheelementspecifiedinschemaforvalidation. Inthecase
ofcompound elements,validation isdoneforname,orderandnumberofthesub-
elements.TheSchemavalidatestheaccuracyofdatatobepassedasitsupports
thedatatypeoftheelement.TheSchemaalsocheckswhethertheelementis
optionalorcompulsory .
ThelocationoftheSchemais<install_dir>/proe/xmlelem/schema/
ProTKFeature.xsd containstherepresentation ofdifferentfeatureelement.
ProTKObjects.xsd containstherepresentation ofbasicandCreoParametric
TOOLKITobjects.
Theschemavalidation ofelementtreetakesplaceiftheconfigoption enable_
protk_xml_schema issetto"yes"beforepassingXMLfileto
ProElemtreeFromXMLCreate().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKITobjects.
Theschemavalidation ofelementtreetakesplaceiftheconfigoption enable_
protk_xml_schema issetto"yes"beforepassingXMLfileto
ProElemtreeFromXMLCreate().
Ifthevalidation fails,thecorresponding errorispopulated intotheerrorobject
whichcanbeprintedoutandcanbeusedtocorrecttheinputXMLfile.Theerror
objectcontainsthelinenumber,columnnumberandtheerrormessageasdebug
information.
ThefollowingisanexampleofSchemaforSolidifyFeature:
<xsd:sequence>
<xsd:element name="PRO_E_FEATURE_TYPE"
type="StringData"
minOccurs="1" maxOccurs="1"/>
<xsd:element name="PRO_E_FEATURE_FORM" type="StringData"
minOccurs="1" maxOccurs="1"/>
<xsd:element name="PRO_E_PATCH_QUILT" type="Selection"
minOccurs="1" maxOccurs="1"/>
<xsd:element name="PRO_E_PATCH_TYPE" type="IntegerData"
minOccurs="0" maxOccurs="1"/>
<xsd:element name="PRO_E_PATCH_MATERIAL_SIDE" type=
"IntegerData"
minOccurs="0" maxOccurs="1"/>
<xsd:element name="PRO_E_STD_FEATURE_NAME" type="StringData"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxminOccurs="0" maxOccurs="1"/>
<xsd:element name="PRO_E_PATCH_MATERIAL_SIDE" type=
"IntegerData"
minOccurs="0" maxOccurs="1"/>
<xsd:element name="PRO_E_STD_FEATURE_NAME" type="StringData"
ElementTrees:Principles ofFeatureCreation 775minOccurs="0" maxOccurs="1"/>
</xsd:sequence>
<!-- End Solidify -->
Following codedemonstrate howtousetheerrorobjecttoprinttheinformation
status =ProElemtreeFromXMLCreate (input_file, &elemtree, &errors
);
if((status ==PRO_TK_GENERAL_ERROR )||(status == PRO_TK_
BAD_CONTEXT ))
{
printf ("ProElemtreeFromXMLCreate FAILURE :: %d\n", status );
status =ProArraySizeGet (errors, &size_errors );
printf("Size ofthe Error Object is%d\n", size_errors);
printf("Content ofthe Error Object are \n");
for (error_count =0;error_count <size_errors; error_count++
)
{
printf("Error No =%d\n", error_count);
printf("\t+ Error Type =%d\n", errors[error_count].error_
type );
if(status ==PRO_TK_GENERAL_ERROR )
{
printf("\t+ Error Path =%s\n",xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
{
printf("Error No =%d\n", error_count);
printf("\t+ Error Type =%d\n", errors[error_count].error_
type );
if(status ==PRO_TK_GENERAL_ERROR )
{
printf("\t+ Error Path =%s\n",
ProWstringToString (temp_string, errors[error_count].
error_source ));
printf("\t+ Line No =%d\n", errors[error_count].line_
number);
printf("\t+ Column No =%d\n", errors[error_count].
column_number);
}
else if(status ==PRO_TK_BAD_CONTEXT )
{
printf("\t+ Element SrNo =%d\n",
errors[error_count].line_number);
printf("\t+ Element ID =%d\n",
errors[error_count].column_number);
}
ProWstringLengthGet (errors[error_count].message,
&string_length );
temp_message_string =(char *)calloc (1,(string_length+1) *
sizeof (char) );
printf("\t+ Error Message =%s\n",
ProWstringToString (temp_message_string,
errors[error_count].message ));
free (temp_message_string );
}
}
Thelistoffeaturessupported forXMLschemavalidation areasfollows:
776 Creo®Parametric TOOLKIT User’sGuideFeatureType FeatureNamexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxerrors[error_count].message ));
free (temp_message_string );
}
}
Thelistoffeaturessupported forXMLschemavalidation areasfollows:
776 Creo®Parametric TOOLKIT User’sGuideFeatureType FeatureName
PRO_FEAT_DATUM_AXIS DatumAxisFeature
PRO_FEAT_DATUM DatumPlaneFeature
PRO_FEAT_CSYS DatumCoordinate SystemFeature
PRO_FEAT_CURVE DatumCurveFeature
PRO_FEAT_DATUM_POINT DatumPointFeature
PRO_FEAT_CHAMFER ChamferFeature
PRO_FEAT_ROUND RoundFeature
PRO_FEAT_DRAFT DraftFeature
PRO_FEAT_HOLE HoleFeature
PRO_FEAT_WALL Sheetmetal FlatorFlangeWallFeature
PRO_FEAT_COMPONENT Assembly Component Feature
PRO_FEAT_DATUM_QUILT SurfaceMergeFeature
PRO_FEAT_PATCH SolidifyFeatureofthetypePatch
PRO_FEAT_GEN_MERGE GeneralMergeFeature
PRO_FEAT_SRF_MDL MirrororMoveFeature
PRO_FEAT_PROTRUSION SolidifyFeatureofthetypeProtrusion
PRO_FEAT_SHELL ShellFeature
PRO_FEAT_FIRST_FEAT FirstFeature
PRO_FEAT_CUT SolidifyFeatureofthetypeCut
PRO_FEAT_SLOT SlotFeature
PRO_FEAT_GEOM_COPY CopyGeometry Feature
PRO_FEAT_RIB RibFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_FEAT_SHELL ShellFeature
PRO_FEAT_FIRST_FEAT FirstFeature
PRO_FEAT_CUT SolidifyFeatureofthetypeCut
PRO_FEAT_SLOT SlotFeature
PRO_FEAT_GEOM_COPY CopyGeometry Feature
PRO_FEAT_RIB RibFeature
PRO_FEAT_REPLACE_SURF ReplaceSurfaceFeature
XMLRepresentations forCommonElements
ThefollowingsectiongivesdetailsabouttheXMLrepresentation ofthecommon
elements.Theelementscanrepresentaprimitivetypee.g.anintegerorsome
complexCreoParametric TOOLKITobjecte.g.ProReference or
ProCollection. Thepurposeofthisrepresentation istoenableexternalize
theseobjectsinamodelspecifictextformat.TheexamplesoftheXML
representations arealsoprovidedforeasierunderstanding.
SingleValuedElement
AsinglevaluedelementcontainsanelementoftypeInteger,Double,String,or
Boolean.ItsvaluewillbeshownastheXMLtags.Forexample:
<PRO_E_REV_ANGLE_FROM_VAL type="double">0.00</PRO_E_REV_ANGLE_
FROM_VAL>
ElementTrees:Principles ofFeatureCreation 777EmptyorOptionalElement
AnemptyelementinXMLdoesnothaveanydatavalue,butjusttheopeningandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFROM_VAL>
ElementTrees:Principles ofFeatureCreation 777EmptyorOptionalElement
AnemptyelementinXMLdoesnothaveanydatavalue,butjusttheopeningand
closingXMLtags.Emptyelementsareignoredby
ProElemtreeFromXMLCreate(). Unusedoptional elementsinthefeature’s
elementtreeappearasemptyintheXMLoutputfromProElemtreeWrite().
<PRO_E_REV_ANGLE_FROM_REF type="selection" />
OR
<PRO_E_REV_ANGLE_FROM_REF type="selection"></PRO_E_REV_ANGLE_FROM_
REF type>
XMLRepresentation forProSelection orProReference
Thisrepresents thecontentsoftheProSelection orProReference object.
Ifthereferenceiscurrentlynotactiveorfullyavailable,thereferenceisincluded.
Consultthefunction ProReferenceStatusGet() formoreinformation.The
referenceXMLincludesdetailslikeUVparameters and3Dpointforspecific
elementsthatrequirethem.Theassemblycomponent pathwillbeavailablefor
references thatincludetheassemblycontext.
<PRO_E_DPOINT_PLA_CONSTR_REF type="selection">
<PRO_XML_REFERENCE type="reference">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementsthatrequirethem.Theassemblycomponent pathwillbeavailablefor
references thatincludetheassemblycontext.
<PRO_E_DPOINT_PLA_CONSTR_REF type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_STATUS type=“int”>PRO_REF_NOT_FOUND</PRO_XML_
REFERENCE_STATUS>
<PRO_XML_REFERENCE_OWNER type="owner">COMP2.prt</PRO_XML_
REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">46</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_EDGE</PRO_XML_
REFERENCE_TYPE>
<PRO_XML_ASMCOMP_PATH comppath="compound">
<PRO_XML_ASMCOMP_PATH_OWNER type="model">ASM_PNT.asm</PRO_XML_
ASMCOMP_PATH_OWNER>
<PRO_XML_ASMCOMP_PATH_ARRAY type="array">
<PRO_XML_ASMCOMP_PATH_ITEM index="1">40</PRO_XML_ASMCOMP_PATH_
ITEM>
</PRO_XML_ASMCOMP_PATH_ARRAY>
</PRO_XML_ASMCOMP_PATH>
<PRO_XML_UV_PARAM uv_parameter="array">
<PRO_XML_DOUBLE_VALUE type="u">0.000000</PRO_XML_DOUBLE_VALUE>
<PRO_XML_DOUBLE_VALUE type="v">0.000000</PRO_XML_DOUBLE_VALUE>
</PRO_XML_UV_PARAM>
</PRO_XML_REFERENCE>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<PRO_XML_DOUBLE_VALUE type="u">0.000000</PRO_XML_DOUBLE_VALUE>
<PRO_XML_DOUBLE_VALUE type="v">0.000000</PRO_XML_DOUBLE_VALUE>
</PRO_XML_UV_PARAM>
</PRO_XML_REFERENCE>
</PRO_E_DPOINT_PLA_CONSTR_REF>
XMLRepresentation forProCollection
Thisrepresents thecontentsoftheProCollection object.Collection type,
collection instructions, instruction types,references, referencetypesaresomeof
thecontents.Theseareclassifiedintosurfaceandcurvecollections. Surface
collection represents asetofsurfacesinthemodelgovernedbyruleslikeseedand
778 Creo®Parametric TOOLKIT User’sGuideboundary.Curvecollection represents asetofedgesorcurvesinthemodel
governedbyruleslikeone-by-one, surface-loop etc.Theinstruction typeforthe
particularcollection identifiestherule.
CurveCollection
<PRO_E_STD_CURVE_COLLECTION_APPL type="collection">
<PRO_XML_COLLECTION type="curve">
<PRO_XML_COLLECTION_INSTRUCTIONS type="array">
<PRO_XML_COLLECTION_INSTRUCTION type="compound">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCurveCollection
<PRO_E_STD_CURVE_COLLECTION_APPL type="collection">
<PRO_XML_COLLECTION type="curve">
<PRO_XML_COLLECTION_INSTRUCTIONS type="array">
<PRO_XML_COLLECTION_INSTRUCTION type="compound">
<PRO_XML_COLLECTION_INSTRUCTION_TYPE type="int">105</PRO_XML_
COLLECTION_
INSTRUCTION_TYPE>
<PRO_XML_CRVCOLL_REFS type="array">
<PRO_XML_CRVCOLL_REF type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">CRV_COLLECTION_PART.prt
</PRO_XML_REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">703</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_QUILT</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_XML_CRVCOLL_REF>
<PRO_XML_CRVCOLL_REF type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">CRV_COLLECTION_PART.prt
</PRO_XML_REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">679</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_EDGE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</PRO_XML_REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">679</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_EDGE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_XML_CRVCOLL_REF>
</PRO_XML_CRVCOLL_REFS>
</PRO_XML_COLLECTION_INSTRUCTION>
</PRO_XML_COLLECTION_INSTRUCTIONS>
</PRO_XML_COLLECTION>
</PRO_E_STD_CURVE_COLLECTION_APPL>
SurfaceCollection
<PRO_E_STD_SURF_COLLECTION_APPL type="collection">
<PRO_XML_COLLECTION type="surface">
<PRO_XML_COLLECTION_INSTRUCTIONS type="array">
<PRO_XML_COLLECTION_INSTRUCTION type="compound">
<PRO_XML_COLLECTION_INSTRUCTION_TYPE type="int">2
</PRO_XML_COLLECTION_INSTRUCTION_TYPE>
<PRO_XML_SRFCOLL_INCLUDE type="boolean">1</PRO_XML_SRFCOLL_
INCLUDE>
<PRO_XML_SRFCOLL_REFS type="array">
<PRO_XML_SRFCOLL_REF type="compound">
ElementTrees:Principles ofFeatureCreation 779<PRO_XML_SRFCOLL_REFITEM_TYPE type="int">3</PRO_XML_SRFCOLL_
REFITEM_TYPE>
<PRO_XML_SRFCOLL_REFITEM type="selection">
<PRO_XML_REFERENCE type="reference">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:Principles ofFeatureCreation 779<PRO_XML_SRFCOLL_REFITEM_TYPE type="int">3</PRO_XML_SRFCOLL_
REFITEM_TYPE>
<PRO_XML_SRFCOLL_REFITEM type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">
SRF_COLLECTION_PART.prt</PRO_XML_REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">17</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_XML_SRFCOLL_REFITEM>
</PRO_XML_SRFCOLL_REF>
<PRO_XML_SRFCOLL_REF type="compound">
<PRO_XML_SRFCOLL_REFITEM_TYPE type="int">4</PRO_XML_SRFCOLL_
REFITEM_TYPE>
<PRO_XML_SRFCOLL_REFITEM type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">
SRF_COLLECTION_PART.prt</PRO_XML_REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">26</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_
XML_REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_XML_SRFCOLL_REFITEM>
</PRO_XML_SRFCOLL_REF>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_
XML_REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_XML_SRFCOLL_REFITEM>
</PRO_XML_SRFCOLL_REF>
</PRO_XML_SRFCOLL_REFS>
</PRO_XML_COLLECTION_INSTRUCTION>
</PRO_XML_COLLECTION_INSTRUCTIONS>
</PRO_XML_COLLECTION>
</PRO_E_STD_SURF_COLLECTION_APPL>
PointerElement
Mostpointerelementsarewrittenwiththeirvalueappearing as“**”.Elements
withthisvaluetypearenotsupported byProElemtreeFromXMLCreate()
(thiselementisnotaddedtothecreatedelementtree.)Themostcommonpointer
elementofthistypeistheCreoParametric sketchelement PRO_E_SKETCHER.
<PRO_E_SKETCHER type="pointer">**</PRO_E_SKETCHER>
Compound Element
Acompound elementrepresents acollection ofdifferenttypesofsub-elements.
Following isanexampleinXMLformat.
<PRO_E_REV_ANGLE type="compound">
<PRO_E_REV_ANGLE_FROM type="compound">
<PRO_E_REV_ANGLE_FROM_TYPE type="int">262144</PRO_E_REV_
ANGLE_FROM_TYPE>
<PRO_E_REV_ANGLE_FROM_VAL type="double">0.00</PRO_E_REV_
ANGLE_FROM_VAL>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<PRO_E_REV_ANGLE_FROM type="compound">
<PRO_E_REV_ANGLE_FROM_TYPE type="int">262144</PRO_E_REV_
ANGLE_FROM_TYPE>
<PRO_E_REV_ANGLE_FROM_VAL type="double">0.00</PRO_E_REV_
ANGLE_FROM_VAL>
<PRO_E_REV_ANGLE_FROM_REF type="selection" />
780 Creo®Parametric TOOLKIT User’sGuide<PRO_E_REV_ANGLE_FROM_LIMIT type="int">0</PRO_E_REV_ANGLE_
FROM_LIMIT>
</PRO_E_REV_ANGLE_FROM>
<PRO_E_REV_ANGLE_TO type="compound">
<PRO_E_REV_ANGLE_TO_TYPE type="int">4194304</PRO_E_REV_
ANGLE_TO_TYPE>
<PRO_E_REV_ANGLE_TO_VAL type="double">120.00</PRO_E_REV_
ANGLE_TO_VAL>
<PRO_E_REV_ANGLE_TO_REF type="selection" />
<PRO_E_REV_ANGLE_TO_LIMIT type="int">0</PRO_E_REV_ANGLE_
TO_LIMIT>
</PRO_E_REV_ANGLE_TO>
</PRO_E_REV_ANGLE>
ArrayElement
Anarrayelementrepresents acollection ofelementsofthesametype.Following
isanexampleofanarrayofPRO_E_RNDCH_RADIUS elementsinXMLformat.
<PRO_E_RNDCH_RADII type="array">
<PRO_E_RNDCH_RADIUS type="compound">
<PRO_E_STD_POINT_COLLECTION_APPL type="selection">
<PRO_XML_REFERENCE type="reference">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<PRO_E_RNDCH_RADII type="array">
<PRO_E_RNDCH_RADIUS type="compound">
<PRO_E_STD_POINT_COLLECTION_APPL type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">K01_X_COLLECTION_PART.prt
</PRO_XML_REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">1268</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_CRV_END</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_E_STD_POINT_COLLECTION_APPL>
<PRO_E_RNDCH_LEG1 type="compound">
<PRO_E_RNDCH_LEG_TYPE type="int">1</PRO_E_RNDCH_LEG_TYPE>
<PRO_E_RNDCH_LEG_VALUE type="double">36.00</PRO_E_RNDCH_LEG_VALUE>
<PRO_E_RNDCH_REFERENCE_EDGE type="selection" />
<PRO_E_RNDCH_REFERENCE_POINT type="selection" />
</PRO_E_RNDCH_LEG1>
<PRO_E_RNDCH_LEG2 type="compound">
<PRO_E_RNDCH_LEG_TYPE type="int">0</PRO_E_RNDCH_LEG_TYPE>
<PRO_E_RNDCH_LEG_VALUE type="double">0.00</PRO_E_RNDCH_LEG_VALUE>
<PRO_E_RNDCH_REFERENCE_EDGE type="selection" />
<PRO_E_RNDCH_REFERENCE_POINT type="selection" />
</PRO_E_RNDCH_LEG2>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<PRO_E_RNDCH_LEG_VALUE type="double">0.00</PRO_E_RNDCH_LEG_VALUE>
<PRO_E_RNDCH_REFERENCE_EDGE type="selection" />
<PRO_E_RNDCH_REFERENCE_POINT type="selection" />
</PRO_E_RNDCH_LEG2>
</PRO_E_RNDCH_RADIUS>
<PRO_E_RNDCH_RADIUS type="compound">
<PRO_E_STD_POINT_COLLECTION_APPL type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">K01_X_COLLECTION_PART.prt
</PRO_XML_REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">1268</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_CRV_START</PRO_XML_
REFERENCE_TYPE>
ElementTrees:Principles ofFeatureCreation 781</PRO_XML_REFERENCE>
</PRO_E_STD_POINT_COLLECTION_APPL>
<PRO_E_RNDCH_LEG1 type="compound">
<PRO_E_RNDCH_LEG_TYPE type="int">1</PRO_E_RNDCH_LEG_TYPE>
<PRO_E_RNDCH_LEG_VALUE type="double">55.39</PRO_E_RNDCH_LEG_VALUE>
<PRO_E_RNDCH_REFERENCE_EDGE type="selection" />
<PRO_E_RNDCH_REFERENCE_POINT type="selection" />
</PRO_E_RNDCH_LEG1>
<PRO_E_RNDCH_LEG2 type="compound">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<PRO_E_RNDCH_REFERENCE_EDGE type="selection" />
<PRO_E_RNDCH_REFERENCE_POINT type="selection" />
</PRO_E_RNDCH_LEG1>
<PRO_E_RNDCH_LEG2 type="compound">
<PRO_E_RNDCH_LEG_TYPE type="int">0</PRO_E_RNDCH_LEG_TYPE>
<PRO_E_RNDCH_LEG_VALUE type="double">0.00</PRO_E_RNDCH_LEG_VALUE>
<PRO_E_RNDCH_REFERENCE_EDGE type="selection" />
<PRO_E_RNDCH_REFERENCE_POINT type="selection" />
</PRO_E_RNDCH_LEG2>
</PRO_E_RNDCH_RADIUS>
</PRO_E_RNDCH_RADII>
Multivalued Element
Themulti-valued elementrepresents anarrayofsametypesofelements.The
differencebetweenthearrayandmulti-valued elementsliesintheCreo
Parametric TOOLKIThandlingoftheseelements.IntheXMLformatboththe
representations aresimilar.
<PRO_E_SHELL_SRF type="multivalue">
<PRO_E_SHELL_SRF_MULTI type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">X_SHELL_REDEF.prt</PRO_XML_
REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">76</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxREFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">76</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_E_SHELL_SRF_MULTI>
<PRO_E_SHELL_SRF_MULTI type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">X_SHELL_REDEF.prt</PRO_XML_
REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">72</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_E_SHELL_SRF_MULTI>
<PRO_E_SHELL_SRF_MULTI type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">X_SHELL_REDEF.prt</PRO_XML_
REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">68</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
782 Creo®Parametric TOOLKIT User’sGuide</PRO_E_SHELL_SRF_MULTI>
</PRO_E_SHELL_SRF>
TipsforRecyclingXMLOutputofElementTreesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxREFERENCE_TYPE>
</PRO_XML_REFERENCE>
782 Creo®Parametric TOOLKIT User’sGuide</PRO_E_SHELL_SRF_MULTI>
</PRO_E_SHELL_SRF>
TipsforRecyclingXMLOutputofElementTrees
TheeasiestwaytocreateanXMLfileforanyfeatureelementtreeistocall
ProFeatureElemtreeExtract() followedbyProElemtreeWrite().
Thept_userguideapplication includesthiscapability.Whilerunningthis
application, selectafeature.ClicktherightmousebuttonandchooseExportXML.
TheoutputXMLproducedcanbeusedandreusedwithmodifications bypassing
ittoProElemtreeFromXMLCreate() tocreateanelementtree.The
resultingelementtreecanbeusedfornewfeaturecreationorredefinition ofan
existingfeature.Thefollowingtipswouldhelpeasierreuseandunderstanding
failures.
•CreoParametric modelscanhaveonlyasinglefeaturewithaspecificname-
beforeusingtheXMLforcreatinganewfeature,modifythevalueofthe
element PRO_E_STD_FEATURE_NAME appropriately .Since,featurenameis
anoptionalelement,theXMLtagforthiselementcanbedeletedfromthe
XMLfiletopromotereuse.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelement PRO_E_STD_FEATURE_NAME appropriately .Since,featurenameis
anoptionalelement,theXMLtagforthiselementcanbedeletedfromthe
XMLfiletopromotereuse.
•Thefunction ProElemtreeWrite() writesalloftheelementsintheinput
CreoParametric TOOLKITnativeelementtree.Optionalelementswithempty
datawithinXMLtagsfromtheXMLfilecanberemovedbeforereusingthe
XMLfile.Itisalsopermittedtokeeptheoptionalelementsastheyareinthe
XML,buttheseelementsareignoredby
ProElemtreeFromXMLCreate().
•ProElemtreeFromXMLCreate() convertstheXMLfiletoanelement
treewithoutvalidating thatthedataisappropriate forthatfeaturetype(for
example,ensuringthatthecorrecttypeisselectedforreferences.) Theerroris
detectedwhentheelementtreeisusedbyProFeatureCreate() or
ProFeatureRedefine().
•ProElemtreeFromXMLCreate() supportssomeenumerated symbolsor
theactualintegervalues.UsetheoutputXMLfileasaguidetoseewhich
enumerated typenamesareaccepted.
•ThetagnamesusedintheXMLrepresentation arederivedfromthelistofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheactualintegervalues.UsetheoutputXMLfileasaguidetoseewhich
enumerated typenamesareaccepted.
•ThetagnamesusedintheXMLrepresentation arederivedfromthelistof
ProElemId fromProElemId.h.These namesmustbeusedexactlyas
foundintheProElemId.h file.
•XMLfilescreatedbyoneversionofCreoParametric arenotguaranteed tobe
usablebyotherCreoParametric versions,becausethestructureoftheelement
treealsochangebetweenversions.
ElementTrees:Principles ofFeatureCreation 783ASampleElementTreeinXMLforaShellFeature
<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML File for shell feature -->
<PRO_E_FEATURE_TREE AppName="Creo Parametric" AppVersion="2003440"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:noNamespaceSchemaLocation="ProTKFeature.xsd" type="compound">
<PRO_E_FEATURE_TYPE type="int">PRO_FEAT_SHELL</PRO_E_FEATURE_
TYPE>
<PRO_E_STD_FEATURE_NAME type="wstring">SHELL</PRO_E_STD_FEATURE_
NAME>
<PRO_E_SHELL_SRF type="multivalue">
<PRO_E_SHELL_SRF_MULTI type="selection">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPE>
<PRO_E_STD_FEATURE_NAME type="wstring">SHELL</PRO_E_STD_FEATURE_
NAME>
<PRO_E_SHELL_SRF type="multivalue">
<PRO_E_SHELL_SRF_MULTI type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">X_SHELL.prt</PRO_XML_
REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">76</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_E_SHELL_SRF_MULTI>
</PRO_E_SHELL_SRF>
<PRO_E_SHELL_THICK type="double">4.02</PRO_E_SHELL_THICK>
<PRO_E_SHELL_FLIP type="int">1</PRO_E_SHELL_FLIP>
<PRO_E_ST_SHELL_LOCL_LIST type="array">
<PRO_E_ST_SHELL_LOCL_CMPD type="compound">
<PRO_E_ST_SHELL_SPEC_SRF type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">X_SHELL.prt</PRO_XML_
REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">53</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_E_ST_SHELL_SPEC_SRF>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxREFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">53</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_E_ST_SHELL_SPEC_SRF>
<PRO_E_ST_SHELL_SPEC_THCK type="double">10.00</PRO_E_ST_SHELL_
SPEC_THCK>
</PRO_E_ST_SHELL_LOCL_CMPD>
<PRO_E_ST_SHELL_LOCL_CMPD type="compound">
<PRO_E_ST_SHELL_SPEC_SRF type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">X_SHELL.prt</PRO_XML_
REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">66</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_E_ST_SHELL_SPEC_SRF>
<PRO_E_ST_SHELL_SPEC_THCK type="double">9.00</PRO_E_ST_SHELL_SPEC_
THCK>
</PRO_E_ST_SHELL_LOCL_CMPD>
<PRO_E_ST_SHELL_LOCL_CMPD type="compound">
784 Creo®Parametric TOOLKIT User’sGuide<PRO_E_ST_SHELL_SPEC_SRF type="selection">
<PRO_XML_REFERENCE type="reference">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTHCK>
</PRO_E_ST_SHELL_LOCL_CMPD>
<PRO_E_ST_SHELL_LOCL_CMPD type="compound">
784 Creo®Parametric TOOLKIT User’sGuide<PRO_E_ST_SHELL_SPEC_SRF type="selection">
<PRO_XML_REFERENCE type="reference">
<PRO_XML_REFERENCE_OWNER type="owner">X_SHELL.prt</PRO_XML_
REFERENCE_OWNER>
<PRO_XML_REFERENCE_ID type="id">74</PRO_XML_REFERENCE_ID>
<PRO_XML_REFERENCE_TYPE type="protype">PRO_SURFACE</PRO_XML_
REFERENCE_TYPE>
</PRO_XML_REFERENCE>
</PRO_E_ST_SHELL_SPEC_SRF>
<PRO_E_ST_SHELL_SPEC_THCK type="double">15.00</PRO_E_ST_SHELL_
SPEC_THCK>
</PRO_E_ST_SHELL_LOCL_CMPD>
</PRO_E_ST_SHELL_LOCL_LIST>
</PRO_E_FEATURE_TREE>
ThefollowingexampleshowshowtouseProElemtreeWrite() toexporta
featureelementtreetoXML.
#include <ProToolkit.h>
#include <ProMenuBar.h>
#include <ProMdl.h>
#include <ProSelection.h>
#include <ProFeature.h>
#include <ProWstring.h>
static
wchar_t MSGFIL[] =
{'u','t','i','l','i','t','i','e','s','.','t','x','t','\0'};
/*===============================================================-
======*\xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx#include <ProWstring.h>
static
wchar_t MSGFIL[] =
{'u','t','i','l','i','t','i','e','s','.','t','x','t','\0'};
/*===============================================================-
======*\
FUNCTION: UserFeatXMLWrite
PURPOSE: Write afeature's element tree toanXML file.
\*===============================================================-
======*/
int UserFeatXMLWrite (ProFeature* feat)
{
ProElement elemtree;
wchar_t wFilename [PRO_FILE_NAME_SIZE];
/-
*--------------------------------------------------------------------*\
Prompt for the filename
\*--------------------------------------------------------------------*/
ProMessageDisplay (MSGFIL, "USER Enter the XML file name:");
if(ProMessageStringRead (PRO_FILE_NAME_SIZE, wFilename)
!=PRO_TK_NO_ERROR)
return (0);
/*--------------------------------------------------------------------*\
Extract the element tree and convert ittoXML
\*--------------------------------------------------------------------*/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/*--------------------------------------------------------------------*\
Extract the element tree and convert ittoXML
\*--------------------------------------------------------------------*/
status =ProFeatureElemtreeExtract (feat,NULL,PRO_FEAT_EXTRACT_NO_OPTS,
&elemtree);
if(status ==PRO_TK_NO_ERROR )
{
ElementTrees:Principles ofFeatureCreation 785status =ProElemtreeWrite (elemtree, PRO_ELEMTREE_XML,
wFilename);
ProElementFree (&elemtree);
}
return status;
}
786 Creo®Parametric TOOLKIT User’sGuide33
ElementTrees:References
OverviewofReferenceObjects................................................................................788
ReadingReferences................................................................................................788
ModifyingReferences..............................................................................................791
Thischapterdescribesfunctionsthatprovideaccesstoreferenceobjectsasan
alternative foraccessingtheinformation asselections.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThischapterdescribesfunctionsthatprovideaccesstoreferenceobjectsasan
alternative foraccessingtheinformation asselections.
787OverviewofReferenceObjects
Reference objectsareanalternative methodforrepresenting ageometric reference
inCreoParametric. Geometric references areusuallyrepresented usingthe
ProSelection structure.Since ProSelection isdesignedastheresultof
aninteractively selecteditem,itlackssomecapabilities toprovidecomplete
meaningasageometric reference.
Theopaquehandle ProReference providescompletefunctionality for
geometric referencing includingfunctionstoaccessmultipleormissing
references.
ReadingReferences
Functions Introduced:
•ProRefere nceStatusGet()
•ProRefere nceIsLocalcopy()
•ProRefere nceT ypeGet()
•ProRefere nceIdGet()
•ProRefere nceOwnerGet()
•ProRefere nceOwnerMdlnameGet()
•ProRefere nceOriginaltypeGet()
•ProRefere nceOriginalidGet()
•ProRefere nceOriginalownerGet()
•ProRefere nceOriginalownerMdlnameGet()
•ProRefere nceAsmcomppathGet()
•ProRefere nceParamsGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProRefere nceOriginaltypeGet()
•ProRefere nceOriginalidGet()
•ProRefere nceOriginalownerGet()
•ProRefere nceOriginalownerMdlnameGet()
•ProRefere nceAsmcomppathGet()
•ProRefere nceParamsGet()
•ProRefere ncePointGet()
•ProRefere nceT oSelection()
•ProSelectionT oRefer ence()
•ProRefere ncearrayT oSelections()
•ProSelectionarrayFr ee()
•ProSelectionarrayT oRefere nces()
•ProRefere nceFre e()
•ProRefere ncearrayFr ee()
788 Creo®Parametric TOOLKIT User’sGuideThefunction ProReferenceStatusGet() identifiesthestatusofthe
reference. Typicallyreferences areofstatus PRO_REF_ACTIVE, indicating that
thereferenceisavailableanditsgeometryisusableforconstruction offeatures.
Otherreferencestatusesinclude:
•PRO_REF_MISSING –Thereferenceistogeometrythatisinactiveinthe
model.Whenreadingtheelementtreeofafeaturethatmodifiesthegeometry
itreferences (forexample,aroundofedgeremovestheedge)thereferences
willhavethisstatus.
•PRO_REF_NOT_FOUND –SimilartoPRO_REF_MISSING. Thefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxitreferences (forexample,aroundofedgeremovestheedge)thereferences
willhavethisstatus.
•PRO_REF_NOT_FOUND –SimilartoPRO_REF_MISSING. Thefunction
indicatesareferencethatiscriticaltothefeaturethatusesthefunction.
•PRO_REF_FROZEN –Thereferenceistogeometryinacomponent frozen
duetoothermissingreferences.
•PRO_REF_FROZEN_PLACE, PRO_REF_SUPPRESSED,PRO_REF_
EXCLUDED –NotreturnedbyProReferenceStatusGet().
•PRO_REF_INVALID –Thereferenceisinvalidinthecontextofthefeature
andtheelementinwhichitisused(forexample,anon-linear edgeusedas
directionreferencefordraftsortranslations.)
•PRO_REF_ALTERNATE –Thereferenceisusinganalternatereference. The
originalreferenceinformation isavailable.
Note
Reference statusishighlydependent onthemodelstateatthetimethe
referencewasobtained.References obtainedfromafeaturevia
ProFeatureElemtreeExtract() maybecome“Missing” or“Not
found”duetochangesinthegeometryappliedlaterinthefeaturelist.To
obtainthereferencestatusforagivenreferenceasitisseenbyafeature,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureElemtreeExtract() maybecome“Missing” or“Not
found”duetochangesinthegeometryappliedlaterinthefeaturelist.To
obtainthereferencestatusforagivenreferenceasitisseenbyafeature,
useProInsertModeActivate() torevertthemodeltothestatejust
afterthatfeatureiscreated.
•PRO_REF_WARNING—The referenced entityhasawarning.
Note
References obtainedfromafeaturethatremovesageometric emptybody
canhavea“Warning”or“Invalid”state.Thestatusesofthereferences are
notstoredinthemodelsandarethrownatruntimeduringfeaturecreation,
redefinition, orregeneration.
ElementTrees:References 789Thefunction ProReferenceIsLocalcopy() identifiesifthereferenceisa
localcopyoftheexternalreference. Ifthereferenceisalocalcopy,theoriginal
referenceinformation isavailableaswell.
Thefunction ProReferenceTypeGet() getsthetypeofhandlethatis
referenced.
Thefunction ProReferenceIdGet() getstheitemidentityofthereference
handle.
Thefunction ProReferenceOwnerGet() getstheProMdlhandleofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferenced.
Thefunction ProReferenceIdGet() getstheitemidentityofthereference
handle.
Thefunction ProReferenceOwnerGet() getstheProMdlhandleofthe
ownermodelforthereference. Theoutputofthesethreefunctionsprovidesaccess
tothebasic ProModelitem referenced bytheProReference handle.Ifthe
referencestatusisnotPRO_REF_ACTIVE, someorallofthisinformation may
notbeaccessible (forexample,thereferenceownermodelisnotaccessible ifthe
referenceistoageometryiteminanunretrieved component). Thefunction
ProReferenceOwnerMdlnameGet() getsthereferenceownernameofthe
referenced geometryitem,whichmaybeavailableevenifthemodelitselfhasnot
beenretrieved.
Thefunctions ProReferenceOriginaltypeGet(),
ProReferenceOriginalidGet(),
ProReferenceOriginalownerGet(),
ProReferenceOriginalownerMdlnameGet() gettheoriginalproperties
ofageometric referencehandle.Thesecouldbedifferentfromtheactivelyused
typeifthereferencehasbeenbackedup,copiedlocally,orreplacedwithan
alternate.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofageometric referencehandle.Thesecouldbedifferentfromtheactivelyused
typeifthereferencehasbeenbackedup,copiedlocally,orreplacedwithan
alternate.
Thefunction ProReferenceAsmcomppathGet() getsthecomponent path
ofareferencehandle.
Thefunction ProReferenceParamsGet() getstheu-vparameters ofa
referencehandle.
Thefunction ProReferencePointGet() getstheselectedpointofa
referencehandle.
Thefunction ProReferenceToSelection() getsandallocatesa
ProSelection containing arepresentation forthisreference. Theoutputofthis
functionistheresulting ProSelection handle.Thisselectionisindependently
allocatedandshouldbefreedusing ProSelectionFree().
Thefunction ProSelectionToReference() getsandallocatesa
ProReference containing arepresentation forthisselection.Theoutputofthis
functionistheresulting ProReference handle.Thisreferenceisindependently
allocatedandshouldbefreedusing ProReferenceFree().
Thefunction ProReferencearrayToSelections() convertsareferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionistheresulting ProReference handle.Thisreferenceisindependently
allocatedandshouldbefreedusing ProReferenceFree().
Thefunction ProReferencearrayToSelections() convertsareference
ProArray toaselection ProArray. Theinputargumentsforthisfunctionare
•references–TheProArray ofreferencehandles.
790 Creo®Parametric TOOLKIT User’sGuide•skip_unusable –PRO_B_TRUE toskiptheprocessing ofmissingreferences
thatcannotbevalidselections. PRO_B_FALSE toprocessallreferences.
TheoutputforthisfunctionisaselectionthatisaProArray ofselection
handles.Youcanfreethisarrayusingthefunction
ProSelectionarrayFree().
Thefunction ProSelectionarrayToReferences() convertsaselection
ProArray toareference ProArray. ProArray ofselectionhandlesisgiven
astheinputandtheProArray ofreferencehandlesistheoutput.Freethisarray
using ProReferencearrayFree().
Thefunction ProReferenceFree() freesareferencehandle.
Thefunction ProReferencearrayFree() freesareference ProArray.
ThisfunctionalsofreeeachProReference handleusingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusing ProReferencearrayFree().
Thefunction ProReferenceFree() freesareferencehandle.
Thefunction ProReferencearrayFree() freesareference ProArray.
ThisfunctionalsofreeeachProReference handleusing
ProReferenceFree().
ModifyingReferences
Functions Introduced:
•ProRefere nceAlloc()
•ProRefere nceSet()
•ProRefere nceParamsSet()
•ProRefere ncePointSet()
Thefunction ProReferenceAlloc() allocatesareferencehandle.
Thefunction ProReferenceSet() setsthereferenced modelitemand
optionally component pathforthereferencehandle.
Thefunction ProReferenceParamsSet() setstheu-vparameters ofa
referencehandle.
Thefunction ProReferencePointSet() setstheselectedpointofa
referencehandle.
ElementTrees:References 79134
ElementTrees:DatumFeatures
DatumPlaneFeatures.............................................................................................793
DatumPointFeatures..............................................................................................804xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDatumPointFeatures..............................................................................................804
DatumAxisFeatures...............................................................................................818
DatumCoordinateSystemFeatures.........................................................................825
ThischapterdescribeshowtousetheincludefilesProDtmPln.h,
ProDtmPnt.h, ProDtmAxis.h, andProDtmCsys.h tocreatedatum
featuresprogrammatically .ThechapteronElementTrees:Principles ofFeature
Creationonpage749providesnecessarybackground forcreatingdatumfeatures;
werecommend youreadthatmaterialfirst.
792 Creo®Parametric TOOLKIT User’sGuideDatumPlaneFeatures
Theelementtreeforadatumplanefeatureisdocumented intheheaderfile
ProDtmPln.h, andhasasimplestructure.Apartfromtheusualelementsforthe
treerootandfeaturetype,adatumplanecontainsthepositioning constraints, an
optionalflipdirection,andanoptionalfittype.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtmPln.h, andhasasimplestructure.Apartfromtheusualelementsforthe
treerootandfeaturetype,adatumplanecontainsthepositioning constraints, an
optionalflipdirection,andanoptionalfittype.
Theconstraints element PRO_E_DTMPLN_CONSTRAINTS isanarrayelement
thatcontainsaPRO_E_DTMPLN_CONSTRAINT elementforeachconstraint.
Manyelementsformingtheconstraint element PRO_E_DTMPLN_CONSTRAINT
areusedonlyforcertainconstraint types,soanygivendatumplanemaycontain
fewerelementsthanareshowninthetree.Similarly,alltheelementsformingthe
constraint element PRO_E_DTMPLN_FIT arenotalwaysessential.
Thefollowingfigureshowstheelementtreefordatumplanes.
Manyelementsformingtheconstraint element PRO_E_DTMPLN_CONSTRAINT
areusedonlyforthefollowingconstraint types:
ElementTrees:DatumFeatures 793•PRO_E_DTMPLN_CONSTR_REF_OFFSET—Used iftheconstraint typeis
“offset.”
•PRO_E_DTMPLN_CONSTR_REF_ANGLE—Used iftheconstraint typeis
“angle.”
•PRO_E_DTMPLN_CONSTR_SEC_IND—Used iftheconstraint typeis
“section.”xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx“offset.”
•PRO_E_DTMPLN_CONSTR_REF_ANGLE—Used iftheconstraint typeis
“angle.”
•PRO_E_DTMPLN_CONSTR_SEC_IND—Used iftheconstraint typeis
“section.”
•PRO_E_DTMPLN_OFF_CSYS—Used iftheconstraint typeis“offset”and
thereferenceis“Csys.”
•PRO_E_DTMPLN_OFF_CSYS_OFFSET—Used iftheconstraint typeis
“offset”andthereferenceis“Csys.”
Similarly,elementsoftheoptionalelement PRO_E_DTMPLN_FIT areusedfor
thefollowingfittypes:
•PRO_E_DTMPN_FIT_REF—Used ifthefittypeisnot“default”or“fit.”
•PRO_E_DTMPLN_FIT_DIM_RAD—Used ifthefittypeis“fitradius.”
Thefollowingtabledescribesthetreeelementsindetail:
ElementID ElementName DataType ValidValue
PRO_E_FEATURE_
TYPEFeaturetype PRO_VALUE_TYPE_
INTPRO_FEAT_DATUM
PRO_E_STD_
FEATURE_NAMEFeatureName PRO_VALUE_TYPE
_WSTRING
PRO_E_DTMPLN_
CONSTRAINTSConstraints Array
PRO_E_DTMPLN_
CONSTRAINTConstraints Compound
PRO_E_DTMPLN_
CONSTR_TYPEType PRO_VALUE_TYPE_
INTSee
ProDtmplnConstr
Type
PRO_E_DTMPLN_
CONSTR_REFReferences PRO_VALUE_TYPE_
SELECTIONSeeConstraint ReferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCONSTRAINTConstraints Compound
PRO_E_DTMPLN_
CONSTR_TYPEType PRO_VALUE_TYPE_
INTSee
ProDtmplnConstr
Type
PRO_E_DTMPLN_
CONSTR_REFReferences PRO_VALUE_TYPE_
SELECTIONSeeConstraint Reference
Typesonpage795
PRO_E_DTMPLN_
CONSTR_REF_OFFSETOffset PRO_VALUE_TYPE
_DOUBLEAny
PRO_E_DTMPLN_
CONSTR_REF_ANGLEAngle PRO_VALUE_TYPE
_DOUBLE(-360.0,360.0)
PRO_E_DTMPLN_SEC_
INDSectionindex PRO_VALUE_TYPE_
INT[0,secnum-1]
PRO_E_DTMPLN_OFF_
CSYSOffsetcoordinate system PRO_VALUE_TYPE_
INTSee
ProDtmplnOffCsy
sAxis
PRO_E_DTMPLN_OFF_
CSYS_OFFSETOffsetcoordinate system
valuePRO_VALUE_TYPE
_DOUBLEAny
PRO_E_DTMPLN_
FLIP_DIRFlipdirection PRO_VALUE_TYPE_
INTProDtmplnFlipDir
PRO_E_DTMPLN_FIT Fit Compound
PRO_E_DTMPLN_FIT_
TYPEFittype PRO_VALUE_TYPE_
INTProDtmplnFitType
794 Creo®Parametric TOOLKIT User’sGuideElementID ElementName DataType ValidValue
PRO_E_DTMPLN_FIT_
REFReference PRO_VALUE_TYPE_
SELECTIONSeeFitReference Types
onpage796
PRO_E_DTMPLN_FIT_
DTM_RADDatumradius PRO_VALUE_TYPE_
DOUBLE>=0.0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DTMPLN_FIT_
REFReference PRO_VALUE_TYPE_
SELECTIONSeeFitReference Types
onpage796
PRO_E_DTMPLN_FIT_
DTM_RADDatumradius PRO_VALUE_TYPE_
DOUBLE>=0.0
ConstraintReferenceTypes
Thefollowingtabledoesnotdescribetheentirelistofcombinations of
geometrical constraints thatcanbeapplied,ortherulesforwhatgeometryitems
theycanreferto.Thesearepartiallydocumented inNote1oftheelementstable
inProDtmPln.h, whichincludesthefollowinginformation:
ConstraintType ValidReferenceTypes
PRO_DTMPLN_THRU PRO_AXIS, PRO_EDGE, PRO_CURVE, Channel,
PRO_POINT, PRO_EDGE_START, PRO_EDGE_
END, PRO_CRV_START, PRO_CRV_END, PRO_
SURFACE (Plane,Cylinder)
PRO_DTMPLN_NORM PRO_AXIS, PRO_EDGE, PRO_CURVE, Channel
PRO_SURFACE (plane)
PRO_DTMPLN_PRL PRO_SURFACE (plane)
PRO_DTMPLN_OFFS PRO_SURFACE (plane), PRO_CSYS
PRO_DTMPLN_ANG PRO_SURFACE (plane)
PRO_DTMPLN_TANG PRO_SURFACE (cylinder)
PRO_DTMPLN_SEC PRO_FEATURE (blend)
PRO_DTMPLN_DEF_X Noreferenceneeded
PRO_DTMPLN_DEF_Y Noreferenceneeded
PRO_DTMPLN_DEF_Z NoreferenceneededxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_DTMPLN_TANG PRO_SURFACE (cylinder)
PRO_DTMPLN_SEC PRO_FEATURE (blend)
PRO_DTMPLN_DEF_X Noreferenceneeded
PRO_DTMPLN_DEF_Y Noreferenceneeded
PRO_DTMPLN_DEF_Z Noreferenceneeded
PRO_DTMPLN_THRU_CSYS_XY PRO_CSYS
PRO_DTMPLN_THRU_CSYS_YZ PRO_CSYS
PRO_DTMPLN_THRU_CSYS_ZX PRO_CSYS
PRO_DTMPLN_MIDPLN Planarreferencetype: PRO_SURFACE
Linearreferencetypes: PRO_AXIS, PRO_EDGE,
PRO_CURVE
Pointreferencetypes: PRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_CRV_START,
PRO_CRV_END
PRO_DTMPLN_BISECTOR1 Planarreferencetype: PRO_SURFACE
Linearreferencetypes: PRO_AXIS, PRO_EDGE,
PRO_CURVE
PRO_DTMPLN_BISECTOR2 Planarreferencetype: PRO_SURFACE
Linearreferencetypes: PRO_AXIS, PRO_EDGE,
PRO_CURVE
ElementTrees:DatumFeatures 795Note
Forconstraint typePRO_DTMPLN_TANG, therecanbetwotangentstoa
cylindrical surfacepassingthroughasinglepoint.Specifyapointonthethe
cylindrical surfacesothatthetangentplaneiscreatedthroughthispointora
pointnearertothisspecifiedpointkeepingthetangencycondition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcylindrical surfacepassingthroughasinglepoint.Specifyapointonthethe
cylindrical surfacesothatthetangentplaneiscreatedthroughthispointora
pointnearertothisspecifiedpointkeepingthetangencycondition.
SeeCreoParametric onlinehelpondatumplanesforadetaileddescription ofthe
validconstraint combinations andreferences.
FitReferenceTypes
Thefollowingtabledescribesthecorresponding rulesforthefitoptionsindetail:
FitType ValidReferenceTypes
PRO_DTMPLN_FIT_DEFAULT —
PRO_DTMPLN_FIT_PART PRO_PART
PRO_DTMPLN_FIT_FEATURE PRO_FEATURE
PRO_DTMPLN_FIT_SURFACE PRO_SURFACE
PRO_DTMPLN_FIT_EDGE PRO_EDGE
PRO_DTMPLN_FIT_AXIS PRO_AXIS
PRO_DTMPLN_FIT_RADIUS —
Example1:CreatingaDatumPlane
ThesamplecodeinthefileUgDatumCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_datum showshowto
createadatumplanethatisoffsetfromthespecifiedplane.Theuserselectsthe
referenceplaneandsuppliestheoffset.
Examples
Example1:ThroughaPlane
Theelementtreestructureofaplanethroughaplaneorplanarsurfaceisshowninxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferenceplaneandsuppliestheoffset.
Examples
Example1:ThroughaPlane
Theelementtreestructureofaplanethroughaplaneorplanarsurfaceisshownin
thefollowingfigure:
Thefollowingtablespecifiestheelementtreeconstraints forthistype:
796 Creo®Parametric TOOLKIT User’sGuidePlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
Example2:OffsettoaPlane
Theelementtreestructureofaplaneoffsettoaplaneortoaplanarsurfaceis
showninthefollowingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_OFFS
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
PRO_E_DTMPLN_CONSTR_
REF_OFFSETOffset value
Example3:OffsetalongaCsysAxis
Theelementtreestructureofaplaneoffsetalongthecoordinate systemaxisisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
PRO_E_DTMPLN_CONSTR_
REF_OFFSETOffset value
Example3:OffsetalongaCsysAxis
Theelementtreestructureofaplaneoffsetalongthecoordinate systemaxisis
showninthefollowingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_E_DTMPLN_OFF_CSYS_
OFFSET
PRO_E_DTMPLN_CONSTR_REF PRO_CSYS
PRO_E_DTMPLN_OFF_CSYS PRO_DTMPLN_OFF_CSYS_X or
PRO_DTMPLN_OFF_CSYS_Y or
PRO_DTMPLN_OFF_CSYS_Z
PRO_E_DTMPLN_OFF_CSYS_
OFFSETOffset value
ElementTrees:DatumFeatures 797Example4:ThroughaCsysPlane
Theelementtreestructureofaplanepassingthroughacoordinate systemplane
(XY/YZ/ZX) isshowninthefollowingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU_CSYS_XY
orPRO_DTMPLN_THRU_CSYS_
YZorPRO_DTMPLN_THRU_
CSYS_ZX
PRO_E_DTMPLN_CONSTR_REF PRO_CSYS
Example5:ParalleltoaPlaneandThroughaPoint
Theelementtreestructureofaplaneparalleltoaplaneoraplanarsurfaceand
passingthroughapointisshowninthefollowingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_PRL
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_POINT,PRO_EDGE_
START,
PRO_EDGE_END,
PRO_CRV_START,PRO_CRV_
END
798 Creo®Parametric TOOLKIT User’sGuideExample6:ThroughanAxisandAngletoaPlanexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_POINT,PRO_EDGE_
START,
PRO_EDGE_END,
PRO_CRV_START,PRO_CRV_
END
798 Creo®Parametric TOOLKIT User’sGuideExample6:ThroughanAxisandAngletoaPlane
Theelementtreestructureofaplanepassingthroughanaxisandatanangletoa
planeisshowninthefollowingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_AXIS, PRO_CURVE
(STRAIGHT), PRO_EDGE
(STRAIGHT)
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_ANG
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane),
PRO_E_DTMPLN_CONSTR_
REF_ANGLEAngle value (-360.0,
360.0)
Example7:ThroughaLinearReference(Axis,InferredAxis,StraightEdge
orCurve)andaPoint
Theelementtreestructureofaplanepassingthroughanaxisoraninferredaxis
andapointisshowninthefollowingfigure.AninferredaxisistheaxisofaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorCurve)andaPoint
Theelementtreestructureofaplanepassingthroughanaxisoraninferredaxis
andapointisshowninthefollowingfigure.Aninferredaxisistheaxisofa
surfaceofrevolution like,Cylinder,Cone,Sphere,Torusoranyothergeneral
surfaceofrevolution.
ElementTrees:DatumFeatures 799Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_AXIS, PRO_CURVE
(STRAIGHT), PRO_EDGE
(STRAIGHT, PRO_
SURFACE(CYLINDER/CONE/
SPHERE/TORUS/General
surface ofrevolution)
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
Example8:NormaltoaLinearReference(Axis,InferredAxis,Straight
EdgeorCurve)andaPoint
Theelementtreestructureofaplanenormaltoanaxisorinferredaxisand
passingthroughapointisshowninthefollowingfigure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExample8:NormaltoaLinearReference(Axis,InferredAxis,Straight
EdgeorCurve)andaPoint
Theelementtreestructureofaplanenormaltoanaxisorinferredaxisand
passingthroughapointisshowninthefollowingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_NORM
PRO_E_DTMPLN_CONSTR_REF PRO_AXIS, PRO_CURVE
(STRAIGHT), PRO_EDGE
(STRAIGHT), PRO_
SURFACE(CYLINDER/CONE/
SPHERE/TORUS/
General surface of
revolution)
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
800 Creo®Parametric TOOLKIT User’sGuidePlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTR_REF PRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
Example9:MidplanetoaPlaneandParalleltoAnotherPlane
TheelementtreestructureofamidplanetoaplaneoraplanarsurfaceandparallelxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSTART, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
Example9:MidplanetoaPlaneandParalleltoAnotherPlane
Theelementtreestructureofamidplanetoaplaneoraplanarsurfaceandparallel
toanotherplaneorplanarsurface,whenthesetworeferences areparallel,is
showninthefollowingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_MIDPLN
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_PRL
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
Example10:MidplanetoaPlaneandatanAngletoAnotherPlane
Theelementtreestructureofamidplanetoaplaneoraplanarsurfaceandangular
toanotherplaneorplanarsurface,whenthesetworeferences areintersecting, is
showninthefollowingfigure.
ElementTrees:DatumFeatures 801Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraintxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxshowninthefollowingfigure.
ElementTrees:DatumFeatures 801Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_MIDPLN
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_BISECTOR1
PRO_DTMPLN_BISECTOR2
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
Example11:MidplanetoaPlaneandMidplanetoaPoint
Theelementtreestructureofamidplanetoaplaneoraplanarsurfaceand
midplanetoapoint,wherethepointdoesnotlieontheplane,isshowninthe
followingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_MIDPLN
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_MIDPLNxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_MIDPLN
PRO_E_DTMPLN_CONSTR_REF PRO_SURFACE (Plane)
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_MIDPLN
PRO_E_DTMPLN_CONSTR_REF PRO_POINT,
PRO_EDGE_START,
PRO_EDGE_END,
PRO_CRV_START,
PRO_CRV_END
802 Creo®Parametric TOOLKIT User’sGuideExample12:ThroughThreePoints
Theelementtreestructureofaplanepassingthroughthreenon-collinear pointsis
showninthefollowingfigure.
Thefollowingtablespecifiestheelementtreeconstraints forthistype.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMPLN_CONSTRAINT
(Constraint 1)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_POINT, PRO_EDGE_
START,
PRO_EDGE_END,
PRO_CRV_START,PRO_CRV_
END
PRO_E_DTMPLN_CONSTRAINT
(Constraint 2)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
PRO_E_DTMPLN_CONSTRAINT
(Constraint 3)PRO_E_DTMPLN_CONSTR_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
PRO_E_DTMPLN_CONSTRAINT
(Constraint 3)PRO_E_DTMPLN_CONSTR_
TYPEPRO_DTMPLN_THRU
PRO_E_DTMPLN_CONSTR_REF PRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
Example13:ToFlipDirection
ThedatumplanenormalthatistheZ-direction canbeflippedforanyofthetypes.
Thefollowingtablespecifiestheelementtreetofliptheplane.
ElementID ValidValue
PRO_E_DTMPLN_FLIP_DIR PRO_DTMPLN_FLIP_DIR_NO orPRO_DTMPLN_
FLIP_DIR_YES
ElementTrees:DatumFeatures 803Example14:ToFitOutlinetoaReference
Thedatumplaneoutlinecanbefittoareference. Thefollowingfigureshowsthe
elementtreestructureusingthefitelements.
Thefollowingtablespecifiestheelementtreetousefitelements.
FitCompound Element FitMemberElements ValidValue
PRO_E_DTMPLN_FIT PRO_E_DTMPLN_FIT _TYPE PRO_DTMPLN_FIT_PART
PRO_E_DTMPLN_FIT _REF PRO_PART
DatumPointFeatures
Theelementtreeforadatumpointfeatureisdocumented intheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DTMPLN_FIT PRO_E_DTMPLN_FIT _TYPE PRO_DTMPLN_FIT_PART
PRO_E_DTMPLN_FIT _REF PRO_PART
DatumPointFeatures
Theelementtreeforadatumpointfeatureisdocumented intheheaderfile
ProDtmPnt.h. Apartfromtheusualelementsforthetreerootandfeaturetype,
adatumpointcontainsthedatumpointtype.Thetypesofdatumpointsavailable
are:
•SketchedDatumPointonpage804
•FieldDatumPointonpage806
•OffsetCsysDatumPointonpage806
•GeneralDatumPointonpage808
SketchedDatumPoint
Asketcheddatumpointiscreatedbysketchingthepointinthesketchermode
afterspecifying theplaneonwhichtheuserwantstocreateapoint.
Note
Thesketcheddatumpointisobsolete.Hence,theelementtreeforsketched
datumpointdefinedintheheaderfileProDtmPnt.h isnolongersupported.
Thesketcheddatumpointsareconsolidated withinthesketchedfeatureasa
geometrypoint.Thegeometryentitieswithinthesketchedfeaturegeneratethe
corresponding datumentities.Tocreatenewsketcheddatumpoints,youmust
usetheelementtreeforsketcheddatumcurvesdefinedintheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometrypoint.Thegeometryentitieswithinthesketchedfeaturegeneratethe
corresponding datumentities.Tocreatenewsketcheddatumpoints,youmust
usetheelementtreeforsketcheddatumcurvesdefinedintheheaderfile
ProDtmCrv.h. RefertothesectionSketchedDatumCurvesonpage835,
formoreinformation onsketcheddatumcurves.
Thefollowingfigureshowstheelementtreeforasketcheddatumpoint.
804 Creo®Parametric TOOLKIT User’sGuideDefinethefollowingsubelementsofPRO_E_STD_SECTION tocompletethe
sketcheddatumpointfeature.
SeethechapterElementTrees:SketchedFeaturesonpage987fortechniques that
mustbeusedtocreateasketchedfeature,likeasketcheddatumpoint.
FeatureElements
Thefollowingtabledescribestheelementsoftheelementtreeforsketcheddatum
points:
ElementID ElementName DataType ValidValue
PRO_E_FEATURE_
TYPEFeatureType PRO_VALUE_TYPE_
INTPRO_FEAT_DATUM_
POINT
PRO_E_DPOINT_TYPE DatumPointType PRO_VALUE_TYPE_
INTPRO_DPOINT_TYPE
_SKETCHED
PRO_E_STD_
FEATURE_NAMEFeatureName PRO_VALUE_TYPE
_WSTRINGxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPEFeatureType PRO_VALUE_TYPE_
INTPRO_FEAT_DATUM_
POINT
PRO_E_DPOINT_TYPE DatumPointType PRO_VALUE_TYPE_
INTPRO_DPOINT_TYPE
_SKETCHED
PRO_E_STD_
FEATURE_NAMEFeatureName PRO_VALUE_TYPE
_WSTRING
PRO_E_STD_SECTION Section Compound See
ProStdSection.h
Example2:CreatingaSketchedDatumPoint
ThesamplecodeinthefileUgSketchedPointCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateaSketchedDatumPoint.Theuserisprompted
toselectthesketchingplanes,orientation planes,andthenthereferenceedgesfor
thesketch.TheuserisalsorequiredtoentertheXandYoffsetstobeappliedto
thesketchfromtheprojectededges.
ElementTrees:DatumFeatures 805FieldDatumPoint
Afielddatumpointiscreatedbyselectinganypointonasurface,edge,curve,or
quilt.Thepointislocateddepending ontheUVparameters. Thelocationofthe
fieldpointdependsontheUVvaluesofthepointonthesurface,edge,curve,or
quilt.
Thefollowingfigureshowstheelementtreeforthefielddatumpoint.
FeatureElementsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfieldpointdependsontheUVvaluesofthepointonthesurface,edge,curve,or
quilt.
Thefollowingfigureshowstheelementtreeforthefielddatumpoint.
FeatureElements
Thefollowingtabledescribestheelementsoftheelementtreeforthefielddatum
points:
ElementID ElementName DataType ValidValue
PRO_E_FEATURE_
TYPEFeatureType PRO_VALUE_TYPE_
INTPRO_FEAT_DATUM_
POINT
PRO_E_DPOINT_TYPE DatumPointType PRO_VALUE_TYPE_
INTPRO_DPOINT_
TYPE_FIELD
PRO_E_STD_
FEATURE_NAMEFeatureName PRO_VALUE_TYPE_
WSTRING
PRO_E_DPOINT_
FIELD_REFPlacement reference PRO_VALUE_TYPE_
SELECTIONSurface,Edge,Curve,or
Quilt.Note:UVisused
tospecifyexactlocation.
Example3:CreatingaFieldDatumPoint
ThesamplecodeinthefileUgFieldPointCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateaFieldDatumPointonanedgeorsurface.The
userispromptedtoselectapointonacurveorasurface.
OffsetCsysDatumPoint
AnOffsetCsysDatumpointiscreatedusingthecoordinate systemandvaluesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatcreat showshowtocreateaFieldDatumPointonanedgeorsurface.The
userispromptedtoselectapointonacurveorasurface.
OffsetCsysDatumPoint
AnOffsetCsysDatumpointiscreatedusingthecoordinate systemandvalues
alongthecoordinate axes.Threetypesofcoordinate systemscanbeused:
•Cartesian—Requires valuesalongX,Y,Zaxis.
•Cylindrical—Requires valuesalongR,theta,Zaxis.
806 Creo®Parametric TOOLKIT User’sGuide•Spherical—Requires valuesalongr,phithetaaxis.
ThefollowingfigureshowstheelementtreeforOffsetCsysDatumPoint.
FeatureElements
Thefollowingtabledescribestheelementsintheelementtreefordatumpoints.
ElementID ElementName DataType ValidValue
PRO_E_FEATURE_
TYPEFeatureType PRO_VALUE_TYPE_
INTPRO_FEAT_DATUM_
POINT
PRO_E_DPOINT_TYPE DatumPointType PRO_VALUE_TYPE_
INTPRO_DPOINT_TYPE_
OFFSET_CSYS
PRO_E_STD_
FEATURE_NAMEFeatureName PRO_VALUE_TYPE_
WSTRING
PRO_E_DPOINT_OFST
_CSYS_TYPEReference CsysType PRO_VALUE_TYPE_
INTSee
ProDtmpntOffCsys
Type
PRO_E_DPOINT_OFST
_CSYS_REFReference Csys PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFEATURE_NAMEFeatureName PRO_VALUE_TYPE_
WSTRING
PRO_E_DPOINT_OFST
_CSYS_TYPEReference CsysType PRO_VALUE_TYPE_
INTSee
ProDtmpntOffCsys
Type
PRO_E_DPOINT_OFST
_CSYS_REFReference Csys PRO_VALUE_TYPE_
SELECTIONCsys
PRO_E_DPOINT_OFST
_CSYS_WITH_DIMSParametric orExplicit
withorwithout
dimensionsPRO_VALUE_TYPE_
INTPRO_B_TRUE orPRO_
B_FALSE
PRO_E_DPOINT_OFST
_CSYS_PNTS_ARRAYArrayofPointsList
PRO_E_DPOINT_OFST
_CSYS_PNTOnePoint Compound
PRO_E_DPOINT_OFST
_CSYS_PNT_NAMEPointName PRO_VALUE_TYPE_
WSTRING
PRO_E_DPOINT_OFST
_CSYS_DIR1_VALX,R,orpi PRO_VALUE_TYPE
_DOUBLEDependsonPRO_E_
DPOINT_OFST
_CSYS_TYPE
ElementTrees:DatumFeatures 807ElementID ElementName DataType ValidValue
PRO_E_DPOINT_OFST
_CSYS_DIR2_VALY,theta,orphi PRO_VALUE_TYPE
_DOUBLEDependsonPRO_E_
DPOINT_OFST
_CSYS_TYPE
PRO_E_DPOINT_OFST
_CSYS_DIR3_VALZ,Z,ortheta PRO_VALUE_TYPE
_DOUBLEDependsonPRO_E_
DPOINT_OFST
_CSYS_TYPE
Example4:CreatinganOffsetCsysDatumPoint
ThesamplecodeinthefileUgOffsetPointCreate.c locatedat<creo_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx_CSYS_DIR3_VALZ,Z,ortheta PRO_VALUE_TYPE
_DOUBLEDependsonPRO_E_
DPOINT_OFST
_CSYS_TYPE
Example4:CreatinganOffsetCsysDatumPoint
ThesamplecodeinthefileUgOffsetPointCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateanOffsetDatumPointatanoffsetfroma
specifiedcoordinate system.Theuserispromptedtoselectthecoordinate system.
GeneralDatumPoint
Ageneraldatumpointiscreatedandconstrained basedontheselectioncontext.
Thesupported typesare:
•Pointonvertex
•Offsetpoint
•Projectpoint
•Pointatintersection ofthreesurfaces
•OnorOffsetsurface
•Pointatintersection ofcurveandsurface
•Centerofcurveorsurface
•Pointatintersection oftwocurves
•Pointoncurve
Whentherearemultipleintersections, thepointlocationofgeneraldatumpoint
dependsonthefollowing:
•Pointatintersection ofedgeandedge—tvalueofpointonsecondedge
•Pointatintersection ofedgeandplane—tvalueofpointonedge
•Pointatintersection ofcurveandplane—tvalueofpointoncurvexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdependsonthefollowing:
•Pointatintersection ofedgeandedge—tvalueofpointonsecondedge
•Pointatintersection ofedgeandplane—tvalueofpointonedge
•Pointatintersection ofcurveandplane—tvalueofpointoncurve
•Pointatintersection oftwocurves—tvalueofpointonsecondcurve
•Pointatintersection ofcurveandsurface—t valueofpointoncurve
•Pointatintersection ofcurveandaxis—tvalueofpointoncurve
Thefollowingfigureshowstheelementtreeofageneraldatumpoint.
808 Creo®Parametric TOOLKIT User’sGuideFeatureElements
Thefollowingtabledescribestheelementsoftheelementtreefordatumpoints.
ElementID ElementName DataType ValidValue
PRO_E_FEATURE_
TYPEFeatureType PRO_VALUE_TYPE_
INTPRO_FEAT_DATUM_
POINT
PRO_E_DPOINT_TYPE DatumPointType PRO_VALUE_TYPE_
INTPRO_DPOINT_TYPE
_GENERAL
PRO_E_STD_
FEATURE_NAMEFeatureName PRO_VALUE_TYPE
_WSTRING
PRO_E_DPOINT_
POINTS
_ARRAYPointsList Array Notapplicable
PRO_E_DPOINT_
POINTOnePoint Compound Notapplicable
PRO_E_DPOINT
_POINT_NAMEPointName PRO_VALUE_TYPE
_WSTRING
PRO_E_DPOINT_PLAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx_WSTRING
PRO_E_DPOINT_
POINTS
_ARRAYPointsList Array Notapplicable
PRO_E_DPOINT_
POINTOnePoint Compound Notapplicable
PRO_E_DPOINT
_POINT_NAMEPointName PRO_VALUE_TYPE
_WSTRING
PRO_E_DPOINT_PLA
_CONSTRAINTSPlacement Constraints Array Notapplicable
PRO_E_DPOINT_PLA
_CONSTRAINTOnePlacement
ConstraintCompound Notapplicable
PRO_E_DPOINT_PLA
_CONSTR_REFPlacement Reference PRO_VALUE_TYPE_
SELECTIONDependsonthecontext.
SeePRO_E_DPOINT_
PLA
_CONSTR_REF.
ElementTrees:DatumFeatures 809ElementID ElementName DataType ValidValue
PRO_E_DPOINT_PLA
_CONSTR_TYPEConstraint Type PRO_VALUE_TYPE_
INTSee
ProDtmpntConstr
Type.
PRO_E_DPOINT_PLA
_CONSTR_VALValue PRO_VALUE_TYPE
_DOUBLE
PRO_E_DPOINT_DIM
_CONSTRAINTSDimension Constraints Array Notapplicable
PRO_E_DPOINT_DIM
_CONSTRAINTOneDimension
ConstraintCompound Notapplicable
PRO_E_DPOINT_DIM
_CONSTR_REFDimension Reference PRO_VALUE_TYPE_
SELECTIONSeePlacement Constraint
References onpage810.
PRO_E_DPOINT_DIM
_CONSTR_TYPEConstraint Type PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DPOINT_DIM
_CONSTR_REFDimension Reference PRO_VALUE_TYPE_
SELECTIONSeePlacement Constraint
References onpage810.
PRO_E_DPOINT_DIM
_CONSTR_TYPEConstraint Type PRO_VALUE_TYPE_
INTDependsonthecontext.
SeeConstraint Typeon
page811.
PRO_E_DPOINT_DIM
_CONSTR_VALValue PRO_VALUE_TYPE_
DOUBLESee
ProDtmpntConstr
Type
PlacementConstraintReferences
ValidvaluesforthePRO_E_DPOINT_PLA_CONSTR_REF placement reference
areasfollows:
•Curve—SEL_3D_CURVE, SEL_3D_CABLE, SEL_IGES_WF
•Edge—SEL_3D_EDG
•Axis—SEL_3D_AXIS
•Vertex—SEL_3D_VERT orSEL_CURVE_END
•CSYS—SEL_3D_CSYS
•Surface—SEL_3D_SRF, SEL_3D_SRF_LIST
•DatumPnt—SEL_3D_PNT
PlacementConstraintType
ValidvaluesforPRO_E_DPOINT_PLA_CONSTR_TYPE areasfollows:
•PRO_DTMPNT_CONSTR_TYPE_ON
•PRO_DTMPNT_CONSTR_TYPE_OFFSET
•PRO_DTMPNT_CONSTR_TYPE_CENTER
•PRO_DTMPNT_CONSTR_TYPE_PARALLEL
•PRO_DTMPNT_CONSTR_TYPE_NORMAL
•PRO_DTMPNT_CONSTR_TYPE_PROJECT
•PRO_DTMPNT_CONSTR_TYPE_CARTESIAN
•PRO_DTMPNT_CONSTR_TYPE_CYLINDRICALxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_DTMPNT_CONSTR_TYPE_CENTER
•PRO_DTMPNT_CONSTR_TYPE_PARALLEL
•PRO_DTMPNT_CONSTR_TYPE_NORMAL
•PRO_DTMPNT_CONSTR_TYPE_PROJECT
•PRO_DTMPNT_CONSTR_TYPE_CARTESIAN
•PRO_DTMPNT_CONSTR_TYPE_CYLINDRICAL
810 Creo®Parametric TOOLKIT User’sGuide•PRO_DTMPNT_CONSTR_TYPE_SPHERICAL
Thelastthreeareusedwhendefiningapointoffsettoacoordinate system.
ConstraintReferences
ValidvaluesforthePRO_E_DPOINT_DIM_CONSTR_REF dimension references
areasfollowing:
•Curve—SEL_3D_CURVE, SEL_3D_CABLE, SEL_CRV_PNT, SEL_IGES_
WF
•Edge—SEL_3D_EDG, SEL_EDG_PNT
•Axis—SEL_3D_AXIS
•Coordinate system—SEL_3D_CSYS
•Vertex—SEL_3D_VERT orSEL_CURVE_END
•Surface—SEL_3D_SRF, SEL_SRF_PNT, SEL_3D_SRF_LIST
•Coordinate systemaxis—SEL_3D_CSYS_AXIS
•DatumPoint—SEL_3D_PNT
ConstraintType
ValidvaluesforPRO_E_DPOINT_DIM_CONSTR_TYPE areasfollows:
•PRO_DTMPNT_CONSTR_TYPE_OFFSET
•PRO_DTMPNT_CONSTR_TYPE_LENGTH
•PRO_DTMPNT_CONSTR_TYPE_RATIO
•PRO_DTMPNT_CONSTR_TYPE_LENGTH_END
•PRO_DTMPNT_CONSTR_TYPE_RATIO
•PRO_DTMPNT_CONSTR_TYPE_RATIO_ENDxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_DTMPNT_CONSTR_TYPE_OFFSET
•PRO_DTMPNT_CONSTR_TYPE_LENGTH
•PRO_DTMPNT_CONSTR_TYPE_RATIO
•PRO_DTMPNT_CONSTR_TYPE_LENGTH_END
•PRO_DTMPNT_CONSTR_TYPE_RATIO
•PRO_DTMPNT_CONSTR_TYPE_RATIO_END
•PRO_DTMPNT_CONSTR_TYPE_ALONG_X
•PRO_DTMPNT_CONSTR_TYPE_ALONG_Y
•PRO_DTMPNT_CONSTR_TYPE_ALONG_Z
Example5:CreatingGeneralDatumPoint
ThesamplecodeinthefileUgGeneralPointCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateaGeneralDatumPointformedatthe
intersection ofthreeselectedsurfaces.Theuserispromptedtoselectthethree
surfaces.
ElementTrees:DatumFeatures 811Examples
Example1:PointonaVertex
Tocreateadatumpointonthevertex,thefollowingconstraints arerequired.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFVertex
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Example2:OffsetPointxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFVertex
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Example2:OffsetPoint
Tocreateoneormoredatumpointsatanoffset,thefollowingconstraints are
required.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFVertex,Csys,orDPnt
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
OFFSET
PRO_E_DPOINT_PLA_
CONSTR_VALOffsetvalue.
ThefollowingtablesprovidevalidvaluesforConstraint 2.Youcancreateapoint
atanoffsetusingvaluesfromoneofthefollowingtablesforConstraint 2.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFCurve,EdgeorAxis
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
PARALLEL
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
OR
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
PARALLEL
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
OR
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
NORMAL
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
OR
812 Creo®Parametric TOOLKIT User’sGuidePlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFCsysAxis
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
PARALLEL
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
OR
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFCsys
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
CARTESIAN or
PRO_DTMPNT_CONSTR_TYPE_
CYLINDRICAL orPRO_
DTMPNT_CONSTR_TYPE_
SPHERICAL
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Thefollowingtableprovidesvalidvaluesfordimension constraints.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCARTESIAN or
PRO_DTMPNT_CONSTR_TYPE_
CYLINDRICAL orPRO_
DTMPNT_CONSTR_TYPE_
SPHERICAL
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Thefollowingtableprovidesvalidvaluesfordimension constraints.
DimensionConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_DIM_
CONSTRAINT (Constraint 3)PRO_E_DPOINT_DIM_
CONSTR_REFNotapplicable
PRO_E_DPOINT_DIM_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ALONG_X
PRO_E_DPOINT_DIM_
CONSTR_VALOffsetValue
PRO_E_DPOINT_DIM_
CONSTRAINT (Constraint 4)PRO_E_DPOINT_DIM_
CONSTR_REFNotapplicable
PRO_E_DPOINT_DIM_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ALONG_Y
PRO_E_DPOINT_DIM_
CONSTR_VALOffsetValue
PRO_E_DPOINT_DIM_
CONSTRAINT (Constraint 5)PRO_E_DPOINT_DIM_
CONSTR_REFNotapplicable
PRO_E_DPOINT_DIM_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ALONG_Z
PRO_E_DPOINT_DIM_
CONSTR_VALOffsetValue
AsperOffsettypesthevaluesareasfollows:
ElementTrees:DatumFeatures 813CARTESIAN CYLINDRICAL SPHERICAL
PRO_DTMPNT_
CONSTR_TYPE_
ALONG_XX R RHO
PRO_DTMPNT_
CONSTR_TYPE_
ALONG_YY THETA PHI
PRO_DTMPNT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAsperOffsettypesthevaluesareasfollows:
ElementTrees:DatumFeatures 813CARTESIAN CYLINDRICAL SPHERICAL
PRO_DTMPNT_
CONSTR_TYPE_
ALONG_XX R RHO
PRO_DTMPNT_
CONSTR_TYPE_
ALONG_YY THETA PHI
PRO_DTMPNT_
CONSTR_TYPE_
ALONG_ZZ Z THETA
Example3:PointatIntersection ofThreeSurfaces
Tocreateadatumpointattheintersection ofthreesurfaces,usethefollowing
constraints. Eachsurfacecanbeapartsurface,surfacefeature,ordatumplane.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 3)PRO_E_DPOINT_PLA_
CONSTR_REFSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicablexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCONSTR_VALNotapplicable
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 3)PRO_E_DPOINT_PLA_
CONSTR_REFSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Example4:PointOnaSurfaceorOffsetfromaSurface
Thefollowingconstraints arerequiredtocreateapointonasurfaceoratanoffset
distancefromasurface:
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ONorPRO_DTMPNT_CONSTR_
TYPE_OFFSET
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
814 Creo®Parametric TOOLKIT User’sGuidePlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFEdgeorSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
OFFSET
PRO_E_DPOINT_PLA_
CONSTR_VALOffsetvalue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 3)PRO_E_DPOINT_PLA_
CONSTR_REFEdgeorSurface
PRO_E_DPOINT_PLA_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
OFFSET
PRO_E_DPOINT_PLA_
CONSTR_VALOffsetvalue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 3)PRO_E_DPOINT_PLA_
CONSTR_REFEdgeorSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
OFFSET
PRO_E_DPOINT_PLA_
CONSTR_VALOffsetvalue
Example5:PointatIntersection ofaCurveandaSurface
Tocreateadatumpointattheintersection ofacurveandasurface,usethe
followingconstraints. Thecurvecanbeapartedge,surfacefeatureedge,datum
curve,axis,oranimporteddatumcurve.Thesurfacecanbeapartsurface,surface
feature,ordatumplane.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFCurve,axis,edge,or
surface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REF-Ifvalueofconstraint 1isCurve,
Axis,orEdge,thevalueof
constraint 2issurface.
-Ifvalueofconstraint 1issurface,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REF-Ifvalueofconstraint 1isCurve,
Axis,orEdge,thevalueof
constraint 2issurface.
-Ifvalueofconstraint 1issurface,
thevalueofconstraint 2isCurve,
Axis,orEdge.
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Note
Ifmorethanoneintersections exist,thepointiscreatedattheintersection
nearesttothecurvereferenceparameter value.
ElementTrees:DatumFeatures 815Example6:PointAtCenterofCurveorSurface
Tocreateadatumpointatthecenterofanarcorcircleentity,usethefollowing
constraints.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFCurve,edge,orsurface(Sphere)
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
CENTER
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Example7:PointatIntersection ofTwoCurves
Tocreateapointatintersection oftwocurves,usethefollowingconstraints.
PlacementConstraintxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCENTER
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Example7:PointatIntersection ofTwoCurves
Tocreateapointatintersection oftwocurves,usethefollowingconstraints.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFCurve,edge,oraxis
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFCurve,edge,oraxis
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
Note
Ifmorethanoneintersections exist,thepointiscreatedattheintersection
nearesttothesecondreferenceparameter value.
Example8:PointOnCurve
Tocreateadatumpointonacurve,thefollowingconstraints arerequired.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFCurve,edge,oraxis(Itisvalid
withoffsetplane)
PRO_E_DPOINT_PLA_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFCurve,edge,oraxis(Itisvalid
withoffsetplane)
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
816 Creo®Parametric TOOLKIT User’sGuideThefollowingtablesprovidevalidvaluesforconstraint 2.Youcancreateapoint
oncurveusingvaluesfromoneofthefollowingtablesforconstraint 2.
Usethefollowingvaluesforconstraint 2ifthelengthofcurvefromthestartpoint
ortheendpointisusedtolocatethepoint.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_DIM_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_DIM_
CONSTR_REFCurve(Usethesamecurveasused
inConstraint 1)
PRO_E_DPOINT_DIM_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
LENGTHorPRO_DTMPNT_
CONSTR_TYPE_LENGTH_END
PRO_E_DPOINT_DIM_
CONSTR_VALLengthvalue(fromcurvestart
pointorendpoint)
Usethefollowingvaluesforconstraint 2iftheratioofdistancefromthestart
pointortheendpointisusedtolocatethepoint.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DPOINT_DIM_
CONSTR_VALLengthvalue(fromcurvestart
pointorendpoint)
Usethefollowingvaluesforconstraint 2iftheratioofdistancefromthestart
pointortheendpointisusedtolocatethepoint.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_DIM_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_DIM_
CONSTR_REFCurve(Usethesamecurveasused
incontrarian 1)
PRO_E_DPOINT_DIM_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
RATIOorPRO_DTMPNT_
CONSTR_TYPE_RATIO_END
PRO_E_DPOINT_DIM_
CONSTR_VALRatiovalue(fromcurvestartor
end)
Usethefollowingvaluesforconstraint 2iftheoffsetsurfaceisusedtolocatethe
pointoncurve.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_DIM_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_DIM_
CONSTR_REFSurface
PRO_E_DPOINT_DIM_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
OFFSET
PRO_E_DPOINT_DIM_
CONSTR_VALOffsetvalue
Example9:ProjectDatumPointOnaPlanarsurface,DatumPlane,Datum
Axis,LinearCurveorLinearEdge
Toprojectadatumpointonaplanarsurface,datumplane,ordatumaxis,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOFFSET
PRO_E_DPOINT_DIM_
CONSTR_VALOffsetvalue
Example9:ProjectDatumPointOnaPlanarsurface,DatumPlane,Datum
Axis,LinearCurveorLinearEdge
Toprojectadatumpointonaplanarsurface,datumplane,ordatumaxis,the
followingconstraints arerequired.
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 1)PRO_E_DPOINT_PLA_
CONSTR_REFDatumpoint,endofcurve,or
vertex
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
PROJECT
ElementTrees:DatumFeatures 817PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFAxis,curve,oredge
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
OR
PlacementConstraint
ElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementReferenceElement ValidValue
PRO_E_DPOINT_PLA_
CONSTRAINT (Constraint 2)PRO_E_DPOINT_PLA_
CONSTR_REFSurface
PRO_E_DPOINT_PLA_
CONSTR_TYPEPRO_DTMPNT_CONSTR_TYPE_
ON
PRO_E_DPOINT_PLA_
CONSTR_VALNotapplicable
DatumAxisFeatures
Thebasicelementtreeforcreatingaxesisavailableintheincludefile
ProDtmAxis.h. Thefollowingfigureshowsthebasicstructureoftheelement
tree.
CreoParametric TOOLKITsupportscreationofthefollowingtypesofdatum
axes:
818 Creo®Parametric TOOLKIT User’sGuide•Example1:PointonSurfaceonpage819
•Example4:ParalleltoaLinearReference (Axis,InferredAxis,StraightEdge
orCurve)onpage822
•Example3:NormaltoaLinearReference (Axis,InferredAxis,StraightEdge
orCurve)onpage821
•Example4:ParalleltoaLinearReference (Axis,InferredAxis,StraightEdge
orCurve)onpage822
•Example5:ThroughEdgeorSurfaceonpage823
•Example6:TwoPlanesonpage823
•Example7:TwoPointsonpage824
•Example8:NormalPlanesonpage824
Thereisnosingleelementthatindicatesthetypeinconstraints elementtree.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Example6:TwoPlanesonpage823
•Example7:TwoPointsonpage824
•Example8:NormalPlanesonpage824
Thereisnosingleelementthatindicatesthetypeinconstraints elementtree.The
typeisdetermined implicitlybasedontheconstraint typeandreferences. The
typesofthedatumaxisconstraints forthereferences aredefinedbythe
enumerated typeProDtmaxisConstrType andareasfollows:
•PRO_DTMAXIS_CONSTR_TYPE_NORMAL— Positionsthedatumaxis
normaltotheselectedreference.
•PRO_DTMAXIS_CONSTR_TYPE_THRU— Positionsthedatumaxisthrough
theselectedreference.
•PRO_DTMAXIS_CONSTR_TYPE_TANGENT— Positionsthedatumaxis
tangenttotheselectedreference.
•PRO_DTMAXIS_CONSTR_TYPE_CENTER— Positionsthedatumaxis
throughthecenteroftheselectedplanarcircularedgeorcurveandnormalto
theplaneonwhichtheselectedcurveoredgelies.
•PRO_DTMAXIS_CONSTR_TYPE_PARALLEL— Positionsthedatumaxis
paralleltotheselectedreference.
Example6:CreatingaDatumAxis
ThesamplecodeinthefileUgDatumAxisCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparalleltotheselectedreference.
Example6:CreatingaDatumAxis
ThesamplecodeinthefileUgDatumAxisCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateadatumaxisattheintersection oftwoselected
surfaces.Theuserispromptedtoselectthetwosurfaces.
Examples
Example1:PointonSurface
Theelementtreestructureoftheaxis,createdwithtypeasPRO_DTMAXIS_
PNT_SURF, isshowninthefollowingfigure.
ElementTrees:DatumFeatures 819Thefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreeforthepointonsurfacetypeofaxis.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 1)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_POINT
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_NORMAL
PRO_E_DTMAXIS_CONSTR_
REFPRO_SURFACE
Example2:TangentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_POINT
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_NORMAL
PRO_E_DTMAXIS_CONSTR_
REFPRO_SURFACE
Example2:Tangent
Theelementtreestructureoftheaxis,createdwithtypeasTangent,isshownin
thefollowingfigure.
Thefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreeforthetangenttypeofaxis.
820 Creo®Parametric TOOLKIT User’sGuidePlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 1)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_TANGENT
PRO_E_DTMAXIS_CONSTR_
REFPRO_EDGE, PRO_CURVE
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_POINT, PRO_EDGE_
START, PRO_EDGE_END,PRO_
CRV_
START, PRO_CRV_END
Example3:NormaltoaLinearReference(Axis,InferredAxis,Straight
EdgeorCurve)
Theelementtreestructureoftheaxis,createdwithtypeasNormal,isshowninxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSTART, PRO_EDGE_END,PRO_
CRV_
START, PRO_CRV_END
Example3:NormaltoaLinearReference(Axis,InferredAxis,Straight
EdgeorCurve)
Theelementtreestructureoftheaxis,createdwithtypeasNormal,isshownin
thefollowingfigure.
Thefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreefortheNormaltypeofaxis.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 1)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_CONSTR_
TYPE
PRO_E_DTMAXIS_CONSTR_
REFPRO_EDGE (STRAIGHT), PRO_
CURVE (STRAIGHT), PRO_
AXIS, PRO_SURFACE
(CYLINDER/CONE/SPHERE/
TORUS/
General surface of
revolution). Theinferredaxis
willbeusedasthereference.
ElementTrees:DatumFeatures 821Note
FortheNormaltypeofdatumaxiscreation,thereferenceprovidedforthefirstxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTORUS/
General surface of
revolution). Theinferredaxis
willbeusedasthereference.
ElementTrees:DatumFeatures 821Note
FortheNormaltypeofdatumaxiscreation,thereferenceprovidedforthefirst
constraint thatis,PRO_DTMAXIS_CONSTR_TYPE_THRU shouldnotlieon
thereferenceprovidedforsecondconstraint thatisPRO_DTMAXIS_
CONSTR_TYPE_NORMAL.
Example4:ParalleltoaLinearReference(Axis,InferredAxis,Straight
EdgeorCurve)
Theelementtreestructureoftheaxis,createdwithtypeasParallel,isshownin
thefollowingfigure.
Thefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreefortheParalleltypeofaxis.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 1)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_POINT, PRO_EDGE_
START, PRO_EDGE_END,PRO_
CRV_START, PRO_CRV_END
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_PARALLEL
PRO_E_DTMAXIS_CONSTR_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxREFPRO_POINT, PRO_EDGE_
START, PRO_EDGE_END,PRO_
CRV_START, PRO_CRV_END
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_PARALLEL
PRO_E_DTMAXIS_CONSTR_
REFPRO_EDGE (STRAIGHT), PRO_
CURVE (STRAIGHT), PRO_
AXIS, PRO_SURFACE
(CYLINDER/CONE/SPHERE/
TORUS/
General surface of
revolution). Theinferredaxis
willbeusedasreference.
822 Creo®Parametric TOOLKIT User’sGuideExample5:ThroughEdgeorSurface
Theelementtreestructureoftheaxis,createdwithtypeThroughanEdgeora
Surface,isshowninthefollowingfigure.
Thefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreeforthethroughtypeofaxis.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 1)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_EDGE (Straight), PRO_
SURFACE (Cylinder)
Example6:TwoPlanes
Theelementtreestructureoftheaxis,createdusingthetypeastwoplanes,isasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_EDGE (Straight), PRO_
SURFACE (Cylinder)
Example6:TwoPlanes
Theelementtreestructureoftheaxis,createdusingthetypeastwoplanes,isas
showninthefollowingfigure.
Thefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreeforthetwoplanesreferencescheme.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 1)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_SURFACE (Planar)
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_SURFACE (Planar)
ElementTrees:DatumFeatures 823Example7:TwoPoints
Theelementtreestructureoftheaxis,createdusingthetypeastwopoints,is
showninthefollowingfigure.
Thefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreeforthetwopointstypeofaxis.
PlacementConstraintxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxshowninthefollowingfigure.
Thefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreeforthetwopointstypeofaxis.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 1)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_THRU
PRO_E_DTMAXIS_CONSTR_
REFPRO_POINT, PRO_EDGE_
START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END
Example8:NormalPlanes
Theelementtreestructureoftheaxis,createdusingthetypeasNormalPlanes,is
showninthefollowingfigure.
824 Creo®Parametric TOOLKIT User’sGuideThefollowingtablespecifiestheconstraints forthePRO_E_DTMAXIS_
CONSTRAINT elementsintheelementtreeforthenormalplanetypeofaxis.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCONSTRAINT elementsintheelementtreeforthenormalplanetypeofaxis.
PlacementConstraint
ElementPlacementConstraint
MemberElementsValidValue
PRO_E_DTMAXIS_
CONSTRAINT (Constraint 1)PRO_E_DTMAXIS_CONSTR_
TYPEPRO_DTMAXIS_CONSTR_
TYPE_NORMAL
PRO_E_DTMAXIS_CONSTR_
REFPRO_SURFACE (Planar)
PRO_E_DTMAXIS_DIM_
CONSTRAINT (Constraint 2)PRO_E_DTMAXIS_DIM_
CONSTR_REFPRO_SURFACE (Planar), PRO_
AXIS, PRO_EDGE
PRO_E_DTMAXIS_DIM_
CONSTR_VALValiddimension
PRO_E_DTMAXIS_DIM_
CONSTRAINT (Constraint 3)PRO_E_DTMAXIS_DIM_
CONSTR_REFPRO_SURFACE (Planar), PRO_
AXIS, PRO_EDGE
PRO_E_DTMAXIS_DIM_
CONSTR_VALValiddimension
DatumCoordinate SystemFeatures
Thefollowingfigureillustratesthegeneralstructureoftheelementtreefor
coordinate systemfeatures.
ElementTrees:DatumFeatures 825826 Creo®Parametric TOOLKIT User’sGuideFeatureElements
Thefollowingtabledescribestheelementsintheelementtreeforcoordinate
systemfeature.
ElementId ElementName DataType ValidValues
PRO_E_FEATURE_
TYPEFeatureType PRO_VALUE_TYPE_
INTPRO_FEAT_CSYSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingtabledescribestheelementsintheelementtreeforcoordinate
systemfeature.
ElementId ElementName DataType ValidValues
PRO_E_FEATURE_
TYPEFeatureType PRO_VALUE_TYPE_
INTPRO_FEAT_CSYS
PRO_E_STD_
FEATURE_NAMEFeatureName PRO_VALUE_TYPE
_WSTRING
PRO_E_CSYS_
ORIGIN_CONSTRSOriginConstraints Array
PRO_E_CSYS_
ORIGIN_CONSTROriginConstraint Compound
PRO_E_CSYS_
ORIGIN_CONSTR_REFOriginReference PRO_VALUE_TYPE_
SELECTION
PRO_E_CSYS_
OFFSET_TYPEOriginOffsetType PRO_VALUE_TYPE_
INTProCsysOffsetType
PRO_E_CSYS_
ONSURF_TYPEOnSurfaceType PRO_VALUE_TYPE_
INTProCsysOnSurfType
PRO_E_CSYS_DIM_
CONSTRSDimension Constraints Array
PRO_E_CSYS_DIM_
CONSTRDimension Constraint Compound
PRO_E_CSYS_DIM_
CONSTR_REFDimension Constraint
ReferencePRO_VALUE_TYPE_
SELECTION
PRO_E_CSYS_DIM_
CONSTR_TYPEDimension Constraint
TypePRO_VALUE_TYPE_
INTProCsysDimConstr
Type
PRO_E_CSYS_DIM_
CONSTR_VALDimension Constraint
ValuePRO_VALUE_TYPE
_DOUBLE
PRO_E_CSYS_
ORIENTMOVESOrientation Moves Array
PRO_E_CSYS_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTypePRO_VALUE_TYPE_
INTProCsysDimConstr
Type
PRO_E_CSYS_DIM_
CONSTR_VALDimension Constraint
ValuePRO_VALUE_TYPE
_DOUBLE
PRO_E_CSYS_
ORIENTMOVESOrientation Moves Array
PRO_E_CSYS_
ORIENTMOVECompound
PRO_E_CSYS_
ORIENTMOVE_MOVE_
TYPEMoveType PRO_VALUE_TYPE_
INTProCsysOrientMove
MoveOpt
PRO_E_CSYS_
ORIENTMOVE_MOVE_
VALMoveValue PRO_VALUE_TYPE
_DOUBLE
PRO_E_CSYS_
NORMAL_TO_SCREENSetZNormalToScreen PRO_VALUE_TYPE_
INTProCsysOrientMo
vesNrmScrnOpt
PRO_E_CSYS_
ORIENT_BY_METHODOrientByMethod PRO_VALUE_TYPE_
INTProCsysOrientByMe
thod
PRO_E_CSYS_
ORIENTSELAXIS1_
REFFirstAxisReference PRO_VALUE_TYPE_
SELECTION
PRO_E_CSYS_
ORIENTSELAXIS1_
REF_OPTFirstAxisReference
OptionPRO_VALUE_TYPE_
INTProCsysDirCsysRe
fOpt
PRO_E_CSYS_
ORIENTSELAXIS1_FirstAxisOption PRO_VALUE_TYPE_
INTProCsysOrientMo
veAxisOpt
ElementTrees:DatumFeatures 827ElementId ElementName DataType ValidValues
OPT
PRO_E_CSYS_
ORIENTSELAXIS1_
FLIPFlipfirstdirection -
PRO_E_CSYS_
ORIENTSELAXIS2_
REFSecondAxisReference PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:DatumFeatures 827ElementId ElementName DataType ValidValues
OPT
PRO_E_CSYS_
ORIENTSELAXIS1_
FLIPFlipfirstdirection -
PRO_E_CSYS_
ORIENTSELAXIS2_
REFSecondAxisReference PRO_VALUE_TYPE_
SELECTION
PRO_E_CSYS_
ORIENTSELAXIS2_
REF_OPTSecondAxisReference
OptionPRO_VALUE_TYPE_
INTProCsysDirCsysRe
fOpt
PRO_E_CSYS_
ORIENTSELAXIS2_
OPTSecondAxisOption PRO_VALUE_TYPE_
INTProCsysOrientMo
veAxisOpt
PRO_E_CSYS_
ORIENTSELAXIS2_
FLIPFlipseconddirection -
PRO_E_CSYS_
ORIENTSELAXIS2_
ROT_OPTSecondAxisRotation
OptionPRO_VALUE_TYPE_
INTProCsysOrientSe
lAxisRotOpt
PRO_E_CSYS_
ORIENTSELAXIS2_
ROTSecondAxisRotation PRO_VALUE_TYPE_
DOUBLEAxisopt1!=AxisOpt2
PRO_E_CSYS_TYPE
_MECHCoordinate SystemType
(available inCreo
Simulatemode only)PRO_VALUE_TYPE_
INTProCsysType
PRO_E_CSYS_
FOLLOW_SRF_OPTFollowSurfaceOption
(available inCreoNC
Sheetmetal modeonly)PRO_ELEM_TYPE_
OPTIONProCsysFollowSr
fOpt
PRO_E_CSYS_NAME_
DISPLAY_OPTNamedisplayoption
Specifiesifthenameof
thecoordinate system
mustbedisplayedinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(available inCreoNC
Sheetmetal modeonly)PRO_ELEM_TYPE_
OPTIONProCsysFollowSr
fOpt
PRO_E_CSYS_NAME_
DISPLAY_OPTNamedisplayoption
Specifiesifthenameof
thecoordinate system
mustbedisplayedinthe
graphicswindow.The
validvaluesaredefined
intheenumerated data
type
ProCsysNameDis
playOpt:
•PRO_CSYS_NAME_
DISPLAY_NO—This
isthedefaultvalue.
Specifiesthatthe
nameofthe
coordinate system
mustnotbedisplayed
inthwgraphics
window.PRO_VALUE_TYPE_
INTProCsysNameDis
playOpt
828 Creo®Parametric TOOLKIT User’sGuideElementId ElementName DataType ValidValues
•PRO_CSYS_NAME_
DISPLAY_YES—
Specifiesthatthe
nameofthe
coordinate system
mustbedisplayedin
thegraphicswindow.
PRO_E_CSYS_
DISPLAY_ZOOM_DEP_
OPTDisplayzoomdependent
option
Specifiesifthesizeofthe
coordinate systemis
dependent onthezoom
ofthemodel.Thevalid
valuesaredefinedinthe
enumerated datatype
ProCsysDisplay
ZoomDepOpt:
•PRO_CSYS_
DISPLAY_ZOOM_
DEP_NO—This isthe
defaultvalue.
Specifiesthatthe
coordinate systemis
independent ofthe
zoomofthemodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesaredefinedinthe
enumerated datatype
ProCsysDisplay
ZoomDepOpt:
•PRO_CSYS_
DISPLAY_ZOOM_
DEP_NO—This isthe
defaultvalue.
Specifiesthatthe
coordinate systemis
independent ofthe
zoomofthemodel.
Thecoordinate
systemdoesnotzoom
whenthemodelis
zoomed.
•PRO_CSYS_
DISPLAY_ZOOM_
DEP_YES—Specifies
thatthesizeofthe
coordinate systemis
dependent onthe
zoomofthemodel.
Thecoordinate
systemzoomswhen
themodelzooms.PRO_VALUE_TYPE_
INTProCsysDisplay
ZoomDepOpt
PRO_E_CSYS_AXIS_
LENGTHAxislength
Specifiesthedefault
lengthforthecoordinate
systemaxes.PRO_VALUE_TYPE_
DOUBLE
ElementTrees:DatumFeatures 829Note
Todetermine whetheracoordinate systemisadefaultcoordinate system,
querythenumberofPRO_E_CSYS_ORIGIN_CONSTRS andthenumberof
PRO_E_CSYS_ORIENTMOVES. Ifbothofthenumbersarezero,thenCsysis
thedefaultcoordinate system.
Thefollowingelementsarecommonforallthecasesofthecoordinate system
featurecreation:
ElementID Value Comments
PRO_E_FEATURE_TYPE PRO_FEAT_CSYS Mandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthedefaultcoordinate system.
Thefollowingelementsarecommonforallthecasesofthecoordinate system
featurecreation:
ElementID Value Comments
PRO_E_FEATURE_TYPE PRO_FEAT_CSYS Mandatory
PRO_E_STD_FEATURE_NAME FeatureName Optional
Example7:CreatingaDatumCoordinate System
ThesamplecodeinthefileUgGeneralCsysCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateaGeneralCsysatanoffsettothespecified
Csys.TheuserispromptedtoselectaCsys.
Examples
Example1:UsingThreePlanesorTwoEdgesandAxes
Usethefollowingelementsiftheoriginofthecoordinate systemisdefinedusing
threeplanesorusingtwoedgesandaxes:
ElementID Comments
PRO_E_CSYS_ORIGIN_CONSTRS Mandatory
PRO_E_CSYS_ORIGIN_CONSTR Mandatory
PRO_E_CSYS_ORIGIN_CONSTR_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS1_REF Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS1_
REFisaCsysreferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CSYS_ORIENTSELAXIS1_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS1_
REFisaCsysreference
PRO_E_CSYS_ORIENTSELAXIS1_FLIP Optional
PRO_E_CSYS_ORIENTSELAXIS2_REF Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS2_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS2_
REFisaCsysreference
PRO_E_CSYS_ORIENTSELAXIS2_FLIP Optional
Others Notapplicable
830 Creo®Parametric TOOLKIT User’sGuideExample2:UsingCurve,Edges,orPlaneandAxis
Usethefollowingelementsiftheoriginofthecoordinate systemisdefinedwitha
planeandanaxis,curve,oredges:
ElementID Comments
PRO_E_CSYS_ORIGIN_CONSTRS Mandatory
PRO_E_CSYS_ORIGIN_CONSTR Mandatory
PRO_E_CSYS_ORIGIN_CONSTR_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS1_REF Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS1_
REFisaCsysreferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CSYS_ORIENTSELAXIS1_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS1_
REFisaCsysreference
PRO_E_CSYS_ORIENTSELAXIS1_FLIP Optional
PRO_E_CSYS_ORIENTSELAXIS2_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS2_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS2_
REFisaCsysreference
PRO_E_CSYS_ORIENTSELAXIS2_FLIP Optional
Others Notapplicable
Example3:UsingaVertexoraDatumPoint
Usethefollowingelementsiftheoriginofthecoordinate systemisdefinedusing
avertexoradatumpoint:
ElementID Comments
PRO_E_CSYS_ORIGIN_CONSTRS Mandatory
PRO_E_CSYS_ORIGIN_CONSTR Mandatory
PRO_E_CSYS_ORIGIN_CONSTR_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS1_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS1_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS1_
REFisaCsysreference
PRO_E_CSYS_ORIENTSELAXIS1_FLIP Optional
PRO_E_CSYS_ORIENTSELAXIS2_REF MandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS1_
REFisaCsysreference
PRO_E_CSYS_ORIENTSELAXIS1_FLIP Optional
PRO_E_CSYS_ORIENTSELAXIS2_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS2_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Mandatory ifPRO_E_CSYS_ORIENTSELAXIS2_
REFisaCsysreference
PRO_E_CSYS_ORIENTSELAXIS2_FLIP Optional
Others Notapplicable
Example4:OrientingbySelectingReferences
UsethefollowingelementsifPRO_E_CSYS_ORIENT_BY_METHOD isPRO_
CSYS_ORIENT_BY_SEL_REFS:
ElementTrees:DatumFeatures 831ElementID Comments
PRO_E_CSYS_ORIENTSELAXIS1_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS1_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS1_FLIP Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS2_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS2_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS2_OPT Optional,usingdefaultifnotsetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CSYS_ORIENTSELAXIS2_REF Mandatory
PRO_E_CSYS_ORIENTSELAXIS2_REF_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS2_OPT Optional,usingdefaultifnotset
PRO_E_CSYS_ORIENTSELAXIS2_FLIP Optional,usingdefaultifnotset
Others Notapplicable
Example5:OrientingbySelectingCoordinateSystemAxes
UsethefollowingelementsifPRO_E_CSYS_ORIENT_BY_METHOD isPRO_
CSYS_ORIENT_BY_SEL_CSYS_AXES:
ElementID Comments
PRO_E_CSYS_NORMAL_TO_SCREEN Optional,validonlyifPRO_E_CSYS_ORIENT_
BY_METHOD =PRO_CSYS_ORIENT_BY_SEL_
CSYS_AXES. Otherwise, itisignored.
Others Notapplicable
Example6:UsingaCoordinateSystem
Usethefollowingelementsiftheoriginofthecoordinate systemisdetermined
usingaCsys:
ElementID Comments
PRO_E_CSYS_ORIGIN_CONSTRS Mandatory
PRO_E_CSYS_ORIGIN_CONSTR Mandatory
PRO_E_CSYS_ORIGIN_CONSTR_REF Mandatory
PRO_E_CSYS_OFFSET_TYPE Optional,usingdefault PRO_CSYS_OFFSET_
CARTESIAN ifnotset
PRO_E_CSYS_ORIENTMOVES Mandatory fornonPRO_CSYS_OFFSET_
CARTESIANxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CSYS_ORIGIN_CONSTR_REF Mandatory
PRO_E_CSYS_OFFSET_TYPE Optional,usingdefault PRO_CSYS_OFFSET_
CARTESIAN ifnotset
PRO_E_CSYS_ORIENTMOVES Mandatory fornonPRO_CSYS_OFFSET_
CARTESIAN
PRO_E_CSYS_ORIENTMOVE Mandatory fornonPRO_CSYS_OFFSET_
CARTESIAN
PRO_E_CSYS_ORIENTMOVE_MOVE_TYPE Mandatory fornonPRO_CSYS_OFFSET_
CARTESIAN
PRO_E_CSYS_ORIENTMOVE_MOVE_VAL Mandatory fornonPRO_CSYS_OFFSET_
CARTESIAN
ForPRO_CSYS_OFFSET_CYLINDRICAL, the
elements PRO_CSYS_ORIENTMOVE_MOVE_OPT_
RAD, PRO_CSYS_ORIENTMOVE_MOVE_OPT_
THETA,andPRO_CSYS_ORIENTMOVE_MOVE_
OPT_ZIarerequired.
832 Creo®Parametric TOOLKIT User’sGuideElementID Comments
ForPRO_CSYS_OFFSET_SPHERICAL, the
elements PRO_CSYS_ORIENTMOVE_MOVE_OPT_
RAD, PRO_CSYS_ORIENTMOVE_MOVE_OPT_
PHI,andPRO_CSYS_ORIENTMOVE_MOVE_OPT_
THETAarerequired.
PRO_E_CSYS_ORIENT_BY_METHOD Mandatory ,usingdefault PRO_CSYS_ORIENT_
BY_SEL_REFS ifnotset
Thefunction ProDtmcsysTransformfileRead() allocatesrequiredsteps
oftheelementtreetocreateCSYSfromatransformation file.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBY_SEL_REFS ifnotset
Thefunction ProDtmcsysTransformfileRead() allocatesrequiredsteps
oftheelementtreetocreateCSYSfromatransformation file.
TheinputfilenametoProDtmcsysTransformfileRead() shouldhavethe
nameofa.trffile,withtheextension. Thenamemustbelowercase only.The
fileshouldcontainacoordinate transformsuchas:
X1 X2 X3 Tx
Y1 Y2 Y3 Ty
Z1 Z2 Z3 Tz
where
•X1Y1Z1istheX-axisdirection,
•X2Y2Z2istheY-axisdirection,
•X3Y3Z3isnotused(therighthandruledetermines theZdirection), and
•TxTyTzistheoriginofthecoordinate system.
ElementTrees:DatumFeatures 83335
ElementTrees:DatumCurves
DatumCurveFeatures.............................................................................................835
DatumCurveTypes.................................................................................................835
OtherDatumCurveTypes........................................................................................839
Thischapterdescribeshowtocreate,redefine,andaccessdatafordatumcurvexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOtherDatumCurveTypes........................................................................................839
Thischapterdescribeshowtocreate,redefine,andaccessdatafordatumcurve
featuresusingCreoParametric TOOLKIT.ThechapterElementTrees:Datum
Featuresonpage792providesnecessarybackground forcreatingfeatures;we
recommend youreadthatmaterialfirst.
834 Creo®Parametric TOOLKIT User’sGuideDatumCurveFeatures
Theelementtreesfordatumcurvefeaturessupported inCreoParametric
TOOLKITaredocumented intheheaderfileProDtmCrv.h. Eachdatumfeature
typehasauniqueelementtreecontaining theparameters andreferences necessary
tocreatethattypeoffeature.
Notalldatumcurvetypesarecurrentlysupported inCreoParametric TOOLKIT.
Somecurvefeaturetypesareyettobeconverted intoelementtreeform.Other
curvetypeshaveelementtreeswithdatathatisnotyetaccessible throughCreo
Parametric TOOLKIT.
CommonElements
Alldatumcurvefeaturessupportthefollowingcommonelements.
ElementID Value
PRO_E_FEATURE_TYPE PRO_FEAT_CURVExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKIT.
CommonElements
Alldatumcurvefeaturessupportthefollowingcommonelements.
ElementID Value
PRO_E_FEATURE_TYPE PRO_FEAT_CURVE
PRO_E_CURVE_TYPE AslistedinProCurveT ype.Thiselementidentifies
thesubtreetobeused.
PRO_E_STD_FEATURE_NAME Wstring(featurename)
DatumCurveTypes
CreoParametric TOOLKITconsidersthefollowingcurvetypesforproviding
elementtreeaccess:
•SketchedDatumCurvesonpage835
•TrimDatumCurvesonpage836
•IntersectDatumCurvesonpage836
•WrapDatumCurvesonpage837
•OffsetDatumCurvesonpage837
•TangentOffsetDatumCurvesonpage838
•DatumCurvesfromCrossSectiononpage838
•DatumCurvesfromEquationonpage839
SketchedDatumCurves
CreoParametric TOOLKITprovidescompleteelementtreeaccesstothesketched
datumcurves.Thesketcheddatumcurvesaresketchedfeatures,andtherefore
mustbecreatedusingthetechniques describedinthechapterElementTrees:
SketchedFeaturesonpage987.
ElementTrees:DatumCurves 835ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_SKETCHED
PRO_E_STD_SECTION SectionelementtreexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSketchedFeaturesonpage987.
ElementTrees:DatumCurves 835ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_SKETCHED
PRO_E_STD_SECTION Sectionelementtree
PRO_E_DTMCRV_DISPLAY_HATCH Integer(PRO_B_TRUE, PRO_B_FALSE)
PRO_E_DTMCRV_HATCH_DENSITY Double(ifDISPLAY_HATCH =PRO_B_TRUE)
TrimDatumCurves
CreoParametric TOOLKITprovidescompleteelementtreeaccesstotrimdatum
curves(previously calledSplitdatumcurve).
ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_SPLIT
PRO_E_STD_CRV_SPLIT_CURVE ThePRO_CURVE geometric itemselectedfor
splitting.
PRO_E_STD_CRV_DIVIDER Thegeometric itemusedtodividethecurve.
PRO_E_STD_CRV_SPLIT_SIDE OneoftheProSplitSidesenumerations
IntersectDatumCurves
CreoParametric TOOLKITprovidescompleteelementtreeaccesstointersect
datumcurves.Intheuserinterface,theintersectcurvetyperesultsinoneofthe
followingcurvetypesdepending uponthereferences selected:
•Acurvebasedontheintersection oftwosurfaces
•Acurvebasedontheprojections oftwosectionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingcurvetypesdepending uponthereferences selected:
•Acurvebasedontheintersection oftwosurfaces
•Acurvebasedontheprojections oftwosections
ThefeatureelementtreeforIntersectcurvetypecontainstwoindependent setsof
elementstosupportboththesefeaturetypes.Thecurvetypedetermines which
elementsarerequired.Asthetwoprojections curvetypecontainstwoindependent
PRO_E_STD_SECTION elements,itmustbecreatedusingthetechniques
describedinthechapterElementTrees:SketchedFeaturesonpage987.
ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_INTSRF
PRO_E_CRV_IP_REF_TYPE PRO_CURVE_TYPE_INTSRF
PRO_E_CRV_IP_COMP_REF1 Compound
PRO_E_CRV_IP_REF_SEL1_TYPE PRO_CURVE_TYPE_WHOLE forthewholesurface
selection; PRO_CURVE_TYPE_MULTIPLE_SEL
formultipleindependent surfaceselections.
PRO_E_CRV_IP_REF1 BasedonthevalueofPRO_E_CRV_IP_SEL1_
TYPE.
Ifthevalueiswhole,specifiesasingleselectionofa
datumplane,quilt,orsolidgeometryentity.
Ifthevalueismultiple,specifiesamulti-valued
elementcontaining anynumberofsurfaceitems.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPE.
Ifthevalueiswhole,specifiesasingleselectionofa
datumplane,quilt,orsolidgeometryentity.
Ifthevalueismultiple,specifiesamulti-valued
elementcontaining anynumberofsurfaceitems.
836 Creo®Parametric TOOLKIT User’sGuideElementID Value
PRO_E_CRV_IP_COMP_REF2 Compound
PRO_E_CRV_IP_REF_SEL2_TYPE PRO_CURVE_TYPE_WHOLE forthewholesurface
selection; PRO_CURVE_TYPE_MULTIPLE_SEL
formultipleindependent surfaceselections.
PRO_E_CRV_IP_REF2 BasedonthevalueofPRO_E_CRV_IP_SEL1_
TYPE.
Ifthevalueiswhole,specifiesasingleselectionofa
datumplane,quilt,orsolidgeometryentity.
Ifthevalueismultiple,specifiesamultivalued
elementcontaining anynumberofsurfaceitems.
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_TWO_PROJ
PRO_E_CRV_IP_REF_TYPE PRO_CURVE_TYPE_TWO_PROJ
PRO_E_CRV_IP_COMP_SEC1 Compound
PRO_E_STD_SECTION Sectionelementtree
PRO_E_CRV_IP_COMP_SEC2 Compound
PRO_E_STD_SECTION Sectionelementtree
WrapDatumCurves
CreoParametric TOOLKITprovidescompleteelementtreeaccesstowrapdatumxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_STD_SECTION Sectionelementtree
PRO_E_CRV_IP_COMP_SEC2 Compound
PRO_E_STD_SECTION Sectionelementtree
WrapDatumCurves
CreoParametric TOOLKITprovidescompleteelementtreeaccesstowrapdatum
curves(alsocalledFormeddatumcurves).Becausethecurvetypecontainsa
PRO_E_STD_SECTION element,youmustcreateitusingthetechniques
describedinthechapterElementTrees:SketchedFeaturesonpage987.
ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_WRAP
PRO_E_CRV_WRAP_SRF_TYPE OneofProWrapSrfType
PRO_E_CRV_WRAP_SRF Selectioncontaining thewrapsurface(surface,quilt
orsolidgeometry)
PRO_E_STD_SECTION Section
PRO_E_CRV_WRAP_FLIP OneofProWrapFlip
PRO_E_CRV_WRAP_COORD_SYS IDofthesectioncoordinate system
OffsetDatumCurves
CreoParametric TOOLKITprovidespartialelementtreeaccesstooffsetdatum
curves.Intheuserinterface,theOffsetcurvetyperesultsinoneofthefollowing
curvetypesdepending upontheselectedreferences:
•Acurveoffsetnormaltoasurface
•Acurveoffsetalongaquiltxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurves.Intheuserinterface,theOffsetcurvetyperesultsinoneofthefollowing
curvetypesdepending upontheselectedreferences:
•Acurveoffsetnormaltoasurface
•Acurveoffsetalongaquilt
ThefeatureelementtreeforOffsetcurvetypecontainselementsthatsupportboth
thesefeaturetypes.Thecurvetypedetermines whichelementsarerequired:
ElementTrees:DatumCurves 837•PRO_CURVE_TYPE_OFFSET isoffsetnormaltoasurface
•PRO_CURVE_TYPE_OFFSET_IN_QUILT isoffsetalongaquilt.Offset
alongaquiltisnotsupported inCreoParametric TOOLKIT.
Creation,redefinition orinspection ofthecurvetypePRO_CURVE_TYPE_
OFFSET_IN_QUILT isnotsupported. Thisisbecausethecurvetype
containselementsthatrequiredataatrun-time,whichisnotcurrently
accessible toCreoParametric TOOLKIT.
Thefollowingtablelistsalltheelementsthatareusedtocreatethecurvetype
PRO_CURVE_TYPE_OFFSET.
ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_OFFSET
PRO_E_CRV_OFFS_FEAT_TYPE PRO_OFFSET_FROM_SURFACE
PRO_E_CRV_OFFS_SRF_REF SelectionofsurfaceorquiltxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_CURVE_TYPE_OFFSET.
ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_OFFSET
PRO_E_CRV_OFFS_FEAT_TYPE PRO_OFFSET_FROM_SURFACE
PRO_E_CRV_OFFS_SRF_REF Selectionofsurfaceorquilt
PRO_E_CRV_OFFS_DIR_FLIP OneofProOffsetDirFlip
PRO_E_DATUM_CURVE_OFFSET_VAL Theoffsetvalueorscaleifagraphisusedforoffset
PRO_E_CRV_OFFS_CRV_REF Selectionofdatumcurvetobeoffset
PRO_E_CRV_OFFS_GRAPH_REF Selectionofgraphusedforoffsetcalculation
(optional)
PRO_E_CRV_OFFS_ST_END OneofProOffsetStEnd
TangentOffsetDatumCurves
ThecurvetypeTangentOffsetisobsoleteinCreoParametric. Astheexisting
modelscreatedinearlierreleasesmaycontainthiscurvetype,CreoParametric
TOOLKITprovidesreadandredefineaccessonlyforthesecurves.
ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_TANGENT_OFFSET
PRO_E_CRV_TANG_OFFSET_CURVE Selectionofcurvetobeoffset
PRO_E_CRV_TANG_OFFSET_SURF Selectionofsurfaceinwhichtocreatetheoffset
PRO_E_CRV_TANG_OFFSET_DIR OneofProOffsetDirection
PRO_E_CRV_TANG_OFFSET_DIST Offsetvalue
DatumCurvesfromCrossSectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CRV_TANG_OFFSET_SURF Selectionofsurfaceinwhichtocreatetheoffset
PRO_E_CRV_TANG_OFFSET_DIR OneofProOffsetDirection
PRO_E_CRV_TANG_OFFSET_DIST Offsetvalue
DatumCurvesfromCrossSection
CreoParametric TOOLKITprovidescompleteelementtreeaccesstodatum
curvescreatedusingexistingplanarcrosssectionsinthemodel.Theelementsfor
thisfeaturetypearedescribedbelow:
ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_FROM_XSEC
PRO_E_CRV_FROM_XSEC_REF_XSEC Mandatory element.Specifiestheselectionofacross
sectiontobeusedtocreatethedatumcurve.
838 Creo®Parametric TOOLKIT User’sGuideDatumCurvesfromEquation
CreoParametric TOOLKITprovidescompleteelementtreeaccesstodatum
curvescreatedusinganequation.Someoftheelementsforthisfeaturetypeare
describedbelow:
ElementID Value
PRO_E_CURVE_TYPE PRO_CURVE_TYPE_FROM_EQUATION
PRO_E_CRV_FR_EQ_REF_CSYS Selectionofcoordinate systemusedasareference.
Thecoordinate systemrepresents thelocationofthe
‘zeropoint’oftheequation.
PRO_E_CRV_FR_EQ_CSYS_TYPE OneofProCrvFrEquatCsysTypesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CRV_FR_EQ_REF_CSYS Selectionofcoordinate systemusedasareference.
Thecoordinate systemrepresents thelocationofthe
‘zeropoint’oftheequation.
PRO_E_CRV_FR_EQ_CSYS_TYPE OneofProCrvFrEquatCsysTypes
PRO_E_CRV_FR_EQ_PARAM_MIN Valueofthelowerlimitforthedomainofthecurve
PRO_E_CRV_FR_EQ_PARAM_MAX Valueoftheupperlimitforthedomainofthecurve
PRO_E_CRV_ENTER_EQUATION Parametric equationintermsthevariablesofthe
selectedcoordinate systemtype
OtherDatumCurveTypes
Thefollowingcurvetypescontainrun-timedataintheirelementtreesthatisnot
currentlyaccessible byCreoParametric TOOLKIT.Currently,CreoParametric
TOOLKITdoesnotprovideelementtreeaccesstothefollowingcurvetypes:
•Copy
•Project
•Boundary Offset
Someothercurvetypes,includingThruPoints,FromFile,andUseXsecdonot
currentlyuseelementtreesinCreoParametric, andarethereforenotaccessible via
CreoParametric TOOLKIT.
ElementTrees:DatumCurves 83936
ElementTrees:EditMenuFeaturesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurrentlyuseelementtreesinCreoParametric, andarethereforenotaccessible via
CreoParametric TOOLKIT.
ElementTrees:DatumCurves 83936
ElementTrees:EditMenuFeatures
MirrorFeature.........................................................................................................841
MoveFeature..........................................................................................................843
FillFeature.............................................................................................................846
IntersectFeature.....................................................................................................848
MergeFeature........................................................................................................848
PatternFeature.......................................................................................................851xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPatternFeature.......................................................................................................851
WrapFeature..........................................................................................................851
TrimFeature...........................................................................................................851
OffsetFeature.........................................................................................................857
ThickenFeature......................................................................................................857
SolidifyFeature.......................................................................................................860
RemoveFeature.....................................................................................................863
AttachFeature........................................................................................................868xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAttachFeature........................................................................................................868
ThischapterdescribeshowtoconstructandaccesstheelementtreeforsomeEdit
MenufeaturesinCreoParametric TOOLKIT. Italsoshowshowtoredefine,
createandaccesstheproperties ofthesefeatures.
840 Creo®Parametric TOOLKIT User’sGuideMirrorFeature
TheMirrorfeaturecreatesacopyoftheselectedgeometrybymirroringabouta
mirrorplane.CreoParametric TOOLKITsupportsMirrorfeatureswherethe
initialselectionofitemswasofgeometry(curvesand/orsurfaces).Creo
Parametric TOOLKITdoesnotsupporttheelementtreeforMirrorfeatureswhere
theinitialselectionwasofoneormorefeatures.Mirrorfeaturesmadefromother
featureswillhavesubfeatures listedundertheMirrorentryintheCreoParametric
modeltree,whileMirrorfeaturesmadefromgeometrywillnotincludeanysub-
features.
Mirroring
EntitybeforeMirroring
EntityafterMirroring
where,
1—Specifies originalentitysuchasplane,surfaces,axesorparts.
2—Specifies mirrorline(mirrorplane).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatures.
Mirroring
EntitybeforeMirroring
EntityafterMirroring
where,
1—Specifies originalentitysuchasplane,surfaces,axesorparts.
2—Specifies mirrorline(mirrorplane).
3—Specifies thecopyoftheoriginalentity.
TheFeatureElementTreeforMirrorfeatureinCreo
Parametric
TheelementtreeforaMirrorfeatureisdocumented intheheaderfile
ProMirror.h, andhasasimplestructure.Thefollowingfiguredemonstrates
thefeatureelementtreestructure:
ElementTrees:EditMenuFeatures 841FeatureElementTreeforMirrorFeature
TheMirrorelementtreecontainsnonon-standard elementtypes.Thefollowing
listdetailsspecialinformation aboutsomeoftheelementsinthistree:
•PRO_E_FEATURE_TYPE—Must bePRO_FEAT_SRF_MDL.
•PRO_E_STD_FEATURE_NAME—Specifies thefeaturename.
•PRO_E_MIRROR_REF_ITEMS—A multivalued elementthatincludesthe
mirroritemreference. Itmustbereferences ofthefollowingtypes: PRO_
CURVE, PRO_COMP_CRV, PRO_AXIS, PRO_QUILT, PRO_PART.
•PRO_E_MIRROR_REF_PLANE—Specifies themirrorplaneandisaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmirroritemreference. Itmustbereferences ofthefollowingtypes: PRO_
CURVE, PRO_COMP_CRV, PRO_AXIS, PRO_QUILT, PRO_PART.
•PRO_E_MIRROR_REF_PLANE—Specifies themirrorplaneandisa
mandatory elementandmustbePRO_DATUM_PLANE orPRO_SURFACE
(onlyplanarsurfaces).
•PRO_E_COPY_NO_COPY—Specifies theoptiontocreateacopyornotandis
amandatory element.Itcanhaveeitherofthefollowingvalues:
○PRO_MIRROR_KEEP_ORIGINAL
○PRO_MIRROR_HIDE_ORIGINAL
CreatingaMirrorFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaMirrorFeaturebasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElement
Trees:Principles ofFeatureCreationonpage749.
RedefiningaMirrorFeature
FunctionIntroduced
•ProFeatur eRedefine()
842 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureRedefine() toredefineaMirrorFeaturebased
onthechangesmadeintheelementtree.Formoreinformation aboutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProFeatur eRedefine()
842 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureRedefine() toredefineaMirrorFeaturebased
onthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaMirrorFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaMirrorFeatureandtoretrievethe
elementtreedescription ofaMirrorFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
MoveFeature
TheMovefeaturecanbeusedtocreateandmoveacopyofanexistingsurfaceor
curveratherthanmovingtheoriginal.UsingtheMovefeaturesavestimebecause
itenablesyoutocreatesimplepatternswithsurfacesandcurves.
TheMovefeatureisavailableforbothpartandassemblymodes.Youcanapplyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurveratherthanmovingtheoriginal.UsingtheMovefeaturesavestimebecause
itenablesyoutocreatesimplepatternswithsurfacesandcurves.
TheMovefeatureisavailableforbothpartandassemblymodes.Youcanapply
thisfeatureindifferentmodes:
•Translatemode—Translatesurfaces,datumcurves,andaxesinadirection
perpendicular toareferenceplane.Youcanalsotranslatealongalinearedge,
axis,perpendicular toplane,twopoints,orcoordinate system.
•Rotatemode—Rotate surfaces,datumcurves,andaxesaboutanexistingaxis,
linearedge,perpendicular toplane,twopoints,orcoordinate system.
Tomoveasurfaceorcurverelativetoitsoriginalposition,defineamove
reference. IntheTranslatemode,themovereferenceistypicallyaplaneoredge
thatisperpendicular tothedirectioninwhichyouwanttotranslatethemoved
feature.InRotatemode,themovereferenceistypicallyanaxisoredgeabout
whichyouwanttorotatethemovedfeature.Inthismode,themovedobject
movesaboutthedirectionreference.
Following typesofmovereferences existsinTranslatemode:
•Linearcurve
•Linearedge
•Axisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichyouwanttorotatethemovedfeature.Inthismode,themovedobject
movesaboutthedirectionreference.
Following typesofmovereferences existsinTranslatemode:
•Linearcurve
•Linearedge
•Axis
•Axisofacoordinate system
•Plane
ElementTrees:EditMenuFeatures 843•Twopoints
Note
Thedirectionreferenceisalwaysperpendicular tothedirectioninwhich
youwanttomove.
Following typesofmovereferences existsinRotatemode:
•Linearcurve
•Edge
•Axis
•Axisofacoordinate system
•Twopoints
Note
YoucanflipthedirectionofthemoveintheRotatemode.
CreoParametric TOOLKITsupportsMovefeatureswheretheinitialselectionof
itemswasofgeometry(curvesand/orsurfaces).CreoParametric TOOLKITdoes
notsupporttheelementtreeforMovefeatureswheretheinitialselectionwasof
oneormorefeatures.Movefeaturesmadefromotherfeatureswillhave
subfeatures listedundertheMoveentryintheCreoParametric modeltree,while
Movefeaturesmadefromgeometrywillnotincludeanysub-features.
TheFeatureElementTreeforMovefeatureinCreo
Parametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsubfeatures listedundertheMoveentryintheCreoParametric modeltree,while
Movefeaturesmadefromgeometrywillnotincludeanysub-features.
TheFeatureElementTreeforMovefeatureinCreo
Parametric
TheelementtreeforaMovefeatureisdocumented intheheaderfile
ProMove.h, andhasasimplestructure.Thefollowingfiguredemonstrates the
featureelementtreestructure:
844 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforMoveFeature
Themoveelementtreecontainsnonon-standard elementtypes.Thefollowinglist
detailsspecialinformation aboutsomeoftheelementsinthistree:
•PRO_E_FEATURE_TYPE—Must bePRO_FEAT_SRF_MDL.
•PRO_E_STD_FEATURE_NAME—Specifies thefeaturename.
•PRO_E_SRF_TR_SURF_SELECTION—Specifies whethertomoveorcopy
theselectedgeometry.Curves,composite curves,axesandquiltsareeligible
toforthiselement.
•PRO_E_MOVE_NO_COPY—Specifies anoptiontocontrolcopyofthe
originalgeometry.
•Providestheabilitytotransformgeometrywithorwithoutacopy.
•PRO_E_MOVE_WITH_COPY—Specifies whethertohideordisplaythe
originalgeometryaftercopy.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoriginalgeometry.
•Providestheabilitytotransformgeometrywithorwithoutacopy.
•PRO_E_MOVE_WITH_COPY—Specifies whethertohideordisplaythe
originalgeometryaftercopy.
•PRO_E_MOVE_GEOM_TRF_ARR—Contains anarrayofmovements applied
totheselectedentities.Thiscanbeacombination oftranslational and
rotationaltransformations.
•PRO_E_DIRECTION_COMPOUND—Specifies thedirectionreferenceforthe
translation orrotationalmovement. Thiscompound elementisastandardCreo
Parametric elementsubtreeandisdescribedinProDirection.h.
CreatingaMoveFeature
FunctionIntroduced
•ProFeatur eCreate()
ElementTrees:EditMenuFeatures 845Usethefunction ProFeatureCreate() tocreateaMoveFeaturebasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElement
Trees:Principles ofFeatureCreationonpage749.
RedefiningaMoveFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaMoveFeaturebasedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTrees:Principles ofFeatureCreationonpage749.
RedefiningaMoveFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaMoveFeaturebased
onthechangesmadeintheelementtree.Formoreinformation
aboutProFeatureRedefine(), refertothesectionFeatureRedefineonpage
773ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaMoveFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaMoveFeatureandtoretrievethe
elementtreedescription ofaMoveFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
FillFeature
CreoParametric TOOLKITenablesyoutocreateandredefineflatsurfacefeatures
calledfillfeatures.Afillfeatureissimplyaflatsurfacefeaturethatisdefinedby
itsboundaries andisusedtothickensurfaces.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKITenablesyoutocreateandredefineflatsurfacefeatures
calledfillfeatures.Afillfeatureissimplyaflatsurfacefeaturethatisdefinedby
itsboundaries andisusedtothickensurfaces.
Note
Allfillfeaturesmustconsistofaflat,closed-loop sketchedfeature.
TheFeatureElementTreeforFillfeatureinCreo
Parametric
TheelementtreeforaFillfeatureisdocumented intheheaderfile
ProFlatSrf.h, andhasasimplestructure.
Thefollowingfiguredemonstrates thefeatureelementtreestructure:
846 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforFillFeature
Thefillelementtreecontainsnonon-standard elementtypes.Thefollowinglist
detailsspecialinformation aboutsomeoftheelementsinthistree:
•PRO_E_FEATURE_TYPE—It shouldbePRO_FEAT_DATUM_SURF.
•PRO_E_FEATURE_FORM—Specifies featureformandshouldbeofPRO_
FLATtypeonly.
•PRO_E_STD_SECTION—Specifies asketchedsection.Refertothesection
CreatingFeaturesContaining Sectionsonpage989fordetailsonhowto
createfeaturesthatcontainsketchedsections.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFLATtypeonly.
•PRO_E_STD_SECTION—Specifies asketchedsection.Refertothesection
CreatingFeaturesContaining Sectionsonpage989fordetailsonhowto
createfeaturesthatcontainsketchedsections.
TheelementtreefortheFillfeaturealsosupportsaccesstoFlatSheetmetal Wall
features.RefertothechapterProduction Applications: Sheetmetal onpage1288
forelementdetails.
CreatingaFillFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaFillFeaturebasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElement
Trees:Principles ofFeatureCreationonpage749.
RedefiningaFillFeature
FunctionIntroduced
ElementTrees:EditMenuFeatures 847•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaFillFeaturebasedon
thechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaFillFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaFillFeatureandtoretrievethe
elementtreedescription ofaFillFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
IntersectFeature
RefertothesectionIntersectDatumCurvesonpage836inthechapterElement
Trees:DatumCurvesonpage834fordetailsaboutthisfeature.
MergeFeature
TheMergeFeatureiscreatedbymergingtwoormoreselectedquilts.Incaseof
morethantwoquilts,everyinputquiltshouldhaveatleastoneofitsedges
adjacenttotheedgeofanyotherinputquilt,andthesurfacesmustnotoverlap.
Youcanmergeanumberofinputquiltsbyjoiningtwoadjacentquiltsoneafterxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmorethantwoquilts,everyinputquiltshouldhaveatleastoneofitsedges
adjacenttotheedgeofanyotherinputquilt,andthesurfacesmustnotoverlap.
Youcanmergeanumberofinputquiltsbyjoiningtwoadjacentquiltsoneafter
another,thatis,byaligningtheedgesofonequilttotheedgesoftheother.The
firstquiltselectedforthemergeoperationbecomestheprimaryreferencequilt.
Thesecondadjacentquiltisjoinedtotheprimaryquilt,formingthemainbodyor
anewlyformedprimaryquilt.Thethirdquiltis,then,joinedtothemainbody.
Thisprocesscontinuesuntilalltheinputquiltsarejoinedtogether.
Note
•Forasuccessful merge,theselectedquiltsmustbeorderedbasedupon
theiradjacency.
•Themergeoperationfailsincaseofintersecting quilts,andquiltsthatare
notadjacenttoanyotherinputquilt.Ineithercase,removetheproblematic
quilttocompletethemerge.
848 Creo®Parametric TOOLKIT User’sGuideYoucanalsoselecttheinputquiltsforthemergeoperationusingregionselection.
Incaseofregionselection,onlyboxselectionisavailableandthequiltstobexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx848 Creo®Parametric TOOLKIT User’sGuideYoucanalsoselecttheinputquiltsforthemergeoperationusingregionselection.
Incaseofregionselection,onlyboxselectionisavailableandthequiltstobe
selectedmustbecompletely insidetheregion.Theselectedquiltsareordered
basedonthefeaturenumberofthequilt’sparentfeature.
Youcanmergeonlytwoquiltsbyintersecting. Youcanspecifywhichportionof
thequilttoincludeinthemergefeaturebyselectingthesidesforeachofthe
quilts.
Amergedquiltconsistsoftwoormoreoriginalquiltsthatprovidethegeometry,
andamergefeaturethatcontainstheinformation forthesurfacejoining.The
inputquiltsareretained,evenifyoudeletetheMergefeature.
Note
InAssembly mode,youcanmergeonlyassembly-level quilts.Ifyouwantto
createcomponent-level mergefeatures,youmustfirstactivatethecomponent,
andthenmergethequiltsinthecomponent. Surfacemergeisavailableonly
forsurfacesthatbelongtothesamecomponent.
FeatureElementTreeforMergefeatureinCreo
Parametric
TheelementtreefortheMergefeatureisdocumented intheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforsurfacesthatbelongtothesamecomponent.
FeatureElementTreeforMergefeatureinCreo
Parametric
TheelementtreefortheMergefeatureisdocumented intheheaderfile
ProMerge.h, andhasasimplestructure.Thefollowingfiguredemonstrates the
featureelementtreestructure:
FeatureElementTreeforMergeFeature
Thefollowinglistdetailsspecialinformation abouttheelementsinthistree:
ElementTrees:EditMenuFeatures 849•PRO_E_FEATURE_TYPE—Specifies thefeaturetype;mustbePRO_FEAT_
DATUM_QUILT.
•PRO_E_SRF_MRG_QUILT_ARR—Specifies anarrayofthefollowing
compound element.Thearraymusthaveatleasttwoelementstocreatethe
Mergefeature.
○PRO_E_SRF_MRG_QUILT_CMPD—Specifies thesetofreferences and
sidestobeusedforthemergeoperation. Thesetconsistsofthefollowing
twoelements:
◆PRO_E_SRF_MRG_QUILT_REF—Specifies thequiltofthetype
PRO_QUILT selectedforthemergeoperation. Thisisamandatory
element.
◆PRO_E_SRF_MRG_QUILT_SIDE—Specifies thesideoftheselected
quiltthatshouldbeincludedinthemergefeatureincaseofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_QUILT selectedforthemergeoperation. Thisisamandatory
element.
◆PRO_E_SRF_MRG_QUILT_SIDE—Specifies thesideoftheselected
quiltthatshouldbeincludedinthemergefeatureincaseof
intersecting quilts.Thiselementisignoredwhenthequiltarray PRO_
E_SRF_MRG_QUILT_ARR containsmorethantwoelements.
•PRO_E_SRF_MRG_TYPE—Specifies themergetypeandcanhavefollowing
mergetypeoptions:
○PRO_SRF_MRG_JOIN—For joiningquilts.
○PRO_SRF_MRG_INTSCT—For mergingtwoquiltsattheintersection.
Thisisthedefaultoption.
ThemergetypemustbePRO_SRF_MRG_JOIN whenthequiltarray PRO_
E_SRF_MRG_QUILT_ARR containsmorethantwoelements.
•PRO_E_STD_FEATURE_NAME—Specifies themergefeaturename.
CreatingaMergeFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaMergeFeaturebasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElement
Trees:Principles ofFeatureCreationonpage749.
RedefiningaMergeFeature
FunctionIntroducedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtothesectionOverview ofFeatureCreationonpage750ofchapterElement
Trees:Principles ofFeatureCreationonpage749.
RedefiningaMergeFeature
FunctionIntroduced
•ProFeatur eRedefine()
850 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureRedefine() toredefineaMergeFeaturebased
onthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaMergeFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaMergeFeatureandtoretrievethe
elementtreedescription ofaMergeFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
PatternFeature
RefertothechapterElementTrees:Patternsonpage947fordetailsaboutthis
feature.
WrapFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpage771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
PatternFeature
RefertothechapterElementTrees:Patternsonpage947fordetailsaboutthis
feature.
WrapFeature
RefertothesectionWrapDatumCurvesonpage837inthechapterElement
Trees:DatumCurvesonpage834fordetailsaboutthisfeature.
TrimFeature
Trimfeatureisappliedtoremoveportionsofanexistingsurfacefeature.Atrim
featureissimilartoasolidcut.Following aretheexistingtypesoffeaturecreation
forthetrimmingofasurfaceoraquilt.
•UseQuilts—Cuts apiecefromasurfaceusinganintersecting quilt.Creo
Parametric consumes thequiltthatisusedtotrimasurfaceandallowsyouto
keepeitherorbothsidesofthetrimmedsurface.Youcantrimquiltsinthe
followingways:
○Byaddingacutorslotasyoudotoremovematerialfromsolidfeatures
○Bytrimmingthequiltatitsintersection withanotherquiltortoitsown
silhouetteedgeasitappearsinacertainview
○Byfilletingcornersofthequilt
○Bytrimmingalongadatumcurvelyingonthequilt
•UseCurves—T rimsasurfaceusingselectedcurvesandedges.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsilhouetteedgeasitappearsinacertainview
○Byfilletingcornersofthequilt
○Bytrimmingalongadatumcurvelyingonthequilt
•UseCurves—T rimsasurfaceusingselectedcurvesandedges.
ElementTrees:EditMenuFeatures 851Therulesfordefiningasurfacetrimusingadatumcurveareasfollows:
○Youcanuseacontinuous chainofdatumcurves,innersurfaceedges,or
solidmodeledgestotrimaquilt.
○Datumcurvesusedfortrimmingmustlieonthequilttobetrimmedand
shouldnotextendbeyondtheboundaries ofthisquilt.
○Ifthecurvedoesnotextendtotheboundaries ofthequilt,thesystem
calculates theshortestdistancetothequiltboundaryandcontinuesthetrim
inthisdirection.
•Silhouette—T rimsasurfaceatitssilhouetteedgefromaspecifieddirection.
TheFeatureElementTreeforTrimfeatureinCreo
Parametric
TheelementtreeforaTrimfeatureisdocumented intheheaderfileProTrim.h,
andhasasimplestructure.Thefollowingfiguredemonstrates thefeatureelement
treestructure:
852 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforTrimFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandhasasimplestructure.Thefollowingfiguredemonstrates thefeatureelement
treestructure:
852 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforTrimFeature
Thetrimelementtreecontainsnonon-standard elementtypes.Thefollowinglist
detailsspecialinformation aboutsomeoftheelementsinthistree:
•PRO_E_FEATURE_TYPE—It shouldbePRO_FEAT_CUT.
•PRO_E_FEATURE_FORM—Specifies featureformandisamandatory
elementapplicable onlyforusequiltandthintypes.IthasPRO_USE_SURFS
andPRO_NOTYPE astheirvalidvalues.
•PRO_E_SRF_TRIM_TYPE—Specifies trimtypeidentityandisanon-
redefinable mandatory element.Thetrimtypedetermines therequired
ElementTrees:EditMenuFeatures 853structurefortheremaining elementsintheelementtree.Eachtyperequires
differentmandatory elements.Thedifferenttrimtypesareasfollows:
○PRO_SURF_TRIM_USE_CRV—use curvestotrimthequilt.
○PRO_SURF_TRIM_USE_QLT—use anotherquilttotrimthegivenquilt.
○PRO_SURF_TRIM_THIN
○PRO_SURF_TRIM_SILH—trim quiltusingsilhouetteedges.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_SURF_TRIM_USE_CRV—use curvestotrimthequilt.
○PRO_SURF_TRIM_USE_QLT—use anotherquilttotrimthegivenquilt.
○PRO_SURF_TRIM_THIN
○PRO_SURF_TRIM_SILH—trim quiltusingsilhouetteedges.
•PRO_E_TRIM_QUILT—Specifies trimmedquiltandshouldbeoftypePRO_
SURFACE orPRO_QUILT only.
•PRO_E_STD_USEQLT_QLT—Specifies trimmingquiltsandtrimming
planes.ItshouldhavePRO_SURFACE, PRO_QUILT andPRO_DATUM_
PLANEvaluesonly.Itisapplicable forusequiltandthintypesonly.
•PRO_E_STD_CURVE_COLLECTION_APPL—Specifies thetrimmingcurves
andisapplicable forusecurveonly.
•PRO_E_TRIM_SILH_PLANE—Specifies silhouetteplaneandcanbeoftype
PRO_SURFACE orPRO_DATUM_PLANE only.
•PRO_E_MATERIAL_SIDE—Specifies materialsideoptionsandhasthe
followingvalues:
○PRO_TRIM_MATL_SIDE_ONE
○PRO_TRIM_MATL_SIDE_TWO
○PRO_TRIM_MATL_BOTH_SIDES
•PRO_E_PRIMARY_QLTSIDE—Specifies theprimaryquiltsideoptionsand
theyarelistedasfollows:
○PRO_TRIM_PRIM_QLT_SIDE_ONE
○PRO_TRIM_PRIM_QLT_SIDE_TWO
•PRO_E_STD_USEQLT_SIDE—Specifies thicknessdirectionoptionsforthinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheyarelistedasfollows:
○PRO_TRIM_PRIM_QLT_SIDE_ONE
○PRO_TRIM_PRIM_QLT_SIDE_TWO
•PRO_E_STD_USEQLT_SIDE—Specifies thicknessdirectionoptionsforthin
trimsandcanonlybeasfollows:
○PRO_TRIM_STD_QUILT_SIDE_ONE
○PRO_TRIM_STD_QUILT_SIDE_TWO
○PRO_TRIM_STD_QUILT_BOTH_SIDES
•PRO_E_KEEP_TRIM_SURF_OPT—Specifies tokeeptrimmingsurface
optionandisvalidonlywhenthetrimmingquiltisasurfaceorquilt.Ithasthe
followingvalues:
○PRO_KEEP_TRIM_SURF_OPT_NO
○PRO_KEEP_TRIM_SURF_OPT_YES
•PRO_E_THICKNESS—Specifies thicknessforthintrims.
854 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SRF_OFFS_METHOD—Specifies thetypesofoffsetforthintrims
andareasfollows:
○PRO_TRIM_SRF_OFFS_METH_NORMTOSURF—The surfaceorquiltis
thickenedinadirectionnormaltothesurface.
○PRO_TRIM_SRF_OFFS_METH_AUTOSCALE—The surfaceorquiltis
thickenedbyautomatically determining scalingcoordinate systemandfit
alongallthreeaxes.
○PRO_TRIM_SRF_OFFS_METH_MANUALSCALE—The surfaceorquilt
isthickenedbyspecifying thescalingcoordinate systemandcontrolfitting
motion.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalongallthreeaxes.
○PRO_TRIM_SRF_OFFS_METH_MANUALSCALE—The surfaceorquilt
isthickenedbyspecifying thescalingcoordinate systemandcontrolfitting
motion.
•PRO_E_SRF_OFFS_CTRLFIT—Specifies thecontrolfitandisapplicable
forthintrimsonly.Itoffsetsthesurfacebycreatingabest-fitoffsetthatis
scaledwithrespecttoaselectedcoordinate system.Itallowsyoutodefinethe
axisfortranslation. Itconsistsofthefollowingelements:
○PRO_E_SRF_OFFS_SCALINGCSYS specifiesthecontrolfitcoordinate
systemandshouldhaveavalueofPRO_CSYS.
○PRO_E_SRF_OFFS_AXISES specifiesthecontrolfitaxeshavingthe
followingvalues:
◆PRO_TRIM_OFFS_TRF_NONE
◆PRO_TRIM_OFFS_TRF_X
◆PRO_TRIM_OFFS_TRF_Y
◆PRO_TRIM_OFFS_TRF_Z
◆PRO_TRIM_OFFS_TRF_XY
◆PRO_TRIM_OFFS_TRF_YZ
◆PRO_TRIM_OFFS_TRF_ZX
◆PRO_TRIM_OFFS_TRF_ALL
•PRO_E_SRF_OFFS_HANDLINGS—Specifies anarrayofPRO_E_SRF_
OFFS_HANDLING andisapplicable forthintrimsonly.
•PRO_E_SRF_OFFS_HANDLING—Specifies specialhandlingitemand
consistsofPRO_E_SRF_OFFS_REF_SEL whicharespecialhandlingfacesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOFFS_HANDLING andisapplicable forthintrimsonly.
•PRO_E_SRF_OFFS_HANDLING—Specifies specialhandlingitemand
consistsofPRO_E_SRF_OFFS_REF_SEL whicharespecialhandlingfaces
whichshouldbefromthetrimmingquilt.
Alistofelementsrequiredfordifferenttypesoftrims:
Trimtype ElementId
QuiltType PRO_E_FEATURE_TYPE
PRO_E_FEATURE_FORM
PRO_E_SRF_TRIM_TYPE
PRO_E_STD_FEATURE_NAME
ElementTrees:EditMenuFeatures 855Trimtype ElementId
PRO_E_SURF_TRIM_TYPE
PRO_E_TRIM_QUILT
PRO_E_STD_USEQLT_QLT
PRO_E_MATERIAL_SIDE
PRO_E_PRIMARY_QLTSIDE
PRO_E_KEEP_TRIM_SURF_OPT
UseCurve PRO_E_FEATURE_TYPE
PRO_E_SRF_TRIM_TYPE
PRO_E_STD_FEATURE_NAME
PRO_E_SURF_TRIM_TYPE
PRO_E_TRIM_QUILT
PRO_E_STD_CURVE_COLLECTION_APPL
PRO_E_MATERIAL_SIDE
PRO_E_PRIMARY_QLTSIDE
Thin PRO_E_FEATURE_TYPE
PRO_E_FEATURE_FORM
PRO_E_SRF_TRIM_TYPE
PRO_E_STD_FEATURE_NAME
PRO_E_SURF_TRIM_TYPE
PRO_E_TRIM_QUILT
PRO_E_STD_USEQLT_QLT
PRO_E_STD_USEQLT_SIDE
PRO_E_KEEP_TRIM_SURF_OPT
PRO_E_THICKNESS
PRO_E_SRF_OFFS_METHOD
PRO_E_SRF_OFFS_CTRLFIT
PRO_E_SRF_OFFS_HANDLINGSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_SURF_TRIM_TYPE
PRO_E_TRIM_QUILT
PRO_E_STD_USEQLT_QLT
PRO_E_STD_USEQLT_SIDE
PRO_E_KEEP_TRIM_SURF_OPT
PRO_E_THICKNESS
PRO_E_SRF_OFFS_METHOD
PRO_E_SRF_OFFS_CTRLFIT
PRO_E_SRF_OFFS_HANDLINGS
Silhouette PRO_E_FEATURE_TYPE
PRO_E_SRF_TRIM_TYPE
PRO_E_STD_FEATURE_NAME
PRO_E_SURF_TRIM_TYPE
PRO_E_TRIM_QUILT
PRO_E_TRIM_SILH_PLANE
PRO_E_MATERIAL_SIDE
PRO_E_PRIMARY_QLTSIDE
PRO_E_KEEP_TRIM_SURF_OPT
CreatingaTrimFeature
FunctionIntroduced
•ProFeatur eCreate()
856 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureCreate() tocreateaTrimFeaturebasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElementTrees:
Principles ofFeatureCreationonpage749.
RedefiningaTrimFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaTrimFeaturebased
onthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProFeatureRedefine() toredefineaTrimFeaturebased
onthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaTrimFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaTrimFeatureandtoretrievethe
elementtreedescription ofaTrimFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
OffsetFeature
RefertothesectionOffsetDatumCurvesonpage837inthechapterElement
Trees:DatumCurvesonpage834fordetailsaboutthisfeature.
ThickenFeature
TheThickenfeatureisavailableforbothpartandforassemblymodesandcanbe
definedwithrespecttocoordinate systems,axes,andsurfaces.Youcanapplythis
featuretocheckthethicknessofapartinthemodel.Thisfeaturealsoformsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedwithrespecttocoordinate systems,axes,andsurfaces.Youcanapplythis
featuretocheckthethicknessofapartinthemodel.Thisfeaturealsoformsthe
basisformodelanalysisandthicknesscheck.Theresultofthethicknessanalysis
isasfollows:
•Thethicknessisbetweenthedesignrange.
•Thethicknessexceedsthemaximum designvalue.
•Thethicknessisbelowtheminimumdesignvalue.
ElementTrees:EditMenuFeatures 857Thickenfeaturesusepredetermined surfacefeaturesorquiltgeometrytoaddor
removethinmaterialsectionsinthedesign.Thesurfacefeaturesorquiltgeometry
providegreaterflexibility withinthedesignandenableyoutotransformthe
geometrytobettermeetthedesignneeds.
TheFeatureElementTreeforThickenfeaturein
CreoParametric
TheelementtreeforaThickenfeatureisdocumented intheheaderfile
ProThicken.h, andhasasimplestructure.Thefollowingfiguredemonstrates
thefeatureelementtreestructure:
FeatureElementTreeforThickenFeature
TheThickenelementtreecontainsnonon-standard elementtypes.Thefollowingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefeatureelementtreestructure:
FeatureElementTreeforThickenFeature
TheThickenelementtreecontainsnonon-standard elementtypes.Thefollowing
listdetailsspecialinformation aboutsomeoftheelementsinthistree:
•PRO_E_FEATURE_TYPE—PRO_FEAT_PROTRUSION orPRO_FEAT_
CUT.
•PRO_E_FEATURE_FORM—Must bePRO_E_SURFS.
858 Creo®Parametric TOOLKIT User’sGuide•PRO_E_FEAT_FORM_ALWAYS_THIN—Must bePRO_THIN.
•PRO_SRF_OFFS_METHOD—Of fsetmethodthatcanbeenumerated as
follows:
○PRO_OFFS_METH_NORMTOSURF— Specifiestheoffsetofthethickened
surfacenormaltotheoriginalsurface.
○PRO_OFFS_METH_AUTOSCALE— Specifiesautoscaleandtranslatesthe
thickenedsurfacewithrespecttoanautomatically determined coordinate
system.
○PRO_OFFS_METH_MANUALSCALE— Specifiesmanualscale.
Note
Ifyouchangetheoffsetmethodforaparticularfeature,allchildrenofthis
featurefail.
CreatingaThickenFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaThickenFeaturebasedonxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturefail.
CreatingaThickenFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaThickenFeaturebasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElement
Trees:Principles ofFeatureCreationonpage749.
RedefiningaThickenFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaThickenFeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaThickenFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
ElementTrees:EditMenuFeatures 859Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaThickenFeatureandtoretrievethe
elementtreedescription ofaThickenFeature.Formoreinformation aboutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementtreethatdescribesthecontentsofaThickenFeatureandtoretrievethe
elementtreedescription ofaThickenFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapter.ElementTrees:Principles ofFeatureCreationonpage749
SolidifyFeature
Solidifyfeaturesareusedtocreatecomplexgeometrythatwouldbedifficultto
createusingregularsolidfeatures.
Solidifyfeaturesusepredetermined surfacefeaturesorquiltgeometryandconvert
themintosolidgeometry.YoucanuseSolidifyfeaturestoadd,remove,orreplace
solidmaterialinthedesigns.Thequiltgeometryprovidesgreaterflexibility within
thedesign,andtheSolidifyfeatureenablesthedesignertotransformthegeometry
tomeetdesignneeds.
TheattributesoftheSolidifyfeatureare:
•Patch—Replaces aportionofthesurfacewithquilt.Thequiltboundarymust
lieonthesurface.
•AddMaterial—Fills aquiltwithsolidmaterial.
•RemoveMaterial—Removes materialfrominsideoroutsideaquilt.
Note
addmaterialandremovematerialattributesarealwaysavailable.Patchisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlieonthesurface.
•AddMaterial—Fills aquiltwithsolidmaterial.
•RemoveMaterial—Removes materialfrominsideoroutsideaquilt.
Note
addmaterialandremovematerialattributesarealwaysavailable.Patchis
availableonlyiftheselectedquiltboundaries lieonsolidgeometry.
TheFeatureElementTreeforSolidifyFeaturein
CreoParametric
TheelementtreeforaSolidifyfeatureisdocumented intheheaderfile
ProSolidify.h, andhasasimplestructure.Thefollowingfiguredemonstrates
thefeatureelementtreestructure:
860 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforSolidifyFeature
Thesolidifyelementtreecontainsnonon-standard elementtypes.Thefollowing
listdetailsspecialinformation aboutsomeoftheelementsinthistree:
•PRO_E_STD_FEATURE_TYPE—Must beoneofthefollowingtypes—
○Protrusion—PRO_FEAT_PROTRUSION
○Cut—PRO_FEAT_CUT
○Patch—PRO_FEAT_PATCH
•PRO_E_FEATURE_FORM— Mustbeofthefollowingtypes:
○PRO_USE_SURFS— Represents protrusion (PRO_FEAT_PROTRUSION)
andcut(PRO_FEAT_CUT).
○PRO_NOTYPE— Represents patch(PRO_FEAT_PATCH).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○Patch—PRO_FEAT_PATCH
•PRO_E_FEATURE_FORM— Mustbeofthefollowingtypes:
○PRO_USE_SURFS— Represents protrusion (PRO_FEAT_PROTRUSION)
andcut(PRO_FEAT_CUT).
○PRO_NOTYPE— Represents patch(PRO_FEAT_PATCH).
•PRO_E_PATCH_QUILT— Specifiesthereferencequiltandisamandatory
element.Avalidquiltorsurfacesatisfiesanyofthefollowingcontexts:
Quilt isopen
•CASE1
○Allboundaries lieonsolidsurfaces.
○Solidgeometrydoesnotintersectquilt.
○Solidgeometryandquiltformclosedemptyvolume.
•CASE2
○Allboundaries lieonsolidsurfaces.
○Solidgeometryintersectsquilt.
•CASE3
○Allonesidededgesareinsidesolidgeometry.
•CASE4
○Allonesidededgesareoutsidesolidgeometry.
ElementTrees:EditMenuFeatures 861○Solidgeometryintersectsquilt.
•CASE5
○Solidgeometryandquiltformclosedemptyvolume.
○Atleast,onesidededgeintersectsgeometry.
•CASE6
○Quiltintersectsgeometry.
○Noneoftheonesidededgesintersectgeometry.
•CASE7
○Solidgeometrydoesnotintersectquilt.
Quilt isclosed
•CASE1
○Solidgeometrydoesnotintersectquilt.
•CASE2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•CASE6
○Quiltintersectsgeometry.
○Noneoftheonesidededgesintersectgeometry.
•CASE7
○Solidgeometrydoesnotintersectquilt.
Quilt isclosed
•CASE1
○Solidgeometrydoesnotintersectquilt.
•CASE2
○Quiltcompletely buriedinsideMaterial.
•CASE3
○Solidgeometrypartlyintersectsquilt.
CreatingaSolidifyFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaSolidifyFeaturebasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElement
Trees:Principles ofFeatureCreationonpage749.
RedefiningaSolidifyFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaSolidifyFeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
862 Creo®Parametric TOOLKIT User’sGuideAccessingaSolidifyFeature
FunctionIntroducedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofchapterElementTrees:Principles ofFeatureCreationonpage749.
862 Creo®Parametric TOOLKIT User’sGuideAccessingaSolidifyFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaSolidifyFeatureandtoretrievethe
elementtreedescription ofaSolidifyFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
RemoveFeature
UsetheRemovefeaturetoremovegeometrywithoutdisturbing thefeature
history.Itallowsyoutomodifyexistingimportedgeometryordeletesome
geometryfromapart(notnecessarily formedbyasinglefeature)withouthaving
torerouteandrefineanumberoffeatures.
Youcanselectoneofthefollowingitemsforremoval:
•Surfaces,surfacesets,orintentsurfaces
•Oneclosedloopchainofone-sidededgesfromasinglequilt
Geometry removalresultsinneighboring surfacesbeingextendedortrimmedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Surfaces,surfacesets,orintentsurfaces
•Oneclosedloopchainofone-sidededgesfromasinglequilt
Geometry removalresultsinneighboring surfacesbeingextendedortrimmedto
convergeandclosethevoid.Theextendedgeometryisattachedasasolidor
surfacetotheselectedsurfaces.Incaseofaone-sidededgechainselectedasthe
reference, theextendedgeometrycanbeattachedtotheselectedquilt,orcreated
asanewquilt.
Youcanexcludecontoursinmulti-contour surfacesfrombeingremoved.For
periodicfeaturesseparatedbyartificialedges(forexample,extrudedcylindersor
revolvedfeatures),thefeatureinternallyreferences allthesurfaces,evenifoneof
themisselected.
ElementTrees:EditMenuFeatures 863Note
•Allsurfacesthatareextendedortrimmedmustbeadjacenttotheboundary
definedbyreferences.
•Ifanadjacentsurfacedoesnotneedtobeextended,itwillnotbecopied.
•Surfacesthataretobeextendedmustbeextendable.
•Extendedsurfacesmustconvergetoformadefinedvolume.
•Nonewpatchesarecreatedwhenthesurfacesareextended.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Surfacesthataretobeextendedmustbeextendable.
•Extendedsurfacesmustconvergetoformadefinedvolume.
•Nonewpatchesarecreatedwhenthesurfacesareextended.
•Ifthemodifiedgeometrycannotbeattachedasasolid,itcanbemanually
attachedasaquilt.
•Featureoperations suchasSuppress,Delete,Redefine,Reroute,Copy/Paste,
andPattern(limitedtoreferencepatternifpatterning byitself)aresupported.
•Transformation ofthisfeaturebyitselfisnotapplicable andallowed.
FeatureElementTreefortheRemoveFeature
TheelementtreefortheRemovefeatureisdocumented intheheaderfile
ProRemoveSurf.h. Thefollowingfiguredemonstrates theelementtree
structure:
864 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforRemoveFeature
TheRemoveelementtreecontainsstandardelementtypes.Thefollowinglist
detailsspecialinformation abouttheelementsinthistree:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldalways
havethevalue PRO_FEAT_RM_SURF.
•PRO_E_STD_FEATURE_NAME—Specifies thenameoftheremovefeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldalways
havethevalue PRO_FEAT_RM_SURF.
•PRO_E_STD_FEATURE_NAME—Specifies thenameoftheremovefeature.
•PRO_E_RM_SURF_REF_TYPE—Specifies thereferencetype.Thiselement
decidesthetypeofreferences thatyoucanselectforremoval.Itcanhavethe
followingvalues:
○PRO_RM_SURF_SRF_REF—Specifies thatsurfacesetscanbeselectedas
thereferences.
○PRO_RM_SURF_CRV_REF—Specifies thatachainofone-sidededges
canbeselectedasthereference.
ElementTrees:EditMenuFeatures 865•PRO_E_RM_SURF_ATTACH_TYPE—Specifies theattachment type.Itcan
havethefollowingvalues:
○FM_RM_SURF_ATTACH_SAME—Specifies thattheextendedgeometry
willbeattachedtotheselectedsurfacesifPRO_E_RM_SURF_REF_
TYPEisequaltoPRO_RM_SURF_SRF_REF, ortotheselectedquiltif
PRO_E_RM_SURF_REF_TYPE isequaltoPRO_RM_SURF_CRV_REF.
○FM_RM_SURF_ATTACH_SEP—Specifies thattheextendedgeometry
willbecreatedasaseparatequiltifPRO_E_RM_SURF_REF_TYPE is
equaltoPRO_RM_SURF_CRV_REF.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_RM_SURF_REF_TYPE isequaltoPRO_RM_SURF_CRV_REF.
○FM_RM_SURF_ATTACH_SEP—Specifies thattheextendedgeometry
willbecreatedasaseparatequiltifPRO_E_RM_SURF_REF_TYPE is
equaltoPRO_RM_SURF_CRV_REF.
•PRO_E_RM_SURF_SRF_REFS—Specifies thesetofsurfacereferences. This
elementisrequiredifPRO_E_RM_SURF_REF_TYPE isequaltoPRO_RM_
SURF_SRF_REF. Itconsistsofthefollowingelements:
○PRO_E_STD_SURF_COLLECTION_APPL—Specifies thesurfaces
selectedforremoval.Youcanselectmultiplesurfaces.Thiselementis
requiredifPRO_E_RM_SURF_REF_TYPE isequaltoPRO_RM_SURF_
SRF_REF.
○PRO_E_STD_EXCL_CNTRS—Specifies anarrayofexcludedcontoursof
thetypePRO_E_STD_EXCL_CNTRS_ONE_CNTR.
○PRO_E_KEEP_REMOVED_SRFS_OPT—Specifies theProBoolean
optionthatallowsyoutoretaintheremovedsurfacesasaseparatequilt.
•PRO_E_RM_SURF_CRV_REFS—Specifies thesetofcurvereferences. This
elementisrequiredifPRO_E_RM_SURF_REF_TYPE isequaltoPRO_RM_
SURF_CRV_REF. Itconsistsofthefollowingelement:
○PRO_E_STD_CURVE_COLLECTION_APPL—Specifies thesinglexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementisrequiredifPRO_E_RM_SURF_REF_TYPE isequaltoPRO_RM_
SURF_CRV_REF. Itconsistsofthefollowingelement:
○PRO_E_STD_CURVE_COLLECTION_APPL—Specifies thesingle
closedloopchainofone-sidededges.ThiselementisrequiredifPRO_E_
RM_SURF_REF_TYPE isequaltoPRO_RM_SURF_CRV_REF.
•PRO_E_RM_SURF_LEAVE_OPEN_OPT—Specifies iftheholethatiscreated
aftersurfacesareremovedmustbekeptopen.Thesolidsareconverted to
quiltsandclosedquiltsareconverted toopenquilts.
•PRO_E_RM_SURF_AUTO_SPLIT_SRF—Specifies iftheextending surface
fortheselectedshapesurfacemustbeautomatically splitwhengeometryis
removed.Thesplittingsurfaceisautomatically selected.
•PRO_E_RM_SURF_MAINTAIN_TOPO—Specifies iftheregeneration must
failwhenthemodelchangesandthesamesolutiontypecannotbe
reconstructed. Itisusedtoindicateifthetopologyinthemodelmustbe
maintained.
866 Creo®Parametric TOOLKIT User’sGuideNote
TheRemovefeatureisavailableintheparametric modelingenvironment as
wellasintheflexiblemodelingenvironment. Intheparametric modelingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmaintained.
866 Creo®Parametric TOOLKIT User’sGuideNote
TheRemovefeatureisavailableintheparametric modelingenvironment as
wellasintheflexiblemodelingenvironment. Intheparametric modeling
environment, acollection ofsurfacesorcurvesareusedasthereferences. In
theflexiblemodelingenvironment, aregionoracollection ofsurfacesthat
includeregionsisusedasthereference. Intheflexiblemodelingenvironment
withasurfacecollection thatincludesregions,theRemovefeaturereplaces
eachregionbythesurfaceitbelongsto.Thecontoursthatdefineotherregions
ofthesamesurfaceareautomatically savedasthePRO_E_STD_EXCL_
CNTRS_ONE_CNTR element.
ElementDetailsofPRO_E_STD_EXCL_CNTRS_ONE_CNTR
EachPRO_E_STD_EXCL_CNTRS_ONE_CNTR specifiesoneexcludedcontour.
Itconsistsofthefollowingelements:
PRO_E_STD_EXCL_CNTRS_ONE_CNTR
•PRO_E_STD_EXCL_CNTR_SRF_REF—Specifies thesurfacereferencefor
theexcludedcontour.
•PRO_E_STD_EXCL_CNTR_EDGE_REF—Specifies theedgereferencefor
theexcludedcontour.Thiselementcanbeanyedgeofthecontour.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_STD_EXCL_CNTR_SRF_REF—Specifies thesurfacereferencefor
theexcludedcontour.
•PRO_E_STD_EXCL_CNTR_EDGE_REF—Specifies theedgereferencefor
theexcludedcontour.Thiselementcanbeanyedgeofthecontour.
CreatingtheRemoveFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreatetheRemovefeaturebased
ontheelementtreeinput.Formoreinformation about ProFeatureCreate(),
refertothesectionOverview ofFeatureCreationonpage750inthechapter
ElementTrees:Principles ofFeatureCreationonpage749.
ElementTrees:EditMenuFeatures 867RedefiningtheRemoveFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefinetheRemovefeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingtheRemoveFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingtheRemoveFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsoftheRemovefeature,andtoretrievethe
elementtreedescription oftheRemovefeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
Example1:CreatingaRemoveSurfaceFeature
ThesamplecodeinUgRemoveSurfCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreatearemoveSurfacefeature.
AttachFeature
TheAttachfeatureallowsyoutoattachopenquiltstosolidorquiltgeometry,if
theopenquiltdoesnotintersectthesolidorquiltgeometry.Youcanselectan
openquiltandattachittoanotherquiltorsolidgeometrywithinthesamemodel.
Youcanalsoselecttwoopenquiltswithinthesamemodelwhichdonotintersect
andattachthem.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxopenquiltandattachittoanotherquiltorsolidgeometrywithinthesamemodel.
Youcanalsoselecttwoopenquiltswithinthesamemodelwhichdonotintersect
andattachthem.
ThisfeatureisusefulincaseofUDFplacement whenthegeometryoftheUDF
doesnotintersectthepart.
FeatureElementTreeforAttachFeature
TheelementtreeforaAttachfeatureisdocumented intheheaderfile
ProFlexAttach.h andhasasimplestructure.Thefollowingfigure
demonstrates thestructureofthefeatureelementtree.
868 Creo®Parametric TOOLKIT User’sGuideAttachFeatureElementTree
Theelementsinthistreearedescribedbelow:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_FLXATTACH.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_ATTACH_QLT_REFS—Specifies theopenquiltsyouselectfor
attachment.
•PRO_E_ATTACH_OPT_TYPE—Specifies theattachment type.Itisgivenby
theenumerated typeProFlexAttachOptType andisofthefollowing
types:
○PRO_FLXATT_SOLID_OPT—Specifies thesolidtowhichtheopen
quiltsareattached.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheenumerated typeProFlexAttachOptType andisofthefollowing
types:
○PRO_FLXATT_SOLID_OPT—Specifies thesolidtowhichtheopen
quiltsareattached.
○PRO_FLXATT_SURF_OPT—Specifies thequiltsurfacetowhichthe
openquiltsareattached.
CreatingtheAttachFeature
FunctionIntroduced
ElementTrees:EditMenuFeatures 869•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreatetheAttachfeaturebasedon
theelementtreeinput.Formoreinformation about ProFeatureCreate(),
refertothesectionOverview ofFeatureCreationonpage750inthechapter
ElementTrees:Principles ofFeatureCreationonpage749.
RedefiningtheAttachFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefinetheAttachfeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingtheAttachFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingtheAttachFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() totoretrievethe
elementtreedescription oftheAttachfeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
870 Creo®Parametric TOOLKIT User’sGuide37
ElementTrees:Replace
Introduction.............................................................................................................872
TheFeatureElementTree.......................................................................................872
Thischapterdescribesthebasicprinciples ofcreatingatweaksurfacereplacement
feature.ThechapterElementTrees:Principles ofFeatureCreationonpage749is
anecessarybackground forthistopic.Readthatchapterbeforethisone.
871Introductionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature.ThechapterElementTrees:Principles ofFeatureCreationonpage749is
anecessarybackground forthistopic.Readthatchapterbeforethisone.
871Introduction
Thesurfacereplacement functionality enablesyoutoreplacethespecifiedsurface
onamodelwithadatumplaneorquilt.ThisissimilartotheReplaceoptionfrom
TWEAKmenuinCreoParametric. Seethecorresponding sectioninthePart
Modeling User’sGuideforadetaileddescription oftherestrictions and
requirements ofthefeature.
TheFeatureElementTree
Theelementtreeforasurfacereplacement featureisdocumented intheheader
fileProReplace.h, andisshowninthefollowingfigure.
ElementTreeforSurfaceReplacement
Thefollowingtabledescribestheelementsintheelementtreeforthesurface
replacement feature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT PRO_FEAT_REPLACE_SURF
PRO_E_STD_REPLACED_SURF PRO_VALUE_TYPE_
SELECTIONThesurfacetoberemoved
PRO_E_STD_REPLACEMENT_
SURFPRO_VALUE_TYPE_
SELECTIONThereplacement surfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_STD_REPLACED_SURF PRO_VALUE_TYPE_
SELECTIONThesurfacetoberemoved
PRO_E_STD_REPLACEMENT_
SURFPRO_VALUE_TYPE_
SELECTIONThereplacement surface
PRO_E_STD_KEEP_QUILT PRO_VALUE_TYPE_INT Specifieswhethertokeepthequilt
Tokeepthereplacement surface(datumplaneorquilt),addtheelement PRO_E_
STD_KEEP_QUILT andsetitsvalueto1.Ifyouomittheelement,oritsvalueis
0,thereplacement surfacewillbeconsumed bythereplacement feature.
Afteryouhavedefinedtheelementtree,callthefunction
ProFeatureCreate() tocreatethetweaksurfacereplacement feature.
872 Creo®Parametric TOOLKIT User’sGuide38
ElementTrees:DraftFeatures
DraftFeature...........................................................................................................874
VariablePullDirectionDraftFeature.........................................................................881
Thischapterintroduces andshowshowtocreate,redefineandaccessdraft
features.
873DraftFeature
TheDraftfeatureaddsadraftanglebetween-89.9°and+89.9°toindividualxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThischapterintroduces andshowshowtocreate,redefineandaccessdraft
features.
873DraftFeature
TheDraftfeatureaddsadraftanglebetween-89.9°and+89.9°toindividual
surfacesortoaseriesofsurfaces.
Youcandrafteithersolidsurfacesorquiltsurfaces,butnotacombination ofboth.
Thefirstselectedsurfacedetermines thetypeofadditional surfaces(solidor
quilts)thatcanbeselectedasdraftsurfacesforthisfeature.
Someofthetermsassociated withtheDraftfeatureare:
•Draftsurfaces—The surfacesofthemodeltobedrafted.
•Drafthinges—Lines andcurvesonthedraftsurfacesthatthesurfacesare
pivotedabout(alsocalledneutralcurves),orquiltofsurfaces.Drafthinges
canbedefinedby:
○Aplane,inwhichcasethedraftsurfacesarepivotedabouttheir
intersection withtheplane.
○Individual curvechainsonthedraftsurfaces.
○Aquilt,inwhichcasethedraftsurfacesarepivotedabouttheirintersection
withthequilt.
•Draftdirection—Direction usedtomeasurethedraftangleandcanbedefined
intermsof:
○Aplane,inwhichcasethedraftdirectionisnormaltothisplane.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwiththequilt.
•Draftdirection—Direction usedtomeasurethedraftangleandcanbedefined
intermsof:
○Aplane,inwhichcasethedraftdirectionisnormaltothisplane.
○Astraightedgeoradatumaxis,inwhichcasethedraftdirectionisparallel
totheedgeoraxis.
○Twopoints,suchasdatumpointsormodelvertices,inwhichcasethedraft
directionisparalleltothelineconnecting thetwopoints.
○Acoordinate system,inwhichcasethedraftdirectioninitiallydefaultsto
thedirectionofitsx-axis.
•Draftangle—The anglebetweenthedraftdirectionandtheresultingdrafted
surfaces.Ifthedraftsurfacesaresplit,youcandefinetwoindependent angles
foreachsideofthedraftedsurface.Draftanglesmustbewithintherangeof
-89.9°and+89.9°.
FeatureElementTreefortheDraftFeature
Theelementtreeforadraftfeatureisdocumented intheheaderfile
ProDraft.h, andhasasimplestructure.Thefollowingfiguredemonstrates the
featureelementtreestructure:
874 Creo®Parametric TOOLKIT User’sGuideFeatureElementtreeforDraftFeaturesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDraft.h, andhasasimplestructure.Thefollowingfiguredemonstrates the
featureelementtreestructure:
874 Creo®Parametric TOOLKIT User’sGuideFeatureElementtreeforDraftFeatures
ElementTrees:DraftFeatures 875Thefeatureelementtreecontainsnonon-standard elementtypes.Thefollowing
listdetailsspecialinformation aboutsomeoftheelementsinthistree:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetype.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_DRAFT_TWEAK_OR_INTERSEC—Specifies tweakorintersect
depending onwhethertheresultingdraftsurfaceencounters anedgeofthe
modelornotsuggesting thepresenceoftheextendoption.Itcanhaveanyof
thefollowingvalues:
○PRO_DRAFT_UI_TWEAK forcreatingregulardraftgeometry.
○PRO_DRAFT_UI_INTERSECT foradjustingthedraftgeometryto
intersectanexistingedgeofthemodel.
○PRO_DRAFT_UI_INTERSECT_EXTEND specifiesintersectwithextend,
whenthedraftdoesnotextendtotheadjacentmodelsurface.
Note
ItisanoptionfortheearlierversionsofPro/ENGINEER.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_DRAFT_UI_INTERSECT_EXTEND specifiesintersectwithextend,
whenthedraftdoesnotextendtotheadjacentmodelsurface.
Note
ItisanoptionfortheearlierversionsofPro/ENGINEER.
•PRO_E_DRAFT_EXTEND—Specifies extendoptionofthedraft.Itisofthe
followingtypes:
○PRO_DRAFT_UI_NO_EXTEND—Intersect withoutExtend.
○PRO_DRAFT_UI_EXTEND—Intersect withExtend.
Note
Itisapplicable forfeaturescreatedusingPro/ENGINEER versionpriorto
Pro/ENGINEER Wildfire2.0Releaseandisavailableonlywhen PRO_E_
DRAFT_TWEAK_OR_INTERSEC isequaltoPRO_DRAFT_UI_
INTERSECT.
•PRO_E_DRAFT_SPLIT—Specifies splitdetailsofthedraft.Itcanbeanyof
thefollowingtypes:
○PRO_DRAFT_UI_SPLIT_NONE
○PRO_DRAFT_UI_SPLIT_NEUT specifiessplitondrafthinge.
○PRO_DRAFT_UI_SPLIT_SURF specifiessplitatsurface.
○PRO_DRAFT_UI_SPLIT_SCTCH specifiessplitatsketch.
876 Creo®Parametric TOOLKIT User’sGuideNote
Draftsurfacescanbespliteitherbythedrafthingeorbyadifferentcurve
onthedraftsurface,suchasanintersection withaquilt,orasketchedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx876 Creo®Parametric TOOLKIT User’sGuideNote
Draftsurfacescanbespliteitherbythedrafthingeorbyadifferentcurve
onthedraftsurface,suchasanintersection withaquilt,orasketched
curve.Ifyouaresplittingbyasketchthatdoesnotlieonthedraftsurface,
CreoParametric projectsitonthedraftsurfaceinthedirectionnormalto
thesketchingplane.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies draftedsurfaces.
•PRO_E_DIRECTION_COMPOUND—Specifies thedirectionutilityforthe
draft.
•PRO_E_DRAFT_CONSTANT_OR_VARIABLE—Specifies constantor
variabledraft.Forvariabledraftonecanspecifymorethanoneangleperdraft
side.Itcanbeoneofthefollowingtypes:
○PRO_DRAFT_UI_VARIABLE
○PRO_DRAFT_UI_CONSTANT
•PRO_E_STD_CURVE_COLLECTION_APPL—Specifies theexcludeloopor
thedrafthinges.
•PRO_E_DRAFT_SPLIT_GEOM—Specifies splitgeometry(sketch,plane,or
quiltusedforsplitting)andisanoptionalelement.
•PRO_E_STD_SECTION—Specifies thesplitgeometryandisanoptional
element.Itcontainsthefollowingelement:
○PRO_E_SEC_USE_SKETCH—Specifies theselectedsplitgeometryandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_STD_SECTION—Specifies thesplitgeometryandisanoptional
element.Itcontainsthefollowingelement:
○PRO_E_SEC_USE_SKETCH—Specifies theselectedsplitgeometryand
isanoptionalelement.
•PRO_E_DRAFT_INCLUDE_TANGENT—Specifies includedtangent.Itcan
beanyofthefollowingtypes:
○PRO_DRAFT_UI_NOT_INC_TANG specifiesthenon-included tangents.
○PRO_DRAFT_UI_INC_TANG specifiestheincludedtangents.
•PRO_E_DRAFT_SIDE_1—Specifies detailsaboutfirstdraft’sside.
•PRO_E_DRAFT_SIDE_2—Specifies detailsaboutseconddraft’sside.
ElementDetailsofPRO_E_DRAFT_SIDE_1
EachPRO_E_DRAFT_SIDE_1 hasthefollowingelements:
•PRO_E_DRAFT_NEUTRAL_OBJECT_TYPE_1—Specifies thetypeofdraft
hinge.Itcanbeanyofthefollowingtypes:
ElementTrees:DraftFeatures 877○PRO_DRAFT_UI_NO_NEUT—Specifies thatnodrafthingehavebeen
fixed.
○PRO_DRAFT_UI_PLANE—Specifies aplane.Inthiscase,thedraft
surfacesarepivotedabouttheirintersection withthisplane.
○PRO_DRAFT_UI_CURVE—Specifies acurvechainlocatedonthedraft
surfaces.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfixed.
○PRO_DRAFT_UI_PLANE—Specifies aplane.Inthiscase,thedraft
surfacesarepivotedabouttheirintersection withthisplane.
○PRO_DRAFT_UI_CURVE—Specifies acurvechainlocatedonthedraft
surfaces.
○PRO_DRAFT_UI_QUILT—Specifies aquiltofsurfaces.Inthiscase,the
draftsurfacesarepivotedabouttheirintersection withthequilt.
•PRO_E_DRAFT_NEUTRAL_PLANE_1—Specifies theplaneselectedasthe
drafthinge.
•PRO_E_STD_CURVE_COLLECTION_APPL—Specifies excludeloopor
drafthinges.
•PRO_E_DRAFT_DEPENDENT_1—Specifies thedependence andcontrols
whetherthecorresponding sidesaredraftedanddependsonthetypeofthe
drafthinge.Itcanbeanyofthefollowingtypes:
○PRO_DRAFT_UI_INDEPENDENT specifiesthattwoindependent draft
anglesforeachsideofthedraftedsurface.
○PRO_DRAFT_UI_DEPENDENT specifiesasingledraftangle,withthe
secondsidedraftedintheoppositedirection.
○PRO_DRAFT_UI_NONE specifiesthatnoneofthesidesbedrafted.
•PRO_E_DRAFT_ANGLE_1—Specifies thedraftangleandisaconstant
value.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsecondsidedraftedintheoppositedirection.
○PRO_DRAFT_UI_NONE specifiesthatnoneofthesidesbedrafted.
•PRO_E_DRAFT_ANGLE_1—Specifies thedraftangleandisaconstant
value.
•PRO_E_DRAFT_ANGLES—This isanoptionforavariabledraft.Itspecifies
acollection ofdraftanglesandpoints PRO_E_DRAFT_ANG_PNT. Each
PRO_E_DRAFT_ANG_PNT consistsofthefollowingelements:
○PRO_E_STD_POINT_COLLECTION_APPL—Specifies thepoint
collection fortheangle.
○PRO_E_DRAFT_ANGLE—Specifies thedraftangle.
•PRO_E_DRAFT_NEUTRAL_QUILT_1—Specifies thequiltofsurfaces
selectedasthedrafthinge.
ElementDetailsofPRO_E_DRAFT_SIDE_2
EachPRO_E_DRAFT_SIDE_2 hasthefollowingelements:
•PRO_E_DRAFT_NEUTRAL_OBJECT_TYPE_2—Specifies thetypeofdraft
hinge.Itcanbeanyofthefollowingtypes:
○PRO_DRAFT_UI_NO_NEUT—Specifies thatnodrafthingehasbeen
fixed.
878 Creo®Parametric TOOLKIT User’sGuide○PRO_DRAFT_UI_PLANE—Specifies aplane.Inthiscase,thedraft
surfacesarepivotedabouttheirintersection withthisplane.
○PRO_DRAFT_UI_CURVE—Specifies acurvechainlocatedonthedraftxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacesarepivotedabouttheirintersection withthisplane.
○PRO_DRAFT_UI_CURVE—Specifies acurvechainlocatedonthedraft
surfaces.
○PRO_DRAFT_UI_QUILT—Specifies aquiltofsurfaces.Inthiscase,the
draftsurfacesarepivotedabouttheirintersection withthequilt.
•PRO_E_DRAFT_NEUTRAL_PLANE_2—Specifies theplaneselectedasthe
drafthinge.
•PRO_E_STD_CURVE_COLLECTION_APPL—Specifies excludeloopor
drafthinges.
•PRO_E_DRAFT_DEPENDENT_2—Specifies thedependence andcontrols
whetherthecorresponding sidesaredraftedanddependsonthetypeofthe
drafthinge.Itcanbeanyofthefollowingtypes:
○PRO_DRAFT_UI_INDEPENDENT specifiesthattwoindependent draft
anglesforeachsideofthedraftedsurface.
○PRO_DRAFT_UI_DEPENDENT specifiesasingledraftangle,withthe
secondsidedraftedintheoppositedirection.
○PRO_DRAFT_UI_NONE specifiesthatnoneofthesidebedrafted.
•PRO_E_DRAFT_ANGLE_2—Specifies thedraftangleandisaconstant
value.
•PRO_E_DRAFT_ANGLES—This isanoptionforavariabledraft.Itspecifiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_DRAFT_UI_NONE specifiesthatnoneofthesidebedrafted.
•PRO_E_DRAFT_ANGLE_2—Specifies thedraftangleandisaconstant
value.
•PRO_E_DRAFT_ANGLES—This isanoptionforavariabledraft.Itspecifies
acollection ofdraftanglesandpoints PRO_E_DRAFT_ANG_PNT. Each
PRO_E_DRAFT_ANG_PNT consistsofthefollowingelements:
○PRO_E_STD_POINT_COLLECTION_APPL—Specifies thepoint
collection fortheangle.
○PRO_E_DRAFT_ANGLE—Specifies thedraftangle.
•PRO_E_DRAFT_NEUTRAL_QUILT_2—Specifies thequiltofsurfaces
selectedasthedrafthinge.
CreatingaDraft
FunctionIntroduced:
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaDraftbasedonelement
treeinput.Formoreinformation about ProFeatureCreate(), refertothe
sectionOverview ofFeatureCreationonpage750ofthechapterElementTrees:
Principles ofFeatureCreationonpage749.
ElementTrees:DraftFeatures 879RedefiningaDraft
FunctionIntroduced:
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaDraftbasedonthe
changesmadeintheelementtree.Formoreinformation aboutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctionIntroduced:
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaDraftbasedonthe
changesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofthechapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaDraft
FunctionIntroduced:
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaDraftandtoretrievetheelementtree
description ofaDraft.Formoreinformation about
ProFeatureElemtreeExtract() refertothesectionFeatureInquiryon
page771ofthechapterElementTrees:Principles ofFeatureCreationonpage
749.
Example1:CreationofaDraftFeature
ThesamplecodeinthefileUgSimpleDraftCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateaSimpleDraftfeature.
Theuserispromptedtoselect:
1.Thesurfacetobedrafted
2.Thehinge(edge/curve)
3.Thedirectionofthedraft(axis,edge)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatcreat showshowtocreateaSimpleDraftfeature.
Theuserispromptedtoselect:
1.Thesurfacetobedrafted
2.Thehinge(edge/curve)
3.Thedirectionofthedraft(axis,edge)
Example2:CreationofaDraftFeatureusing
interactivecollection
ThesamplecodeinthefileUgIntcollectionDraftCreate.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateadraftfeatureusinginteractive collection.
Theuserispromptedtocreateacollection of:
1.Thesurfacetobedrafted("ProSurfacesCollect" )
2.Thedirectionofthedraft(axis,edge-"ProSelect" )
3.Thehinge(edge/curve-"ProCurvesCollect" )
880 Creo®Parametric TOOLKIT User’sGuideExample3:CreationofaDraftFeaturebasedonthe
Object-Action paradigm
ThesamplecodeinthefileUgOADraftCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat demonstrates creationofasimpleDraftfeaturebasedontheObject-
Actionparadigmusingselectionbufferaccess.Theuserisexpectedtopopulate
theselectionbufferinCreoParametric userinterfacewithxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatcreat demonstrates creationofasimpleDraftfeaturebasedontheObject-
Actionparadigmusingselectionbufferaccess.Theuserisexpectedtopopulate
theselectionbufferinCreoParametric userinterfacewith
1.Asurfacecollection forthesurfacestobedrafted
2.Acurvecollection forthehinge(edge/curve)
3.Aselectionforthedirectionofthedraft(axis,edge)
Thisexampleparsestheselectionbufferandusestheinformation forthe
programmatic creationofdraftfeature.Theselectionbuffermaybepopulated
withtheabovethreeentriesinanyorder.Thesuccessoffeaturecreationdepends
upontheappropriateness ofthedataintheselectionbuffer.
VariablePullDirectionDraftFeature
TheVariablePullDirectionDraft(VPDD)featurediffersfromtheregularDraft
featurewherethepulldirectionisrestrictedtobeconstant.AVPDDisdefinedby
anedgeorcurve,asurfacethatspecifiesthevariablepulldirection,adepth
option,andoptionally,splittingsurfaces.
FeatureElementTreefortheVariablePullDirection
DraftFeature
TheelementtreefortheVariablePullDirectionDraftfeatureisdocumented inthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoption,andoptionally,splittingsurfaces.
FeatureElementTreefortheVariablePullDirection
DraftFeature
TheelementtreefortheVariablePullDirectionDraftfeatureisdocumented inthe
headerfileProVPDD.h. Thefollowingfiguredemonstrates thefeatureelement
treestructure:
ElementTrees:DraftFeatures 881FeatureElementTreeforVariablePullDirectionDraftFeature
882 Creo®Parametric TOOLKIT User’sGuidePRO_E_VPDD_SET_CMP
Theelementsinthistreeareasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_VPDD.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_VPDD_PULL_DIR_CMP—Specifies thepulldirectionreference.
Thiscompound elementconsistsofthefollowingelements:
○PRO_E_VPDD_PULL_DIR_REF—Specifies theselectedreference
surface.Itcouldbeasingle PRO_QUILT, asingle PRO_DATUM_PLANE,
asingle PRO_LOG_SRF, ormultiple PRO_SURFACE references thatare
tangenttoeachother.
○PRO_E_VPDD_PULL_DIR_FLIP—Specifies thepulldirectiondefined
bythenormalvectorsoftheselectedreferencesurfaces.Bydefault,thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtangenttoeachother.
○PRO_E_VPDD_PULL_DIR_FLIP—Specifies thepulldirectiondefined
bythenormalvectorsoftheselectedreferencesurfaces.Bydefault,this
elementisPRO_B_TRUE andthepulldirectionisalongthenormal
vectors.Thepulldirectioncanbeflipped.
ElementTrees:DraftFeatures 883•PRO_E_VPDD_SETS_ARR—Specifies anarrayoftheelementsofthetype
PRO_E_VPDD_SET_CMP. PRO_E_VPDD_SET_CMP isacompound element
andspecifiesadraftset.Formoreinformation ontheelementscontainedby
thiscompound element,refertothesectionElementDetailsoftheSubtree
PRO_E_VPDD_SET_CMP onpage885.
•PRO_E_VPDD_ATTACH_OPTS—Specifies theattachment option.Whenall
thedrafthingesaretwo-sided edges,youcanspecifywhethertoattachthe
draftgeometrytotheexistingsolidorquilt,orcreatethedraftgeometryasa
separatequilt.Theattachment options,specifiedbytheenumerated typePro_
vpdd_attach_type, areasfollows:
○PRO_VPDD_ATTACH_NEW_QUILT—Creates thedraftgeometryasa
separatequilt.
○PRO_VPDD_ATTACH_SAME_QUILT—Attaches thedraftgeometryto
theexistingsolidorquilt.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvpdd_attach_type, areasfollows:
○PRO_VPDD_ATTACH_NEW_QUILT—Creates thedraftgeometryasa
separatequilt.
○PRO_VPDD_ATTACH_SAME_QUILT—Attaches thedraftgeometryto
theexistingsolidorquilt.
•PRO_E_VPDD_EXTENT_CMP—Specifies theextent(depth)optionwhen
unattached draftgeometryiscreated.Thiscompound elementisavailableonly
iftheelement PRO_E_VPDD_ATTACH_OPTS issettoPRO_VPDD_
ATTACH_NEW_QUILT.
○PRO_E_VPDD_EXT_OPTS—Specifies theextentoptions.Theseoptions,
specifiedbytheenumerated typePro_vpdd_extent_type, areas
follows:
◆PRO_VPDD_EXT_LENGTH—Specifies thelengthdimension option.
◆PRO_VPDD_EXT_TO_SEL—Select thereferencebottomsurfaceupto
whichthedraftgeometryisextended.
◆PRO_VPDD_EXT_TO_NEXT—The draftgeometryisextendedupto
thenextsurfaceitintersects. Thisexcludesanysurfaceorquiltusedas
apartingsurfaceforadifferentdraftset.
◆PRO_VPDD_EXT_UNATTACHED—Creates thedraftgeometryready
forattachment butasaseparatequilt.
◆PRO_E_VPDD_EXT_LENGTH—Specifies thelengthvalue.Thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapartingsurfaceforadifferentdraftset.
◆PRO_VPDD_EXT_UNATTACHED—Creates thedraftgeometryready
forattachment butasaseparatequilt.
◆PRO_E_VPDD_EXT_LENGTH—Specifies thelengthvalue.This
elementisavailableonlywhentheelement PRO_E_VPDD_EXT_
OPTSissettoPRO_VPDD_EXT_LENGTH.
◆PRO_E_VPDD_EXT_REF—Specifies theselectedbottomsurface
uptowhichthedraftgeometryisextended.Thevalidreferences are
PRO_QUILT, PRO_SURFACE, andPRO_DATUM_PLANE. This
elementisavailableonlywhentheelement PRO_E_VPDD_EXT_
OPTSissettoPRO_VPDD_EXT_TO_SEL.
884 Creo®Parametric TOOLKIT User’sGuideElementDetailsoftheSubtreePRO_E_VPDD_SET_
CMP
Thecompound element PRO_E_VPDD_SET_CMP containsthefollowing
elements:
•PRO_E_VPDD_HINGES_ARR—Specifies anarrayofelementsofthetype
PRO_E_VPDD_HINGE_CMP. PRO_E_VPDD_HINGE_CMP isacompound
elementandspecifiesacollection ofdrafthingesusedtogeneratethedraft
geometry.
○PRO_E_STD_CURVE_COLLECTION_APPL—Specifies achainoftwo-
sidededges,one-sidededges,curves,oracombination ofone-sidededges
andcurves.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometry.
○PRO_E_STD_CURVE_COLLECTION_APPL—Specifies achainoftwo-
sidededges,one-sidededges,curves,oracombination ofone-sidededges
andcurves.
○PRO_E_VPDD_HINGE_FLIP—Specifies theProBoolean optionto
selectthesetsofsurfacestobedraftedoneachsideofadrafthinge
definedbytwo-sided edges.
•PRO_E_VPDD_SPLIT_SRFS_OPTS—Specifies theProBoolean option
tospecifyifsplittingsurfacesareusedwhilegenerating thedraftgeometry.If
thisoptionissettothedefaultvalue PRO_B_FALSE, thentheelement PRO_
E_VPDD_SPLIT_SRFS_REFS becomesunavailable.
•PRO_E_VPDD_SPLIT_SRFS_REFS—Specifies acollection ofsplitting
surfacereferences. Youcanselectuptotworeferences thatareeither PRO_
QUILTorPRO_DATUM_PLANE.
•PRO_E_VPDD_CONST_OR_VAR—Specifies aconstantorvariabledraft.For
avariabledraft,therearevariableangleattachment points.Thevaluesforthis
element,specifiedbytheenumerated typePro_vpdd_const_var_type,
areasfollows:
○PRO_VPDD_CONST
○PRO_VPDD_VAR
•PRO_E_VPDD_ANGLES_AND_POINTS_ARR—Specifies anarrayofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelement,specifiedbytheenumerated typePro_vpdd_const_var_type,
areasfollows:
○PRO_VPDD_CONST
○PRO_VPDD_VAR
•PRO_E_VPDD_ANGLES_AND_POINTS_ARR—Specifies anarrayof
elementsofthetypePRO_E_VPDD_POINT_AND_ANGLES_CMP. PRO_E_
VPDD_POINT_AND_ANGLES_CMP isacompound elementandspecifiesa
collection ofpointsandangles.
○PRO_E_STD_POINT_COLLECTION_APPL—Specifies theselection
references (curves,edges,ordatumpoints)wherethedraftanglesare
defined.
ElementTrees:DraftFeatures 885Note
◆IfPRO_E_VPDD_CONST_OR_VAR issettoPRO_VPDD_CONST,
thentheelement PRO_E_STD_POINT_COLLECTION_APPL
becomesunavailable andtheelement PRO_E_VPDD_ANGLES_AND_
POINTS_ARR containsonlyasingleelement.
◆Areferenceisvalidwhenitbelongstoorliesonadrafthingethat
belongstothesamedraftset.
○PRO_E_VPDD_ANGLES_ARR—Specifies anarrayofelementsofthe
typePRO_E_VPDD_ONE_ANGLE_CMP. Thesizeofthearrayisoneplus
thenumberofsplittingreferences. PRO_E_VPDD_ONE_ANGLE_CMP isa
compound elementandspecifiesthedraftanglefortheactivedraftset.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypePRO_E_VPDD_ONE_ANGLE_CMP. Thesizeofthearrayisoneplus
thenumberofsplittingreferences. PRO_E_VPDD_ONE_ANGLE_CMP isa
compound elementandspecifiesthedraftanglefortheactivedraftset.
◆PRO_E_VPDD_ANG_VAL—Specifies thevalueofthedraftangle.
Thisvalueliesintherangeof-90degreesthrough90degrees.
CreatingaVPDD
FunctionIntroduced:
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaVPDDbasedonelement
treeinput.Formoreinformation about ProFeatureCreate(), refertothe
sectionOverview ofFeatureCreationonpage750ofthechapterElementTrees:
Principles ofFeatureCreationonpage749.
RedefiningaVPDD
FunctionIntroduced:
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaVPDDbasedonthe
changesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofthechapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaVPDD
FunctionIntroduced:
•ProFeatur eElemtree Extract()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofthechapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaVPDD
FunctionIntroduced:
•ProFeatur eElemtree Extract()
886 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaVPDDandtoretrievetheelementtree
description ofaDraft.Formoreinformation about
ProFeatureElemtreeExtract() refertothesectionFeatureInquiryon
page771ofthechapterElementTrees:Principles ofFeatureCreationonpage
749.
ElementTrees:DraftFeatures 88739
ElementTrees:Roundand
Chamfer
RoundFeature........................................................................................................889
ModifyRoundRadiusFeature..................................................................................900
AutoRoundFeature................................................................................................902xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAutoRoundFeature................................................................................................902
ChamferFeature.....................................................................................................903
CornerChamferFeature..........................................................................................915
Thischapterdescribeshowtocreate,redefine,andqueryroundandchamfer
featuresthroughelementtreesandelementtreefunctions. ThesectionOverview
ofFeatureCreationonpage750ofthechapterElementTrees:Principles of
FeatureCreationonpage749providesanecessarybackground information for
thistopic.
SeethePartModelingmoduleinCreoParametric forfurtherdetailsonroundand
chamferfeaturecreation.
Thefollowingsectionsdescribetheprocedure foraccessingthechamfersand
roundfeaturesindetail.
888 Creo®Parametric TOOLKIT User’sGuideRoundFeature
FeatureElementTreeforRoundFeature
Theelementtreeforaroundisdocumented intheheaderfileProRound.h, andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxroundfeaturesindetail.
888 Creo®Parametric TOOLKIT User’sGuideRoundFeature
FeatureElementTreeforRoundFeature
Theelementtreeforaroundisdocumented intheheaderfileProRound.h, and
hasasimplestructure.Thefollowingfiguredemonstrates thefeatureelementtree
structure:
FeatureElementTreeforRound
ElementTrees:RoundandChamfer 889PRO_E_RNDCH_SETS
890 Creo®Parametric TOOLKIT User’sGuidePRO_E_RNDCH_RADIUS
PRO_E_RNDCH_TRANSITIONS
Thefollowinglistdetailsspecialinformation abouttheelementsinthistree:
•PRO_E_FEATURE_TYPE—Specifies featuretypeandshouldhavethevalue
asPRO_FEAT_ROUND only.
ElementTrees:RoundandChamfer 891•PRO_E_STD_FEATURE_NAME—Specifies thenametothefeature.Thisis
anoptionalelement.Ifnotspecifiedthenadefaultnamewillbeassigned
internallytothefeature.
•PRO_E_RNDCH_SETS—Specifies anarrayofPRO_E_RNDCH_SET.
•PRO_E_RNDCH_ATTACH_TYPE—Specifies theattachment typeandhasthe
followingvalues:
○PRO_ROUND_ATTACHED—Specifying thisoption,thecreatedround
featureconsumes themodelgeometry.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_RNDCH_ATTACH_TYPE—Specifies theattachment typeandhasthe
followingvalues:
○PRO_ROUND_ATTACHED—Specifying thisoption,thecreatedround
featureconsumes themodelgeometry.
○PRO_ROUND_UNATTACHED
○PRO_ROUND_CAPPED_ENDS
•PRO_E_RNDCH_TRANSITIONS—Specifies asetoftransition PRO_E_
RNDCH_TRANSITION.
ElementDetailsofPRO_E_RNDCH_SET forRound
EachPRO_E_RNDCH_SET specifiesaroundset,whichisaroundpiece
(geometry) createdaspertheplacement references andconsistsofthefollowing
elements:
•PRO_E_RNDCH_SHAPE_OPTIONS—Specifies theshapeoptionsandhave
thefollowingvalues:
○PRO_ROUND_TYPE_CONSTANT—Specifies aroundpiecehavinga
constantradius.
○PRO_ROUND_TYPE_VARIABLE—Specifies aroundpiecehaving
multipleradii.
○PRO_ROUND_TYPE_FULL—Specifies fullroundwhichreplacesthe
selectedsurface.
○PRO_ROUND_TYPE_THROUGH_CURVE—Allows theradiusoftheactive
roundtobedrivenbytheselecteddatumcurve.
•PRO_E_RNDCH_VARIABLE_RADIUS—Specifies iftheroundisofa
constantorvariabletype.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectedsurface.
○PRO_ROUND_TYPE_THROUGH_CURVE—Allows theradiusoftheactive
roundtobedrivenbytheselecteddatumcurve.
•PRO_E_RNDCH_VARIABLE_RADIUS—Specifies iftheroundisofa
constantorvariabletype.
•PRO_E_RNDCH_COMPOUND_CONIC—Specifies iftheroundusesaconic
sectionfortheshape.Itcanbedefinedas:
○PRO_E_RNDCH_CONIC_TYPE—Specifies conictypeandcanhavethe
followingvalidvalues:
◆PRO_ROUND_CONIC_ENABLE
◆PRO_ROUND_CONIC_DISABLE
◆PRO_ROUND_CURV_CONTINUOUS—Used tospecifycurvature
continuous rounds.
892 Creo®Parametric TOOLKIT User’sGuide○PRO_E_RNDCH_CONIC_VALUE—Specifies conicvalue,thatcontrols
thesharpnessoftheconicshapeandisrequiredifPRO_E_RNDCH_
CONIC_TYPE isequaltoPRO_ROUND_CONIC_ENABLE.
○PRO_E_RNDCH_CONIC_DEP_OPT—Specifies independent optionsand
isrequiredifPRO_E_RNDCH_CONIC_TYPE isequaltoPRO_ROUND_
CONIC_ENABLE.
○ThevaluesofProRoundConicIndependentType areasfollows:
◆PRO_ROUND_CONIC_DEPENDENT
◆PRO_ROUND_CONIC_INDEPENDENT
◆PRO_ROUND_CONIC_INDEPENDENT isthedefaulttype.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCONIC_ENABLE.
○ThevaluesofProRoundConicIndependentType areasfollows:
◆PRO_ROUND_CONIC_DEPENDENT
◆PRO_ROUND_CONIC_INDEPENDENT
◆PRO_ROUND_CONIC_INDEPENDENT isthedefaulttype.
•PRO_E_RNDCH_REFERENCES—Specifies asetofvalidreferences ofthe
roundfeature.
•PRO_E_RNDCH_COMPOUND_SPINE—This isanotheroptionfordefining
theshapeoftheround.Specifiesthespineandhasthefollowingelements:
○PRO_E_RNDCH_BALL_SPINE—Specifies rollingballornormalto
spine.ValidvaluesofPRO_E_RNDCH_BALL_SPINE are:
◆PRO_ROUND_ROLLING_BALL—Specifies aroundsurfaceandis
createdbyrollingasphericalballalongthesurfaces.
◆PRO_ROUND_NORMAL_TO_SPINE—Specifies aroundsurfaceand
iscreatedbysweepingaconicorarccross-section normaltoaspine.
◆PRO_E_STD_CURVE_COLLECTION_APPL—Specifies thespine
curveandisrequiredifPRO_E_RNDCH_BALL_SPINE isequalto
PRO_ROUND_NORMAL_TO_SPINE.
Note
Duringthecreationofrounds,theoptionsD1xD2ConicandNormalto
spinecannotbeusedtogether.Duetothisrestriction, theexistingroundsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_ROUND_NORMAL_TO_SPINE.
Note
Duringthecreationofrounds,theoptionsD1xD2ConicandNormalto
spinecannotbeusedtogether.Duetothisrestriction, theexistingrounds
withtheirconictypeoptionsetasPRO_ROUND_CONIC_INDEPENDENT
andwiththeroundcreationmethodsettoPRO_ROUND_NORMAL_TO_
SPINEareresettoPRO_ROUND_ROLLING_BALL whentheroundis
redefined. Therefor,fortheconictypeoption PRO_ROUND_CONIC_
INDEPENDENT youmustspecifytheroundcreationmethodasPRO_
ROUND_ROLLING_BALL.
•PRO_E_RNDCH_AUTO_CONTINUE—Specifies whethersurfaceswillbe
extendedtomeetthedesignated roundradius.Thevalidvaluesare:
○PRO_ROUND_AUTO_CONT_DISABLE—This isthedefaultvalue.
ElementTrees:RoundandChamfer 893○PRO_ROUND_AUTO_CONT_ENABLE
ThiselementisrequiredifPRO_E_RNDCH_REFERENCE_TYPE =PRO_
ROUND_REF_EDGE.
•PRO_E_RNDCH_COMPOUND_EXT_OPTIONS—Specifies theexternal
options.Thisisanoptionalelement.Ithasthefollowingelements:
○PRO_E_RNDCH_AUTO_BLEND—Specifies autoblend.
○PRO_E_RNDCH_TERM_SURFACE—Specifies theterminating surface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoptions.Thisisanoptionalelement.Ithasthefollowingelements:
○PRO_E_RNDCH_AUTO_BLEND—Specifies autoblend.
○PRO_E_RNDCH_TERM_SURFACE—Specifies theterminating surface.
•PRO_E_RNDCH_RADII—Specifies theradii,asanarrayofradiusorPRO_
E_RNDCH_RADIUS andisrequiredifPRO_E_RNDCH_SHAPE_OPTIONS is
notequaltoPRO_ROUND_TYPE_THROUGH_CURVE andPRO_E_RNDCH_
SHAPE_OPTIONS isnotequaltoPRO_ROUND_TYPE_FULL.
•PRO_E_STD_CURVE_COLLECTION_APPL—Specifies thecurvecollection
andisrequiredifPRO_E_RNDCH_SHAPE_OPTIONS isequaltoPRO_
ROUND_TYPE_THROUGH_CURVE.
•PRO_E_RNDCH_AMBIGUITY—Specifies roundsetambiguity.
Note
Ambiguity occursinroundfeatureswhenotherplacement locationsexist
fortheroundset.Theambiguity conditionoccurswhentwosurfaces
intersectinmultiplelocations.
ElementDetailsofPRO_E_RNDCH_REFERENCES for
Round
EachPRO_E_RNDCH_REFERENCES specifiesasetofvalidreferences ofthe
roundfeatureandhasthefollowingelements:
•PRO_E_RNDCH_REFERENCE_TYPE—Specifies thereferencetypesand
validvaluesare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRound
EachPRO_E_RNDCH_REFERENCES specifiesasetofvalidreferences ofthe
roundfeatureandhasthefollowingelements:
•PRO_E_RNDCH_REFERENCE_TYPE—Specifies thereferencetypesand
validvaluesare:
○PRO_ROUND_REF_EDGE—Specifies thatthesurfacesbordertheedge
referenceandformtherollingtangentattachment fortheround.
○PRO_ROUND_REF_SURF_SURF—Specifies thattheedgesoftheround
remaintangenttothereferencesurfaces.
○PRO_ROUND_REF_EDGE_SURF—Specifies thattheroundremains
tangenttothesurface.Theedgereferencedoesnotmaintaintangency.
○PRO_ROUND_REF_EDGE_EDGE—Specifies thatthesurfacesbordering
theedgereferenceformtherollingtangentattachment fortheround.
894 Creo®Parametric TOOLKIT User’sGuide•PRO_E_STD_CURVE_COLLECTION_APPL—Specifies thereferenceedges
ofthechaincollection. ItisrequiredifPRO_E_RNDCH_REFERENCE_TYPE
isequaltoPRO_ROUND_REF_EDGE.
InCreoParametric TOOLKIT7.0.0.0andlater,youcanselectthereference
edgesfrombothdifferentsolidbodiesaswellasquilts.TheresultingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisequaltoPRO_ROUND_REF_EDGE.
InCreoParametric TOOLKIT7.0.0.0andlater,youcanselectthereference
edgesfrombothdifferentsolidbodiesaswellasquilts.Theresulting
geometryisattachedbacktothesamesolidbodyorquiltfromwherethe
referenced edgeswereselected.
•PRO_E_RNDCH_REFERENCE_SURFACE1—Specifies thefirstreference
surfaceandisrequiredifPRO_E_RNDCH_REFERENCE_TYPE isequalto
PRO_ROUND_REF_SURF_SURF.
•PRO_E_RNDCH_REFERENCE_SURFACE2—Specifies thesecondreference
surfaceandisrequiredifPRO_E_RNDCH_REFERENCE_TYPE isequalto
PRO_ROUND_REF_SURF_SURF orPRO_E_RNDCH_REFERENCE_TYPE
isequaltoPRO_ROUND_REF_EDGE_SURF.
•PRO_E_RNDCH_REFERENCE_EDGE1—Specifies thefirstreferenceedge
andisrequiredifPRO_E_RNDCH_REFERENCE_TYPE isequaltoPRO_
ROUND_REF_EDGE_SURF orPRO_E_RNDCH_REFERENCE_TYPE is
equaltoPRO_ROUND_REF_EDGE_EDGE andPRO_E_RNDCH_SHAPE_
OPTIONS isequaltoPRO_ROUND_TYPE_FULL.
•PRO_E_RNDCH_REFERENCE_EDGE2—Specifies thesecondreferenceedge
andisrequiredifPRO_E_RNDCH_REFERENCE_TYPE isequaltoPRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOPTIONS isequaltoPRO_ROUND_TYPE_FULL.
•PRO_E_RNDCH_REFERENCE_EDGE2—Specifies thesecondreferenceedge
andisrequiredifPRO_E_RNDCH_REFERENCE_TYPE isequaltoPRO_
ROUND_REF_EDGE_EDGE andPRO_E_RNDCH_SHAPE_OPTIONS is
equaltoPRO_ROUND_TYPE_FULL.
•PRO_E_RNDCH_REPLACE_SURFACE—Specifies thesurfacetobereplaced
andisrequiredifPRO_E_RNDCH_REFERENCE_TYPE isequaltoPRO_
ROUND_REF_SURF_SURF andPRO_E_RNDCH_SHAPE_OPTIONS is
equaltoPRO_ROUND_TYPE_FULL.
ElementDetailsofPRO_E_RNDCH_RADIUS forRound
EachPRO_E_RNDCH_RADIUS hasthefollowingelements:
•PRO_E_STD_POINT_COLLECTION_APPL—Specifies apoint,which
governsthevalueoftheradius.
•PRO_E_RNDCH_LEG1—Specifies theleg1.
•PRO_E_RNDCH_LEG2—Specifies theleg2andisrequiredifPRO_E_
RNDCH_CONIC_DEP_OPT isequaltoPRO_ROUND_CONIC_
INDEPENDENT.
EachPRO_E_RNDCH_LEG1 orPRO_E_RNDCH_LEG2 hasthefollowing
elements:
ElementTrees:RoundandChamfer 895•PRO_E_RNDCH_LEG_TYPE—ProRoundRadiusType specifieslegtype
andisamandatory element.Itisofthefollowingtypes:
○PRO_ROUND_RADIUS_TYPE_VALUExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelements:
ElementTrees:RoundandChamfer 895•PRO_E_RNDCH_LEG_TYPE—ProRoundRadiusType specifieslegtype
andisamandatory element.Itisofthefollowingtypes:
○PRO_ROUND_RADIUS_TYPE_VALUE
○PRO_ROUND_RADIUS_THROUGH_POINT
•PRO_E_RNDCH_LEG_VALUE—Specifies legvalueandisrequiredifPRO_
E_RNDCH_LEG_TYPE isequaltoPRO_ROUND_RADIUS_TYPE_VALUE.
•PRO_E_RNDCH_REFERENCE_EDGE—Specifies referenceedgehavingthe
valueasPRO_E_EDGE andisrequiredifPRO_E_RNDCH_LEG_TYPE is
equaltoPRO_ROUND_RADIUS_THROUGH_POINT.
•PRO_E_RNDCH_REFERENCE_POINT—Specifies referencepointhavingthe
valueasPRO_E_POINT andisrequiredifPRO_E_RNDCH_LEG_TYPE is
equaltoPRO_ROUND_RADIUS_THROUGH_POINT.
ElementDetailsofPRO_E_RNDCH_TRANSITION forRound
EachPRO_E_RNDCH_TRANSITION represents user-definedtransitions forthe
entireroundfeatureandconsistsofthefollowingelements:
•PRO_E_RNDCH_TRANS_TYPE specifiesthetypeofthetransitiontype.Valid
valuesare:
○PRO_ROUND_TRANS_INTERSECT—Used toextendtwoormorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentireroundfeatureandconsistsofthefollowingelements:
•PRO_E_RNDCH_TRANS_TYPE specifiesthetypeofthetransitiontype.Valid
valuesare:
○PRO_ROUND_TRANS_INTERSECT—Used toextendtwoormore
overlapping roundpiecestowardseachotheruntiltheymergeforminga
sharpboundary.
○PRO_ROUND_TRANS_BLEND—Used tocreateafilletsurfacebetween
theroundpiecesusinganedgereference.
○PRO_ROUND_TRANS_STOP—Used toterminatetheroundgeometryat
thespecifieddatumpointordatumplane.
○PRO_ROUND_TRANS_CONTINUE—Used toextendroundgeometryinto
tworoundpieces.
○PRO_ROUND_TRANS_SPHERE_CORNER—Used tocreatearoundfrom
thecornertransitionformedbythreeoverlapping piecesbyaspherical
corner.
○PRO_ROUND_TRANS_PATCH—Used tocreateapatchedsurfaceatthe
locationwherethreeorfourroundpiecesoverlapatacorner.
○PRO_ROUND_TRANS_BLEND_3SRF—Used tocreateatriangularpatch
asatransitionofthreerounds.
○PRO_ROUND_TRANS_RBALL—Used tocreatearollingballtransition
forthreeormorerounds.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_ROUND_TRANS_BLEND_3SRF—Used tocreateatriangularpatch
asatransitionofthreerounds.
○PRO_ROUND_TRANS_RBALL—Used tocreatearollingballtransition
forthreeormorerounds.
896 Creo®Parametric TOOLKIT User’sGuide○PRO_ROUND_TRANS_STOP_0_SIDE—Used toterminatetheround
usinggeometryconfigured byCreoParametric.
○PRO_ROUND_TRANS_STOP_1_SIDE—Used toterminatetheround
usinggeometryconfigured byCreoParametric.
○PRO_ROUND_TRANS_STOP_2_SIDE—Used toterminatetheround
usinggeometryconfigured byCreoParametric.
○PRO_ROUND_TRANS_STOP_AT_REF—Used toterminateround
geometryattheselecteddatumpointordatumplane.
○PRO_ROUND_TRANS_STOP_FULL—Used tokeepthestoptransition
closetotheboundaryoftheremovedsurface.
○PRO_ROUND_TRANS_STOP_2_WE—Used tocreateastoptransition
withmaximum possibleextensionoftheroundbyfreezingoneofround's
references andchangingtheotherreferenceatintersection withtangent
edges.
•PRO_E_RNDCH_TRANS_CAP—Specifies thecappingsurfaceforround
feature.Ithasthefollowingvalues:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferences andchangingtheotherreferenceatintersection withtangent
edges.
•PRO_E_RNDCH_TRANS_CAP—Specifies thecappingsurfaceforround
feature.Ithasthefollowingvalues:
○PRO_ROUND_CAPPING_SURF_DISABLE =PRO_B_FALSE
○PRO_ROUND_CAPPING_SURF_ENABLE =PRO_B_TRUE
•PRO_E_RNDCH_TRANS_SPHERE_DATA—Specifies spheredataand
consistsofthefollowingelements:
○PRO_E_RNDCH_TRANS_RADIUS_OPTIONS—Specifies radiusoptions
andisamandatory element.
○PRO_E_RNDCH_TRANS_SPHERE_RADIUS—Specifies sphereradius
andisrequiredifPRO_E_RNDCH_TRANS_RADIUS_OPTIONS isequal
toPRO_ROUND_TRANS_RADIUS_ENTER_VALUE.
○PRO_E_RNDCH_TRANS_LEG1_OPTIONS—Specifies leg1optionsand
isamandatory element.
○PRO_E_RNDCH_TRANS_LEG1_VALUE—Specifies thevalueofleg1and
isrequiredifPRO_E_RNDCH_TRANS_LEG1_OPTIONS isequalto
PRO_ROUND_TRANS_RADIUS_ENTER_VALUE.
○PRO_E_RNDCH_TRANS_LEG2_OPTIONS—Specifies leg2optionsand
isamandatory element.
○PRO_E_RNDCH_TRANS_LEG2_VALUE—Specifies thevalueofleg2and
isrequiredifPRO_E_RNDCH_TRANS_LEG2_OPTIONS isequaltoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_E_RNDCH_TRANS_LEG2_OPTIONS—Specifies leg2optionsand
isamandatory element.
○PRO_E_RNDCH_TRANS_LEG2_VALUE—Specifies thevalueofleg2and
isrequiredifPRO_E_RNDCH_TRANS_LEG2_OPTIONS isequalto
PRO_ROUND_TRANS_RADIUS_ENTER_VALUE.
○PRO_E_RNDCH_TRANS_LEG3_OPTIONS—Specifies leg3optionsand
isamandatory element.
ElementTrees:RoundandChamfer 897○PRO_E_RNDCH_TRANS_LEG3_VALUE—Specifies thevalueofleg3and
isrequiredifPRO_E_RNDCH_TRANS_LEG3_OPTIONS isequalto
PRO_ROUND_TRANS_RADIUS_ENTER_VALUE.
•PRO_E_RNDCH_TRANS_PATCH_DATA—Specifies thepatchdataandis
requiredifPRO_E_RNDCH_TRANS_TYPE isequaltoPRO_ROUND_
TRANS_PATCH. Ithasthefollowingelements:
○PRO_E_RNDCH_TRANS_PATCH_REF_SURF—Specifies thearc
surface,whichindicatesthatavalidsurfacereferencehasbeenselectedto
placeafilletfortheactivepatchtransition. Itshouldhavethevalueas
PRO_SURFACE only.
○PRO_E_RNDCH_TRANS_PATCH_RAD_OPT—Specifies thearcradius
options.Itindicatesthefilletradiusfortheactivepatchtransitionandhas
followingoptions:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_SURFACE only.
○PRO_E_RNDCH_TRANS_PATCH_RAD_OPT—Specifies thearcradius
options.Itindicatesthefilletradiusfortheactivepatchtransitionandhas
followingoptions:
◆PRO_ROUND_TRANS_RADIUS_ENTER_VALUE— Specifiesanew
radiusvalue.
◆PRO_ROUND_TRANS_RADIUS_AUTOMATIC— Specifiesthemost
recentlyusedradiusvalue.
◆PRO_E_RNDCH_TRANS_ARC_RADIUS—Specifies thearcradius.
•PRO_E_RNDCH_TRANS_STOP_DATA—Specifies thecappingsurface.Ithas
thefollowingelements:
○PRO_E_RNDCH_TRANS_STOP_REF_TYPE—Specifies thereference
type.Validvaluesare:
◆PRO_ROUND_TRANS_REF_NO_REF
○PRO_ROUND_TRANS_REF_GEOM
○PRO_ROUND_TRANS_REF_PNTVTX
○PRO_ROUND_TRANS_REF_DTMPLN
○PRO_ROUND_TRANS_REF_ISOLINE
○PRO_E_RNDCH_TRANS_STOP_REFERENCE—Specifies thereferences
fortheactivestopatreferencetransition. ItcaneitherbePRO_SURFACE
orPRO_POINT.
CreatingaRound
FunctionIntroduced:
•ProFeatur eCreate()
898 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureCreate() tocreatearoundbasedonelementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorPRO_POINT.
CreatingaRound
FunctionIntroduced:
•ProFeatur eCreate()
898 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureCreate() tocreatearoundbasedonelement
treeinput.Formoreinformation about ProFeatureCreate(), refertothe
sectionOverview ofFeatureCreationonpage750intheElementTrees:
Principles ofFeatureCreationonpage749chapter.
Note
InPro/ENGINEER Wildfire2.0,
•Pro/TOOLKITdoesnotsupportthetemporary geometryrequiredforuser-
specifiedambiguity andnon-default transitions. Therefore, theseelements
cannotbeusedforcreationofnewrounds.
•Iftransitions arespecifiedintheinputelementtree,aroundfeaturewiththe
defaulttransitionwillbecreated.
•Incaseofambiguous situation(wheremorethanonevalidsolutionsexist,e.g.
forsurface-surface round-surfaceshavingdiscontinuous edgesof
intersection), aroundfeaturewithdefaultsolutionwillbecreated.
RedefiningaRound
FunctionIntroduced:
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefinearoundbasedonthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintersection), aroundfeaturewithdefaultsolutionwillbecreated.
RedefiningaRound
FunctionIntroduced:
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefinearoundbasedonthe
changesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
intheElementTrees:Principles ofFeatureCreationonpage749chapter.
Note
InPro/ENGINEER Wildfire2.0,
•Aroundfeaturehavingdefaulttransition, cannotberedefinedtohaveany
transition.
•AroundfeaturehavingaPro/ENGINEER userinterfacedefinedtransitioncan
beredefinedtoothertypeoftransition, forexample,fromintersecttypeto
sphericaltype.Theinputelementtreemusthaveavalidtransitionofthe
requiredtype.
ElementTrees:RoundandChamfer 899AccessingaRound
FunctionIntroduced:
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaroundandtoretrievetheelementtree
description ofaround.Formoreinformation aboutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaroundandtoretrievetheelementtree
description ofaround.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771intheElementTrees:Principles ofFeatureCreationonpage749
chapter.
Example1:SamplecodeforcreationofaRound
Feature
ThesamplecodeinUgEdgeRoundCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateanEdgeRoundfeature.Theuserispromptedforthreeedgestobe
rounded.
ModifyRoundRadiusFeature
Asapartoftheflexiblemodelingcapabilities theModify Round Radius
featureallowsyoutomodifytheradiusofexistingroundgeometry.Youcan
modifytheradiusofbothconstantandvariablerounds,howevervariableradius
roundsareconverted toconstantradiusroundsuponmodification. Youcanalso
modifytheradiiofmultipleroundshapesets.
ThecreationoftheModify Round Radiusfeatureincludesthefollowing
steps:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxroundsareconverted toconstantradiusroundsuponmodification. Youcanalso
modifytheradiiofmultipleroundshapesets.
ThecreationoftheModify Round Radiusfeatureincludesthefollowing
steps:
1.Identifytheroundgeometrytobemodifiedanditsradiusvalue.
2.CreoParametric removestheidentifiedroundgeometryusingtheremove
surfacealgorithmandrecreatestheroundededgeswiththedesiredradius
value.
3.ThefeatureIDsofrecreatedroundsareupdated.
FeatureElementTreeforModifyRoundRadius
Feature
TheelementtreeforaModify Round Radiusfeatureisdocumented inthe
headerfileProModifyRound.h andhasasimplestructure.Thefollowing
figuredemonstrates thestructureofthefeatureelementtree.
900 Creo®Parametric TOOLKIT User’sGuideModifyRoundRadiusElementTree
Theelementsinthistreearedescribedasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_MOD_ROUND.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.The
defaultvalueofthiselementisMODIFY_ROUND.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies acollection ofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFEAT_MOD_ROUND.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.The
defaultvalueofthiselementisMODIFY_ROUND.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies acollection of
referencesurfacestheincludestheroundstobemodified.
InCreoParametric TOOLKIT7.0.0.0andlater,youcanselectthereference
surfacesfrombothdifferentsolidbodiesaswellasquilts.Theresulting
geometryisattachedbacktothesamesolidbodyorquiltfromwherethe
referenced surfaceswereselected.
•PRO_E_MODRND_RAD_VAL—Specifies thenewradiusvalue.Thisvalue
fallsintherange [(part epsilon /10.0), 1.0e+06].
•PRO_E_MODRND_OPTS—Specifies themodification optionsforeachround
toberecreated.Thiscompound elementconsistsofthefollowingelements:
○PRO_E_MODRND_ATTACH—Specifies whethertherecreatedround
geometryisattachedtotheselectedreferencesurfaceuponcreation.The
valuesforthiselement,specifiedbytheenumerated type
ProModRndAttach, areasfollows:
◆PRO_MODRND_ATTACH_GEOM
ElementTrees:RoundandChamfer 901◆PRO_MODRND_DONOT_ATTACH_GEOMxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesforthiselement,specifiedbytheenumerated type
ProModRndAttach, areasfollows:
◆PRO_MODRND_ATTACH_GEOM
ElementTrees:RoundandChamfer 901◆PRO_MODRND_DONOT_ATTACH_GEOM
○PRO_E_MODRND_CLOSEGEOM—Specifies ifendsurfacesarecreatedfor
therecreatedrounds.Thevaluesforthiselement,specifiedbythe
enumerated typeProModRndCloseGeom, areasfollows:
◆PRO_MODRND_CLOSE_GEOM
◆PRO_MODRND_DONOT_CLOSE_GEOM
Note
Theelement PRO_E_MODRND_CLOSEGEOM isapplicable onlyifthe
element PRO_E_MODRND_ATTACH hasthevalue PRO_MODRND_
DONOT_ATTACH_GEOM, meaningthattheroundsarerecreatedas
newsurfacesorquilts.
○PRO_E_MODRND_RECR_INTERF_RND—Specifies whetherinterfering
roundsareremovedandrecreatedinordertorecreatethemodifiedround
geometry.Thevaluesforthiselement,specifiedbytheenumerated type
ProModRndRecrRounds, areasfollows:
◆PRO_MODRND_RECR_INTERF_RNDS
◆PRO_MODRND_DONOT_RECR_INTERF_RNDS
•PRO_E_STD_FLEX_PROPAGATION—Specifies aPatternfeature,a
Symmetry Recognition feature,oraMirrorGeometry featurethatcontainsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx◆PRO_MODRND_RECR_INTERF_RNDS
◆PRO_MODRND_DONOT_RECR_INTERF_RNDS
•PRO_E_STD_FLEX_PROPAGATION—Specifies aPatternfeature,a
Symmetry Recognition feature,oraMirrorGeometry featurethatcontainsthe
referencesurfacesspecifiedbytheelement PRO_E_STD_SURF_
COLLECTION_APPL. Ifsuchsurfacesexist,thenthemodification ofthe
roundradiusispropagated toallcorresponding surfacesintheinstancesofthe
Patternfeature,theSymmetry Recognition feature,ortheMirrorGeometry
feature,inordertomaintainthepatternorsymmetry.
AutoRoundFeature
TheAutoRoundfeatureenablesyoutocreateroundgeometryofaconstantradius
onsolidgeometryoronaquiltofapartorassembly.TheAutoRoundFeature
createsRoundfeaturescalledAuto-Round Members(ARMs)thatarerepresented
intheModelTreeassubnodesoftheAutoRoundfeature,orasgroupsof
individual independent roundfeatures.RefertotheCreoParametric OnlineHelp
formoredetailsaboutthisfeaturetype.
Pro/TOOLKITdoesnotprovideaccesstotheAutoRoundfeatureviaanelementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxindividual independent roundfeatures.RefertotheCreoParametric OnlineHelp
formoredetailsaboutthisfeaturetype.
Pro/TOOLKITdoesnotprovideaccesstotheAutoRoundfeatureviaanelement
treefortheWildfire4.0release.SomeCreoParametric TOOLKITfunctionality
suchasfeaturedeletion,suppression andredefinition arenotsupported for
individual ARMswithinanAutoRoundfeature.
902 Creo®Parametric TOOLKIT User’sGuideFunctions Introduced:
•ProRoundIsAutoRoundMember()
Thefunction ProRoundIsAutoRoundMember() identifiesifthespecified
roundfeatureisamemberoftheAutoRoundfeature.
ChamferFeature
FeatureElementTreeforChamferFeature
Theelementtreeforachamferisdocumented intheheaderfileProChamfer.h,
andhasasimplestructure.Thefollowingfiguredemonstrates thefeatureelement
treestructure:
FeatureElementTreeforChamfer
ElementTrees:RoundandChamfer 903PRO_E_RNDCH_SETS
PRO_E_RNDCH_TRANSITIONS
Thefollowinglistdetailsspecialinformation aboutsomeoftheelementsinthis
tree:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtreestructure:
FeatureElementTreeforChamfer
ElementTrees:RoundandChamfer 903PRO_E_RNDCH_SETS
PRO_E_RNDCH_TRANSITIONS
Thefollowinglistdetailsspecialinformation aboutsomeoftheelementsinthis
tree:
904 Creo®Parametric TOOLKIT User’sGuide•PRO_E_FEATURE_TYPE—Specifies featuretypeandhasthevalueofPRO_
FEAT_CHAMFER.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_RNDCH_SETS—Specifies anarrayofPRO_E_RNDCH_SET.
•PRO_E_RNDCH_ATTACH_TYPE—Specifies theattachment typeandhasthe
followingvalues:
○PRO_ROUND_ATTACHED
○PRO_ROUND_UNATTACHED
○PRO_ROUND_CAPPED_ENDS
•PRO_E_RNDCH_TRANSITIONS—Specifies asetoftransition PRO_E_
RNDCH_TRANSITION.
ElementDetailsofPRO_E_RNDCH_SET forChamfer
EachPRO_E_RNDCH_SET specifiesachamfersetforthechamferfeatureand
musthavethefollowingelements:
•PRO_E_RNDCH_DIMENSIONAL_SCHEMA—Specifies thetypeofchamfer
orthedimensional schema PRO_E_RNDCH_DIMENSIONAL_SCHEMA using
theenumerated typeProChmSchema. ThedifferenttypesofPRO_E_
RNDCH_DIMENSIONAL_SCHEMA isasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorthedimensional schema PRO_E_RNDCH_DIMENSIONAL_SCHEMA using
theenumerated typeProChmSchema. ThedifferenttypesofPRO_E_
RNDCH_DIMENSIONAL_SCHEMA isasfollows:
○PRO_CHM_45_X_D—Specifies achamferthatisatanangleof45
degreestobothsurfacesandatadistanceDfromtheedgealongeach
surface.
○PRO_CHM_D_X_D—Specifies achamferthatisatadistanceDfromthe
edgealongeachsurface.Thisisthedefaulttype.
○PRO_CHM_D1_X_D2—Specifies achamferatadistanceD1fromthe
selectededgealongonesurfaceandatadistanceD2fromtheselected
edgealongtheothersurface.
○PRO_CHM_ANG_X_D—Specifies achamferatadistanceDfromthe
selectededgealongoneadjacentsurface,ataspecifiedangletothat
surface.
○PRO_CHM_O_X_O—Provides directcontrolofthesurfaceoffset
distances.
○PRO_CHM_O1_X_O2—Provides directcontrolofthesurfaceoffset
distances.
ElementTrees:RoundandChamfer 905Note
ForSurf-Surfchamfer,theavailableschemesare:
○OffsetSurfacemethod—PRO_CHM_O_X_O, PRO_CHM_O1_X_O2,
PRO_CHM_D_X_D, PRO_CHM_D1_X_D2 areavailable.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdistances.
ElementTrees:RoundandChamfer 905Note
ForSurf-Surfchamfer,theavailableschemesare:
○OffsetSurfacemethod—PRO_CHM_O_X_O, PRO_CHM_O1_X_O2,
PRO_CHM_D_X_D, PRO_CHM_D1_X_D2 areavailable.
○TangentDistmethod—PRO_CHM_D_X_D, PRO_CHM_D1_X_D2, PRO_
CHM_45_X_D, PRO_CHM_ANG_X_D areavailable.
ForSurface-to-Edge chamfertheavailableschemesare:
○OffsetSurface: PRO_CHM_O_X_O, PRO_CHM_O1_X_O2.
○TangentDistance: PRO_CHM_D_X_D, PRO_CHM_D1_X_D2.
Theseschemesareapplicable forconstantangleplanesorconstant90
degreesurfacesandarealsoavailableifallmembersoftheedgechainare
formedbyexactly2planesorexactly2surfacesat90degree,asinthe
endsofacylinder.
•PRO_E_RNDCH_CHAMFER_SHAPE—Specifies theshapeofthechamfer
feature. PRO_E_RNDCH_CHAMFER_SHAPE hasthefollowingvalidvalues:
○PRO_CHM_TANGENT_LEGS—Specifies thechamferdistancebetween
vectorsthataretangenttotheneighboring surfaceofthereferenceedge.
○PRO_CHM_OFFSET_SURFACE—Specifies theoffsetsurfaces.
•PRO_E_RNDCH_REFERENCES—Specifies asetofvalidreferences ofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvectorsthataretangenttotheneighboring surfaceofthereferenceedge.
○PRO_CHM_OFFSET_SURFACE—Specifies theoffsetsurfaces.
•PRO_E_RNDCH_REFERENCES—Specifies asetofvalidreferences ofthe
chamferfeatureandhasthefollowingelements:
○PRO_E_STD_CURVE_COLLECTION_APPL—Specifies referenceedges
andisarequiredelementforedgechamfer.
InCreoParametric TOOLKIT7.0.0.0andlater,youcanselectthe
referenceedgechamfersfrombothdifferentsolidbodiesaswellasquilts.
Theresultinggeometryisattachedbacktothesamesolidbodyorquilt
fromwherethereferenced edgeswereselected.
○PRO_E_RNDCH_REFERENCE_SURFACE—Specifies referencesurfaces
andisrequiredifeither PRO_E_RNDCH_DIMENSIONAL_SCHEMA is
equaltoPRO_CHM_D1_X_D2 orPRO_E_RNDCH_DIMENSIONAL_
SCHEMAisequaltoPRO_CHM_ANG_X_D.
•PRO_E_RNDCH_COMPOUND_EXT_OPTIONS—Specifies theexternal
options.Thisisanoptionalelementandhasthefollowingelements:
○PRO_E_RNDCH_AUTO_BLEND—Specifies theautoblend.
○PRO_E_RNDCH_TERM_SURFACE—Specifies terminating surface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoptions.Thisisanoptionalelementandhasthefollowingelements:
○PRO_E_RNDCH_AUTO_BLEND—Specifies theautoblend.
○PRO_E_RNDCH_TERM_SURFACE—Specifies terminating surface.
906 Creo®Parametric TOOLKIT User’sGuide•PRO_E_RNDCH_RADII—Specifies anarrayofradius PRO_E_RNDCH_
RADIUS.
•PRO_E_RNDCH_AMBIGUITY—Specifies theambiguity inthechamferset.
Note
Thechamfersetcancontainambiguity ifthechamfersetcontainschamfer
piecesthatco-existandcanbeplacedinvariouslocationsintheselected
references andinpartgeometry.
ElementDetailsofPRO_E_RNDCH_RADIUS forChamfer
EachPRO_E_RNDCH_RADIUS hasthefollowingelements:
•PRO_E_RNDCH_LEG1—Specifies leg1ofthechamferfeature.
•PRO_E_RNDCH_LEG2—Specifies leg2ofthechamferfeatureandisa
requiredelementifeither PRO_E_RNDCH_DIMENSIONAL_SCHEMA is
equaltoPRO_CHM_D1_X_D2 orPRO_E_RNDCH_DIMENSIONAL_
SCHEMAisequaltoPRO_CHM_ANG_X_D.
EachPRO_E_RNDCH_LEG1 orPRO_E_RNDCH_LEG2 hasthefollowing
elements:
•PRO_E_RNDCH_LEG_TYPE—Specifies legtypeandisamandatory element.
Itisofthefollowingtypes:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSCHEMAisequaltoPRO_CHM_ANG_X_D.
EachPRO_E_RNDCH_LEG1 orPRO_E_RNDCH_LEG2 hasthefollowing
elements:
•PRO_E_RNDCH_LEG_TYPE—Specifies legtypeandisamandatory element.
Itisofthefollowingtypes:
○PRO_ROUND_RADIUS_TYPE_VALUE
○PRO_ROUND_RADIUS_THROUGH_POINT
ThedefinitionofProRoundRadiusType isasfollows:
•PRO_E_RNDCH_LEG_VALUE—Specifies legvalueandisrequiredifPRO_
E_RNDCH_LEG_TYPE isequaltoPRO_ROUND_RADIUS_TYPE_VALUE.
•PRO_E_RNDCH_REFERENCE_EDGE—Specifies referenceedgeandis
requiredifPRO_E_RNDCH_LEG_TYPE isequaltoPRO_ROUND_RADIUS_
THROUGH_POINT.
•PRO_E_RNDCH_REFERENCE_POINT—Specifies referencepointandis
requiredifPRO_E_RNDCH_LEG_TYPE isequaltoPRO_ROUND_RADIUS_
THROUGH_POINT.
ElementTrees:RoundandChamfer 907ElementDetailsofPRO_E_RNDCH_TRANSITION for
Chamfer
EachPRO_E_RNDCH_TRANSITION represents user-definedtransitions forthe
entirechamferfeatureandconsistsofthefollowingelements:
•PRO_E_RNDCH_TRANS_TYPE—Specifies thetypeofthetransitiontype.
Validvaluesare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentirechamferfeatureandconsistsofthefollowingelements:
•PRO_E_RNDCH_TRANS_TYPE—Specifies thetypeofthetransitiontype.
Validvaluesare:
○PRO_ROUND_TRANS_INTERSECT—Used toextendtwoormore
overlapping chamferpiecestowardseachotheruntiltheymergeforminga
sharpboundary.
○PRO_ROUND_TRANS_BLEND—Used tocreateafilletsurfacebetween
thechamferpiecesusinganedgereference.
○PRO_ROUND_TRANS_STOP—Used toterminatethechamfergeometryat
thespecifieddatumpointordatumplane.
○PRO_ROUND_TRANS_CONTINUE—Used toextendchamfergeometry
intotwochamferpieces.
○PRO_ROUND_TRANS_PATCH—Used tocreateapatchedsurfaceatthe
locationwherethreeorfourchamferpiecesoverlap.
○PRO_ROUND_TRANS_BLEND_3SRF—Used tocreateatriangularpatch
asatransitionofthreechamfers.
○PRO_ROUND_TRANS_PLANE_CORNER—Used tochamferthecorner
transitionformedbythreeoverlapping chamferpieceswithaplane.
○PRO_ROUND_TRANS_RBALL—Used tocreatearollingballtransition
forthreeormorechamfers.
○PRO_ROUND_TRANS_STOP_0_SIDE—Used toterminatethechamferxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtransitionformedbythreeoverlapping chamferpieceswithaplane.
○PRO_ROUND_TRANS_RBALL—Used tocreatearollingballtransition
forthreeormorechamfers.
○PRO_ROUND_TRANS_STOP_0_SIDE—Used toterminatethechamfer
usinggeometryconfigured byCreoParametric.
○PRO_ROUND_TRANS_STOP_1_SIDE—Used toterminatethechamfer
usinggeometryconfigured byCreoParametric.
○PRO_ROUND_TRANS_STOP_2_SIDE—Used toterminatethechamfer
usinggeometryconfigured byCreoParametric.
○PRO_ROUND_TRANS_STOP_AT_REF—Used toterminatethechamfer
geometryattheselecteddatumpointordatumplane.
Note
Onlysomeofthetransitiontypeslistedaboveareavailableforagiven
context.
908 Creo®Parametric TOOLKIT User’sGuide•PRO_E_RNDCH_TRANS_CAP—Specifies thecappingsurfaceforchamfer
piecesofthechamferfeature.Ithasthefollowingvalues:
○PRO_ROUND_CAPPING_SURF_DISABLE =PRO_B_FALSE.
○PRO_ROUND_CAPPING_SURF_ENABLE =PRO_B_TRUE.
•PRO_E_RNDCH_TRANS_PATCH_DATA—Specifies thepatchdataandis
requiredifPRO_E_RNDCH_TRANS_TYPE isequaltoPRO_ROUND_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_ROUND_CAPPING_SURF_DISABLE =PRO_B_FALSE.
○PRO_ROUND_CAPPING_SURF_ENABLE =PRO_B_TRUE.
•PRO_E_RNDCH_TRANS_PATCH_DATA—Specifies thepatchdataandis
requiredifPRO_E_RNDCH_TRANS_TYPE isequaltoPRO_ROUND_
TRANS_PATCH. Ithasthefollowingelements:
○PRO_E_RNDCH_TRANS_PATCH_REF_SURF—Specifies thearc
surface,whichindicatesthatavalidsurfacereferencehasbeenselectedto
placeafilletfortheactivepatchtransition. Itshouldhavethevalueas
PRO_SURFACE only.
○PRO_E_RNDCH_TRANS_PATCH_RAD_OPT—Specifies thearcradius
options.ItindicatesthefilletradiusfortheactivePatchtransitionandhas
followingoptions:
◆PRO_ROUND_TRANS_RADIUS_ENTER_VALUE— Specifiesanew
radiusvalue.
◆PRO_ROUND_TRANS_RADIUS_AUTOMATIC— Specifiesthemost
recentlyusedvalue.
◆PRO_E_RNDCH_TRANS_ARC_RADIUS—Specifies thearcradius.
•PRO_E_RNDCH_TRANS_STOP_DATA—Specifies thecappingsurface.Ithas
thefollowingelements:
○PRO_E_RNDCH_TRANS_STOP_REF_TYPE—Specifies thereference
type.Validvaluesare:
◆PRO_ROUND_TRANS_REF_NO_REF
◆PRO_ROUND_TRANS_REF_GEOMxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefollowingelements:
○PRO_E_RNDCH_TRANS_STOP_REF_TYPE—Specifies thereference
type.Validvaluesare:
◆PRO_ROUND_TRANS_REF_NO_REF
◆PRO_ROUND_TRANS_REF_GEOM
◆PRO_ROUND_TRANS_REF_PNTVTX
◆PRO_ROUND_TRANS_REF_DTMPLN
◆PRO_ROUND_TRANS_REF_ISOLINE
◆PRO_E_RNDCH_TRANS_STOP_REFERENCE—Specifies the
references fortheactivestopatreferencetransition. Itcaneitherbe
PRO_SURFACE orPRO_POINT.
CreatingaChamfer
FunctionIntroduced:
•ProFeatur eCreate()
ElementTrees:RoundandChamfer 909Usethefunction ProFeatureCreate() tocreateaChamferbasedonelement
treeinput.Formoreinformation about ProFeatureCreate(), refertothe
sectionOverview ofFeatureCreationonpage750ofchapterElementTrees:
Principles ofFeatureCreationonpage749.
Note
InPro/ENGINEER Wildfire2.0,
1.Pro/TOOLKITdoesnotsupportthetemporary geometryrequiredforuser-
specifiedambiguity andnon-default transitions. Therefore, theseelements
cannotbeusedforcreationofnewchamfers.
2.Iftransitions arespecifiedintheinputelementtree,achamferfeaturewiththexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedambiguity andnon-default transitions. Therefore, theseelements
cannotbeusedforcreationofnewchamfers.
2.Iftransitions arespecifiedintheinputelementtree,achamferfeaturewiththe
defaulttransitionwillbecreated.
3.Incaseofambiguous situation(wheremorethanonevalidsolutionsexist,e.g.
forsurface-surface chamfer-surfaceshavingdiscontinuous edgesof
intersection), achamferfeaturewithdefaultsolutionwillbecreated.
RedefiningaChamfer
FunctionIntroduced:
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaChamferbasedonthe
changesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
intheElementTrees:Principles ofFeatureCreationonpage749chapter.
Note
InPro/ENGINEER Wildfire2.0,
1.Achamferfeaturehavingdefaulttransition, cannotberedefinedtohaveany
transition.
2.AchamferfeaturehavingaPro/ENGINEER userinterfacedefinedtransition
canberedefinedtoothertypeoftransition, forexample,fromintersecttypetoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtransition.
2.AchamferfeaturehavingaPro/ENGINEER userinterfacedefinedtransition
canberedefinedtoothertypeoftransition, forexample,fromintersecttypeto
cornertype.Theinputelementtreemusthaveavalidtransitionoftherequired
type.
910 Creo®Parametric TOOLKIT User’sGuideAccessingaChamfer
FunctionIntroduced:
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaChamferandtoretrievetheelement
treedescription ofaChamfer.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771intheElementTrees:Principles ofFeatureCreationonpage749
chapter.
Example2:SamplecodeforcreationofaChamfer
Feature
ThesamplecodeinUgChamferTemplate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateaChamferfeature.Itincludesallpossibleelementassignments. By
followingtheinstructions forthefeatureyouwanttocreate,itshouldbepossiblexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateaChamferfeature.Itincludesallpossibleelementassignments. By
followingtheinstructions forthefeatureyouwanttocreate,itshouldbepossible
toremoveelementsettingsnotappropriate foryouruse.
Example3:SamplecodeforcreationofaEdge
ChamferFeature
ThesamplecodeinUgEdgeChamferCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateaEdgeChamferfeature.Theuserisprompted
toselectanedgeonwhichthechamferwillbecreated.
EditChamferFeature
Asapartoftheflexiblemodelingcapabilities theEditChamferfeatureallowsyou
tomodifytheexistingchamfergeometryofanedgechamfer.Youcanmodifythe
distance(D)fromtheedgealongeachsurface,theD1andD2values,andsoon
andalsotheoffsetdistance(O)fromtheedgealongeachsurface.Theabilityto
switchfromchamferbyoffset(O)tochamferbyextension(D)willhavethesame
restrictions asinthechamferfeature.
TocreatetheEditChamferfeaturefollowthesteps:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxswitchfromchamferbyoffset(O)tochamferbyextension(D)willhavethesame
restrictions asinthechamferfeature.
TocreatetheEditChamferfeaturefollowthesteps:
1.IdentifythechamfergeometrytobemodifiedanditsDorOvalue.
2.ModifythespecifiedchamfergeometrybyusingCreoParametric. The
application removestheidentifiedchamfergeometryandrecreatesthe
chamfered edgeswiththedesiredvalues.ThefeatureIDsofrecreated
chamfersareupdated.
ElementTrees:RoundandChamfer 911FeatureElementTreeforEditChamferFeature
TheelementtreeforanEditChamferfeatureisdocumented intheheaderfile
ProModifyChamfer.h andisasshowninthefollowingfigure.
EditChamferElementTree
Thefollowingtabledescribestheelementsintheelementtree:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoffeature.Thevalueofthis
featuremustbePRO_FEAT_
MOD_CHAMFER.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesthe
nameofthefeature.Thedefault
valueisEDIT_CHAMFER.
PRO_E_STD_SURF_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturemustbePRO_FEAT_
MOD_CHAMFER.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesthe
nameofthefeature.Thedefault
valueisEDIT_CHAMFER.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesa
collection ofreferencesurfaces
912 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
thatincludethechamfergeometry
tobemodified.
InCreoParametric TOOLKIT
7.0.0.0andlater,youcanselect
thereferencesurfacesfromboth
differentsolidbodiesaswellas
quilts.Theresultinggeometryis
attachedbacktothesamesolid
bodyorquiltfromwherethe
referenced surfaceswereselected.
PRO_E_MODRND_REMOVE PRO_VALUE_TYPE_INT Mandatory element.Specifiesif
theexistingchamfermustbe
removed.
PRO_E_MODRND_
DIMENSIONAL_SCHEMAPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofchamferorthedimension
schema.Thevaluesforthis
elementaredefinedbythe
enumerated type
ProChmSchema. Formore
information onthechamfertypes,
refertosectionElementDetailsof
PRO_E_RNDCH_SET forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofchamferorthedimension
schema.Thevaluesforthis
elementaredefinedbythe
enumerated type
ProChmSchema. Formore
information onthechamfertypes,
refertosectionElementDetailsof
PRO_E_RNDCH_SET for
Chamferonpage905.
PRO_E_MODRND_RAD_VAL PRO_VALUE_TYPE_BOOLEAN Mandatory element.Specifiesthe
firstdistanceortheoffsetvalue
depending onthetypeofchamfer
definedbytheenumerated type
ProChmSchema.
Specifyavalueintherangeof
[(part epsilon /10.0),
1.0e+06] forDtypeschemas
and[-1.0e+06, 1.0e+06]
forOtypeschemas.
PRO_E_MODRND_DIM2_VAL PRO_VALUE_TYPE_BOOLEAN Specifiestheseconddistance,
offsetorangularvalueofthe
chamfer.
Mandatory elementifthevalueof
theenumerated type
ProChmSchema isoneofthe
following:
•PRO_CHM_D1_X_D2
•PRO_CHM_O1_X_O2
•PRO_CHM_ANG_X_D
Specifyavalueintherangeof:
ElementTrees:RoundandChamfer 913ElementID DataType Description
•[(part epsilon /
10.0), 1.0e+06] forD
typeschemas
•[-1.0e+06, 1.0e+06] for
Otypeschemas
•[0,180]forchamferangle
ANG.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:RoundandChamfer 913ElementID DataType Description
•[(part epsilon /
10.0), 1.0e+06] forD
typeschemas
•[-1.0e+06, 1.0e+06] for
Otypeschemas
•[0,180]forchamferangle
ANG.
PRO_E_MODRND_OPTS Compound Mandatory element.Specifiesthe
modification optionsforeach
chamfertoberecreated.
PRO_E_MODRND_ATTACH PRO_VALUE_TYPE_INT Mandatory element.Specifiesif
thechamfergeometrymustbe
attachedtotheselectedreference
surfaceoncethechamferis
recreated.Thevaluesforthis
elementaredefinedbythe
enumerated type
ProModRndAttach.
PRO_E_MODRND_CLOSEGEOM PRO_VALUE_TYPE_INT Mandatory element.
Usethiselementonlyifthe
chamfersarerecreatedasnew
surfacesorquilts,thatis,ifthe
element PRO_E_MODRND_
ATTACHhasthevalue PRO_
MODRND_DONOT_ATTACH_
GEOM.
Specifiesifendsurfacesmustbe
createdfortherecreatedchamfer
geometry.Thevaluesforthis
elementaredefinedbythe
enumerated type
ProModRndCloseGeom.
914 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MODRND_RMV_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometry.Thevaluesforthis
elementaredefinedbythe
enumerated type
ProModRndCloseGeom.
914 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MODRND_RMV_
INTERF_RNDPRO_VALUE_TYPE_INT Mandatory element.Specifiesif
theinterfering chamfersmustbe
removedandrecreatedinorderto
recreatethemodifiedchamfer
geometry.Thevaluesforthis
elementaredefinedbythe
enumerated type
ProModRndRecrRounds.
PRO_E_STD_FLEX_
PROPAGATIONPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesa
Patternfeature,aSymmetry
Recognition feature,oraMirror
Geometry featurethatcontainsthe
referencesurfacesspecifiedbythe
element PRO_E_STD_SURF_
COLLECTION_APPL. Ifsuch
surfacesexist,thenthe
modification ofthechamferis
propagated toallcorresponding
surfacesintheinstancesofthe
specifiedfeaturetomaintainthe
patternorsymmetry.
CornerChamferFeature
FeatureElementTreeforCornerChamfer
Theelementtreeforacornerchamferisdocumented intheheaderfile
ProCornerChamfer.h, andhasasimplestructure.Thefollowingfigurexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpatternorsymmetry.
CornerChamferFeature
FeatureElementTreeforCornerChamfer
Theelementtreeforacornerchamferisdocumented intheheaderfile
ProCornerChamfer.h, andhasasimplestructure.Thefollowingfigure
demonstrates thefeatureelementtreestructure:
CornerChamferElementTree
Theelementsinthistreearedescribedasfollows:
ElementTrees:RoundandChamfer 915•PRO_E_STD_FEATURE_TYPE—Specifies thefeaturetypeandshouldbe
PRO_FEAT_CORN_CHAMF.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.The
defaultvalueforthiselementisCORNER_CHAMFER_#, where #specifiesthe
featurenumber.
•PRO_E_STD_CORNER_CHAMF_CORNER—Specifies thevertexonwhich
thecornerchamferisplacedandcanbeselectionofthetypePRO_EDGE,
PRO_EDGE_PNT, PRO_EDGE_START orPRO_EDGE_END. Whenusing
PRO_EDGE andPRO_EDGE_PNT typeofreference, anappropriate parameter
shouldbesetusingthefunction ProReferenceParamsSet().
•PRO_E_STD_CORNER_CHAMF_EDGE1— Specifiesthefirstdistancevalue
fromthevertextothechamferalongfirstdirectionedge.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxshouldbesetusingthefunction ProReferenceParamsSet().
•PRO_E_STD_CORNER_CHAMF_EDGE1— Specifiesthefirstdistancevalue
fromthevertextothechamferalongfirstdirectionedge.
•PRO_E_STD_CORNER_CHAMF_EDGE2— Specifiestheseconddistance
valuefromthevertextothechamferalongtheseconddirectionedge.
•PRO_E_STD_CORNER_CHAMF_EDGE3— Specifiesthethirddistancevalue
fromthevertextothechamferalongthethirddirectionedge.
CreatingaCornerChamfer
FunctionIntroduced:
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaCornerChamferbasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750intheElementTrees:
Principles ofFeatureCreationonpage749.chapter.
RedefiningaCornerChamfer
FunctionIntroduced:
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaCornerChamfer
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProFeatureRedefine() toredefineaCornerChamfer
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
intheElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaCornerChamfer
FunctionIntroduced:
•ProFeatur eElemtree Extract()
916 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaCornerChamferandtoretrievethe
elementtreedescription ofaCornerChamfer.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771intheElementTrees:Principles ofFeatureCreationonpage749
chapter.
ElementTrees:RoundandChamfer 91740
ElementTrees:Hole
Overview................................................................................................................919
FeatureElementTreeforHoleFeatures....................................................................919xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFeatureElementTreeforHoleFeatures....................................................................919
FeatureElementDataTypes....................................................................................922
CommonElementValues.........................................................................................925
PRO_E_HLE_COM Values......................................................................................925
ValidPRO_E_HLE_COM Sub-Elements ...................................................................930
HolePlacementTypes.............................................................................................934
Miscellaneous Information.......................................................................................939
Thischapterdescribestheprogrammatic creationofHolefeaturesusingtheCreo
Parametric TOOLKITincludefileProHole.h.
Werecommend youreadthesection,Overview ofFeatureCreationonpage750xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThischapterdescribestheprogrammatic creationofHolefeaturesusingtheCreo
Parametric TOOLKITincludefileProHole.h.
Werecommend youreadthesection,Overview ofFeatureCreationonpage750
inthechapter,ElementTrees:Principles ofFeatureCreationonpage749It
providesthenecessarybackground forcreatingfeaturesusingCreoParametric
TOOLKIT.
918 Creo®Parametric TOOLKIT User’sGuideOverview
CreoParametric TOOLKITsupportsfourtypesofHoles:
•Straight
•Standard
•Sketched
•Custom
TheStandardHoletypeissub-divided intotwocategories:
•StandardClearance Hole
•StandardThreadedHole
Thischapterdetailstheprocedure andthesequenceofthecreationoftheelement
treeforalloftheabovetypes.
AllHoletypesandplacement typesrequireentryofspecificelementsduring
elementtreecreation.Elementsmustbeenteredinthespecifiedorder.
TocreateaHolefeature,firstaddtotheelementtreeallelementsrelatedtothe
holetype.Then,addtheelementsrequiredforHoleplacement. CreatingSketched
Holesusestechniques similartocreationoftheothersketchedfeatures(seexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxholetype.Then,addtheelementsrequiredforHoleplacement. CreatingSketched
Holesusestechniques similartocreationoftheothersketchedfeatures(see
ElementTrees:SketchedFeaturesonpage987).
Note
Allangleelementsarespecifiedindegrees.
YoucanuseIntentDatumssuchasIntentPoint,IntentAxis,andIntentPlanefor
holeplacement inparts.
Lightweight holescanbecreatedonlyinpartsandnotinassemblies. Youcan
togglebetweenalightweight andregularhole,onlyincaseofsimpleholesand
notinsketched,standard,orcustomholes.
FeatureElementTreeforHoleFeatures
TheelementtreefortheHolefeatureisdocumented intheCreoParametric
TOOLKITheaderfileProHole.h.
ElementTrees:Hole 919FeatureElementTreeforHoleFeature
920 Creo®Parametric TOOLKIT User’sGuideCommonElementsforHoleTypes
ElementTrees:Hole 921CommonElementsforHolePlacement
FeatureElementDataTypes
Thefollowingtablelistsdatatypesforholetypeandplacement elements.
Elementvaluesmustbeofthespecifiedtype.
HoleElementTable
ElementId ElementNameDataTypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFeatureElementDataTypes
Thefollowingtablelistsdatatypesforholetypeandplacement elements.
Elementvaluesmustbeofthespecifiedtype.
HoleElementTable
ElementId ElementNameDataType
PRO_E_FEATURE_TYPE FeatureType PRO_VALUE_TYPE_INT
PRO_E_FEATURE_FORM FeatureForm PRO_VALUE_TYPE_INT
PRO_E_HLE_COM Hole Compound
PRO_E_HLE_TYPE_NEW HoleType PRO_VALUE_TYPE_INT
PRO_E_HLE_STAN_TYPE StandardType PRO_VALUE_TYPE_INT
PRO_E_HLE_THRDSERIS ThreadSeries PRO_VALUE_TYPE_INT
PRO_E_HLE_FITTYPE FitType PRO_VALUE_TYPE_INT
PRO_E_HLE_SCREWSIZE ScrewSize PRO_VALUE_TYPE_INT
PRO_E_HLE_ADD_THREAD AddThread PRO_VALUE_TYPE_INT
PRO_E_HLE_ADD_CBORE AddCounterbore PRO_VALUE_TYPE_INT
PRO_E_HLE_ADD_CSINK AddCountersink PRO_VALUE_TYPE_INT
922 Creo®Parametric TOOLKIT User’sGuideElementId ElementNameDataType
PRO_E_HLE_MAKE_LIGHTWT Makelightweight
holePRO_VALUE_TYPE_INT (Itisgivenbythe
enumerated typeProHleLightWtFlag)
PRO_E_DIAMETER Diameter PRO_VALUE_TYPE_DOUBLE
PRO_E_HOLE_STD_DEPTH DepthElement CompoundxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_MAKE_LIGHTWT Makelightweight
holePRO_VALUE_TYPE_INT (Itisgivenbythe
enumerated typeProHleLightWtFlag)
PRO_E_DIAMETER Diameter PRO_VALUE_TYPE_DOUBLE
PRO_E_HOLE_STD_DEPTH DepthElement Compound
PRO_E_HOLE_DEPTH_TO DepthTwo Compound
PRO_E_HOLE_DEPTH_TO_
TYPEDepthTwo PRO_VALUE_TYPE_INT
PRO_E_EXT_DEPTH_TO_
VALUEDepthValue PRO_VALUE_TYPE_DOUBLE
PRO_E_EXT_DEPTH_TO_REF Reference PRO_VALUE_TYPE_SELECTION
PRO_E_HOLE_DEPTH_FROM DepthOne Compound
PRO_E_HOLE_DEPTH_FROM
_TYPEDepthOne PRO_VALUE_TYPE_INT
PRO_E_EXT_DEPTH_FROM
_VALUEDepthValue PRO_VALUE_TYPE_DOUBLE
PRO_E_EXT_DEPTH_FROM_
REFReference PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_HOLEDIAM Diameter PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DEPTH Depth PRO_VALUE_TYPE_INT
PRO_E_HLE_CSINKANGLE CsinkAngle PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_CBOREDEPTH Counterbore Depth PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_CBOREDIAM Counterbore
DiameterPRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_CSINKDIAM CsinkDiameter PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DEPTH_DIM_
TYPEDepthDimxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_CBOREDIAM Counterbore
DiameterPRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_CSINKDIAM CsinkDiameter PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DEPTH_DIM_
TYPEDepthDim
SchemePRO_VALUE_TYPE_INT
PRO_E_HLE_THRD_DEPTH ThreadDepth PRO_VALUE_TYPE_INT
PRO_E_HLE_THRDDEPTH ThreadDepth PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DRILLANGLE DrillheadAngle PRO_VALUE_TYPE_DOUBLE
RO_E_HLE_DRILLDEPTH DrillDepth PRO_VALUE_TYPE_DOUBLE
PRO_E_STD_HOLE_DEPTH_
REFReference PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_SKETCHER Sketcher N/A
PRO_E_HLE_CRDIR_FLIP CreationDirection PRO_VALUE_TYPE_INT
PRO_E_HLE_ADD_EXIT_
CSINKAddExitCsink PRO_VALUE_TYPE_INT
PRO_E_HLE_EXIT_
CSINKANGLEExitCsinkAngle PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_EXIT_
CSINKDIAMExitCsink
DiameterPRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_ADD_NOTE AddHoleNote PRO_VALUE_TYPE_INT
PRO_E_HOLE_NOTE HoleNote Theelementisnotaccessible throughCreo
Parametric TOOLKIT
PRO_E_HLE_TOP_CLEARANCE TopClearance PRO_VALUE_TYPE_INT
PRO_E_HLE_PLACEMENT Placement N/AxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HOLE_NOTE HoleNote Theelementisnotaccessible throughCreo
Parametric TOOLKIT
PRO_E_HLE_TOP_CLEARANCE TopClearance PRO_VALUE_TYPE_INT
PRO_E_HLE_PLACEMENT Placement N/A
PRO_E_HLE_PRIM_REF PrimaryReference PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_PL_TYPE Placement Options PRO_VALUE_TYPE_INT
ElementTrees:Hole 923ElementId ElementNameDataType
PRO_E_HLE_DIM_REF1 DimensionRef 1 PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_PLC_ALIGN_
OPT1Alignment for
placement
reference1PRO_VALUE_TYPE_INT
PRO_E_HLE_DIM_DIST1 Distance1 PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DIM_REF2 DimensionRef 2 PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_PLC_ALIGN_
OPT2Alignment for
placement
reference2PRO_VALUE_TYPE_INT
PRO_E_LIN_HOLE_DIR_REF Reference
DirectionPRO_VALUE_TYPE_SELECT
PRO_E_HLE_DIM_DIST2 Distance2 PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_AXIS Axis PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_REF_PLANE Reference Plane PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_REF_ANG Angle PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DIM_DIA Diameter PRO_VALUE_TYPE_DOUBLExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_AXIS Axis PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_REF_PLANE Reference Plane PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_REF_ANG Angle PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DIM_DIA Diameter PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DIM_RAD Radius PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_DIM_LIN LinearDistance PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_NORM_PLA NormalPlane PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_NORM_OFFST Offset PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_PLCMNT_PLANE Placement Plane PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_REF_PLANE_1 Reference Plane PRO_VALUE_TYPE_SELECTION
PRO_E_HLE_REF_ANG_1 Angle PRO_VALUE_TYPE_DOUBLE
PRO_E_HLE_FT_DIR_REF Direction
referencePRO_VALUE_TYPE_SELECTION
PRO_E_HLE_FT_DIR_OPT Directionoption PRO_VALUE_TYPE_INT
PRO_E_INT_PARTS IntsctParts N/A
PRO_E_PATTERN Pattern N/A
PRO_E_STD_FEATURE_NAME FeatureName PRO_VALUE_TYPE_WSTRING
PRO_E_BODY Compound Compound elementthatholdsBodyoptions.For
moreinformation, refertotheProBodyOpts.h
elementtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_PATTERN Pattern N/A
PRO_E_STD_FEATURE_NAME FeatureName PRO_VALUE_TYPE_WSTRING
PRO_E_BODY Compound Compound elementthatholdsBodyoptions.For
moreinformation, refertotheProBodyOpts.h
elementtree.
924 Creo®Parametric TOOLKIT User’sGuideElementId ElementNameDataType
PRO_E_BODY_USE PRO_VALUE_
TYPE_INTMandatory element.Specifiesthebodiesonwhich
theholefeatureiscreated.Thevalidvaluesare:
•PRO_BODY_USE_ALL—Hole iscreatingon
alltheexistingbodies.
Note
Thisoptionisnotavailableforthe
followingholedepthoptions:
○ToNext
○Through Until
•PRO_BODY_USE_SELECTED—Hole is
createdontheselectedbodies.
PRO_E_BODY_SELECT PRO_VALUE_
TYPE_
SELECTIONSpecifiesthereferencetotheselectedbody.
Mandatory ifthevalueofPRO_E_BODY_USEis
settoPRO_BODY_USE_SELECTED.
Note
Multiplereferences areallowed.
CommonElementValues
Allholesrequiredefinitionofthefeaturetypeandfeatureform.Thefollowing
tableshowsvalidvaluesforthecommonelementsintheholeelementtree.
CommonElementValues
ElementID Value
PRO_E_FEATURE_TYPE PRO_FEAT_HOLExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAllholesrequiredefinitionofthefeaturetypeandfeatureform.Thefollowing
tableshowsvalidvaluesforthecommonelementsintheholeelementtree.
CommonElementValues
ElementID Value
PRO_E_FEATURE_TYPE PRO_FEAT_HOLE
PRO_E_FEATURE_FORM PRO_HLE_TYPE_STRAIGHT (forstraightholes)
PRO_HLE_TYPE_SKETCHED (forotherholetypes)
PRO_E_STD_FEATURE_NAME Wstring(featurename)
PRO_E_BODY Compound elementthatholdsBodyoptions.
PRO_E_HLE_COM Values
ValuesrequiredforPRO_E_HLE_COM compound elementvaryfordifferenthole
types.ThefollowingtablesshowthePRO_E_HLE_COM elementvaluesrequired
todefinedifferentholetypes.Besuretoentertheelementsintotheelementtreein
theorderspecifiedbythesetables.
StraightHole
Thefollowingtableshowselementsforcreatingastraighthole.
StraightHoleElements
ElementTrees:Hole 925Element Status
PRO_E_HLE_TYPE_NEW PRO_HLE_NEW_TYPE_STRAIGHT
PRO_E_HLE_MAKE_LIGHTWT Mandatory
PRO_E_DIAMETER Mandatory
PRO_E_HOLE_STD_DEPTH Mandatory
PRO_E_HOLE_DEPTH_TO Mandatory
PRO_E_HOLE_DEPTH_TO_TYPE MandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_TYPE_NEW PRO_HLE_NEW_TYPE_STRAIGHT
PRO_E_HLE_MAKE_LIGHTWT Mandatory
PRO_E_DIAMETER Mandatory
PRO_E_HOLE_STD_DEPTH Mandatory
PRO_E_HOLE_DEPTH_TO Mandatory
PRO_E_HOLE_DEPTH_TO_TYPE Mandatory
PRO_E_EXT_DEPTH_TO_VALUE DependsonPRO_E_HOLE_DEPTH_TO_TYPE
PRO_E_EXT_DEPTH_TO_REF DependsonPRO_E_HOLE_DEPTH_TO_TYPE
PRO_E_HOLE_DEPTH_FROM Mandatory
PRO_E_HOLE_DEPTH_FROM_TYPE Mandatory
PRO_E_EXT_DEPTH_FROM_VALUE DependsonPRO_E_HOLE_DEPTH_FROM_TYPE
PRO_E_EXT_DEPTH_FROM_REF DependsonPRO_E_HOLE_DEPTH_FROM_TYPE
PRO_E_HLE_TOP_CLEARANCE Mandatory
FigureStraightHolewithLinearPlacement onpage926showscodeforcreating
astraightholewithlinearplacement andthrough-all depth.Theholehas100units
diameter,andisplaced100unitsdistantfromthefirstreferenceand200units
distancefromthesecond.
Thefunction ProDemoHoleCreate() buildsthecompleteelementtree
serially.FirstaddallelementsrequiredforthestraightholeunderthePRO_E_
HLE_COM element.Thenentertheplacement elementsunderthePRO_E_HLE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDemoHoleCreate() buildsthecompleteelementtree
serially.FirstaddallelementsrequiredforthestraightholeunderthePRO_E_
HLE_COM element.Thenentertheplacement elementsunderthePRO_E_HLE_
PLACEMENT element.Useelement PRO_E_HOLE_DEPTH_TO_TYPE tospecify
theholeas'throughall'.
Thefunction UserElemtreeElementAdd() isasmallutilitythataddan
elementtotheelementtree.
StraightHolewithLinearPlacement
ThesamplecodeinUgHoleCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateastraightlinearhole.
SketchedHole
CreoParametric TOOLKITsupportstwomethodsforcreatingsketchedholes.
ThefirstisasdescribedinElementTrees:SketchedFeaturesonpage987,the
secondusesthefunction ProFeatureCreate() moredirectly.
Thefollowingtabledescribestherequiredelementsforsketchedholefeatures.
SketchedHoleElements
Element Status
PRO_E_HLE_TYPE_NEW PRO_HLE_NEW_TYPE_SKETCH
PRO_E_SKETCHER Mandatory
926 Creo®Parametric TOOLKIT User’sGuideElement StatusxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSketchedHoleElements
Element Status
PRO_E_HLE_TYPE_NEW PRO_HLE_NEW_TYPE_SKETCH
PRO_E_SKETCHER Mandatory
926 Creo®Parametric TOOLKIT User’sGuideElement Status
PRO_E_HLE_CRDIR_FLIP Mandatory
PRO_E_HLE_TOP_CLEARANCE Mandatory
ProcedureUsingTechniquesfromCreatingSketched
Features
1.Addtherequiredelementsforthesketchedfeatureasoutlinedinthetablein
sectionSketchedHoleonpage926.
2.Addalltheplacement elements.
3.Settheargument ProFeatureCreateOptions for
ProFeatureCreate() toPRO_FEAT_CR_INCOMPLETE_FEAT and
callProFeatureCreate() withthecreatedelementtree.
4.Fetchthesectionhandleforthesectionoftheincomplete feature,usingthe
sequenceofcallsProElempathAlloc(), ProElempathDataSet(),
andProFeatureElemValueGet().
5.Createa2Drevolvedsectionwiththeretrievedsectionhandle.Addthecenter-
linefortheaxisofrevolution asrequiredforthesectionforrevolvedfeaturein
CreoParametric userinterface.
6.Attachthenewsectiontotheelementtree,thencall
ProFeatureRedefine() withtheelementtreecreatedinthesesteps.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric userinterface.
6.Attachthenewsectiontotheelementtree,thencall
ProFeatureRedefine() withtheelementtreecreatedinthesesteps.
RefertoSketchedHolewithConventional Approach onpage927foracode
exampleofthistechniqueofholecreation.
SketchedHolewithConventional Approach
Example1:CreatingaStandardSketchedHolewithLinearPlacement
ThesamplecodeinUgHoleCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateastandardsketchedholewithlinearplacement. Intheconventional
approach:
•UseProFeatureCreate() tocreateincomplete feature
•Usethefeaturehandletogetthesectionhandle
•Buildthesection
•GiveacalltoProFeatureRedefine() toredefine
•Completethefeature.
ElementTrees:Hole 927ProcedureUsingProFeatureCreate()
Inthisapproachtosketchedholecreation,populatetherequiredelementsinthe
elementtree(asshowninthetableinsectionSketchedHoleonpage926),and
thencallProFeatureCreate().
RefertoStandardThreadedHoleonpage928foracodeexampleforcreationof
thistypeofhole.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementtree(asshowninthetableinsectionSketchedHoleonpage926),and
thencallProFeatureCreate().
RefertoStandardThreadedHoleonpage928foracodeexampleforcreationof
thistypeofhole.
RefertoSketchedHolewithProFeatureCreate() onpage928foracodeexample
ofthistechniqueofholecreation.
SketchedHolewithProFeatureCreate()
Example:CreatingaStandardSketchedHolewithLinearPlacement
ThesamplecodeinUgHoleCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateastandardsketchedholewithlinearplacement. Usingnew
approach:
•Createthecompleteelementtreewiththesketcherelement
•CallProFeatureCreate() tocreatetheholefeature
StandardThreadedHole
Thefollowingtableshowselementsforcreatingastandardthreadedhole.
RefertoExample2:CreatingaStandardThreadedHolewithLinearPlacement on
page929foracodeexampleoncreatingthistypeofhole.
Element Status
PRO_E_HLE_TYPE_NEW Mandatory
PRO_E_HLE_STAN_TYPE Mandatory
PRO_E_HLE_THRDSERIS Mandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpage929foracodeexampleoncreatingthistypeofhole.
Element Status
PRO_E_HLE_TYPE_NEW Mandatory
PRO_E_HLE_STAN_TYPE Mandatory
PRO_E_HLE_THRDSERIS Mandatory
PRO_E_HLE_FITTYPE Mandatory: settoPRO_HLE_CLOSE_FIT
PRO_E_HLE_SCREWSIZE Mandatory
PRO_E_HLE_ADD_THREAD Mandatory
PRO_E_HLE_ADD_CBORE Mandatory
PRO_E_HLE_ADD_CSINK Mandatory
PRO_E_HLE_HOLEDIAM Mandatory
PRO_E_HLE_DRILLANGLE Requiredforvariabledepthhole
PRO_E_HLE_CSINKANGLE Requiredforcountersink option
PRO_E_HLE_CBOREDEPTH Requiredforcounterbore option
PRO_E_HLE_CBOREDIAM Requiredforcounterbore option
PRO_E_HLE_CSINKDIAM Requiredforcountersink option
PRO_E_HLE_THRDDEPTH Mandatory ,evenforanon-threaded holeorathru-
threadedhole.
928 Creo®Parametric TOOLKIT User’sGuideElement Status
Thiselementisrequired.Ifnotadded,holecreation
willsucceedbutthefeaturecannotberedefinedin
theCreoParametric userinterface.
PRO_E_HLE_DRILLDEPTH Mandatory ,evenforathrough-all hole.
Thiselementisrequired.Ifnotadded,holecreationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwillsucceedbutthefeaturecannotberedefinedin
theCreoParametric userinterface.
PRO_E_HLE_DRILLDEPTH Mandatory ,evenforathrough-all hole.
Thiselementisrequired.Ifnotadded,holecreation
willsucceedbutthefeaturecannotberedefinedin
theCreoParametric userinterface.
PRO_E_HLE_THRD_DEPTH Mandatory
PRO_E_HLE_DEPTH Mandatory
PRO_E_STD_HOLE_DEPTH_REF DependsonPRO_E_HLE_DEPTH
PRO_E_HLE_DEPTH_DIM_TYPE DependsonPRO_E_HLE_DEPTH
PRO_E_HLE_CRDIR_FLIP Mandatory
PRO_E_HLE_ADD_EXIT_CSINK RequiredforThruallhole
PRO_E_HLE_EXIT_CSINKANGLE Requiredforexitcountersink option
PRO_E_HLE_EXIT_CSINKDIAM Requiredforexitcountersink option
PRO_E_HLE_ADD_NOTE RequiredforHolenote
PRO_E_HOLE_NOTE DependsonPRO_E_HLE_ADD_NOTE
PRO_E_HLE_TOP_CLEARANCE Mandatory
Example2:CreatingaStandardThreadedHolewithLinear
Placement
ThesamplecodeinUgHoleCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateastandardthreadedholewithlinearplacement.
StandardClearanceHolexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPlacement
ThesamplecodeinUgHoleCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateastandardthreadedholewithlinearplacement.
StandardClearanceHole
Thefollowingtableoutlineselementsforstandardclearanceholes.
StandardClearance HoleElements
Element Status
PRO_E_HLE_TYPE_NEW Mandatory
PRO_E_HLE_STAN_TYPE Mandatory
PRO_E_HLE_THRDSERIS Mandatory
PRO_E_HLE_FITTYPE Mandatory
PRO_E_HLE_SCREWSIZE Mandatory
PRO_E_HLE_ADD_THREAD Mandatory
PRO_E_HLE_ADD_CBORE Mandatory
PRO_E_HLE_ADD_CSINK Mandatory
PRO_E_HLE_HOLEDIAM Mandatory
PRO_E_HLE_DRILLANGLE Requiredforvariabledepthhole
ElementTrees:Hole 929Element Status
PRO_E_HLE_CSINKANGLE Requiredforcountersink option
PRO_E_HLE_CBOREDEPTH Requiredforcounterbore option
PRO_E_HLE_CBOREDIAM Requiredforcounterbore option
PRO_E_HLE_CSINKDIAM Requiredforcountersink option
PRO_E_HLE_DEPTH Mandatory
PRO_E_HLE_CRDIR_FLIP Mandatory
PRO_E_HLE_ADD_EXIT_CSINK RequiredforThruallholexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_CSINKDIAM Requiredforcountersink option
PRO_E_HLE_DEPTH Mandatory
PRO_E_HLE_CRDIR_FLIP Mandatory
PRO_E_HLE_ADD_EXIT_CSINK RequiredforThruallhole
PRO_E_HLE_EXIT_CSINKANGLE Requiredforexitcountersink option
PRO_E_HLE_EXIT_CSINKDIAM Requiredforexitcountersink option
PRO_E_HLE_ADD_NOTE RequiredforHolenote
PRO_E_HOLE_NOTE DependsonPRO_E_HLE_ADD_NOTE
PRO_E_HLE_TOP_CLEARANCE Mandatory
CustomHole
Thefollowingtableoutlinestheelementsforcreatingacustomhole.
CustomHoleElements
Element Status
PRO_E_HLE_TYPE_NEW Mandatory
PRO_E_HLE_ADD_CBORE Mandatory
PRO_E_HLE_ADD_CSINK Mandatory
PRO_E_HLE_HOLEDIAM Mandatory
PRO_E_HLE_DRILLANGLE Requiredforvariabledepthhole
PRO_E_HLE_CSINKANGLE Requiredforcountersink option
PRO_E_HLE_CBOREDEPTH Requiredforcounterbore option
PRO_E_HLE_CBOREDIAM Requiredforcounterbore option
PRO_E_HLE_CSINKDIAM Requiredforcountersink option
PRO_E_HLE_DEPTH Mandatory
PRO_E_HLE_DEPTH_DIM_TYPE DependsonPRO_E_HLE_DEPTH
PRO_E_HLE_CRDIR_FLIP MandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_CSINKDIAM Requiredforcountersink option
PRO_E_HLE_DEPTH Mandatory
PRO_E_HLE_DEPTH_DIM_TYPE DependsonPRO_E_HLE_DEPTH
PRO_E_HLE_CRDIR_FLIP Mandatory
PRO_E_HLE_ADD_EXIT_CSINK RequiredforThruallhole
PRO_E_HLE_EXIT_CSINKANGLE Requiredforexitcountersink option
PRO_E_HLE_EXIT_CSINKDIAM Requiredforexitcountersink option
PRO_E_HLE_TOP_CLEARANCE Mandatory
ValidPRO_E_HLE_COM Sub-Elements
Thefollowingtablegivesthedescription ofalltheelementsforalltheholetypes.
930 Creo®Parametric TOOLKIT User’sGuideElementID Comment/Description
StraightHole
PRO_E_HLE_TYPE_NEW =PRO_HLE_NEW_TYPE_STRAIGHT
PRO_E_DIAMETER Storesthediameterdoublevalue
PRO_E_HOLE_STD_DEPTH Depth(compound element)
PRO_E_HOLE_DEPTH_TO FirstSidedepthinfo(compound element)
PRO_E_HOLE_DEPTH_TO_TYPE TypeProHleStraightDepType/* Blind*/ PRO_
HLE_STRGHT_BLIND_DEPTH /*ThruNext*/ PRO_
HLE_STRGHT_THRU_NEXT_DEPTH /*ThruAll*/
PRO_HLE_STRGHT_THRU_ALL_DEPTH /*Thru
Until*/ PRO_HLE_STRGHT_THRU_UNTIL_DEPTHxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxHLE_STRGHT_BLIND_DEPTH /*ThruNext*/ PRO_
HLE_STRGHT_THRU_NEXT_DEPTH /*ThruAll*/
PRO_HLE_STRGHT_THRU_ALL_DEPTH /*Thru
Until*/ PRO_HLE_STRGHT_THRU_UNTIL_DEPTH
/*UptoRef*/ PRO_HLE_STRGHT_UPTO_REF_DEPTH
/*None*/PRO_HLE_STRGHT_NONE_DEPTH
/*Symmetric*/ PRO_HLE_STRGHT_SYM_DEPTH
PRO_E_EXT_DEPTH_TO_VALUE Storesvariabledepthdoublevaluewhen PRO_E_
HOLE_DEPTH_TO_TYPE equals PRO_HLE_STRGHT_
BLIND_DEPTH.
PRO_E_EXT_DEPTH_TO_REF Storestheuptoreferencewhen PRO_E_HOLE_DEPTH_
TO_TYPE isnotPRO_HLE_STRGHT_BLIND_DEPTH
andnotPRO_HLE_STRGHT_NONE_DEPTH.
PRO_E_HOLE_DEPTH_FROM SecondSidedepthinfo(compound element).
PRO_E_HOLE_DEPTH_FROM_TYPE TypeProHleStraightDep
/*Blind*/
PRO_HLE_STRGHT_BLIND_DEPTH
/*ThruNext*/
PRO_HLE_STRGHT_THRU_NEXT_DEPTH
/*ThruAll*/
PRO_HLE_STRGHT_THRU_ALL_DEPTH
/*ThruUntil*/
PRO_HLE_STRGHT_THRU_UNTIL_DEPTH
/*UptoRef*/
PRO_HLE_STRGHT_UPTO_REF_DEPTH
/*None*/
PRO_HLE_STRGHT_NONE_DEPTH
/*Symmetric*/
PRO_HLE_STRGHT_SYM_DEPT
PRO_E_EXT_DEPTH_FROM_VALUE Storesvariabledepthdoublevaluewhen PRO_E_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/*UptoRef*/
PRO_HLE_STRGHT_UPTO_REF_DEPTH
/*None*/
PRO_HLE_STRGHT_NONE_DEPTH
/*Symmetric*/
PRO_HLE_STRGHT_SYM_DEPT
PRO_E_EXT_DEPTH_FROM_VALUE Storesvariabledepthdoublevaluewhen PRO_E_
HOLE_DEPTH_FROM_TYPE equals PRO_HLE_
STRGHT_BLIND_DEPTH.
PRO_E_EXT_DEPTH_FROM_REF Storestheuptoreferencewhen PRO_E_HOLE_DEPTH_
FROM_TYPE isnotPRO_HLE_STRGHT_BLIND_
DEPTHandisnotPRO_HLE_STRGHT_NONE_DEPTH
andnotPRO_HLE_STRGHT_SYM_DEPTH.
SketchHole
PRO_E_HLE_TYPE_NEW settoPRO_HLE_NEW_TYPE_SKETCH
PRO_E_HLE_SKETCHER 2DSketcherElement
ElementTrees:Hole 931ElementID Comment/Description
PRO_E_HLE_CRDIR_FLIP Directionofcreation,typeProHleCrDir
StandardHole
PRO_E_HLE_TYPE_NEW settoPRO_HLE_NEW_TYPE_STANDARD
PRO_E_STAN_TYPE =PRO_HLE_TAPPED_TYPE /*Tappedhole*/
=PRO_HLE_CLEARANCE_TYPE/* Clearance hole*/
PRO_E_HLE_STAN_TYPE typeProHleStandType
PRO_E_HLE_THRDSERIS Integer.The*.holfilesgetloadedasspecifiedinHole
Parameter Filesonpage939.Fromthe*.holfiles,
differentTHREAD_SERIES information aregatheredxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_STAN_TYPE typeProHleStandType
PRO_E_HLE_THRDSERIS Integer.The*.holfilesgetloadedasspecifiedinHole
Parameter Filesonpage939.Fromthe*.holfiles,
differentTHREAD_SERIES information aregathered
andalistisformed.Thiselementstoresthecurrent
indextothelist.
PRO_E_HLE_FITTYPE typeProHleFittype. Availableforclearancehole
(when PRO_E_HLE_STAN_TYPE isPRO_HLE_
CLEARANCE_TYPE).
/*CloseFit*/
PRO_HLE_CLOSE_FIT
/*FreeFit*/
PRO_HLE_FREE_FIT
/*MediumFit*/
PRO_HLE_MEDIUM_FIT
PRO_E_HLE_SCREWSIZE IntegerStoresanindextothescrew_size list.Selectinga
threadseries,chooseoneofthe.holfiles.Fromthatfile
screw-size listisextracted.
PRO_E_HLE_DEPTH Itisanoptionfordifferenttypedrilldepth,thatis,of
typeProHleStdDepType.
Note
PRO_HLE_STD_VAR_DEPTH isnotavailablefor
clearancehole(notforPRO_E_HLE_STAN_TYPE
==PRO_HLE_CLEARANCE_TYPE).
PRO_E_STD_HOLE_DEPTH_REF Storesreference, when PRO_E_HLE_DEPTH equals
toPRO_HLE_STD_THRU_UNTIL_DEPTH
orPRO_HLE_STD_TO_SEL_DEPTHxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxclearancehole(notforPRO_E_HLE_STAN_TYPE
==PRO_HLE_CLEARANCE_TYPE).
PRO_E_STD_HOLE_DEPTH_REF Storesreference, when PRO_E_HLE_DEPTH equals
toPRO_HLE_STD_THRU_UNTIL_DEPTH
orPRO_HLE_STD_TO_SEL_DEPTH
PRO_E_HLE_HOLEDIAM StoresDrillDiameterdoublevalue.SeeHoleDiameter.
PRO_E_HLE_DRILLANGLE StoresDrillAngle.Doublevalue.Availablefortapped
holewithvariabledepth(when PRO_E_HLE_STAN_
TYPEequals PRO_HLE_TAPPED_TYPE andPRO_E_
HLE_DEPTH isPRO_HLE_STD_VAR_DEPTH.
PRO_E_HLE_ADD_THREAD Optionforaddingthread.Availablefortappedhole
(when PRO_E_HLE_STAN_TYPEequals PRO_HLE_
TAPPED_TYPE). TypeProHleAddThrdFlag. For
addthreadoptionit'svalueisPRO_HLE_ADD_
THREAD.Fornothreadoption,thevalueisPRO_HLE_
NO_THREAD.
PRO_E_HLE_THRD_DEPTH Optionfordifferenttypeofthreaddepth.Type
932 Creo®Parametric TOOLKIT User’sGuideElementID Comment/Description
ProHleThrdDepType. Availablefortappedholewith
threadoption,when PRO_E_HLE_STAN_TYPE equals
PRO_HLE_TAPPED_TYPE andPRO_E_HLE_ADD_
THREADequals PRO_HLE_ADD_THREAD.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProHleThrdDepType. Availablefortappedholewith
threadoption,when PRO_E_HLE_STAN_TYPE equals
PRO_HLE_TAPPED_TYPE andPRO_E_HLE_ADD_
THREADequals PRO_HLE_ADD_THREAD.
Note
Forpartlevel,variabledrilldepth,andassembly
leveltappedthreadedhole,thePRO_HLE_THRU_
THREADvalueforthiselementisinvalid.
PRO_E_HLE_THRDDEPTH Storesthreaddepth.Doublevalue.Availablefortapped
hole,withvariablethreadoption.Thatis,when PRO_E_
HLE_STAN_TYPE equals PRO_HLE_TAPPED_TYPE,
PRO_E_HLE_ADD_THREAD equals PRO_HLE_ADD_
THREAD,andPRO_E_HLE_THRD_DEPTHequals
PRO_HLE_VARIABLE_THREAD.
PRO_E_HLE_ADD_CBORE OptionforCounterBore.Type
ProHleAddCboreFlag. Forcounterboreit'svalueis
PRO_HLE_ADD_CBORE. Forthenocounterbore option,
settoPRO_HLE_NO_CBORE.
PRO_E_HLE_CBOREDEPTH Storescounterbore depth.Doublevalue.Availablefor
counterbore option,when PRO_E_HLE_ADD_CBORE
equals PRO_HLE_ADD_CBORE.
PRO_E_HLE_CBOREDIAM Storescounterbore diameter.Doublevalue.Availablefor
counterbore option,when PRO_E_HLE_ADD_CBORE is
PRO_HLE_ADD_CBORE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxequals PRO_HLE_ADD_CBORE.
PRO_E_HLE_CBOREDIAM Storescounterbore diameter.Doublevalue.Availablefor
counterbore option,when PRO_E_HLE_ADD_CBORE is
PRO_HLE_ADD_CBORE.
PRO_E_HLE_ADD_CSINK ItisanoptionforCounterSink.Type
ProHleAddCsinkFlag. Forcountersinkit'svalueis
PRO_HLE_ADD_CSINK. Fornocountersink, setto
PRO_HLE_NO_CSINK.
PRO_E_HLE_CSINKANGLE Storescountersinkangle.Doublevalue.Availablefor
countersink option,when PRO_E_HLE_ADD_CSINK
equals PRO_HLE_ADD_CSINK.
PRO_E_HLE_CSINKDIAM Storescountersink diameter.Doublevalue.Availablefor
countersink option,when PRO_E_HLE_ADD_CSINK
PRO_HLE_ADD_CSINK.
PRO_E_HLE_DRILLDEPTH Storesdrilldepthdoublevalue.Availablefortapped
hole,withvariabledepthoption.Thatis,when PRO_E_
HLE_STAN_TYPE equals PRO_HLE_TAPPED_TYPE,
andPRO_E_HLE_DEPTH equals PRO_HLE_STD_
VAR_DEPTH.
PRO_E_HLE_ADD_EXIT_CSINK AnoptionforExitCounterSinkoftype
ProHleAddExitCsinkFlag.
Forexitcountersinkit'svalueisPRO_HLE_ADD_
EXIT_CSINK.
Fornocountersink, valueisPRO_HLE_NO_EXIT_
CSINK.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVAR_DEPTH.
PRO_E_HLE_ADD_EXIT_CSINK AnoptionforExitCounterSinkoftype
ProHleAddExitCsinkFlag.
Forexitcountersinkit'svalueisPRO_HLE_ADD_
EXIT_CSINK.
Fornocountersink, valueisPRO_HLE_NO_EXIT_
CSINK.
Itisnotavailableforassemblymode.
ElementTrees:Hole 933ElementID Comment/Description
Inpartmodewillfailifentryandexitsurfacesofhole
arenon-planar andnon-parallel.
PRO_E_HLE_EXIT_CSINKANGLE Storesexitcountersink angledoublevalue.Availablefor
exitcountersink option,thatis,PRO_E_HLE_ADD_
EXIT_CSINK ==PRO_HLE_ADD_EXIT_CSINK.
PRO_E_HLE_EXIT_CSINKDIAM Storesexitcountersink diameterdoublevalue.Available
forexitcountersink option,thatis,PRO_E_HLE_ADD_
EXIT_CSINK ==PRO_HLE_ADD_EXIT_CSINK.
PRO_E_HLE_ADD_NOTE Itisanoptionforaddnote.Oftype
ProHleAddNoteFlag. Thedefaultvalueisaddnote,
i.e.PRO_HOLE_ADD_NOTE_FLAG Fornonote,the
valueisPRO_HOLE_NO_NOTE_FLAG.
PRO_E_HOLE_NOTE Thiselementisnotaccessible throughCreoParametric
TOOLKIT. Defaultnotewillbecreatedwhen PRO_E_
HLE_ADD_NOTE issettoPRO_HOLE_ADD_NOTE_
FLAG.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueisPRO_HOLE_NO_NOTE_FLAG.
PRO_E_HOLE_NOTE Thiselementisnotaccessible throughCreoParametric
TOOLKIT. Defaultnotewillbecreatedwhen PRO_E_
HLE_ADD_NOTE issettoPRO_HOLE_ADD_NOTE_
FLAG.
CustomHole
PRO_E_HLE_TYPE_NEW PRO_HLE_CUSTOM_TYPE
PRO_E_HLE_ADD_CBORE Thedescription oftheseitemsaresameasdescribedin
StandardHolesection. PRO_E_HLE_ADD_CSINK
PRO_E_HLE_HOLEDIAM
PRO_E_HLE_DRILLANGLE
PRO_E_HLE_CSINKANGLE
PRO_E_HLE_CBOREDEPTH
PRO_E_HLE_CBOREDEPTH
PRO_E_HLE_CSINKDIAM
PRO_E_HLE_DRILLDEPTH
PRO_E_HLE_DEPTH
PRO_E_STD_HOLE_DEPTH_REF
PRO_E_HLE_DEPTH_DIM_TYPE
PRO_E_HLE_CRDIR_FLIP
PRO_E_HLE_ADD_EXIT_CSINK
PRO_E_HLE_EXIT_CSINKANGLE
PRO_E_HLE_EXIT_CSINKDIAM
HolePlacementTypes
CreoParametric TOOLKITsupportsseveralplacement typesforholes.
934 Creo®Parametric TOOLKIT User’sGuideHolePlacement
Theelementsdiscussedinthefollowingsectionsspecifyhowtoplaceaholein
relationtothemodelgeometry.Thereferenceentityelementsarecarriedas
selectionobjects,andtheotherelementscarryingactualvaluesofdistances,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrelationtothemodelgeometry.Thereferenceentityelementsarecarriedas
selectionobjects,andtheotherelementscarryingactualvaluesofdistances,
offsetsorangles.
CreoParametric TOOLKITsupportsthefollowingtypesofholeplacement:
•LinearHoleonaPlaneonpage935
•RadialHoleonPlanewithRadialDimensioning onpage936
•RadialHoleonPlanewithDiameterDimensioning onpage936
•RadialHoleonPlanewithLinearDimensioning onpage937
•RadialHoleonConeorCylinderonpage937
•CoaxialHolewithAxisasPrimaryReference onpage937
•CoaxialHolewithPrimaryReference notAxisonpage938
•OnpointHolewithPrimaryReference asaPointonSurfaceonpage938
•OnpointHolewithPrimaryReference asDatumPointonpage938
•OnpointHolewithPrimaryReference asDatumPointwithOrientation
References onpage939
LinearHoleonaPlane
Linearplacement requiresasreferences either
•Twolinearnon-parallel edgesintheplaneofplacement
or
•Twoplanarnon-parallel surfaces,bothnormaltotheplaneofplacement.
ElementID Comment/DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLinearplacement requiresasreferences either
•Twolinearnon-parallel edgesintheplaneofplacement
or
•Twoplanarnon-parallel surfaces,bothnormaltotheplaneofplacement.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF Primaryselection,thatis,planarsurfaceordatum
plane.
PRO_E_HLE_PL_TYPE SettoPRO_HLE_PL_TYPE_LIN
PRO_E_HLE_DIM_REF1 Firstsecondary selection,thatis,plane,edge,oraxis.
Ifedgeoraxisisnormaltoplacement plane,another
selectionisrequiredfordimensioning thehole.So
thismayrequiretwoselections.
PRO_E_HLE_PLC_ALIGN_OPT1 -SettoPRO_HLE_PLC_ALIGN toaligntheholeto
thereference.
-SettoPRO_HLE_PLC_NOT_ALIGN tousethe
DIST1reference.
PRO_E_HLE_DIM_DIST1 DistancewithregardtoPRO_E_HLE_DIM_REF1.
PRO_E_HLE_DIM_REF2 Secondsecondary selection,thatis,plane,edge,or
ElementTrees:Hole 935ElementID Comment/Description
axis.
-Ifedgeoraxisisnormaltoplacement planeanother
selectionisrequiredfordimensioning thehole.So
thismayrequiretwoselections.
PRO_E_HLE_PLC_ALIGN_OPT2 -SettoPRO_HLE_PLC_ALIGN toaligntheholetoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaxis.
-Ifedgeoraxisisnormaltoplacement planeanother
selectionisrequiredfordimensioning thehole.So
thismayrequiretwoselections.
PRO_E_HLE_PLC_ALIGN_OPT2 -SettoPRO_HLE_PLC_ALIGN toaligntheholeto
thereference.
-SettoPRO_HLE_PLC_NOT_ALIGN tousethe
DIST2reference.
PRO_E_HLE_DIM_DIST2 DistancewithregardtoPRO_E_HLE_DIM_REF2.
PRO_E_LIN_HOLE_DIR_REF Usesthisreferencetodefinethedirectionofthe
placement dimension scheme.Thiselementis
availableifthesecondary element PRO_E_HLE_
DIM_REF1 containsanaxisreferencenormaltothe
currenthole'sprimaryreference.
RadialHoleonPlanewithRadialDimensioning
Locatingradialholesrequiresthefirstreferencetobetheaxisofplacement. This
axisisapolarplacement (r-theta),whereristheradialdistancefromaplane,and
thetaistheanglewithrespecttoaplane.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, planarsurface/datum plane
PRO_E_HLE_PL_TYPE settoPRO_HLE_PL_TYPE_RAD
PRO_E_HLE_AXIS Axisforradialhole
PRO_E_HLE_DIM_RAD RadialdistancewithregardtoPRO_E_HLE_AXISxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_PRIM_REF PrimarySelection, planarsurface/datum plane
PRO_E_HLE_PL_TYPE settoPRO_HLE_PL_TYPE_RAD
PRO_E_HLE_AXIS Axisforradialhole
PRO_E_HLE_DIM_RAD RadialdistancewithregardtoPRO_E_HLE_AXIS
PRO_E_HLE_REF_PLANE_1 Reference planeagainstwhichangulardistancewill
bemeasured
PRO_E_HLE_REF_ANG_1 AngulardistancewithregardtoPRO_E_HLE_REF_
PLANE_1
RadialHoleonPlanewithDiameterDimensioning
Locatingtheseholesissimilartoradialholeswithradialdimensioning. The
differenceisthedistancespecifiedisintheformofdiametrical distance.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, planarsurface/datum plane
PRO_E_HLE_PL_TYPE settoPRO_HLE_PL_TYPE_RAD_DIA_DIM
PRO_E_HLE_AXIS Axisforradialhole
PRO_E_HLE_DIM_DIA DiameterdistancewithregardtoPRO_E_HLE_
AXIS
936 Creo®Parametric TOOLKIT User’sGuideElementID Comment/Description
PRO_E_HLE_REF_PLANE_1 Reference planeagainstwhichangulardistancewill
bemeasured
PRO_E_HLE_REF_ANG_1 AngulardistancewithregardtoPRO_E_HLE_REF_
PLANE_1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HLE_REF_PLANE_1 Reference planeagainstwhichangulardistancewill
bemeasured
PRO_E_HLE_REF_ANG_1 AngulardistancewithregardtoPRO_E_HLE_REF_
PLANE_1
RadialHoleonPlanewithLinearDimensioning
Thistypeofholeplacement usesananglewithrespecttoaplaneandalinear
distancefromtheaxisofplacement.
Thisplacement typeisavailablewhenyousettheconfiguration optionradial_
hole_linear_dim to“YES”.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, planarsurface/datum plane
PRO_E_HLE_PL_TYPE issettoPRO_HLE_PL_TYPE_RAD_LIN_DIM
PRO_E_HLE_AXIS Axisforradialhole
PRO_E_HLE_DIM_LIN LineardistancewithregardtoPRO_E_HLE_AXIS
PRO_E_HLE_REF_PLANE_1 Reference planeagainstwhichangulardistancewill
bemeasured
PRO_E_HLE_REF_ANG_1 AngulardistancewithregardtoPRO_E_HLE_REF_
PLANE_1
RadialHoleonConeorCylinder
Thisholeplacement typerequirestheselectionofaconeorcylinderforprimary
placement.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, ConeorCylinderxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPLANE_1
RadialHoleonConeorCylinder
Thisholeplacement typerequirestheselectionofaconeorcylinderforprimary
placement.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, ConeorCylinder
PRO_E_HLE_PL_TYPE issettoPRO_HLE_PL_TYPE_RAD
PRO_E_HLE_REF_PLANE Reference planeagainstwhichangulardistancewill
bemeasured
PRO_E_HLE_REF_ANG AngulardistancewithregardtoPRO_E_HLE_REF_
PLANE
PRO_E_HLE_NORM_PLA Reference planeforlinearmeasurement
PRO_E_HLE_NORM_OFFST DistancewithregardtoPRO_E_HLE_NORM_PLA
CoaxialHolewithAxisasPrimaryReference
Coaxialholeplacement requiresanaxisandaplacement planetocompletethe
placement.
ElementTrees:Hole 937ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, Axis
PRO_E_HLE_PL_TYPE issettoPRO_HLE_PL_
TYPE_COAX
PRO_E_HLE_PLCMNT_PLANE Placement surface
CoaxialHolewithPrimaryReferencenotAxis
Thisisaspecialcaseofcoaxialholeinwhichtheprimaryselectionisasurface.
Theaxismustbenormaltotheselectedsurface:
ElementID Comment/DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCoaxialHolewithPrimaryReferencenotAxis
Thisisaspecialcaseofcoaxialholeinwhichtheprimaryselectionisasurface.
Theaxismustbenormaltotheselectedsurface:
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, Surface
PRO_E_HLE_PL_TYPE issettoPRO_HLE_PL_TYPE_COAX
PRO_E_HLE_AXIS Axis
OnpointHolewithPrimaryReferenceasaPointon
Surface
Thisplacement typerequiresapointoftype‘OnSurfacePoint’.Theholeis
placednormaltothesurfaceonwhichthepointwascreated.Theholepasses
throughtheselectedpoint.Thedepthofholeismeasuredfromthedatumpoint.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, onSurfaceCreatedDatumPoint
PRO_E_HLE_PL_TYPE issettoPRO_HLE_PL_TYPE_ON_PNT
OnpointHolewithPrimaryReferenceasDatum
Point
Thisplacement typerequiresapointoftype‘DatumPoint’.Italsorequiresa
surfacereference. Thedatumpointisprojectedonthesurface.Thedepthofthe
holeismeasuredfromtheprojectedpoint.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, DatumPointxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacereference. Thedatumpointisprojectedonthesurface.Thedepthofthe
holeismeasuredfromtheprojectedpoint.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, DatumPoint
PRO_E_HLE_PL_TYPE issettoPRO_HLE_PL_TYPE_ON_PNT
PRO_E_HLE_PLCMNT_PLANE Placement surface
938 Creo®Parametric TOOLKIT User’sGuideOnpointHolewithPrimaryReferenceasDatum
PointwithOrientation References
Thisplacement typerequiresapointoftype‘DatumPoint’.Thedirectionofhole
isdefinedusingtheorientation references. Theholepassesthroughtheselected
point.Thedepthofholeismeasuredfromthedatumpoint.
ElementID Comment/Description
PRO_E_HLE_PRIM_REF PrimarySelection, DatumPoint
PRO_E_HLE_PL_TYPE issettoPRO_HLE_PL_TYPE_ON_PNT
PRO_E_HLE_FT_DIR_REF References todefinetheorientation ofthehole.
PRO_E_HLE_FT_DIR_OPT Optiontodefinethedirectioninwhichtheholeis
oriented,perpendicular orparallel,totheorientation
references.
Miscellaneous Information
Thefollowingsectionsdiscussimportantissuesrelatingtoholefeaturecreation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoriented,perpendicular orparallel,totheorientation
references.
Miscellaneous Information
Thefollowingsectionsdiscussimportantissuesrelatingtoholefeaturecreation.
HoleParameterFiles
Holeparameter filesaresetupfilesusedtobuildtheuserinterfaceforthehole.
Programmatic holecreationusesthesamefiles.Newsetsofcustomized filescan
beaddedasrequired.Thevaluesassignedtotheelements PRO_E_HLE_
THRDSERIS, PRO_E_HLE_SCREWSIZE, andtherefore PRO_E_HLE_
HOLEDIAM dependonthesefiles.
CreoParametric andCreoParametric TOOLKITloadtheholeparameter file
(*.hol)infollowingorder:
1.Directoryspecifiedinconfiguration option hole_parameter_file_
path
2.CurrentDirectory
3.Systemholeparameter directory,thatis,
4.[PROE DIR]/text/hole
FindtheholediameterfromthevaluesofPRO_E_HLE_THRDSERIS andPRO_
E_HLE_SCREWSIZE specifiedinthe*holfiles.IntheCreoParametric User
Interface,element PRO_E_HLE_THRDSERIS isrepresented astheselection
betweenUNC,UNForISO.
HoleDiameterxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxE_HLE_SCREWSIZE specifiedinthe*holfiles.IntheCreoParametric User
Interface,element PRO_E_HLE_THRDSERIS isrepresented astheselection
betweenUNC,UNForISO.
HoleDiameter
Thedrilldiameter PRO_E_HLE_HOLEDIAM, asrequiredfortheStandardType
ofholes,mustbesmallerthanthethreaddiametercalculated fromthe.holfile
forthethreadedhole.Asspecifiedinthe*.holfiles,thethreaddiameteristhe
ElementTrees:Hole 939elementcorresponding toBASIC_DIAM columnandtheselectedscrewsizerow
inthetable,asspecifiedintheselected .holfile.IfthePRO_E_HLE_
HOLEDIAM isnotsmallerthanthethreaddiameter,theProFeatureCreate()
functionfailsandreturnsaPRO_TK_GENERAL_ERROR.
FollowthesestepstoenterthepropervalueforPRO_E_HLE_HOLEDIAM:
1.Determine thevaluestopassfromtheCreoParametric userinterfacetothe
followingelements:
•PRO_E_HLE_THRDSERIS. NotethatUNCcorresponds to0,UNFto1,
andISOto2.Thesevalueschangeifyoucreatealocal.holfile.
•PRO_E_HLE_SCREWSIZE (thevaluesstartwithzero).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingelements:
•PRO_E_HLE_THRDSERIS. NotethatUNCcorresponds to0,UNFto1,
andISOto2.Thesevalueschangeifyoucreatealocal.holfile.
•PRO_E_HLE_SCREWSIZE (thevaluesstartwithzero).
2.FromtheCreoParametric UserInterface,settheoptionstobepassedtothe
elements PRO_E_HLE_THRDSERIS andPRO_E_HLE_SCREWSIZE. For
example,ISOwithM1X25orUNCwith1-64.
3.Observethevalueholediameterinthedialogbox.Thedialogboxappears
grayedoutunlessyousettheconfiguration option hole_diameter_
override toyes.
4.Thevaluethusobtainedfortheholediametershouldbegreaterthanthevalue
definedforelement PRO_E_HLE_HOLEDIAM.
OrderofElementSpecification
Besuretoentertheelementsintotheelementtreeintheorderspecifiedbythe
tablesinPRO_E_HLE_COM Valuesonpage925.Failuretofollowthese
sequences mayresultineither ProFeatureCreate() failingwithaPRO_
TK_GENERAL_ERROR errorreturn,orincreationofafeaturewhichfailstoget
redefined.
Hole-specific Functions
Functions Introduced:
•ProHolePr opertyGet()
•ProElementHoleThr eadSeriesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTK_GENERAL_ERROR errorreturn,orincreationofafeaturewhichfailstoget
redefined.
Hole-specific Functions
Functions Introduced:
•ProHolePr opertyGet()
•ProElementHoleThr eadSeriesGet()
•ProElementHoleThr eadSeriesSet()
•ProElementHoleScr ewSizeGet()
•ProElementHoleScr ewSizeSet()
Youcanusethefunction ProHolePropertyGet() toretrievethevalueofthe
indicatedholevalueproperty.Onlyproperties listedintheenum
ProHoleProperty aresupported.
940 Creo®Parametric TOOLKIT User’sGuideThefunction ProElementHoleThreadSeriesGet() returnsthetypeof
threadfromtheholefeatureelementtreeasawidestring.
Usethefunction ProElementHoleThreadSeriesSet() tosetthetypeof
threadintheholefeatureelementtree.Thethreadtypeisupdatedintheelement
PRO_E_HLE_THRDSERIS.
Thefunction ProElementHoleScrewSizeGet() getsthesizeofscrew
fromtheholefeaturetreeelements PRO_E_HLE_THRDSERIS andPRO_E_
HLE_SCREWSIZE asawidestring.
Usethefunction ProElementHoleScrewSizeSet() tosetthesizeofscrewxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfromtheholefeaturetreeelements PRO_E_HLE_THRDSERIS andPRO_E_
HLE_SCREWSIZE asawidestring.
Usethefunction ProElementHoleScrewSizeSet() tosetthesizeofscrew
intheholefeatureelementtree.Thescrewsizeisupdatedintheelement PRO_E_
HLE_SCREWSIZE.
Note
Thescrewsizedependsonthetypeofthread.Therefore, beforeyoucallthe
function ProElementHoleScrewSizeSet() youmustensurethatthe
threadtypeissetintheelement PRO_E_HLE_THRDSERIS.
ElementTrees:Hole 94141
ElementTrees:Shell
Introduction toShellFeature....................................................................................943
FeatureElementTreefortheShellFeature...............................................................944
CreatingaShellFeature..........................................................................................945
RedefiningaShellFeature.......................................................................................946xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRedefiningaShellFeature.......................................................................................946
AccessingaShellFeature........................................................................................946
Thischapter introduces andshowshowtocreate,redefineandaccessShell
featuresinCreoParametric TOOLKIT.
942 Creo®Parametric TOOLKIT User’sGuideIntroduction toShellFeature
WhenCreoParametric makesashell,allfeaturesthatwereaddedtothesolid
beforecreatingtheShellfeaturearehollowed. Therefore, theorderoffeature
creationisveryimportantwhenyouusetheShellfeature.
TheShellfeaturehollowstheinsideofthesolid,leavingashellofaspecifiedwall
thickness. Itallowsyoutoremoveasurfaceorsurfacesfromtheshell.Ifyoudo
notselectasurfacetoremove,a“closedshell”iscreated,withtheinsideofthe
partcompletely hallowedoutandnoaccesstothehollow.Whendefiningashell,
youcanalsoselectsurfaceswithdifferentthicknessvalues.Onflippingthe
thicknessside,theshellthicknessisaddedtotheoutsideofthepart.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpartcompletely hallowedoutandnoaccesstothehollow.Whendefiningashell,
youcanalsoselectsurfaceswithdifferentthicknessvalues.Onflippingthe
thicknessside,theshellthicknessisaddedtotheoutsideofthepart.
Youcanalsoshellsurfacesthataretangenttotheirneighbors atoneormore
boundaries. Atthetangentedgewheretheseparation oftheshelloffsetoccurs,a
normalcappingsurfaceisconstructed toclosethegap.
Youcanalsoexcludeoneormoresurfacesfrombeingshelled.Thisprocessis
calledpartialshelling.Therearetwodifferentalgorithms forpartialshelling–one
forconcavecornersurfacesandtheotherforconvexcornersurfaces.These
algorithms preventtheshellsubtraction volumefrompenetrating throughthe
solid.Incaseofapartwherebothconcaveandconvexcornersurfacesaretobe
excluded,theexclusioncanbeachievedinmultiplepartialshells,eachusing
differentalgorithms.
Thefollowingaretherestrictions onShellfeaturecreation:
•Youcannotaddshellstoanypartthathasasurfacethatmovesfromtangency
toapoint.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdifferentalgorithms.
Thefollowingaretherestrictions onShellfeaturecreation:
•Youcannotaddshellstoanypartthathasasurfacethatmovesfromtangency
toapoint.
•Youcannotselectasurfacetoberemovedthathasavertexcreatedbythe
intersection ofthreecurvedsurfaces.
•Thesurfacetoberemovedmustbesurrounded byedges(afullyrevolved
surfaceofrevolution isnotvalid)andthesurfacesthatintersecttheedgemust
formanangleoflessthan180degreesthroughthesolidgeometry.Aslongas
thisconditionismet,youcanselectanysculptedsurfaceasthesurfacetobe
removed.
•Whenyouselectsurfacesthathaveothersurfacestangenttothemfor
independent thickness, allsurfacesthataretangentmusthavethesame
thickness. Otherwise, theShellfeaturefails.
Forexample,ifyoushellapartthatcontainsaholeandyouwantthethickness
oftheholewalltobedifferentfromtheoverallthickness, youmustselectboth
surfaces(cylinders) thatmakeuptheholeandoffsetthematthesame
distance.
•Bydefault,ashellcreatesgeometrywithaconstantwallthickness. Ifthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfaces(cylinders) thatmakeuptheholeandoffsetthematthesame
distance.
•Bydefault,ashellcreatesgeometrywithaconstantwallthickness. Ifthe
systemcannotcreateaconstantthickness, theShellfeaturefails.
ElementTrees:Shell 943FeatureElementTreefortheShell
Feature
TheelementtreefortheShellfeatureisdocumented intheheaderfile
ProShell.h, andhasasimplestructure.Thefollowingfiguredemonstrates the
elementtreestructure:
FeatureElementTreeforShellFeature
Theshellelementtreecontainsstandardelementtypes.Thefollowinglistdetails
specialinformation abouttheelementsinthistree:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldhavethe
value PRO_FEAT_SHELL.
•PRO_E_STD_FEATURE_NAME—Specifies thenameoftheShellfeature.
•PRO_E_BODY—Specifies thebodyoptionsandisabranchofthegeneral
bodyoptionselementsdefinedintheProBodyOpts.h asfollows:
○PRO_E_BODY_USE—The validvalueisPRO_BODY_USE_SELECTED
944 Creo®Parametric TOOLKIT User’sGuide○PRO_E_BODY_SELECTED—Must containasingleselectedbodytoshell.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_E_BODY_USE—The validvalueisPRO_BODY_USE_SELECTED
944 Creo®Parametric TOOLKIT User’sGuide○PRO_E_BODY_SELECTED—Must containasingleselectedbodytoshell.
•PRO_E_SHELL_SRF— Specifiestheselectedsurfacestoberemovedfrom
theparttocreatetheShellfeature.Thiselementisoptional.
•PRO_E_SHELL_THICK—Specifies thedefaultthicknessfortheshell.It
mustbepositiveandgreaterthanzero.
•PRO_E_SHELL_FLIP—Specifies thesideoftheshelltobeflippedandhas
thefollowingvalues:
○PRO_SHELL_OUTSIDE
○PRO_SHELL_INSIDE
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies thesurfacestobe
excludedduringtheShellfeaturecreation.
•PRO_E_SHELL_LACE_BNDRY—Specifies thelaceboundarythatformsthe
closureofexcludedsurfacesorinnersurfaces.Ithasthefollowingvalues:
○PRO_SHELL_LACE
○PRO_SHELL_DONT_LACE
•PRO_E_SHELL_ALT_CUT_METHOD—Specifies thealternatecutmethod
usedforpartialshellvolumesubtraction. Ithasthefollowingvalues:
○PRO_SHELL_ALT_CUT_METHOD_NO—Specifies thealgorithmfor
concavecornersurfaces.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_SHELL_ALT_CUT_METHOD—Specifies thealternatecutmethod
usedforpartialshellvolumesubtraction. Ithasthefollowingvalues:
○PRO_SHELL_ALT_CUT_METHOD_NO—Specifies thealgorithmfor
concavecornersurfaces.
○PRO_SHELL_ALT_CUT_METHOD_YES—Specifies thealgorithmfor
convexcornersurfaces.
•PRO_E_ST_SHELL_LOCL_LIST—Specifies anarrayoflocalthicknessof
thetypePRO_E_ST_SHELL_LOCL_CMPD whichconsistsofthefollowing
elements:
○PRO_E_ST_SHELL_SPEC_SRF—Specifies thesurfaceselectedfor
specifying thelocalthicknessvalue.Thissurfacecannotbeoneofthe
surfacesselectedtoberemoved.
○PRO_E_ST_SHELL_SPEC_THCK—Specifies thelocalthicknessvalue
oftheselectedsurface(initiallyequaltodefaultshellthickness). Itmustbe
positiveandgreaterthanzero.
CreatingaShellFeature
FunctionIntroduced
•ProFeatur eCreate()
ElementTrees:Shell 945Usethefunction ProFeatureCreate() tocreateaShellfeaturebasedonthe
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750ofchapterElement
Trees:Principles ofFeatureCreationonpage749.
RedefiningaShellFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaShellfeaturebased
onthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
ofchapterElementTrees:Principles ofFeatureCreationonpage749.
AccessingaShellFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaShellfeatureandtoretrievethe
elementtreedescription ofaShellfeature.Formoreinformation about
ProFeatureElemtreeExtract() refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
946 Creo®Parametric TOOLKIT User’sGuide42
ElementTrees:PatternsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureElemtreeExtract() refertothesectionFeatureInquiryon
page771ofchapterElementTrees:Principles ofFeatureCreationonpage749.
946 Creo®Parametric TOOLKIT User’sGuide42
ElementTrees:Patterns
Introduction.............................................................................................................948
TheElementTreeforPatternCreation......................................................................948
ObtainingtheElementTreeforaPattern...................................................................969
VisitingandCreatingaPattern.................................................................................969
Thischapterdescribestheelementtreestructurerequiredtocreatepatternsof
features.ThechapteronElementTrees:Principles ofFeatureCreationonpage
749isanecessarybackground forthistopic.Readthatchapterbeforethisone.
947Introduction
UsingCreoParametric TOOLKIT, youcancreatepatternsoffeatures,includingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx749isanecessarybackground forthistopic.Readthatchapterbeforethisone.
947Introduction
UsingCreoParametric TOOLKIT, youcancreatepatternsoffeatures,including
thosenotsupported byCreoParametric TOOLKITfeaturecreation.Consequently ,
youcanprogrammatically createpatternsofanyfeaturethatcanbepatternedin
CreoParametric.
Thecreationandmanipulation ofpatternsusethefollowingCreoParametric
TOOLKITobjects:
•ProPattern—A structurethatcontainsthetypeandownerofthepattern,
andanopaquepatternhandle
•ProPatternClass—An enumerated typethatcontainsthepatternclass,
whichspecifieseitherafeaturepattern(PRO_FEAT_PATTERN) oragroup
pattern(PRO_GROUP_PATTERN)
Theprocedure forcreatingapatternissimilartocreatingfeatures,inthatyou
constructanelementtreeandpassthiselementtreetoCreoParametric. Whenyou
passthetreetoCreoParametric, youalsospecifythefeaturetobepatterned.
TheElementTreeforPatternCreation
Unliketheelementtreeforfeatures,theelementtreeforapatterndoesnotcontainxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpassthetreetoCreoParametric, youalsospecifythefeaturetobepatterned.
TheElementTreeforPatternCreation
Unliketheelementtreeforfeatures,theelementtreeforapatterndoesnotcontain
information abouttheconstruction ofnewfeatures.Rather,theelementtree
containsinformation neededtomakecopiesofexistingfeaturesatspecified
locationsonthemodel.Forexample,theelementtreeforapatternofholesdoes
notcontainthegeometry(suchasedges)usedtoplacetheholes,butcontainsthe
dimensions anddimension variations usedtopatternthespecifiedhole.
Youconstructtheelementtreeforapatternbyfollowingtheprocedure described
inchapterElementTrees:Principles ofFeatureCreationonpage749:
1.Allocatetreeelementsusingthefunction ProElementAlloc().
2.Setvaluesoftheelementsusingthefunction ProElementValueSet().
3.Addelementstothetreeusing ProElemtreeElementAdd().
Aswithfeaturecreation,thesystemcannotcreateyourpatternunlesstheelement
treeiscorrect.
Theelementtreeforapatternisdocumented intheheaderfileProPattern.h.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAswithfeaturecreation,thesystemcannotcreateyourpatternunlesstheelement
treeiscorrect.
Theelementtreeforapatternisdocumented intheheaderfileProPattern.h.
Thistreecontainsthesameinformation requiredwhenyoucreateapatterninan
interactive sessionofCreoParametric. Therefore, youshouldbefamiliarwith
howtocreateapatterninteractively beforeyoutrytounderstand theelementtree.
948 Creo®Parametric TOOLKIT User’sGuideNote
Itishighlyrecommended thatyouusethenewelementtreefrom
ProPattern.h. Theoldelementtreeisonlyforyourreference.
Thefollowingfigureshowsapartoftheelementtreeforpatterns.Allelements
aredescribedindetailinthefollowingsections.
ElementTrees:Patterns 949APartoftheElementTreeforPatterns
950 Creo®Parametric TOOLKIT User’sGuideTheelementwiththeidentifier PRO_E_GENPAT_TYPE setsthetypeofthe
patterntobecreated.Thestructureoftherestoftheelementtreedependsstrongly
onthevalueofthiselement.ValidvaluesforthePRO_E_GENPAT_TYPE
elementareasfollows:
•PRO_GENPAT_REF_DRIVEN—Reference patternxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpatterntobecreated.Thestructureoftherestoftheelementtreedependsstrongly
onthevalueofthiselement.ValidvaluesforthePRO_E_GENPAT_TYPE
elementareasfollows:
•PRO_GENPAT_REF_DRIVEN—Reference pattern
•PRO_GENPAT_DIM_DRIVEN—Dimension pattern
•PRO_GENPAT_TABLE_DRIVEN—T ablepattern
•PRO_GENPAT_FILL_DRIVEN—Fill pattern
•PRO_GENPAT_DIR_DRIVEN—Direction pattern
•PRO_GENPAT_AXIS_DRIVEN—Axis pattern
•PRO_GENPAT_POINT_DRIVEN—Point pattern
•PRO_GENPAT_CRV_DRIVEN—Curve pattern
Theelementwiththeidentifier PRO_E_GENPAT_REGEN_METHOD setsthe
regeneration methodforthepattern.Theregeneration methodvarieswiththe
complexity ofthepattern.ValidvaluesforthePRO_E_GENPAT_REGEN_
METHODelementareasfollows:
•PRO_PAT_GENERAL—General pattern.Thisisthemostcomplextypeof
pattern.
•PRO_PAT_VARYING—V aryingpattern.
•PRO_PAT_IDENTICAL—Identical pattern.Thisistheleastcomplextypeof
pattern.
Formoreinformation onregeneration methods,seethePartModeling User’s
Guide.
Youmustpopulatetheelement PRO_E_STD_SECTION withavalidreferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpattern.
Formoreinformation onregeneration methods,seethePartModeling User’s
Guide.
Youmustpopulatetheelement PRO_E_STD_SECTION withavalidreference
sketchandotherrelatedelementsforthefollowingpatterntypes:
•apointpatternthatusesanelementoftypePRO_GENPAT_REF_SKETCH
•afillpattern
•acurvepattern
Formoreinformation onhowtopopulatethesectionelementswiththevalid
sketchedreference, refertotheElementTrees:SketchedFeaturesonpage987
chapter.
Thefollowingsectionsdescribethetypesofpatterninmoredetail.
ElementTrees:Patterns 951ReferencePatterns
Areferencepatternusesanexistingpatternasaguidefortheplacement ofthe
newpatternmembers.Consequently ,ifthepatterntypeisPRO_GENPAT_REF_
DRIVEN,theelementtreerequiresonlythatyouspecifythetypeofthereference
pattern.
ElementTreeforaReferencePattern
Theelementwithidentifier PRO_E_GENPAT_REF specifiesthetypeofpatternto
becreated.Thevalidvaluesareasfollows:
•PRO_PAT_FEATURE—Use featurepatternreferences.
•PRO_PAT_GROUP—Use grouppatternreferences.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementwithidentifier PRO_E_GENPAT_REF specifiesthetypeofpatternto
becreated.Thevalidvaluesareasfollows:
•PRO_PAT_FEATURE—Use featurepatternreferences.
•PRO_PAT_GROUP—Use grouppatternreferences.
•PRO_PAT_BOTH—Use featureandgrouppatternreferences.
DimensionPatterns
IfthepatterntypeisPRO_GENPAT_DIM_DRIVEN, theelementtreemust
includeinformation aboutthedimensions usedtodrivethepattern.Youmust
specifythisinformation foreachdirectioninwhichthefeatureistobepatterned.
952 Creo®Parametric TOOLKIT User’sGuideElementTreeforaDimensionPattern
Theelementswithidentifiers PRO_E_GENPAT_DIM_FIRST_DIR andPRO_E_
GENPAT_DIM_SECOND_DIR containinformation aboutthepatterndimensions.
Theseelementsarearrayelementsthatcontainasmany PRO_E_GENPAT_DIM_
DIR_COMPOUND elementsasarerequiredtocompletethepattern.Thefollowing
tabledescribesthecontentsofthePRO_E_GENPAT_DIM_DIR_COMPOUND
element.
Element IDValuesElementName DataType ValidValues
PRO_E_GENPAT_DIR_
DIMENSIONDimension PRO_VALUE_TYPE_
SELECTIONxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtabledescribesthecontentsofthePRO_E_GENPAT_DIM_DIR_COMPOUND
element.
Element IDValuesElementName DataType ValidValues
PRO_E_GENPAT_DIR_
DIMENSIONDimension PRO_VALUE_TYPE_
SELECTION
PRO_E_GENPAT_DIR_
VAR_TYPEVariationtype PRO_VALUE_TYPE_
INTPRO_PAT_RELATION_
DRIVEN,
PRO_PAT_VALUE
_DRIVEN
PRO_E_GENPAT_DIR_
VAR_VALUEVariationvalue
(increment)PRO_VALUE_TYPE_
DOUBLE
PRO_E_GENPAT_
RELATION_EDITRelation Application (PRO_
VALUE_TYPE
_POINTER)
Theelement PRO_E_GENPAT_DIR_VAR_TYPE specifieswhetherthepattern
increment isrelation-driven orvalue-driven. Iftheincrement isrelation-driven,
theelement PRO_E_GENPAT_RELATION_EDIT containsanarrayofwide
stringswhosemembersareindividual relations.
ElementTrees:Patterns 953Theelements PRO_E_GENPAT_DIM_FIRST_DIR_NUM_INST andPRO_E_
PAT_SECOND_DIR_NUM_INST specifythenumberofinstancesineachofthe
patterndimensions.
Evenifthepatternextendsinonlyonedirection,youmustspecifyelementsfor
theseconddirection.Inthiscase,addanempty PRO_E_PAT_SECOND_DIRxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpatterndimensions.
Evenifthepatternextendsinonlyonedirection,youmustspecifyelementsfor
theseconddirection.Inthiscase,addanempty PRO_E_PAT_SECOND_DIR
elementandsetthevalueofthePRO_E_PAT_SECOND_DIR_NUM_INST
elementto1(not0).
TablePatterns
IfthepatterntypeisPRO_GENPAT_TABLE_DRIVEN, yourelementtreemust
containthetable-driven dimensions andtableinformation (variationin
dimensions foreachinstance).Thefollowingfigureshowstheelementsofthe
Tablepattern:
ElementTreeforaTablePattern
ThePRO_E_GENPAT_TABLE_DIMS elementisanarraythatcontainsonetable
dimension (PRO_E_GENPAT_TABLE_DIM) elementforeachdimension tobe
variedinthetables.ThevalueofeachPRO_E_GENPAT_TABLE_DIM elementis
aProSelection objectforthecorresponding dimension.
ThePRO_E_GENPAT_TABLE_LIST elementisanarrayelementthatcontains
allthetablesthatcontrolthepattern.ThiselementshouldcontainonePRO_E_
GENPAT_TABLE_ENTRY elementforeachtable.
EachPRO_E_GENPAT_TABLE_ENTRY elementcontainsthenameofthetablexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallthetablesthatcontrolthepattern.ThiselementshouldcontainonePRO_E_
GENPAT_TABLE_ENTRY elementforeachtable.
EachPRO_E_GENPAT_TABLE_ENTRY elementcontainsthenameofthetable
(PRO_E_GENPAT_TABLE_NAME) andtableinstances(PRO_E_GENPAT_
TABLE_INSTANCES).
954 Creo®Parametric TOOLKIT User’sGuideEachPRO_E_GENPAT_TABLE_INSTANCE elementcontainsanindexnumber
(PRO_E_GENPAT_TABLE_INSTANCE_INDEX) elementandadimensions
(PRO_E_GENPAT_TABLE_INSTANCE_DIMS) element.ThePRO_E_
GENPAT_TABLE_INSTANCE_DIMS elementisanarrayelementthatmust
containonedimension value(PRO_E_GENPAT_TABLE_INSTANCE_DIM_
VALUE)elementforeachoftheselecteddimensions inthePRO_E_PAT_MULT_
TABLE_DIMS element.Notethatthedimension valuespecifiesthevalueofthe
selecteddimension, notthedimension increment.
ThefollowingtableliststhecontentsofeachPRO_E_GENPAT_TABLE_ENTRY
element.
ElementIDValues ElementName DataType
PRO_E_GENPAT_TABLE_NAME Tablename PRO_VALUE_TYPE_WSTRING
PRO_E_GENPAT_TABLE_
INSTANCESTableinstances Array
PRO_E_GENPAT_TABLE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelement.
ElementIDValues ElementName DataType
PRO_E_GENPAT_TABLE_NAME Tablename PRO_VALUE_TYPE_WSTRING
PRO_E_GENPAT_TABLE_
INSTANCESTableinstances Array
PRO_E_GENPAT_TABLE_
INSTANCETableinstance Compound
PRO_E_GENPAT_TABLE_
INSTANCE_INDEXInstanceindex PRO_VALUE_TYPE_INT
PRO_E_GENPAT_TABLE_
INSTANCE_DIMSDimension variations Compound
PRO_E_GENPAT_TABLE_
INSTANCE_DIM_VALUEDimension value PRO_VALUE_TYPE_DOUBLE
Theelement PRO_E_GENPAT_TABLE_SET_ACTIVE setstheactivetablefor
thepattern.Validvaluesare0(forthefirsttable)through(num_tables –1),
where num_tables isthenumberoftablesintheelementtree.
FillPatterns
Afillpatterncontrolsthepatternbyfillinganareawithpatternmembers.Youcan
selectagridtodefinethisarea.
IfthepatterntypeinyourelementtreeisPRO_GENPAT_FILL_DRIVEN, the
elementtreemustcontaininformation aboutthegridandpatternmembers.The
followingfigureshowstheelementsoftheFillpattern:
ElementTreeforaFillPatternxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementtreemustcontaininformation aboutthegridandpatternmembers.The
followingfigureshowstheelementsoftheFillpattern:
ElementTreeforaFillPattern
ElementTrees:Patterns 955Theelement PRO_E_GENPAT_FILL_TEMPLATE_TYPE specifiesthetypeof
gridtemplatethatyouwanttousetocreateafillpattern.
Theelement PRO_E_GENPAT_FILL_SPACING specifiesthespacingbetween
thepatternmembers.
Theelement PRO_E_GENPAT_FILL_BORDERING specifiestheminimum
distancebetweenthecentersofthepatternmembersandtheareaboundary.
Theelement PRO_E_GENPAT_FILL_ROT_ANG specifiestherotationangleof
thegridabouttheCsysorigin.
Theelement PRO_E_GENPAT_FILL_RADIUS_INC specifiestheradialspacing
forcircularandspiralgrids.
ThefollowingtableliststhecontentsofeachPRO_E_GENPAT_FILL element.
ElementIDValuesElementName DataType ValidValues
PRO_E_GENPAT_
FILL_TEMPLATE_
TYPEFilltemplate PRO_VALUE_TYPE_
INTPRO_GENPAT_
SQUARE_FILL, PRO_
GENPAT_DIAMOND_
FILL, PRO_GENPAT_
TRIANGLE_FILL,
PRO_GENPAT_
CIRCLE_FILL, PRO_
GENPAT_CURVE_
FILL, PRO_GENPAT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFILL_TEMPLATE_
TYPEFilltemplate PRO_VALUE_TYPE_
INTPRO_GENPAT_
SQUARE_FILL, PRO_
GENPAT_DIAMOND_
FILL, PRO_GENPAT_
TRIANGLE_FILL,
PRO_GENPAT_
CIRCLE_FILL, PRO_
GENPAT_CURVE_
FILL, PRO_GENPAT_
SPIRAL_FILL
PRO_E_GENPAT_
FILL_SPACINGFillspacing PRO_VALUE_TYPE
_DOUBLE
PRO_E_GENPAT_
FILL_BORDERINGFillbordering PRO_VALUE_TYPE
_DOUBLE
PRO_E_GENPAT_
FILL_ROT_ANGFillangle PRO_VALUE_TYPE
_DOUBLE
PRO_E_GENPAT_
FILL_RADIUS_INCFillradiusincrement PRO_VALUE_TYPE
_DOUBLE
DirectionPatterns
Adirectionpatternaddspatternmembersinoneortwoselecteddirections.
IfthepatterntypeintheelementtreeisPRO_GENPAT_DIR_DRIVEN, the
elementtreemustcontaintheinformation aboutthetwodirections andthepattern
members.
Thefollowingfigureshowstheelementsofadirectionpattern:
956 Creo®Parametric TOOLKIT User’sGuideElementTreeforaDirectionPattern
Foradirectionpatter,usetheelements PRO_E_DIR_PAT_DIR1_OPT and
PRO_E_DIR_PAT_DIR2_OPT tospecifythepatternorientation inthefirstandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx956 Creo®Parametric TOOLKIT User’sGuideElementTreeforaDirectionPattern
Foradirectionpatter,usetheelements PRO_E_DIR_PAT_DIR1_OPT and
PRO_E_DIR_PAT_DIR2_OPT tospecifythepatternorientation inthefirstand
seconddirection,respectively .Theorientation optionsaretranslation, rotation,
andcoordinate system.
Depending ontheselectedorientation, choosereferences forthetwodirections
usingtheelement PRO_E_DIRECTION_REFERENCE. Tofliptheselected
directions, usetheelements PRO_E_DIR_PAT_DIR1_FLIP andPRO_E_DIR_
ElementTrees:Patterns 957PAT_DIR2_FLIP. Thevaluesofthereferences andthechoicetoflipthe
directionarestoredintheelements PRO_E_GENPAT_DIR1 andPRO_E_
GENPAT_DIR2.
Theelements PRO_E_GENPAT_DIR1_INC andPRO_E_GENPAT_DIR2_INC
specifythespacingbetweenthepatternmembersinthefirstandsecond
directions, respectively .
Theelementswithidentifiers PRO_E_GENPAT_DIM_FIRST_DIR andPRO_E_
GENPAT_DIM_SECOND_DIR containdimension information forthepatternxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdirections, respectively .
Theelementswithidentifiers PRO_E_GENPAT_DIM_FIRST_DIR andPRO_E_
GENPAT_DIM_SECOND_DIR containdimension information forthepattern
membersinthefirstandseconddirection,respectively .Theseelementsarearray
elementsthatcontainasmany PRO_E_GENPAT_DIM_DIR_COMPOUND
elementsasrequiredtocompletethepattern.Formoreinformation onthe
elements PRO_E_GENPAT_DIR_DIM_COMPOUND, PRO_E_GENPAT_FIRST_
DIR_NUM_INST, andPRO_E_GENPAT_SECOND_DIR_NUM_INST, referto
thesectiononDimension Patternsonpage952.
ThefollowingtableliststhecontentsofeachPRO_E_GENPAT_DIR element.
ElementIDValuesElementName DataType ValidValues
PRO_E_DIR_PAT
_DIR1_OPTDirection1stoption PRO_VALUE_TYPE_
INTPRO_GENPAT_
TRANSLATIONAL,
PRO_GENPAT_DIR1_
ROTATIONAL
PRO_E_DIR_PAT
_DIR2_OPTDirection2ndoption PRO_VALUE_TYPE_
INTPRO_GENPAT_
TRANSLATIONAL,
PRO_GENPAT_DIR2_
ROTATIONAL
PRO_E_GENPAT_DIR1
andPRO_E_GENPAT_
DIR21stdirectionand2nd
directionCompound
PRO_E_DIRECTION_
COMPOUNDPRO_E_DIRECTION_
COMPOUNDCompoundxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxINTPRO_GENPAT_
TRANSLATIONAL,
PRO_GENPAT_DIR2_
ROTATIONAL
PRO_E_GENPAT_DIR1
andPRO_E_GENPAT_
DIR21stdirectionand2nd
directionCompound
PRO_E_DIRECTION_
COMPOUNDPRO_E_DIRECTION_
COMPOUNDCompound
PRO_E_DIRECTION_
REFERENCEDirectionreference PRO_VALUE_TYPE_
SELECTION
PRO_E_DIRECTION_
FLIPDirectionflip PRO_VALUE_TYPE_
INTValueignored
PRO_E_DIR_PAT
_DIR1_FLIP andPRO_
E_DIR_PAT
_DIR2_FLIP1stdirectionflipand2nd
directionflipPRO_VALUE_TYPE_
INT0or1
PRO_E_GENPAT_
DIR1_INC andPRO_E_
GENPAT_DIR2_INC1stdirectionincrement
and2nddirection
incrementPRO_VALUE_TYPE
_DOUBLE
PRO_E_GENPAT_DIM_
FIRST_DIR
andPRO_E_GENPAT_
DIM_SECOND_DIR1stdirectiondimensions Array
958 Creo®Parametric TOOLKIT User’sGuideAxisPatterns
Usetheaxispatterntocreateapatternbyrevolvingafeaturearoundaselected
axis.Anaxispatternallowsyoutoplacemembersinthefirstdirectionorangular
directionandintheseconddirectionorradialdirection.
IfthepatterntypeinyourelementtreeisPRO_GENPAT_AXIS_DRIVEN, thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaxis.Anaxispatternallowsyoutoplacemembersinthefirstdirectionorangular
directionandintheseconddirectionorradialdirection.
IfthepatterntypeinyourelementtreeisPRO_GENPAT_AXIS_DRIVEN, the
elementtreemustcontaininformation aboutthepatternmembersinthetwo
directions andtheaxisaroundwhichyouwanttocreateapattern.
ElementTreeforanAxisPattern
Theelement PRO_E_GENPAT_AXIS_REF specifiestheaxisaroundwhichyou
wanttocreatethepattern.ThevalueofthiselementisPRO_VALUE_TYPE_
SELECTION, whichisoftypeProSelection.
Theelement PRO_E_GENPAT_AXIS1_INC specifiesthespacingbetweenthe
patternmembersinthefirstdirectionandisoftypePRO_VALUE_TYPE_
DOUBLE.Thefirstdirectionbeingangular,thisdistanceistheangulardistance
andtherangeis-360through +360.
ElementTrees:Patterns 959Theelement PRO_E_GENPAT_AXIS2_INC specifiesthespacingbetweenthe
patternmembersintheseconddirectionandisoftypePRO_VALUE_TYPE_
DOUBLE.Theseconddirectionbeingradial,thisdistanceisthelineardistanceand
therangeis-999999999.9999 through +999999999.9999.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpatternmembersintheseconddirectionandisoftypePRO_VALUE_TYPE_
DOUBLE.Theseconddirectionbeingradial,thisdistanceisthelineardistanceand
therangeis-999999999.9999 through +999999999.9999.
Theelements PRO_E_AXIS_PAT_DIR1_FLIP andPRO_E_AXIS_PAT_
DIR2_FLIP flipthepatternmembersinthefirstandseconddirection,
respectively ,aroundtheaxis.TheseelementsareoftypePRO_VALUE_TYPE_
INT.
Theelement PRO_E_GENPAT_AXIS_ANG_WHOLE specifiestheangularextent
ofthepatternmembersandisoftypePRO_VALUE_TYPE_DOUBLE. Therange
forthiselementis0.0000through 999999999.9999.
ThevalueofeachPRO_E_GENPAT_DIR_DIMENSION elementisa
ProSelection objectforthecorresponding dimensions.
Theelementswithidentifiers PRO_E_GENPAT_DIM_FIRST_DIR andPRO_E_
GENPAT_DIM_SECOND_DIR containdimension information forthepattern
membersinthefirstandseconddirection,respectively .Formoreinformation on
theseelements,refertothesectiononDimension Patternsonpage952.
CurvePatterns
Acurvepatterncreatesinstancesofafeaturealongasketchedcurveoradatum
curve.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheseelements,refertothesectiononDimension Patternsonpage952.
CurvePatterns
Acurvepatterncreatesinstancesofafeaturealongasketchedcurveoradatum
curve.
IfthepatterntypeinyourelementtreeisPRO_GENPAT_CRV_DRIVEN, the
elementtreemustcontaininformation aboutthecurveandthepatternmembers.
ElementTreeforaCurvePattern
Theelement PRO_E_GENPAT_CRV_PNT_REF specifiesthecurvetobeusedas
areference.
Afteryouselectthereference, youcaneitherselectasketchedcurveordrawa
curveusingSketcher.Theelement PRO_E_GENPAT_CRV_PLC_TYPE specifies
thecurvetypes.
Theelement PRO_E_GENPAT_CRV_SPACING specifiestheseparation between
thepatternmembers.
960 Creo®Parametric TOOLKIT User’sGuideTheelement PRO_E_GENPAT_CRV_NUMBER specifiesthenumberofpattern
memberstobecreated.
Theelement PRO_E_GENPAT_CRV_FLIP specifiesflippingthecurveusedin
patterning.
ThefollowingtableliststhecontentsofeachPRO_E_GENPAT_CRV element.
ElementIDValuesElementName DataType ValidValues
PRO_E_GENPAT_CRV_
PNT_REFCurvereference PRO_VALUE_TYPE_
SELECTIONxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpatterning.
ThefollowingtableliststhecontentsofeachPRO_E_GENPAT_CRV element.
ElementIDValuesElementName DataType ValidValues
PRO_E_GENPAT_CRV_
PNT_REFCurvereference PRO_VALUE_TYPE_
SELECTION
PRO_E_GENPAT_CRV_
PLC_TYPECurvetype PRO_VALUE_TYPE_
INT
PRO_E_GENPAT_CRV_
SPACINGCurvespacing PRO_VALUE_TYPE
_DOUBLE0.0000to
1000000.0000
PRO_E_GENPAT_CRV_
NUMBERCurvenumber PRO_VALUE_TYPE_
INT
PRO_E_GENPAT_CRV_
FLIPCurveflip PRO_VALUE_TYPE_
INT0or1
PointPatterns
Apointpatterncreatesapatternbyplacingapatternmemberataparticularpoint.
Thefollowingfigureshowstheelementsofapointpattern:
ElementTreeforaPointPattern
IfthepatterntypeintheelementtreeisPRO_GENPAT_POINT_DRIVEN, the
elementtreemustcontaintheinformation aboutthereferencepointandtheactual
pointatwhichyouwanttodrawthepattern.
Usetheelement PRO_E_GENPAT_POINT_REF_TYPE toselectthetypeofthe
pointatwhichyouwanttorepeattheselectedfeature.Thisselectedpointisthe
referencepointforcreatingthepattern.Youcanselectapointfromthefollowing
options:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpointatwhichyouwanttorepeattheselectedfeature.Thisselectedpointisthe
referencepointforcreatingthepattern.Youcanselectapointfromthefollowing
options:
•InternalorExternalsketch
•Datumpointfeature
Afterthetypeofthereferencepointisset,usetheelement PRO_E_GENPAT_
POINT_REF toselecttheactualpoint.
ThefollowingtableliststhecontentsofeachPRO_E_GENPAT_POINT element.
ElementTrees:Patterns 961ElementIDValuesElementName DataType ValidValues
PRO_E_GENPAT_
POINT_REF_TYPEPointtype PRO_VALUE_TYPE_
INTPRO_GENPAT_REF_
SKETCH, PRO_
GENPAT_REF_POINT
PRO_E_GENPAT_
POINT_REFPointreference PRO_VALUE_TYPE_
SELECTION
SelectingReferences forPattern
Thecompound element PRO_E_PAT_GEOM_REFS containsinformation about
thereferences selectedforthepatternleader.
Theelement PRO_E_PAT_GEOM_REFS allowsyoutoonlyreadthereferences
selectedforpatternleader.Youcannotselectthereferences inCreoParametric
TOOLKITusingtheseelements.
Thefollowingfigureshowstheelementtreeforselectingreferences forpattern
leader:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectedforpatternleader.Youcannotselectthereferences inCreoParametric
TOOLKITusingtheseelements.
Thefollowingfigureshowstheelementtreeforselectingreferences forpattern
leader:
Thecompound element PRO_E_PAT_GEOM_REFS containsthefollowing
elements:
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies thecollection of
surfacesthatdefinetheleaderofthegeometrypattern.
•PRO_E_PAT_CRV_DTM_REFS—Specifies thecollection ofcurvesand
datumsthatdefinetheleaderofthegeometrypattern.
ThefollowingtableliststhecontentsofPRO_E_PAT_GEOM_REFS element:
ElementIDValues ElementName DataType
PRO_E_STD_SURF_
COLLECTION_APPLReference Surfaces PRO_VALUE_TYPE_
SELECTION
PRO_E_PAT_CRV_DTM_REFS Reference CurvesandDatums PRO_VALUE_TYPE_
SELECTION
Attachment OptionsforPattern
Thecompound element PRO_E_FLEX_OPTS_CMPND containsinformation
abouttheattachment optionsforthepattern.
962 Creo®Parametric TOOLKIT User’sGuideTheelement PRO_E_FLEX_OPTS_CMPND allowsyoutoonlyreadthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThecompound element PRO_E_FLEX_OPTS_CMPND containsinformation
abouttheattachment optionsforthepattern.
962 Creo®Parametric TOOLKIT User’sGuideTheelement PRO_E_FLEX_OPTS_CMPND allowsyoutoonlyreadthe
attachment optionsselectedforapattern.Youcannotsettheattachment optionin
CreoParametric TOOLKITusingtheseelements.
Thefollowingfigureshowstheelementtreeforattachment optionsforthe
pattern:
Thecompound element PRO_E_FLEX_OPTS_CMPND containsthefollowing
elements:
•PRO_E_FLEX_TRF_SEL_ATT_GEOM—Specifies iftheselectedroundsand
chamfersthatattachthepatternedgeometrytothemodelmustbepatterned. 1
specifiesthattheroundsandchamfersarepatterned. Whenyouspecify 0,the
selectedattachingroundsandchamfersareremoved.
•PRO_E_FLEX_ATTACH_GEOM—Specifies ifthegeometryofthepattern
membersmustbereattached tothemodelafterpatterning. 1specifiesthatthe
patterngeometryisattachedtothemodel.
•PRO_E_FLEX_CR_RND_GEOM—Specifies iftheroundorchamfergeometry
ofthepatternmembersmustberecreatedafterpatterning. 1specifiesthatthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpatterngeometryisattachedtothemodel.
•PRO_E_FLEX_CR_RND_GEOM—Specifies iftheroundorchamfergeometry
ofthepatternmembersmustberecreatedafterpatterning. 1specifiesthatthe
patterngeometryisrecreatedwithroundsorchamfers.
ThefollowingtableliststhecontentsofPRO_E_FLEX_OPTS_CMPND element:
ElementIDValuesElementName DataType ValidValues
PRO_E_FLEX_TRF_
SEL_ATT_GEOMTransformselected
attachment geometryPRO_VALUE_TYPE_
INT0or1
PRO_E_FLEX_
ATTACH_GEOMAttachment option PRO_VALUE_TYPE_
INT0or1
PRO_E_FLEX_
CR_RND_GEOMRoundoption PRO_VALUE_TYPE_
INT0or1
PatternFeatures
Thecompound element PRO_E_PAT_APPLICATIONS containselementsfor
patternapplications. YoucancreateaNCsequenceusingtheelementsunderthe
compound element PRO_E_PAT_MFG_TOOL_PATH. Youcanviewthevarious
parameters ofapatternusingthePatternRecognition featureelementsunderthe
compound element PRO_E_PAT_GPRF.
ElementTrees:Patterns 963NCSequencePattern
YoucancreateanNCsequencebyusingtheelementtreeforpatternapplications.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompound element PRO_E_PAT_GPRF.
ElementTrees:Patterns 963NCSequencePattern
YoucancreateanNCsequencebyusingtheelementtreeforpatternapplications.
Thecompound element PRO_E_PAT_MFG_TOOL_PATH describedinthis
sectionallowsyoutosetvariousoptionsrelatedtomanufacturing orderand
fixturesusedtopatternanNCsequence.
Thefollowingfigureshowstheelementtreeforpatternapplications.
PatternElementTreeforNCSequence
Thecompound element PRO_E_PAT_MFG_TOOL_PATH containsthefollowing
elementsoftypeinteger:
•PRO_E_PAT_MFG_ORD_LEADER—Specifies thenumberofthepattern
memberthatyouwanttouseasthemanufacturing leader.Thedefaultvalueof
thiselementiszero,whichindicatesthatthepatternleaderitselfisthe
manufacturing leader.
•PRO_E_PAT_MFG_ORDER_OPT—Specifies thecriteriaforselectingthe
manufacturing order.Thevalidvaluesare:
○1—Specifiesthemanufacturing orderbasedonthepatternorder.Setthe
valuesofthefollowingelementsas:
◆PRO_E_PAT_MFG_ORD_REVERSE—Specify 1toreversetheorder
ofthepatternfortheCLoutput.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○1—Specifiesthemanufacturing orderbasedonthepatternorder.Setthe
valuesofthefollowingelementsas:
◆PRO_E_PAT_MFG_ORD_REVERSE—Specify 1toreversetheorder
ofthepatternfortheCLoutput.
964 Creo®Parametric TOOLKIT User’sGuide◆PRO_E_PAT_MFG_ORD_ALT_ROWS—Specify 1tosetthealternate
rowsofthepatterninthesamedirectionfortheCLoutput.Herethe
firstandthesecondrowsareinoppositedirections withthefirstrow
beinginthedirectionofthepattern.Themanufacturing leaderisthe
firsttoolpathintheCLoutput.
◆PRO_E_PAT_MFG_ORD_ALT_DIR—Specify 1togeneratetheCL
outputwiththedirectionofthefirstrowbeingtreatedasthedirection
ofthesecondrowandthedirectionofsecondrowtreatedasthe
directionofthefirstrowuntilthetoolpathsforallthepatternmembers
aregenerated. Themanufacturing leaderisthefirsttoolpathintheCL
output.
○2—Specifies themanufacturing orderbasedontheshortestdistance
betweenthepatternmembers.
○3—Select themanufacturing orderforeachofthepatternmemberfrom
thepatternUI.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoutput.
○2—Specifies themanufacturing orderbasedontheshortestdistance
betweenthepatternmembers.
○3—Select themanufacturing orderforeachofthepatternmemberfrom
thepatternUI.
Note
Thefunctionality toselectthemanufacturing orderforeachpattern
memberiscurrentlynotsupported throughCreoParametric TOOLKIT.
•PRO_E_PAT_MFG_ORD_SHARED—Specify 1tosequentially settheorders
forthe4-axisor5-axistoolpathswithacommonZ-axisorientation.
•PRO_E_PAT_MFG_FIX_OFFSET—Specifies theparameters forthefixture
offset.Specify 1tosetthefollowingfixtureoptions:
○PRO_E_PAT_MFG_FIX_OFF_INIT—Specifies theinitialvalueofthe
fixtureOffset.
○PRO_E_PAT_MFG_FIX_OFF_INCR—Specifies theincrement valuefor
thefixtureoffset.
•PRO_E_PAT_MFG_SUB_OUTPUT—Specifies ifsubroutine patternmustbe
created.Subroutines enableyoutocreateNCsequences, placethemasmacros
atthebeginning oftheCLfile,andthencallthemfromthemainbodyofthe
CLfileasmanytimesasneeded.
•PRO_E_PAT_MFG_SUB_OUT_MODE—Specifies theoutputmodefortheCLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxatthebeginning oftheCLfile,andthencallthemfromthemainbodyofthe
CLfileasmanytimesasneeded.
•PRO_E_PAT_MFG_SUB_OUT_MODE—Specifies theoutputmodefortheCL
dataforthesubroutine. Passthevalue 1forabsolutemodeand2for
incremental mode.
•PRO_E_PAT_MFG_SUB_OUT_MULTAX—Specifies iftheMultaxmodemust
beselected.Multaxisrelatedtocutterlocationoutputformatwhereitputsthe
post-processor inthemulti-axis outputmodetoprocessthei,j,kvector.When
ElementTrees:Patterns 965inmulti-axis outputmode,CreoNCoutputsthei,j,kvectorevenwhenthe
toolisin0,0,1orientation.
InMultaxmode,thesystemwilloutputtransformed CLdataratherthan
outputting rotatetablecommands.
•PRO_E_PAT_MFG_SUB_OUT_COPYCL—Specifies ifthesubroutine pattern
definitions inCLoutputmustbetemporarily suppressed. Thesystemwill
outputCLdatawithoutthesubroutine definitions andcalls.
RefertoCreoNConlineHelpformoreinformation onsubroutines.
ThefollowingtableliststhecontentsofeachPRO_E_PAT_MFG_TOOL_PATH
element.
ElementIDValuesElementName DataType ValidValuesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRefertoCreoNConlineHelpformoreinformation onsubroutines.
ThefollowingtableliststhecontentsofeachPRO_E_PAT_MFG_TOOL_PATH
element.
ElementIDValuesElementName DataType ValidValues
PRO_E_PAT_MFG_
ORD_LEADERNumberoftheleader PRO_VALUE_TYPE_
INT0<=value <number
ofinstances
PRO_E_PAT_MFG_
ORDER_OPTOrderoptions PRO_VALUE_TYPE_
INT1,2,3(ifyouspecify3,
ordermaybeselected
onlythroughCreo
Parametric UI)
PRO_E_PAT_MFG_
ORD_REVERSEReverseoption PRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_MFG
_ORD_ALT_ROWSAlternaterows PRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_MFG
_ORD_ALT_DIRAlternatedirection PRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_MFG
_ORD_SHAREDSharedorientation PRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_MFG
_FIX_OFFSETFixtureoffsets PRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_MFG
_FIX_OFF_INITInitialfixtureoffsets PRO_VALUE_TYPE_
INT1<=value
PRO_E_PAT_MFG
_FIX_OFF_INCRFixtureoffsetsincrement PRO_VALUE_TYPE_
INT1<=value
PRO_E_PAT_MFG_
SUB_OUTPUTSubroutine option PRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_MFG_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxINT1<=value
PRO_E_PAT_MFG
_FIX_OFF_INCRFixtureoffsetsincrement PRO_VALUE_TYPE_
INT1<=value
PRO_E_PAT_MFG_
SUB_OUTPUTSubroutine option PRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_MFG_
SUB_OUT_MODESubroutine mode PRO_VALUE_TYPE_
INT1or2
PRO_E_PAT_MFG_
SUB_OUT_MULTAXSubroutine multax PRO_VALUE_TYPE_
INT0or1
Formoreinformation onthepatterning optionsrelatedtoanNCsequence,referto
Manufacturing sectionoftheCreoParametric help.
GeometryPatternRecognition
YoucanreadthePatternRecognition featureparameters usingtheelement PRO_
E_PAT_GPRF describedinthissection.YoucannotcreatethePattern
Recognition featureinCreoParametric TOOLKITusingtheseelements.
966 Creo®Parametric TOOLKIT User’sGuideThefollowingfigureshowstheelementtreeforGeometry PatternRecognition
application:
PatternElementTreeforGeometryPatternRecognition
Thepatternrecognition compound element PRO_E_PAT_GPRF containsthe
followingelements:
•PRO_E_PAT_GPRF_TYPE—Specifies thetypeofgeometrypatterntobexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPatternElementTreeforGeometryPatternRecognition
Thepatternrecognition compound element PRO_E_PAT_GPRF containsthe
followingelements:
•PRO_E_PAT_GPRF_TYPE—Specifies thetypeofgeometrypatterntobe
recognized: IdenticalorSimilar.Ittakestheintegervalues: 0forIdenticaland
1forSimilar.
•PRO_E_PAT_GPRF_TRF_TYPE—Specifies therecognized geometry
patterns.Ittakestheintegervalue: 0forDirection,1forAxisand2forSpatial.
•PRO_E_PAT_GPRF_DIR1_TRF—Specifies thefirstdirectionof
transformation. Ittakesthefollowingintegervaluesfromtheenumerated type
ProGenPatternDirectionType:
○PRO_GENPAT_TRANSLATIONAL—Specifies –1fortranslational
pattern.
○PRO_GENPAT_DIR1_ROTATIONAL—Specifies 58forfirstdirection
forrotationalpattern.
ElementTrees:Patterns 967•PRO_E_PAT_GPRF_DIR1_NUM_INST—Specifies thenumberofmembers
inthefirstdirectionorintheangulardirection.
•PRO_E_PAT_GPRF_DIR1_SPACING—Specifies thespacingbetween
membersinthefirstdirectionortheanglebetweenmembersintheangular
direction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthefirstdirectionorintheangulardirection.
•PRO_E_PAT_GPRF_DIR1_SPACING—Specifies thespacingbetween
membersinthefirstdirectionortheanglebetweenmembersintheangular
direction.
•PRO_E_PAT_GPRF_DIR2_TRF—Specifies theseconddirectionof
transformation. Ittakesthefollowingintegervaluesfromtheenumerated type
ProGenPatternDirectionType:
○PRO_GENPAT_TRANSLATIONAL—Specifies –1fortranslational
pattern.
○PRO_GENPAT_DIR2_ROTATIONAL—Specifies 60forseconddirection
forrotationalpattern.
•PRO_E_PAT_GPRF_DIR2_NUM_INST—Specifies thenumberofmembers
intheseconddirectionorintheangulardirection.
•PRO_E_PAT_GPRF_DIR2_SPACING—Specifies thespacingbetween
membersintheseconddirectionortheanglebetweenmembersintheangular
direction.
•PRO_E_DIR_GPRF_MOVE_OPT—Specifies ifapatternofcopy-move
featuresmustbecreatedbythegeometrypatternrecognition feature.Specify
1ifyouwantthenumberofpatternmembersandspacingtobemodified.
•PRO_E_PAT_GPRF_USE_SRF—Specifies 1ifthemembersinthegeometryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturesmustbecreatedbythegeometrypatternrecognition feature.Specify
1ifyouwantthenumberofpatternmembersandspacingtobemodified.
•PRO_E_PAT_GPRF_USE_SRF—Specifies 1ifthemembersinthegeometry
patternrecoginition featurehavebeenlimitedwithsurfaces.Thiselement
restrictsthepatternrecognition toalimitedregiononthemodel.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies thecollection of
surfacesthatdefinetheleaderofthegeometrypatterntoberecognized.
•PRO_E_PAT_GPRF_USE_SEC—Specifies 1ifasketchhasbeenusedto
limitthemembersinthegeometrypatternrecognition feature.
ThefollowingtableliststhecontentsofeachPRO_E_PAT_GPRF element.
ElementIDValuesElementName DataType ValidValues
PRO_E_PAT_GPRF_
TYPETypeofrecognized
patternPRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_GPRF_
TRF_TYPETypeoftransformation PRO_VALUE_TYPE_
INT0,1or2
PRO_E_PAT_GPRF
_DIR1_TRFFirsttransformation
directionPRO_VALUE_TYPE_
INT—1,58or60
PRO_E_PAT_GPRF_
DIR1_NUM_INSTNumberofinstancesin
thefirstdirectionPRO_VALUE_TYPE_
INT
PRO_E_PAT_GPRF_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxINT0,1or2
PRO_E_PAT_GPRF
_DIR1_TRFFirsttransformation
directionPRO_VALUE_TYPE_
INT—1,58or60
PRO_E_PAT_GPRF_
DIR1_NUM_INSTNumberofinstancesin
thefirstdirectionPRO_VALUE_TYPE_
INT
PRO_E_PAT_GPRF_
DIR1_SPACINGSpacinginthefirst
directionPRO_VALUE_TYPE
_DOUBLE
PRO_E_PAT_
GPRF_DIR2_TRFSecondtransformation
directionPRO_VALUE_TYPE_
INT—1,58or60
968 Creo®Parametric TOOLKIT User’sGuideElementIDValuesElementName DataType ValidValues
PRO_E_PAT_GPRF_
DIR2_NUM_INSTNumberofinstancesin
theseconddirectionPRO_VALUE_TYPE_
INT
PRO_E_PAT_GPRF_
DIR2_SPACINGSpacinginthesecond
directionPRO_VALUE_TYPE
_DOUBLE
PRO_E_DIR
_GPRF_MOVE_OPTCreatepatternofmove
featuresPRO_VALUE_TYPE_
INT0or1
PRO_E_PAT_
GPRF_USE_SRFUsesurfaceforregion
definitionPRO_VALUE_TYPE_
INT0or1
PRO_E_STD_SURF_
COLLECTION_APPLReference surfaces PRO_VALUE_TYPE_
SELECTION
PRO_E_PAT_
GPRF_USE_SECSketchforregion
definitionPRO_VALUE_TYPE_
INT0or1
Formoreinformation onthegeometrypatternrecognition, refertotheCreo
Parametric help.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTION
PRO_E_PAT_
GPRF_USE_SECSketchforregion
definitionPRO_VALUE_TYPE_
INT0or1
Formoreinformation onthegeometrypatternrecognition, refertotheCreo
Parametric help.
ObtainingtheElementTreeforaPattern
FunctionIntroduced:
•ProPatternElemtre eCre ate()
Toobtaintheelementtreeforapattern,callthefunction
ProPatternElemtreeCreate(). Youcanthenusetheelementtreeread-
accessfunctionsdescribedinthesectionsFeatureElementsonpage759(on
page29-13)andFeatureElementPathsonpage757(onpage29-11),suchas
thefunctions ProElement*Get(), ProElement*Visit(), and
ProElementArrayGet()).
Note
Inspection ofFill,Axis,andDirectional patternsisnotsupported viathe
elementtreeinPro/ENGINEER Wildfire2.0.
ProPatternElemtreeCreate() returns PRO_TK_NOT_
IMPLEMENTED forfillpatterns.
VisitingandCreatingaPattern
Functions Introduced:
•ProPatternMemberV isit()
•ProPatternMembersGet()
•ProPatternCr eate()
ElementTrees:Patterns 969•ProPatternInAssemblyCre ate()
Thefunction ProPatternMemberVisit() visitsthefeaturemembersinaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProPatternMemberV isit()
•ProPatternMembersGet()
•ProPatternCr eate()
ElementTrees:Patterns 969•ProPatternInAssemblyCre ate()
Thefunction ProPatternMemberVisit() visitsthefeaturemembersina
pattern.Thisfunctiontakesthevisitactionfunction
ProFeatureVisitAction() andthefilteractionfunction
ProFeatureFilterAction() asitsinputarguments.Thefunction
ProFeatureFilterAction() isagenericactionfunctionforfiltering
featuresfromapattern.Itreturnsthefilterstatusofthefeaturesinthepattern.
Thisstatusisusedasaninputargumentbythefunction
ProFeatureVisitAction().
Thefunction ProPatternMembersGet() returnsthefeaturemembersina
pattern.Foragrouppattern,theoutputargumentisagrouppatternfeature.
Whenyourelementtreeiscomplete,createthepatternbycallingthefunction
ProPatternCreate(). Thisfunctionrequiresasinputthefeature
(ProFeature) tobepatternedandthepatternclass(featureorgroup)ofthenew
pattern.
ToobtaintheProPattern handleforthenewpattern,callthefunction
ProFeaturePatternGet() withthesameinputfeatureasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(ProFeature) tobepatternedandthepatternclass(featureorgroup)ofthenew
pattern.
ToobtaintheProPattern handleforthenewpattern,callthefunction
ProFeaturePatternGet() withthesameinputfeatureas
ProPatternCreate(). Formoreinformation onthefunction
ProFeaturePatternGet(), refertothesectionManipulating Patternson
page142intheCore:Featuresonpage130chapter.
Thefunction ProPatternInAssemblyCreate() createsapatterninthe
assemblythatisprovidedintheelementtree.Theinputparameters areasfollows:
•p_component_path—The component pathspecifiedusingthestructure
ProAsmcomppath.
•pattern_featur e—Feature definedbytheProFeature object.
•pat_class—Pattern classdefinedbytheenumerated datatype
ProPatternClass.
•elem_tr ee—Therootelementofthepatternelementtree.
Youmustspecifythepatternobjectforthisfunctionbecauseafeaturepatterncan
beapartofbothagrouppatternandafeaturepattern.
ThefunctionreturnstheerrorPRO_TK_ABORT ifthepatternfeaturecreation
failed.Youmustensurethatyouuseanewpatternnameeverytimeyoucreateaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeapartofbothagrouppatternandafeaturepattern.
ThefunctionreturnstheerrorPRO_TK_ABORT ifthepatternfeaturecreation
failed.Youmustensurethatyouuseanewpatternnameeverytimeyoucreatea
newpattern.
970 Creo®Parametric TOOLKIT User’sGuide43
ElementTrees:Sections
Overview................................................................................................................972
CreatingSectionModels..........................................................................................972
Asectionisaparametric two-dimensional crosssectionusedtodefinetheshape
ofthree-dimensional features,suchasextrusions. InCreoParametric, youcreatea
sectioninteractively usingSketchermode.InaCreoParametric TOOLKIT
application, youcancreatesectionscompletely programmatically usingthe
functionsdescribedinthissection.
971Overview
Asectionisaparametric two-dimensional modelusedtodefinetheshapeof
three-dimensional featuresinpartsandassemblies. WhenusingCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionsdescribedinthissection.
971Overview
Asectionisaparametric two-dimensional modelusedtodefinetheshapeof
three-dimensional featuresinpartsandassemblies. WhenusingCreoParametric
interactively ,youcreateasectionusingSketchermode.InaCreoParametric
TOOLKITapplication, youcancreatesectionscompletely programmatically
usingthefunctionsdescribedinthissection.
Sectionsfallintotwotypes:2Dand3D.Bothtypesarerepresented bytheobject
ProSection (anopaquehandle)andmanipulated bythesamefunctions.
Thedifferencebetweenthetypesarisesoutofthecontextinwhichthesectionis
beingused,andaffectstherequirements forthecontentsofthesectionandalsoof
thefeatureelementtreeinwhichitisplacedwhencreatingasketchedfeature.
Putsimply,a2Dsectionisself-contained, whereasa3Dsectioncontains
references to3Dgeometryinaparentpartorassembly.
YoucanuseIntentDatumssuchIntentAxis,IntentPoint,IntentPlane,andIntent
Coordinate Systemasreferences forsketcherdimensions. YoucanuseIntentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferences to3Dgeometryinaparentpartorassembly.
YoucanuseIntentDatumssuchIntentAxis,IntentPoint,IntentPlane,andIntent
Coordinate Systemasreferences forsketcherdimensions. YoucanuseIntent
PointandIntentAxistocreatesectionsusingprojections.
InaCreoParametric TOOLKITapplication, youcanworkwithasectioneitherin
anIntentManageroranon-Intent Managermode.Inthenon-Intent Manager
mode,ifyoumakeanychangestothesection,youmustsolveandregenerate the
sectiontoapplythechanges.Ontheotherhand,intheIntentManagermode,all
thechangesareappliedimmediately .
Youcancreatesectionconstraints programmatically usingtheIntentManager
property.Thiscorresponds tocreatingsectionswithintheIntentManagermodein
CreoParametric.
Thischapterisconcerned with2Dsections,whicharethesimplest.Theextra
stepsrequiredtoconstructa3DsectionaredescribedinthechapterElement
Trees:SketchedFeaturesonpage987,whichfollowsthisone.
CreatingSectionModels
A2Dsection,becauseitisself-contained, maybestoredasaCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTrees:SketchedFeaturesonpage987,whichfollowsthisone.
CreatingSectionModels
A2Dsection,becauseitisself-contained, maybestoredasaCreoParametric
modelfile.Itthenhastheextension .sec.
ThestepsrequiredtocreateandsaveasectionmodelusingCreoParametric
TOOLKITfollowcloselythoseusedincreatingasectioninteractively using
SketchermodeinCreoParametric.
ToCreateandSaveaSectionModel
1.Allocatethetwo-dimensional sectionanddefineitsname.
972 Creo®Parametric TOOLKIT User’sGuide2.Addsectionentities(lines,arcs,splines,andsoon)todefinethesection
geometry,insectioncoordinates.
3.Addsectiondimensions thatparametrically drivetheshapeoftheentities.
4.Solveandregenerate thesection.
5.Savethesection.
Whenyouarecreatingasectionthatistobeusedinasketchedfeature,Steps1
and5willbereplacedbydifferenttechniques. thesetechniques aredescribedfully
inthechapteronElementTrees:SketchedFeaturesonpage987.
Thestepsaredescribedinmoredetailinthefollowingsections.
AllocatingaTwo-Dimensional Section
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthechapteronElementTrees:SketchedFeaturesonpage987.
Thestepsaredescribedinmoredetailinthefollowingsections.
AllocatingaTwo-Dimensional Section
Functions Introduced:
•ProSection2DAlloc()
•ProSectionFre e()
•ProSectionNameSet()
•ProSectionNameGet()
Atwo-dimensional sectionisidentifiedinCreoParametric TOOLKITbyan
opaquepointercalled ProSection. Thistype,andthefunctionsinthissection,
aredeclaredintheincludefileProSection.h.
Thefunction ProSection2DAlloc() allocatesmemoryforanew,standalone
sectionandoutputsaProSection handletoidentifyit.AlltheotherCreo
Parametric TOOLKITfunctionsthatoperateonsectionstakethisProSection
astheirfirstinputargument.
Thefunction ProSectionNameSet() enablesyoutosetthenameofa
section.CallingthisfunctionplacesthesectionintheCreoParametric namelist
andenablesittoberecognized byCreoParametric asasectionmodelinthe
database.
Thefollowingcodefragmentshowshowtousethesetwofunctions.
ProSection section;
ProName wname;
ProSection2DAlloc (&section);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandenablesittoberecognized byCreoParametric asasectionmodelinthe
database.
Thefollowingcodefragmentshowshowtousethesetwofunctions.
ProSection section;
ProName wname;
ProSection2DAlloc (&section);
ProStringToWstring (wname, "demo");
ProSectionNameSet (section, wname);
Suchsectionscreatedprogrammatically areinthenon-Intent Managermodeby
default.
TofreeasectionallocatedwithProSection2DAlloc(), youmustuse
ProSectionFree().
ElementTrees:Sections 973SettingtheModeofaSection
Functions Introduced:
•ProSectionIntentManagerModeGet()
•ProSectionIntentManagerModeSet()
Usethefunction ProSectionIntentManagerModeGet() tocheckifthe
IntentManagerpropertyisONorOFFforthespecifiedsection.
Usethefunction ProSectionIntentManagerModeSet() tosettheIntent
ManagerpropertytoONorOFFforthespecifiedsection.Thisfunctionmustbe
calledbeforeusingtheotherCreoParametric TOOLKITfunctionstoaccess
sectionswiththeIntentManagerpropertysettoON.
CopyingtheCurrentSection
Functions Introduced:
•ProSectionActiveGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcalledbeforeusingtheotherCreoParametric TOOLKITfunctionstoaccess
sectionswiththeIntentManagerpropertysettoON.
CopyingtheCurrentSection
Functions Introduced:
•ProSectionActiveGet()
•ProSectionActiveSet()
Usethefunction ProSectionActiveGet() tocreateacopyofthesection
thatyouareusingcurrently;thiscopyiscreatedwithinthesameSketchersession.
ThemodeofsuchasectiondependsonthecurrentSketchermode.Startingfrom
Pro/ENGINEER Wildfire5.0,theIntentManagermodeisthedefaultsketcher
mode.Usethefunction ProSectionFree() tofreethememoryallocatedto
thesectionobtainedwiththefunction ProSectionActiveGet().
Usethefunction ProSectionActiveSet() tosetthespecifiedsectionasthe
currentactiveSketchersection.
Note
ThefunctioncallProSectionActiveSet() makestheUndoandRedo
menuoptionsavailableinCreoParametric.
SectionConstraints
Functions Introduced:
•ProSectionConstraintsIdsGet()
•ProSectionConstraintsGet()
•ProSectionConstraintDeny()
•ProSectionConstraintCre ate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmenuoptionsavailableinCreoParametric.
SectionConstraints
Functions Introduced:
•ProSectionConstraintsIdsGet()
•ProSectionConstraintsGet()
•ProSectionConstraintDeny()
•ProSectionConstraintCre ate()
974 Creo®Parametric TOOLKIT User’sGuide•ProSectionConstraintDelete()
Thefunction ProSectionConstraintsIdsGet() returnsanarrayof
sectionconstraint identifiers thatcurrentlyexistinthespecifiedsection.
Note
Youmustsolvethesectionfirstbycallingthefunction
ProSectionSolve() togetthesectionconstraints. Becauseaddingor
deletingsectionentitiesmightinvalidate thecurrentlistofsectionconstraint
identifiers, youmustsolvethesectionagaintogettheup-to-date list.
Ifasectionhasnotbeenfullydimensioned withdimensions createdexplicitlyby
theuser,theSketcherwillmakeassumptions inordertosolvethesection.Ifthe
Sketchercanassumeenoughconstraints tofindauniquesolutiontothesection,it
solvesthesectionsuccessfully .
However,youmightwanttodisablecertainSketcherconstraints tohavemorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSketchercanassumeenoughconstraints tofindauniquesolutiontothesection,it
solvesthesectionsuccessfully .
However,youmightwanttodisablecertainSketcherconstraints tohavemore
controloverthewaythesectionisdimensioned andsolved.Todothis,usethe
function ProSectionConstraintDeny() todenyacertainsection
constraint.
Note
Thefunction ProSectionConstraintDeny() isnotsupported for
sectionsthathavetheIntentManagerpropertysettoON.
Thefunction ProSectionConstraintsGet() returnsinformation aboutthe
specifiedsectionconstraint. Ittakesasinputthesectionhandleandtheconstraint
identifierforwhichtheinformation isrequested. Thefunctionreturnsdetails
aboutthesectionconstraint includingitstype,status,andreferences. The
constraint typesaredefinedintheincludefileProSecConstr.h. The
followingtableliststhepossibleconstraint types.
ConstraintType Description
PRO_CONSTRAINT_SAME_POINT Makethepointscoincident.
PRO_CONSTRAINT_HORIZONTAL_ENT Maketheentityhorizontal.
PRO_CONSTRAINT_VERTICAL_ENT Maketheentityvertical.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxConstraintType Description
PRO_CONSTRAINT_SAME_POINT Makethepointscoincident.
PRO_CONSTRAINT_HORIZONTAL_ENT Maketheentityhorizontal.
PRO_CONSTRAINT_VERTICAL_ENT Maketheentityvertical.
PRO_CONSTRAINT_PNT_ON_ENT Placethepointontheentity.
PRO_CONSTRAINT_TANGENT_ENTS Maketheentitiestangent.
PRO_CONSTRAINT_ORTHOG_ENTS Maketheentitiesperpendicular .
PRO_CONSTRAINT_EQUAL_RADII Makethearcsorcirclesofequalradius.
PRO_CONSTRAINT_PARALLEL_ENTS Maketheentitiesparallel.
PRO_CONSTRAINT_EQUAL_SEGMENTS Makethesegmentsofequallength.
ElementTrees:Sections 975ConstraintType Description
PRO_CONSTRAINT_COLLINEAR_LINES Makelinesco-linear.
PRO_CONSTRAINT_90_ARC Makethearcs90degrees.
PRO_CONSTRAINT_180_ARC Makethearcs180degrees.
PRO_CONSTRAINT_HORIZONTAL_ARC Makethearcshorizontal.
PRO_CONSTRAINT_VERTICAL_ARC Makethearcsvertical.
PRO_CONSTRAINT_SYMMETRY Imposesymmetry.
PRO_CONSTRAINT_SAME_COORD Assumetheendpointsandcentersofarcstohavethe
samecoordinates.
Thepossibletypesofconstraint statusareasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_CONSTRAINT_SYMMETRY Imposesymmetry.
PRO_CONSTRAINT_SAME_COORD Assumetheendpointsandcentersofarcstohavethe
samecoordinates.
Thepossibletypesofconstraint statusareasfollows:
•PRO_TK_CONSTRAINT_DENIED—The constraint isdenied.Thisgivesyou
morecontroloverthesection.
•PRO_TK_CONSTRAINT_ENABLED—The constraint isenabled.The
Sketcherusesthepredefined assumption.
Usethefunction ProSectionConstraintCreate() tocreateconstraints
betweenentitiesinthespecifiedsection.Usethefunction
ProSectionConstraintDelete() todeletethespecifiedsection
constraint.
Note
Thefunction ProSectionConstrainCreate() worksonlyiftheIntent
ManagerpropertyofthespecifiedsectionissettoON.
SolvingandRegenerating aSection
Functions Introduced:
•ProSectionEpsilonGet()
•ProSectionEpsilonSet()
•ProSectionSolve()
•ProSectionSolveRigid()
•ProSecdimV alueGet()
•ProSecdimV alueSet()
•ProSectionRegenerate()
AlthoughtheactionoftheRegenerate command inSketchermodeisseenasaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSectionEpsilonSet()
•ProSectionSolve()
•ProSectionSolveRigid()
•ProSecdimV alueGet()
•ProSecdimV alueSet()
•ProSectionRegenerate()
AlthoughtheactionoftheRegenerate command inSketchermodeisseenasa
singleoperationbytheCreoParametric user,itisinfactcomposed oftwodistinct
actions.Thesetwooperations areinvokedseparately fromaCreoParametric
TOOLKITapplication. Thetwooperations areasfollows:
976 Creo®Parametric TOOLKIT User’sGuide•Solving—Calculating thewayinwhichthegeometryoftheentitiesisdriven
bythedimensions. ItisatthisstagethatSketcherconstraints areapplied,
under-orover-dimensioning isdiscovered andreported,andvaluesare
assignedtonewdimensions.
•Regenerating—Reconstructing thegeometryofthesectiontoobeythecurrent
dimension values.
Youinvokethesestagesusingthefunctions ProSectionSolve() and
ProSectionRegenerate(), respectively .
Note
TheProSectionSolve() andProSectionRegenerate() arenot
supported forsectionsthathavetheIntentManagerpropertysettoON.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSectionRegenerate(), respectively .
Note
TheProSectionSolve() andProSectionRegenerate() arenot
supported forsectionsthathavetheIntentManagerpropertysettoON.
Youmustsolveaprogrammatically-created sectionbeforeusingittobuildthree-
dimensional geometry.Youneedtoregenerate thesectiononlyifyouhave
explicitlymodifiedthedimension valuessinceyousolvedthesection.
Whenyoucreateasectioninteractively usingSketchermode,younormallyadjust
thevaluesofdimensions afterthefirstregeneration, becausetheinitialvalues
assignedtothemcorrespond tothefree-hand, initialsketchandarethereforenot
exact.WhenyoucreateasectionwithCreoParametric TOOLKIT,theentitiesare
usuallycreatedwithexactlythegeometryneededinthefinishedsection.
Therefore, althoughsolvingisalwaysnecessary,itisnotusuallynecessaryto
explicitlyresetdimension valuesorregenerate thesection.
SolvingasectioninCreoParametric TOOLKITinvolvesapplyingthesame
constraints usedininteractive Sketchermode.CreoParametric TOOLKIT,likexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexplicitlyresetdimension valuesorregenerate thesection.
SolvingasectioninCreoParametric TOOLKITinvolvesapplyingthesame
constraints usedininteractive Sketchermode.CreoParametric TOOLKIT,like
theSketcher,identifiessituationsofnearsymmetry inthesection,assumesthem
tobeintendedasexactsymmetry,andconstrains themtobesymmetrical infuture
regenerations. Forexample,linesthatarenearlythesamelengthareassumedto
beintendedtobethesamelength,andarethereforeconstrained tobeso.
Thefunction ProSectionSolveRigid() solvesthespecifiedsectionby
fixingthecoordinates ofallthesectionentitieswithrespecttoacoordinate
system.Inthisway,thesectionentitiesdonothavetobesolvedindividually .To
usethisfunction,acoordinate systemwithinthesectionmustexist;thefunction
usesthefirstcoordinate systemfoundinthesection.
Note
Youmustensurethattheaddedsectionentitiesarecorrectbecausepotential
errorswillnotbesolvedandmayshowuponlyduringlaterstages.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusesthefirstcoordinate systemfoundinthesection.
Note
Youmustensurethattheaddedsectionentitiesarecorrectbecausepotential
errorswillnotbesolvedandmayshowuponlyduringlaterstages.
ElementTrees:Sections 977Whentherearealotofsectionentities,thisfunctiondramatically reducesthe
amountoftimerequiredtosolveasection.
Note
Thefunction ProSectionSolveRigid() isnotsupported forsections
thathavetheIntentManagerpropertysettoON.
Epsilonisthetolerancevalue,whichisusedtosettheproximity forautomatic
findingofconstraints. Usethefunction ProSectionEpsilonSet() tosetthe
valueforepsilon.Forexample,ifyoursectionhastwolinesthatdifferinlength
by0.5,settheepsilontoavaluelessthan0.5toensurethat
ProSectionSolve() doesnotconstrainthelinestobethesamelength.Toget
thecurrentepsilonvalueforthesection,usethefunction
ProSectionEpsilonGet().
Pleasenotethefollowingimportantpointsrelatedtoepsilon:
•Epsilondetermines thesmallestpossibleentityinasection.Ifanentityisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecurrentepsilonvalueforthesection,usethefunction
ProSectionEpsilonGet().
Pleasenotethefollowingimportantpointsrelatedtoepsilon:
•Epsilondetermines thesmallestpossibleentityinasection.Ifanentityis
smallerthanepsilon,thentheentityisconsidered tobeadegenerate entity.
Degenerate entityisanentitywhichcannotbesolved.Itcausessolvingand
regenerating ofthesectiontofail.Forexample,acirclewithradius0orline
withlength0areconsidered asdegenerate entities.
•Therearemanytypesofconstraints, andepsilonhasadifferentmeaningfor
eachtype.Forexample,considertwopoints.Fortheconstraint PRO_
CONSTRAINT_SAME_POINT, epsilonistheminimumdistancebetweenthe
twopointsbeyondwhichthepointswillbetreatedasseparatepoints.Ifthe
distancebetweenthetwopointsiswithintheepsilonvalue,thetwopointsare
treatedascoincident points.
•CreoParametric hasadefaultvaluesetforepsilon.Thisvalueisalsousedin
theSketcheruserinterface.
•Iftheinputgeometryisaccurateandtheuserdoesnotwantthesolvertoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtreatedascoincident points.
•CreoParametric hasadefaultvaluesetforepsilon.Thisvalueisalsousedin
theSketcheruserinterface.
•Iftheinputgeometryisaccurateandtheuserdoesnotwantthesolverto
changeitbyaddingconstraints, thensetthevalueofepsilonto1E-9.
•Iftheinputgeometryisnearlyaccurateandtheuserwantsthesolvertoguess
theintentbyaddingconstraints andfurtheraligningthegeometry,theninthis
caseepsilonshouldreflectthemaximalproximity betweengeometrytobe
constrained.
•Youcannotsetthevalueofepsilontozero.
Thefunctions ProSecdimValueGet() andProSecdimValueSet()
enableyoutoaccessthevalueofadimension. Ifyouchangedimension values,
youmustcallProSectionRegenerate() torecalculate thenewsection
shape.
978 Creo®Parametric TOOLKIT User’sGuideAutomaticSectionDimensioning
FunctionIntroduced:
•ProSectionAutodim()
Thefunction ProSectionAutodim() isusedtoautomatically addneeded
dimensions toasectiontomakeitfullyconstrained. Ittakesasinputa
ProSection handleandapointertotheopaquestructurecalledxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProSectionAutodim() isusedtoautomatically addneeded
dimensions toasectiontomakeitfullyconstrained. Ittakesasinputa
ProSection handleandapointertotheopaquestructurecalled
ProWSecerror. Beforecallingthisfunction,besuretoallocatethepointerto
ProWSecerror using ProSecerrorAlloc(). Anyerrorsresultingfromthe
calltothefunction ProSectionAutodim() arestoredinthe
ProWSecerror structure.Tofreetheallocatedmemory,callthefunction
ProSecerrorFree().
TheProSectionAutodim() functioncanbeusedonasectionwhereno
dimensions havebeencreatedyet,aswellasonapartiallydimensioned section.
Ifdimensions havebeenaddedsuccessfully ,thefunction
ProSectionAutodim() alsosolvestheinputsection.
Note
Thefunction ProSectionAutodim() isnotsupported forsectionsthat
havetheIntentManagerpropertysettoON.
AddingSectionEntities
Functions Introduced:
•ProSectionEntityAdd()
•ProSectionEntityDelete()
•ProSectionEntityReplace()
Thefunction ProSectionEntityAdd() takesasinputtheProSectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAddingSectionEntities
Functions Introduced:
•ProSectionEntityAdd()
•ProSectionEntityDelete()
•ProSectionEntityReplace()
Thefunction ProSectionEntityAdd() takesasinputtheProSection
thatidentifiesthesection,andapointertoauser-visiblestructurecalled
Pro2dEntdef, whichdefinestheentity.
ThePro2dEntdef structureisagenericstructurethatcontainsonlyafield
indicating thetypeofentity.Foreachtypeofentity,thereisadedicatedstructure
thathastheentitytypeasitsfirstfield;thesestructuresarenamed
Pro2dLinedef, Pro2dArcdef, andsoon.TheCreoParametric TOOLKIT
application buildsupthestructureappropriate totheentitytobeadded,andinputs
ittoProSectionEntityAdd() bycastingitsaddressto(Pro2dEntdef*).
TheentitystructuresaredeclaredintheincludefilePro2dEntdef.h.
ElementTrees:Sections 979Thefunction ProSectionEntityAdd() outputsanintegerthatisthe
identifierofthenewentitywithinthesection.TheCreoParametric TOOLKIT
application needsthesevaluesbecausetheyareusedtorefertoentitieswhen
addingdimensions.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxidentifierofthenewentitywithinthesection.TheCreoParametric TOOLKIT
application needsthesevaluesbecausetheyareusedtorefertoentitieswhen
addingdimensions.
Thefollowingcodefragmentdemonstrates howtoaddasinglelineentity.
Pro2dLinedef line;
int line_id;
line.type =PRO_2D_LINE;
line.end1[0] =0.0;
line.end1[1] =0.0;
line.end2[0] =10.0;
line.end2[1] =0.0;
ProSectionEntityAdd (section,
(Pro2dEntdef*)&line, &line_id);
Thefunction ProSectionEntityDelete() enablesyoutodeleteasection
entityfromthespecifiedsection.
Thefunction ProSectionEntityReplace() enablesyoutoreplacean
existingentityfromthespecifiedsectionwithanotherentityinthesamesection.
Thisfunctionality enablesyoutoredefineanexistingsectionprogrammatically .
Tousethefunction ProSectionEntityReplace(), youmustfirstaddthe
newentitytothesection(togetitsidentifier), thenreplacetheoldentityidentifier
withthenewone.
AccessingSelectionReferenceoftheEntity
Functions Introduced:
•ProSectionEntityGetSelected()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnewentitytothesection(togetitsidentifier), thenreplacetheoldentityidentifier
withthenewone.
AccessingSelectionReferenceoftheEntity
Functions Introduced:
•ProSectionEntityGetSelected()
Thefunction ProSectionEntityGetSelected() providesthereferences
oftheselectedentity.Theinputargumentsofthisfunctionare:
•handle—The sectionhandle.
•entity_id—The identifierofthesectionentity.
•pnt_type—Specifies thetypeofpointselectionontheentity.Thevalidvalues
are:
○PRO_ENT_WHOLE—Specifies thewholeentity.
○PRO_ENT_START—Specifies thestartpointoftheentity.
○PRO_ENT_END—Specifies theendpointoftheentity.
○PRO_ENT_CENTER—Specifies thecenteroftheentity.
980 Creo®Parametric TOOLKIT User’sGuide○PRO_ENT_LEFT_TANGENT—Specifies thepointontheentity,wherethe
normalized paramvalueis0.5.
○PRO_ENT_RIGHT_TANGENT—Specifies thepointontheentity,where
thenormalized paramvalueis0.0.
○PRO_ENT_TOP_TANGENT—Specifies thepointontheentity,wherethe
normalized paramvalueis0.25.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_ENT_RIGHT_TANGENT—Specifies thepointontheentity,where
thenormalized paramvalueis0.0.
○PRO_ENT_TOP_TANGENT—Specifies thepointontheentity,wherethe
normalized paramvalueis0.25.
○PRO_ENT_BOTTOM_TANGENT—Specifies thepointontheentity,where
thenormalized paramvalueis0.75.
•pnt—Specifies thelocationofthepointontheentitygeometry.
•idx_pnt—Specifies theindexofinterpolation pointrelativetopnt_type,ifthe
sectionentityisaspline.Inthiscasethevalueoftheargument pntisignored.
Specify PRO_VALUE_UNUSED iftheentityisnotaspline.
Thisfunctioncreatestheselectionobjectprogrammatically foruseinfunctions
thatrequireselectionreferences ofentitiesastheinput.
Construction Entities
Functions Introduced:
•ProSectionEntityIsConstruction()
•ProSectionEntityConstructionSet()
Usethefunction ProSectionEntityIsConstruction() todetermine if
thespecifiedentityisaconstruction entity.Construction entitiesareusedfor
referenceandarenotusedtocreatefeaturegeometry.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProSectionEntityIsConstruction() todetermine if
thespecifiedentityisaconstruction entity.Construction entitiesareusedfor
referenceandarenotusedtocreatefeaturegeometry.
Thefunction ProSectionEntityConstructionSet() setsthespecified
entitytobeoftypeconstruction.
ModifyingEntities
Functions Introduced:
•ProSectionEntityIntersectionGet()
•ProSectionEntityParamEval()
•ProSectionEntityCorner()
•ProSectionEntityDivide()
Thefunction ProSectionEntityIntersectionGet() returnsthe
intersection pointsbetweenthetwosectionentities.Usethefunction
ProArrayFree() tofreethememory.
Thefunction ProSectionEntityParamEval() tofindthecorresponding
normalized parameter onthecurve,giventheXYpoint.
ElementTrees:Sections 981Thefunction ProSectionEntityCorner() trimstheselectedentitiesto
eachother.Theselectedentitiesmaynotintersectwitheachother.Theentities
maybetrimmedbyeithercuttingthemorextending them.
Usethefunction ProSectionEntityDivide() todivideasectionentityxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxeachother.Theselectedentitiesmaynotintersectwitheachother.Theentities
maybetrimmedbyeithercuttingthemorextending them.
Usethefunction ProSectionEntityDivide() todivideasectionentity
intotwoormorenewentities.Iftheentityisdimensioned thendeletethe
dimensions beforedividingit.
AddingSectionDimensions
Functions Introduced:
•ProSecdimCr eate()
•ProSecdimDelete()
•ProSecdimDiameterSet()
•ProSecdimDiameterClear()
•ProSecdimDiameterInquir e()
•ProSecdimStr engthen()
•ProSecdimLockSet()
•ProSecdimIsLocked()
Whenyoucreateadimension interactively inSketchermode,youselectentities
andpointsonentitiesandCreoParametric deducesfromthosepickswhattypeof
dimension isbeingadded.Whenyouaddadimension usingthefunction
ProSecdimCreate(), youmustspecifythedimension type.Thedimension
typesaredefinedintheincludefileProSecdimTypes.h. Thefollowingtable
liststhepossiblevalues.
Constant Description
PRO_TK_DIM_LINE Lengthofaline
PRO_TK_DIM_LINE_POINT DistancebetweenalineandavertexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypesaredefinedintheincludefileProSecdimTypes.h. Thefollowingtable
liststhepossiblevalues.
Constant Description
PRO_TK_DIM_LINE Lengthofaline
PRO_TK_DIM_LINE_POINT Distancebetweenalineandavertex
PRO_TK_DIM_RAD Radiusofanarcoracircle
PRO_TK_DIM_DIA Diameterofanarcoracircle
PRO_TK_DIM_LINE_LINE Distancebetweentwolines
PRO_TK_DIM_PNT_PNT Distancebetweentwopoints
PRO_TK_DIM_PNT_PNT_HORIZ Distancebetweentwopoints(Xcoordinates)
PRO_TK_DIM_PNT_PNT_VERT Distancebetweentwopoints(Ycoordinates)
PRO_TK_DIM_AOC_AOC_TAN_HORIZ Horizontal distancebetweentwoarcsorcircles
PRO_TK_DIM_AOC_AOC_TAN_VERT Verticaldistancebetweentwoarcsorcircles
PRO_TK_DIM_ARC_ANGLE Angleofanarc
PRO_TK_DIM_LINES_ANGLE Anglebetweentwolines
PRO_TK_DIM_LINE_AOC Distancebetweenalineandanarcoracircle
PRO_TK_DIM_LINE_CURVE_ANGLE Anglebetweenasplineandaline
PRO_TK_DIM_3_PNT_ANGLE Angulardimension definedbythreepoints
982 Creo®Parametric TOOLKIT User’sGuideConstant Description
PRO_TK_DIM_DIA_LINEAR LineardiameterdimensionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_TK_DIM_3_PNT_ANGLE Angulardimension definedbythreepoints
982 Creo®Parametric TOOLKIT User’sGuideConstant Description
PRO_TK_DIM_DIA_LINEAR Lineardiameterdimension
PRO_TK_DIM_PNT_PNT_ORI Distancebetweentwopointsinspecifiedorientation
PRO_TK_DIM_AOC_AOC_ORI Distancebetweentwoarcsorcirclesinspecified
orientation
PRO_TK_DIM_TOT_INC_ANG Totalincludedangle
PRO_TK_DIM_ANG_POLAR Anglebetweenthex-axisandavector.Thevectoris
definedbytwopoints
Thefunction ProSecdimCreate() takesseveralinputarguments,including
thefollowing:
•intentity_ids[]—An arrayofintegersthataretheidentifiers ofthesection
entitiestowhichthedimension refers.
•ProSectionPointType point_types[]—A dimension canreferencea
vertex(theendofanentity),thecenterofanarcoracircle,alineorcircle
itself(thewholeentity),ortangentpointsonanarcoracircle.Tospecify
thesetypesofdimension referencepoints,specifytheappropriate pointtype
constantforeachdimension intheentity_ids array.Theseconstantsare
listedintheincludefileProSecdimType.h.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesetypesofdimension referencepoints,specifytheappropriate pointtype
constantforeachdimension intheentity_ids array.Theseconstantsare
listedintheincludefileProSecdimType.h.
•intnum_ids—The numberofsectiondimension identifiers intheentity_
idsarray.Thisistypically1or2(linelengthversusapoint-to-point
dimension).
•ProSecdimType dim_type—The typeofsectiondimension tocreate,as
listedintheProSecdimType.h file.
•Pro2dPnt place_pnt—The two-dimensional locationofthedimension label.
Thisisequivalent tothemiddlemousebuttonpickwhenyouareusing
Sketchermode.
Notethatthepositionofthislabelcansometimes determine theexactroleof
thedimension. Forexample,adimension oftypePRO_TK_DIM_LINES_
ANGLEmayrefertotheacuteorobtuseanglebetweentwolines,depending
onwherethelabelispositioned.
TheProSecdimCreate() functionoutputstheidentifierofthedimension,
whichisneededtoidentifythedimension ifitsvalueneedstobechangedata
latertime.
Note
Thedimensions donotneedtobegivenvaluestocreateacompleteandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichisneededtoidentifythedimension ifitsvalueneedstobechangedata
latertime.
Note
Thedimensions donotneedtobegivenvaluestocreateacompleteand
correctsectionofanyform.SeethesectionSolvingandRegenerating a
Sectiononpage976foradetailedexplanation oftheassignment ofvalues.
ElementTrees:Sections 983Thefollowingcodefragmentshowshowtocreateadimension forthelengthofa
lineentity.
int line_id[1], width_dim;
Pro2dPnt point;
ProSectionPointType pnt_type[1];
line_id[0] =1;
point[0] =5.0;
point[1] =1.0;
pnt_type[0] =PRO_ENT_WHOLE;
ProSecdimCreate (section, line_id, pnt_type, 1,
PRO_TK_DIM_LINE, point,
&width_dim);
Thefollowingcodefragmentshowshowtocreateadimension forthehorizontal
distancebetweentwoarcends.
int arc1_id, arc2_id, arc1_end2, arc2_end1,
dist_dim;
Pro2dPnt point;
int entities[2];
ProSectionPointType pnt_types[2];
pnt_types[0] =PRO_ENT_START;
pnt_types[1] =PRO_ENT_END;
entity[0] =arc1_end2;
entity[1] =arc2_end1;
point[0] =5.0;
point[1] =5.0;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPro2dPnt point;
int entities[2];
ProSectionPointType pnt_types[2];
pnt_types[0] =PRO_ENT_START;
pnt_types[1] =PRO_ENT_END;
entity[0] =arc1_end2;
entity[1] =arc2_end1;
point[0] =5.0;
point[1] =5.0;
ProSecdimCreate (section, entities, pnt_types, 2,
PRO_TK_DIM_PNT_PNT_HORIZ, point, &dist_dim);
TheProSecdimDiam...() functionsextendthedimension creation
functionality toincludediametersforsectionsusedtocreaterevolvedfeatures.
Function ProSecdimDiamSet() convertsaspecifiedsectiondimension
(betweenacenterline andanotherentity)intoadiameterdimension.
ProSecdimDiamClear() doestheopposite,converting adiameterdimension
intoaregularone.Usefunction ProSecdimDiamInquire() todetermine ifa
dimension isadiameterdimension.
Thefunction ProSecdimStrengthen() convertsaweakdimension toa
strongdimension.
Youcanlockorunlocksketchdimensions. Lockingofdimensions avoids
modifications tothesectionsoutsidethesketchermode.Thefunction
ProSecdimIsLocked() determines whetherasketchdimension islocked.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanlockorunlocksketchdimensions. Lockingofdimensions avoids
modifications tothesectionsoutsidethesketchermode.Thefunction
ProSecdimIsLocked() determines whetherasketchdimension islocked.
Usethefunction ProSecdimLockSet() tolockorunlockaspecified
dimension.
984 Creo®Parametric TOOLKIT User’sGuideExample1:CreatingSplinePointDimensions in
Sections
ThesamplecodeinUg3DSectSplineDim.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateaSectiondimension betweenthefirstandlastinterpolation pointof
aSpline.
ErrorReporting
Functions Introduced:
•ProSecerro rAlloc()
•ProSecerro rCount()
•ProSecerro rMsgGet()
•ProSecerro rItemGet()
•ProSecerro rAdd()
•ProSecerro rFree()
BothProSectionSolve() andProSectionRegenerate() mightresult
inalistoferrorsabouttheentitiesinthesection.Theseerrorsarestoredinan
opaquestructurecalled ProWSecerror. Beforecallingoneofthesefunctions,
useProSecerrorAlloc() toallocatememoryforanerrorstructure,thenpassxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxopaquestructurecalled ProWSecerror. Beforecallingoneofthesefunctions,
useProSecerrorAlloc() toallocatememoryforanerrorstructure,thenpass
thepointertotheerrorstructuretoProSectionSolve() or
ProSectionRegenerate().
Youcanaddapplication-specific sectionerrorstoanerrorstructure.Todothis,
callthefunction ProSecerrorAdd().
Thefunction ProSecerrorCount() tellsyouhowmanyerrormessagesare
containedintheerrorstructure.Theerrorsthemselves areidentifiedbysequential
integers,soyoucanstepthroughthelist.Usethefunction
ProSecerrorMsgGet() togetthetextofeachmessage.Usethefunction
ProSecerrorItemGet() togettheidentifieroftheproblementitythat
causedaspecificerrormessage.Tofreetheallocatedmemory,callthefunction
ProSecerrorFree().
ACreoParametric TOOLKITapplication thatbuildssectionsgenerallyaimsto
makethemcompleteandcorrectwithoutanyinteractive helpfromtheCreo
Parametric user.Therefore, theerrorsreportedbythefunctions
ProSectionSolve() andProSectionRegenerate() aredirectedatthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmakethemcompleteandcorrectwithoutanyinteractive helpfromtheCreo
Parametric user.Therefore, theerrorsreportedbythefunctions
ProSectionSolve() andProSectionRegenerate() aredirectedatthe
CreoParametric TOOLKITdeveloper asadebugging aid,ratherthanatthefinal
CreoParametric user.
ThefollowingcodefragmentshowsacalltoProSectionSolve() andan
analysisoftheerrorsproduced.
ProWSecerror errors;
ElementTrees:Sections 985int n_errors, e;
ProError status;
ProMsg wmsg;
char msg[PRO_PATH_SIZE];
int ent_id;
ProSecerrorAlloc (&errors);
status =ProSectionSolve (section, &errors);
if(status !=PRO_TK_NO_ERROR)
{
ProSecerrorCount (&errors, &n_errors);
for (e=0;e<n_errors; e++)
{
ProSecerrorMsgGet (errors, e,wmsg);
ProWstringToString (msg, wmsg);
ProSecerrorItemGet (errors, e,&ent_id);
printf ("%s: Problem ID, %d\n", msg, ent_id);
}
ProSecerrorFree (&errors);
return (-1);
}
RetrievingandSavingaSection
Functions Introduced:
•ProFeatur eNumSectionsGet()
•ProFeatur eSectionCopy()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprintf ("%s: Problem ID, %d\n", msg, ent_id);
}
ProSecerrorFree (&errors);
return (-1);
}
RetrievingandSavingaSection
Functions Introduced:
•ProFeatur eNumSectionsGet()
•ProFeatur eSectionCopy()
Toretrieveasectionfromdisk,usethefunction ProMdlnameRetrieve()
withthemodeltypePRO_2DSECTION. Youcansaveasectiontoafileusingthe
function ProMdlSave().
Youcanalsoretrieveorcopyasectionfromafeature.Thefunction
ProFeatureNumSectionsGet() findsthenumberofsectionsinthe
specifiedfeature.Givenafeaturehandleandsectionindex,
ProFeatureSectionCopy() initializesandreturnsasectionhandletoa
sectioncopiedfromthespecifiedfeature.Memoryforthissectioniscontrolled by
theCreoParametric TOOLKITapplication andmustthereforebefreedbyacall
toProSectionFree().
Example1:CreatingaSectionModel
ThesamplecodeinUgSectModelCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat
illustrateshowtouseallthefunctionsdescribedinthischaptertocreateasection
model.
986 Creo®Parametric TOOLKIT User’sGuide44xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloadpoint>/protk_appls/pt_userguide/ptu_featcreat
illustrateshowtouseallthefunctionsdescribedinthischaptertocreateasection
model.
986 Creo®Parametric TOOLKIT User’sGuide44
ElementTrees:SketchedFeatures
Overview................................................................................................................988
CreatingFeaturesContainingSections.....................................................................989
CreatingFeatureswith2DSections.........................................................................990
VerifyingSectionShapes.........................................................................................991
CreatingFeatureswith3DSections..........................................................................992
ReferenceEntitiesandUseEdge.............................................................................992
ReusingExistingSketches.......................................................................................994xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxReusingExistingSketches.......................................................................................994
ThischapterdescribestheCreoParametric TOOLKITfunctionsthatenableyouto
createandmanipulate sketchedfeatures.
Sketchedfeaturesarefeaturesthatrequireoneormoresectionstocompletely
definethefeature,suchasextrudedandrevolvedprotrusions.
Thischapteroutlinesthenecessarystepstoprogrammatically createsketched
featuresusingCreoParametric TOOLKIT.
987Overview
ThechapterElementTrees:Principles ofFeatureCreationonpage749explains
howtocreateasimplefeatureusingthefeatureelementtree,andthe
documentation inthechapteronElementTrees:Sectionsonpage971explains
howtocreateasection.Thischapterexplainshowtoputthesemethodstogether,
withafewadditional techniques, tocreatefeaturesthatcontainsketchedsections.
ElementTreeforSketchedFeatures
Theelementtreeofanyfeaturethatcontainsasketchcontainsasubtreethat
identifiesthesketchobjectanddescribeshowitispositioned inthemodel.AsthisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTreeforSketchedFeatures
Theelementtreeofanyfeaturethatcontainsasketchcontainsasubtreethat
identifiesthesketchobjectanddescribeshowitispositioned inthemodel.Asthis
subtreeisthesameforeverysketchedfeature,itisdocumented initsownheader
file,called ProStdSection.h. Thediagrambelowshowsthestructureofthat
subtree.
ElementTreeforSketchedFeatures
ThesubtreeofthePRO_E_STD_SEC_SETUP_PLANE elementdefinesthe
sketchplane,thelocationofthesketchplane,theorientation planeandthe
orientation direction,andtheviewingdirection.YoucanuseIntentPlanesas
sketchorientation orplacement references.
Theelement PRO_E_SKETCHER isoftypePOINTER, anditsvalueistheobject
ProSection, introduced inthedocumentation inthechapteronSections.
Theelement PRO_E_SEC_USE_SKETCH referstoanyvalidselected'Sketch'
(sketcheddatumcurve)suitabletothecurrentSketchBasedFeature.Whenthis
elementisused,thesketchwillbestoredinthefeatureasareferencetothesketch
feature,andnointernalsection,sketchplaneororientation willberequired.Usingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementisused,thesketchwillbestoredinthefeatureasareferencetothesketch
feature,andnointernalsection,sketchplaneororientation willberequired.Using
thiselementinthePRO_E_STD_SECTION elementtreeallowsafeaturetobe
createdinonestep,withoutcreatingthefeaturefirstasincomplete.
988 Creo®Parametric TOOLKIT User’sGuideNote
Theuseofinternalsections,andtheprocessbywhichaninternal-section
basedfeatureiscreated,remainsunchanged inPro/ENGINEER Wildfire2.0.
Thefollowingtableshowsthesketchedfeaturesthataresupported byCreo
Parametric TOOLKIT, thenamesofthecorresponding headerfileswhichshow
theirelementtrees,andtheIDsoftheelementsineachtreewhichcontainthe
standardsketchsubtreeasshownintheabovefigureElementTreeforSketched
Features
Feature Header ElementcontainingSubtree
Extrude ProExtrude.h PRO_E_STD_SECTION
Revolve ProRevolve.h PRO_E_STD_SECTION
Rib ProRib.h PRO_E_STD_SECTION
Hole ProHole.h PRO_E_SKETCHER (2D)
Fill(Flatdatumsurface) ProFlatSrf.h PRO_E_STD_SECTION
Draft ProDraft.h PRO_E_STD_SECTIONxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRevolve ProRevolve.h PRO_E_STD_SECTION
Rib ProRib.h PRO_E_STD_SECTION
Hole ProHole.h PRO_E_SKETCHER (2D)
Fill(Flatdatumsurface) ProFlatSrf.h PRO_E_STD_SECTION
Draft ProDraft.h PRO_E_STD_SECTION
Sketcheddatumcurve ProDtmCrv.h PRO_E_STD_SECTION
Sketcheddatumpoint ProDtmCrv.h PRO_E_STD_SECTION
Simple(constant) sweep ProSweep.h PRO_E_SWEEP_SPINE
PRO_E_SWEEP_SECTION(2D)
CreatingFeaturesContaining Sections
ThechapterElementTrees:Principles ofFeatureCreationonpage749explained
thattocreateafeaturefromanelementtree,youbuildthetreeofelementsusing
ProElementAlloc(), ProElemtreeElementAdd(), andsoon,andthen
callProFeatureCreate() tocreatethefeatureusingthetree.Ifthefeatureis
tocontainasketch,thesequenceisalittlemorecomplex.
Asexplainedinthedocumentation inthesectionchapteronElementTrees:
Sectionsonpage971,a2Dsectionstoredinamodelfilecanbeallocatedby
calling ProSection2dAlloc(). Instead,CreoParametric mustallocateas
partoftheinitialcreationofthesketchedfeature,asectionthatwillbepartofaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSectionsonpage971,a2Dsectionstoredinamodelfilecanbeallocatedby
calling ProSection2dAlloc(). Instead,CreoParametric mustallocateas
partoftheinitialcreationofthesketchedfeature,asectionthatwillbepartofa
feature.Theallocation isdonebycalling ProFeatureCreate() withan
elementtreewhichdescribesatminimumthefeaturetypeandform,inorderto
createanincomplete feature.Increatingthefeature,CreoParametric calculates
thelocationandorientation ofthesection,andallocatestheProSection object.
ThissectionisthenretrievedfromthevalueofthePRO_E_SKETCHER element
thatisfoundintheelementtreeextractedfromthecreatedfeature.Filltheempty
sectionusing ProSection relatedfunctions.
ElementTrees:SketchedFeatures 989Afteraddingthesectioncontentsandtheremaining elementsinthetree,addthe
newinformation tothefeatureusing ProFeatureRedefine().
ToCreateSketchedFeaturesElementTrees
1.Buildanelementtreebutdonotincludetheelement PRO_E_SKETCHER.
2.CallProFeatureCreate() withtheoption PRO_FEAT_CR_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxToCreateSketchedFeaturesElementTrees
1.Buildanelementtreebutdonotincludetheelement PRO_E_SKETCHER.
2.CallProFeatureCreate() withtheoption PRO_FEAT_CR_
INCOMPLETE_FEAT, sothattheincomplete elementtreeisaccepted.
3.Extractthevalueoftheelement PRO_E_SKETCHER createdbyCreo
Parametric fromanelementtreeextractedusing
ProFeatureElemtreeExtract() ontheincomplete feature.
4.UsingthatvalueastheProSection object,createthenecessarysection
entitiesanddimensions, andsolvethesection.
5.Addanyotherelementsnotpreviously addedtothetree,suchasextrusion
depth.Thedepthelementsmayalsobeaddedbeforethecreationof
incomplete feature(beforestep2).
6.CallProFeatureRedefine() withthecompleted elementtree.
CreatingFeatureswith2DSections
Sketchedfeaturesusing2Dsectionsdonotrequirereferences toothergeometryin
theCreoParametric model.Someexamplesofwhere2Dsectionsareusedare:
•Basefeatures,sometimes calledfirstfeatures.Thistypeoffeaturemustbethe
firstfeaturecreatedinthemodel,andbeoftypePRO_FEAT_FIRST_FEAT.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheCreoParametric model.Someexamplesofwhere2Dsectionsareusedare:
•Basefeatures,sometimes calledfirstfeatures.Thistypeoffeaturemustbethe
firstfeaturecreatedinthemodel,andbeoftypePRO_FEAT_FIRST_FEAT.
•Sketchedholefeatures.
•ThePRO_E_SWEEP_SECTION sectionofasimplesweepfeature.
Tocreate2Dsketchedfeatures,followthestepsoutlinedinthesectionToCreate
SketchedFeaturesElementTreesonpage990.
Note
For2Dsketchedfeatures,youneednotspecifysectionreferences oruse
projected3Dentities.Entitiesina2Dsectionaredimensioned tothemselves
only.A2Dsectiondoesnotrequireanyelementsinthetreetosetupthesketch
planeortheorientation ofthesketch.Thus,thePRO_E_STD_SEC_SETUP_
PLANEsubtreeisnotincluded.
990 Creo®Parametric TOOLKIT User’sGuideVerifyingSectionShapes
FunctionIntroduced:
•ProSectionShapeGet()
Certainfeaturesmayormaynotbeabletouseasectionduetotheshapeofthe
section.Differentsketchedfeaturetoolssuchasextrudeandrevolvehave
differentrequirements forsections.Forexample,solidprotrusions containonlyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsection.Differentsketchedfeaturetoolssuchasextrudeandrevolvehave
differentrequirements forsections.Forexample,solidprotrusions containonly
closedandnon-intersecting sections.Solidcutsordatumsurfaceshaveopennon-
intersecting sections.Fillfeaturesmusthaveclosedsections.
Afterthesectionisregenerated, ProSectionShapeGet() obtainstheshape
ofagivensection.Thisinformation isusedtodetermine ifthesectionis
acceptable forfeaturecreation.
Thesectionshapesareasfollows:
Constant Function Description
PRO_SECSHAPE_EMPTY ProSectionShapeGet() Anemptysection
PRO_SECSHAPE_POINTS ProSectionShapeGet() Sectioncontainsonlysketched
datumpoints
PRO_SECSHAPE_1_OPEN_
LOOPProSectionShapeGet() Sectioncontainsasingleopen
loop(andpossiblypoints)
PRO_SECSHAPE_1_CLOSED_
LOOPProSectionShapeGet() Sectioncontainsasingleclosed
loop(andpossiblypoints)
PRO_SECSHAPE_MIXED_
LOOPSProSectionShapeGet() Sectioncontainsatleastoneopen
andoneclosedloop(andpossibly
points)
PRO_SECSHAPE_MULTI_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloop(andpossiblypoints)
PRO_SECSHAPE_MIXED_
LOOPSProSectionShapeGet() Sectioncontainsatleastoneopen
andoneclosedloop(andpossibly
points)
PRO_SECSHAPE_MULTI_
OPEN_LOOPSProSectionShapeGet() Sectioncontainsmultipleopen
loops(andpossiblypoints)
PRO_SECSHAPE_MULTI_
CLOSED_LOOPSProSectionShapeGet() Sectioncontainsmultipleclosed
loops(andpossiblypoints)
PRO_SECSHAPE_
INTERSECTINGProSectionShapeGet() Sectioncontainsloopsthat
intersecteachother(andpossibly
points)
Note
Usegeometryentitiesandnotconstruction entitiestodefinesectionshapes
thatarethenusedtocreatesolidorsurfacegeometry.Toconvertthe
construction entitiestogeometryentities,usethefunction
ProSectionEntityConstructionSet() withtheinputargument
construction settoPRO_B_FALSE.
ElementTrees:SketchedFeatures 991CreatingFeatureswith3DSections
A3Dsectionneedstodefineitslocationwithrespecttotheexistinggeometrical
features.Thesubtreecontainedintheelement PRO_STD_SEC_SETUP_PLANExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:SketchedFeatures 991CreatingFeatureswith3DSections
A3Dsectionneedstodefineitslocationwithrespecttotheexistinggeometrical
features.Thesubtreecontainedintheelement PRO_STD_SEC_SETUP_PLANE
definesthelocationofthesketchplaneEdge entities;anyother2Dentitiesinthe
sketchmustbedimensioned tothoseentities,sothattheir3Dlocationisfully
defined.
3DSectionLocationintheOwningModel
FunctionIntroduced:
•ProSectionLocationGet()
Fora2Dsectioninafeature,CreoParametric decideswherethesectionwillbe
positioned in3D.
Ifthesectionis3D,thefeaturetreeelementsbelow PRO_E_STD_SEC_SETUP_
PLANEspecifythesketchplane,thedirectionfromwhichitisbeingviewed,an
orientation reference, andadirectionwhichthatreferencerepresents (TOP,
BOTTOM,LEFTorRIGHT).WhenyoucallProFeatureCreate(), this
information isusedtocalculatethe3Dplaneinwhichthesectionlies,andits
orientation inthatplane.
Thepositionofthesectionoriginintheplaneisnotimpliedbytheelementtree,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation isusedtocalculatethe3Dplaneinwhichthesectionlies,andits
orientation inthatplane.
Thepositionofthesectionoriginintheplaneisnotimpliedbytheelementtree,
andcannotbespecifiedbytheCreoParametric TOOLKITapplication: positionis
chosenarbitrarily byCreoParametric. Thisisbecausetheinteractive userofCreo
Parametric neverdealsinabsolutecoordinates, anddoesn’tneedtospecify,or
evenknow,thelocationoftheoriginofthesection.InCreoParametric TOOLKIT
describeallsectionentitiesintermsoftheircoordinate values,soyouneedtofind
outwhereCreoParametric hasputtheoriginofthesection.Thisistheroleofthe
function ProSectionLocationGet().
ProSectionLocationGet() providesthetransformation matrixthatgoes
from2Dcoordinates withinthesectionto3Dcoordinates oftheowningpartor
assembly.Thisisequivalent todescribing thepositionandorientation ofthe2D
sectioncoordinate systemwithrespecttothebasecoordinate systemofthe3D
model.
SoProSectionLocationGet() canbecalledinordertocalculatewheretoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectioncoordinate systemwithrespecttothebasecoordinate systemofthe3D
model.
SoProSectionLocationGet() canbecalledinordertocalculatewhereto
positionnewsectionentitiessothattheyareinthecorrect3Dpositioninthepart
orassembly.
ReferenceEntitiesandUseEdge
Functions introduced:
•ProSectionEntityFr omPr ojection()
•ProSectionEntityIsPr ojection()
992 Creo®Parametric TOOLKIT User’sGuide•ProSectionEntityUseEdge()
•ProSectionEntityUseEdgeLoop()
•ProSectionEntityUseEdgeChain()
•ProSectionEntityRefer enceGet()
Theprevioussectionexplainedhowtosetthecorrect3Dpositionofnewsection
entities.Youalsoneedtomaketheentitiesparametric, thatis,toensurethatCreo
Parametric knowshowtocalculatetheirnewpositionsduringregeneration.
WhensketchingasectionusingCreoParametric, entitiesarepositioned
parametrically bydimensioning themoraligningthemtoitemsinthe3Dmodel.
CreoParametric TOOLKITdoesnotallowyoutoexplicitlyalignsectionentities,
butyoucanadddimensions whichrelatesectionentitiesto3DentitiesinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKITdoesnotallowyoutoexplicitlyalignsectionentities,
butyoucanadddimensions whichrelatesectionentitiesto3Dentitiesinthe
owningmodel.Youcandothisusingreferences. Areferenceentityrepresents a
positioninthesectionofanitemina3Dmodelthatisusedasadimension
reference. Thereferenceentityitselfdoesnotgiveriseto3Dgeometryinthe
owningfeature.Reference entitiesarevisibleininteractive sketcheroperations;
theyareshownasdashedandareusedduringautodimensioning andalignment
operations.
InCreoParametric TOOLKITreferenceentitiesarecreatedusing
ProSectionEntityFromProjection(). Thisfunctiontakesasinputa
ProSelection describing the3Dmodelentitybeingprojected, andoutputsthe
integerIDoftheresultingknownsectionentity.ThisIDisusedtospecifythe
attachment ofasectiondimension, asdescribedinthedocumentation inthe
sectionchapterElementTrees:Sectionsonpage971.Reference entitiesare
includedintheoutputofProSectionEntityIdsGet(), butcanbe
distinguished fromregularsectionentitiesbycallingthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionchapterElementTrees:Sectionsonpage971.Reference entitiesare
includedintheoutputofProSectionEntityIdsGet(), butcanbe
distinguished fromregularsectionentitiesbycallingthefunction
ProSectionEntityIsProjection().
Toalignasectionentitywitha3Dmodelentity,projectthe3Dentitytocreatea
referenceentity,andtheneitheraddadimension betweenthisreferenceentityand
theonetobealignedoruseProSectionAutodim() todothis.
Tocreatearegularsectionentitywhosegeometryisitselfanexactprojection ofa
3Dmodelentity,createitandalignitinasinglestepusingthefunction
ProSectionEntityUseEdge(). Thisfunctionhasthesameargumentsas
ProSectionEntityFromProjection(), anditcreatesareferenceentity
inthesameway,butitrequiresanadditional stepofcopyingthereferenceentity
toaregularentitywiththesamegeometry.ItoutputstheIDoftheregularentityit
creates.TheIDofthereferenceentityisalways1lessthantheIDoftheregular
entity.
ProSectionEntityUseEdge() isequivalent totheCreoParametric
sketchercommandUseEdge.Thefunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreates.TheIDofthereferenceentityisalways1lessthantheIDoftheregular
entity.
ProSectionEntityUseEdge() isequivalent totheCreoParametric
sketchercommandUseEdge.Thefunctions
ProSectionEntityUseEdgeLoop() and
ProSectionEntityUseEdgeChain() allowyoutoexecuteaUseEdge
operationonmultipleedgessimultaneously .
ElementTrees:SketchedFeatures 993Note
Ifyoucreatetheknownandprojectedentitiesfirst,youneednotcall
ProSectionLocationGet() asdescribedabove;insteadyoucanlookat
thegeometryoftheknownandprojectedentities,andthenpositionthenew
entitiesrelativetotheprojectedentities.
Thefunction ProSectionEntityReferenceGet() provides3Dgeometry
thatisareferenceforaprojectedentityinagivensection.
CreatingGeometrybyOffsetting
Thefunctionsdescribedinthissectionenableyoutocreateoffsetentitiesfrom
edgesand3Dcurvesegmentsfromnormal,chainandloopselection.
Functions Introduced:
•ProSectionEntityUseOffset()
•ProSectionEntityUseOffsetChain()
•ProSectionEntityUseOffsetLoop()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxedgesand3Dcurvesegmentsfromnormal,chainandloopselection.
Functions Introduced:
•ProSectionEntityUseOffset()
•ProSectionEntityUseOffsetChain()
•ProSectionEntityUseOffsetLoop()
Thefunction ProSectionEntityUseOffset() createsasketchedentity
thatisoffsetataspecifieddistancefromasingleedge.Thisfunctiontakesas
inputaProSelection objectdescribing the3Dmodelentity.
Thefunction ProSectionEntityUseOffsetChain() createssketched
entitiesthatareoffsetfromachainofedgesorentitiesandthefunction
ProSectionEntityUseOffsetLoop() createssketchedentitiesoffset
fromaloopofedgesorentities.
Thebehaviorofthefunctionsinthissectionissimilartotheoffsetoperation
achievedusingSketch▶▶OffsetinCreoParametric.
ReusingExistingSketches
Functions introduced:
•ProFeatur eSketchAdd()
•ProFeatur eSketchedWi thOptionsCr eate()
CreoParametric allowsyoutocopysectionsfrompreviously createdfeaturesinto
newsketchedfeatures.
Thefunction ProFeatureSketchAdd() copiestheselectedsectionfromone
featuretoanotherfeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric allowsyoutocopysectionsfrompreviously createdfeaturesinto
newsketchedfeatures.
Thefunction ProFeatureSketchAdd() copiestheselectedsectionfromone
featuretoanotherfeature.
994 Creo®Parametric TOOLKIT User’sGuideThefunction ProFeatureSketchedCreate() hasbeendeprecated. Usethe
function ProFeatureSketchedWithOptionsCreate() instead.The
function ProFeatureSketchedWithOptionsCreate() createsafeature
fromtheelementtree,andalsocopiesthesketchedsectionstothenewfeature.
ThisreducesthesketchedfeaturecreationefforttoasingleCreoParametric
TOOLKITfunctioncall.Theelementtreemustcontainalloftherequired
elementsexceptthePRO_E_STD_SECTION subtree.
Example1:CreatinganExtrudedProtrusionBase
Feature
ThesamplecodeinUgSktExtrusionCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showsthecreationofanextrudedprotrusion asabasefeature.
Example2:CreatingaSketchedDatumCurve
ThesamplecodeinUgSketchedCurveCreate.c locatedat<creo_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatcreat showsthecreationofanextrudedprotrusion asabasefeature.
Example2:CreatingaSketchedDatumCurve
ThesamplecodeinUgSketchedCurveCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showsthecreationofasketcheddatumcurveusingthe
conventional approach.
ElementTrees:SketchedFeatures 99545
ElementTrees:Extrudeand
Revolve
TheElementTreeforExtrudedFeatures...................................................................997
TheElementTreeforRevolvedFeatures................................................................1008
TheElementTreeforFirstFeatures........................................................................1017
ThischapterdescribeshowtousetheincludefilesProExtrude.h, and
ProRevolve.h sothatyoucancreateextrudedandrevolvedfeatures
programmatically .AsExtrudeandRevolvefeaturesaresketchedfeatures;we
recommend youtoreadthechaptersElementTrees:Principles ofFeatureCreation
onpage749andElementTrees:SketchedFeaturesonpage987beforereferringxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrecommend youtoreadthechaptersElementTrees:Principles ofFeatureCreation
onpage749andElementTrees:SketchedFeaturesonpage987beforereferring
tothischapter.
996 Creo®Parametric TOOLKIT User’sGuideTheElementTreeforExtrudedFeatures
Theelementtreeforextrudefeaturesisdocumented intheheaderfile
ProExtrude.h. Thefunctions ProFeatureTypeGet() and
ProFeatureSubtypeGet() returnanExtrudefeature.ThetypesofExtrude
featuresare:
•Protrusion
•Cut
•Surface
•SurfaceTrim
•ThinProtrusion
•ThinCut
•Sheetmetal Cut
•Sheetmetal Unattached Wall
RefertothechapterProduction Applications: Sheetmetal onpage1288for
elementdetailsonsheetmetal features.
Theextrudeelementtreecontainstogglestoswitchbetweendifferentfeature
types.Anextrudedfeaturetreealsocontainssubtreessupporting thesectionand
depthparameters forthefeature.
YoucanuseIntentDatumssuchasIntentPoint,IntentAxis,andIntentPlanefor
depthreferenceinextrudefeatures.
Thefollowingfigureshowstheelementtreeforextrudedfeatures.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdepthparameters forthefeature.
YoucanuseIntentDatumssuchasIntentPoint,IntentAxis,andIntentPlanefor
depthreferenceinextrudefeatures.
Thefollowingfigureshowstheelementtreeforextrudedfeatures.
ElementTrees:ExtrudeandRevolve 997TheElementTreeforExtrudedFeature
998 Creo®Parametric TOOLKIT User’sGuideTheelementsareassignedvaluesdepending onthetypeofextrusionyouwantto
create.
Thefollowingtableliststhecommonelementsforalltypesofextrusions andtheir
permissible values:
ElementID Value
PRO_E_FEATURE_TYPE Featuretype,notrequiredforcreation: PRO_FEAT_
PROTRUSION
PRO_FEAT_CUT
PRO_FEAT_DATUM_SURFN
PRO_E_FEATURE_FORM Mandatory =PRO_EXTRUDE
PRO_E_EXT_SURF_CUT_SOLID_TYPE Mandatory
OftypeProExtFeatT ype
=PRO_EXT_FEAT_TYPE_SOLID
forSolidfeaturetype
=PRO_EXT_FEAT_TYPE_SURFACE
forSurfacefeaturetype
PRO_E_REMOVE_MATERIAL MaterialRemoval
OftypeProExtRemMaterial
=PRO_EXT_MATERIAL_ADD
foraProtruded feature
=PRO_EXT_MATERIAL_REMOVE
foraCutfeature
PRO_E_STD_SECTION StandardsectionelementsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_REMOVE_MATERIAL MaterialRemoval
OftypeProExtRemMaterial
=PRO_EXT_MATERIAL_ADD
foraProtruded feature
=PRO_EXT_MATERIAL_REMOVE
foraCutfeature
PRO_E_STD_SECTION Standardsectionelements
PRO_E_BODY Compound Element.Specifiesthebodyoptions.
PRO_E_STD_DIRECTION* Directionofcreation.
OftypeProExtDirection
=PRO_EXT_CR_IN_SIDE_ONE
fordepthinsideone
=PRO_EXT_CR_IN_SIDE_TWO
fordepthinsidetwo
PRO_E_STD_MATRLSIDE* Directionofmaterialaffectedwithrespecttothe
sketch.Requiredforallcuts,allthinfeatures,andfor
solidprotrusions withopensections.
PRO_E_STD_EXT_DEPTH Compound Element.Specifiesthedepthtypeand
valuefortheextrudefeature.
PRO_E_EXT_DEPTH_TO Compound Element.Specifiesthedepthtypeand
valueforSide1,thatis,extrusioninthefirst
directionfromthesketchplane.
ElementTrees:ExtrudeandRevolve 999ElementID Value
PRO_E_EXT_DEPTH_TO_TYPE Mandatory element.Specifiesthetypeofdepthfor
Side1.Thedepthtypeisspecifiedusingthe
enumerated datatypeProExtDepthToType. The
validvaluesare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_EXT_DEPTH_TO_TYPE Mandatory element.Specifiesthetypeofdepthfor
Side1.Thedepthtypeisspecifiedusingthe
enumerated datatypeProExtDepthToType. The
validvaluesare:
•PRO_EXT_DEPTH_TO_BLIND—Extrudes a
sectionfromthesketchingplanetothespecified
depthvalue.
•PRO_EXT_DEPTH_TO_NEXT—Extrudes a
sectionfromthesketchingplanetothefirst
surfacethatitreaches.
•PRO_EXT_DEPTH_TO_ALL—Extrudes a
sectionfromthesketchingplanetothelast
surfaceitreaches.
•PRO_EXT_DEPTH_TO_UNTIL—Extrudes a
sectiontointersectwithaselectedsurface.
•PRO_EXT_DEPTH_TO_REF—Extrudes a
sectiontoaselectedpoint,curve,plane,or
surface.
•PRO_EXT_DEPTH_SYMMETRIC—Extrudes a
sectiononeachsideofthesketchingplaneby
halfofthespecifieddepthvalueineach
direction.
PRO_E_EXT_DEPTH_TO_REF SpecifiesthereferenceelementforSide1,whenthe
depthtypeisPRO_EXT_DEPTH_TO_REF orPRO_
EXT_DEPTH_TO_UNTIL. Thevalidreference
typesare:
•PRO_SURFACE
•PRO_AXIS
•PRO_EDGE
•PRO_CURVE
•PRO_POINT
•PRO_EDGE_START
•PRO_EDGE_END
•PRO_CRV_START
•PRO_CRV_END
•PRO_BODYxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEXT_DEPTH_TO_UNTIL. Thevalidreference
typesare:
•PRO_SURFACE
•PRO_AXIS
•PRO_EDGE
•PRO_CURVE
•PRO_POINT
•PRO_EDGE_START
•PRO_EDGE_END
•PRO_CRV_START
•PRO_CRV_END
•PRO_BODY
PRO_E_EXT_DEPTH_TO_REF_TRF Specifiestheoptionsavailableforthedepthtype
PRO_EXT_DEPTH_TO_REF forSide1.Thedepth
typeisspecifiedusingtheenumerated datatype
ProExtDepthRefOpt. Thevalidvaluesare:
•PRO_EXT_DEPTH_REF_NONE—Extrudes a
sectiontoaselectedpoint,curve,plane,or
surface.
•PRO_EXT_DEPTH_REF_OFFS—Extrudes a
sectiontoanoffsetoftheselectedpoint,curve,
plane,orsurface.
•PRO_EXT_DEPTH_REF_TRNSLT—Extrudes a
sectiontoatranslation oftheselectedpoint,
curve,plane,orsurface.
1000 Creo®Parametric TOOLKIT User’sGuideElementID Value
PRO_E_EXT_DEPTH_TO_REF_TRF_VAL Specifiestheoffsetortranslation valueforSide1,
whenthedepthtypeisPRO_EXT_DEPTH_TO_
REF,andtheoptiontypeisPRO_EXT_DEPTH_
REF_OFFS orPRO_EXT_DEPTH_REF_TRNSLT.
PRO_E_EXT_DEPTH_TO_VALUE SpecifiesthevalueofdepthforSide1,whenthe
depthtypeisPRO_EXT_DEPTH_TO_BLIND orxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxREF,andtheoptiontypeisPRO_EXT_DEPTH_
REF_OFFS orPRO_EXT_DEPTH_REF_TRNSLT.
PRO_E_EXT_DEPTH_TO_VALUE SpecifiesthevalueofdepthforSide1,whenthe
depthtypeisPRO_EXT_DEPTH_TO_BLIND or
PRO_EXT_DEPTH_SYMMETRIC.
PRO_E_EXT_DEPTH_FROM Compound Element.Specifiesthedepthtypeand
valueforSide2,thatis,extrusioninthesecond
directionfromthesketchplane.
PRO_E_EXT_DEPTH_FROM_TYPE Mandatory element.Specifiesthetypeofdepthfor
Side2.Thedepthtypeisspecifiedusingthe
enumerated datatypeProExtDepthFromType.
Thevalidvaluesare:
•PRO_EXT_DEPTH_FROM_BLIND—Extrudes a
sectionfromthesketchingplanetothespecified
depthvalue.
•PRO_EXT_DEPTH_FROM_NEXT—Extrudes a
sectionfromthesketchingplanetothefirst
surfacethatitreaches.
•PRO_EXT_DEPTH_FROM_ALL—Extrudes a
sectionfromthesketchingplanetothelast
surfaceitreaches.
•PRO_EXT_DEPTH_FROM_UNTIL—Extrudes a
sectiontointersectwithaselectedsurface.
•PRO_EXT_DEPTH_FROM_REF—Extrudes a
sectiontoaselectedpoint,curve,plane,or
surface.
•PRO_EXT_DEPTH_FROM_NONE—Extrudes axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_EXT_DEPTH_FROM_UNTIL—Extrudes a
sectiontointersectwithaselectedsurface.
•PRO_EXT_DEPTH_FROM_REF—Extrudes a
sectiontoaselectedpoint,curve,plane,or
surface.
•PRO_EXT_DEPTH_FROM_NONE—Extrudes a
sectiononlyonSide1fromthesketchplane,no
extrusiononSide2.
PRO_E_EXT_DEPTH_FROM_REF SpecifiesthereferenceelementforSide2,whenthe
depthtypeisPRO_EXT_DEPTH_FROM_REF or
PRO_EXT_DEPTH_FROM_UNTIL. Thevalid
referencetypesare:
•PRO_SURFACE
•PRO_AXIS
•PRO_EDGE
•PRO_CURVE
•PRO_POINT
•PRO_EDGE_START
•PRO_EDGE_END
•PRO_CRV_START
•PRO_CRV_END
•PRO_BODY
PRO_E_EXT_DEPTH_FROM_REF_TRF Specifiestheoptionsavailableforthedepthtype
PRO_EXT_DEPTH_FROM_REF forSide2.The
depthtypeisspecifiedusingtheenumerated data
ElementTrees:ExtrudeandRevolve 1001ElementID Value
typeProExtDepthRefOpt. Thevalidvaluesare:
•PRO_EXT_DEPTH_REF_NONE—Extrudes a
sectiontoaselectedpoint,curve,plane,or
surface.
•PRO_EXT_DEPTH_REF_OFFS—Extrudes a
sectiontoanoffsetoftheselectedpoint,curve,
plane,orsurface.
•PRO_EXT_DEPTH_REF_TRNSLT—Extrudes axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectiontoaselectedpoint,curve,plane,or
surface.
•PRO_EXT_DEPTH_REF_OFFS—Extrudes a
sectiontoanoffsetoftheselectedpoint,curve,
plane,orsurface.
•PRO_EXT_DEPTH_REF_TRNSLT—Extrudes a
sectiontoatranslation oftheselectedpoint,
curve,plane,orsurface.
PRO_E_EXT_DEPTH_FROM_REF_TRF_VAL Specifiestheoffsetortranslation valueforSide2,
whenthedepthtypeisPRO_EXT_DEPTH_FROM_
REF,andtheoptiontypeisPRO_EXT_DEPTH_
REF_OFFS orPRO_EXT_DEPTH_REF_TRNSLT.
PRO_E_EXT_DEPTH_FROM_VALUE SpecifiesthevalueofdepthforSide2,whenthe
depthtypeisPRO_EXT_DEPTH_FROM_BLIND.
PRO_E_STD_FEATURE_NAME Defaultgivenbyapplication depending
onthefeaturetype.Canbemodifiedbytheuser.
PRO_E_EXT_COMP_DRFT_ANG DraftCompound Elementthatallowsyoutoadda
draftontheextrudefeature.
PRO_E_EXT_DRFT_ANG DraftoftypeProExtDrftAng.
•PRO_EXT_DRFT_ANG_NO_DRAFT—T ocreate
extrudedfeatureswithoutadraft.
•PRO_EXT_DRFT_ANG_DRAFT—T ocreate
extrudedfeatureswithadraft.
PRO_E_EXT_DRFT_ANG_VAL Thedraftangle.Thedraftanglecanhavevalue
between[-89.9,89.9].xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxextrudedfeatureswithoutadraft.
•PRO_EXT_DRFT_ANG_DRAFT—T ocreate
extrudedfeatureswithadraft.
PRO_E_EXT_DRFT_ANG_VAL Thedraftangle.Thedraftanglecanhavevalue
between[-89.9,89.9].
PRO_E_FEAT_THIN Compound element.Itspecifieshowtocloseathin
featurewhenoneormoresurfacescanbeusedto
cap,thatis,closethefeatureandattachittothesolid
geometry.Herethesketchisanopensketch.
PRO_E_FEAT_THIN_STRT Compound element.Itspecifiestheoptionsforthe
firstendpointofthethinfeature.
PRO_E_FEAT_THIN_STRT_OPT Specifieshowtocapthefirstendpointofthethin
featureusingtheenumerated datatype
ProFeatThinOpt. Thevalidvaluesare:
•PRO_FEAT_THIN_IGNORE—Caps thefeature
asafreeend.Whenyouspecifythisvalue,the
featureiscreatedwithafreeendevenifa
referenceedgeorsurfaceisavailabletocapthe
feature.
•PRO_FEAT_THIN_DEFAULT—Caps the
featuretothespecifiededgeorsurface.
PRO_E_FEAT_THIN_STRT_REF Specifiestheedgeorsurfacethatmustbeusedtocap
andattachthefirstendpointofthefeaturetothe
solidgeometry.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_FEAT_THIN_DEFAULT—Caps the
featuretothespecifiededgeorsurface.
PRO_E_FEAT_THIN_STRT_REF Specifiestheedgeorsurfacethatmustbeusedtocap
andattachthefirstendpointofthefeaturetothe
solidgeometry.
PRO_E_FEAT_THIN_END Compound element.Itspecifiestheoptionsforthe
secondendpointofthefeature.
1002 Creo®Parametric TOOLKIT User’sGuideElementID Value
PRO_E_FEAT_THIN_END_OPT Specifieshowtocapthesecondendpointofthethin
featureusingtheenumerated datatype
ProFeatThinOpt. Thevalidvaluesare:
•PRO_FEAT_THIN_IGNORE—Caps thefeature
asafreeend.Whenyouspecifythisvalue,the
featureiscreatedwithafreeendevenifa
referenceedgeorsurfaceisavailabletocapthe
feature.
•PRO_FEAT_THIN_DEFAULT—Caps the
featuretothespecifiededgeorsurface.
PRO_E_FEAT_THIN_END_REF Specifiestheedgeorsurfacethatmustbeusedtocap
andattachthesecondendpointtothesolid
geometry.
Elementsidentifiedwith‘*’dependonthedefinitionofthestandardsection.
Theseelementsarenotassignedvaluesuntilthestandardsectionhasbeenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandattachthesecondendpointtothesolid
geometry.
Elementsidentifiedwith‘*’dependonthedefinitionofthestandardsection.
Theseelementsarenotassignedvaluesuntilthestandardsectionhasbeen
completely allocated(whichtypicallyhappensduringredefineofthefeature).
Valuesassignedtotheseelementswhilethesectionisnotcompleteareignored.
Thefollowingtableliststheelementsneededtocreateextrudedfeatures,in
additiontothosealreadydiscussed:
FeatureType ElementID Comment
Solid PRO_E_EXT_COMP_DRFT_ANG Compound elementtospecify
draftoptions.
PRO_E_BODY Compound element
PRO_E_BODY_USE Mandatory .Specifiesthebodyto
addgeometryto.
Thevalidvaluesare:
•PRO_BODY_USE_NEW—The
geometryinthefeatureis
storedinthenewbody.
•PRO_BODY_USE_
SELECTED—The geometryin
thefeatureisstoredinthe
singleselectedbody.
PRO_E_BODY_SELECTED Specifiesthereferencetothe
selectedbody.
Mandatory ifPRO_E_BODY_USE
issettoPRO_BODY_USE_
SELECTED
Note
Onlysinglereferenceis
allowed.
Thin PRO_E_THICKNESS Mandatory >=0.0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_BODY_SELECTED Specifiesthereferencetothe
selectedbody.
Mandatory ifPRO_E_BODY_USE
issettoPRO_BODY_USE_
SELECTED
Note
Onlysinglereferenceis
allowed.
Thin PRO_E_THICKNESS Mandatory >=0.0
ElementTrees:ExtrudeandRevolve 1003FeatureType ElementID Comment
OftypePRO_VALUE_TYPE_
DOUBLE
PRO_E_BODY Compound element
PRO_E_BODY_USE Mandatory .Thevalidvaluesfor
PRO_BODY_USE_NEW andPRO_
BODY_USE_SELECTED aresame
asSolid.
PRO_E_BODY_SELECTED SameasSolid.
PRO_E_FEAT_FORM_IS_THIN OfTypeProExtFeatForm
=PRO_EXT_FEAT_FORM_NO_
THINforafeaturenothaving
Thin
=PRO_EXT_FEAT_FORM_THIN
foraThinfeature
PRO_E_STD_MATRLSIDE Mandatory
OftypeProExtMatlSide
PRO_E_FEAT_THIN Compound elementtospecify
optionstocapandattachthin
featurestosolidgeometry.
SolidCut PRO_E_BODY Compound element
PRO_E_BODY_USE Mandatory .Specifiesthebody
featuresthatcutsthegeometry.
Thevalidvaluesare:
•PRO_BODY_USE_ALL—The
geometryinthefeatureiscut
byalltheexistingbodies.
•PRO_BODY_USE_
SELECTED—The geometryin
thefeatureisstoredinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturesthatcutsthegeometry.
Thevalidvaluesare:
•PRO_BODY_USE_ALL—The
geometryinthefeatureiscut
byalltheexistingbodies.
•PRO_BODY_USE_
SELECTED—The geometryin
thefeatureisstoredinthe
selectedbodies.
PRO_E_BODY_SELECTED Specifiesthereferencetothe
selectedbodies.
Mandatory ifPRO_E_BODY_USE
issettoPRO_BODY_USE_
SELECTED
Note
Multiplereferences are
allowed.
PRO_E_STD_MATRLSIDE Mandatory
OftypeProExtMatlSide
PRO_E_EXT_COMP_DRFT_ANG Draftcompound elementfor
featuresthatdonothavefeature
1004 Creo®Parametric TOOLKIT User’sGuideFeatureType ElementID Comment
formasThin.
PRO_E_FEAT_FORM_IS_THIN OfTypeProExtFeatForm
=PRO_EXT_FEAT_FORM_NO_
THINforafeaturenothaving
Thin
=PRO_EXT_FEAT_FORM_THIN
foraThinfeature
ThinCut PRO_E_BODY Compound element
PRO_E_BODY_USE SameasSolidCut
PRO_E_BODY_SELECTED SameasSolidCut
PRO_E_STD_MATRLSIDE Mandatory
OftypeProExtMatlSide
PRO_E_THICKNESS Mandatory >=0.0
OftypePRO_VALUE_TYPE_
DOUBLE
PRO_E_FEAT_FORM_IS_THIN OfTypeProExtFeatForm
=PRO_EXT_FEAT_FORM_NO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_STD_MATRLSIDE Mandatory
OftypeProExtMatlSide
PRO_E_THICKNESS Mandatory >=0.0
OftypePRO_VALUE_TYPE_
DOUBLE
PRO_E_FEAT_FORM_IS_THIN OfTypeProExtFeatForm
=PRO_EXT_FEAT_FORM_NO_
THINforafeaturenothaving
Thin
=PRO_EXT_FEAT_FORM_THIN
foraThinfeature
Surface PRO_E_SRF_END_
ATTRIBUTESMandatory
OftypeProExtSurfEndAttr
Itmustbeassignedatthesame
timeorafterthesectionisfully
completed.
PRO_E_EXT_COMP_DRFT_ANG Draftcompound elementfor
featuresthatdonothavefeature
formasThin.
PRO_E_FEAT_FORM_IS_THIN OfTypeProExtFeatForm
=PRO_EXT_FEAT_FORM_NO_
THINforafeaturenothaving
Thin
=PRO_EXT_FEAT_FORM_THIN
foraThinfeature
SurfaceTrim PRO_E_STD_MATRLSIDE Mandatory
OftypeProExtMatlSide
PRO_E_TRIM_QUILT Mandatory
OftypeQuilt
PRO_E_TRIM_QLT_SIDE Mandatory
ElementTrees:ExtrudeandRevolve 1005FeatureType ElementID Comment
OftypeProExtTrimQltSide
PRO_E_FEAT_FORM_IS_THIN OfTypeProExtFeatForm
=PRO_EXT_FEAT_FORM_NO
_THINforafeaturenothaving
Thin
=PRO_EXT_FEAT_FORM
_THINforaThinfeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOftypeProExtTrimQltSide
PRO_E_FEAT_FORM_IS_THIN OfTypeProExtFeatForm
=PRO_EXT_FEAT_FORM_NO
_THINforafeaturenothaving
Thin
=PRO_EXT_FEAT_FORM
_THINforaThinfeature
PRO_E_EXT_COMP_DRFT_ANG Draftcompound elementfor
featuresthatdonothavefeature
formasThin.
ThinSurfaceTrim PRO_E_STD_MATRLSIDE Mandatory
OftypeProExtMatlSide
PRO_E_THICKNESS Mandatory >=0.0
OftypePRO_VALUE_TYPE_
DOUBLE
PRO_E_TRIM_QUILT Mandatory
OftypeQuilt
PRO_E_TRIM_QLT_SIDE Mandatory
OftypeProExtTrimQltSide
ifPRO_E_STD_MATRLSIDE is
“both”.Mustbeassignedatthe
sametimeasPRO_E_STD_
MATRLSIDE.
PRO_E_FEAT_FORM_IS_THIN OfTypeProExtFeatForm
=PRO_EXT_FEAT_FORM_NO
_THINforafeaturenothaving
Thin
=PRO_EXT_FEAT_FORM_THIN
foraThinfeature
Examples:CreatingExtrudedFeatures
Thefollowingexamplesdemonstrate creationofextrudefeaturesofvarious
forms.Theseexamplesareadaptedfromanexampletemplatefile
UgSktExtrusionTemplate.c availableontheCreoParametric loadpoint
under protoolkit/protk_appls/pt_userguide/ptu_featcreat.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforms.Theseexamplesareadaptedfromanexampletemplatefile
UgSktExtrusionTemplate.c availableontheCreoParametric loadpoint
under protoolkit/protk_appls/pt_userguide/ptu_featcreat.
•Example1:CreatinganExtrudedFeatureonpage1007
•Example2:ToCreateanExtrudedCutwithTwo-sidedThru-allDepthon
page1007
1006 Creo®Parametric TOOLKIT User’sGuide•Example3:ToCreateanExtrudedThinCutonpage1007
•Example4:ToCreateanExtrudedDatumSurfaceFeatureonpage1007
•Example5:ToCreateaSurfaceTrimExtrudedFeatureonpage1008
Conventional Approach
Example1:CreatinganExtrudedFeature
ThesamplecodeinthefileUserSktExtrusionProtrusion.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateanExtrudedProtrusion bytheconventional
approachforsketchedfeatures.Theexamplecreatesanincomplete featureusing
ProFeatureCreate(), extractsthesectionfromtheelementtreeofthe
incomplete feature,buildsthesectiononthesectionhandleobtained,and,
completes thefeatureusing ProFeatureRedefine().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureCreate(), extractsthesectionfromtheelementtreeofthe
incomplete feature,buildsthesectiononthesectionhandleobtained,and,
completes thefeatureusing ProFeatureRedefine().
Theuserispromptedtoselectthesketchingandtheorientation planesandthen
thereferenceedgesforthesketch.TheuserisalsorequiredtoentertheXandY
offsetstobeappliedtothesketchfromtheprojectededges.
Example2:ToCreateanExtrudedCutwithTwo-sidedThru-
allDepth
ThesamplecodeinthefileUgSktExtrusionCut.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateanextrudedcutwithtwo-sided thru-alldepth.
Example3:ToCreateanExtrudedThinCut
ThesamplecodeinthefileUgSktExtrusionCut.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateanextrudedthincut.Itsdepthistwo-sided, up
toaselectedreference.
Example4:ToCreateanExtrudedDatumSurfaceFeature
ThesamplecodeinthefileUgSktExtrusionSurfaceCapped.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoaselectedreference.
Example4:ToCreateanExtrudedDatumSurfaceFeature
ThesamplecodeinthefileUgSktExtrusionSurfaceCapped.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateanextrudeddatumsurfacefeature.Itsdepthis
one-sideblind.
ElementTrees:ExtrudeandRevolve 1007Example5:ToCreateaSurfaceTrimExtrudedFeature
ThesamplecodeinthefileUgSktExtrusionSurfaceTrim.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateanextrudedsurfacetrim.Itsdepthisone-side
blind.
DirectCreationApproach
ThesamplecodeinthefileUgSktExtrusionCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateanextrudedprotrusion bythedirectapproach
forsketchedfeaturesintroduced inPro/ENGINEER Wildfire.Theuseris
promptedtoselectasketcheddatumcurvefeaturethatisusedasasectionforthe
createdprotrusion.
TheElementTreeforRevolvedFeatures
Theelementtreeforrevolvedfeaturesisdocumented intheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpromptedtoselectasketcheddatumcurvefeaturethatisusedasasectionforthe
createdprotrusion.
TheElementTreeforRevolvedFeatures
Theelementtreeforrevolvedfeaturesisdocumented intheheaderfile
ProRevolve.h, andhasafairlysimplestructure.Itshowsthat,apartfromthe
usualelementsforthetreerootandfeaturename,arevolvedfeaturetreecontains
theelementstomakethefeatureasolidprotrusion, athinprotrusion, asolidcut,a
thincut,asurface,asurfacetrimmedfeature,orathinsurfacetrimmedfeature.
YoucanuseIntentDatumssuchasIntentAxis,IntentPlane,andIntentPointfor
placement references.
Thefollowingfigureshowstheelementtreeforrevolvedfeatures.
1008 Creo®Parametric TOOLKIT User’sGuideElementTreeforRevolvedFeature
ElementTrees:ExtrudeandRevolve 1009Theelementsareassignedvaluesdepending onthetypeofrevolvedfeatureyou
wanttocreate.
Thefollowingtableliststhecommonelementsforalltypesofrevolvedfeatures
andtheirpermissible values:
ElementID Value
PRO_E_FEATURE_TYPE Featuretype:
PRO_FEAT_PROTRUSION
PRO_FEAT_CUT
PRO_FEAT_DATUM_SURFxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingtableliststhecommonelementsforalltypesofrevolvedfeatures
andtheirpermissible values:
ElementID Value
PRO_E_FEATURE_TYPE Featuretype:
PRO_FEAT_PROTRUSION
PRO_FEAT_CUT
PRO_FEAT_DATUM_SURF
Notrequiredforcreation.
PRO_E_FEATURE_FORM Mandatory= PRO_REVOLVE
PRO_E_EXT_SURF_CUT_SOLID_TYPE Mandatory
OftypeProRevFeatType
=PRO_REV_FEAT_TYPE_SOLID
forSolidfeaturetype
=PRO_REV_FEAT_TYPE_SURFACE
forSurfacefeaturetype
PRO_E_FEAT_FORM_IS_THIN FeatureForm
OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO
_THIN
foraSolidfeature
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
PRO_E_REMOVE_MATERIAL MaterialRemoval
OftypeProRevRemMaterial
=PRO_REV_MATERIAL_ADD
foraProtruded feature
=PRO_REV_MATERIAL_REMOVE
foraCutfeature
PRO_E_STD_SECTION Standardsectionelements.
PRO_E_BODY Compound Element
PRO_E_STD_DIRECTION* Directionofcreation.
OftypeProRevDirection
=PRO_REV_CR_IN_SIDE_ONE
1010 Creo®Parametric TOOLKIT User’sGuideElementID Value
forangleinsideone
=PRO_REV_CR_IN_SIDE_TWO
forangleinsidetwoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOftypeProRevDirection
=PRO_REV_CR_IN_SIDE_ONE
1010 Creo®Parametric TOOLKIT User’sGuideElementID Value
forangleinsideone
=PRO_REV_CR_IN_SIDE_TWO
forangleinsidetwo
PRO_E_STD_MATRLSIDE* Directionofmaterialaffectedwithrespecttothe
sketch.Itisrequiredforallcuts,allthinfeatures,and
forsolidprotrusions withopensections.
PRO_E_REVOLVE_AXIS_OPT Optional,ofthetypeProRevAxisOptAttr.
Identifiesiftheaxistorevolveaboutisapartofthe
sketchoranexternaldatumaxis.
PRO_E_REVOLVE_AXIS Optional.Reference toexternaldatumaxis,ifPRO_
E_REVOLVE_AXIS =PRO_REV_AXIS_EXT_
REF.
PRO_E_REV_ANGLE Compound Element
PRO_E_REV_ANGLE_TO Compound Element
PRO_E_REV_ANGLE_TO_TYPE Mandatory
OftypeProRevAngleToType
PRO_E_REV_ANGLE_TO_VAL DependsonPRO_E_REV_ANGLE_TO_TYPE
OftypePRO_VALUE_TYPE_DOUBLE (indegrees)
PRO_E_REV_ANGLE_TO_REF DependsonPRO_E_REV_ANGLE_TO_TYPE
OftypelistedintheAngleTypetablethatfollows.
PRO_E_REV_ANGLE_FROM Compound Element
PRO_E_REV_ANGLE_FROM_TYPE Mandatory
OftypeProRevAngleFromTypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_REV_ANGLE_TO_REF DependsonPRO_E_REV_ANGLE_TO_TYPE
OftypelistedintheAngleTypetablethatfollows.
PRO_E_REV_ANGLE_FROM Compound Element
PRO_E_REV_ANGLE_FROM_TYPE Mandatory
OftypeProRevAngleFromType
PRO_E_REV_ANGLE_FROM_VAL DependsonPRO_E_REV_ANGLE_FROM_TYPE
OftypePRO_VALUE_TYPE_DOUBLE (indegrees)
PRO_E_REV_ANGLE_FROM_REF DependsonPRO_E_REV_ANGLE_FROM_TYPE
OftypelistedintheAngleTypetablethatfollows.
PRO_E_STD_FEATURE_NAME Defaultgivenbyapplication depending
onthefeaturetype.Canbemodifiedbytheuser.
PRO_E_FEAT_THIN Compound element.Itspecifieshowtocloseathin
featurewhenoneormoresurfacescanbeusedto
cap,thatis,closethefeatureandattachittosolid
geometry.Herethesketchisanopensketch.
PRO_E_FEAT_THIN_STRT Compound element.Itspecifiestheoptionsforthe
firstendpointofthethinfeature.
PRO_E_FEAT_THIN_STRT_OPT Specifieshowtocapthefirstendpointofthethin
featureusingtheenumerated datatype
ProFeatThinOpt. Thevalidvaluesare:
•PRO_FEAT_THIN_IGNORE—Caps thefeature
asafreeend.Whenyouspecifythisvalue,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatureusingtheenumerated datatype
ProFeatThinOpt. Thevalidvaluesare:
•PRO_FEAT_THIN_IGNORE—Caps thefeature
asafreeend.Whenyouspecifythisvalue,the
featureiscreatedwithafreeendevenifa
referenceedgeorsurfaceisavailabletocapthe
feature.
ElementTrees:ExtrudeandRevolve 1011ElementID Value
•PRO_FEAT_THIN_DEFAULT—Caps the
featuretothespecifiededgeorsurface.
PRO_E_FEAT_THIN_STRT_REF Specifiestheedgeorsurfacethatmustbeusedtocap
andattachthefirstendpointtothesolidgeometry.
PRO_E_FEAT_THIN_END Compound element.Itspecifiestheoptionsforthe
secondendpointofthethinfeature.
PRO_E_FEAT_THIN_END_OPT Specifieshowtocapthesecondendpointofthethin
featureusingtheenumerated datatype
ProFeatThinOpt. Thevalidvaluesare:
•PRO_FEAT_THIN_IGNORE—Caps thefeature
asafreeend.Whenyouspecifythisvalue,the
featureiscreatedwithafreeendevenifa
referenceedgeorsurfaceisavailabletocapthe
feature.
•PRO_FEAT_THIN_DEFAULT—Caps the
featuretothespecifiededgeorsurface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasafreeend.Whenyouspecifythisvalue,the
featureiscreatedwithafreeendevenifa
referenceedgeorsurfaceisavailabletocapthe
feature.
•PRO_FEAT_THIN_DEFAULT—Caps the
featuretothespecifiededgeorsurface.
PRO_E_FEAT_THIN_END_REF Specifiestheedgeorsurfacethatmustbeusedtocap
andattachthesecondendpointtothesolid
geometry.
Elementsidentifiedwith‘*’dependonthedefinitionofthestandardsection.
Theseelementsmaynotbeassignedvaluesuntilthestandardsectionhasbeen
completely allocated(whichtypicallyhappensduringredefineofthefeature).
Valuesassignedtotheseelementswhilethesectionisnotcompleteareignored.
Thefollowingtableliststheangletypesforrevolvedfeaturesalongwithpossible
validreferences:
AngleType ValidReferenceTypes
PRO_REV_ANGLE_TO_REF PRO_POINT, PRO_EDGE_START, PRO_EDGE_
END, PRO_CRV_START, PRO_CRV_END, PRO_
SURFACE (Plane).
PRO_REV_ANGLE_FROM_REF PRO_POINT, PRO_EDGE_START, PRO_EDGE_
END, PRO_CRV_START, PRO_CRV_END, PRO_
SURFACE (Plane).
Thefollowingtableliststheelementsneededtocreaterevolvedfeatures,inxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSURFACE (Plane).
PRO_REV_ANGLE_FROM_REF PRO_POINT, PRO_EDGE_START, PRO_EDGE_
END, PRO_CRV_START, PRO_CRV_END, PRO_
SURFACE (Plane).
Thefollowingtableliststheelementsneededtocreaterevolvedfeatures,in
additiontothosealreadydiscussed:
FeatureType ElementID Comment
Solid PRO_E_BODY Compound element
PRO_E_BODY_USE Mandatory .Specifiesthebodyto
addgeometryto.
Thevalidvaluesare:
•PRO_BODY_USE_NEW—The
geometryinthefeatureis
storedinthenewbody.
1012 Creo®Parametric TOOLKIT User’sGuideFeatureType ElementID Comment
•PRO_BODY_USE_
SELECTED—The geometryin
thefeatureisstoredinthe
singleselectedbody.
PRO_E_BODY_SELECTED Specifiesthereferencetothe
selectedbody.
Mandatory ifPRO_E_BODY_USE
issettoPRO_BODY_USE_
SELECTED
Note
Onlysinglereferenceis
allowed.
Thin PRO_E_STD_MATRLSIDE Mandatory
OftypeProRevMatlSide
PRO_E_BODY Compound element
PRO_E_BODY_USE SameasSolid
PRO_E_BODY_SELECTED SameasSolid
PRO_E_THICKNESS Mandatory >=0.0
OftypePRO_VALUE_TYPE_
DOUBLE
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatFormxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_BODY Compound element
PRO_E_BODY_USE SameasSolid
PRO_E_BODY_SELECTED SameasSolid
PRO_E_THICKNESS Mandatory >=0.0
OftypePRO_VALUE_TYPE_
DOUBLE
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO
_THINforfeaturenothaving
Thin
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
PRO_E_FEAT_THIN Compound elementtospecify
optionstocapandattachthin
featurestosolidgeometry.
SolidCut PRO_E_BODY Compound element
PRO_E_BODY_USE Mandatory .Specifiesthebody
featuresthatcutsthegeometry.
Thevalidvaluesare:
•PRO_BODY_USE_ALL—The
geometryinthefeatureiscut
byalltheexistingbodies.
•PRO_BODY_USE_
SELECTED—The geometryin
thefeatureisstoredinthe
selectedbodies.
PRO_E_BODY_SELECTED Specifiesthereferencetothe
selectedbodies.
ElementTrees:ExtrudeandRevolve 1013FeatureType ElementID Comment
Mandatory ifPRO_E_BODY_USE
issettoPRO_BODY_USE_
SELECTED
Note
Multiplereferences are
allowed.
PRO_E_STD_MATRLSIDE Mandatory
OftypeProRevMatlSide
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NOxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxissettoPRO_BODY_USE_
SELECTED
Note
Multiplereferences are
allowed.
PRO_E_STD_MATRLSIDE Mandatory
OftypeProRevMatlSide
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO
_THINforfeaturenothaving
Thin
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
ThinCut PRO_E_BODY Compound element
PRO_E_BODY_USE SameasSolidCut
PRO_E_BODY_SELECTED SameasSolidCut
PRO_E_STD_MATRLSIDE Mandatory
OftypeProRevMatlSide
PRO_E_THICKNESS Mandatory >=0.0
OftypePRO_VALUE_TYPE_
DOUBLE
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO_
THINforfeaturenothavingThin
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
Surface PRO_E_SRF_END_
ATTRIBUTESMandatory
OftypeProRevSurfEndAttr
1014 Creo®Parametric TOOLKIT User’sGuideFeatureType ElementID Comment
Mustbeassignedatthesametime
orafterthesectionisfully
completed.
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO
_THINforfeaturenothaving
Thin
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
SurfaceTrim PRO_E_STD_MATRLSIDE Mandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompleted.
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO
_THINforfeaturenothaving
Thin
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
SurfaceTrim PRO_E_STD_MATRLSIDE Mandatory
OftypeProRevMatlSide
PRO_E_TRIM_QUILT Mandatory
OftypeQuilt
PRO_E_TRIM_QLT_SIDE Mandatory
OftypeProRevTrimQltSide
ifPRO_E_STD_MATRLSIDE is
“both”.Mustbeassignedatthe
sametimeasPRO_E_STD_
MATRLSIDE.
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO
_THINforfeaturenothaving
Thin
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
ThinSurfaceTrim PRO_E_STD_MATRLSIDE Mandatory
OftypeProRevMatlSide
PRO_E_THICKNESS Mandatory >=0.0
OftypePRO_VALUE_TYPE_
DOUBLE
PRO_E_TRIM_QUILT Mandatory
OftypeQuilt
PRO_E_TRIM_QLT_SIDE Mandatory
OftypeProRevTrimQltSide
ElementTrees:ExtrudeandRevolve 1015FeatureType ElementID Comment
PRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO
_THINforfeaturenothaving
Thin
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
Examples:CreatingRevolvedFeaturesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_FEAT_FORM_IS_THIN OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO
_THINforfeaturenothaving
Thin
=PRO_REV_FEAT_FORM_THIN
foraThinfeature
Examples:CreatingRevolvedFeatures
Thefollowingexamplesdemonstrate creationofrevolvedfeaturesofvarious
forms.Theseexamplesareadaptedfromanexampletemplatefile
UgSktRevolveTemplate.c availableontheCreoParametric loadpointunder
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat.
•Example6:ToCreateaRevolvedProtrusion onpage1016
•Example7:ToCreateaRevolvedThinCutonpage1016
•Example8:ToCreateaRevolvedSurfaceonpage1016
Example6:ToCreateaRevolvedProtrusion
ThesamplecodeinthefileUgSktRevolveProtrusion.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreatearevolvedprotrusion featurewithsymmetric
depth.
Example7:ToCreateaRevolvedThinCut
ThesamplecodeinthefileUserSktRevolveThinCut.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreatearevolvedthincut,withindependent angularxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThesamplecodeinthefileUserSktRevolveThinCut.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreatearevolvedthincut,withindependent angular
dimensions forbothsides.
Example8:ToCreateaRevolvedSurface
ThesamplecodeinthefileUgSktRevolveSurface.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreatearevolvedsurface.Itincludesallpossible
elementassignments. Byfollowingtheinstructions forthefeatureyouwantto
create,itispossibletoremoveelementsettingsnotappropriate foryouruse.
1016 Creo®Parametric TOOLKIT User’sGuideTheElementTreeforFirstFeatures
Firstfeatures(extrudeandrevolvesolidscreatedasthefirstfeatureinapart)
requireasubsetofthestandardelementtreeandsomespecialhandlingforthe
sectionpointer.
Thefollowingtableliststheelementsapplicable tofirstfeaturecreation(extrude
orrevolve):
ElementID Value
PRO_E_FEATURE_TYPE Featuretype: PRO_FEAT_FIRST
PRO_E_FEATURE_FORM PRO_EXTRUDE /PRO_REVOLVExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingtableliststheelementsapplicable tofirstfeaturecreation(extrude
orrevolve):
ElementID Value
PRO_E_FEATURE_TYPE Featuretype: PRO_FEAT_FIRST
PRO_E_FEATURE_FORM PRO_EXTRUDE /PRO_REVOLVE
PRO_E_FEAT_FORM_IS_THIN FeatureForm
OfTypeProRevFeatForm
=PRO_REV_FEAT_FORM_NO_THIN foraSolid
feature=PRO_REV_FEAT_FORM_THIN foraThin
feature
PRO_E_BODY_USE Mandatory .Specifiesthebodytoaddgeometryto.
Thevalidvaluesare:
•PRO_BODY_USE_NEW—The geometryinthe
featureisstoredinthenewbody.
•PRO_BODY_USE_SELECTED—The geometry
inthefeatureisstoredinthesingleselected
body.
PRO_E_BODY_SELECT Specifiesthereferencetotheselectedbody.
Mandatory ifPRO_E_BODY_USE issettoPRO_
BODY_USE_SELECTED
Note
Onlysinglereferenceisallowed.
PRO_E_SKETCHER Sketcherpointer.Usedbecausethestandardsection
requiresselectedreferences notavailableinanempty
model.
PRO_E_STD_MATRLSIDE* Mandatory ifthin
OftypeProExtMatlSide (Extrude)
OftypeProRevMatlSide (Revolve)
PRO_E_THICKNESS Mandatory >=0.0ifthin
OftypePRO_VALUE_TYPE_DOUBLExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodel.
PRO_E_STD_MATRLSIDE* Mandatory ifthin
OftypeProExtMatlSide (Extrude)
OftypeProRevMatlSide (Revolve)
PRO_E_THICKNESS Mandatory >=0.0ifthin
OftypePRO_VALUE_TYPE_DOUBLE
PRO_E_EXT_DEPTH_FROM Compound Element(Extrudeonly)
PRO_E_EXT_DEPTH_FROM_VAL Depthdimension (oftypePRO_VALUE_TYPE_
DOUBLE) (Extrudeonly)
PRO_E_REV_ANGLE_FROM Compound Element(Revolveonly)
ElementTrees:ExtrudeandRevolve 1017ElementID Value
PRO_E_REV_ANGLE_FROM_VAL Angulardimension (oftypePRO_VALUE_TYPE_
DOUBLE)
(Revolveonly)
PRO_E_STD_FEATURE_NAME Defaultgivenbyapplication depending onthe
featuretype.Canbemodifiedbytheuser.
Elementsidentifiedwith‘*’dependonthedefinitionofthestandardsection.
Theseelementsmaynotbeassignedvaluesuntilthestandardsectionhasbeen
completely allocated(whichtypicallyhappensduringredefineofthefeature).
Valuesassignedtotheseelementswhilethesectionisnotcompleteareignored.
Example9:CreatingtheFirstExtrudedProtrusion
FeaturebyConventional ApproachxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxValuesassignedtotheseelementswhilethesectionisnotcompleteareignored.
Example9:CreatingtheFirstExtrudedProtrusion
FeaturebyConventional Approach
ThesamplecodeinthefileUgSktFirstFeatureCreate.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreatethefirstextrudedprotrusion usingtheapproach
forthesketchedfeatures.
Thefollowingexample:
•Createsanincomplete featureusing ProFeatureCreate(),
•Extractsthesectionfromtheelementtreeoftheincomplete feature,
•Buildsthesectiononthesectionhandleobtained,and,
•Completes thefeatureusing ProFeatureRedefine().
Following isthechangeintheapproachforPro/ENGINEER Wildfirerelease:
1.LevelofPRO_E_SKETCHER inanelementtreeischanged.
ForanyPro/ENGINEER releaseprevioustoWildfire:
PRO_E_FEATURE_TREE ->PRO_E_STD_SECTION ->PRO_E_SKETCHER
ForPro/ENGINEER Wildfirerelease:
PRO_E_FEATURE_TREE ->PRO_E_SKETCHER
2.ValueofPRO_E_SKETCHER—A newProValue istobeallocatedandthen
assignedtotheelement(ratherthantheoldapproachofreusingthevaluexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxForPro/ENGINEER Wildfirerelease:
PRO_E_FEATURE_TREE ->PRO_E_SKETCHER
2.ValueofPRO_E_SKETCHER—A newProValue istobeallocatedandthen
assignedtotheelement(ratherthantheoldapproachofreusingthevalue
extractedfromtheelementtree).
1018 Creo®Parametric TOOLKIT User’sGuideExample10:CreatingtheFirstThinRevolve
ProtrusionFeaturebyConventional Approach
ThesamplecodeinthefileUgSktFirstFeatureRevCreate.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat showshowtocreateathinfirstrevolveProtrusion usingthe
approachforsketchedfeatures.
Thefollowingexample:
•Createsanincomplete featureusing ProFeatureCreate(),
•Extractsthesectionfromtheelementtreeoftheincomplete feature,
•Buildsthesectiononthesectionhandleobtained,and,
•Completes thefeatureusing ProFeatureRedefine().
Following isthechangeintheapproachforPro/ENGINEER Wildfirerelease:
1.LevelofPRO_E_SKETCHER inanelementtreeischanged.
ForanyPro/ENGINEER releaseprevioustoWildfire:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFollowing isthechangeintheapproachforPro/ENGINEER Wildfirerelease:
1.LevelofPRO_E_SKETCHER inanelementtreeischanged.
ForanyPro/ENGINEER releaseprevioustoWildfire:
PRO_E_FEATURE_TREE ->PRO_E_STD_SECTION ->PRO_E_SKETCHER
ForPro/ENGINEER Wildfirerelease:
PRO_E_FEATURE_TREE ->PRO_E_SKETCHER
2.ValueofPRO_E_SKETCHER—A newProValueistobeallocatedandthen
assignedtotheelement(ratherthantheoldapproachofreusingthevalue
extractedfromtheelementtree).
ElementTrees:ExtrudeandRevolve 101946
ElementTrees:Ribs
TheElementTreeforRibFeatures.........................................................................1021
ThischapterdescribeshowtousetheincludefilesProRib.h, sothatyoucan
createribsprogrammatically .Asribsaresketchedfeatures;werecommend youto
readthechaptersElementTrees:Principles ofFeatureCreationonpage749and
ElementTrees:SketchedFeaturesonpage987beforereferringtothischapter.
1020 Creo®Parametric TOOLKIT User’sGuideTheElementTreeforRibFeaturesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:SketchedFeaturesonpage987beforereferringtothischapter.
1020 Creo®Parametric TOOLKIT User’sGuideTheElementTreeforRibFeatures
TheelementtreeforRibfeaturesisdocumented intheCreoParametric headerfile
ProRib.h.
Thefollowingfigureshowstheelementtreeforribfeatures.
TheElementTreeforRibFeature
Thefollowingtableliststhedatatypesforribfeatureandtheirpermissible values:
ElementID DataType Description
PRO_E_FEATURE_
TYPEPRO_VALUE_TYPE_
INTFeaturetype:PRO_
FEAT_RIB
PRO_E_FEATURE_
FORMPRO_VALUE_TYPE_
INTMandatory= PRO_
EXTRUDE
PRO_E_STD_
FEATURE_NAMEPRO_VALUE_TYPE_
WSTRINGNameoftheribfeature.
ThedefaultvalueisRIB.
PRO_E_BODY Compound Compound elementthat
holdsBodyoptions.For
moreinformation, referto
theProBodyOpts.h
elementtree.
PRO_E_BODY_USE PRO_VALUE_TYPE_
INTHoldsBodyuseoptions.
ThevalidvalueisPRO_
BODY_USE_SELECTED.
PRO_E_BODY_SELECT PRO_VALUE_TYPE_
SELECTIONSpecifiesthereferenceto
theselectedbody.
ElementTrees:Ribs 1021ElementID DataType Description
Note
OnlysinglereferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThevalidvalueisPRO_
BODY_USE_SELECTED.
PRO_E_BODY_SELECT PRO_VALUE_TYPE_
SELECTIONSpecifiesthereferenceto
theselectedbody.
ElementTrees:Ribs 1021ElementID DataType Description
Note
Onlysinglereference
isallowed.
PRO_E_RIB_
SECTION_COMPCompound Element Holdssectionrelated
elements.
PRO_E_RIB_
THICKNESSPRO_VALUE_TYPE_
DOUBLEThickness oftherib.The
valueofthethickness
shouldbepositiveand
biggerthanzero.The
defaultvaluedependson
partepsilon.
PRO_E_STD_SECTION PRO_VALUE_TYPE_
INTCompound Element
1022 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_STD_
MATRLSIDEPRO_VALUE_TYPE_
INTMaterialsideoptionsof
therib:
•PRO_RIB_SEC_
SIDE_ONE—Rib
willbeonsideoneof
thesection
•PRO_RIB_SEC_
SIDE_TWO—Rib
willbeonsidetwoof
thesection
Note
Theelement PRO_E_
STD_MATRLSIDE is
directlydependent
uponthepresenceofa
fullydefined PRO_E_
STD_SECTION
elementtree.Any
valueassignedtothis
elementbeforefully
definingthePRO_E_
STD_SECTION, will
beignored.The
defaultvaluedepends
onthesketchunderxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxuponthepresenceofa
fullydefined PRO_E_
STD_SECTION
elementtree.Any
valueassignedtothis
elementbeforefully
definingthePRO_E_
STD_SECTION, will
beignored.The
defaultvaluedepends
onthesketchunder
thePRO_E_STD_
SECTION element.
PRO_E_RIB_SIDE_
OPTSPRO_VALUE_TYPE_
INTSideoptionsoftherib:
•PRO_RIB_
SYMMETRIC— Rib
willbesymmetric to
thesketch.Thisisthe
defaultvalue.
ElementTrees:Ribs 1023ElementID DataType Description
PRO_RIB_SIDE_
ONE—Rib willbeon
SideOneofthe
sketch.
•PRO_RIB_SIDE_
TWO—Rib willbeon
SideTwoofthe
sketch.
1024 Creo®Parametric TOOLKIT User’sGuide47
ElementTrees:Sweep
SweepsinCreoParametricTOOLKIT.....................................................................1026
SweepFeature......................................................................................................1026
CreatingaSweepFeature.....................................................................................1034xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatingaSweepFeature.....................................................................................1034
SimpleSweepFeature...........................................................................................1035
Thischapterdescribestheprinciples ofcreatingasweepfeature.Thechapters
ElementTrees:Principles ofFeatureCreationonpage749andElementTrees:
SketchedFeaturesonpage987providethenecessarybackground forthistopic.
Readthosechaptersbeforethisone.
1025SweepsinCreoParametric TOOLKIT
CreoParametric providesaccessandcreatesaconstantsectionsweepfeature.You
cancreateasolidorsurfacefeature.Youcanalsoaddorremovematerialwhile
sweepingasectionalongoneormoreselectedtrajectories bycontrolling the
section’sorientation, rotation,andgeometry.
SweepFeature
Theelementtreeforthesweepfeatureisdocumented intheheaderfile
ProSweep.h, andisshowninthefollowingfigure.
ElementTreeforSweepFeature
Thefollowingtabledescribestheelementsintheelementtreeforsweeps:
ElementID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSweep.h, andisshowninthefollowingfigure.
ElementTreeforSweepFeature
Thefollowingtabledescribestheelementsintheelementtreeforsweeps:
ElementID DataType Description
PRO_E_FEATURE_FORM PRO_VALUE_TYPE_INT Specifiesthefeatureform.The
validvalueisPRO_SWEEP
definedintheenumerated data
typeProFeatFormType in
ProFeatForm.h.
PRO_E_SWEEP_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofsweep.The
validvalueisPRO_SWEEP_
1026 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
TYPE_MULTI_
TRAJdefinedintheenumerated
datatypeProSweepType.
PRO_E_SWEEP_FRAME_COMP Compound Thiscompound elementspecifies
thetrajectories andorientation of
thesectionplane.Formore
information onthiselement,refer
tothesectionElementTreefor
PRO_E_SWEEP_FRAME_
COMPonpage1029.
PRO_E_SWEEP_PROF_COMP Compound Thiscompound elementdefines
thesweeptypeandholdsthe
sketchrelatedelementsforthe
sweepcrosssection.
PRO_E_SWP_SEC_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofsweep.The
validvalueisPRO_SWEEP_
CONST_SECTION definedinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesweeptypeandholdsthe
sketchrelatedelementsforthe
sweepcrosssection.
PRO_E_SWP_SEC_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofsweep.The
validvalueisPRO_SWEEP_
CONST_SECTION definedinthe
enumerated datatype
ProSweepSecType.
Theoptionspecifiesaconstant
sectionsweep.
PRO_E_SWEEP_SECTION Compound Thiscompound elementcontains
thesketchforthesweepcross
section.
PRO_E_SKETCHER PRO_VALUE_TYPE_POINTER Specifiesasketcherpointer.The
userdefinedsketchcanbedirectly
retrievedfromthiselement.
PRO_E_SWP_ATTR Compound Thiscompound elementdefines
thesweepattributes. Theelement
isavailableonlyforsurface
sweeps.
PRO_E_END_SRF_ATTR PRO_VALUE_TYPE_INT Specifiestheoptiontokeepthe
endofsweepfeatureopenor
capped.Theenumerated datatype
ProSweepEndSrfAttr
containsthevalidvaluesforthis
element:
•PRO_SWEEP_END_SRF_
OPEN
•PRO_SWEEP_END_SRF_
CAPPED
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisSWEEP.
PRO_E_EXT_SURF_CUT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelement:
•PRO_SWEEP_END_SRF_
OPEN
•PRO_SWEEP_END_SRF_
CAPPED
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisSWEEP.
PRO_E_EXT_SURF_CUT_
SOLID_TYPEPRO_VALUE_TYPE_INT Specifiesasolidorsurfacefeature
type.Theenumerated datatype
ProSweepFeatType contains
thefollowingvalidvaluesforthis
element:
•PRO_SWEEP_FEAT_TYPE
_SOLID
•PRO_SWEEP_FEAT_TYPE
ElementTrees:Sweep 1027ElementID DataType Description
_SURFACE
PRO_E_REMOVE_MATERIAL PRO_VALUE_TYPE_INT Specifieswhethertoextrudeor
removethematerialalongthe
sweep.Theenumerated datatype
ProSweepRemMaterial
containsthefollowingvalidvalues
forthiselement:
•PRO_SWEEP_MATERIAL_
ADD
•PRO_SWEEP_MATERIAL_
REMOVE
PRO_E_FEAT_FORM_IS_THIN PRO_VALUE_TYPE_INT Specifieswhethertocreateathin
section.Theenumerated datatype
ProSweepFeatForm contains
thefollowingvalidvaluesforthis
element:
•PRO_SWEEP_FEAT_FORM
_NO_THIN
•PRO_SWEEP_FEAT_FORM
_THIN
PRO_E_STD_MATRLSIDE PRO_VALUE_TYPE_INT SpecifiesthedirectioninwhichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSweepFeatForm contains
thefollowingvalidvaluesforthis
element:
•PRO_SWEEP_FEAT_FORM
_NO_THIN
•PRO_SWEEP_FEAT_FORM
_THIN
PRO_E_STD_MATRLSIDE PRO_VALUE_TYPE_INT Specifiesthedirectioninwhich
materialwillbeaddedwithrespect
tothesketch.Thiselementis
mandatory forallcutsandthin
features.Theenumerated datatype
ProSweepMatlSide contains
thefollowingvalidvaluesforthis
element:
•PRO_SWEEP_MATERIAL_
SIDE_ONE
•PRO_SWEEP_MATERIAL_
SIDE_TWO
•PRO_SWEEP_MATERIAL_
BOTH_SIDES
PRO_E_THICKNESS PRO_VALUE_TYPE_DOUBLE Specifiesthethicknessforthethin
feature.Thiselementismandatory
forthinfeatures.
PRO_E_TRIM_QUILT PRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofquiltto
betrimmed.
PRO_E_TRIM_QLT_SIDE PRO_VALUE_TYPE_INT Specifiesthesideofthequilttobe
trimmed.Thiselementisrelevant
whentheelement PRO_E_STD_
MATRLSIDE hasitsvalueas
PRO_SWEEP_MATERIAL_
BOTH_SIDES.
Theenumerated datatype
ProSweepTrimQltSide
containsthefollowingvalidvalues
forthiselement:
•PRO_SWEEP_TRIMQLTxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhentheelement PRO_E_STD_
MATRLSIDE hasitsvalueas
PRO_SWEEP_MATERIAL_
BOTH_SIDES.
Theenumerated datatype
ProSweepTrimQltSide
containsthefollowingvalidvalues
forthiselement:
•PRO_SWEEP_TRIMQLT
1028 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
_SIDE_ONE
•PRO_SWEEP_TRIMQLT
_SIDE_TWO
PRO_E_BODY Compound element Compound elementforbody
options.
PRO_E_BODY_USE PRO_VALUE_TYPE_INT Mandatory .Specifiesthebodyto
addgeometryto.
Definedbytheenumerated data
typeProBodyUseOpts andthe
validvaluesfollow:
•PRO_BODY_USE_NEW—
Featurestoresitsgeometryin
thenewbody.
•PRO_BODY_USE_
SELECTED—Feature addsits
geometrytosingleselected
body.
PRO_E_BODY_SELECT PRO_VALUE_TYPE_
SELECTIONSpecifiesthereferencetothe
selectedbodies.
Mandatory ifPRO_E_BODY_USE
issettoPRO_BODY_USE_
SELECTED.
Forelementsspecifictosheetmetal, refertothechapterProduction Applications:
Sheetmetal onpage1288.
ElementTreeforPRO_E_SWEEP_FRAME_COMP
Theelement PRO_E_SWEEP_FRAME_COMP isacompound element,whichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxForelementsspecifictosheetmetal, refertothechapterProduction Applications:
Sheetmetal onpage1288.
ElementTreeforPRO_E_SWEEP_FRAME_COMP
Theelement PRO_E_SWEEP_FRAME_COMP isacompound element,which
definesthesweeptypeandholdsthesketchrelatedelementsforthesweepcross
section.TheelementtreeforPRO_E_SWEEP_FRAME_COMP isasshowninthe
figurebelow:
ElementTrees:Sweep 1029ThefollowingtabledescribesthesubelementsofthePRO_E_SWEEP_FRAME_
COMP:
Element ID DataType Description
PRO_E_FRM_OPT_TRAJ Array Specifiesanarrayofsingle
trajectorythatisonlyoneelement.
PRO_E_OPT_TRAJ Compound Thiscompound elementspecifies
thetrajectory.
PRO_E_STD_SEC_METHOD PRO_VALUE_TYPE_INT Specifiesthatthetrajectoryis
selected.ThevalidvalueisPRO_
SEC_SELECT definedinthe
enumerated datatype
ProSecMethod in
ProStdSection.h.
PRO_E_STD_SEC_SELECT Compound Thiscompound elementspecifies
thecollection oftrajectory.
PRO_E_STD_CURVE_ PRO_VALUE_TYPE_ Specifiesthecollection ofcurvesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSecMethod in
ProStdSection.h.
PRO_E_STD_SEC_SELECT Compound Thiscompound elementspecifies
thecollection oftrajectory.
PRO_E_STD_CURVE_ PRO_VALUE_TYPE_ Specifiesthecollection ofcurves
1030 Creo®Parametric TOOLKIT User’sGuideElement ID DataType Description
COLLECTION_APPL SELECTION andedgechainsforthetrajectory.
PRO_E_FRAME_SETUP Compound Thiscompound elementspecifies
theorientation ofthesection
plane.
PRO_E_FRM_NORMAL PRO_VALUE_TYPE_INT Specifiestheorientation ofthe
sectionplanenormal.The
enumerated datatype
ProFrameNormal containsthe
validvaluesforthiselement:
•PRO_FRAME_NORM_
ORIGIN—The sectionplane
normalisperpendicular tothe
origintrajectorythroughout
thesweep.
•PRO_FRAME_PIVOT_DIR—
Thez-axisistangenttothe
projection oftheorigin
trajectoryatthedirection
specifiedintheelement PRO_
E_FRM_PIVOT_DIR.
•PRO_FRAME_CONST_Z_
DIR
—Thesectionplaneremains
paralleltothespecified
directionreferencevector.
PRO_E_FRM_PIVOT_DIR Compound Thiscompound elementforthe
directionreferenceisrelevantxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxE_FRM_PIVOT_DIR.
•PRO_FRAME_CONST_Z_
DIR
—Thesectionplaneremains
paralleltothespecified
directionreferencevector.
PRO_E_FRM_PIVOT_DIR Compound Thiscompound elementforthe
directionreferenceisrelevant
whentheelement PRO_E_FRM_
NORMALhasitsvalueasPRO_
FRAME_PIVOT_DIR.
PRO_E_DIRECTION_
COMPOUNDCompound Thiscompound elementspecifies
thedirectionreferenceforPRO_
E_FRM_PIVOT_DIR. The
compound elementisastandard
CreoParametric elementsubtree
andisdescribedin
ProDirection.h.
PRO_E_FRM_CONST_Z Compound Thiscompound elementforthe
directionreferenceisrelevant
whentheelement PRO_E_FRM_
NORMALhasitsvalueasPRO_
FRAME_CONST_Z_DIR.
PRO_E_DIRECTION_
COMPOUNDCompound Thiscompound elementspecifies
thedirectionreferenceforPRO_
FRAME_CONST_Z_DIR. The
compound elementisastandard
CreoParametric elementsubtree
andisdescribedin
ProDirection.h.
PRO_E_FRM_ORIENT PRO_VALUE_TYPE_INT Specifieshowtherotationofthe
framearoundthesketchplane's
normalisorientedalongthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric elementsubtree
andisdescribedin
ProDirection.h.
PRO_E_FRM_ORIENT PRO_VALUE_TYPE_INT Specifieshowtherotationofthe
framearoundthesketchplane's
normalisorientedalongthe
ElementTrees:Sweep 1031Element ID DataType Description
sweep.Theenumerated datatype
ProFrameOrient containsthe
validvalesforthiselement:
•PRO_FRAME_MIN—
Corresponds tothe
Automatic optioninCreo
Parametric userinterface.The
directionofthex-vectoris
calculated sothattheswept
geometryisminimally twisted.
•PRO_FRAME_NORM_SURF
—Orients they-axisofthe
sectionplanetobenormalto
thesurfaceonwhichtheorigin
trajectorylies.
•PRO_FRAME_CONSTANT—
Thisoptionmustbesetwhen
theelement PRO_E_FRM_
NORMALhasitsvalueasPRO_
FRAME_PIVOT_DIR.
•PRO_FRAME_X_TRAJ—This
optionisnotsupported asCreo
Parametric supportsonly
singletrajectoryinsweep
feature.
PRO_E_FRM_NORM_SURF Compound Thiscompound elementforthe
edgechainsisrelevantwhenthe
element PRO_E_FRM_ORIENT
hasitsvalueasPRO_E_FRAME_
NORM_SURF.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsingletrajectoryinsweep
feature.
PRO_E_FRM_NORM_SURF Compound Thiscompound elementforthe
edgechainsisrelevantwhenthe
element PRO_E_FRM_ORIENT
hasitsvalueasPRO_E_FRAME_
NORM_SURF.
PRO_E_SURF_CHAIN_CMPND Compound Thiscompound elementspecifies
thesurfaceedgecollection andthe
collection method.
PRO_E_SURF_CHAIN_METHOD PRO_VALUE_TYPE_INT Specifiesthecollection methodfor
thesurfaceedges.Thevalidvalues
forthiselementare:
•PRO_SURF_CHAIN_
METHOD
_DEFAULT1
•PRO_SURF_CHAIN_
METHOD
_DEFAULT2
Note
Boththeoptionsareavailable
onlyifthetrajectoryisatwo-
sidededgeofasurface.In
caseofone-sidededge,only
oneoptionisavailable.
PRO_E_SURF_CHAIN_REF
_SURFSArray Specifiesanarrayofsurface
edges.
1032 Creo®Parametric TOOLKIT User’sGuideElement ID DataType Description
PRO_E_SURF_CHAIN_SURF Compound Thiscompound elementspecifies
thesurfaceedgecollection.
PRO_E_SURF_CHAIN_REF PRO_VALUE_TYPE_
SELECTIONSpecifiesthecollection oftwo-
sidededgeofasurface.
PRO_E_FRM_NORM_SURF_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesurfaceedgecollection.
PRO_E_SURF_CHAIN_REF PRO_VALUE_TYPE_
SELECTIONSpecifiesthecollection oftwo-
sidededgeofasurface.
PRO_E_FRM_NORM_SURF_
SIDEPRO_VALUE_TYPE_INT Thiselementisrelevantwhenthe
element PRO_E_FRM_ORIENT
hasitsvalueasPRO_E_FRAME_
NORM_SURF.
Specifiesthenormalsurface
direction.Theenumerated data
typeProFrmNormSrfSide
containsthevalidvalesforthis
element:
•PRO_FRAME_NORM_SRF
_SIDE_INSIDE
•PRO_FRAME_NORM_SRF
_SIDE_OUTSIDE
PRO_E_FRM_USER_X PRO_VALUE_TYPE_INT Thiselementisrelevantwhenthe
element PRO_E_FRM_ORIENT
hasitsvalueasPRO_FRAME_
MIN.
Specifiesifthedirectionofx-axis
atstartisautomatically computed
orisuserdefined.Theenumerated
datatypeProFrameStartX
containsthevalidvaluesforthis
element:
•PRO_FRAME_DEFAULT_
START_X
•PRO_FRAME_USER_
START_X
Note
Itissometimes necessaryto
specifythex-axisdirection,
forexample,forstraightline
trajectories ortrajectories that
haveastraightsegmentatthe
start.
ElementTrees:Sweep 1033Element ID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxItissometimes necessaryto
specifythex-axisdirection,
forexample,forstraightline
trajectories ortrajectories that
haveastraightsegmentatthe
start.
ElementTrees:Sweep 1033Element ID DataType Description
PRO_E_FRM_START_X Compound Thiscompound elementforthe
directionreferenceisrelevant
whentheelement PRO_E_FRM_
USER_XhasitsvalueasPRO_
FRAME_USER_START_X.
PRO_E_DIRECTION_
COMPOUNDCompound Thiscompound elementspecifies
thedirectionreferenceforPRO_
FRAME_USER_START_X. The
compound elementisastandard
CreoParametric elementsubtree
andisdescribedin
ProDirection.h.
CreatingaSweepFeature
ToCreateaSweepFeature
1.Createanincomplete featurewithoutthePRO_E_SKETCHER element.
2.CallProFeatureElemtreeExtract() withthefeaturehandletogetthe
newfeaturetree.Thisresultsinaninitialized PRO_E_SKETCHER element
andsketchhandle.
3.Createthesectionwiththeinitialized sketchhandle.
4.CallProFeatureWithoptionsRedefine() toputthesectioninthe
CreoParametric databasetocompletethesweepfeature.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandsketchhandle.
3.Createthesectionwiththeinitialized sketchhandle.
4.CallProFeatureWithoptionsRedefine() toputthesectioninthe
CreoParametric databasetocompletethesweepfeature.
Note
Iftheseelements PRO_E_FRAME_SETUP andPRO_E_FRM_ORIENT are
notdefined,youhavetoredefinethefeaturetwicetogetthevalidinitiated
sketchhandle.
Example1:CreatingaSweepFeature
ThesamplecodeinUgCreoSweepCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateasweepfeature.
1034 Creo®Parametric TOOLKIT User’sGuideSimpleSweepFeature
Thesimplesweepelementtreedocumented intheheaderfileProSweep.h is
obsolete.UsethesweepelementtreeinsteadtocreateandaccesstheSWEEP
feature.
Theelementtreeforthesimplesweepfeatureisshowninthefollowingfigure.
ElementTreeforSimpleSweepFeature
Thefollowingtabledescribestheelementsintheelementtreeforsimplesweeps:
Element ID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT FeaturetypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTreeforSimpleSweepFeature
Thefollowingtabledescribestheelementsintheelementtreeforsimplesweeps:
Element ID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Featuretype
PRO_E_FEATURE_FORM PRO_VALUE_TYPE_INT Featureform(PRO_SWEEP)
PRO_E_SWEEP_SPINE Compound Trajectory(like(PRO_E_STD_
SECTION)
PRO_E_SWEEP_SECTION Compound Section(likePRO_E_STD_
SECTION)
Theelementtreedefinitions ofPRO_E_SWEEP_SPINE andPRO_E_SWEEP_
SECTION takeonthesameformastheelement PRO_E_STD_SECTION
(documented intheheaderfileProStdSection.h).
Note
Release20ofPro/TOOLK ITsupportsonlysketched,constantcross-sectional
sweeps.
Thefollowingfigureshowsthevalidelementswithinthissubtree.
ElementTrees:Sweep 1035ElementSubtreeforSimpleSweep
Swept,constant,cross-sectional featureformsaresupported forthefollowing
featuretypes:
•PRO_FEAT_FIRST_FEAT
•PRO_FEAT_PROTRUSION
•PRO_FEAT_CUT
•PRO_FEAT_DATUM_SURF
CreatingaSimpleSweepFeature
ToCreateaSimpleSweepFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturetypes:
•PRO_FEAT_FIRST_FEAT
•PRO_FEAT_PROTRUSION
•PRO_FEAT_CUT
•PRO_FEAT_DATUM_SURF
CreatingaSimpleSweepFeature
ToCreateaSimpleSweepFeature
1.Createanincomplete featurewiththePRO_E_FEATURE_TYPE andPRO_E_
FEATURE_FORM elementsdefined.Alsodefinethecompound elements
PRO_E_SWEEP_SPINE andPRO_E_SWEEP_SECTION, downtothePRO_
E_STD_SEC_METHOD element(seethesubtreefordetails).
2.CallProFeatureElemtreeExtract() withthefeaturehandletogetthe
newfeaturetree.Thisresultsinaninitialized PRO_E_SWEEP_SPINE
subtreeandsketchhandle.
3.Createthespinesectionwiththeinitialized sketchhandle.
4.CallProFeatureWithoptionsRedefine() asanincomplete featureto
putthespinesectionintheCreoParametric database.
1036 Creo®Parametric TOOLKIT User’sGuide5.CallProFeatureElemtreeExtract() togetthenewfeaturetree.This
resultsinaninitialized PRO_E_SWEEP_SECTION subtreeandsketchhandle.
Thisstepisnecessarybecausethesweepsectionisdependent onthespine
section.
6.Createthesweepsectionwiththeinitialized sketchhandle.ThissectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThisstepisnecessarybecausethesweepsectionisdependent onthespine
section.
6.Createthesweepsectionwiththeinitialized sketchhandle.Thissection
automatically containsthecenterline crosshairsofthesweepsection.
Thecrosshairscanbeusedtolocateanddimension thesection.
7.CallProFeatureWithoptionsRedefine() withanyoptionexcept
incomplete tocompletethesimplesweepfeature.
Example1:CreatingaSimpleSweepFirstFeature
Protrusion
ThesamplecodeinUgSweepCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateasimplesweepfirstfeatureprotrusion usingtheCreoParametric
functions.
Example2:CreatingaSimpleSweepProtrusionFeatureby
Conventional Approach
ThesamplecodeinUg3DSweepCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateasimplesweepprotrusion featurebytheconventional approachfor
thesketchedfeatures.
Theuserispromptedtoselectthefollowing:
•Sketching plane
•Orientation planexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhowtocreateasimplesweepprotrusion featurebytheconventional approachfor
thesketchedfeatures.
Theuserispromptedtoselectthefollowing:
•Sketching plane
•Orientation plane
•Orthogonal edgeforthedimensioning ofthespine(trajectory -PRO_E_
SWEEP_SPINE) section
•Orthogonal edgeforthesweepsection(PRO_E_SWEEP_SECTION)
ElementTrees:Sweep 103748
ElementTrees:SolidBody
Introduction...........................................................................................................1039
TheElementTreeforBodyOptions........................................................................1039
TheElementTreeforBodyCopyFeature................................................................1040
TheElementTreeforBodySplitFeature.................................................................1041
TheElementTreeforBodyRemoveFeature...........................................................1044
TheElementTreeforBooleanBodyOperations......................................................1045xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheElementTreeforBodyRemoveFeature...........................................................1044
TheElementTreeforBooleanBodyOperations......................................................1045
Thischapterdescribestheelementtreestructureforbodyoptionsthatcanbe
selectedwhilecreatingafeature.Youcanperformgeometric operations suchas
splittingabodyormergingwithotherbodiesandbooleanoperations suchas
merge,intersect,andsubtract.
Thefollowingsectionsdescribetheprocedure forperforming Booleanoperations
suchasintersect,subtract,and,mergebodiesinamodel.Thischapteralso
describeshowtocopy,remove,andsplitbodies.
1038 Creo®Parametric TOOLKIT User’sGuideIntroduction
UsingCreoParametric TOOLKIT, youcancreatebodies.Thecreationand
manipulation ofbodiesusethefollowingCreoParametric TOOLKITobjects:
•ProSolid
•ProSolidBody
TheElementTreeforBodyOptions
TheelementtreeforBodyoptionsisdocumented intheCreoParametric header
fileProBodyOpts.h.
Thefollowingfigureshowstheelementtreeforbodyoptionsfeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSolid
•ProSolidBody
TheElementTreeforBodyOptions
TheelementtreeforBodyoptionsisdocumented intheCreoParametric header
fileProBodyOpts.h.
Thefollowingfigureshowstheelementtreeforbodyoptionsfeature.
TheElementTreeforBodyOptionsFeature
Thefollowingtabledescribestheelementsintheelementtree:
ElementTrees:SolidBody 1039ElementID DataType Description
PRO_E_BODY Compound element Compound elementfor
bodyoptions.
PRO_E_BODY_USE PRO_VALUE_TYPE_
INTMandatory .Specifiesthe
bodytoaddgeometryto.
Definedbythe
enumerated datatype
ProBodyUseOpts and
thevalidvaluesfollow:
•PRO_BODY_USE_
NEW—Featurestores
itsgeometryinthe
newbody.
•PRO_BODY_USE_
ALL—Feature cuts
fromallexisting
bodies.
•PRO_BODY_USE_
SELECTED—Feature
addsorremovesits
geometrytoorfrom
selectedbodies.
PRO_E_BODY_SELECT PRO_VALUE_TYPE_
SELECTIONSpecifiesthereferenceto
theselectedbodies.
Mandatory ifPRO_E_
BODY_USE issetto
PRO_BODY_USE_
SELECTED.
TheElementTreeforBodyCopyFeature
Youcanperformcopyoperationonbodies.Whenyoucopybodiesinapart,axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheselectedbodies.
Mandatory ifPRO_E_
BODY_USE issetto
PRO_BODY_USE_
SELECTED.
TheElementTreeforBodyCopyFeature
Youcanperformcopyoperationonbodies.Whenyoucopybodiesinapart,a
newbodyiscreatedforeachsourcebody.Theelementtreeforthebodycopy
featureisdocumented intheCreoParametric headerfileProBodyCopy.h.
TheElementTreeforBodyCopyFeature
Thefollowingfigureshowstheelementtreeforthebodycopyfeature.
1040 Creo®Parametric TOOLKIT User’sGuideThefollowingtabledescribestheelementsintheelementtree:
ElementID DataType Description
PRO_E_FEATURE_
TYPEPRO_VALUE_TYPE_
INTSpecifiesthefeaturetype.
ValidvalueisPRO_
FEAT_BODY_COPY.
PRO_E_STD_
FEATURE_NAMEPRO_VALUE_TYPE_
WSTRINGSpecifiesthefeature
name.
PRO_E_BODY_COPY_
REFSPRO_VALUE_TYPE_
SELECTIONMandatory .Specifiesthe
bodiestocopy.Only
bodiesfromthesame
modelareallowed.
Note
Usethefunction
ProElementRefer
encesSet(), ifyou
needtosetmultiple
referencevaluesfor
PRO_E_BODY_
COPY_REFS.
TheElementTreeforBodySplitFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbodiestocopy.Only
bodiesfromthesame
modelareallowed.
Note
Usethefunction
ProElementRefer
encesSet(), ifyou
needtosetmultiple
referencevaluesfor
PRO_E_BODY_
COPY_REFS.
TheElementTreeforBodySplitFeature
Youcansplitabodyintotwobodies.Thegeometryoftheoriginalbodyisdivided
betweentheoriginalbodyandthenewbody.Theelementtreeforthebodysplit
featureisdocumented intheCreoParametric headerfileProSplitbody.h.
TheElementTreeforBodySplitFeature
Thefollowingfigureshowstheelementtreeforthesplitbodyfeature.
ElementTrees:SolidBody 1041Thefollowingtabledescribestheelementsintheelementtree:
ElementID DataType Description
PRO_E_FEATURE_
TYPEPRO_VALUE_TYPE_
INTSpecifiesthefeaturetype.
ValidvalueisPRO_
FEAT_SPLIT_BODY.
PRO_E_STD_
FEATURE_NAMEPRO_VALUE_TYPE_
WSTRINGNameofthefeature.
PRO_E_SPLIT_BY_
OPTIONPRO_VALUE_TYPE_
INTMandatory element.
Splitbyoption.
PRO_E_SPLIT_BODY Compound element Splitbyobject.
PRO_E_SPLIT_
TARGET_BODYPRO_VALUE_TYPE_
SELECTIONTargetbodytobesplit.
PRO_E_SPLIT_BODY_
REFPRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxINTMandatory element.
Splitbyoption.
PRO_E_SPLIT_BODY Compound element Splitbyobject.
PRO_E_SPLIT_
TARGET_BODYPRO_VALUE_TYPE_
SELECTIONTargetbodytobesplit.
PRO_E_SPLIT_BODY_
REFPRO_VALUE_TYPE_
SELECTIONSplitbybodyreference.
PRO_E_SPLIT_BODY_
SLICE_OPTPRO_VALUE_TYPE_
INTSplitbyslicedirection.
PRO_E_SPLIT_TOOL_
EXTEND_OPTPRO_VALUE_TYPE_
INTSplitbyextendedobject.
PRO_E_SPLIT_OUT Compound element Splitbyvolume.
PRO_E_SPLIT_VOL_
SRFSPRO_VALUE_TYPE_
SELECTIONSplitbysurfaces.
1042 Creo®Parametric TOOLKIT User’sGuideSplittingbyObject
Youcansplitonebodyintotwobodiesusingaplane,surface,orquiltasthe
splittingobject.Thefollowingtableliststhemandatory elementtypesforsplitting
abodybyobject:
ElementID DataType
PRO_E_SPLIT_BY_OPTION ThevalidvalueisPRO_SPLIT_BY_
SPLITTING_OBJ oftheenumerated
datatypeProSplitByType.
PRO_E_SPLIT_TARGET_BODY Targetbodiestobesplit.
PRO_E_SPLIT_BODY_REF Splitbybodyreference.
PRO_E_SPLIT_BODY_SLICE_OPT Side1/Side2oftheenumerated data
typeProSplitBodySliceOpt.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatatypeProSplitByType.
PRO_E_SPLIT_TARGET_BODY Targetbodiestobesplit.
PRO_E_SPLIT_BODY_REF Splitbybodyreference.
PRO_E_SPLIT_BODY_SLICE_OPT Side1/Side2oftheenumerated data
typeProSplitBodySliceOpt.
PRO_E_SPLIT_TOOL_EXTEND_
OPTExtendoptionoftheenumerated data
type
ProSplitBodyToolExtendOpt.
SplittingbyVolumetype
Whenthegeometryoftheoriginalbodyhasdisjointvolumes,youcansplitout
oneormoreofthesevolumesintoanewbody.Selectoneormorebodysurfaces
todefinethatvolumeasanewbody.Thefollowingtableliststhemandatory
elementtypesforsplittingabodybyvolumetype:
ElementID DataType
PRO_E_SPLIT_BY_OPTION ThevalidvalueisPRO_SPLIT_BY_
VOLUMEoftheenumerated datatype
ProSplitByType.
PRO_E_SPLIT_VOL_SRFS Splitbysurfacesorsurfaceregions.
Abodycanbedividedintotwobodiesbyanintersecting objectorbyvolume.
Theenumerated datatypeProSplitByType definesthewaythebodyissplit
andhasthefollowingvalidvalues:
•PRO_SPLIT_BY_SPLITTING_OBJ—A bodycanbesplitbyan
intersecting object.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheenumerated datatypeProSplitByType definesthewaythebodyissplit
andhasthefollowingvalidvalues:
•PRO_SPLIT_BY_SPLITTING_OBJ—A bodycanbesplitbyan
intersecting object.
•PRO_SPLIT_BY_VOLUME—A bodythathasmorethanonedisjointvolume
canbesplitbypickingupthesurfaceorsurfaceregionsofthedesiredportion
tosplitoutasanewbody.
Thesplittingsideofthebodyisdefinedbytheenumerated datatype
ProSplitBodySliceOpt. Whenasinglebodyissplit,anadditional bodyis
created.Thevalidvaluesfollow:
•PRO_E_SPLIT_BODY_SLICE_FIRST_OPT—Side 1isthedefaultoption
andthevalueis0.
ElementTrees:SolidBody 1043•PRO_E_SPLIT_BODY_SLICE_SECOND_OPT—Flips thedefaultbody
creationandcreatesabodyintheotherside.
Theextendobjectisavailableforsplittingbyobjectandisdefinedbythe
enumerated datatypeProSplitBodyToolExtendOpt andhasthefollowing
validvalues:
•PRO_E_SPLIT_TOOL_EXTEND_OPT_NO—The splittingobjectintersects
thebodygraphically .
•PRO_E_SPLIT_TOOL_EXTEND_OPT_YES—The splittingobjectisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalidvalues:
•PRO_E_SPLIT_TOOL_EXTEND_OPT_NO—The splittingobjectintersects
thebodygraphically .
•PRO_E_SPLIT_TOOL_EXTEND_OPT_YES—The splittingobjectis
extendedtointersectwiththebodies.Theextendoptionisavailableforthe
geometrically extendable objectssuchasaplane.
TheElementTreeforBodyRemove
Feature
Aspartofmultibody design,therecouldbebodiesthatyouwanttoremovefrom
themodel.Forexample,youcreatedbodiesastoolsinthedesignprocessandyou
donotneedtheminthefinalmodel,orthesystemcreatedbodieswhenyou
importedgeometryfromothermodels.Youcannotdeletethesebodies,because
theyhavecontributing features.Insuchcases,youcanremovethebodies.
Note
Bodiesthatareremoveddonotcontribute tomassproperties.
Theelementtreeforthebodyremovefeatureisdocumented intheCreo
Parametric headerfileProRemoveBody.h. Usingthiselementtreeyoucan
removebodiesinamodel.
TheElementTreeforBodyRemoveFeature
Thefollowingfigureshowstheelementtreeforthebodyremovefeature.
Thefollowingtabledescribestheelementsintheelementtree:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxremovebodiesinamodel.
TheElementTreeforBodyRemoveFeature
Thefollowingfigureshowstheelementtreeforthebodyremovefeature.
Thefollowingtabledescribestheelementsintheelementtree:
1044 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_
TYPEPRO_VALUE_TYPE_
INTSpecifiesthefeaturetype.
ThevalidvalueisPRO_
FEAT_REMOVEBODY.
PRO_E_STD_
FEATURE_NAMEPRO_VALUE_TYPE_
WSTRINGSpecifiesthefeature
name.Defaultvalueis
Removebody.
PRO_E_BODY_SELECT PRO_VALUE_TYPE_
SELECTIONMandatory .Specifiesthe
references forthebodies
thatneedstoberemoved.
Thevalidselection
referenceisfromPRO_
BODYtypeonly.
Note
Usethefunction
ProElementRefer
encesSet(), ifyou
needtosetmultiple
referencevaluesfor
PRO_E_BODY_
SELECT.
TheElementTreeforBooleanBody
Operations
Whenapartcontainsmorethanonebody,youcanusetheBooleanOperations
featuretoperformgeometric operations suchasMerge,Intersect,andSubtract.
TheelementtreeforBooleanbodyoperations isdocumented intheCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxWhenapartcontainsmorethanonebody,youcanusetheBooleanOperations
featuretoperformgeometric operations suchasMerge,Intersect,andSubtract.
TheelementtreeforBooleanbodyoperations isdocumented intheCreo
Parametric headerfileProBooleanBodies.h. Youcanperformsubtract,
merge,andintersectoperations onbodies.
TheElementTreeforTheElementTreeforBooleanBodyOperation
ThefollowingfigureshowstheelementtreeforBooleanbodyoperation.
ElementTrees:SolidBody 1045Thefollowingtabledescribestheelementsintheelementtree:
ElementID DataType Description
PRO_E_FEATURE_
TYPEPRO_VALUE_TYPE_
INTSpecifiesthefeaturetype.
ThevalidvalueisPRO_
FEAT_
BOOLEANBODIES.
PRO_E_STD_
FEATURE_NAMEPRO_VALUE_TYPE_
WSTRINGSpecifiesthefeature
nameforcombined
Booleanbody.
Defaultvaluedependson
theoperationtype:
•BodyMerge
•BodyIntersect
•BodySubtract
PRO_E_BOOLEAN_
TYPEPRO_VALUE_TYPE_
INTSpecifiestheBoolean
operationtypethatneeds
tobeperformed onthe
bodiesandisdefinedby
theenumerated datatype
ProBooleanbodies
TypeOption. Thevalidxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•BodySubtract
PRO_E_BOOLEAN_
TYPEPRO_VALUE_TYPE_
INTSpecifiestheBoolean
operationtypethatneeds
tobeperformed onthe
bodiesandisdefinedby
theenumerated datatype
ProBooleanbodies
TypeOption. Thevalid
valuesare:
•MERGE_BOOL_
TYPE—Body Merge
•INTERSECT_BOOL_
1046 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
TYPE—Body
Intersect
•SUBTRACT_BOOL_
TYPE—Body
Subtract
PRO_E_TARGET_BODY PRO_VALUE_TYPE_
SELECTIONSpecifiesthereferenceto
themodifiedbodies.
Mandatory elementand
canbefilledwithsingle
bodyMERGE_BOOL_
TYPEorINTERSECT_
BOOL_TYPE ormultiple
bodies SUBTRACT_
BOOL_TYPE .
Thevalidselection
referenceisfromPRO_
BODYtypeonly.
Note
Usethefunction
ProElementRefer
encesSet(), ifyou
needtosetmultiple
referencevaluesfor
PRO_E_TARGET_
BODY.
PRO_E_TOOL_BODIES PRO_VALUE_TYPE_
SELECTIONSpecifiesthereferenceto
themodifying bodies.
Mandatory elementand
canbefilledwithsingle
bodySUBTRACT_
BOOL_TYPE ormultiple
bodies MERGE_BOOL_
TYPEorINTERSECT_
BOOL_TYPE.
ThevalidselectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONSpecifiesthereferenceto
themodifying bodies.
Mandatory elementand
canbefilledwithsingle
bodySUBTRACT_
BOOL_TYPE ormultiple
bodies MERGE_BOOL_
TYPEorINTERSECT_
BOOL_TYPE.
Thevalidselection
referenceisfromPRO_
BODYtypeonly.
PRO_E_KEEP_TOOLS PRO_VALUE_TYPE_
INTThiselementtypeis
availableonlyfor
SUBTRACT_BOOL_
ElementTrees:SolidBody 1047ElementID DataType Description
TYPEBooleanbody
operation. Itspecifiesthe
bodyoptionsthatneedto
bekept.Thiselement
typeisdefinedbythe
enumerated datatype
ProBooleanbodie
sKeepBodyOption
andthevalidvaluesare:
•KEEP_TOOL_NO—
defaultvalue.Deletes
themodifying bodies.
•KEEP_TOOL_YES—
keepsthemodifying
bodies.
PRO_E_IS_SMT_CUT PRO_VALUE_TYPE_
INTThiselementisapplicable
insheetmetal partsonly
anditcontrolsthecut
typeasfollows:
•PRO_B_TRUE—
SMTcuttype
•PRO_B_FALSE—
Solidcuttype
1048 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SMT_CUT_
NORMAL_DIRPRO_VALUE_TYPE_
INTThiselementisapplicable
insheetmetal partsonly
anditcontrolstheSMTxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSolidcuttype
1048 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SMT_CUT_
NORMAL_DIRPRO_VALUE_TYPE_
INTThiselementisapplicable
insheetmetal partsonly
anditcontrolstheSMT
cutgeometrydriving
surface.
Theelementtypeis
definedbythe
enumerated datatype
ProSmtCutNormDir
andthevalidvaluesare:
•PRO_SMT_CUT_
DRVSIDE_GREEN—
FornormaltoDriven
surface.
•PRO_SMT_CUT_
DRVSIDE_WHITE
—Fornormalto
Offsetsurface.
ElementTrees:SolidBody 104949
ElementTrees:CreoFlexible
ModelingFeatures
MoveandMove-CopyFeatures..............................................................................1051
3DTransformation SetFeature...............................................................................1057
AttachmentGeometryFeature...............................................................................1065
OffsetGeometryFeature.......................................................................................1076xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOffsetGeometryFeature.......................................................................................1076
ModifyAnalyticSurfaceFeature.............................................................................1078
TangencyPropagation ...........................................................................................1081
MirrorFeature.......................................................................................................1086
SubstituteFeature.................................................................................................1088
PlanarSymmetryRecognition Feature....................................................................1091
AttachFeature......................................................................................................1093
Example1:CreatingaFlexibleModelFeature.........................................................1097
ThischapterdescribeshowtoconstructandaccesstheelementtreeforsomeCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExample1:CreatingaFlexibleModelFeature.........................................................1097
ThischapterdescribeshowtoconstructandaccesstheelementtreeforsomeCreo
FlexibleModelingfeaturesinCreoParametric TOOLKIT. Italsoshowshowto
redefine,createandaccesstheproperties ofthesefeatures.
1050 Creo®Parametric TOOLKIT User’sGuideMoveandMove-Copy Features
ThissectiondescribeshowtoconstructandaccesstheelementtreeforMoveand
Move-Copy features.Italsoshowshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
Introduction
TheMoveandtheMove-Copy featuresallowarigidtransformation toageometry
selectionoritscopy.Thesurfaceswithinthegeometryselectionmustbelong
eithertothesolidgeometryortoasinglequilt.Youcanmovethefollowingthe
geometryselection:
•Anysurfacecollection withinthesolidgeometryorasinglequilt.
•Anintentsurfacewithinthesolidgeometryorasinglequilt.
•Regularorintentdatums(planes,axes,pointsandcoordinate systems).
•Regularorintentcurves.
•Anycombination oftheabovegeometries.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Anintentsurfacewithinthesolidgeometryorasinglequilt.
•Regularorintentdatums(planes,axes,pointsandcoordinate systems).
•Regularorintentcurves.
•Anycombination oftheabovegeometries.
Whenyoucreateamovefeatureatassemblylevel,thefollowingtypesof
references canbemoved:
•Geometry ofassemblycomponents—Part levelgeometryonly,thatis,
surfaces,quilts,curves,datums
•Assembly components—Parts andsubassemblies
ThemovedentitiesarecopiesoftheoriginalentitiesandwillhavenewIDs.The
originalentitiescanberemoved(Move)orkept(Copy-Move).
AMovefeaturewillactonasinglesetofobjects.Tomovedifferentgeometry
selections, multiplemovefeaturesmustbecreated.
TheElementTreeforMoveandMove-Copy
TheelementtreefortheMoveandMove-Copy featureisdocumented inthe
headerfileProFlexMove.h, andisshowninthefollowingfigure:
ElementTrees:CreoFlexibleModelingFeatures 1051ElementTreeforMoveandMove-Copy
ThefollowingtabledescribestheelementsintheelementtreefortheMoveand
Move-Copy features:
ElementID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:CreoFlexibleModelingFeatures 1051ElementTreeforMoveandMove-Copy
ThefollowingtabledescribestheelementsintheelementtreefortheMoveand
Move-Copy features:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisFlex_Move.
PRO_E_FLEXMOVE_MOVED_
GEOMETRYCompound Specificsthegeometrytobe
moved.
PRO_E_FLEXMOVE_MOVED_
COMPSPRO_ELEM_TYPE_MULTI_
VALUEOptionalelement.Thiselementis
availableonlywhenyoucreatethe
movefeatureattheassembly
level.Specifiesthecollection of
component references, thatis,
partsandsubassemblies inan
assembly,whicharemovedbythe
assemblylevelmovefeature.
1052 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
ThedatatypePRO_ELEM_
TYPE_MULTI_VALUE
enablesyoutoassign
multiplevaluestothe
element,thoughthedatatype
isnotanarray.
PRO_E_FLEXMOVE_DEFINE_
METHODPRO_VALUE_TYPE_INT Mandatory element.SpecifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
ThedatatypePRO_ELEM_
TYPE_MULTI_VALUE
enablesyoutoassign
multiplevaluestothe
element,thoughthedatatype
isnotanarray.
PRO_E_FLEXMOVE_DEFINE_
METHODPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
methodtobeusedtomovethe
entities.Ittakesthefollowing
values:
•PRO_FLEXMOVE_DEF_
METHOD_3D
_DRAG—Y oucanusethe3D
transformation sets(inCreo
Parametric interfaceusing3D
Dragger)todefinetheflexible
movefeature.
•PRO_FLEXMOVE_DEF_
METHOD_DIMENSIONS—
Youcanspecifyuptothree
constraining nonparallel linear
dimensions orangular
dimensions todefinethe
flexiblemovefeature.
•PRO_FLEXMOVE_DEF_
METHOD_CONSTRAINTS—
Youcanspecifycomponent-
like(assembly-like) constraints
todefinetheflexiblemove
feature.
PRO_E_D3ELEM_SETS Array holder Mandatory elementwhenthe
definitionmethodisPRO_
FLEXMOVE_DEF_METHOD_3D_
DRAG.AnarrayholderofPRO_
E_D3ELEM_SET elements.. The
elementsfor3Dtransformation
setsaredefinedin
ProD3Elem.h.
Formoreinformation, seethe
section3DTransformation Set
Featureonpage1057.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDRAG.AnarrayholderofPRO_
E_D3ELEM_SET elements.. The
elementsfor3Dtransformation
setsaredefinedin
ProD3Elem.h.
Formoreinformation, seethe
section3DTransformation Set
Featureonpage1057.
PRO_E_FLEXMOVE_DIMS_
COMPOUNDCompound Mandatory elementwhenthe
definitionmethodisPRO_
FLEXMOVE_DEF_METHOD_
DIMENSIONS. Specifiesthe
dimension references andarrays
forthedimension definition
method.
ElementTrees:CreoFlexibleModelingFeatures 1053ElementID DataType Description
PRO_E_FLEX_OPTS_CMPND Compound Mandatory elementthatcontains
theflexiblemodelinggeometry
attachment optionstoattachthe
movedsurfaces.Specifiesthe
integerandchaincollection type
elements.Theelementsrelatedto
reattachment ofgeometryin
flexiblemodelingaredefinedin
ProFlxmdlOpts.h.
Formoreinformation, seethe
sectionAttachment Geometry
Featureonpage1065.
PRO_E_FLXSLV_PROP_
CONSTRSArray Optionalelement.Specifiesan
arraythatcontainsthetangency
conditions andthereference
geometryelementsfortangency
propagation.
TheelementsrelatedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFeatureonpage1065.
PRO_E_FLXSLV_PROP_
CONSTRSArray Optionalelement.Specifiesan
arraythatcontainsthetangency
conditions andthereference
geometryelementsfortangency
propagation.
Theelementsrelatedto
propagation oftangencyinflexible
modelingaredefinedin
ProFlexTanPropOpts.h. For
moreinformation, seethesection
TangencyPropagation onpage
1081.
PRO_E_COMPONENT_SETS Array holder Mandatory elementwhenthe
definitionmethodisPRO_
FLEXMOVE_DEF_METHOD_
CONSTRAINTS. Specifiesthe
constraint sets.Theelementsfor
constraint setsaredefinedin
ProAsmcomp.h. Formore
information, seethesection
Constraint SetsandMechanism
Connections onpage1148of
chapterAssembly: Assembling
Components onpage1140.
1054 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_COMPONENT_
CONSTRAINTSArray holder Mandatory elementwhenthe
definitionmethodisPRO_
FLEXMOVE_DEF_METHOD_
CONSTRAINTS. Specifiesthe
constraints. Theelementsfor
constraints aredefinedin
ProAsmcomp.h. Formore
information, seethesectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinitionmethodisPRO_
FLEXMOVE_DEF_METHOD_
CONSTRAINTS. Specifiesthe
constraints. Theelementsfor
constraints aredefinedin
ProAsmcomp.h. Formore
information, seethesection
Placement Constraints onpage
1152ofchapterAssembly:
Assembling Components onpage
1140.
PRO_E_STD_FLEX_
PROPAGATIONPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesa
patternormirrorrecognition
featuretopropagate themove
featurechanges.
MovedGeometry
Thefeature PRO_E_FLEXMOVE_MOVED_GEOMETRY isacompound element
thatallowsyoutoselectthegeometries tobemovedandthegeometries tobe
excluded.
PRO_E_FLEXMOVE_MOVED_GEOMETR Y
ThefollowingtableliststhecontentsofPRO_E_FLEXMOVE_MOVED_
GEOMETRY element.
ElementID DataType Description
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
collection ofsurfacesetsofthe
geometries tobemoved.Itmay
alsoincludesurfaceregions.
PRO_E_FLEXMOVE_
EXCLUDED_GEOMETRYCompound Optionalelementtoexclude
surfaces.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONMandatory element.Specifiesthe
collection ofsurfacesetsofthe
geometries tobemoved.Itmay
alsoincludesurfaceregions.
PRO_E_FLEXMOVE_
EXCLUDED_GEOMETRYCompound Optionalelementtoexclude
surfaces.
ElementTrees:CreoFlexibleModelingFeatures 1055ElementID DataType Description
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
collection ofsurfacesfromthe
movesurfacescollectorwhich
shouldbeexcludedfromthemove
operation.
PRO_E_FLEXMOVE_DTM_REF PRO_ELEM_TYPE_MULTI_
VALUE
Note
ThedatatypePRO_ELEM_
TYPE_MULTI_VALUE
allowsyoutoassignmultiple
valuestotheelement,though
thedatatypeisnotanarray.Optionalelement.Specifiesthe
collection ofdatumentitiesthat
shouldbemovedwiththemoved
geometry.
DimensionElements
Theelement PRO_E_FLEXMOVE_DIMS_COMPOUND isacompound element
thatallowsyoutospecifythedimensions tomovethegeometries.
PRO_E_FLEXMOVE_DIMS_COMPOUND
ThefollowingtableliststhecontentsofPRO_E_FLEXMOVE_DIMS_COMPOUNDxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatallowsyoutospecifythedimensions tomovethegeometries.
PRO_E_FLEXMOVE_DIMS_COMPOUND
ThefollowingtableliststhecontentsofPRO_E_FLEXMOVE_DIMS_COMPOUND
element.Alltheelementsaremandatory forthePRO_FLEXMOVE_DEF_
METHOD_DIMENSIONS definitionmethodtype.
ElementID DataType Description
PRO_E_FLEXMOVE_DIMS_
ARRAYArray holder Mandatory element.The
dimensions arraycancontainupto
threedimensions ofPRO_
FLEXMOVE_ DIM_TYPE_
LINEARtypeorasingle
dimension ofPRO_FLEXMOVE_
DIM_TYPE_ANGULAR type.
PRO_E_FLEXMOVE_DIM_
COMPOUNDCompound Mandatory element.Specifiesthe
constraining dimensions tomove
1056 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
thegeometries.
PRO_E_FLEXMOVE_DIM_REFS PRO_ELEM_TYPE_MULTI
_VALUEMandatory element.Specifiestwo
references forthegiven
dimension. Outofthetwoselected
references onemustbelongtothe
movedgeometryandtheother
mustbelongtothegeometrythat
isnotaffectedbythemove
operation.
Thevalidvaluesforreference
selections areasfollows:
•Surface—SEL_3D_SRFxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferences onemustbelongtothe
movedgeometryandtheother
mustbelongtothegeometrythat
isnotaffectedbythemove
operation.
Thevalidvaluesforreference
selections areasfollows:
•Surface—SEL_3D_SRF
•Line—SEL_3D_EDG, SEL_
3D_CURVE, SEL_3D_AXIS
•Points—SEL_3D_VERT,
SEL_3D_PNT, SEL_CURVE_
END
Thevalidcombinations for
referenceselections areasfollows:
•Surface-Surface
•Surface-Line
•Surface-Point
•Line-Line
•Line-Point
PRO_E_FLEXMOVE_DIM_
VALUEPRO_VALUE_TYPE_DOUBLE Mandatory element.Specifiesthe
valueofthelinearorangular
dimension.
Thevalidvaluesareasfollows:
•LinearDimensions—[-1e6,
1e6]
•AngularDimensions—[0, 360]
3DTransformation SetFeature
Thissectiondescribeshowtoconstructandaccesstheelementtreefor3D
Transformation Setfeatures.Italsoshowshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
ElementTrees:CreoFlexibleModelingFeatures 1057Introduction
TheD3elementtreebranchisusedbyfeaturesthatusethe3Dtransformation
steps,forexampleinthePRO_FEAT_FLEXMOVE featuretype.SeexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:CreoFlexibleModelingFeatures 1057Introduction
TheD3elementtreebranchisusedbyfeaturesthatusethe3Dtransformation
steps,forexampleinthePRO_FEAT_FLEXMOVE featuretype.See
ProFlexMove.h. The3Dtransformation stepsareusuallydefinedusingthe3D
DraggerintheCreoParametric userinterface.
RefertotheCreoParametric PartModelingHelpformoreinformation on
placement andorientation references, andDegreesofFreedom.
TheElementTreefor3DTransformation Sets
Theelementtreeforthe3DTransformation Setfeatureisdocumented inthe
headerfileProD3Elem.h, andisshowninthefollowingfigure:
ElementTreefor3DTransformation Sets
Thefollowingtabledescribestheelementsintheelementtreeforthe3D
Transformation Setfeature:
ElementID DataType Description
PRO_E_D3ELEM_SETS Array holder AnarrayholderofPRO_E_
D3ELEM_SET elements.
PRO_E_D3ELEM_SET Compound Acompound elementrepresenting
asingletransformations set.
PRO_E_D3ELEM_PLACEMENT_
REFERENCEPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
placement referenceforthe3DxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_D3ELEM_SET Compound Acompound elementrepresenting
asingletransformations set.
PRO_E_D3ELEM_PLACEMENT_
REFERENCEPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
placement referenceforthe3D
transformation sets.
Thevalidvaluesforplacement
referenceselectionareasfollows:
•Surface—SEL_3D_SRF
1058 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•Line—SEL_3D_EDG, SEL_
3D_CURVE, SEL_3D_AXIS
•Points—SEL_3D_VERT,
SEL_3D_PNT, SEL_CURVE_
END
•Coordinate System—SEL_
3D_CSYS
Note
Incaseofanemptyvaluefor
theplacement reference, the
defaultplacement reference
willbeused.
PRO_E_D3ELEM_
ORIENTATION_REFERENCEPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesupto
tworeferences todefinethe
orientation forthe3D
transformation sets.
Thevalidvaluesfororientation
referenceselectionareasfollows:
•Surface—SEL_3D_SRF
•Line—SEL_3D_EDG, SEL_
3D_CURVE, SEL_3D_AXIS
•Coordinate System—SEL_
3D_CSYS
Note
Incaseofanemptyvaluefor
theplacement reference, the
defaultplacement referencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Surface—SEL_3D_SRF
•Line—SEL_3D_EDG, SEL_
3D_CURVE, SEL_3D_AXIS
•Coordinate System—SEL_
3D_CSYS
Note
Incaseofanemptyvaluefor
theplacement reference, the
defaultplacement reference
willbeused.
PRO_E_D3ELEM_LOCATION PRO_VALUE_TYPE_INT Optionalelement.Specifies
whetherthetransformation set
moveswiththegeometryforevery
move.Ittakesthefollowing
values:
•PRO_D3_LOCATION_
MOVING—This isthedefault
value.Thecoordinate system
ofthetransformation set
moveswitheachmovemade
intheset.
•PRO_D3_LOCATION_
FIXED—This valuecanbeset
onlyiftheplacement reference
andtheorientation reference
arebothselectedtobethe
ElementTrees:CreoFlexibleModelingFeatures 1059ElementID DataType Description
samecoordinate system(SEL_
3D_CSYS).
Whenthisvalueisset,the
transformation set'scoordinate
systemretainsitspositionand
orientation duringthemove,
onlytheselectedgeometry
moves.Themovestepis
definedinreferencetothis
fixedcoordinate system.
PRO_E_D3ELEM_MOVES Array holder AnarrayholderofPRO_E_
D3ELEM_MOVE element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorientation duringthemove,
onlytheselectedgeometry
moves.Themovestepis
definedinreferencetothis
fixedcoordinate system.
PRO_E_D3ELEM_MOVES Array holder AnarrayholderofPRO_E_
D3ELEM_MOVE element.
PRO_E_D3ELEM_MOVE Compound Acompound elementwhich
represents asinglemoveinthe
givenset
PRO_E_D3ELEM_MOVE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
movetypetobeusedtomovethe
geometry
Thiselementtakesthefollowing
values:
•PRO_D3_MOVE_TYPE_
SURF
—Specifies thatthemoveis
madetoaUVcoordinate ona
surface,fromitsinitialUV
placement pointonthat
surface.
Note
Thismovetypeis
relevantonlyifthemove
setisplacedonasurface.
TosetandgettheUV
parameters usethefunctions:
○ProFeatureD3ele-
mUvGet()
1060 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
○ProFeatureD3ele-
mUvSet()
•PRO_D3_MOVE_TYPE_
EDGE
—Specifies thatthemoveis
madetocoordinate (ratio
parameter) onanedge,fromits
initialplacement onthatedge.
Thepositionisrecordedasa
lengthratioontheedge.
Note
Thismovetypeisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_D3_MOVE_TYPE_
EDGE
—Specifies thatthemoveis
madetocoordinate (ratio
parameter) onanedge,fromits
initialplacement onthatedge.
Thepositionisrecordedasa
lengthratioontheedge.
Note
Thismovetypeis
relevantonlyifthemove
setisplacedonanedge.
Tosetandgettheposition
ratiousethefunctions:
○ProFeatureD3elem-
RatioGet()
○ProFeatureD3elem-
RatioSet()
•PRO_D3_MOVE_TYPE_
FREE
—Specifies themoveusinga
transformation matrix.Itstores
thefinal3Dlocationofthe
movedgeometry.Tocompute
thefinalpositionofthemoved
geometry,thesaved3D
locationisused.
Note
Thismovetypeis
relevantonlyifthe
placement referenceand
theorientation reference
elementshavedefault
(empty)values.
ElementTrees:CreoFlexibleModelingFeatures 1061ElementID DataType Description
Tosetandgettheposition
deltamatrixusethefunctions:
○ProFeatureD3elem-
MatrixGet()
1062 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
○ProFeatureD3elem-
MatrixSet()
•PRO_D3_MOVE_TYPE_
FREETRF
—Specifies themoveusinga
transformation matrix,similarxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMatrixGet()
1062 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
○ProFeatureD3elem-
MatrixSet()
•PRO_D3_MOVE_TYPE_
FREETRF
—Specifies themoveusinga
transformation matrix,similar
toPRO_D3_MOVE_TYPE_
FREE.Itstoresthe
transformation matrix.To
computethefinalpositionof
themovedgeometry,thesaved
transformation matrixisused.
Note
Thismovetypeis
relevantonlyifthe
placement referenceand
theorientation reference
elementshavedefault
(empty)values.
•PRO_D3_MOVE_TYPE_
XMOVE—Specifies thelinear
translation alongthecurrent
coordinate system'sX-vector.
•PRO_D3_MOVE_TYPE_
YMOVE—Specifies thelinear
translation alongthecurrent
coordinate system'sY-vector.
•PRO_D3_MOVE_TYPE_
ZMOVE—Specifies thelinear
translation alongthecurrent
coordinate system'sZ-vector.
•PRO_D3_MOVE_TYPE_
XROTATE—Specifies the
rotationalanglealongthe
currentcoordinate system'sX-
vector.
•PRO_D3_MOVE_TYPE_
YROTATE—Specifies the
rotationalanglealongthe
currentcoordinate system'sY-
vector.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxXROTATE—Specifies the
rotationalanglealongthe
currentcoordinate system'sX-
vector.
•PRO_D3_MOVE_TYPE_
YROTATE—Specifies the
rotationalanglealongthe
currentcoordinate system'sY-
vector.
ElementTrees:CreoFlexibleModelingFeatures 1063ElementID DataType Description
•PRO_D3_MOVE_TYPE_
ZROTATE—Specifies the
rotationalanglealongthe
currentcoordinate system'sZ-
vector.
PRO_E_D3ELEM_MOVE_VALUE PRO_VALUE_TYPE_DOUBLE Mandatory element.Specifiesthe
translation distanceorthe
rotationalangleforthemove
command.
Thevalidvaluesareasfollows:
•LinearMovetypes—[-1e6,
1e6]
•AngularMovetypes—[0, 360]
FunctionsforthePRO_E_D3ELEM_MOVE_V ALUE
element
Thissectiondescribesthefunctionstobeusedtosetthemovetypeforthe
element PRO_E_D3ELEM_MOVE_VALUE.
Functions Introduced:
•ProFeatur eD3elemUvGet()
•ProFeatur eD3elemUvSet()
•ProFeatur eD3elemRatioGet()
•ProFeatur eD3elemRatioSet()
•ProFeatur eD3elemMatrixGet()
•ProFeatur eD3elemMatrixSet()
Thefunctions ProFeatureD3elemUvGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProFeatur eD3elemUvSet()
•ProFeatur eD3elemRatioGet()
•ProFeatur eD3elemRatioSet()
•ProFeatur eD3elemMatrixGet()
•ProFeatur eD3elemMatrixSet()
Thefunctions ProFeatureD3elemUvGet() and
ProFeatureD3elemUvSet() getandsetthepositionUVparameter forthe
PRO_E_D3ELEM_MOVE_VALUE elementonasurfaceorplane.
Note
Thefunctions ProFeatureD3elemUvGet() and
ProFeatureD3elemUvSet() arerelevantonlywhentheelement PRO_
E_D3ELEM_MOVE_TYPE hasitsmovevalueasPRO_D3_MOVE_TYPE_
SRF.
1064 Creo®Parametric TOOLKIT User’sGuideThefunctions ProFeatureD3elemRatioGet() and
ProFeatureD3elemRatioSet() getandsetthepositionratioforthePRO_
E_D3ELEM_MOVE_VALUE elementonanedgeorentity.
Note
Thefunctions ProFeatureD3elemRatioGet() and
ProFeatureD3elemRatioSet() arerelevantonlywhentheelement
PRO_E_D3ELEM_MOVE_TYPE hasitsmovevalueasPRO_D3_MOVE_
TYPE_EDGE.
Thefunctions ProFeatureD3elemMatrixGet() and
ProFeatureD3elemMatrixSet() getandsetthepositiondeltamatrixfor
thePRO_E_D3ELEM_MOVE_VALUE element.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPE_EDGE.
Thefunctions ProFeatureD3elemMatrixGet() and
ProFeatureD3elemMatrixSet() getandsetthepositiondeltamatrixfor
thePRO_E_D3ELEM_MOVE_VALUE element.
Note
Thefunctions ProFeatureD3elemMatrixGet() and
ProFeatureD3elemMatrixSet() arerelevantonlywhentheelement
PRO_E_D3ELEM_MOVE_TYPE hasitsmovevalueasPRO_D3_MOVE_
TYPE_FREE.
Attachment GeometryFeature
Thissectiondescribeshowtoconstructandaccesstheelementtreeforreattaching
geometrywhenaflexiblemodelingfeaturemodifiesortransforms ageometry
selection.Italsoshowshowtocreate,redefine,andaccesstheproperties ofthe
attachment features.
Introduction
Whenageometryselectionistransformed byaflexiblemodelingfeature,youcan
reattachthegeometrytothemodelinoneofthefollowingways:
•Extendthesurfacesofthegeometryselectionandtheneighboring geometry
untiltheyintersecteachother,oruntiltheholewherethegeometryselection
wasoriginallylocatedisclosedandthetransformed ormodifiedgeometryis
reattached.
•Createthesidesurfacestoclosethegapbetweenthemovedgeometryandthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwasoriginallylocatedisclosedandthetransformed ormodifiedgeometryis
reattached.
•Createthesidesurfacestoclosethegapbetweenthemovedgeometryandthe
holeleftinthemodel.
ElementTrees:CreoFlexibleModelingFeatures 1065•Recreateimmediate neighboring surfacesmaintaining tangencyconditions, if
themovedgeometryandtheimmediate neighboring surfacesaretangent
planesandcircles.
Theattachment element PRO_E_FLEX_OPTS_CMPND isseeninthefollowing
featuretypes:
•PRO_FEAT_FLEXMOVE (SeeProFlexMove.h)
•PRO_FEAT_FLX_OGF (SeeProFlexOffset.h)
•PRO_FEAT_ANALYT_GEOM (SeeProFlexMag.h)
•PRO_FEAT_FLXATTACH (SeeProFlexAttach.h)
•PRO_FEAT_FLEXSUBST (SeeProFlexSubstitute.h)
TheElementTreeforAttachment GeometryOptions
TheelementtreefortheAttachment Geometry featureisdocumented inthe
headerfileProFlxmdlOpts.h, andisshowninthefollowingfigure.
1066 Creo®Parametric TOOLKIT User’sGuideElementTreeforAttachment GeometryOptions
ThefollowingtabledescribestheelementsintheelementtreefortheGeometry
Attachment feature:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1066 Creo®Parametric TOOLKIT User’sGuideElementTreeforAttachment GeometryOptions
ThefollowingtabledescribestheelementsintheelementtreefortheGeometry
Attachment feature:
ElementID DataType Description
PRO_E_FLEX_OPTS_CMPND Compound Specifiestheflexiblemodeling
geometryreattachment options.
PRO_E_FLEX_TRF_SEL_ATT_
GEOMPRO_VALUE_TYPE_INTEGER Mandatory element.Specifies
whetherthechamfersandrounds
thatattachthemovedgeometryto
themodelmustalsobe
transformed.
ElementTrees:CreoFlexibleModelingFeatures 1067ElementID DataType Description
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF, PRO_FEAT_
FLEXSUBST, mirrorfeatureand
inpatterning.
Thiselementtakesthefollowing
values:
•PRO_FLXMDL_OPT_YES
•PRO_FLXMDL_OPT_NO
Whenthevalue PRO_FLXMDL_
OPT_NOisspecified,thechamfers
androundsareremovedand
optionally recreated.
PRO_E_FLEX_ATTACH_GEOM PRO_VALUE_TYPE_INTEGER Mandatory element.Specifies
whethertoattachthemoved
geometrytothesamequiltorsolid
itwasdetachedfrom.
ThiselementisrelevantinPRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoptionally recreated.
PRO_E_FLEX_ATTACH_GEOM PRO_VALUE_TYPE_INTEGER Mandatory element.Specifies
whethertoattachthemoved
geometrytothesamequiltorsolid
itwasdetachedfrom.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF andPRO_FEAT_
ANALYT_GEOM.
Thiselementtakesthefollowing
values:
•PRO_FLEXMODEL_OPT_
YES—Attaches themoved
geometrytosamequiltor
solid.
•PRO_FLEXMODEL_OPT_
NO—Creates anewseparate
quilt.
PRO_E_FLEX_CR_RND_GEOM PRO_VALUE_TYPE_INTEGER Mandatory element.Specifies
whethertocreatearound
geometryafterthegeometry
selectionismovedandreattached.
Thisapplicable forgeometry
selectionthatwasoriginally
attachedbyroundgeometry.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF, PRO_FEAT_
ANALYT_GEOM andPRO_FEAT_
FLEXSUBST.
1068 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Thiselementtakesthefollowing
values:
•PRO_FLEXMODEL_OPT_
YES
•PRO_FLEXMODEL_OPT_NO
Therearetwocaseshere:
•When PRO_E_FLEX_
ATTACH_GEOM issetto
PRO_FLEXMODEL_OPT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThiselementtakesthefollowing
values:
•PRO_FLEXMODEL_OPT_
YES
•PRO_FLEXMODEL_OPT_NO
Therearetwocaseshere:
•When PRO_E_FLEX_
ATTACH_GEOM issetto
PRO_FLEXMODEL_OPT_
YESandPRO_E_FLEX_CR_
RND_GEOM issettofollowing
values:
○PRO_FLEXMODEL_OPT_
YES—The roundsare
recreated.
○PRO_FLEXMODEL_OPT_
NO—Theroundsarenot
recreated.
•When PRO_E_FLEX_
ATTACH_GEOM issetto
PRO_FLEXMODEL_OPT_No
theroundsarenotreattached.
However,inthiscaseyoucan
savetheinformation aboutthe
attachment properties forthe
rounds. PRO_E_FLEX_CR_
RND_GEOM issettofollowing
values:
○PRO_FLEXMODEL_OPT_
YES—The attachment
information oftherounds
isstoredinintentobjects.
Thisinformation canbe
usedbysomeother
features.
○PRO_FLEXMODEL_OPT_
NO—Theattachment
information oftherounds
isnotstored.
PRO_E_FLEX_KEEP_ORIG_
GEOMPRO_VALUE_TYPE_INTEGER Mandatory element.Specifiesif
theoriginalgeometrymustbe
movedoracopyofthegeometry
shouldbemoved.
ElementTrees:CreoFlexibleModelingFeatures 1069ElementID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGEOMPRO_VALUE_TYPE_INTEGER Mandatory element.Specifiesif
theoriginalgeometrymustbe
movedoracopyofthegeometry
shouldbemoved.
ElementTrees:CreoFlexibleModelingFeatures 1069ElementID DataType Description
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE andPRO_
FEAT_FLEXSUBST.
Thiselementtakesthefollowing
values:
•PRO_FLEXMODEL_OPT_
YES
•PRO_FLEXMODEL_OPT_NO
PRO_E_FLEX_PROPAGATE_
TANGENCYPRO_VALUE_TYPE_INTEGER Mandatory element.Specifiesif
tangencymustbemaintained
betweenthemodifiedgeometry
andtheneighboring geometry.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF andPRO_FEAT_
ANALYT_GEOM.
Thiselementtakesthefollowing
values:
•PRO_FLEXMODEL_OPT_
YES
•PRO_FLEXMODEL_OPT_NO
PRO_E_FLEX_DFLT_
CONDITIONSPRO_VALUE_TYPE_INTEGER Mandatory element.Specifiesif
thedefaultconditionmustbe
appliedtotheverticesofthe
draggedgeometry.Thevertices
areselectedbythesystem.The
defaultconditionistofixthe
selectedvertices.Thesevertices
donottransformalongwiththe
draggedgeometry.
ThiselementisrelevantinPRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdraggedgeometry.Thevertices
areselectedbythesystem.The
defaultconditionistofixthe
selectedvertices.Thesevertices
donottransformalongwiththe
draggedgeometry.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF andPRO_FEAT_
ANALYT_GEOM.
Thiselementtakesthefollowing
values:
•PRO_FLEXMODEL_OPT_
YES
•PRO_FLEXMODEL_OPT_NO
PRO_E_FLEX_BOUND_EDGES_
CMPCompound Thiscompound elementcollects
theboundingedges.
PRO_E_FLEX_MAINTAIN_
TOPOPRO_VALUE_TYPE_INTEGER Mandatory element.Specifiesthe
optiontomaintainsolution
topologyforgenericflexible
1070 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
modelingfeatures:
•PRO_FEAT_FLEXMOVE
•PRO_FEAT_FLX_OGF
•PRO_FEAT_ANALYT_GEOM
•PRO_FEAT_FLEXSUBST
•PRO_FEAT_FLEXATTACH
Thiselementhasthefollowing
validvalues:
•PRO_FLXMDL_OPT_YES—
Theapplication generates
featuregeometrythatis
topologically similartothe
solutionstoredintheelement
PRO_E_FLEX_SOL_INDEX.
Ifsuchasolutioncannotbe
created,thefeaturewillfail.
•PRO_FLXMDL_OPT_NO—xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheapplication generates
featuregeometrythatis
topologically similartothe
solutionstoredintheelement
PRO_E_FLEX_SOL_INDEX.
Ifsuchasolutioncannotbe
created,thefeaturewillfail.
•PRO_FLXMDL_OPT_NO—
Theapplication generates
geometrythatistopologically
similartothesolutionstoredin
theelement PRO_E_FLEX_
SOL_INDEX. Ifsucha
solutioncannotbecreated,the
application triestocreateother
successful solution.Ifthe
application cannotcreateany
othersolutionforthechanged
model,thefeaturefails.
Note
Youcannotselectthe
solutioninteractively
usingCreoParametric
TOOLKITapplications.
PRO_E_STD_CURVE_
COLLECTION_APPLChain Optionalelement.Collectsthe
boundingedgesfromthegeometry
listtowhichtheprimaryfeature
geometrywillbereattached. The
boundingedgesareusedasthe
limitingedgesforthefeature
reattachment solutions.Theedges
thatbelongtotheprimaryfeature
references cannotbeusedas
boundingedges.
ElementTrees:CreoFlexibleModelingFeatures 1071ElementID DataType Description
Note
Theinformation onthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatbelongtotheprimaryfeature
references cannotbeusedas
boundingedges.
ElementTrees:CreoFlexibleModelingFeatures 1071ElementID DataType Description
Note
Theinformation onthe
chosensolutionisstoredin
theelement PRO_E_FLEX_
SOL_INDEX. Thiselementis
notaccessible byCreo
Parametric TOOLKIT,under
whichadefaultsolutionwill
bealwaysused.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF, PRO_FEAT_
ANALYT_GEOM, PRO_FEAT_
FLEXSUBST andPRO_FEAT_
FLEXATTACH.
PRO_E_FLEX_PULL_OPTION PRO_VALUE_TYPE_INTEGER Mandatory element.Specifiesthe
attachment optionbywhichthe
movedgeometrywillbeattached
tothemodel.Theboundingchain
edgesselectedintheelement
PRO_E_FLEX_BOUND
_EDGES_CMP areusedforthe
reattachment ofmovedgeometry.
Thiselementtakesthefollowing
values:
•PRO_FLEXMODEL_PULL_
NONE—The movedgeometry
isattachedusingthedefault
methodoraccording tothe
contentsoftheCreateside
surfaces andExtend
sidesurfaces chain
collectorswhichdecidethe
attachment method.
RefertothesectionDefaultxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisattachedusingthedefault
methodoraccording tothe
contentsoftheCreateside
surfaces andExtend
sidesurfaces chain
collectorswhichdecidethe
attachment method.
RefertothesectionDefault
MethodforthePullOptionon
page1075formore
information onthedefault
method.
•PRO_FLEXMODEL_PULL_
CREATE_SURFS—The
movedgeometryisreattached
tothesamequiltorsoliditwas
1072 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
detachedfromusingthe
Createsidesurfaces
option.Themovedsurfaces
areattachedtothemodelby
creatingsurfacesthatconnect
theoriginalcontourtothefinal
contourofthemovedsurface.
•PRO_FLEXMODEL_PULL_
EXTEND_SURFS—The
movedgeometryisreattached
tothesamequiltorsoliditwas
detachedfromusingthe
Extendsidesurfaces
option.Themovedsurfaces
areattachedtothemodelby
extending andintersecting the
movedsurfacesandtheir
neighboring surfaces.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE.
PRO_E_FLEX_ATT_CHNS_CMP Compound Non-default edgechaincollector.
PRO_E_FLEX_SIDE_SRFS_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmovedsurfacesandtheir
neighboring surfaces.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE.
PRO_E_FLEX_ATT_CHNS_CMP Compound Non-default edgechaincollector.
PRO_E_FLEX_SIDE_SRFS_
CMPCompound EdgechaincollectorforCreate
sidesurfaces .
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Optionalelement.Collectsthe
edgechainsforwhichthe
attachment optionwillbechanged
fromdefaulttoCreateside
surfaces .Heresidesurfaces
willbecreatedtoclosethegap
betweenthemovedgeometryand
theholeleftinthemodel.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF andPRO_FEAT_
ANALYT_GEOM.
Youcanselecttheedgesandintent
edgesthatbelongtothe
intersection betweenthegeometry
selectionandtheneighboring
geometry.
PRO_E_FLEX_EXT_INT_CMP Compound EdgechaincollectorforExtend
andintersect .
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Optionalelement.Collectsthe
edgechainsforwhichthe
attachment optionwillbechanged
ElementTrees:CreoFlexibleModelingFeatures 1073ElementID DataType Description
fromdefaulttoExtendandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxedgechainsforwhichthe
attachment optionwillbechanged
ElementTrees:CreoFlexibleModelingFeatures 1073ElementID DataType Description
fromdefaulttoExtendand
intersect .Herethesurfacesof
thegeometryselectionandthe
neighboring geometryare
extendeduntiltheyintersecteach
other.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF andPRO_FEAT_
ANALYT_GEOM.
Youcanselecttheedgesandintent
edgethatbelongtotheintersection
betweenthegeometryselection
andtheneighboring geometry,and
donotbelongtothesidesurface
set.
PRO_E_FLEX_SPLIT_EXT_
SURFS_CMPCompound Collectortosplittheextending
surfacearea.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE andPRO_
FEAT_FLX_OGF.
PRO_E_FLEX_EXT_SRFS_CMP Compound Compound collectorforextending
surfacessettobesplit.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Optionalelement.Thiselementis
usedwiththesplittingsurfacesset
andtheflipoptions.Collectsthe
extending surfacesthatwillbe
splitbythesplittingsurfaces.You
canselectthesurfacesthatbelongxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusedwiththesplittingsurfacesset
andtheflipoptions.Collectsthe
extending surfacesthatwillbe
splitbythesplittingsurfaces.You
canselectthesurfacesthatbelong
totheflexiblemodelingfeature's
references surfaceset.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE andPRO_
FEAT_FLX_OGF.
ThiselementisirrelevantinPRO_
FEAT_ANALYT_GEOM asthe
referencesurfaceistheonly
possibleextending surface.
PRO_E_FLEX_SPT_SRFS_CMP Compound Compound collectorforsplitting
surfacesset.
1074 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONOptionalelement.Thiselementis
usedwiththeextending surfaces
set.Collectssurfacesthatwillbe
extendedandusedtosplitthe
extending surfaces.Youcanselect
thesurfaceswhichbelongtothe
samesolidorquiltthatcontains
thesurfacesbeingmodified.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF andPRO_FEAT_
ANALYT_GEOM.
PRO_E_FLEX_FLIP_SPLIT
_DIRPRO_VALUE_TYPE_INT Optionalelement.Thiselementis
usedwiththeextending andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF andPRO_FEAT_
ANALYT_GEOM.
PRO_E_FLEX_FLIP_SPLIT
_DIRPRO_VALUE_TYPE_INT Optionalelement.Thiselementis
usedwiththeextending and
splittingsurfacessets.Flipsthe
sideoftheextending surfaces.
ThiselementisrelevantinPRO_
FEAT_FLEXMOVE, PRO_FEAT_
FLX_OGF andPRO_FEAT_
ANALYT_GEOM.
Thiselementtakesthefollowing
values:
•PRO_FLEXMODEL_OPT_
YES
•PRO_FLEXMODEL_OPT_NO
DefaultMethodforthePullOption
Whenthevalueoftheelement PRO_E_FLEX_PULL_OPTION issettoPRO_
FLEXMODEL_PULL_NONE themovedgeometryisattachedusingeitherofthe
followingoptions:
•Defaultmethod
•According tothecontentsoftheCreatesidesurfacesandExtendsidesurfaces
chaincollectors
ThissectiondescribesthedefaultmethodforthePulloptionindetail.
Thegeometryofthemodifiedsurfaceandtheneighboring surfacedecidesthe
defaultmethodbywhichthesurfaceswillbeattached:
•Ifthemodifiedsurfaceandtheneighboring surfacearenottangential toeachxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThegeometryofthemodifiedsurfaceandtheneighboring surfacedecidesthe
defaultmethodbywhichthesurfaceswillbeattached:
•Ifthemodifiedsurfaceandtheneighboring surfacearenottangential toeach
other,thesurfacesareextendeduntiltheyintersect,thatis,theyareattached
usingtheExtendandintersectoption.
ElementTrees:CreoFlexibleModelingFeatures 1075•Ifthemodifiedsurfaceandtheneighboring surfacearetangential toeach
other,themovedgeometryisattachedinoneofthefollowingways:
○Ifthemodifiedsurfaceisofanytypeandtheneighboring surfaceisa
roundsurface,thesurfacesareattachedinthefollowingway:
◆Theroundisremoved.
◆ThesurfacesareattachedusingtheExtendandintersectoption.
◆Theroundisrecreated.
○Ifthemodifiedsurfaceisofanytypeandtheneighboring surfaceisnota
roundsurface,thesurfacesareattachedineitherofthefollowingways:
◆Thesurfacesareattachedbycreatingsidesurfaces,thatis,byusingthe
Createsidesurfacesoption.
◆Ifthesidewallconstruction failsduetosomegeometrical reason,forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx◆Thesurfacesareattachedbycreatingsidesurfaces,thatis,byusingthe
Createsidesurfacesoption.
◆Ifthesidewallconstruction failsduetosomegeometrical reason,for
example,self-intersection, thenthedefaultoptionisresettoExtend
andintersect.
○Ifmodifiedsurfaceandtheneighboring surfaceareanalytic,thatis,
cylindrical, planar,conical,toroidal,ortabulatedcylinderandthetangency
propagation issettoNo,thesurfacesareattachedineitherofthefollowing
ways:
◆Iftheneighboring surfaceisidentifiedasaround,thentheattachment
issimilartotheabovementioned roundsurface.
◆Iftheneighboring surfaceisnotaroundsurface,thenthesurfacesare
attachedusingtheCreatesidesurfacesoption.
○Ifmodifiedsurfaceandtheneighboring surfaceareanalytic,thatis,
cylindrical, planar,conical,toroidal,ortabulatedcylinder,thetangencyis
alonganisolineandthetangencypropagation issettoYes,thesurfacesare
attachedineitherofthefollowingways:
◆Iftheneighboring surfaceisidentifiedasaround,thentheattachment
issimilartotheabovementioned roundsurface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattachedineitherofthefollowingways:
◆Iftheneighboring surfaceisidentifiedasaround,thentheattachment
issimilartotheabovementioned roundsurface.
◆Iftheneighboring surfaceisnotaroundsurface,theneighboring
surfaceisdraggedtomaintainthetangencybetweenthesurfaces.
RefertothesectionTangencyPropagation onpage1081formore
information ontangencypropagation anddraggedgeometry.
OffsetGeometryFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforOffset
Geometry feature.Italsoshowshowtocreate,redefine,andaccesstheproperties
ofthisfeature.
1076 Creo®Parametric TOOLKIT User’sGuideIntroduction
TheOffsetGeometry featureallowyoutooffsetageometryselectionthatbelongs
toasolidgeometryortoaquilt,andreattachitbacktothesolidorquilt.Youcan
offsetthefollowinggeometryselection:
•Anysurfacecollection.
•Anintentsurface.
•Anycombination oftheabovegeometries.
Aoffsetfeaturewillactonasinglegeometryselection.Tooffsetadifferent
geometryselection,anewOffsetGeometry featuremustbecreated.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Anintentsurface.
•Anycombination oftheabovegeometries.
Aoffsetfeaturewillactonasinglegeometryselection.Tooffsetadifferent
geometryselection,anewOffsetGeometry featuremustbecreated.
TheElementTreeforOffsetGeometry
TheelementtreefortheOffsetGeometry featureisdocumented intheheaderfile
ProFlexOffset.h, andisshowninthefollowingfigure.
ElementTreeforOffsetGeometry
ThefollowingtabledescribestheelementsintheelementtreefortheOffset
Geometry feature:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisOffset_
Geom.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
collection ofsurfacestooffset.
PRO_E_OGF_OFFSET_VAL PRO_VALUE_TYPE_DOUBLE Mandatory element.Specifiesthe
offsetvalue.Ittakesvalue
between[-1.00e+06, 1.00e+06].
ElementTrees:CreoFlexibleModelingFeatures 1077ElementID DataType Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoffsetvalue.Ittakesvalue
between[-1.00e+06, 1.00e+06].
ElementTrees:CreoFlexibleModelingFeatures 1077ElementID DataType Description
PRO_E_OGF_DIR_OPT PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionofoffset.Ittakesthe
followingvalues:
•PRO_FLXOGF_DIR_
NORMAL—Offsets the
geometrynormaltothe
selectedsurface.
•PRO_FLXOGF_DIR_FLIP—
Flipsthedirectionofoffset.
PRO_E_FLEX_OPTS_CMPND Compound Mandatory elementthatcontains
theflexiblemodelinggeometry
attachment optionstoattachthe
surfacesoffset.Specifiesthe
integerandchaincollection type
elements.Theelementsrelatedto
reattachment ofgeometryin
flexiblemodelingaredefinedin
ProFlxmdlOpts.h.
Formoreinformation, seethe
sectionAttachment Geometry
Featureonpage1065.
PRO_E_FLXSLV_PROP_
CONSTRSArray Optionalelement.Specifiesan
arraythatcontainsthetangency
conditions andthereference
geometryelementsfortangency
propagation. Thiselementmustbe
specifiedwhentheelement PRO_
E_FLEX_PROPAGATE_
TANGENCY issettoPRO_
FLEXMODEL_OPT_YES inthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconditions andthereference
geometryelementsfortangency
propagation. Thiselementmustbe
specifiedwhentheelement PRO_
E_FLEX_PROPAGATE_
TANGENCY issettoPRO_
FLEXMODEL_OPT_YES inthe
headerfileProFlxmdlOpts.h.
Theelementsrelatedto
propagation oftangencyinflexible
modelingaredefinedin
ProFlexTanPropOpts.h. For
moreinformation, seethesection
TangencyPropagation onpage
1081.
PRO_E_STD_FLEX_
PROPAGATIONPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesa
patternormirrorrecognition
featuretopropagate theoffset
geometryfeaturechanges.
ModifyAnalyticSurfaceFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforModify
AnalyticSurfacefeatureforflexiblemodeling. Italsoshowshowtocreate,
redefine,andaccesstheproperties ofthisfeature.
1078 Creo®Parametric TOOLKIT User’sGuideIntroduction
TheModifyAnalyticSurfacefeatureallowsyoutomodifytheanalyticsurfaces.
Themodification isdonebycreatingandmodifying basicdimensions thatdefine
eachsurfacetype.
Thefollowinganalyticsurfacescanbemodified:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheModifyAnalyticSurfacefeatureallowsyoutomodifytheanalyticsurfaces.
Themodification isdonebycreatingandmodifying basicdimensions thatdefine
eachsurfacetype.
Thefollowinganalyticsurfacescanbemodified:
•Cylinder—The axisremainsfixedandtheradiuscanbemodified.
•Torus—The axisofrevolution ofthecircleremainsfixed.Theradiusofthe
circleandthedistance(radius)fromthecenterofthecircletotheaxisof
revolution canbemodified.
•Cone—The axisandvertexoftheconeremainfixed,andtheanglecanbe
modified.
TheElementTreeforModifyAnalyticSurface
TheelementtreefortheModifyAnalyticSurfacefeatureisdocumented inthe
headerfileProFlexMag.h, andisshowninthefollowingfigure.
ElementTreeforModifyAnalyticSurface
ThefollowingtabledescribestheelementsintheelementtreefortheModify
AnalyticSurfacefeature:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisMODIFY_
ANALYTIC_SURFACE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisMODIFY_
ANALYTIC_SURFACE.
PRO_E_STD_SURF_ PRO_VALUE_TYPE_ Mandatory element.Specifiesthe
ElementTrees:CreoFlexibleModelingFeatures 1079ElementID DataType Description
COLLECTION_APPL SELECTION collection ofanalyticalsurfacesets
tobemodified.Thevalidsurface
selections are:cylindrical, conical
ortoroidalsurfaces.
Note
Youcanspecifyonlyone
referencesurfaceorsurface
regionatatimeinthis
element.
PRO_E_STD_FLEX_
PROPAGATIONPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesa
patternormirrorrecognition
featuretopropagate themodified
analyticsurfacefeaturechanges.
PRO_E_FLEX_OPTS_CMPND Compound Mandatory elementthatcontains
theflexiblemodelinggeometry
attachment optionstoattachthe
modifiedsurfaces.Specifiesthe
integerandchaincollection type
elements.Theelementsrelatedto
reattacofgeometryinflexible
modelingaredefinedin
ProFlxmdlOpts.h.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattachment optionstoattachthe
modifiedsurfaces.Specifiesthe
integerandchaincollection type
elements.Theelementsrelatedto
reattacofgeometryinflexible
modelingaredefinedin
ProFlxmdlOpts.h.
Formoreinformation, seethe
sectionAttachment Geometry
Featureonpage1065.
PRO_E_FLXSLV_PROP_
CONSTRSArray Optionalelement.Specifiesan
arraythatcontainsthetangency
conditions andthereference
geometryelementsfortangency
propagation. Thiselementmustbe
specifiedwhentheelement PRO_
E_FLEX_PROPAGATE_
TANGENCY issettoPRO_
FLEXMODEL_OPT_YES inthe
headerfileProFlxmdlOpts.h.
Theelementsrelatedto
propagation oftangencyinflexible
modelingaredefinedin
ProFlexTanPropOpts.h. For
moreinformation, seethesection
TangencyPropagation onpage
1081.
PRO_E_MAG_ANGLE_VAL PRO_VALUE_TYPE_DOUBLE Mandatory elementforconic
surface.Specifiestheangleofthe
conicsurface.
Theelementtakesangularvalue
between[0.5,89]degrees.
1080 Creo®Parametric TOOLKIT User’sGuideElementID DataType Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurface.Specifiestheangleofthe
conicsurface.
Theelementtakesangularvalue
between[0.5,89]degrees.
1080 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MAG_RADII_VAL PRO_VALUE_TYPE_DOUBLE Mandatory elementforcylindrical
andatoroidalsurface.
Forcylindrical surface,the
elementspecifiestheradiusofthe
cylindrical surface.
Fortorodialsurface,theelement
specifiestheradiusofrevolution
ofthetoroidalsurface.
Theelementtakesvaluebetween
[0,1.00e+06].
PRO_E_MAG_RADII2_VAL PRO_VALUE_TYPE_DOUBLE Mandatory elementforconic
surface.Specifiesthecircleradius
ofthetoroidalsurface.
Theelementtakesvaluebetween
[0,1.00e+06].
TangencyPropagation
Thissectiondescribeshowtoconstructandaccesstheelementsforpropagating
tangencyinaflexiblemodelingfeature.
Introduction
WhengeometryismodifiedwithMove,Offset,orModifyAnalyticcommand, you
canmaintainthetangencybetweenthemodifiedgeometryandtheneighboring
geometry.Tomaintainthetangency,theneighboring geometrymaybemodified,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcanmaintainthetangencybetweenthemodifiedgeometryandtheneighboring
geometry.Tomaintainthetangency,theneighboring geometrymaybemodified,
thoughitwasnotselectedformodification. Thegeometrythatisincludedduring
tangencypropagation isdefinedasdraggedgeometry.Thedraggedgeometryis
modifiedinsuchawaythatitalwaysremainstangential tothedirectlymodified
geometry.Thetangencypropagation stopswhentheapplication recognizes a
surfacethatisroundorchamfer.Thechamferorroundsurface,exceptvariable
rounds,isrecreatedafterthegeometryismodified.Theroundandchamfer
geometryarecalledconnecting geometry.
Depending onthetypeofroundsurface,thetangencymayormaynotbe
propagated. Theroundsareofthefollowingtypes:
•Roundsthatcanbepropagated. Tangencypropagation canbeforcedtobe
carriedthroughandcontinueontoadjacenttangentgeometry.
•Roundsthatcannotbepropagated. Thetangencystopsandcannotbeforcedto
gofurther.
•Roundsthatcannotberecreated.Thesearemainlythevariablerounds.
Variableroundscanberemovedbutcannotberecreated.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Roundsthatcannotbepropagated. Thetangencystopsandcannotbeforcedto
gofurther.
•Roundsthatcannotberecreated.Thesearemainlythevariablerounds.
Variableroundscanberemovedbutcannotberecreated.
ElementTrees:CreoFlexibleModelingFeatures 1081•Interfering rounds.Theseareroundsthatdonotconnecttransformed or
draggedgeometrytotherestofthemodelbuthavetoberemovedand
recreatedtoaccommodate thechangesinthetransformed geometry,dragged
geometry,andotherrounds.
Theroundorchamfersurfacesconnectthedirectlymodifiedgeometryandthe
draggedsurfacestothebackground geometry.Thebackground geometryisthe
basegeometrythatisnotmodified.
Themodified,dragged,connecting, fixed,andbackground geometryaredisplayed
indifferentcolorsduringmodification intheCreoParametric userinterfaceas
showninthefigurebelow:
1—Default verticesareautomatically createdwhenyoupropagate tangency
2—Directly modifiedgeometry
3—Dragged geometry
4—Rounds thatcannotpropagated
5—Rounds thatcanbepropagated
6—Rounds thatcannotberecreatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2—Directly modifiedgeometry
3—Dragged geometry
4—Rounds thatcannotpropagated
5—Rounds thatcanbepropagated
6—Rounds thatcannotberecreated
7—Interfering rounds
8—Background geometry
1082 Creo®Parametric TOOLKIT User’sGuideYoucancontrolthechangesingeometryduringtangencypropagation by
specifying thetangencyconstraints. Duringtangencypropagation thefixedvertex
constraints arealsoconsidered. Thetangencyconstraint isappliedonareference
geometrythatcaneitherbethedraggedgeometryortheconnecting geometry,or
both.RefertoCreoFlexibleModelingHelpformoreinformation.
Toworkwithtangencypropagation, youmustsetthevalueoftheelement PRO_
E_FLEX_PROPAGATE_TANGENCY toPRO_FLEXMODEL_OPT_YES. The
elementisdefinedintheheaderfileProFlxmdlOpts.h.
Theelement PRO_E_FLXSLV_PROP_CONSTRS isusedtosettheconditions
thatcontrolsthechangesingeometryduringtangencypropagation. Itisseenin
thefollowingfeaturetypes:
•PRO_FEAT_FLEXMOVE (SeeProFlexMove.h)
•PRO_FEAT_FLX_OGF (SeeProFlexOffset.h)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatcontrolsthechangesingeometryduringtangencypropagation. Itisseenin
thefollowingfeaturetypes:
•PRO_FEAT_FLEXMOVE (SeeProFlexMove.h)
•PRO_FEAT_FLX_OGF (SeeProFlexOffset.h)
•PRO_FEAT_ANALYT_GEOM (SeeProFlexMag.h)
TheElementTreeforTangencyPropagation
TheelementtreefortheTangencyPropagation isdocumented intheheaderfile
ProFlexTanPropOpts.h, andisshowninthefollowingfigure.
ElementTreeforTangencyPropagation
ThefollowingtabledescribestheelementsintheelementtreefortheTangency
Propagation:
ElementID DataType Description
PRO_E_FLXSLV_PROP_
CONSTRSArray Specifiesanarrayofconditions
thatcontrolthetangency
propagation.
PRO_E_FLXSLV_CONSTR Compound Mandatory element.Specifiesa
singleconditionfortangency
alongwiththereferencegeometry.
ElementTrees:CreoFlexibleModelingFeatures 1083ElementID DataType Description
PRO_E_FLXSLV_CONSTR_
REFSPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
selectionofreferencegeometry.
PRO_E_FLXSLV_CONSTR_
TYPEPRO_VALUE_TYPE_INTEGER Mandatory element.SpecifiesaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_FLXSLV_CONSTR_
REFSPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
selectionofreferencegeometry.
PRO_E_FLXSLV_CONSTR_
TYPEPRO_VALUE_TYPE_INTEGER Mandatory element.Specifiesa
conditionthatsetsconstraint on
theneighboring surfacesduring
thepropagation oftangency.The
validvaluesaredefinedinthe
enumerated datatype
ProFlxmdlPropOptFlag.
RefertosectionSettingConditions
forTangencyPropagation onpage
1084formoreinformation on
tangencyconditions.
SettingConditions forTangencyPropagation
Youcansettheconditions depending ongeometrytypethatmustbeconsidered
duringtangencypropagation. Theconditions arespecifiedusingtheenumerated
datatypeProFlxmdlPropOptFlag. Thevalidvaluesare:
•PRO_FLXSLV_CONSTR_TYPE_FIXED—Specifies thatthereference
geometrymustbefixed.Tangencyisnotmaintained betweenthemodified
geometryandtheneighboring geometry.Youcansetthevalueforfollowing
typesofgeometry:
○Planarsurface
○Cylindrical surface
○Conicalsurface
○Toroidalsurface
○Sphericalsurface
○Tabulatedcylinderxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometryandtheneighboring geometry.Youcansetthevalueforfollowing
typesofgeometry:
○Planarsurface
○Cylindrical surface
○Conicalsurface
○Toroidalsurface
○Sphericalsurface
○Tabulatedcylinder
○Surfaceofrevolution
○Roundsurface
○Edge(surfaceisoline)onthesurface
○Vertexonthesurface
Note
Youcanspecifythecondition PRO_FLXSLV_CONSTR_TYPE_FIXED
whilemanipulating thegeometryofparts,usingtheCreoFlexible
Modelingcommands, evenifthevalueofPRO_E_FLEX_PROPAGATE_
TANGENCY issettoPRO_FLEXMODEL_OPT_NO. Herethereference
roundandchamfergeometryarenotconsidered asroundsandchamfers.
1084 Creo®Parametric TOOLKIT User’sGuide•PRO_FLXSLV_CONSTR_TYPE_FIX_AXIS—Specifies thattheaxisofthe
referencegeometrymustbefixed.Youcansetthevalueforfollowingtypesof
geometry:
○Cylindrical surface
○Conicalsurface
○Toroidalsurface
○Sphericalsurface
○Surfaceofrevolution
•PRO_FLXSLV_CONSTR_TYPE_FIX_CNTR—Specifies thatthecenterof
thereferencegeometrymustbefixed.Youcansetthevalueforfollowing
typesofgeometry:
○Toroidalsurfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○Sphericalsurface
○Surfaceofrevolution
•PRO_FLXSLV_CONSTR_TYPE_FIX_CNTR—Specifies thatthecenterof
thereferencegeometrymustbefixed.Youcansetthevalueforfollowing
typesofgeometry:
○Toroidalsurface
○Sphericalsurface
•PRO_FLXSLV_CONSTR_TYPE_FIX_NORM—Specifies thatthereference
geometrymustbenormaltothedirectlymodifiedgeometry.Youcansetthe
valueforfollowingtypeofgeometry:
○Planarsurface
•PRO_FLXSLV_CONSTR_TYPE_CONST_R1—Specifies thattheminor
radiusofreferencegeometrymustbeconstant.Youcansetthevaluefor
followingtypesofgeometry:
○Cylindrical surface
○Toroidalsurface—The minordiameteriskeptconstant.
○Sphericalsurface
•PRO_FLXSLV_CONSTR_TYPE_CONST_R2—Specifies thatthemajor
radiusofreferencegeometrymustbeconstant.Youcansetthevaluefor
followingtypeofgeometry:
○Toroidalsurface
•PRO_FLXSLV_CONSTR_TYPE_CONST_ANG—Specifies thattheangle
betweenthereferencegeometryanddirectlymodifiedgeometrymustbe
constant.Youcansetthevalueforfollowingtypeofgeometry:
○Conicalsurfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_FLXSLV_CONSTR_TYPE_CONST_ANG—Specifies thattheangle
betweenthereferencegeometryanddirectlymodifiedgeometrymustbe
constant.Youcansetthevalueforfollowingtypeofgeometry:
○Conicalsurface
•PRO_FLXSLV_CONSTR_TYPE_FIX_POLE—Specifies thatthepositionof
thepoleinthereferencegeometrymustbefixed.Youcansetthevaluefor
followingtypeofgeometry:
○Conicalsurface
ElementTrees:CreoFlexibleModelingFeatures 1085•PRO_FLXSLV_CONSTR_TYPE_PRPG_THRU—Specifies thatthetangency
mustbepropagated tillthelastavailableroundsurfaceortillthesurfaceafter
whichthetangencywillbreak.
○Roundsurface
○Cylindrical surface
•PRO_FLXSLV_CONSTR_TYPE_FIX_RNDEDG_PNT—Specifies thatthe
endpoint(vertex)ontheedgeofthereferencegeometrymustbefixed.You
cansetthevalueforfollowingtypeofgeometry:
○Roundsurface
•PRO_FLXSLV_CONSTR_FIX_WITH_TNGCY—Specifies thatthetangency
mustbemaintained betweenthemodifiedgeometryandtheneighboring
draggedgeometry,andfurtherbetweentheneighboring draggedgeometryandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_FLXSLV_CONSTR_FIX_WITH_TNGCY—Specifies thatthetangency
mustbemaintained betweenthemodifiedgeometryandtheneighboring
draggedgeometry,andfurtherbetweentheneighboring draggedgeometryand
connecting geometry.Youcansetthevalueforfollowingtypesofgeometry:
○Planarsurface
○Cylindrical surface
○Conicalsurface
○Toroidalsurface
○Sphericalsurface
○Tabulatedcylinder
○Surfaceofrevolution
○Roundsurface
○Edge(surfaceisoline)onthesurface
○Vertexonthesurface
•PRO_FLXSLV_CONSTR_TYPE_CONST_R—Specifies thattheradiusof
referencegeometrymustbeconstant.Youcansetthevalueforfollowing
typesofgeometry:
○Cylindrical surface
○Sphericalsurface
•PRO_FLXSLV_CONSTR_TYPE_KEEP_SPHERICAL—Specifies thatthe
shapeofthespheredoesnotchange,thoughtheradiuscanchange.Youcan
setthevalueforfollowingtypesofgeometry:
○Sphericalsurface
MirrorFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforMirror
featureforflexiblemodeling. Italsoshowshowtocreate,redefine,andaccessthe
properties ofthisfeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○Sphericalsurface
MirrorFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforMirror
featureforflexiblemodeling. Italsoshowshowtocreate,redefine,andaccessthe
properties ofthisfeature.
1086 Creo®Parametric TOOLKIT User’sGuideIntroduction
TheMirrorfeatureallowsyoutomirroraselectedsetofgeometryaboutaplane.
Youcaneitherattachthemirroredgeometrytothesolidorquiltfromwhichitwas
createdorkeepitdetached.
Ifthegeometryselectionforthemirrorfeatureincludesorisattachedbyround
geometry,thentheroundgeometrycanberecreatedinthenewmirroredlocation.
Note
ThegroupheaderoftheMirrorfeaturebehavesasastandardfeature.Youcan
extracttheheaderelementtreeinCreoParametric TOOLKIT.
TheElementTreeforMirror
TheelementtreefortheMirrorfeatureisdocumented intheheaderfile
ProFlexMirror.h, andisasshowninthefollowingfigure:
ElementTreeforMirror
ThefollowingtabledescribestheelementsintheelementtreefortheMirror
feature:
ElementTrees:CreoFlexibleModelingFeatures 1087ElementID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTreeforMirror
ThefollowingtabledescribestheelementsintheelementtreefortheMirror
feature:
ElementTrees:CreoFlexibleModelingFeatures 1087ElementID DataType Description
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisMirror_
Geometry.
PRO_E_MGF_REFS Compound Compound elementthatspecifics
thegeometry,curves,anddatums
tobemirrored.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
collection ofsurfacesetsofthe
geometrytobemirrored.
PRO_E_MGF_MIRROR_PLANE PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumplaneorintentdatumplane
aboutwhichthegeometrywillbe
mirrored.
PRO_E_MGF_DATUMS PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
collection ofcurvesanddatum
entitiestobemirrored.
PRO_E_FLEX_OPTS_CMPND Compound Mandatory elementthatcontains
theCreoFlexibleModeling
geometryattachment optionsto
attachthemirroredsurfaces.
Specifiestheintegerandchain
collection typeelements.ThexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_FLEX_OPTS_CMPND Compound Mandatory elementthatcontains
theCreoFlexibleModeling
geometryattachment optionsto
attachthemirroredsurfaces.
Specifiestheintegerandchain
collection typeelements.The
elementsrelatedtoreattachment of
geometryinflexiblemodelingare
definedinProFlxmdlOpts.h.
Formoreinformation, seethe
sectionAttachment Geometry
Featureonpage1065.
SubstituteFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforSubstitute
feature.Italsoshowshowtocreate,redefine,andaccesstheproperties ofthis
feature.
Introduction
TheSubstitute featureallowsyoutoreplaceageometryselectionthatbelongstoa
solidgeometryoraquiltwithreplacingsurfaces.Thereplacingsurfacesare
attachedtothesolidorquilt,andanyroundgeometrybetweenthegeometry
selection.Themodelisrecreatedafterthereplacinggeometryisattached.
Youcansubstitutethefollowinggeometryselection:
•Anysurfacecollection.
•Anintentsurface.
•Anycombination oftheabovegeometries.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselection.Themodelisrecreatedafterthereplacinggeometryisattached.
Youcansubstitutethefollowinggeometryselection:
•Anysurfacecollection.
•Anintentsurface.
•Anycombination oftheabovegeometries.
1088 Creo®Parametric TOOLKIT User’sGuide•Anyone-sidededgesonsurfacesorquilts.
Allthesurfacesandone-sidededgesinthegeometryselectionmustbelongtothe
samesolidgeometryortothesamequilt.Thegeometryselectionmustnotbe
tangential totheneighboring geometry,orshouldbeattachedtotheneighboring
geometrywithroundgeometry.
Thereplacingsurfacesmustbelargeenoughtoattachtotheextensionofthe
neighboring geometry,withouttheneedtoextendthereplacingsurfaces.
Aftersubstitution, thereplacingsurfacesthatdefinetheone-sidededgeloopsare
extendedandtrimmedsothattheresultingedgeslieonthesubstituting geometry.
RefertotheCreoFlexibleModelingHelpformoreinformation.
TheElementTreeforSubstitute
TheelementtreefortheSubstitute featureisdocumented intheheaderfile
ProFlexSubstitute.h, andisshowninthefollowingfigure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheElementTreeforSubstitute
TheelementtreefortheSubstitute featureisdocumented intheheaderfile
ProFlexSubstitute.h, andisshowninthefollowingfigure.
ElementTreeforSubstitute
ThefollowingtabledescribestheelementsintheelementtreefortheSubstitute
feature:
ElementTrees:CreoFlexibleModelingFeatures 1089ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoffeature.Thevalueofthis
featuremustbePRO_FEAT_
FLEXSUBST.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
Thedefaultvalueis
Substitute.
PRO_E_CMP_SUBSTITUTED Compound Compound elementforsurfacesto
besubstituted.
PRO_E_FLXSUBST_METHOD PRO_VALUE_TYPE_INT Specifieswhichkindofgeometry
mustbesubstituted. Thevalid
geometrytypesare:
•PRO_FLEXSUBST_
SURFACES—Specifies that
surfacesmustbesubstituted.
•PRO_FLEXSUBST_LOOPS—
Specifiesthatone-sidededges
mustbesubstituted.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONMandatory elementforPRO_
FLEXSUBST_SURFACES.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacesmustbesubstituted.
•PRO_FLEXSUBST_LOOPS—
Specifiesthatone-sidededges
mustbesubstituted.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONMandatory elementforPRO_
FLEXSUBST_SURFACES.
Specifiesthecollection ofsurfaces
thatwillbereplacedbythe
substituting surfaces.
PRO_E_FLXSUBST_
EDGELOOPSPRO_VALUE_TYPE_
SELECTIONMandatory elementforPRO_
FLEXSUBST_LOOPS. Specifies
thecollection ofone-sidededges
thatwillbereplacedbythe
substituting surfaces.
PRO_E_CMP_SUBTITUTING Compound Compound elementfor
substituting surfaces.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
collection ofsubstituting surfaces.
1090 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_OPT_SUBST_SRF
_NORM_SIDEPRO_VALUE_TYPE_BOOLEAN Mandatory element.Specifiesthe
directionofthenormalvectorsof
thesubstituting surfaces.
Thiselementtakesthefollowing
values:
•PRO_B_TRUE—Specifies that
theside1isdirectionof
normalvector.
•PRO_B_FALSE—Specifiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdirectionofthenormalvectorsof
thesubstituting surfaces.
Thiselementtakesthefollowing
values:
•PRO_B_TRUE—Specifies that
theside1isdirectionof
normalvector.
•PRO_B_FALSE—Specifies
thattheside2isdirectionof
normalvector.
PRO_E_FLEX_OPTS_CMPND Compound Mandatory elementthatcontains
theflexiblemodelinggeometry
attachment optionstoattachthe
substituting surfaces.Specifiesthe
integerandchaincollection type
elements.Theelementsrelatedto
reattachment ofgeometryin
flexiblemodelingaredefinedin
ProFlxmdlOpts.h.
Formoreinformation, seethe
sectionAttachment Geometry
Featureonpage1065.
PlanarSymmetryRecognition Feature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforPlanar
Symmetry Recognition feature.Italsoshowshowtocreate,redefine,andaccess
theproperties ofthisfeature.
Introduction
ThePlanarSymmetry Recognition featureallowsyoutoidentifyandmodify
geometrythatissymmetric withrespecttoaplane.Themodifications madetothe
geometryononesideareautomatically propagated totheothersideandthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometrythatissymmetric withrespecttoaplane.Themodifications madetothe
geometryononesideareautomatically propagated totheothersideandthe
symmetry iskept.
ThePlanarSymmetry Recognition featureidentifiessymmetrical geometryinthe
followingways:
•Youcancollecttwoseedsurfacesorsurfaceregionsthataresymmetric. The
featurecomputestheplaneofsymmetry,andfindsallpairsofneighboring
surfacesandsurfaceregionswhicharesymmetric withrespecttothe
symmetry plane.Thepropagation endswhennon-symmetric neighboring
surfacesarefound.
ElementTrees:CreoFlexibleModelingFeatures 1091Thetwoseedsurfacesorregionsmustbelongto:
○Thesolidgeometry.
○Asinglequilt.
○Twoquilts.
•Youcancollectaseedsurfaceorsurfaceregionandaplaneofsymmetry.The
featurefindsthemirrorimageoftheseedsurfaceorsurfaceregionand,finds
allthepairsofneighboring surfacesandsurfaceregionswhicharesymmetric
withrespecttothesymmetry plane.
According tothecorrespondence betweenthegeometryofthesymmetricalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallthepairsofneighboring surfacesandsurfaceregionswhicharesymmetric
withrespecttothesymmetry plane.
According tothecorrespondence betweenthegeometryofthesymmetrical
members,thefollowingvariationofplanarsymmetry recognition arepossible:
•Identical—Thereisexactcorrespondence betweenthesurfacesofthe
symmetrical membersaswellasbetweentheintersection edgesdefinedby
thesemembersandthesurrounding geometry.
•Similar—Thereisexactcorrespondence betweenthesurfacesofthe
symmetrical members,butthereisnoexactcorrespondence betweenthe
intersection edgesdefinedbythesemembersandthesurrounding geometry.
Thenumberofintersection loopsmustbethesame,butthetypeofedges,
numberofedgesineachintersection loopandtheintersected modelsurfaces
donothavetobethesame.
Note
ThegroupheaderofthePlanarSymmetry Recognition featurebehavesasa
standardfeature.YoucanextracttheheaderelementtreeinCreoParametric
TOOLKIT.
TheElementTreeforPlanarSymmetryRecognition
FeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
ThegroupheaderofthePlanarSymmetry Recognition featurebehavesasa
standardfeature.YoucanextracttheheaderelementtreeinCreoParametric
TOOLKIT.
TheElementTreeforPlanarSymmetryRecognition
Feature
TheelementtreeforthePlanarSymmetry Recognition featureisdocumented in
theheaderfileProSymmetryRecognition.h, andisshowninthefollowing
figure:
1092 Creo®Parametric TOOLKIT User’sGuideElementTreeforPlanarSymmetryRecognition Feature
ThefollowingtabledescribestheelementsintheelementtreeforthePlanar
Symmetry Recognition feature:
ElementID DataType Description
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisMirror_
Recognition.
PRO_E_PSR_PLN_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
collection oftwoseedsurfacesor
oneseedsurfaceandthesymmetry
mirrorplane.
PRO_E_PSR_DTM_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
collection ofdatumsandcurve
chainsthatwillbeincludedinthe
symmetry recognition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoneseedsurfaceandthesymmetry
mirrorplane.
PRO_E_PSR_DTM_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
collection ofdatumsandcurve
chainsthatwillbeincludedinthe
symmetry recognition.
PRO_E_PSR_RCG_OPT PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofsymmetrical geometryto
berecognized:Identical or
Similar.
Thiselementtakesthefollowing
values:
•PRO_PSR_IDENTICAL
•PRO_PSR_SIMILAR
AttachFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforAttach
feature.Italsoshowshowtocreate,redefine,andaccesstheproperties ofthis
feature.
ElementTrees:CreoFlexibleModelingFeatures 1093Introduction
TheAttachfeatureallowsyoutoattachopenquiltstosolidorquiltgeometry,if
theopenquiltdoesnotintersectthesolidorquiltgeometry.Youcanselectan
openquiltandattachittoanotherquiltorsolidgeometrywithinthesamemodel.
Youcanalsoselecttwoopenquiltswithinthesamemodelwhichdonotintersect
andattachthem.
ThisfeatureisusefulincaseofUDFplacement whenthegeometryoftheUDF
doesnotintersectthepart.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanalsoselecttwoopenquiltswithinthesamemodelwhichdonotintersect
andattachthem.
ThisfeatureisusefulincaseofUDFplacement whenthegeometryoftheUDF
doesnotintersectthepart.
TheElementTreeforAttachFeature
TheelementtreefortheAttachfeatureisdocumented intheheaderfile
ProFlexAttach.h, andisshowninthefollowingfigure:
AttachFeatureElementTree
ThefollowingtabledescribestheelementsintheelementtreefortheAttach
feature:
1094 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoffeature.Thevalueofthis
featuremustbePRO_FEAT_
ATTACH.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisAttach_1.
PRO_E_REF_ATTACH_PRIM_
QLTPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
primaryopenquilttobeattached
toanotherquilt.Theprimaryquit
willbeextendedortrimmed
duringtheattachment.
PRO_E_REF_ATTACH_MERG_
QLTPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprimaryopenquilttobeattached
toanotherquilt.Theprimaryquit
willbeextendedortrimmed
duringtheattachment.
PRO_E_REF_ATTACH_MERG_
QLTPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
mergequiltorsolidgeometryupto
whichtheprimaryquiltcanbe
extendedortrimmed.
PRO_E_OPT_ATTACH_OPER PRO_VALUE_TYPE_BOOLEAN Mandatory element.Specifies
whethertoattachtheprimaryquilt
tothemergequiltorsolid
geometry.
Thiselementtakesthefollowing
values:
•PRO_B_TRUE—Specifies that
theprimaryquiltmustnotbe
attached.
•PRO_B_FALSE—Specifies
thattheprimaryquiltmustbe
attached.
PRO_E_OPT_ATTACH_RMV_
MATPRO_VALUE_TYPE_BOOLEAN Thiselementisavailablewhenthe
element PRO_E_REF_ATTACH_
MERG_QLT hasnoreference
geometryspecified.Specifiesif
materialmustbeaddedor
removed.
Thiselementtakesthefollowing
values:
•PRO_B_TRUE—Specifies that
thematerialmustberemoved.
•PRO_B_FALSE—Specifies
thatthematerialmustbe
added.
PRO_E_OPT_ATTACH_PQ_DIR PRO_VALUE_TYPE_BOOLEAN Thiselementisavailablewhenthe
element PRO_E_OPT_ATTACH_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthematerialmustberemoved.
•PRO_B_FALSE—Specifies
thatthematerialmustbe
added.
PRO_E_OPT_ATTACH_PQ_DIR PRO_VALUE_TYPE_BOOLEAN Thiselementisavailablewhenthe
element PRO_E_OPT_ATTACH_
OPERhasitsvalueasPRO_B_
FALSE.Specifiesthesideofthe
quiltthatmustbeincludedinthe
mergedquilt
Thiselementtakesthefollowing
values:
ElementTrees:CreoFlexibleModelingFeatures 1095ElementID DataType Description
•PRO_B_TRUE—Specifies that
thesecondsideofthequilt
mustbemerged.
•PRO_B_FALSE—Specifies
thatthefirstsideofthequilt
mustbemerged.
PRO_E_OPT_ATTACH_MGQ_
DIRPRO_VALUE_TYPE_BOOLEAN Thiselementisavailablewhenthe
element PRO_E_OPT_ATTACH_
OPERhasitsvalueasPRO_B_
TRUEandtheelement PRO_E_
REF_ATTACH_MERG_QLT has
referencegeometryspecified.
Specifiesthedirectioninwhich
thematerialshouldbeaddedor
removedintheprimaryquilt.
Thiselementtakesthefollowing
values:
•PRO_B_TRUE—Specifies that
thematerialmustbeaddedor
removedfromthesecondside.
•PRO_B_FALSE—Specifies
thatthematerialmustbeadded
orremovedfromthefirstside.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThiselementtakesthefollowing
values:
•PRO_B_TRUE—Specifies that
thematerialmustbeaddedor
removedfromthesecondside.
•PRO_B_FALSE—Specifies
thatthematerialmustbeadded
orremovedfromthefirstside.
PRO_E_OPT_ATTACH_PIO PRO_VALUE_TYPE_BOOLEAN Specifiesifthequiltshouldbe
attachedtothemodelgeometryin
thesamewayasitwasattached
previously byusingtheattachment
information storedintheintent
objects.
PRO_E_OPT_ATTACH_RNDCH PRO_VALUE_TYPE_BOOLEAN Specifiesiftheroundorchamfer
geometryofthequiltshouldbe
attachedusingtheattachment
information storedintheintent
objects.
PRO_E_FLEX_OPTS_CMPND Compound Mandatory elementthatcontains
theflexiblemodelinggeometry
attachment optionstoattachthe
substituting surfaces.Specifiesthe
integerandchaincollection type
elements.Theelementsrelatedto
reattachment ofgeometryin
flexiblemodelingaredefinedin
ProFlxmdlOpts.h.
Formoreinformation, seethe
sectionAttachment Geometry
Featureonpage1065.
1096 Creo®Parametric TOOLKIT User’sGuideExample1:CreatingaFlexibleModel
Featurexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxflexiblemodelingaredefinedin
ProFlxmdlOpts.h.
Formoreinformation, seethe
sectionAttachment Geometry
Featureonpage1065.
1096 Creo®Parametric TOOLKIT User’sGuideExample1:CreatingaFlexibleModel
Feature
ThesamplecodeinUgFlexModelCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat shows
howtocreateaCreoFlexibleModelingfeature.
ElementTrees:CreoFlexibleModelingFeatures 109750
ElementTrees:BushingLoad
Introduction...........................................................................................................1099
TheFeatureElementTreeforBushingLoads..........................................................1099
ThischapterdescribeshowtoconstructandaccesstheelementtreeforBushing
LoadfeaturesinCreoParametric TOOLKIT.Italsoshowshowtoredefine,create
andaccesstheproperties ofthesefeatures.
1098 Creo®Parametric TOOLKIT User’sGuideIntroduction
Thebushingloadsinthemodelarerepresented undertheBushingLoadnodeinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandaccesstheproperties ofthesefeatures.
1098 Creo®Parametric TOOLKIT User’sGuideIntroduction
Thebushingloadsinthemodelarerepresented undertheBushingLoadnodein
theproductmechanism tree.AsthebushingloadisaregularCreoParametric
feature,italsohasanappropriate nodeinthemainmodeltree.Youcancreate,
edit,andredefinethebushingloads.Tocreatenewbushingloadsselectaweld
connection ora6DOFconnection. Youmustspecifysixstiffnessesandsix
dampingcoefficientsforallthedegreesoffreedomofthereferenceconnection.
Eachcoefficientisassociated withonefeatureparameter.
Note
•Thedefaultunitsofthespringstiffnessesandthedampingcoefficientson
thethreerotationalaxesaredegree-based.
•Ifbushingloadreferenceisaweldconnection, anyaxiscanbelocked.In
thiscasethespringstiffnessonthelockedaxisshouldhaveavalueof-1.0,
regardless ofthecurrentunits.
TheFeatureElementTreeforBushing
Loads
Theelementtreeforthebushingloadfeatureisdocumented intheheaderfile
ProBushingLoadFeat.h, andisshowninthefollowingfigure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxregardless ofthecurrentunits.
TheFeatureElementTreeforBushing
Loads
Theelementtreeforthebushingloadfeatureisdocumented intheheaderfile
ProBushingLoadFeat.h, andisshowninthefollowingfigure.
ElementTrees:BushingLoad 1099ElementTreeforBushingLoads
Thefollowingtabledescribestheelementsintheelementtreeforthebushingload
feature:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature
PRO_E_BUSHLD_REF PRO_VALUE_TYPE_
SELECTIONSpecifiestheweldor6DOF
referenceconnection
PRO_E_BUSHLD_T1_STF_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthespringstiffnesson
the1sttranslation axis
PRO_E_BUSHLD_T1_DMP_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthedampingcoefficient
onthe1sttranslation axis
PRO_E_BUSHLD_T2_STF_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthespringstiffnesson
the2ndtranslation axis
PRO_E_BUSHLD_T2_DMP_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthedampingcoefficient
onthe2ndtranslation axisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCOEFFPRO_VALUE_TYPE_DOUBLE Specifiesthespringstiffnesson
the2ndtranslation axis
PRO_E_BUSHLD_T2_DMP_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthedampingcoefficient
onthe2ndtranslation axis
PRO_E_BUSHLD_T3_STF_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthespringstiffnesson
the3rdtranslation axis
PRO_E_BUSHLD_T3_DMP_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthedampingcoefficient
onthe3rdtranslation axis
PRO_E_BUSHLD_R1_STF_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthespringstiffnesson
the1strotationalaxis
PRO_E_BUSHLD_R1_DMP_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthedampingcoefficient
onthe1strotationalaxis
1100 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_BUSHLD_R2_STF_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthespringstiffnesson
the2ndrotationalaxis
PRO_E_BUSHLD_R2_DMP_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthedampingcoefficient
onthe2ndrotationalaxis
PRO_E_BUSHLD_R3_STF_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthespringstiffnesson
the3rdrotationalaxis
PRO_E_BUSHLD_R3_DMP_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCOEFFPRO_VALUE_TYPE_DOUBLE Specifiesthedampingcoefficient
onthe2ndrotationalaxis
PRO_E_BUSHLD_R3_STF_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthespringstiffnesson
the3rdrotationalaxis
PRO_E_BUSHLD_R3_DMP_
COEFFPRO_VALUE_TYPE_DOUBLE Specifiesthedampingcoefficient
onthe3rdrotationalaxis
ElementTrees:BushingLoad 110151
ElementTrees:CosmeticThread
Introduction...........................................................................................................1103
TheElementTreeforCosmeticThread...................................................................1103
ThischapterdescribeshowtoconstructandaccesstheelementtreeforCosmetic
Threadfeatures.Italsoshowshowtocreate,redefine,andaccesstheproperties of
thesefeatures.
1102 Creo®Parametric TOOLKIT User’sGuideIntroduction
Acosmeticthreadisacosmeticfeaturethatrepresents thediameterofathread.It
isdisplayedinpurple.Unlikeothercosmeticfeatures,youcannotmodifytheline
styleofacosmeticthread.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAcosmeticthreadisacosmeticfeaturethatrepresents thediameterofathread.It
isdisplayedinpurple.Unlikeothercosmeticfeatures,youcannotmodifytheline
styleofacosmeticthread.
Youcancreatecosmeticthreadsusingcylinders,cones,splines,andnon-normal
planesasthereferences. Thesurfacethatyouselectdetermines whethera
cosmeticthreadisexternalorinternal.Ifthesurfaceisashaft,thethreadis
external.Ifthesurfaceisahole,thethreadisinternal.
Youcancreateastandardthreadoranonstandard thread.Whenyouchooseto
createastandardthread,thestandardthreadseriesanddiameterisused.Youcan
create,edit,andredefinethecosmeticthreadfeatures.
TheElementTreeforCosmeticThread
Theelementtreeforthecosmeticthreadfeatureisdocumented intheheaderfile
ProThread.h, andisshowninthefollowingfigure.
ElementTrees:CosmeticThread 1103ElementTreeforCosmeticThread
Thefollowingtabledescribestheelementsintheelementtreeforthecosmetic
threadfeature:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT SpecifiesthetypeoffeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingtabledescribestheelementsintheelementtreeforthecosmetic
threadfeature:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature
PRO_E_FEATURE_FORM PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeofthefeatureform.Usethe
value PRO_EXTRUDE orPRO_
REVOLVE fromtheenumerated
typeProFeatFormType
depending onthethreadedsurface.
•UsePRO_EXTRUDE whenthe
referenced threadedsurfaceis
cylindrical.
•UsePRO_REVOLVE whenthe
referenced threadedsurfaceis
conical.
1104 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Iftheenumerated valueand
referenced threadedsurface
areincorrectly selected,the
featurecreationor
redefinition willfail.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specificsthe
cosmeticthreadfeaturename.The
defaultvalueisCOSMETIC_
THREAD.
PRO_E_THRD_TYPE_OPT_NEW PRO_VALUE_TYPE_BOOLEAN Optionalelement.Specifiesifa
simpleorastandardthreadshould
becreated.Ithastwovalues:
FALSEforsimplethreadandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefaultvalueisCOSMETIC_
THREAD.
PRO_E_THRD_TYPE_OPT_NEW PRO_VALUE_TYPE_BOOLEAN Optionalelement.Specifiesifa
simpleorastandardthreadshould
becreated.Ithastwovalues:
FALSEforsimplethreadand
TRUEforstandardthread.
PRO_E_THRD_SERIES_NEW PRO_VALUE_TYPE_INT Specificthethreadseriesforthe
standardthreads.Fromthe*.hol
filesinformation aboutdifferent
THREAD_SERIES isgathered
andalistisgenerated. Youcan
specifyUNC,UNF,andISOasthe
standardthreadseries.Thecurrent
indextothelistisstoredinthis
element.
PRO_E_THRD_SCREWSIZE_
NEWPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
screwsizeforthestandardthread.
Thescrew_size listis
extractedfromthe*.holfiles
corresponding tothethreadseries.
Theindextothescrew_size
listisstoredinthiselement.
PRO_E_THRD_SURF_NEW PRO_VALUE_TYPE_
SELECTIONSpecifiesthesurfacetothread.
PRO_E_THRD_DIAM_NEW PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
diameterforasimplethread.Ifthe
referencethreadedsurfaceis
conical,thethreaddiametervalue
canbebetween0.0anddiam/4,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_THRD_DIAM_NEW PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
diameterforasimplethread.Ifthe
referencethreadedsurfaceis
conical,thethreaddiametervalue
canbebetween0.0anddiam/4,
where diamisthelargest
estimateddiameterofthecone.
Forallotherreferencesurfaces,
thediametercanhavevalues
between0.1andMAX_DIM_
VALUE,thatisthemaximum
alloweddiametervalue.
PRO_E_THRD_START_REF_
NEWPRO_VALUE_TYPE_
SELECTIONSpecifiesthestartinglocationof
thecosmeticthread.
PRO_E_THRD_DEP_COMP_NEW Compound Specifiesthedepthandflip
elements.Itcontainsthefollowing
elements:
•PRO_E_THRD_DEP_OPT
ElementTrees:CosmeticThread 1105ElementID DataType Description
_NEW
•PRO_E_THRD_FLIP_OPT
_NEW
•PRO_E_THRD_DEP_VAL
_NEW
•PRO_E_THRD_END_REF
PRO_E_THRD_DEP_OPT_NEW PRO_VALUE_TYPE_BOOLEAN Optionalelement.Specifiesthe
depthoption: FALSEforblind
depthoptionandTRUEforthe
depthuptotheselectedentity.
PRO_E_THRD_FLIP_OPT_NEW PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
flipdirectionofthethreadwithxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdepthoption: FALSEforblind
depthoptionandTRUEforthe
depthuptotheselectedentity.
PRO_E_THRD_FLIP_OPT_NEW PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
flipdirectionofthethreadwith
respecttothereferencesurface.
Theflipdirectionisspecifiedby
theenumerated type
ProThreadFlip thattakesthe
followingvalues:
•PRO_COSTHREAD_THD
_FLIP_OPT_FLIP
••PRO_COSTHREAD_THD
_FLIP_OPT_NORM
PRO_E_THRD_DEP_VAL_NEW PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
depthvaluewhentheelement
PRO_E_THRD_DEP_OPT_NEW
isFALSE(Blindoption).Youcan
specifyaminimumdepthof0.1.
Whentheelement PRO_E_
THRD_DEP_OPT_NEW isTRUE,
thenodeisinvisible.
PRO_E_THRD_END_REF PRO_VALUE_TYPE_
SELECTIONMandatory elementwhen PRO_
E_THRD_DEP_OPT_NEW is
TRUE.Specifiesthereference
surfaceuptowhichthethread
depthshouldbecreated.Thisnode
isavailableonlywhentheelement
PRO_E_THRD_DEP_OPT_NEW
isTRUE.Whentheelement PRO_
E_THRD_DEP_OPT_NEW is
FALSE,thenodeisinvisible.
PRO_E_THRD_NOTE_
PARAMS_NEWPRO_VALUE_TYPE_POINTER Reservedforfutureuse.OptionalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_THRD_DEP_OPT_NEW
isTRUE.Whentheelement PRO_
E_THRD_DEP_OPT_NEW is
FALSE,thenodeisinvisible.
PRO_E_THRD_NOTE_
PARAMS_NEWPRO_VALUE_TYPE_POINTER Reservedforfutureuse.Optional
element.Displaysthethread
parameters inadatastructure.
1106 Creo®Parametric TOOLKIT User’sGuide52
ElementTrees:ECADAreaFeature
Introduction toECADAreaFeature.........................................................................1108
ThischapterdescribeshowtoaccessECADAreafeaturethroughCreoParametric
TOOLKIT.
1107Introduction toECADAreaFeature
AnECADAreaspecifieswhereyoucanplaceelectricalcomponents orcannot
placethemtoavoidinterference withotherelectriccomponents orelectrical
routing.YoucancreateanECADareaasasketchedcosmeticfeatureofan
electricalboardpart.However,sincethisareaissketched,youcannotdimension
orregenerate it.
TheECADareacanhaveaclosed3Dvolumerepresented byaquilt.Usethese
quiltstoperformaclearanceandinterference checkontheneighboring electricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorregenerate it.
TheECADareacanhaveaclosed3Dvolumerepresented byaquilt.Usethese
quiltstoperformaclearanceandinterference checkontheneighboring electric
components. YoucanaccessthegeometryoftheECADareafeaturebyusing
standardCreoParametric TOOLKITfunctionssuchas
ProFeatureGeomitemVisit() andProSolidQuiltVisit().
FeatureElementTreefortheECADArea
TheelementtreefortheECADAreafeatureisdocumented intheheaderfile
ProEcadArea.h. Thefollowingfiguredemonstrates theelementtreestructure:
1108 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforanECADArea
Theinformation abouttheelementsinthistreeisasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetype;shouldalwayshave
thevalue PRO_FEAT_COSMETIC.
•PRO_E_IS_ECAD_AREA—Specifies whetherthecreatedcosmeticfeatureis
anECADarea.Thiselementmusthavethevalue PRO_B_TRUE to
distinguish thisfeaturefromothercosmeticfeatures.
•PRO_E_STD_FEATURE_NAME—Specifies thenameoftheECADarea
feature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanECADarea.Thiselementmusthavethevalue PRO_B_TRUE to
distinguish thisfeaturefromothercosmeticfeatures.
•PRO_E_STD_FEATURE_NAME—Specifies thenameoftheECADarea
feature.
ElementTrees:ECADAreaFeature 1109•PRO_E_ECAD_AREA_TYPE—Specifies thetypeofECADareaintheform
oftheenumerated typeProEcadAreaType. Specifythevalueofthis
elementasoneofthefollowing:
○PRO_ECAD_AREA_TYPE_PLACE_KEEPIN—Specifies akeepinregion.
Youcanspecifythedepthoftheareaaboveandbelowtheelectricboard
whilecreatingthisregion.Thedefaultdepthvalueiszero.
○PRO_ECAD_AREA_TYPE_PLACE_KEEPOUT—Specifies akeepout
region.Youcanspecifythedepthoftheareaaboveandbelowtheelectric
boardwhilecreatingthisregion.Thedefaultdepthvalueiszero.
○PRO_ECAD_AREA_TYPE_PLACE_REGION—Specifies agrouparea
section.
○PRO_ECAD_AREA_TYPE_ROUTE_KEEPIN—Specifies aroutingkeepin
regionwhereroutingactionsarepermitted.
○PRO_ECAD_AREA_TYPE_ROUTE_KEEPOUT—Specifies arouting
keepoutregionwhereroutingactionsarenotpermitted.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_ECAD_AREA_TYPE_ROUTE_KEEPIN—Specifies aroutingkeepin
regionwhereroutingactionsarepermitted.
○PRO_ECAD_AREA_TYPE_ROUTE_KEEPOUT—Specifies arouting
keepoutregionwhereroutingactionsarenotpermitted.
○PRO_ECAD_AREA_TYPE_VIA_KEEPOUT—Specifies anareawhere
youcannotcreatevias.
○PRO_ECAD_AREA_TYPE_FLEX_REGION—Specifies aregioncreated
usingflexiblemodelingfeatures.
○PRO_ECAD_AREA_TYPE_USER_DEFINED—Specifies anuser-defined
area.
•PRO_E_STD_SECTION—Specifies thesketchedregionfortheECADarea.
Formoreinformation onhowtopopulatethesectionelementsofthesketched
region,refertotheElementTrees:SketchedFeaturesonpage987chapter.
•PRO_E_ECAD_AREA_3D_VOLUME—A ProBoolean elementthat
specifieswhethertheECADareaappearswitha3Dquilt.OnlyPRO_ECAD_
AREA_TYPE_PLACE_KEEPIN andPRO_ECAD_AREA_TYPE_PLACE_
KEEPOUT typesofECADareasaccepta3Dvolumeononeortwosides.
•PRO_E_ECAD_AREA_DEPTH_TYPE—Specifies thedepthtypeintheform
theenumerated typeProEcadAreaDepthType. ThedepthoptionsarexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxKEEPOUT typesofECADareasaccepta3Dvolumeononeortwosides.
•PRO_E_ECAD_AREA_DEPTH_TYPE—Specifies thedepthtypeintheform
theenumerated typeProEcadAreaDepthType. Thedepthoptionsare
applicable onlyiftheelement PRO_E_ECAD_AREA_3D_VOLUME issetto
PRO_B_TRUE. Theseoptionsareasfollows:
○PRO_ECAD_AREA_DEPTH_ONE_SIDE—Creates theECADareawitha
3Dvolumeononesideoftheelectricalboard.
○PRO_ECAD_AREA_DEPTH_TWO_SIDES_SYM—Places thecreated
ECADareawitha3Dvolumeatthetopandbottomoftheelectricalboard
symmetrically .
1110 Creo®Parametric TOOLKIT User’sGuide○PRO_ECAD_AREA_DEPTH_TWO_SIDES_NOT_SYM—Places the
createdECADareawitha3Dvolumeatthetopandbottomofthe
electricalboardasymmetrically .
•PRO_E_ECAD_AREA_DEPTH—Specifies thedepthfortheECADarea.
•PRO_E_ECAD_AREA_DEPTH2—Specifies theotherdepthvalue,whichis
applicable onlyiftheelement PRO_E_ECAD_AREA_DEPTH_TYPE issetto
PRO_ECAD_AREA_DEPTH_TWO_SIDES_NOT_SYM.
•PRO_E_ECAD_AREA_XHATCH—Specifies whethertheECADareais
createdasameshedregion.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplicable onlyiftheelement PRO_E_ECAD_AREA_DEPTH_TYPE issetto
PRO_ECAD_AREA_DEPTH_TWO_SIDES_NOT_SYM.
•PRO_E_ECAD_AREA_XHATCH—Specifies whethertheECADareais
createdasameshedregion.
•PRO_E_ECAD_AREA_TRIM_BNDRS—Specifies whethertotrimthe
boundaryofanECADarea,wheretheECADareaexceedstheboundaryof
theelectricboard.
•PRO_E_ECAD_AREA_COLOR—Specifies thecoloroftheECADarea.The
defaultcoloroftheECADareaissetintheCreoParametric Optionsdialog
box.
Usethefunction ProElementEcadAreaProColorSet() tosetthe
coloroftheECADarea.Specifyadefined ProColor structureasinput
argument.ThedatafromProColor structureiscopiedtotheelement PRO_
E_ECAD_AREA_COLOR. Whenyouredefinetheelementtree,thedatacopied
fromProColor structureisusedtosetthecoloroftheECADarea.
Thefunction ProElementEcadAreaProColorGet() returnsthecolor
ofthespecifiedECADarea.
•PRO_E_ECAD_AREA_USER_DEF_TYPE—Specifies thenameoftheuser-
definedarea.SimilartotheothertypesofECADareas,thecoloroftheuser-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthespecifiedECADarea.
•PRO_E_ECAD_AREA_USER_DEF_TYPE—Specifies thenameoftheuser-
definedarea.SimilartotheothertypesofECADareas,thecoloroftheuser-
definedECADareaisalsosetusingtheelement PRO_E_ECAD_AREA_
COLOR.
Youcanalsosetthenameandcolorofuser-definedareainacommaseparated
value(.csv)file.The.csvfilecontains2columns,thenamesofuser-
definedareasandthenamesofthecolorsassociated witheacharea.The
namesofthecolorssetinthe.csvfilemustbedefinedinthe*.dmtfile.
Setthepathtothe.csvfileusingtheconfiguration option ecad_usrdef_
area_type_file_path.
Ifyouspecifythenameofauser-definedareafromthe.csvfile,thenthe
ECADareaiscreatedwiththecolorspecifiedforthatareainthe.csvfile.
Foranuser-definedareathatwascreatedfromthe.csvfile,ifyouusethe
element PRO_E_ECAD_AREA_COLOR tosettheareacolor,thenthecolorset
bytheelementoverridesthecolorsetbythe*.csvfile.
RefertotheCreoParametric ECADHelpformoreinformation onhowto
createthe.csvfileandsetcolorsin*.dmtfiles.
ElementTrees:ECADAreaFeature 111153xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbytheelementoverridesthecolorsetbythe*.csvfile.
RefertotheCreoParametric ECADHelpformoreinformation onhowto
createthe.csvfileandsetcolorsin*.dmtfiles.
ElementTrees:ECADAreaFeature 111153
Assembly:BasicAssembly
Access
StructureofAssembliesandAssemblyObjects........................................................1113
VisitingAssemblyComponents ...............................................................................1115
LocationsofAssemblyComponents ........................................................................1119
Assembling Components .......................................................................................1120
RedefiningandReroutingComponents ...................................................................1120
DeletingComponents ............................................................................................1120
FlexibleComponents .............................................................................................1120xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFlexibleComponents .............................................................................................1120
ExplodedAssemblies............................................................................................1122
MergeandCutout..................................................................................................1125
AutomaticInterchange...........................................................................................1125
ThischapterdescribestheCreoParametric TOOLKITfunctionsthataccessthe
contentsofaCreoParametric assembly.Beforeyoureadthischapter,youshould
befamiliarwiththefollowingdocumentation:
•UserInterface:Selectiononpage495
•Core:Coordinate SystemsandTransformations onpage220
•Core:3DGeometry onpage168
1112 Creo®Parametric TOOLKIT User’sGuideStructureofAssemblies andAssembly
Objects
Theobject ProAssembly isaninstanceofProSolid andsharesthesame
declaration. TheProAssembly objectcanthereforebeusedasinputtoanyofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxObjects
Theobject ProAssembly isaninstanceofProSolid andsharesthesame
declaration. TheProAssembly objectcanthereforebeusedasinputtoanyof
theProSolid andProMdlfunctionsapplicable toassemblies. Inparticular,
becauseyoucanusethefunction ProSolidFeatVisit() totraversefeatures,
youcanextracttheassemblydatumfeaturesandtheirgeometryinthesameway
asforparts(described indetailinthechapteronCore:3DGeometry onpage
168).
However,assemblies donotcontainactivegeometryitemsotherthanthosein
datums—that is,no“solid”geometryasdescribedintheCore:3DGeometry on
page168andElementTrees:Principles ofFeatureCreationonpage749chapters.
Therefore, thefunction ProSolidBodySurfaceVisit() willnotfindany
surfaces,andsolidassemblyfeaturessuchasholesandslotswillnotcontain
activesurfacesoredges.
Thesolidgeometryofanassemblyiscontainedentirelyinitscomponents. Each
component isafeatureoftypePRO_FEAT_COMPONENT, whichisareferenceto
apartoranotherassembly,plusasetofparametric constraints fordetermining itsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponent isafeatureoftypePRO_FEAT_COMPONENT, whichisareferenceto
apartoranotherassembly,plusasetofparametric constraints fordetermining its
geometric locationwithintheparentassembly.
Assembly featuresthataresolid,suchasholesandslots,andthereforeaffectthe
solidgeometryofpartsintheassemblyhierarchy,donotthemselves containthe
geometryitemsthatdescribethosemodifications. Theseitemsarealways
containedinthepartswhosegeometryismodified,withinlocalfeaturescreated
forthatpurposeoftypePRO_FEAT_ASSEM_CUT.
ThemostimportantCreoParametric TOOLKITfunctionsforassemblies arethose
thatoperateonthecomponents ofanassembly.Theobject ProAsmcomp, which
isaninstanceofProFeature andsharesitsDHandledeclaration, isdefinedfor
thatpurpose.Eachassemblycomponent istreatedasavarietyoffeature,andthe
integeridentifierofthecomponent isalsothefeatureidentifier.
Anassemblycomponent canbeanotherassembly.Ingeneral,therefore,an
assemblycancontainahierarchyofassemblies andpartsatmanylevels,inwhichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintegeridentifierofthecomponent isalsothefeatureidentifier.
Anassemblycomponent canbeanotherassembly.Ingeneral,therefore,an
assemblycancontainahierarchyofassemblies andpartsatmanylevels,inwhich
someassemblies andpartsmayappearmorethanonce.Toidentifytheroleofany
databaseiteminthecontextoftherootassembly,itisnotenoughtohavethe
integeridentifieroftheitemandthehandletoitsowningpartorassembly,as
wouldbeprovidedbyitsProFeature orProGeomitem description. Itisalso
necessarytogivethefullpathoftheassembly-component references downfrom
therootassemblytothepartorassemblythatownsthedatabaseitem.Theobject
ProAsmcomppath, whichisusedastheinputtoCreoParametric TOOLKIT
assemblyfunctions, accomplishes thispurpose.
Thedeclaration ofProAsmcomppath isasfollows:
typedef struct pro_comp_path
{
Assembly: BasicAssembly Access 1113ProSolid owner;
ProIdTable comp_id_table;
int table_num;
}ProAsmcomppath;
Thedatastructurefieldsareasfollows:
•owner—Identifies therootassemblyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx{
Assembly: BasicAssembly Access 1113ProSolid owner;
ProIdTable comp_id_table;
int table_num;
}ProAsmcomppath;
Thedatastructurefieldsareasfollows:
•owner—Identifies therootassembly
•comp_id_table (thecomponent identifiertable)—An integerarraythat
containstheidentifiers ofthecomponents thatformthepathfromtheroot
assemblydowntothecomponent partorassemblybeingreferredto
•table_num—Specifies thenumberofcomponent identifiers inthecomp_
id_table array
ThefollowingfigureSampleAssembly Hierarchy onpage1114showsan
assemblyhierarchywithtwoexamplesofthecontentsofaProAsmcomppath
object.
SampleAssemblyHierarchy
IntheassemblyshowninFigure12-1,SampleAssembly Hierarchy onpage1114
subassembly Ciscomponent identifier11withinassemblyA,PartBis
component identifier3withinassemblyAB,andson.Thesubassembly AB
occurstwice.Torefertothetwooccurrnces ofpartB,usethefollowing:
1114 Creo®Parametric TOOLKIT User’sGuideComponent B’ Component B"
table_num =5 table_num =4
comp_id_tab[0] =2 comp_id_tab[0] =11xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoccurstwice.Torefertothetwooccurrnces ofpartB,usethefollowing:
1114 Creo®Parametric TOOLKIT User’sGuideComponent B’ Component B"
table_num =5 table_num =4
comp_id_tab[0] =2 comp_id_tab[0] =11
comp_id_tab[1] =2 comp_id_tab[1] =6
comp_id_tab[2] =5 comp_id_tab[2] =12
comp_id_tab[3] =2 comp_id_tab[3] =3
comp_id_tab[4] =3
AProAsmcomppath structureinwhich table_num issetto1containsthe
sameinformation asaProAsmcomp object.
Theobject ProAsmcomppath isoneofthemainingredients inthe
ProSelection object,asdescribedinTheSelectionObjectonpage496.
VisitingAssemblyComponents
Functions Introduced:
•ProSolidFeatV isit()
•ProFeatur eTypeGet()
Eachcomponent ofanassemblyisalsoafeatureofthatassembly.Therefore, to
visitthecomponents, visitthefeaturesusing ProSolidFeatVisit() andfind
thosefeatureswhosetypeisPRO_FEAT_COMPONENT usingthefunction
ProFeatureTypeGet(). YoucanconverttheProFeature objectforeach
component totheProAsmcomp objectbycasting.
PropertiesRelatedtoComponent Purpose
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureTypeGet(). YoucanconverttheProFeature objectforeach
component totheProAsmcomp objectbycasting.
PropertiesRelatedtoComponent Purpose
Functions Introduced:
•ProAsmcomppathInit()
•ProAsmcompMdlMdlnameGet()
•ProAsmcompMdlGet()
•ProAsmcomppathMdlGet()
•ProAsmcompT ypeGet()
•ProAsmcompMdldataGet()
TocreateaProAsmcomppath objectforthecomponent, usethefunction
ProAsmcomppathInit() andsetthecomponent identifiertabletocontain
onlyasinglecomponent identifier.
Thefunction ProAsmcompMdlMdlnameGet() retrievesthemodelnameand
typeforthecomponent. Ifanassemblycomponent ismissingonretrieval,the
function ProAsmcompMdlMdlnameGet() stillprovidesinformation aboutthe
component whilethefunction ProAsmcompMdlGet() failstoretrieveavalid
modelhandle.
Assembly: BasicAssembly Access 1115Thefunction ProAsmcompMdlGet() providestheProMdlhandletothepart
orassemblybeingreferenced bythecomponent. Totraversethecomponents atall
levelsintheassemblyhierarchy,makearecursivefunctiontoperformthesesteps:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorassemblybeingreferenced bythecomponent. Totraversethecomponents atall
levelsintheassemblyhierarchy,makearecursivefunctiontoperformthesesteps:
1.CallProAsmcompMdlGet() foreachcomponent oftherootassemblyto
findthemodelforthecomponent.
2.CallProMdlTypeGet() tofindoutifthemodelisapartoranassembly.
3.Ifthemodelisanassembly,traverseeachcomponent bycalling
ProSolidFeatVisit() again.
Thefunction ProAsmcomppathMdlGet() retrievesamodelspecifiedby
ProAsmcomppath andisusefulwhenanalyzingaProSelection objectthat
referstoanassembly.
Thefunction ProAsmcompTypeGet() yieldsthetypeoftheassembly
component. Examples ofthepossibletypesareasfollows:
•PRO_ASM_COMP_TYPE_WORKPIECE—W orkpiece
•PRO_ASM_COMP_TYPE_REF_MODEL—Reference model
•PRO_ASM_COMP_TYPE_FIXTURE—Fixture
•PRO_ASM_COMP_TYPE_MOLD_BASE—Mold base
•PRO_ASM_COMP_TYPE_MOLD_COMP—Mold component
•PRO_ASM_COMP_TYPE_MOLD_ASSEM—Mold assembly
•PRO_ASM_COMP_TYPE_GEN_ASSEM—General assembly
•PRO_ASM_COMP_TYPE_CAST_ASSEM—Cast assemblyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_ASM_COMP_TYPE_MOLD_COMP—Mold component
•PRO_ASM_COMP_TYPE_MOLD_ASSEM—Mold assembly
•PRO_ASM_COMP_TYPE_GEN_ASSEM—General assembly
•PRO_ASM_COMP_TYPE_CAST_ASSEM—Cast assembly
•PRO_ASM_COMP_TYPE_DIE_BLOCK—Die block
•PRO_ASM_COMP_TYPE_DIE_COMP—Die component
•PRO_ASM_COMP_TYPE_SAND_CORE—Sand core
•PRO_ASM_COMP_TYPE_CAST_RESULT—Cast result
•PRO_ASM_COMP_TYPE_FROM_MOTION—Component forusebyCreo
Simulate.
•PRO_ASM_COMP_TYPE_NO_DEF_ASSUM—Component forwhichCreo
Parametric cannotapplydefaultassumptions.
Thefunction ProAsmcompMdldataGet() takesthehandletotheassembly
component asitsinputargumentandretrievesthefollowinginformation:
•r_mdl_type—Specifies thetypeofthemodelusingtheenumerated datatype
ProMdlType.
•r_mdl_filetype—Specifies thefiletypeofthecomponent usingtheenumerated
datatypeProMdlfileType.
1116 Creo®Parametric TOOLKIT User’sGuide•r_mdl_name—Specifies thenameofthecomponent. Youmustfreethis
argumentusingthefunction ProWstringFree().
Component Placement
•ProAsmcompIsBulkitem()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1116 Creo®Parametric TOOLKIT User’sGuide•r_mdl_name—Specifies thenameofthecomponent. Youmustfreethis
argumentusingthefunction ProWstringFree().
Component Placement
•ProAsmcompIsBulkitem()
•ProAsmcompIsPackaged()
Thefunction ProAsmcompIsBulkitem() reportswhetheranassembly
component isabulkitem.Abulkitemisanon-geometric assemblyfeaturethat
shouldappearinanassemblybillofmaterials.
Usethefunction ProAsmcompIsPackaged() todetermine whetherthe
specifiedcomponent ispackaged.
SimplifiedRepresentations
•ProAsmcompIsUnder constrained()
•ProAsmcompIsFro zen()
•ProAsmcompIsUnplaced()
•ProAsmcompIsPlaced()
•ProAsmcompIsSubstitute()
•ProAsmcompV isibilityGet()
Thefunction ProAsmcompIsUnderconstrained() determines whetherthe
specifiedcomponent isunderconstrained, thatis,ithasoneormoreconstraints but
theyarenotsufficienttofullyconstraint thecomponent location.
Thefunction ProAsmcompIsFrozen() determines whetherthespecified
component isfrozen.Thefrozencomponent behavessimilartothepackagedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheyarenotsufficienttofullyconstraint thecomponent location.
Thefunction ProAsmcompIsFrozen() determines whetherthespecified
component isfrozen.Thefrozencomponent behavessimilartothepackaged
component anddoesnotfollowtheconstraints thatyouspecify.
FromCreoParametric 3.0onward,thefrozenstatusincomponents issetonly
duringtheregeneration ofthemodel.Youcannotusethefreezecommands inthe
CreoParametric userinterface,tosetthefrozenstatusonacomponent. By
default,behavioroftheconfiguration option freeze_failed_assy_comp is
ignored.ForthemodelscreatedinreleasespriortoCreoParametric 3.0,the
frozenstatusofcomponents isretainedduringmodelretrieval.
Assembly: BasicAssembly Access 1117Theconfiguration option allow_freeze_failed_assy_comp allowsyou
torestorethebehavioroftheconfiguration option freeze_failed_assy_
compandfreezecommands intheCreoParametric userinterface.Thevalid
valuesare:
•yes—Specifies thatthebehavioroftheconfiguration option freeze_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompandfreezecommands intheCreoParametric userinterface.Thevalid
valuesare:
•yes—Specifies thatthebehavioroftheconfiguration option freeze_
failed_assy_comp isavailable.Thefreezecommands intheCreo
Parametric userinterfacearealsoavailable.Thevalidvaluesforthe
configuration option freeze_failed_assy_comp are:
○yes—Automatically freezesanycomponent thatfailsretrievalintothe
assemblyatitslastknownlocation.
○no—Requires youtoperformspecificactionstofixtheassemblyorfreeze
thecomponent thatfailsretrieval.
•no—This isthedefaultvalue.Specifiesthatthebehavioroftheconfiguration
option freeze_failed_assy_comp isignored.
Thefunctions ProAsmcompIsUnplaced() andProAsmcompIsPlaced()
determine whetherthespecifiedcomponent isunplacedorplacedrespectively .
Unplacedcomponents belongtoanassemblywithoutbeingassembled or
packaged.
Thefunction ProAsmcompIsSubstitute() determines whetherthe
specifiedcomponent issubstituted. Whenyousubstituteacomponent inaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUnplacedcomponents belongtoanassemblywithoutbeingassembled or
packaged.
Thefunction ProAsmcompIsSubstitute() determines whetherthe
specifiedcomponent issubstituted. Whenyousubstituteacomponent ina
simplified representation, youtemporarily excludethesubstituted component and
superimpose thesubstituting component initsplace.
Thefunction ProAsmcompVisibilityGet() toskipcomponents ofthe
masterrepresentation thatarenotshownintherepresentation whenyoutraverse
theassemblycomponents ofasimplified representation.
ModifyingComponent Properties
•ProAsmcompT ypeSet()
•ProAsmcompFillFr omMdl()
•ProAsmcompMakeUniqueSubasm()
•ProAsmcompRmvUniqueSubasm()
•ProAsmcompSetPlaced()
Thefunction ProAsmcompTypeSet() enablesyoutosetthetypeofa
component.
Thefunction ProAsmcompFillFromMdl() copiesthetemplatemodelinto
themodelofthecomponent.
1118 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProAsmcompMakeUniqueSubasm() tocreateaunique
instanceofasub-assembly byspecifying thepathofthesub-assembly .Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthemodelofthecomponent.
1118 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProAsmcompMakeUniqueSubasm() tocreateaunique
instanceofasub-assembly byspecifying thepathofthesub-assembly .The
function ProAsmcompRmvUniqueSubasm() removestheinstanceofthesub-
assembly.
Thefunction ProAsmcompSetPlaced() forcesCreoParametric toconsidera
particularcomponent tobeplacedorunplaced.
Example1:ListingtheMembersofanAssembly
ThesamplecodeinthefileUgAsmCompVisit.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_asmt,
recursively liststhecomponents ofanassemblyandwritesthenameofthesolid
foreachcomponent.
LocationsofAssemblyComponents
Functions Introduced:
•ProAsmcomppathT rfGet()
•ProAsmcomppathT rfSet()
•ProAssemblyDynPosGet()
•ProAssemblyDynPosSet()
•ProAsmpathPr oarrayFr ee()
Thefunction ProAsmcomppathTrfGet() providesthetransformation matrix
thatdescribesthecoordinate transformation betweenthecoordinate systemofan
assemblycomponent andthatoftherootassembly.Asitsnameimplies,itsinputxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatdescribesthecoordinate transformation betweenthecoordinate systemofan
assemblycomponent andthatoftherootassembly.Asitsnameimplies,itsinput
isaProAsmcomppath object,soitcanbeappliedtoacomponent atanylevel
withinanassemblyhierarchy.Ithasanoptiontoprovidethetransformation from
bottomtotop,orfromtoptobottom.(Toapplythetransformation, usethe
function ProPntTrfEval() orProVectorTrfEval(), describedinthe
sectionCoordinate Systemsonpage221.)
Ineffect,thisfunctiondescribesthecurrentpositionandorientation ofthe
assemblycomponent intherootassembly.
Usethefunction ProAsmpathProarrayFree() tofreethememoryallocated
totheProArray oftypeProAsmpath.
Example2:FindingthePositionofaComponent
ThesamplecodeinthefileUgAsmcompTransfGet.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_asm
showsafunctionthatfindsthematrixthatdescribesthepositionofanassembly
component initsparentassembly.
Assembly: BasicAssembly Access 1119Assembling Componentsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxshowsafunctionthatfindsthematrixthatdescribesthepositionofanassembly
component initsparentassembly.
Assembly: BasicAssembly Access 1119Assembling Components
Toassemblecomponents intoanassembly,usethemethodsoffeaturecreation.
ThesemethodsaredescribedindetailinthechapterAssembly: Assembling
Components onpage1140.
RedefiningandReroutingComponents
Thefunctionsusedtoredefineandreroutecomponents aredescribedinthe
chapterAssembly: Assembling Components onpage1140.
DeletingComponents
FunctionIntroduced:
•ProFeatur eDelete()
Thefunction ProFeatureDelete() deletescomponents. Ithasthesame
optionsasdescribedinthesectionchapter Core:Featuresonpage130.
FlexibleComponents
Aflexiblecomponent allowsvarianceofitemssuchasfeatures,dimensions,
annotations, andparameters ofamodelinthecontextofanassembly.
Theobject ProAsmitem describesthecontentsofavariantiteminanassembly
component. Thedeclaration forthisobjectisasfollows:
typedef struct pro_asm_item
{
ProModelitem item;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheobject ProAsmitem describesthecontentsofavariantiteminanassembly
component. Thedeclaration forthisobjectisasfollows:
typedef struct pro_asm_item
{
ProModelitem item;
ProName name; /*used for PRO_PARAMETER in
this case item->type ==PRO_PART orPRO_
ASSEMBLY */
ProAsmcomppath path;
}ProAsmitem;
RefertothesectionExplodedStateObjectsonpage1122forthedeclaration of
theProModelitem object.ThefieldnameintheProAsmitem objectisused
onlyincaseofPRO_PARAMETER; whereinthefieldtypeinthe
ProModelitem objectiseither PRO_PART orPRO_ASSEMBLY.
Incaseofparameter initialization, thefieldnamespecifiestheparameter name
andthefields typeandidintheProModelitem objectinitiatethemodelon
whichtheparameter isdefined.Fornon-parameter itemssuchasfeatures,
dimensions, andannotations, thefields owner, typeandidinthe
ProModelitem objecthavethesamevaluesasthevaluesoftheinput
argumentsforthefunction ProModelitemInit().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdimensions, andannotations, thefields owner, typeandidinthe
ProModelitem objecthavethesamevaluesasthevaluesoftheinput
argumentsforthefunction ProModelitemInit().
1120 Creo®Parametric TOOLKIT User’sGuideThefieldpathspecifiesthepathfromthetop-levelcomponent model.Thisfield
isemptyifthevariantitemsaredefinedonthetop-levelcomponent model.
Functions Introduced:
•ProAsmcompAsmitemInit()
•ProAsmcompFlexibleSet()
•ProAsmcompFlexibleUnset()
•ProAsmcompIsFlexible()
•ProAsmcompFlexiblemodelAdd()
•ProAsmcompV arieditemsT oModelAdd()
•ProAsmcompFlexibleWi thPrede fineditemsSet()
Usethefunction ProAsmcompAsmitemInit() toinitializethe
ProAsmitem objectthatdescribesthecontentsofavariantiteminanassembly
component.
Thefunction ProAsmcompFlexibleSet() convertsaspecifiedassembly
component toaflexiblecomponent basedonanarrayofspecifiedvariantitems.
Usethefunction ProAsmcompFlexibleUnset() toconvertaflexible
assemblycomponent toaregularcomponent.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponent toaflexiblecomponent basedonanarrayofspecifiedvariantitems.
Usethefunction ProAsmcompFlexibleUnset() toconvertaflexible
assemblycomponent toaregularcomponent.
Usethefunction ProAsmcompIsFlexible() toidentifyifthespecified
assemblycomponent isaflexiblecomponent. Thefunctionreturns PRO_B_TRUE
ifthecomponent isaflexiblecomponent, otherwiseitreturns PRO_B_FALSE.
Thefunction ProAsmcompFlexiblemodelAdd() createsaflexiblemodel
fromthespecifiedmodeloftheflexiblecomponent.
Note
Themodelistemporarily converted intoaflexiblemodelinordertoallowyou
todefinevariantitemsonitusingtheexistingCreoParametric TOOLKIT
functionsforvariantitems.Ifnovariantitemsareadded,thetemporary
flexiblemodelbecomesaregularoneuponregeneration. Youcanconverta
modelintoatemporary flexiblemodelonlyviaCreoParametric TOOLKIT.
Forinformation onthefunctionsthatcanbeusedtoaccessandmodifythe
variantitemsinaflexibleassemblycomponent, refertothesectionInheritance
FeatureandFlexibleComponent VariantItemsonpage1195.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxForinformation onthefunctionsthatcanbeusedtoaccessandmodifythe
variantitemsinaflexibleassemblycomponent, refertothesectionInheritance
FeatureandFlexibleComponent VariantItemsonpage1195.
Thefunction ProAsmcompVarieditemsToModelAdd() addsanarrayof
specifiedvariantitemstothepredefined flexibility definitionofthespecified
component model.Allvarieditemsarereplacedbytheprovidedones.
Assembly: BasicAssembly Access 1121Thefunction ProAsmcompFlexibleWithPredefineditemsSet()
convertsaspecifiedassemblycomponent toaflexiblecomponent usingthe
predefined flexibility definitionofthevariantitemsinthecomponent model.
ExplodedAssemblies
Anexplodedviewofanassemblyshowseachcomponent ofthemodelseparated
fromtheothercomponents. Anexplodedviewaffectstheappearance ofthe
assemblyonly.Thedesignintentandthetruedistancebetweentheassembly
components donotchange.
Functions Introduced:
•ProAssemblyExplode()
•ProAssemblyUnexplode()
•ProAssemblyIsExploded()
Thefunctions ProAssemblyExplode() andProAssemblyUnexplode()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponents donotchange.
Functions Introduced:
•ProAssemblyExplode()
•ProAssemblyUnexplode()
•ProAssemblyIsExploded()
Thefunctions ProAssemblyExplode() andProAssemblyUnexplode()
enableyoutoexplodeandunexplode anassembly.Thefunction
ProAssemblyIsExploded() identifieswhetherthespecifiedassemblyis
exploded.Usethisfunctionintheassemblymodeonly.
Theexplodedstatusofanassemblydependsonthemode.Ifanassemblyis
openedinthedrawingmode,thestateoftheassemblyinthedrawingviewis
displayed. Thedrawingviewdoesnotrepresenttheactualexplodedstateofthe
assembly.Usethefunction ProDrawingViewExplodedGet() togetthe
explodedstateofanassemblyforaspecifieddrawingview.
Note
Thesefunctionsexplodetheassemblyusingthedefaultexplodedstateofthe
assembly.CreoParametric definesthepositionsofanassemblycomponent in
thedefaultexplodedstate.
ExplodedStateObjects
Thestructure ProExpldstate describesthecontentsofanexplodedstate
object.Thisobjectusesthesamedeclaration astheProModelitem,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthedefaultexplodedstate.
ExplodedStateObjects
Thestructure ProExpldstate describesthecontentsofanexplodedstate
object.Thisobjectusesthesamedeclaration astheProModelitem,
ProGeomitem, andProFeature objects,whichisasfollows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProExpldstate;
1122 Creo®Parametric TOOLKIT User’sGuideVisitingExplodedStates
FunctionIntroduced:
•ProSolidExpldstateV isit()
Thefunction ProSolidExpldstateVisit() enablesyoutovisitallthe
explodedstatesinthespecifiedsolid,exceptforthedefaultexplodedstate.Fora
detailedexplanation ofvisitingfunctions, seethesectionVisitFunctions onpage
62intheFundamentals onpage22chapter.
AccessingExplodedStates
Functions Introduced:
•ProExpldstateInit()
•ProExpldstateActivate()
•ProExpldstateSelect()
•ProExpldstateActiveGet()
•ProExpldstateNameGet()
•ProExpldstateNameSet()
•ProExpldstateExplodedcomponentsGet()
•ProExpldstateMovesGet()
•ProExpldstateMovesSet()
•ProExpldAnimDataT ranslatemoveInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProExpldstateActiveGet()
•ProExpldstateNameGet()
•ProExpldstateNameSet()
•ProExpldstateExplodedcomponentsGet()
•ProExpldstateMovesGet()
•ProExpldstateMovesSet()
•ProExpldAnimDataT ranslatemoveInit()
•ProExpldAnimDataRotatemoveInit()
•ProExpldanimmovedataPr oarrayFree()
Thefunction ProExpldstateInit() returnsthehandletoaspecified
explodedstaterepresentation ofasolid.Ittakesthefollowinginputarguments:
•expld_name—Specifies thenameoftheexplodedstate.Ifyouspecifythis
value,thenthefunctionignoresthenextargument expld_id.
•expld_id—Specifies theidentifieroftheexplodedstate.Thisargumentis
applicable onlyiftheargument expld_name isNULL.
•p_solid—Specifies theCreoParametric solidthatcontainstheexplodedstate.
ThisargumentcannotbeNULL.
Thefunction ProExpldstateActivate() activatesaspecifiedexploded
staterepresentation ofasolid.
Thefunction ProExpldstateSelect() enablesyoutoselectaspecific
explodedstatefromthelistofdefinedexplodedstates.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstaterepresentation ofasolid.
Thefunction ProExpldstateSelect() enablesyoutoselectaspecific
explodedstatefromthelistofdefinedexplodedstates.
Assembly: BasicAssembly Access 1123Thefunction ProExpldstateActiveGet() retrievesthecurrentactive
explodedstateforthespecifiedsolid.
Thefunctions ProExpldstateNameGet() and
ProExpldstateNameSet() returnandset,respectively ,thenameofthe
explodedstate.
Thefunction ProExpldstateExplodedcomponentsGet() returnsan
arrayofassemblycomponent pathsthatareincludedintheexplodedstate.
Thefunctions ProExpldstateMovesGet() and
ProExpldstateMovesSet() retrieveandassign,respectively ,thearrayof
movesofanexplodedstate.
Inordertodefineanexplodedpositionofanassemblycomponent (orasetof
assemblycomponents), youneedtoperformasequenceofmoves.Forexample,
youcanmovetheassemblycomponent overtheX-axis,rotateoveraselected
edge,andthenmoveovertheY-axis.Inthiscase,thefinalpositionofthe
assemblycomponent (orasetofassemblycomponents) isattainedbythree
moves.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyoucanmovetheassemblycomponent overtheX-axis,rotateoveraselected
edge,andthenmoveovertheY-axis.Inthiscase,thefinalpositionofthe
assemblycomponent (orasetofassemblycomponents) isattainedbythree
moves.
TheProExpldAnimMoveData objectdescribesthemovesofanexploded
state.Thefieldsinthisobjectareasfollows:
•comp_set—Specifies anarrayofpathsoftheassemblycomponents, inthe
formoftheProAsmcomppath objects.
•move—Specifies themoveoftheexplodedstate.Itisgivenbythe
ProExpldAnimMove object.Thisobjectcontainsthefollowingfields:
○move_type—Specifies themovetypeintermsoftheenumerated type
ProExpldAnimMoveType. Themovecanbeoneofthefollowing
types:
◆PRO_EXPLDANIM_MOVE_TRANSLATE
◆PRO_EXPLDANIM_MOVE_ROTATE
○direction—Depending upontheselectedmovetype,thisfield
specifiesthetranslation directionortherotationalaxis.
○value—Depending upontheselectedmovetype,thisfieldspecifiesthe
translational distanceortherotationangle.
Thefunction ProExpldAnimDataTranslatemoveInit() createsaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○value—Depending upontheselectedmovetype,thisfieldspecifiesthe
translational distanceortherotationangle.
Thefunction ProExpldAnimDataTranslatemoveInit() createsa
translational movebasedonthespecifieddirectionofthetranslation andthe
specifiedarrayoftheassemblycomponents towhichthismoveisapplied.
Thefunction ProExpldAnimDataRotatemoveInit() createsarotational
movebasedonthespecifiedrotationalaxis,rotationangle,andthespecifiedarray
oftheassemblycomponents towhichthismoveisapplied.
Thefunction ProExpldanimmovedataProarrayFree() clearsthearray
ofassigned ProExpldAnimMoveData objects.
1124 Creo®Parametric TOOLKIT User’sGuideManipulating ExplodedStates
Functions Introduced:
•ProExpldstateCr eate()
•ProExpldstateDelete()
Thefunction ProExpldstateCreate() createsanewexplodedstatebased
onthevaluesofthefollowinginputarguments:
•p_solid—Specifies theassemblyinwhichtheexplodedstateiscreated.This
argumentcannotbeNULL.
•name—Specifies thenameoftheexplodedstate.Thisargumentalsocannotbe
NULL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•p_solid—Specifies theassemblyinwhichtheexplodedstateiscreated.This
argumentcannotbeNULL.
•name—Specifies thenameoftheexplodedstate.Thisargumentalsocannotbe
NULL.
•p_move_arr—Specifies anarrayofProExpldAnimMoveData objects.
Usethefunction ProExpldstateDelete() todeleteaspecifiedexploded
state.
MergeandCutout
TheMergeandCutoutfunctionhasbeendeprecated. UsetheMergefeature
elementtreetocreatemergeorcutoutfeature.SeethesectionMergeFeatureon
page848inElementTrees:EditMenuFeaturesonpage840formoredetails.
AutomaticInterchange
Functions Introduced:
•ProAssemblyAutointerc hange()
InCreoParametric, itispossibletointerchange anassemblycomponent with
anothermodelthatcontainsequivalent assemblyconstraints. TheCreoParametric
TOOLKITfunctionthatperformsthisactionis
ProAssemblyAutointerchange(). Depending onthetypeofcomponent
interchange, theassemblyconstraints mayneedtoberespecified forthe
replacement model.
Instancesinafamilytablesharethesameassemblyconstraints. Consequently ,youxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinterchange, theassemblyconstraints mayneedtoberespecified forthe
replacement model.
Instancesinafamilytablesharethesameassemblyconstraints. Consequently ,you
canautomatically replaceanassemblycomponent withanotherinstanceinthe
component's familytablewithoutrespecifying anyassemblyconstraints. Simply
retrievethehandleforthereplacement instanceandpassthishandleto
ProAssemblyAutointerchange().
Iftheassemblycomponent andreplacement modelarenotinstancesinthesame
familytable,youcandefinethenecessaryrelationships betweenthem
interactively andsavetheminanInterchange Assembly.(SeetheAssembly
Modeling User’sGuidefordetails.)Toperformaninterchange usingmodelsinan
Assembly: BasicAssembly Access 1125interchange assembly,firstretrievetheinterchange assembly(usingthefunction
ProMdlnameRetrieve()), andthenpassthehandleofthereplacement model
tofunction ProAssemblyAutointerchange(). Notethattheinterchange
assemblymustbeinmemorybeforethecallto
ProAssemblyAutointerchange().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMdlnameRetrieve()), andthenpassthehandleofthereplacement model
tofunction ProAssemblyAutointerchange(). Notethattheinterchange
assemblymustbeinmemorybeforethecallto
ProAssemblyAutointerchange().
Aninterchange assemblyisnotthesameasaninterchange domain.Interchange
domains(.intfiles)containinterchange information, buttheycannolongerbe
createdusingCreoParametric. However,itispossibletouse
ProAssemblyAutointerchange() tointerchange modelsusinganexisting
interchange domain.
1126 Creo®Parametric TOOLKIT User’sGuide54
Assembly:Top-downDesign
Overview..............................................................................................................1128
SkeletonModelFunctions......................................................................................1130
AssemblyComponent Functions............................................................................1131
ExternalReferenceControlFunctions.....................................................................1131xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExternalReferenceControlFunctions.....................................................................1131
FeatureandCopyGeomFeatureFunctions.............................................................1133
ExternalReferenceDataGathering........................................................................1135
ThischapterdescribestheCreoParametric TOOLKITDesignManagerfunctions.
Formoreinformation onDesignIntent,Top-DownDesign,andotherDesign
Managerissues,refertotheAssembly portionoftheCreoParametric helpdata,or
theTop-DownDesignTaskGuide.
1127Overview
CreoParametric supportsadesignconceptcalledTop-DownDesign.Top-Down
Designisamethodofdesigningaproductbyspecifying top-leveldesigncriteria
andpassingthosecriteriadownfromthetopleveloftheproduct’sstructuretoall
affectedsubsystems. TheCreoParametric TOOLKITDesignManagerfunctions
supportthisdesignconcept.Thenextsectionscontainabriefsummaryofthesix
stepsofTop-DownDesign.
DefiningDesignIntentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaffectedsubsystems. TheCreoParametric TOOLKITDesignManagerfunctions
supportthisdesignconcept.Thenextsectionscontainabriefsummaryofthesix
stepsofTop-DownDesign.
DefiningDesignIntent
Beforebuildingpartsandassemblies, itisimportantthatyoudefinetheintentof
yourdesign.Doingthismeansdefining:
•Purposeorfunctionoftheproduct
•Majorsystemsandsubsystems required
•Incorporation ofsubsystems intotheoverallproduct
•Dependence (ifany)onanyexistingdesignorproduct
Designcriteriaandparameters youspecifyinthisprocesscanbesharedglobally
amongallcomponents oftheassembly,andcanbeusedtodrivedesignparts,
assemblies, andskeletonmodels.
DefiningPreliminary ProductStructure
Thepreliminary productstructureconsistsofalistofcomponents andtheir
hierarchywithintheassemblydesign.Thisstructureallowscreationof
subassemblies andpartswithoutrequiringcreationofgeometryandwithout
havingtoassembleparts.Youcanaddexistingsubassemblies andpartstothis
structure.Youcanalsodefinenon-geometric information fortheentiredesignandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhavingtoassembleparts.Youcanaddexistingsubassemblies andpartstothis
structure.Youcanalsodefinenon-geometric information fortheentiredesignand
capturedesignparameters includingdescription, partnumber,andparttype.Creo
Parametric TOOLKITDesignManagermanagestheassemblystructurewith
assemblycomponent functions.
Introducing SkeletonModels
Skeletonmodelsarea3-dimensional layoutoftheassembly.Thesemodelsare
holdersordistributors ofcriticaldesigninformation, andcanrepresentspace
requirements, importantmountinglocations,andmotion.
Skeletonmodelscancontainthemasterdefinitionofthedesigninformation,
whichcanbepropagated tospecificdesignmodels.Youcanalsouseskeleton
modelstocommunicate designinformation betweencomponents. CreoParametric
TOOLKITDesignManagerusesskeletonmodelfunctionstomanipulate these
models.
1128 Creo®Parametric TOOLKIT User’sGuideCommunicating DesignIntentThroughout the
AssemblyStructure
Designers candistributetop-leveldesigninformation todependent skeletonxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodels.
1128 Creo®Parametric TOOLKIT User’sGuideCommunicating DesignIntentThroughout the
AssemblyStructure
Designers candistributetop-leveldesigninformation todependent skeleton
modelsintheassembly.Designmodification becomesamatterofchanging
certaindistributed properties. Thispropagation ofinformation firstoccursfrom
skeletontoskeleton,andthenfromskeletontopartuntilallnecessarypart-or
subassembly-specific references havebeendistributed. Designers canthenwork
onasmallsubsystem withoutretrievingorregenerating theentiretop-level
assembly.
Thisdistribution letsdesignersreferencethesameinformation insteadof
recreating itforeachsubassembly .CreoParametric TOOLKITDesignManager
handlestheassemblystructurewithfunctionsforassemblycomponents, features,
andcopygeometryfeatures.
ContinuedPopulation oftheAssembly
Populatetheassemblywithdetailedpartsandsubassemblies inoneoftwoways:
•Createnewcomponents inthecontextoftheassembly
•Modelcomponents individually andthenbringthemintotheassemblyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPopulatetheassemblywithdetailedpartsandsubassemblies inoneoftwoways:
•Createnewcomponents inthecontextoftheassembly
•Modelcomponents individually andthenbringthemintotheassembly
Relateindividual partstoeachotherwithassemblyrelations,skeletonmodels,
layouts,andmergefeatures.CreoParametric TOOLKITDesignManager
functionsmanagetheassemblystructurewithfunctionsforassemblycomponents,
features,andcopygeometryfeatures.
ManagingPartInterdependencies
Associativity allowsyoutomodifydesignintenttocauseautomatic updatingof
theappropriate objectsinyourassembly.Associativity isaccomplished through
externalrelationships, alsoknownasdependencies orreferences.
Partinterdependencies allowforcommunication ofdesigncriteriafrom
components ononelevelofthedesigntocomponents onlowerlevels.
Associativity andpartdependencies provideameansforcontrolled changingor
updatingofanentireassemblydesign.Reference controlmanagespart
interdependencies bylimitingundesirable onesorallowingdesirableones.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxupdatingofanentireassemblydesign.Reference controlmanagespart
interdependencies bylimitingundesirable onesorallowingdesirableones.
Externalreferences aredependencies betweenaCreoParametric object(partor
subassembly) andinformation fromanotherobjectnotownedbyeitherthe
referencing objectoritssubmodels. References to“out-of-model” information are
externalreferences. DesignManagerhandlesthesereferences withexternal
referencecontrolfunctions.
Assembly: Top-downDesign 1129Scopeistherangeofobjectstowhichaspecifiedobjectcanrefer.Scopecontrol
functionsallowyoutodefineobjectstowhichotherobjectsunderdevelopment
canrefer.Youcanestablishglobalscopesettingsforallobjectsorspecificsettings
forindividual objects.
DesignManagerhandlesscopeissueswithexternalreferencecontrolfunctions.
Theenumerated typeProExtRefScope definespossiblescopesettingsas:
•None—Allows noexternalreferences.
•Subassembly—Allows externalreferences onlytocomponents ofthesame
subassemblyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheenumerated typeProExtRefScope definespossiblescopesettingsas:
•None—Allows noexternalreferences.
•Subassembly—Allows externalreferences onlytocomponents ofthesame
subassembly
•SkeletonModel—Allows externalreferences tohigher-levelskeletonmodels
only
•All—Allows externalreferences toanyotherobjectanywhereintheassembly
Theenumerated typeProInvalidRefBehavior definestwomethodsof
handlingout-of-scope references. Theyareasfollows:
•ProhibitOut-of-Scope references—Creo Parametric TOOLKITreportsthe
externalreferenceasoutofscope.Youmustselectanotherreference.
•CopyOut-of-Scope Reference—Creo Parametric TOOLKITwarnsthatthe
referenceisoutofscope.Youmustdooneofthefollowing:
○Canceltheselectionandchooseadifferentreference
○Confirmthatyoudowanttousetheselectedreference. CreoParametric
TOOLKITthencreatesa“localbackup”ofthereference. Thelocal
backupreferenceautomatically updates(onlywhiletheparentisinthe
currentsession).
SkeletonModelFunctions
Functions Introduced:
•ProAsmSkeletonMdlnameCr eate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbackupreferenceautomatically updates(onlywhiletheparentisinthe
currentsession).
SkeletonModelFunctions
Functions Introduced:
•ProAsmSkeletonMdlnameCr eate()
•ProAsmSkeletonAdd()
•ProAsmSkeletonGet()
•ProAsmSkeletonDelete()
•ProMdlIsSkeleton()
Createskeletonmodelsusingfunction
ProAsmSkeletonMdlnameCreate(). Thisfunctioncreatesanewskeleton
modelwiththespecifiedname,addsittothespecifiedassembly,andinitializes
themodelhandle.Theinputargumentsareassemblyhandle,theskeletonmodel
name,andthehandletothepartorskeletonusedasatemplate.Ifthetemplate
handleisNULL,anemptyskeletonmodeliscreated.
1130 Creo®Parametric TOOLKIT User’sGuideBydefault,theabsoluteaccuracytemplateisusedtocreateanewmodel.After
youcreateanewmodelusingtheinitialvalueofabsoluteaccuracy,thebaselineof
theoutlineisusedtodetermine whethertheabsoluteaccuracyisstillvalid.The
outlineofthemodeliscalculated afterthecreationofthefirstfeatureofthemodel
orplacingthefirstcomponent inanassemblymodel.RefertotheCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoutlineofthemodeliscalculated afterthecreationofthefirstfeatureofthemodel
orplacingthefirstcomponent inanassemblymodel.RefertotheCreoParametric
helpformoreinformation onModelAccuracy.
ProAsmSkeletonAdd() addsanexistingskeletonmodeltothespecified
assembly.Theinputargumentsareahandlefortheassemblytowhichthe
skeletonmodelwillbeadded,andahandletotheskeletonmodel.
ProAsmSkeletonGet() returnsaskeletonmodelofthespecifiedassembly
thatiscurrentlyinmemory,theninitializesthemodelhandle.Theinputargument
isahandletothespecifiedassembly.
ProAsmSkeletonDelete() deletesaskeletonmodelcomponent fromthe
specifiedassembly.Theinputargumentisahandletothespecifiedassembly.
ProMdlIsSkeleton() determines ifthespecifiedmodelisaskeletonmodel.
Theinputargumentisahandletothemodeltobechecked.
AssemblyComponent Functions
Functions Introduced:
•ProAsmcompMdlnameCr eateCopy()
•ProAsmcompIsUnplaced()
•ProAsmcompFillFr omMdl()
Createnewcomponents inthespecifiedassemblybycopyingthemfromaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAssemblyComponent Functions
Functions Introduced:
•ProAsmcompMdlnameCr eateCopy()
•ProAsmcompIsUnplaced()
•ProAsmcompFillFr omMdl()
Createnewcomponents inthespecifiedassemblybycopyingthemfroma
specifiedmodelusing ProAsmcompMdlnameCreateCopy(). Thisfunction
createsanewcomponent withthespecifiedname,placesitatadefaultlocationin
theassembly,orleavesitunplaced.Theinputargumentsaretheassemblytocopy
from,thenewcomponent name,thenewcomponent type(either PRO_MDL_
ASSEMBLY orPRO_MODEL_PART), thehandletothemodelusedasatemplate,
andspecification ofdefaultor“unplaced” component placement. Ifthetemplate
handleisNULL,thecomponent iscreatedempty.
ProAsmCompIsUnplaced() determines whetherthespecifiedcomponent is
unplaced.Theinputargumentisahandletothecomponent tobechecked.
ProAsmCompFillFromMdl() copiesthespecifiedtemplatemodelintoa
modelofthespecifiedcomponent. Theinputargumentsarethehandletothe
component, andthehandletothemodelusedasatemplateforthecopy.
ExternalReferenceControlFunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelofthespecifiedcomponent. Theinputargumentsarethehandletothe
component, andthehandletothemodelusedasatemplateforthecopy.
ExternalReferenceControlFunctions
Functions Introduced:
Assembly: Top-downDesign 1131•ProRefCtrlSolidSet()
•ProRefCtrlSolidGet()
•ProRefCtrlEnvirSet()
•ProRefCtrlEnvirGet()
•ProRefCtrlCheckScope()
Function ProRefCtrlSolidSet() setsaspecifiedexternalreferencecontrol
settingonasolid,thatis,onapartorassembly.UseProRefCtrlSolidGet()
toretrievetheexternalreferencecontrolsettingforaspecifiedsolid.
ProRefCtrlEnvirSet() establishes therun-timeenvironment settingfor
externalreferencecontrol.Function ProRefCtrlEnvirGet() retrievesthis
data.
Function ProRefCtrlCheckScope() checkswhetherobject-specific
referencecontrolsettingsforaspecifiedmodel(eitheranindependent objectoran
assemblycomponent) allowthatmodeltoreferenceinformation belonging toa
differentmodel.Thetop-levelassemblyforthecomponent beingmodifiedandfor
thecomponent beingreferenced mustbethesame.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxassemblycomponent) allowthatmodeltoreferenceinformation belonging toa
differentmodel.Thetop-levelassemblyforthecomponent beingmodifiedandfor
thecomponent beingreferenced mustbethesame.
IfProRefCtrlCheckScope() findsthattheownerofthecomponent being
modifiedisNULLandthesolid(partorassembly) beingreferenced isnotasub-
modelofthesolidbeingmodified,itreportsthereferenceasoutofassembly
context.IftheProMdlreturnedisNULLbutthereisascopeviolation,the
environment scopehasbeenviolated.
Theenumerated typeProExtRefScope definesallowedscopesettingsfor
externalreferences asfollows:
typedef enum{
PRO_REFCTRL_ALLOW_ALL =0,/*all external references
allowed*/
PRO_REFCTRL_ALLOW_SUBASSEMBLY =1,/*allow only external
references
inside the same higher
level
subassembly asthat
ofthe modified object
*/
PRO_REFCTRL_ALLOW_SKELETON =2,/*only external references
to
skeleton models allowed
*/
PRO_REFCTRL_ALLOW_NONE =3/*noexternal references
allowed */
}ProExtRefScope;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthe modified object
*/
PRO_REFCTRL_ALLOW_SKELETON =2,/*only external references
to
skeleton models allowed
*/
PRO_REFCTRL_ALLOW_NONE =3/*noexternal references
allowed */
}ProExtRefScope;
Enumerated typeProInvalidRefBehavior definesthesupported methods
forhandlingOut-of-Scope externalreferences asfollows:
typedef enum
1132 Creo®Parametric TOOLKIT User’sGuide{PRO_REFCTRL_BACKUP_REF =0, /*create alocal backup
for
out-of-scope references
*/
PRO_REFCTRL_PROHIBIT_REF =1 /*prohibit out-of-scope
external
references
*/
}ProInvalidRefBehavior;
FeatureandCopyGeom Feature
Functions
Functions Introduced:
•ProFeatur eCopiedRefStateDetailsGet()
•ProFeatur eHasBackup()
•ProFeatur eDSFDependencystateSet()
•ProFeatur eDSFDependencystateGet()
•ProFeatur eDSFDependencyNotifySet()
•ProFeatur eDSFDependencyNotifyGet()
Thefunction ProFeatureCopiedRefStateDetailsGet() retrievesthe
statusofcopiedreferences foraspecifiedfeature.Thisfunctionsupportsboth
CopyGeom featuresandfeatureswithlocalbackupofreferences.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProFeatureCopiedRefStateDetailsGet() retrievesthe
statusofcopiedreferences foraspecifiedfeature.Thisfunctionsupportsboth
CopyGeom featuresandfeatureswithlocalbackupofreferences.
Note
CopyGeom featureshavenolocalbackupofreferencedata.
Theenumerated typeProCopiedRefStateDetails definespossiblestates
oflocalcopiesofexternalreferences inaCopyGeom featureorinafeaturewitha
localbackup.
ProFeatureHasBackup() determines ifthespecifiedfeaturehaslocal
backupofexternalreferences.
ProFeatureCopyGeomDependSet() setscopiedreferences ofthespecified
CopyGeom featuretobedependent onthereferenced ormastermodel.This
meansthespecifiedCopyGeom featurereferences willupdateasthereferenced or
mastermodelchanges.Thefunction ProFeatureCopyGeomDependSet()
hasbeendeprecated .Usethefunction
ProFeatureDSFDependencystateSet() withdependency status PRO_
DSF_UPDATE_AUTOMATICALLY instead.Thefunction
Assembly: Top-downDesign 1133ProFeatureCopyGeomInDependSet() setscopiedreferences tobexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureDSFDependencystateSet() withdependency status PRO_
DSF_UPDATE_AUTOMATICALLY instead.Thefunction
Assembly: Top-downDesign 1133ProFeatureCopyGeomInDependSet() setscopiedreferences tobe
independent ofthereferenced ormastermodel,thatis,theydonotupdateasthis
top-levelmodelchanges.Thefunction
ProFeatureCopyGeomInDependSet() hasbeendeprecated .Usethe
function ProFeatureDSFDependencystateSet() withdependency status
PRO_DSF_UPDATE_MANUALLY instead.
Thefunction ProFeatureDSFDependencystateSet() setsthe
dependency statusofdatasharingfeature(DSF). Thedependency statusgoverns
thebehaviorofthedatasharingfeatureiftheitemsreferenced bythefeaturehave
changed.Thevalidvaluesforthedependency statusare:
•PRO_DSF_UPDATE_AUTOMATICALLY—Specifies thatallthechanges
madetotheparentmodelareautomatically reflectedintheDSFfeature.
•PRO_DSF_UPDATE_MANUALLY—Specifies thatthefeaturemustbeupdated
manuallytokeepitup-to-date withthereferenced model.
•PRO_DSF_NO_DEPENDENCY—Specifies thattherewillbenodependencyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_DSF_UPDATE_MANUALLY—Specifies thatthefeaturemustbeupdated
manuallytokeepitup-to-date withthereferenced model.
•PRO_DSF_NO_DEPENDENCY—Specifies thattherewillbenodependency
betweentheDSFfeatureandreferenced model.Thisincludesupdatingthe
geometryoftheDSF,automatic retrievalofthereferenced modeland
checkinginthemodeltoWindchill.
Formoreinformation onthedependency statuses,refertothesectionFeature
ElementTreeonpage1191inAssembly: DataSharingFeatures.
Thefunction ProFeatureDSFDependencystateGet() getsthecurrent
dependency statusfortheDSFfeature.
Usethefunction ProFeatureDSFDependencyNotifySet() tosetthe
notification status,tovisuallyindicatethechangesappliedtothesourcegeometry
ofthedatasharingfeature.
Usethefunction ProFeatureDSFDependencyNotifyGet() togetavisual
indication ofthecurrentnotification statusoftheDSFfeature.Ifthenotification
statusissettoon,thenanychangemadeinthesourcegeometryisindicatedinthe
formofayellowtriangleinthemodeltreeoftheDSFfeatureintheCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatusissettoon,thenanychangemadeinthesourcegeometryisindicatedinthe
formofayellowtriangleinthemodeltreeoftheDSFfeatureintheCreo
Parametric userinterface.Also,ageneralnotification iconappears,adjacenttothe
regeneration icononthestatusbarintheCreoParametric userinterface.Thisicon
indicatesthechangeinthesourcegeometryoftheDSFfeature.
Note
Usethefunctions ProFeatureDSFDependencyNotifySet() and
ProFeatureDSFDependencyNotifyGet() onlyifthedependency
statusoftheDSFfeatureissettoPRO_DSF_UPDATE_MANUALLY.
1134 Creo®Parametric TOOLKIT User’sGuideExternalReferenceDataGathering
Anexternalreferenceoranexternaldependency isarelationship betweenan
object,suchas,apartorsubassembly andsomeinformation fromanotherobject
thatisnotinherently availabletothereferencing objectallthetime.While
investigating objectdependencies inanassembly,somefeaturesmayexistthat
werecreatedinthecontextofanotherassembly.Allsuchdependencies arecalled
externaldependencies andtheypointtoacomponent inanotherassembly.Seethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwerecreatedinthecontextofanotherassembly.Allsuchdependencies arecalled
externaldependencies andtheypointtoacomponent inanotherassembly.Seethe
CreoParametric helpformoreinformation onexternalreferences.
Functions Introduced:
•ProFeatur eExternChildrenGet()
•ProFeatur eExternPar entsGet()
•ProSolidExternChildr enGet()
•ProSolidExternPar entsGet()
•ProExtRefInfoFr ee()
•ProExtRefStateGet()
•ProExtRefT ypeGet()
•ProExtRefAsmcompsGet()
•ProExtRefOwnMdlGet()
•ProExtRefMdlGet()
•ProExtRefOwnFeatGet()
•ProExtRefFeatGet()
•ProExtRefModelitemGet()
•ProExtRefInfoExport()
•ProExtRefIsDependency()
•ProExtRefDependencyIsBr eakable()
•ProExtRefBr eakDependency()
Thefunction ProFeatureExternChildrenGet() retrievesinformation
aboutexternalandlocalchildrenofthespecifiedfeatureaccording tothespecified
referencetype.Thefunction ProFeatureExternParentsGet() doesthe
sameforparentsofthefeature.
Thefunction ProSolidExternChildrenGet() retrievesexternalandlocalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferencetype.Thefunction ProFeatureExternParentsGet() doesthe
sameforparentsofthefeature.
Thefunction ProSolidExternChildrenGet() retrievesexternalandlocal
childrenofthespecifiedsolidaccording tothespecifiedreferencetype.The
function ProSolidExternParentsGet() doesthesameforparentsofthe
solid.
Thefunction ProExtRefInfoFree() releasesmemoryallocatedtothe
externalreferencedataforafeatureorsolid.
Assembly: Top-downDesign 1135Thefunction ProExtRefStateGet() returnstheexternalreferencestatusof
thereferenced itemofthespecifiedreference.
Theenumerated typeProRefState definesthepossiblestatesoftop-level
solids,suchas,part,assemblyorcomponent, towhichalower-levelsolidrefers.
Thefunction ProExtRefTypeGet() returnsthetypeoftheexternalreference.
Theenumerated typeProExtRefType definesthesupported externalreference
typesasfollows:
typedef enum
{
PRO_EXT_GEOM_REF =1, /*all out ofsolid references,
created inassembly context,
kept in
plins, sections, draft sections
*/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypesasfollows:
typedef enum
{
PRO_EXT_GEOM_REF =1, /*all out ofsolid references,
created inassembly context,
kept in
plins, sections, draft sections
*/
PRO_LOC_GEOM_REF =2, /*local for solid references,
kept in
plins, sections, draft sections
*/
PRO_MERGE_REF =3, /*reference models ofmerge by
ref feats */
PRO_EXT_REL_REF =4, /*out ofsolid references, ,
kept in
symbols used for relations.
Can be"to solid" orfeature,
geometry references.
*/
PRO_LOC_REL_REF =5, /*local for solid references,
kept in
symbols used for relations.
Can be"to solid" orfeature,
geometry references.
*/
PRO_PRGM_REF =6, /*out ofsolid references, ,
kept in
symbols used inPro/Program.
Always solid references
*/
PRO_MOVE_COMP_REF =7, /*Move Components external
references.
Kept incomponents and always "to
solid".
This reference isnot present inmodels
created after Creo Elements/Pro 5.0 */
PRO_SUBS_REF =8, /*Substitute Component
references.
Kept incomponents and always "to
solid"*/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsolid".
This reference isnot present inmodels
created after Creo Elements/Pro 5.0 */
PRO_SUBS_REF =8, /*Substitute Component
references.
Kept incomponents and always "to
solid"*/
PRO_MFG_INFO_REF =9, /*Mfg Info references. Kept in
1136 Creo®Parametric TOOLKIT User’sGuidemfg feat, always "to solid"
*/
PRO_INTRCH_REF =10, /*Interchange Assembly
references.
Kept inthe solid itself.
Always "to solid"
*/
PRO_HARN_REF =11, /*Harness references.
Kept inthe solid itself.
Always "to solid"
*/
PRO_FEAT_PAT_REF =12, /*Feature pattern references.
Does not include pattern relation
references. Always "to solid"
*/
PRO_NON_ASSY_GEOM_REF =13, /*Out ofsolid external geometry
refs,
created not inassembly context,
kept inplins. (used inexternal
geom
copy feature).
*/
PRO_DIM_BOUND_REF =14, /*Dim. bound references.
Kept inthe solid itself.
Always "to solid"
*/
PRO_HIDDEN_FEM_REFS =15, /*Hidden Simulate features
references.
Kept inthe solid itself.
Always "to solid"
*/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxKept inthe solid itself.
Always "to solid"
*/
PRO_HIDDEN_FEM_REFS =15, /*Hidden Simulate features
references.
Kept inthe solid itself.
Always "to solid"
*/
PRO_ANALYSIS_REF =16, /*Hidden analysis features
references.
Kept inthe solid itself.
Always "to solid"
*/
PRO_FEAT_PAT_LOC_REF =17, /*References between pat. leader
and member
orbetween pat. group headers
*/
PRO_DEPENDENCY_REFS =18, /*All types ofreferences
collected via
collect dependencies mechanism. This
type
isnot included inCOLL_ALL_REFS_TYPE, it
should beinvoked separately. */
PRO_IN_CIRCLE_REFS =19, /*References encountered in
assembly loops.
This isreserved for future use */
PRO_MEMBER_REFS =20, /*Component models ofassembly
members.
Assembly: Top-downDesign 1137This type isnot included in
COLL_ALL_REFS_TYPE, itshould beinvoked
separately. */
PRO_LOC_MERGE_REF =21, /*Merge reference ofmirror
geom.
Always "to solid"
*/
PRO_ALL_EXT_REF_TYPES =100, /*Same asPRO_ALL_REF_TYPES
except for
PRO_LOC_GEOM_REF, PRO_LOC_REL_REF,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxseparately. */
PRO_LOC_MERGE_REF =21, /*Merge reference ofmirror
geom.
Always "to solid"
*/
PRO_ALL_EXT_REF_TYPES =100, /*Same asPRO_ALL_REF_TYPES
except for
PRO_LOC_GEOM_REF, PRO_LOC_REL_REF,
PRO_LOC_MERGE_REF, PRO_FEAT_PAT_LOC_REF */
PRO_ALL_REF_TYPES =101 /*All known types ofreferences,
except for
PRO_DEPENDENCY_REFS,PRO_IN_CIRCLE_REFS and
PRO_MEMBER_REFS. */
}ProExtRefType; /*types ofreferences */
Thestructures ProExtFeatRef andProExtRefInfo providepointerstoa
structurecontaining externalreferences foraspecifiedfeature:
typedef struct ext_feat_ref *ProExtFeatRef;
typedef struct
{
ProExtRefType type; ProExtFeatRef *ext_refs;
int n_refs;
}ProExtRefInfo;
Thefunction ProExtRefAsmcompsGet() retrievesfromthespecified
externalreferenceapathtothecomponent fromwhichthereferencewascreated.
Italsoreturnsapathtothecomponent thatownsthespecifiedexternalreference.
Thefunction ProExtRefOwnMdlGet() retrievesasolidthatisactiveinthe
sessionandusestheprovidedreference.Thefunction ProExtRefMdlGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProExtRefOwnMdlGet() retrievesasolidthatisactiveinthe
sessionandusestheprovidedreference.Thefunction ProExtRefMdlGet()
retrievesasolid,inamodelthatisactiveinthesession.Thisreturnedsolidis
referredtobythespecifiedexternalreference.
Thefunction ProExtRefOwnFeatGet() retrievesfromthespecifiedexternal
referenceafeaturethatusesthereference. Thefunction
ProExtRefFeatGet() retrievesfromthespecifiedexternalreferencea
featurereferredtobytheexternalreference.
Thefunction ProExtRefModelitemGet() retrievesfromthespecified
externalreferenceamodelitemthatusesthatreference.
Thefunction ProExtRefInfoExport() printsoutadependency reportforall
references oftypePRO_DEPENDENCY_REFS inthespecifiedformat.Theinput
argumentsofthisfunctionare:
•info_arr—Specify allthereferences ofthetypePRO_DEPENDENCY_
REFScollectedusingthefunctions ProSolidExternParentsGet()
andProFeatureExternParentsGet(). Allthereferences thatarenot
dependencies willbeignored.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxREFScollectedusingthefunctions ProSolidExternParentsGet()
andProFeatureExternParentsGet(). Allthereferences thatarenot
dependencies willbeignored.
1138 Creo®Parametric TOOLKIT User’sGuide•w_fname—Specify thenameofthefiletowhichthereportistobeprinted.
•n_rep_type—Specify thetypeofreportformat.Thevalidvaluesforthis
inputargumentare:
○PRO_REPORT_TYPE_CSV—Specifies acommaseparatedvaluefile.
○PRO_REPORT_TYPE_XML—Specifies aXMLfile.
Thefunction ProExtRefIsDependency() indicatesifthespecified
referenceisanexternaldependency .
Thefunction ProExtRefDependencyIsBreakable() indicatesifsomeof
thespecifieddependencies canbebrokenornot,incasethecorresponding
externalreferences arenotrequired.
Thefunction ProExtRefBreakDependency() breakstheexternal
references fromthespecifiedarrayofreferences. Amongallreferences inthe
specifiedarray,thisactsonlyonthoseexternalreferences thatarebreakable. Asa
resultofbreakoperation, thedependency associated withtheexternalreferenceisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedarray,thisactsonlyonthoseexternalreferences thatarebreakable. Asa
resultofbreakoperation, thedependency associated withtheexternalreferenceis
broken,whichpreventstheformation ofghostobjectsinProductDevelopment
Management System.RefertheCreoParametric Helpformoreinformation on
breakingdependencies.
Assembly: Top-downDesign 113955
Assembly:Assembling
Components
Assembling Components byFunctions...................................................................1141
Assembling aComponent Parametrically ................................................................1142
RedefiningComponents Interactively ......................................................................1146
Assembling Components byElementTree..............................................................1147
TheElementTreeforanAssemblyComponent.......................................................1147
Assembling Components UsingIntentDatums........................................................1155xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheElementTreeforanAssemblyComponent.......................................................1147
Assembling Components UsingIntentDatums........................................................1155
Thischapterdescribeshowtousetheconceptsoffeaturecreationtoassemble
components intoanassembly.ReadthechapterElementTrees:Principles of
FeatureCreationonpage749beforethischapter.
1140 Creo®Parametric TOOLKIT User’sGuideAssembling Components byFunctions
Functions Introduced:
•ProAsmcompMdlnameCr eateCopy()
•ProAsmcompAssemble()
•ProAsmcompPositionGet()
•ProAsmcompPositionSet()
•ProAsmcompConstraintsWi thComppathGet()
•ProAsmcompConstraintsSet()
•ProAsmcompAllConstrRemove()
•ProAsmcompConstrRemove()
•ProAsmcompRegenerate()
Superseded Function:
•ProAsmcompConstraintsWi thDtmOrientGet()
Usethefunction ProAsmcompMdlnameCreateCopy() tocreateanew
component intheassemblybycopyingfromanexistingmodel.Specifythe
handletothemodeltobeusedasatemplateforthecopy.IfamodelisnotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProAsmcompMdlnameCreateCopy() tocreateanew
component intheassemblybycopyingfromanexistingmodel.Specifythe
handletothemodeltobeusedasatemplateforthecopy.Ifamodelisnot
specified,acomponent thatdoesnothaveinitialgeometryiscreated.Thefunction
providestheProAsmcomp handletothenewcomponent.
Thefunction ProAsmcompAssemble() assembles acomponent tothe
assemblyorsub-assembly usingtheparametric constraints availablewhen
assembling acomponent inCreoParametric. Theinitialpositionofthecomponent
isaProMatrix object.Specifytheorientation ofthethreeaxesandtheposition
oftheoriginofthecomponent coordinate system,withrespecttothetarget
assemblycoordinate system.ThefunctionprovidestheProAsmcomp feature
handletothenewlycreatedassembly.
Thefunction ProAsmcompPositionGet() retrievesthecomponent's initial
positionbeforeconstraint areapplied.
Thefunction ProAsmcompPositionSet() specifiestheinitialpositionofthe
component beforeconstraints areapplied.Thisaffectsthepositionofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpositionbeforeconstraint areapplied.
Thefunction ProAsmcompPositionSet() specifiestheinitialpositionofthe
component beforeconstraints areapplied.Thisaffectsthepositionofthe
component onlyifthecomponent ispackagedorunderconstrained.
Thefunction ProAsmcompConstraintsWithDtmOrientGet() is
deprecated inCreoParametric 7.0.0.0.Usethefunction
ProAsmcompConstraintsWithComppathGet() instead.Thefunction
retrievesthespecifiedconstraints forthegivenassemblycomponent and
component path.Theorientation oftheconstraints isreturnedasavalueof
enumerated datatypeProDatumside. Theinputargument component_path is
Assembly: Assembling Components 1141thepathtotheownerassemblyonlyiftheconstraints havereferences totheother
membersofthetop-levelassembly.Iftheconstraints havereferences onlytothe
ownerassembly,thenyouneedtopassthisasNull.
Thefunction ProAsmcompConstraintsSet() setsanarrayofconstraints
foragivenassemblycomponent. Thisfunctionmodifiesthecomponent feature
dataandregenerates theassemblycomponent.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProAsmcompConstraintsSet() setsanarrayofconstraints
foragivenassemblycomponent. Thisfunctionmodifiesthecomponent feature
dataandregenerates theassemblycomponent.
Thefunction ProAsmcompAllConstrRemove() removesalltypesof
constraints includinginterfaceconstraints forthespecifiedassemblycomponent.
SpecifyaaProAsmcomp handletotheassemblycomponent intheinput
argument p_feat_handle.
Thefunction ProAsmcompConstrRemove() removesoneorallconstraints
forthespecifiedassemblycomponent. However,thefunctiondoesnotremovethe
interfaceconstraint. Theinputarguments areasfollows:
•p_feat_handle—Specifies aProAsmcomp handletotheassembly
component.
•index—Specifies theconstraint index.Passthevalueas–1toremoveallthe
constraints. Usethefunction ProAsmcompConstraintGet() to
determine theindexofaparticularconstraint.
Thefunction ProAsmcompRegenerate() regenerates theplacement
instructions foranassemblycomponent, giventhecomponent handle.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdetermine theindexofaparticularconstraint.
Thefunction ProAsmcompRegenerate() regenerates theplacement
instructions foranassemblycomponent, giventhecomponent handle.The
functionregenerates theplacement instructions justasinaninteractive Creo
Parametric session.Alternatively ,youcanusethevisitfunctionality toregenerate
recursively someorallofthecomponents intheassembly.
Assembling aComponent Parametrically
Functions Introduced:
•ProAsmcompconstraintAlloc()
•ProAsmcompconstraintT ypeGet()
•ProAsmcompconstraintT ypeSet()
•ProAsmcompconstraintAsmre ferenceGet()
•ProAsmcompconstraintAsmre ferenceSet()
•ProAsmcompconstraintCompr eferenceGet()
•ProAsmcompconstraintCompr eferenceSet()
•ProAsmcompconstraintOffsetGet()
•ProAsmcompconstraintOffsetSet()
•ProAsmcompconstraintAttributesGet()
•ProAsmcompconstraintAttributesSet()
1142 Creo®Parametric TOOLKIT User’sGuide•ProAsmcompconstraintUserdataGet()
•ProAsmcompconstraintUserdataSet()
•ProAsmcompconstraintFr ee()
•ProAsmcompconstraintArrayFre e()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1142 Creo®Parametric TOOLKIT User’sGuide•ProAsmcompconstraintUserdataGet()
•ProAsmcompconstraintUserdataSet()
•ProAsmcompconstraintFr ee()
•ProAsmcompconstraintArrayFre e()
Thefunction ProAsmcompconstraintAlloc() allocatesmemoryforthe
constraint datastructure.Thisdatastructuredescribesthetypesofconstraints that
canbeappliedtotheassemblycomponent.
Thefunction ProAsmcompconstraintTypeGet() retrievestheconstraint
typeofthespecifiedconstraint. Thetypesofconstraints are:
•PRO_ASM_MATE—Use thisoptiontomaketwosurfacescoincident withone
anotherandfacingeachother.
•PRO_ASM_MATE_OFF—Use thisoptiontomaketwoplanarsurfacesparallel
andfacingeachother.
•PRO_ASM_ALIGN—Use thisoptiontomaketwoplanescoplanar,twoaxes
coaxialortwopointscoincident. Youcanalsoalignrevolvedsurfacesor
edges.
•PRO_ASM_ALIGN_OFF—Use thisoptiontoaligntwoplanarsurfacesatan
offset.
•PRO_ASM_INSERT—Use thisoptiontoinserta"male"revolvedsurfaceinto
a"female"revolvedsurface,makingtheirrespective axescoaxial.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_ASM_ALIGN_OFF—Use thisoptiontoaligntwoplanarsurfacesatan
offset.
•PRO_ASM_INSERT—Use thisoptiontoinserta"male"revolvedsurfaceinto
a"female"revolvedsurface,makingtheirrespective axescoaxial.
•PRO_ASM_ORIENT—Use thisoptiontomaketwoplanarsurfacestobe
parallelinthesamedirection.
•PRO_ASM_CSYS—Use thisoptiontoplaceacomponent inanassemblyby
aligningthecoordinate systemofthecomponent withthecoordinate systemof
theassembly.
•PRO_ASM_TANGENT—Use thisoptiontoforcetwosurfacestobetangent.
•PRO_ASM_PNT_ON_SRF—Use thisoptiontoalignapointwithaofa
surface.
•PROS_ASM_EDGE_ON_SRF—Use thisoptiontoalignastraightedgewitha
surface.
•PRO_ASM_DEF_PLACEMENT—Use thisoptiontoalignthedefault
coordinate systemofthecomponent tothedefaultcoordinate systemofthe
assembly.
•PRO_ASM_SUBSTITUTE—This constraint typeisusedinsimplified
representations onlywhenthecomponent isreplacedbyasubstitute
component.
Assembly: Assembling Components 1143•PRO_ASM_PNT_ON_LINE—Use thisoptiontoforcetheintersection ofa
linewithapoint.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrepresentations onlywhenthecomponent isreplacedbyasubstitute
component.
Assembly: Assembling Components 1143•PRO_ASM_PNT_ON_LINE—Use thisoptiontoforcetheintersection ofa
linewithapoint.
•PRO_ASM_FIX—Use thisoptiontofixthecurrentlocationofthecomponent
asaconstraint.
•PRO_ASM_AUTO—Not forusebyCreoParametric TOOLKIT.
•PRO_ASM_ALIGN_ANG_OFF—This optioncanonlybeusedinconjunction
withanotherconstraint. Ifyouhavetwoflatsurfacesandcreateanalignedge
oraxisconstraint wheretheedgeoraxisliesonthesurface,thenyoucan
specifyanangleoffsetconstraint betweenthetwosurfaces.
•PRO_ASM_MATE_ANG_OFF—This optioncanonlybeusedinconjunction
withanotherconstraint. Ifyouhavetwoflatsurfacesandcreateamateedgeor
axisconstraint wheretheedgeoraxisliesonthesurface,thenyoucanspecify
anangleoffsetconstraint betweenthetwosurfaces.
•PRO_ASM_CSYS_PNT—This optioncanbeusedinUserDefined,General,
andGimbalconnections. Usethisoptiontoplaceacomponent inanassembly
byaligningtheoriginsofthecoordinate systems.Heretheaxesarenotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_ASM_CSYS_PNT—This optioncanbeusedinUserDefined,General,
andGimbalconnections. Usethisoptiontoplaceacomponent inanassembly
byaligningtheoriginsofthecoordinate systems.Heretheaxesarenot
aligned,andthus,thecomponent canbefreelyrotatedalongthethreerotation
axes.InUserDefinedandRigidconnections youcanswitchfromCoordSys
PointtoCoordSysconstraint andvice-versa.
Usethefunction ProAsmcompconstraintTypeSet() tosettheconstraints
fortheassemblycomponent constraint.
Thefunction ProAsmcompconstraintAsmreferenceGet() retrievesthe
ProSelection handletoareferenceontheassemblyandtheorientation ofthe
assemblyforthespecifiedassemblycomponent constraint. Theassembly
orientation canhavethefollowingvalues:
•PRO_DATUM_SIDE_YELLOW—The primarysideofthedatumplanewhich
isthedefaultdirectionofthearrow.
•PRO_DATUM_SIDE_RED—The secondary sideofthedatumplanewhichis
thedirectionoppositetothatofthearrow.
•PRO_DATUM_SIDE_NONE—No orientation isspecified.
Thefunction ProAsmcompconstraintAsmreferenceSet() selectsaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthedirectionoppositetothatofthearrow.
•PRO_DATUM_SIDE_NONE—No orientation isspecified.
Thefunction ProAsmcompconstraintAsmreferenceSet() selectsa
referenceontheassemblyandsetstheorientation oftheassemblyforaspecified
assemblycomponent constraint.
1144 Creo®Parametric TOOLKIT User’sGuideNote
Theassemblyreferenceselectionmustbeassignedanassemblycomponent
path,evenifthereferencegeometryisinthetop-levelassembly.Inthat
situationthetable_num valueoftheProAsmcomppath structurewould
be0.
Thefunction ProAsmcompconstraintCompreferenceGet() retrieves
theProSelection handletoareferenceontheplacedcomponent andthe
orientation ofthecomponent forthespecifiedassemblycomponent constraint.
Thecomponent orientation canhavethefollowingvalues:
•PRO_DATUM_SIDE_YELLOW—The primarysideofthedatumplanewhich
isthedefaultdirectionofthearrow.
•PRO_DATUM_SIDE_RED—The secondary sideofthedatumplanewhichis
thedirectionoppositetothatofthearrow.
•PRO_DATUM_SIDE_NONE—No orientation isspecified.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisthedefaultdirectionofthearrow.
•PRO_DATUM_SIDE_RED—The secondary sideofthedatumplanewhichis
thedirectionoppositetothatofthearrow.
•PRO_DATUM_SIDE_NONE—No orientation isspecified.
ProAsmcompconstraintCompreferenceSet() selectsareferenceonthe
placedcomponent andsetstheorientation ofthecomponent foraspecified
assemblycomponent constraint.
ProAsmcompconstraintOffsetGet() retrievestheoffsetvaluefromthe
referencefortheMateorAlignconstraint typeandthefunction
ProAsmcompconstraintOffsetSet() definestheoffsetvalue.
Thefunction ProAsmcompconstraintAttributesGet() retrievesthe
constraint attributesforthespecifiedassemblycomponent constraint. The
function ProAsmcompconstraintAttributesSet() setstheconstraint
attributes. Thetypesofconstraint attributesare:
•PRO_ASM_CONSTR_ATTR_FORCE—Force theconstraint, causingstrict
alignment foraxes,lines,andpoints.Youcanforceaconstraint onlyifthe
constraint typeisAlign.
•PRO_ASM_CONSTR_ATTR_IGNORE—Not forusebyCreoParametric
TOOLKIT.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalignment foraxes,lines,andpoints.Youcanforceaconstraint onlyifthe
constraint typeisAlign.
•PRO_ASM_CONSTR_ATTR_IGNORE—Not forusebyCreoParametric
TOOLKIT.
•PRO_ASM_CONSTR_ATTR_NONE—No constraint attributesarespecified.
Thisisthedefaultvalue.
•PRO_ASM_CONSTR_ATTR_INTFC_DEPENDENT—When setina
component interface,theconstraint cannotbechangedbyapplication of
settingsmakingitcoincident, offset,orreoriented.
Assembly: Assembling Components 1145•PRO_ASM_CONSTR_ATTR_INACTIVE—The constraint shouldnotbe
appliedtothefeature.Thiscorresponds totheConstraintEnabledcheckboxin
thecomponent featureuserinterface.
Thefunction ProAsmcompconstraintUserdataGet() retrievestheuser
dataforthegivenconstraint whilethefunction
ProAsmcompconstraintUserdataSet() specifiestheuserdataforthe
givenconstraint.
Usethefunction ProAsmcompconstraintFree() tofreetheconstraint data
structurefromthememory.
Thefunction ProAsmcompconstraintArrayFree() providesasingle
functiontousetofreeanentire ProArray ofProAsmcompconstraintxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructurefromthememory.
Thefunction ProAsmcompconstraintArrayFree() providesasingle
functiontousetofreeanentire ProArray ofProAsmcompconstraint
structures.
Example1:Component Constraints
ThesamplecodeinthefileUgAsmcompConstraint.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_asm
displayseachconstraint ofthecomponent visuallyonthescreen,andincludesa
textexplanation foreachconstraint.
Example2:Assembling Components
ThesamplecodeinthefileUgAsmcompConstraint.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_asm
demonstrates howtoassembleacomponent intoanassembly,andhowto
constrainthecomponent byaligningdatumplanes.Ifthecompletesetofdatum
planesisnotfound,thefunctionwillshowthecomponent constraint dialogtothe
usertoallowthemtoadjusttheplacement astheywish.
RedefiningComponents Interactively
Thefunctionsdescribedinthissectionenableyoutoreroutepreviously assembled
components, asinaninteractive sessionofCreoParametric.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRedefiningComponents Interactively
Thefunctionsdescribedinthissectionenableyoutoreroutepreviously assembled
components, asinaninteractive sessionofCreoParametric.
Functions Introduced:
•ProAsmcompConstrRedefUI()
•ProAsmcompPackageMove()
Thefunction ProAsmcompConstrRedefUI() isintendedforusein
interactive CreoParametric TOOLKITapplications. Thisfunctiondisplaysthe
CreoParametric Component Placement dialogbox,enablingyoutoredefinethe
constraints interactively .ControlisgivenbacktotheCreoParametric TOOLKIT
application whenyouselectOKorCancelthedialogboxisclosed.
1146 Creo®Parametric TOOLKIT User’sGuideThefunction ProAsmcompPackageMove() supportsinteractive and
programmatic packaging ofcomponents. Theargumentstothisfunctionallowthe
userortheprogramtorepackage anexistingcomponent. Ifthecomponent isused
forinteractive purposes,thecontrolisgivenbacktotheCreoParametric
TOOLKITapplication whenyouselectOKorCancelthedialogboxisclosed.
Assembling Components byElement
Treexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforinteractive purposes,thecontrolisgivenbacktotheCreoParametric
TOOLKITapplication whenyouselectOKorCancelthedialogboxisclosed.
Assembling Components byElement
Tree
Assembly components aretreatedasfeaturesinCreoParametric, soitislogicalto
replacethosededicatedfunctionsbyafeatureelementtreethatprovidesthesame
functionality ,butusestheexistingCreoParametric TOOLKITfunctions
ProFeatureCreate(), ProFeatureRedefine() and
ProFeatureElemtreeExtract().
TheElementTreeforanAssembly
Component
Theelementtreeforacomponent assemblyisdocumented intheheaderfile
ProAsmcomp.h andisshowninthefollowingfigure.
Top-levelFeatureElementtreeforComponent Assembly
Model
Theelement PRO_E_COMPONENT_MODEL definesthemodeltobeassembled
intotheassembly.
Assembly: Assembling Components 1147Attributes
Theelement PRO_E_MISC_ATTR definesthetypeofcomponent being
assembled. Youcanalsoaccessthispropertythrough ProAsmcompTypeGet()
andProAsmcompTypeSet().
InitialPositionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelement PRO_E_MISC_ATTR definesthetypeofcomponent being
assembled. Youcanalsoaccessthispropertythrough ProAsmcompTypeGet()
andProAsmcompTypeSet().
InitialPosition
Theelement PRO_E_COMPONENT_INIT_POS definestheabsolutepositionof
thecomponent intheabsenceofanyparametric constraints. Itsvalueisa
ProMatrix objectdescribing thecomponent position.Ifyousupplythiselement
butnoPRO_E_COMPONENT_CONSTRAINT elements,thecomponent is
assembled aspackagedatthislocation.
Ifyouunderconstrainthecomponent, thevalueofthiselementisusedin
conjunction withtheconstraints tosetthepackagedpositionforthecomponent.
ConstraintSetsandMechanism Connections
Theelement PRO_E_COMPONENT_SETS isanarrayofelementsoftypePRO_
E_COMPONENT_SET. Eachoftheseelementsisapredefined setofconstraints.
Althoughyoucandefineauser-definedtypeofconstraint setcontaining anytype
andcombination ofconstraints, thesetelementisalsoimportantwhenusedto
createpredefined typesofsetsinCreoParametric.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAlthoughyoucandefineauser-definedtypeofconstraint setcontaining anytype
andcombination ofconstraints, thesetelementisalsoimportantwhenusedto
createpredefined typesofsetsinCreoParametric.
Mechanism usespredefined settypestorepresentconnections. Theconnection
canalsocontainelementsdescribing mechanism motionaxesstoredforthe
connection.
1148 Creo®Parametric TOOLKIT User’sGuidePRO_E_COMPONENT_SET
Eachcomponent setcontainsthefollowingelements:
•PRO_E_COMPONENT_SET_ID—Specifies thecomponent setid.Thisvalue
isgeneratedautomatically byCreoParametric uponcreationoftheset.Theset
idsshouldremainthesamewhenredefining thecomponent.
•PRO_E_COMPONENT_SET_TYPE—Specifies thecomponent settype.The
followingtabledescribesthevalidvaluesindetails.
Component SetType Description
PRO_ASM_SET_TYPE_FIXED A"Rigid"Mechanism connection: Connectstwo
components sothattheydonotmoverelativelyto
eachother.
PRO_ASM_SET_TYPE_PIN A"Pin"Mechanism connection: Connectsa
component toareferenced axissothatthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponents sothattheydonotmoverelativelyto
eachother.
PRO_ASM_SET_TYPE_PIN A"Pin"Mechanism connection: Connectsa
component toareferenced axissothatthe
Assembly: Assembling Components 1149Component SetType Description
component rotatesormovesalongthisaxiswithone
degreeoffreedom.
PRO_ASM_SET_TYPE_SLIDER A"Slider"Mechanism connection: Connectsa
component toareferenced axissothatthe
component movesalongtheaxiswithonedegreeof
freedom.
PRO_ASM_SET_TYPE_CYLINDRICAL A"Slider"Mechanism connection: Connectsa
component sothatitmovesalongandrotatesabouta
specificaxiswithtwodegreesoffreedom.
PRO_ASM_SET_TYPE_PLANAR A"Planar"Mechanism connection: Connects
components sothattheymoveinaplanerelativelyto
eachotherwithtwodegreesoffreedomintheplane
andonedegreeoffreedomaroundanaxis
perpendicular toit.
PRO_ASM_SET_TYPE_BALL A"Ball"Mechanism connection: Connectsa
component sothatitcanrotateinanydirectionwith
threedegreesoffreedom(360°rotation).
PRO_ASM_SET_TYPE_WELD A"Weld"Mechanism connection: Connectsaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponent sothatitcanrotateinanydirectionwith
threedegreesoffreedom(360°rotation).
PRO_ASM_SET_TYPE_WELD A"Weld"Mechanism connection: Connectsa
component toanothersothattheydonotmove
relativelytoeachother.
PRO_ASM_SET_TYPE_BEARING A"Bearing" Mechanism connection: Acombination
ofBallandSliderconnections withfourdegreesof
freedom.
PRO_ASM_SET_TYPE_GENERAL A"General" Mechanism connection: Hasoneortwo
configurable constraints thatareidenticaltothosein
auser-defined set.
PRO_ASM_SET_TYPE_6DOF A"SixDegreesofFreedom" Mechanism connection:
Doesnotaffectthemotionofthecomponent in
relationtotheassemblybecausenoconstraints are
applied.
PRO_ASM_SET_TYPE_GIMBAL A“Gimbal”Mechanism connection: Thisconnection
behavessimilartothe"SixDegreesofFreedom"
connection exceptthatinGimbalconnection the
translational degreesoffreedomarelocked.
PRO_ASM_SET_TYPE_SLOT A"Slot"Mechanism connection: Apointonanon
straighttrajectory.Thisconnection hasfourdegrees
offreedom,wherethepointfollowsthetrajectoryinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtranslational degreesoffreedomarelocked.
PRO_ASM_SET_TYPE_SLOT A"Slot"Mechanism connection: Apointonanon
straighttrajectory.Thisconnection hasfourdegrees
offreedom,wherethepointfollowsthetrajectoryin
threedirections.
PRO_ASM_SET_USER_DEFINED_TYPE Auserdefinedconstraint set.Legacycomponents
whichdonothavedefinedMechanism connections
willalwaysusethistype.
•PRO_E_COMPONENT_SET_NAME—Specifies thenameofthecomponent
set.
•PRO_E_COMPONENT_SET_MISC_ATTR—Specifies thecomponent set
attributes. Currently,theseattributesarelimitedtoflagswhichenableor
disabletheset.
•PRO_E_COMPONENT_JAS_SETS isanarrayofcompound elementsoftype
PRO_E_COMPONENT_JAS_SET whichindicateJointAxisSet(JAS).It
1150 Creo®Parametric TOOLKIT User’sGuiderepresents themotionaxissettingsfortheMechanism connection. Itconsists
ofthefollowingelements—
○PRO_E_COMPONENT_JAS_ZERO_TYPE—Specifies thetypeofmotion
represented bythismotionaxiselementandthevalueisdrawnfromthe
followingtypes:
◆PRO_AXIS_ZERO_TRANSLATE1
◆PRO_AXIS_ZERO_TRANSLATE2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_E_COMPONENT_JAS_ZERO_TYPE—Specifies thetypeofmotion
represented bythismotionaxiselementandthevalueisdrawnfromthe
followingtypes:
◆PRO_AXIS_ZERO_TRANSLATE1
◆PRO_AXIS_ZERO_TRANSLATE2
◆PRO_AXIS_ZERO_TRANSLATE3
◆PRO_AXIS_ZERO_ROTATION1
◆PRO_AXIS_ZERO_ROTATION2
◆PRO_AXIS_ZERO_ROTATION3
◆PRO_AXIS_ZERO_SLOT
○PRO_E_COMPONENT_JAS_REFS—Specifies initialpositionreferences
forthemotionaxis.
◆PRO_E_COMPONENT_JAS_ORANGE_REF—Specifies the
component referenceofthemotionaxis.
◆PRO_E_COMPONENT_JAS_GREEN_REF—Specifies theassembly
referenceofthemotionaxis.
◆PRO_E_COMPONENT_JAS_0_OFFSET_VAL—Specifies thezero
offsetvalueforthemotionaxis.
○PRO_E_COMPONENT_JAS_REGEN_VALUE_GROUP isacompound
elementspecifying themotionaxisregeneration options.Themotionaxis
regeneration valueisanoffsetvalueusedwhenregenerating themodel.
Thisvaluedetermines theoffsetofthecomponent beingplacedinthe
assemblyfromthezeroreferenceduringregeneration.
◆PRO_E_COMPONENT_JAS_REGEN_VALUE_FLAG—SpecifiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThisvaluedetermines theoffsetofthecomponent beingplacedinthe
assemblyfromthezeroreferenceduringregeneration.
◆PRO_E_COMPONENT_JAS_REGEN_VALUE_FLAG—Specifies
enablingordisablingtheregeneration value.Whenyoudisableit,the
motionaxisbecomesfreeofconstraint.
◆PRO_E_COMPONENT_JAS_REGEN_VALUE— Specifiesthevalue
alongthismotionaxisthatwillbeusedforregeneration oftheposition
andorientation ofthecomponent.
○PRO_E_COMPONENT_JAS_MIN_LIMIT specifiestheminimumlimit
forregeneration value.Itconsistsofthefollowingelements:
◆PRO_E_COMPONENT_JAS_MIN_LIMIT_FLAG—A boolean
elementindicating whethertheminimumlimitisappliedtothe
component.
Assembly: Assembling Components 1151◆PRO_E_COMPONENT_JAS_MIN_LIMIT_VAL—The valueforthe
minimumlimit.
◆PRO_E_COMPONENT_JAS_MIN_LIMIT_REF—A selecteditem
whichservesastheminimumlimitinsteadofusinganassignedvalue.
○PRO_E_COMPONENT_JAS_MAX_LIMIT—Specifies themaximum limit
forregeneration value.Itconsistsofthefollowingelements:
◆PRO_E_COMPONENT_JAS_MAX_LIMIT_FLAG—A booleanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_E_COMPONENT_JAS_MAX_LIMIT—Specifies themaximum limit
forregeneration value.Itconsistsofthefollowingelements:
◆PRO_E_COMPONENT_JAS_MAX_LIMIT_FLAG—A boolean
elementindicating ifthemaximum limitisappliedtothecomponent.
◆PRO_E_COMPONENT_JAS_MAX_LIMIT_VAL—The valueforthe
maximum limit.
◆PRO_E_COMPONENT_JAS_MAX_LIMIT_REF—A selecteditem,
whichservesasthemaximum limitinsteadofusinganassignedvalue.
○PRO_E_COMPONENT_JAS_RESTITUTION—Specifies coefficientof
restitution forthemotionaxis.Itisacompound elementandconsistsof
thefollowingelements:
◆PRO_E_COMPONENT_JAS_RESTITUTION_FLAG—A boolean
elementindicating ifacoefficientofrestitution isapplied.
◆PRO_E_COMPONENT_JAS_RESTITUTION_COEF— Specifiesthe
coefficientofrestitution value.
○PRO_E_COMPONENT_JAS_FRICTION—Specifies coefficientof
frictionforthemotionaxis.Itisacompound elementandconsistsofthe
followingelements:
◆PRO_E_COMPONENT_JAS_FRICTION_FLAG—A booleanelement
indicating ifthecoefficientsoffrictionareapplied.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfrictionforthemotionaxis.Itisacompound elementandconsistsofthe
followingelements:
◆PRO_E_COMPONENT_JAS_FRICTION_FLAG—A booleanelement
indicating ifthecoefficientsoffrictionareapplied.
◆PRO_E_COMPONENT_JAS_STATIC_FRIC_COEF— Specifiesthe
coefficientofstaticfrictionvalue.
◆PRO_E_COMPONENT_JAS_KINEM_FRIC_COEF— Specifiesthe
coefficientofkineticfrictionvalue.
◆PRO_E_COMPONENT_JAS_RADIUS_VALUE— Specifiesthe
contactradiusvalue.
PlacementConstraints
Theelement PRO_E_COMPONENT_CONSTRAINTS isanarrayofelementsof
typePRO_E_COMPONENT_CONSTRAINT, eachrepresenting asingle
component placement constraint.
1152 Creo®Parametric TOOLKIT User’sGuidePRO_E_COMPONENT_CONSTRAINT
Eachconstraint elementcontainsthefollowingelements:
•PRO_E_COMPONENT_CONSTR_TYPE—See discussion regarding
Assembling aComponent Parametrically onpage1142.
•PRO_E_COMPONENT_COMP_CONSTR_REF—Identifies thegeometryitem
inthecomponent referenced bytheconstraint. Thiselementisoftype
Selection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAssembling aComponent Parametrically onpage1142.
•PRO_E_COMPONENT_COMP_CONSTR_REF—Identifies thegeometryitem
inthecomponent referenced bytheconstraint. Thiselementisoftype
Selection.
•PRO_E_COMPONENT_ASSEM_CONSTR_REF—Identifies theconstraint
referenceintheassembly.
Note
thisreferencemustincludeacomponent pathreferencing thetoplevel
assembly,evenifthereferencebelongsdirectlytothetoplevelassembly.
•PRO_E_COMPONENT_CONSTR_REF_OFFSET—Gives theoffsetvalue,if
theconstraint typeisanoffset.
•PRO_E_COMPONENT_USER_DATA—Specifies userdata.
•PRO_E_COMPONENT_CONSTR_ATTR—See discussion underAssembling a
Component Parametrically onpage1142.
•Theelements PRO_E_COMPONENT_COMP_ORIENT andPRO_E_
COMPONENT_ASSM_ORIENT indicatewhichsideofareferenced surfaceto
beused.Thesevalueshavedifferentmeaningsforuser-definedconstraint sets
andmechanism connections. Seediscussion under
ProAsmcompconstraintAsmreferenceGet() and
ProAsmcompconstraintCompreferenceGet().
•PRO_E_COMPONENT_CONSTR_SET_ID—Specifies theindexofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandmechanism connections. Seediscussion under
ProAsmcompconstraintAsmreferenceGet() and
ProAsmcompconstraintCompreferenceGet().
•PRO_E_COMPONENT_CONSTR_SET_ID—Specifies theindexofthe
memberofthearrayofPRO_E_COMPONENT_SET elementsthatownsthe
constraint.
Assembly: Assembling Components 1153•PRO_E_COMPONENT_SLOT_EXTRA_CRV_REF—Specifies theextracurve
references usedbyaSlotconnection only.Thisisamultivalued element.
Component MovementinAssembly
Theelement PRO_E_COMPONENT_MOVEMENTS isanarrayofelementsoftype
PRO_E_COMPONENT_MOVEMENT whichrepresentmovements appliedtothe
component beingassembled.
PRO_E_COMPONENT_MOVEMENT
Eachmovement elementcontainsthefollowingelements:
•PRO_E_COMPONENT_MOVEMENT_TYPE specifiesallowedmovement types
Usethefollowingoptionstomovethecomponent paralleltothereference
selectedandareofthefollowingvalues:
•PRO_ASM_TRANSLATE_X
•PRO_ASM_TRANSLATE_Y
•PRO_ASM_TRANSLATE_Z
Usethefollowingoptionstorotatethecomponent abouttheselectedreferences.
•PRO_ASM_ROTATE_Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectedandareofthefollowingvalues:
•PRO_ASM_TRANSLATE_X
•PRO_ASM_TRANSLATE_Y
•PRO_ASM_TRANSLATE_Z
Usethefollowingoptionstorotatethecomponent abouttheselectedreferences.
•PRO_ASM_ROTATE_X
•PRO_ASM_ROTATE_Y
•PRO_ASM_ROTATE_Z
•PRO_ASM_TWIST_FIT
•PRO_E_COMPONENT_MOVEMENT_REF specifiesthetranslational and
rotationalmotionreferences.
•PRO_E_COMPONENT_MOVEMENT_VALUE
PlacementviaInterface
Theelement PRO_E_COMP_PLACE_INTERFACE isacompound elementthat
definesanalternative assemblytechnique: usingcomponent interfacestodefine
theplacement insteadoftraditional constraints.
1154 Creo®Parametric TOOLKIT User’sGuidePRO_E_COMP_PLACE_INTERF ACE
Theelementcontainsthefollowingelements:
•PRO_E_COMP_PLACE_INTERFACE_TYPE—Specifies theinterfacetypes
asfollows:
○PRO_ASM_INTFC_TO_GEOM—Assembly ofthecomponent bymatching
aninterfaceonthecomponent toreferenced geometryintheassembly.
○PRO_ASM_INTFC_TO_INTFC—Assembly ofthecomponent by
matchinganinterfaceonthecomponent toaninterfacedefinedinthe
assembly.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaninterfaceonthecomponent toreferenced geometryintheassembly.
○PRO_ASM_INTFC_TO_INTFC—Assembly ofthecomponent by
matchinganinterfaceonthecomponent toaninterfacedefinedinthe
assembly.
Note
Ifthisvalueisnotset(setto0)thencomponent interfacesarenotusedto
definethiscomponent.
•PRO_E_COMP_PLACE_INTERFACE_COMP—Specifies thecomponent
modelinterface.Thisshouldcontainthecomponent interfacefeature.
•PRO_E_COMP_PLACE_INTERFACE_ASSEMS—Specifies anarrayof
assemblyreferences. Iftheplacement typeisPRO_ASM_INTFC_TO_GEOM
thiscontains1ormoregeometric references fromtheassembly.Ifthe
placement typeisPRO_ASM_INTFC_TO_INTFC thiscontainsasingle
referenceelementcontaining thecomponent interfacefeature.
Assembling Components UsingIntent
Datums
YoucanuseIntentDatumssuchasIntentAxis,IntentPoint,IntentPlane,and
IntentCoordinate Systeminassemblycomponent placement andconstraints.
Assembly: Assembling Components 1155Example3:Assembling Components UsingIntent
DatumsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIntentCoordinate Systeminassemblycomponent placement andconstraints.
Assembly: Assembling Components 1155Example3:Assembling Components UsingIntent
Datums
ThesamplecodeinthefileUgAsmcompConstraint.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_asm
demonstrates howtoassembleacomponent intoanassemblyusingintentpoint
andintentplane,andhowtosetconstraints afterassembling acomponent using
intents.
1156 Creo®Parametric TOOLKIT User’sGuide56
Assembly:KinematicDragging
andCreatingSnapshots
ConnectingtoaKinematicDragSession.................................................................1158
PerformingKinematicDrag....................................................................................1160
CreatingandModifyingSnapshots.........................................................................1160
SnapshotConstraints............................................................................................1161xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSnapshotConstraints............................................................................................1161
SnapshotTransforms............................................................................................1163
SnapshotsinDrawingViews..................................................................................1164
ThischapterdescribestheCreoParametric TOOLKITfunctionsfordragging
assemblyentitiesthroughanallowablerangetoseehowyourassemblyworksina
specificconfiguration. Thesefunctionsprovidethesameresultasobtainedby
usingtheDragdialogboxintheCreoParametric userinterface.
Thischapteralsodescribesthefunctionstocreatesnapshotsoftheassemblyin
differentpositionsandorientations.
1157Connecting toaKinematicDragSession
Functions Introduced:
•ProKinDragStart()
•ProKinDragStop()
•ProKinDragSessionInquir e()
•ProKinDragEnvir onmentSet()
•ProKinDragReconnect()
Thefunction ProKinDragStart() startsadragsession.Thisfunctionshouldxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProKinDragStart()
•ProKinDragStop()
•ProKinDragSessionInquir e()
•ProKinDragEnvir onmentSet()
•ProKinDragReconnect()
Thefunction ProKinDragStart() startsadragsession.Thisfunctionshould
becalledbeforeanyotherfunctionforKinematic dragorsnapshots. All
subsequent functionsworkwiththesnapshotsofthetop-levelassembly.This
functioncanbecalledfordesignassemblies intheStandardAssembly and
Mechanism modesonly.Itcannotbeusedinthefollowingcases:
•Iftheassemblyisintheexplodedstate
•IftheSketchermodeisactive
•Whencomponent placement isactive
•WhentheDragdialogboxisactive
Thefunction ProKinDragStop() stopsthedragsession.Use
ProWindowRefresh() toviewthechangeinthegraphicwindowscale
according totheupdatedoutline.
Thefunction ProKinDragSessionInquire() determines ifthedrag
sessionisactive.Thedragsessionmayexistautomatically insomecases,suchas
redefine,regeneration, windowswitch,representation modechange.
Thefunction ProKinDragEnvironmentSet() setstheenvironment forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsessionisactive.Thedragsessionmayexistautomatically insomecases,suchas
redefine,regeneration, windowswitch,representation modechange.
Thefunction ProKinDragEnvironmentSet() setstheenvironment for
draggingandreconnectoperations. Itrequiresthefollowinginputarguments:
•snap_name—Specifies thenameoftheactivesnapshotwhoseconstraints are
usedforthedragoperation. Thesnapshotischeckedforstatusessuchas
good, outdated, orincomplete. PassNULLifnotrequired.
Theoutdated statusmeanssomepartsfromthebodyhavearelative
transformation thatisdifferentfromthecurrenttransformation. The
incomplete statusmeansthatsomepartsfromthebodyaremissinginthe
activesnapshot.
•path—Specifies thepathintermsoftheProAsmcomppath objecttothe
activesnapshotofasubassembly containedwithinthetop-levelassembly.
PassNULLforatop-levelassemblysnapshot.
•type—Specifies thetypeofdragtobeperformed. Itisgivenbythe
enumerated typeProKinDragType thattakesthefollowingvalues:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPassNULLforatop-levelassemblysnapshot.
•type—Specifies thetypeofdragtobeperformed. Itisgivenbythe
enumerated typeProKinDragType thattakesthefollowingvalues:
1158 Creo®Parametric TOOLKIT User’sGuide○PRO_KIN_POINT_DRAG— Selectapointtodraginapartwithinthe
top-levelassembly.Duringthedraggingoperation, thepointyouselected
followsthepointer’smovement whilemaintaining connections.
○PRO_KIN_BODY_DRAG—Select apartfromthetop-levelassemblyto
drag.Whenyoudragapart,itspositioninthegraphicswindowchanges,
butitsorientation remainsfixed.Iftheassemblyrequiresaparttobe
reoriented inconjunction withachangeinposition,thepartdoesnotmove
atall,astheassemblycannotreassemble inthenewposition.
○PRO_KIN_ADVANCED_TRANS_X—Specifies thetranslation intheX
directionoftheselectedcoordinate system.Thistypeisapplicable onlyin
caseofanadvanceddragoperation. Youcanselectacoordinate systemby
selectingtheparttobedragged.
○PRO_KIN_ADVANCED_TRANS_Y—Specifies thetranslation intheYxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcaseofanadvanceddragoperation. Youcanselectacoordinate systemby
selectingtheparttobedragged.
○PRO_KIN_ADVANCED_TRANS_Y—Specifies thetranslation intheY
directionoftheselectedcoordinate system.Thistypeisapplicable onlyin
caseofanadvanceddragoperation.
○PRO_KIN_ADVANCED_TRANS_Z—Specifies thetranslation intheZ
directionoftheselectedcoordinate system.Thistypeisapplicable onlyin
caseofanadvanceddragoperation.
○PRO_KIN_ADVANCED_ROT_X—Specifies therotationaroundtheXaxis
oftheselectedcoordinate system.Thistypeisapplicable onlyincaseofan
advanceddragoperation. Youcanselectacoordinate systembyselecting
theparttobedragged.
○PRO_KIN_ADVANCED_ROT_Y—Specifies therotationaroundtheYaxis
oftheselectedcoordinate system.Thistypeisapplicable onlyincaseofan
advanceddragoperation.
○PRO_KIN_ADVANCED_ROT_Z—Specifies therotationaroundtheZaxis
oftheselectedcoordinate system.Thistypeisapplicable onlyincaseofan
advanceddragoperation.
•refobject—Specifies theselectionreferenceintheformacoordinate systemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoftheselectedcoordinate system.Thistypeisapplicable onlyincaseofan
advanceddragoperation.
•refobject—Specifies theselectionreferenceintheformacoordinate system
(PRO_CSYS), part(PRO_PART), ormechanism body(PRO_MDO_BODY) for
anadvanceddragoperation. Thisargumentisrelevantonlyforadvanceddrag
types.Forallotherdragtypes,itisignoredandNULLshouldbepassed.
Thefunction ProKinDragReconnect() reconnects toadragsessiontaking
intoaccountconstraints butnottransforms fromtheactivesnapshotspecifiedin
ProKinDragEnvironmentSet(). UseProWindowRefresh() toview
thechangesinthepositionsoftheassemblycomponents. Refertothesections
SnapshotConstraints onpage1161andSnapshotTransforms onpage1163for
moreinformation.
Assembly: Kinematic DraggingandCreatingSnapshots 1159Performing KinematicDrag
FunctionIntroduced:
•ProKinDragPerformMove()
Thefunction ProKinDragPerformMove() dragstheselectedgeometric
objecttothespecifiedXandYscreencoordinates givenbyProArray ofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctionIntroduced:
•ProKinDragPerformMove()
Thefunction ProKinDragPerformMove() dragstheselectedgeometric
objecttothespecifiedXandYscreencoordinates givenbyProArray of
Pro2dPnt object.Thegeometric objectcanbePRO_POINT, PRO_SURFACE_
PNT, PRO_AXIS, PRO_EDGE, PRO_CURVE, PRO_DATUM_PLANE, PRO_SRF_
PLANE_PNT, orPRO_SURFACE incaseofapointdrag,andPRO_PART or
PRO_MDO_BODY forallotherdragtypes.Ahookpointisdisplayedontheobject
selectedfordrag,whichisremovedattheendofthedragoperation. Thedragging
isperformed according totheenvironment setbythefunction
ProKinDragEnvironmentSet(). Usetheconstraints setfortheactive
snapshotwhiledragging.
CreatingandModifyingSnapshots
Functions Introduced:
•ProKinDragSnapshotsNamesGet()
•ProSnapshotCr eate()
•ProSnapshotUpdate()
•ProSnapshotRename()
•ProSnapshotDelete()
•ProSnapshotApply()
Thefunction ProKinDragSnapshotsNamesGet() retrievesanarrayof
namesofthesnapshotsbelonging tothetop-levelassemblyandallits
subassemblies.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSnapshotRename()
•ProSnapshotDelete()
•ProSnapshotApply()
Thefunction ProKinDragSnapshotsNamesGet() retrievesanarrayof
namesofthesnapshotsbelonging tothetop-levelassemblyandallits
subassemblies.
Thefunction ProSnapshotCreate() createsanewsnapshotforthetop-level
assemblyasperitscurrentpositionintheCreoParametric window.Constraints
arecopiedfromtheactivesnapshot.Thenewlycreatedsnapshotbecomesactive.
Thefunction ProSnapshotUpdate() updatesthesnapshotforthetop-level
assemblyasperitscurrentpositionintheCreoParametric window.Constraints
arecopiedfromtheactivesnapshot.Thenewlyupdatedsnapshotbecomesactive.
Thefunction ProSnapshotRename() renamestheactivesnapshotofthetop-
levelassembly.
Thefunction ProSnapshotDelete() deletesaspecifiedsnapshot.The
snapshotcanbeofthetop-levelassemblyoranyofitssubassemblies. PassNULL
fortheargument pathtospecifythetop-levelassembly.
1160 Creo®Parametric TOOLKIT User’sGuideThefunction ProSnapshotApply() appliesthetransforms oftheactivexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfortheargument pathtospecifythetop-levelassembly.
1160 Creo®Parametric TOOLKIT User’sGuideThefunction ProSnapshotApply() appliesthetransforms oftheactive
snapshot.Unlikeintheuserinterface,noattempttoreconnectismade.Call
ProKinDragReconnect() ifreconnectisnecessary.Use
ProWindowRefresh() toviewthechangesinthepositionsoftheassembly
components.
SnapshotConstraints
Theconstraints thatcanbeappliedtoasnapshotarecontainedbythestructure
ProSnapshotConstraint. Thedeclaration for
ProSnapshotConstraint isasfollows:
typedef struct proSnapshotConstraint
{
ProSnapshotConstraintType type;
ProSelection *sel_array;
double value;
ProBool user_active;
ProBool valid
}ProSnapshotConstraint;
Thefieldsintheabovestructurearedescribedasfollows:
•type—Specifies thetypeofsnapshotconstraint. Thetypeisrepresented by
theenumerated typeProSnapshotConstraintType andcantakeoneof
thefollowingvalues:
○PRO_SNAP_ALIGN—Select twopoints,twolines,ortwoplanesfromthe
top-levelassembly.Thetwoentitiesremainalignedduringthedragxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheenumerated typeProSnapshotConstraintType andcantakeoneof
thefollowingvalues:
○PRO_SNAP_ALIGN—Select twopoints,twolines,ortwoplanesfromthe
top-levelassembly.Thetwoentitiesremainalignedduringthedrag
operation.
○PRO_SNAP_MATE—Select twoplanesfromthetop-levelassembly.The
planesremainmatedduringthedragoperation.
○PRO_SNAP_ORIENT—Select twoplanesthatorientatananglewitheach
other.
○PRO_SNAP_MOTION_AXIS_POS—Select amotionaxistospecifythe
motionaxisposition.
○PRO_SNAP_BODY_LOCK—Select thebodiestobelockedtogetherwhile
dragging.
○PRO_SNAP_CONNECTION_DISABLE—Select aconnection thatwillbe
disabledwhiledragging.
○PRO_SNAP_PARALLEL_VIEW_PLANE—Select abodythatwillmove
parallelonlytotheviewplane.Thisconstraint typeisthesameasthe
PRO_SNAP_ALIGN orPRO_SNAP_MATE types,butthesecond
referenceinthiscaseistheviewplane.Thisconstraint typeisavailable
onlyviaCreoParametric TOOLKIT. IfsetbytheCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_SNAP_ALIGN orPRO_SNAP_MATE types,butthesecond
referenceinthiscaseistheviewplane.Thisconstraint typeisavailable
onlyviaCreoParametric TOOLKIT. IfsetbytheCreoParametric
Assembly: Kinematic DraggingandCreatingSnapshots 1161TOOLKITapplication, thisconstraint typebecomesvisibleintheDrag
dialogboxintheCreoParametric userinterface,butitcannotbestored.
○PRO_SNAP_CAM_LIFTOFF_ENABLE—Allows twocamswithacam-
followerconnection toseparateandcollideduringadraggingoperation.
○PRO_SNAP_CAM_LIFTOFF_DISABLE—Requires twocamswitha
cam-follower connection tobeincontactwitheachotherduringthe
draggingoperation.
Note
Theconstraint types PRO_SNAP_CAM_LIFTOFF_ENABLE andPRO_
SNAP_CAM_LIFTOFF_DISABLE overridetheEnable Liftoff
propertythatyousetfromtheCam-Follower Connection Definitiondialog
boxintheCreoParametric userinterface.
•*sel_array—Specifies theProArray ofselections. Thenumberof
selections neededandthepermittedselectiontypesforeachconstraint typeare
specifiedinthefollowingtable:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxboxintheCreoParametric userinterface.
•*sel_array—Specifies theProArray ofselections. Thenumberof
selections neededandthepermittedselectiontypesforeachconstraint typeare
specifiedinthefollowingtable:
ConstraintType Numberof
SelectionsneededPermittedSelectionTypes
PRO_SNAP_ALIGN 2 PRO_POINT, PRO_SURFACE_PNT, PRO_
AXIS, PRO_EDGE, PRO_CURVE, PRO_
DATUM_PLANE, PRO_SRF_PLANE_PNT,
PRO_SURFACE
PRO_SNAP_MATE, PRO_SNAP_
ORIENTPRO_DATUM_PLANE, PRO_SRF_PLANE_
PNT, PRO_SURFACE
PRO_SNAP_MOTION_AXIS_
POS1 PRO_MDO_CONN_AXIS_ROT_1/2/3,
PRO_MDO_CONN_AXIS_TR_1/2/3,
PRO_MDO_SLOT_AXIS
PRO_SNAP_CONNECTION_
DISABLEPRO_MDO_CONN, PRO_MDO_CAM_CONN,
PRO_MDO_SLOT_CONN, PRO_MDO_
GEAR_CONN
PRO_SNAP_PARALLEL_VIEW_
PLANEPRO_POINT, PRO_SURFACE_PNT, PRO_
EDGE_START, PRO_EDGE_END, PRO_
CRV_START, PRO_CRV_END, PRO_AXIS,
PRO_EDGE, PRO_CURVE, PRO_SRF_
PLANE_PNT, PRO_SURFACE, PRO_
DATUM_PLANE
PRO_SNAP_CAM_LIFTOFF
_ENABLEPRO_MDO_CAM_CONN
PRO_SNAP_CAM_LIFTOFF
_DISABLE
PRO_SNAP_BODY_LOCK 2ormore PRO_PART, PRO_MDO_BODYxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_EDGE, PRO_CURVE, PRO_SRF_
PLANE_PNT, PRO_SURFACE, PRO_
DATUM_PLANE
PRO_SNAP_CAM_LIFTOFF
_ENABLEPRO_MDO_CAM_CONN
PRO_SNAP_CAM_LIFTOFF
_DISABLE
PRO_SNAP_BODY_LOCK 2ormore PRO_PART, PRO_MDO_BODY
•value—Depending upontheconstraint type,thisfieldtakesthefollowing
values:
1162 Creo®Parametric TOOLKIT User’sGuide○ForthePRO_SNAP_ALIGN andPRO_SNAP_MATE constraint types,
valuespecifiesthelineardistancebetweenthereferences.
○ForthePRO_SNAP_ORIENT type,valuespecifiestheanglebetween
thereferences.
○ForthePRO_SNAP_MOTION_AXIS_POS type,valuespecifiesthe
offsetofthejointaxiszeroposition.Thisvalueisangularfortherotation
axisandlinearforthetranslational axis.Thereferences forthejointaxis
zeropositionmaybedefaultorasspecifiedbytheuser.
•active—Specifies theProBoolean optiontoenableordisablea
constraint.
•valid—Specifies iftheconstraint isvalidorinvalidinthecurrentmodel
context.IfthisProBoolean optionisPRO_B_TRUE, theconstraint isvalidxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconstraint.
•valid—Specifies iftheconstraint isvalidorinvalidinthecurrentmodel
context.IfthisProBoolean optionisPRO_B_TRUE, theconstraint isvalid
(active),andifitisPRO_B_FALSE, theconstraint isinvalid(suppressed).
Functions Introduced:
•ProSnapshotConstraintsGet()
•ProSnapshotConstraintAdd()
•ProSnapshotConstraintDelete()
•ProSnapshotConstraintUpdate()
•ProSnapshotConstraintEvaluate()
Thefunction ProSnapshotConstraintsGet() retrievesalltheconstraints
ofaspecifiedsnapshot.Thesnapshotcanbeofthetop-levelassemblyoranyof
itssubassemblies. PassNULLfortheargument pathtospecifythetop-level
assembly.
Thefunction ProSnapshotConstraintAdd() addsaconstraint tothe
snapshotofthetop-levelassembly.
Thefunction ProSnapshotConstraintDelete() deletesaconstraint from
thesnapshotofthetop-levelassembly.
Thefunction ProSnapshotConstraintUpdate() updatesaconstraint for
thesnapshotofthetop-levelassembly.
Thefunction ProSnapshotConstraintEvaluate() calculates thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesnapshotofthetop-levelassembly.
Thefunction ProSnapshotConstraintUpdate() updatesaconstraint for
thesnapshotofthetop-levelassembly.
Thefunction ProSnapshotConstraintEvaluate() calculates the
positionofthemotionaxisfortheconstraint typePRO_SNAP_MOTION_AXIS_
POSfortheactivemodelintheCreoParametric window.Thisvaluedoesnot
dependonthecurrentsnapshotanditisnotnecessaryforthesnapshottocontain
theconstraint.
SnapshotTransforms
Functions Introduced:
Assembly: Kinematic DraggingandCreatingSnapshots 1163•ProSnapshotT rfsGet()
•ProSnapshotT rfsUpdate()
Thefunction ProSnapshotTrfsGet() retrievesthetransformation pathsand
transformation matricessavedinthesnapshotsforthesubassemblies andtheir
components withrespecttothetop-levelassemblysnapshot.
Thefunction ProSnapshotTrfsUpdate() updatesthetransformation
matricessavedinthesnapshotsforthesubassemblies andtheircomponents with
respecttothetop-levelassemblysnapshot.
SnapshotsinDrawingViews
Functions Introduced:
•ProSnapshotAllowedInDrawingSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmatricessavedinthesnapshotsforthesubassemblies andtheircomponents with
respecttothetop-levelassemblysnapshot.
SnapshotsinDrawingViews
Functions Introduced:
•ProSnapshotAllowedInDrawingSet()
•ProSnapshotAllowedInDrawingGet()
Thefunction ProSnapshotAllowedInDrawingSet() assignstheactive
snapshotofthetop-levelassemblytobeavailableorunavailable indrawings.Set
theargument allowtoPRO_B_TRUE tomakethesnapshotavailableindrawings.
Thefunction ProSnapshotAllowedInDrawingGet() determines ifthe
activesnapshotisallowedindrawings.Theargument p_is_allowed isPRO_B_
TRUEifthesnapshotisallowedindrawings.
1164 Creo®Parametric TOOLKIT User’sGuide57
Assembly:Simplified
Representations
Overview..............................................................................................................1166
SimplifiedRepresentations inSession....................................................................1167xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSimplifiedRepresentations inSession....................................................................1167
RetrievingSimplifiedRepresentations .....................................................................1169
RetrievingandExpandingLightWeight GraphicsSimplifiedRepresentations .............1170
CreatingandDeletingSimplifiedRepresentations ....................................................1171
ExtractingInformationAboutSimplifiedRepresentations ..........................................1172
ModifyingSimplifiedRepresentations .....................................................................1173
GatheringComponents byRule..............................................................................1175
CreoParametric TOOLKITgivesprogrammatic accesstoallthesimplified
representation functionality ofCreoParametric. Youcancreatesimplified
representations eitherpermanently oratruntime,andyoucansave,retrieve,or
modifythembyaddingordeletingitems.
1165Overviewxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrepresentation functionality ofCreoParametric. Youcancreatesimplified
representations eitherpermanently oratruntime,andyoucansave,retrieve,or
modifythembyaddingordeletingitems.
1165Overview
UsingCreoParametric TOOLKIT, youcancreateandmanipulate assembly
simplified representations justasyoucanusingCreoParametric interactively .
Note
CreoParametric TOOLKITsupportsretrievalandactivation ofbothpartand
assemblysimplified representations. Inaddition,CreoParametric TOOLKIT
supportscreationandmodification ofassemblysimplified representations.
Functions notappropriate forpartmodeareidentifiedinthedescription.
Simplified representations areidentifiedbytheDHandle ProSimprep. Aswith
otherDHandles suchasProFeature andProGeomitem, theProSimprep
handlecontainsjustenoughinformation touniquelyidentifytheobjectinthe
database—the modelowner,type,andidentifier.
Theinformation requiredtocreateandmodifyasimplified representation is
storedinaseriesofProSimprepdata structures, whicharevisibledataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatabase—the modelowner,type,andidentifier.
Theinformation requiredtocreateandmodifyasimplified representation is
storedinaseriesofProSimprepdata structures, whicharevisibledata
structures. Thedatastructurecontainsthefollowingfields:
•ProName name—The nameofthesimplified representation
•ProBoolean temp—Specifies whetheritisatemporary,simplified
representation
•ProSimprepActionType action_type—The rulethatcontrolsthe
defaulttreatmentofitemsinthesimplified representation
•ProSimprepitem *items—An arrayofassemblycomponents and
featuresandtheactionsappliedtotheminthesimplified representation
AProSimprepitem isidentifiedbytheProIdTable thatdefinesthe
assemblycomponent pathtothatitem.(EveniftheIDtablepathisonlyonelevel,
usetheProIdTable andnotthefeatureidforassemblies). Each
ProSimprepitem hasitsownProSimprepAction assignedtoit.
ProSimprepAction isavisibledatastructurethatincludesavariableoftype
ProSimprepActionType.
ProSimprepActionType isanenumerated typethatspecifiesthepossiblexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSimprepAction isavisibledatastructurethatincludesavariableoftype
ProSimprepActionType.
ProSimprepActionType isanenumerated typethatspecifiesthepossible
treatmentofitemsinasimplified representation. Youcanspecifythefollowing
typesofactionsonthecomponent:
•PRO_SIMPREP_NONE—Specifies thatnoactionisspecified.
•PRO_SIMPREP_REVERSE—Specifies thatthereverseofthedefaultrule
mustbeappliedtothecomponent. Forexampleconsiderthatthedefaultrule
istoexcludeacomponent. Whenyousetthevalue PRO_SIMPREP_
REVERSE, thecomponent isincludedinthesimplified representation.
1166 Creo®Parametric TOOLKIT User’sGuide•PRO_SIMPREP_INCLUDE—Specifies toincludethecomponent inthe
simplified representation.
•PRO_SIMPREP_EXCLUDE—Specifies toexcludethecomponent inthe
simplified representation.
•PRO_SIMPREP_SUBSTITUTE—Specifies tosubstitutethecomponent in
thesimplified representation.
•PRO_SIMPREP_GEOM—Specifies tousegeometric representation.
•PRO_SIMPREP_GRAPHICS—Specifies tousegraphicalrepresentation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesimplified representation.
•PRO_SIMPREP_GEOM—Specifies tousegeometric representation.
•PRO_SIMPREP_GRAPHICS—Specifies tousegraphicalrepresentation.
•PRO_SIMPREP_SYMB—Specifies tousesymbolicrepresentation.
•PRO_SIMPREP_BOUNDBOX—Specifies touseboundaryboxrepresentation.
•PRO_SIMPREP_DEFENV—Specifies tousethedefaultenvelope
representation.
•PRO_SIMPREP_LIGHT_GRAPH—Specifies touselightweightgraphics
representation.
•PRO_SIMPREP_AUTO—Specifies touseautomatic representation.
SimplifiedRepresentations inSession
Functions Introduced:
•ProSolidSimpr epVisit()
•ProSimpre pInit()
•ProSimpre pSelect()
•ProSimpre pActivate()
•ProSimpre pActiveGet()
•ProSimpre pTypeGet()
•ProSimpre pIsDefault()
Thissectiondescribestheutilityfunctionsthatrelatetosimplified representations.
ProSolidSimprepVisit() isliketheothervisitfunctions, andvisitsallthe
simplified representations ofaparent ProSolid. Thefunctionvisitsonlyuser-
definedrepresentation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSolidSimprepVisit() isliketheothervisitfunctions, andvisitsallthe
simplified representations ofaparent ProSolid. Thefunctionvisitsonlyuser-
definedrepresentation.
Asallothervisitfunctions, ittakesfourarguments—a pointertotheparent
ProSolid, afilterfunction,thevisitfunctionitself,andaProAppData field.
Thefunction ProSimprepInit() initializesaProSimprep structure.The
functiontakesthefollowingarguments:
•ProNamer ep_name— Thenameofthesimplified representation inthesolid.
Ifyouspecifythisargument,thefunctionignorestherep_id.
Assembly: Simplified Representations 1167•intr ep_id—The identifierofthesimplified representation, ifyoudidnot
specifyrep_name (youspecified NULL).
•ProSolidp_solid—The parentsolidthatcontainsthesimplified
representation.
•ProSimprepp_simp_r ep—Thehandletothenewlyinitialized simplified
representation.
Thefunction ProSimprepSelect() createsaCreoParametric menutoenable
interactive selection.Thefunctiontakestheparentsolidasinput,andoutputsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrepresentation.
Thefunction ProSimprepSelect() createsaCreoParametric menutoenable
interactive selection.Thefunctiontakestheparentsolidasinput,andoutputsthe
handletotheselectedsimplified representation. IfyouchoosetheQuitmenu
button,thefunctionreturnsthevalue PRO_TK_USER_ABORT. Iftheuserselects
themasterrepresentation, thereturnedsimplified representation structurehasan
identifierof–1.
ProSimprepActivate() enablesyoutosetthecurrentlyactivesimplified
representation. Tosetasimplified representation tobethecurrentlydisplayed
model,youmustalsocallProSolidDisplay(). Thisfunctionenablesyouto
bringinactivesubmodels intomemory,andusetheirhandleswithoutdisplaying
them.
ProSimprepActivate() doesnotsupportactivation ofpartsimplified
representations, becausepartsimplified representation handlescannotbepassedto
thisfunction.Toobtainahandletoapartsimplified representation use
ProPartSimprepRetrieve(). Youcandisplaythesimplified representation
inawindowusing ProSolidDisplay().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthisfunction.Toobtainahandletoapartsimplified representation use
ProPartSimprepRetrieve(). Youcandisplaythesimplified representation
inawindowusing ProSolidDisplay().
ProSimprepActiveGet() enablesyoutofindthecurrentlyactivesimplified
representation. Givenamodelhandle, ProSimprepActiveGet() returnsthe
handletothecurrentlyactivesimplified representation. Ifthecurrent
representation isthemasterrepresentation, theidentifierofthehandleissetto–1.
Thefunction ProSimprepTypeGet() returnsthetypeofaspecified
simplified representation usingtheenumerated datatypeProSimprepType:
•PRO_SIMPREP_MASTER_REP—Specifies afullydetailedassembly.The
modeltreelistsallitscomponents andidentifiesthemasincluded,excluded,
orsubstituted.
•PRO_SIMPREP_USER_DEFINED—Specifies arepresentation fromthe
selectedcomponent.
•PRO_SIMPREP_GRAPH_REP—Specifies arepresentation thatcontainsonly
information fordisplay.Youcanquicklybrowsethroughalargeassembly.
Graphicsrepresentations cannotbemodifiedorreferenced.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_SIMPREP_GRAPH_REP—Specifies arepresentation thatcontainsonly
information fordisplay.Youcanquicklybrowsethroughalargeassembly.
Graphicsrepresentations cannotbemodifiedorreferenced.
•PRO_SIMPREP_GEOM_REP—Specifies arepresentations thatcontains
completecomponent geometryinformation. Ascompared tographics
representations, geometryrepresentations takelongertoretrieveandrequire
morememory.
1168 Creo®Parametric TOOLKIT User’sGuide•PRO_SIMPREP_SYMB_REP—Specifies arepresentation thatallowsyouto
representcomponents withasymbol.
•PRO_SIMPREP_DEFENV_REP—Specifies arepresentation thatallowsyou
torepresentassemblycomponents withandefaultenvelope.
•PRO_SIMPREP_LIGHT_GRAPH_REP—Specifies alightweight graphics
representations ofassemblies thatcontainsassemblyinformation and3D
thumbnail graphicsrepresentations ofassemblycomponents.
•PRO_SIMPREP_AUTO_REP—Specifies arepresentation forretrievingthe
minimumdatathatisrequiredforpresenting theassemblyinthemostaccuratexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthumbnail graphicsrepresentations ofassemblycomponents.
•PRO_SIMPREP_AUTO_REP—Specifies arepresentation forretrievingthe
minimumdatathatisrequiredforpresenting theassemblyinthemostaccurate
way.Youcanperformactionssuchasmeasuring distancesbetweenpointson
alightsurfacewithoutretrievingthepartgeometry.
Note
Whentwostandardrepresentations ofthesamemodelareretrieved,forbetter
memoryusage,onlyonerepresentation isusedinthememory.Thelower
detailedrepresentation isintegrated intohigherdetailedrepresentation. This
higherdetailedrepresentation isusedtoretrieveboththerepresentations.
Ifyouretrievealowerdetailedrepresentation whenahigherdetailed
representation isalreadyinthememory,thishigherdetailedrepresentation is
usedandactuallynoretrievalisdone.
Thehierarchyfortherepresentations isasfollowswithMasterSimplified
Representation beingthehighestrepresentation level:
•Boundary BoxSimplified Representation
•SymbolicSimplified Representation
•GraphicSimplified RepresentationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRepresentation beingthehighestrepresentation level:
•Boundary BoxSimplified Representation
•SymbolicSimplified Representation
•GraphicSimplified Representation
•Geometry Simplified Representation
•MasterSimplified Representation
RefertotheCreoParametric helpformoreinformation onAssembly Design.
Thefunction ProSimprepIsDefault() determines ifthespecifiedsimplified
representation isthedefaultrepresentation fortheownermodel.
RetrievingSimplifiedRepresentations
FunctionIntroduced:
•ProAssemblySimpre pMdlnameRetrieve()
•ProSimpre pMdlnameRetrieve()
Assembly: Simplified Representations 1169•ProMdlRepr esentationFiletypeLoad()
Youcanretrieveanamedsimplified representation fromanassemblyusingthe
function ProAssemblySimprepMdlnameRetrieve(). Thisfunction
retrievesthehandleofanexistingsimplified representation fromanassembly
withoutgettingthegenericrepresentation intomemory.
Thefunctiontakesasarguments—the namesoftheassemblyandsimplifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxretrievesthehandleofanexistingsimplified representation fromanassembly
withoutgettingthegenericrepresentation intomemory.
Thefunctiontakesasarguments—the namesoftheassemblyandsimplified
representation, therepresentation data,thetypeofmodeltoretrieve,andthe
handletotheassembly.Notethatyoumustprovidethenameoftheassembly.To
retrieveanexistingsimplified representation, specifyitsnameasoneoftheinputs
totheargumentofthisfunction.Thenameofthesimplified representation canbe
NULLiftherepresentation dataisprovided.Inthiscase,theinstructions inthe
dataareusedtodynamically createanewsimplified representation .The
representation datacanalsobeNULLifthenameofthesimplified representation
isprovided.CreoParametric retrievesthesimplified representation andanyactive
submodels, andreturnstheProAssembly handle.
Youcanretrievegeometry,graphics,symbolicsimplified, boundarybox,and
defaultenveloperepresentations intosessionusingthefunction
ProSimprepMdlnameRetrieve(). Theinputargumentstothefunctionare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanretrievegeometry,graphics,symbolicsimplified, boundarybox,and
defaultenveloperepresentations intosessionusingthefunction
ProSimprepMdlnameRetrieve(). Theinputargumentstothefunctionare:
•model_name—Specifies thenameofthemodelwhosesimplified
representation istoberetrieved.
•file_type—Specifies thetypeofmodelusingtheenumerated datatype
ProMdlfileType.
•rep_type—Specifies thetypeofsimplified representation usingthe
enumerated datatypeProSimprepType.
•rep_name—Specifies thenameofthesimplified representation thatmustbe
retrieved.
.
SimilartoProAssemblySimprepMdlnameRetrieve(), thefunction
ProSimprepMdlnameRetrieve() retrievesthesimplified representation
withoutbringingthemasterrepresentation intomemory.Thefunctionoutputsthe
handletothemodel.Itdoesnotdisplaythesimplified representation.
Youcanretrievethesimplified representation ofamodelintomemoryusingthe
function ProMdlRepresentationFiletypeLoad().
RetrievingandExpandingLightWeight
GraphicsSimplifiedRepresentationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucanretrievethesimplified representation ofamodelintomemoryusingthe
function ProMdlRepresentationFiletypeLoad().
RetrievingandExpandingLightWeight
GraphicsSimplifiedRepresentations
Functions Introduced:
•ProSimpre pMdlnameRetrieve()
•ProLightweightGraphicsSimpr epExpand()
1170 Creo®Parametric TOOLKIT User’sGuideThefunction ProSimprepMdlnameRetrieve() retrievesthelightgraphics
simplified representation ofanassembly.Lightgraphicsrepresentations of
assemblies containassemblyinformation and3Dthumbnail graphics
representations ofassemblycomponents. Inthelightgraphicssimplified
representation mode,thegraphicsofamodelisrepresented usingtheCreoView
viewable.TheCreoViewfilesmustbeinthesamedirectoryasthemodel.Ifthe
CreoViewfilesarenotavailableinthemodeldirectory,thenthemodelis
represented withboundingboxesinthelightgraphicssimplified representation
mode.Usingthisfunctionyoucaninitiallyretrieveanddisplaygraphicobjectsof
higherlevelsoftheassemblyandthenretrievemoredetailedinformation ofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmode.Usingthisfunctionyoucaninitiallyretrieveanddisplaygraphicobjectsof
higherlevelsoftheassemblyandthenretrievemoredetailedinformation ofthe
sub-assemblies asrequired.Thisfunctionissimilarto
ProAssemblySimprepMdlnameRetrieve(), andretrievesthelight
graphicsassemblyinthesamewayasdescribedinthesectionRetrieving
Simplified Representations onpage1169.
Usethefunction ProLightweightGraphicsSimprepExpand() to
expandthelightgraphicsrepresentation ofanassemblyintheCreoParametric
activewindowtothespecifiedlevelusingtheenumerated type
ProLightweightGraphicsSimprepLevel.
Youcanexpandtherepresentation tothefollowinglevels:
•PRO_LWG_SIMPREP_LEVEL_NEXT—Expands thumbnails tothenext
level.
•PRO_LWG_SIMPREP_LEVEL_ALL—Expands thumbnails toalllevels.
Toexpandthesub-assembly level,usethefunctions ProModelitemInit()
andProSelectionAlloc() tofirstinitializetheProSelection handlefor
thecomponent partorsub-assembly .YoucanpasstheProSelection handleto
thefunction ProLightweightGraphicsSimprepExpand() andexpandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandProSelectionAlloc() tofirstinitializetheProSelection handlefor
thecomponent partorsub-assembly .YoucanpasstheProSelection handleto
thefunction ProLightweightGraphicsSimprepExpand() andexpand
thecomponent partorsub-assembly nodetotherequiredlevel.
CreatingandDeletingSimplified
Representations
Functions Introduced:
•ProSimpre pdataAlloc()
•ProSimpre pCreate()
•ProSimpre pDelete()
Note
CreoParametric TOOLKITdoesnotsupportcreationofpartsimplified
representations.
Assembly: Simplified Representations 1171Tocreateasimplified representation, youmustallocateandfilla
ProSimprepdata structurebycallingthefunction
ProSimprepdataAlloc(). Asinput,thefunctionrequiresthenameofthe
newsimplified representation, thetempvalue,andthedefaultrule.Thespecific
structureisinitialized bythefunctionintheCreoParametric database.
Togeneratethenewsimplified representation, callProSimprepCreate().
ThisfunctionreturnstheProSimprep handleforthenewrepresentation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructureisinitialized bythefunctionintheCreoParametric database.
Togeneratethenewsimplified representation, callProSimprepCreate().
ThisfunctionreturnstheProSimprep handleforthenewrepresentation.
Thefunction ProSimprepDelete() deletesasimplified representation from
itsmodelowner.ThefunctionrequiresonlytheProSimprep handleasinput.
Example1:CreatingaSimplifiedRepresentation
TheexampleinthefileUgSimprepCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_simprep, shows
howtocreateasimplified representation.
ExtractingInformation AboutSimplified
Representations
Functions Introduced:
•ProSimpre pdataGet()
•ProSimpre pdataFr ee()
•ProSimpre pdataDefltGet()
•ProSimpre pdataNameGet()
•ProSimpre pdataTmpvalGet()
•ProSimpre pdataitemsV isit()
•ProSimpre pSubstitutionNameGet()
•ProAsmcompSubstitutionT ypeGet()
•ProAsmcompSubstituteGet()
Note
CreoParametric TOOLKITsupportssimplified representation of
Assemblies only,notParts.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSimpre pSubstitutionNameGet()
•ProAsmcompSubstitutionT ypeGet()
•ProAsmcompSubstituteGet()
Note
CreoParametric TOOLKITsupportssimplified representation of
Assemblies only,notParts.
1172 Creo®Parametric TOOLKIT User’sGuideGiventhehandletoasimplified representation andtheaddressofapointertoa
ProSimprepdata structure, ProSimprepdataGet() fillsoutthe
ProSimprepdata structure.Thisfunctiondynamically allocatesstorageforthe
datastructure.Whenthememoryisnolongerneeded,freeitusingthefunction
ProSimprepdataFree().
TheProSimprepdataDefltGet(), ProSimprepdataNameGet(), and
ProSimprepdataTmpvalGet() functionsreturntheassociated values
containedintheProSimprepdata structure.Theyalltaketwoarguments—the
datastructuretobequeried,andtheappropriate datastructureforthetypetobe
retrieved. ProSimprepdataTmpvalGet() retrievesthevalueofthetemp
fieldfromthespecified ProSimprepdata
Thefunction ProSimprepdataitemsVisit() visitsalltheitemsthatmakexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxretrieved. ProSimprepdataTmpvalGet() retrievesthevalueofthetemp
fieldfromthespecified ProSimprepdata
Thefunction ProSimprepdataitemsVisit() visitsalltheitemsthatmake
upthesimplified representation. Theactionandfilterfunctionsbothhave
ProSimprepitem* astheirfirstargument.
Thefunction ProSimprepSubstitutionNameGet() returnsthenameof
thesubstituted representation atthegivenassemblypathevenwhenthe
substituted representation isdeletedfromthemodelatthegivenpath.
Thefunction ProAsmcompSubstitutionTypeGet() returnsthe
substitution typeperformed onthesimplified representation ofanassembly
component. Ittakesthepathtothecomponent reprsentation thatisbeing
substituted, includingthecomponent ID,asoneofitsinputarguments.
Thefunction ProAsmcompSubstituteGet() returnsthepathtothe
substituted component representation intheformofandthehandletothe
substituted component representation intheformofProAsmcomp. Ittakesthe
pathtothecomponent reprsentation thatisbeingsubstituted, includingthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsubstituted component representation intheformofProAsmcomp. Ittakesthe
pathtothecomponent reprsentation thatisbeingsubstituted, includingthe
component ID,asoneofitsinputarguments.
Example2:VisitingtheItemsinaSimplified
Representation
ThesamplecodeinUgSimprepInfo.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_simprep showshow
tousetheCreoParametric TOOLKITfunctionstovisittheitemsinthespecified
simplified representation.
ModifyingSimplifiedRepresentations
Functions Introduced:
•ProSimpre pActionInit()
•ProSimpre pdataSet()
•ProSimpre pdataDefltSet()
Assembly: Simplified Representations 1173•ProSimpre pdataNameSet()
•ProSimpre pdataTmpvalSet()
Note
CreoParametric TOOLKITsupportssimplified representation of
Assemblies only,notParts.
UsingCreoParametric TOOLKIT, youcanmodifytheattributesofexisting
simplified representations. Afteryoucreateorretrieveasimplified representation,
youcanmakecallstotheProSimprepdata*Set() functionslistedinthisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsimplified representations. Afteryoucreateorretrieveasimplified representation,
youcanmakecallstotheProSimprepdata*Set() functionslistedinthis
sectiontodesignatenewvaluesforthefieldsintheProSimprepdata structure.
Tomodifyanexistingsimplified representation, retrieveit,thengetthehandleto
itsProSimprepdata structurebycallingthefunction
ProSimprepdataGet(). (Ifyoucreatedtherepresentation programmatically
withinthesameapplication, theProSimprepdata handleisalreadyavailable.)
Aftermodifying thedatastructure,reassignittothecorresponding simplified
representation bycallingthefunction ProSimprepdataSet(). Usethe
function ProSimprepdataTmpvalSet tospecifywhetherthenewlycreated
representation istemporary.Passthevalue PRO_B_TRUE totheinputargument
temptomakethenewlycreatedrepresentation atemporary representation.
Note
Usethefunction ProSimprepdataTmpvalSet() tosetthevalueofthe
tempinputargumentinthespecified ProSimprepdata structurewhilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtemptomakethenewlycreatedrepresentation atemporary representation.
Note
Usethefunction ProSimprepdataTmpvalSet() tosetthevalueofthe
tempinputargumentinthespecified ProSimprepdata structurewhile
creatingnewsimplified representations only.Oncethesimplified
representation iscreated,thisattributeiscontrolled byCreoParametric. For
alltheexistingrepresentations, CreoParametric controlsthetempinput
argumentandsetsitsvalueautomatically
AddingItemstoandDeletingItemsfroma
SimplifiedRepresentation
Functions Introduced:
•ProSimpre pdataitemAdd()
•ProSimpre pdataitemDelete()
1174 Creo®Parametric TOOLKIT User’sGuide•ProSimpre pdataitemInit()
Note
CreoParametric TOOLKITsupportssimplified representation of
Assemblies only,notParts.
Youcanaddanddeleteitemsfromthelistofcomponents inasimplified
representation usingCreoParametric TOOLKIT.Ifyoucreatedasimplified
representation usingtheoption PRO_SIMPREP_EXCLUDE asthedefaultrule,
youwouldgeneratealistcontaining theitemsyouwanttoinclude.Similarly,ifxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrepresentation usingtheoption PRO_SIMPREP_EXCLUDE asthedefaultrule,
youwouldgeneratealistcontaining theitemsyouwanttoinclude.Similarly,if
thedefaultruleforasimplified representation isPRO_SIMPREP_INCLUDE, you
canaddtheitemsthatyouwanttobeexcludedfromthesimplified representation
tothelist,settingthevalueoftheProSimprepActionType toPRO_
SIMPREP_EXCLUDE.
ToAddItems
1.GettheProSimprepdata structure,asdescribedintheprevioussection.
2.Specifytheactiontobeappliedtotheitemwithacalltothefunction
ProSimprepActionInit().
3.InitializeaProSimprepitem structurefortheitembycallingthefunction
ProSimprepdataitemInit().
4.AddtheitemtotheProSimprepdata structureusingthefunction
ProSimprepdataitemAdd().
5.ReassigntheProSimprepdata structuretothecorresponding
ProSimprep objectbycalling ProSimprepdataSet().
ToRemoveItems
1.GettheProSimprepdata structurehandle.
2.PasstheProSimprepdata handleandtheProSimprepitem handlefor
theitemtobedeletedtothefunction ProSimprepdataitemDelete().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxToRemoveItems
1.GettheProSimprepdata structurehandle.
2.PasstheProSimprepdata handleandtheProSimprepitem handlefor
theitemtobedeletedtothefunction ProSimprepdataitemDelete().
3.ReassigntheProSimprepdata structuretothecorresponding
ProSimprep objectbycallingthefunction ProSimprepdataSet().
GatheringComponents byRule
FunctionIntroduced:
•ProRuleEval()
Assembly: Simplified Representations 1175CreoParametric provideslargeassemblymanagement tools.Thissection
describestheaccesstosomeofthisfunctionality throughCreoParametric
TOOLKIT.
Youcanspecifydifferenttypesofrulesandusethemtogeneratealistof
components forwhichtheruleapplies.Afterinitializing therule,callthefunction
ProRuleEval() togeneratethelistofcomponents thatfollowthisrule.
Notethatthereturnedlistofcomponents isintheformofanexpandable array
(ProArray), whichisallocatedbythisfunction.Toreleasetheallocated
memory,callthefunction ProArrayFree().
Thecomponents canbegatheredusingthefollowingrules:
•Bymodelnamexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(ProArray), whichisallocatedbythisfunction.Toreleasetheallocated
memory,callthefunction ProArrayFree().
Thecomponents canbegatheredusingthefollowingrules:
•Bymodelname
•Byparameters, usinganexpression
•Bylocationwithazone
•Bydistancefromapoint
•Bysize
•Byanexistingsimplified representation
SeetheAssembly Modeling User’sGuideformoredetailsonthisfunctionality .
GatheringbyModelName
FunctionIntroduced:
•ProRuleInitName()
Thefunction ProRuleInitName() initializestheruleforgatheringbymodel
name.Thename_mask variablecanbeawildcard.Formoreinformation, seethe
CreoParametric help.
GatheringbyParameters
FunctionIntroduced:
•ProRuleInitExpr()
Youcanspecifyaexpression intherelationsformattosearchforcomponents ofa
particularparameter value.Forexample,considerthefollowingexpression:
type =="electrical" |cost <=10
Whenyousupplythisexpression totherule,itgathersthecomponents thathavea
“cost”parameter oflessthanorequalto10,orwhose typeparameter issetto
“electrical.”xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtype =="electrical" |cost <=10
Whenyousupplythisexpression totherule,itgathersthecomponents thathavea
“cost”parameter oflessthanorequalto10,orwhose typeparameter issetto
“electrical.”
1176 Creo®Parametric TOOLKIT User’sGuideTheexprvariableisanarrayofProLine structures. Youallocatethisarrayusing
thefunction ProArrayAlloc(). TheProArray* functionsareusedforall
arraymanipulations.
GatheringbyZone
FunctionIntroduced:
•ProRuleInitZone()
Whenyouspecifythisrule,allthecomponents thatbelongtothesuppliedzone
featurearegathered.
SeetheAssembly Modeling User’sGuidefordetailedinformation aboutsettingup
andworkingwithzones.
Whenyoucreateazone,thefunctioncreatesafeatureoftypePRO_FEAT_ZONE
inthetop-levelassembly.
GatheringbyDistancefromaPoint
FunctionIntroduced:
•ProRuleInitDist()
Using ProRuleInitDist() tosetuparulethatspecifiesdistancefroma
point,CreoParametric TOOLKITgathersallthecomponents withinthespecified
sphericalregion.
ByfillingtheProRuleDist datastructure,youcanspecifythecenterandthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpoint,CreoParametric TOOLKITgathersallthecomponents withinthespecified
sphericalregion.
ByfillingtheProRuleDist datastructure,youcanspecifythecenterandthe
distancefromthecenter.Thisinformation isinthecoordinates ofthetop-level
assembly.
GatheringbySize
FunctionIntroduced:
•ProRuleInitSize()
ByfillingtheProRuleSize datastructure,youcanspecifythesizeof
components tobegathered.
Ifyouwanttogatherthecomponents greaterthanthespecifiedsize,setthefield
greater toPRO_B_TRUE. IfyousetthefieldtoPRO_B_FALSE, thefunction
gathersthecomponents thatarelessthanthespecifiedsize.
Ifyouwantthespecifiedsizetobeinabsoluteterms,setthefieldabsolute to
PRO_B_TRUE. Notethatinthiscase,thefunctionusestheunitsofthetop-level
assembly.
Assembly: Simplified Representations 1177Iftheinformation isrelative,setthefieldabsolute toPRO_B_FALSE. Inthis
case,theonlyvalidvaluesthatcanbespecifiedareintherange(0.0,1.0).The
functioncomparesthecomponent sizetothatofthetop-levelassembly,andusesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcase,theonlyvalidvaluesthatcanbespecifiedareintherange(0.0,1.0).The
functioncomparesthecomponent sizetothatofthetop-levelassembly,anduses
thisratiotodetermine whetherthecomponent shouldbegathered.
GatheringbySimplifiedRepresentation
FunctionIntroduced:
•ProRuleInitRep()
Youcangathercomponents thatbelongtoanexistingsimplified representation by
callingthefunction ProRuleInitRep(), whichinitializestherule.
1178 Creo®Parametric TOOLKIT User’sGuide58
Assembly:DataSharingFeatures
CopyGeometry,PublishGeometry,andShrinkwrapFeatures..................................1180
GeneralMerge(Merge,CutoutandInheritanceFeature)..........................................1191
InheritanceFeatureandFlexibleComponent VariantItems......................................1195
ThischapterdescribestheCreoParametric TOOLKITfunctionsaccessforData
SharingFeatures(DSF).Thesetypesoffeaturesareusedtotransferinformation
(geometry,annotations, andotherdetails)fromonemodeltoanother.DataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSharingFeatures(DSF).Thesetypesoffeaturesareusedtotransferinformation
(geometry,annotations, andotherdetails)fromonemodeltoanother.Data
SharingFeaturesalsohelpyoutoconsolidate yourdesigninformation inacentral
location,controlchangepropagation whichaidtowardsaccomplishing topdown
designobjectives. DataSharingFeaturesareofthefollowingtypes:
•CopyGeometry /PublishGeometry
•Shrinkwrap
•Merge/Cutout
•Inheritance
Italsoexplainshowtoaccesstheproperties ofvariantfeaturesandlistsreadand
writefunctionssupporting theInheritance Features.
1179CopyGeometry,PublishGeometry,and
Shrinkwrap Features
CopyGeometry Featuresareusedtopassanytypeofgeometric reference
information, user-definedparameters toandfromparts,skeletonmodels,and
assemblies. CopyGeometry featurescanonlycopyreferencegeometrysuchas
surface,datumfeaturesandnotsolidgeometry.Theyareusedinatop-down
designtoreducetheamountofdatainsession,thusavoidingtheretrievalofentire
referencesourcemodels.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurface,datumfeaturesandnotsolidgeometry.Theyareusedinatop-down
designtoreducetheamountofdatainsession,thusavoidingtheretrievalofentire
referencesourcemodels.
APublishGeometry featurecontainsindependent, localgeometryreferences.
Onlylocalgeometrycanbereferenced inaPublishGeometry featureandexternal
references arenotallowed.APublishGeometry featurehasnogeometryanddoes
notcreatelocalcopiesofthereferences selectedforitsdefinition. Itsimply
consolidates multiplelocalreferences inamodelsothattheycanbecopiedto
othermodels.
AShrinkwrap featureisacollection ofsurfacesanddatumfeaturesofamodel
thatrepresents theexteriorofthemodel.Youcanuseapart,skeleton,ortop-level
assemblyasthesourcemodelforaShrinkwrap feature.AShrinkwrap featureis
associative andautomatically updatestoreflectchangesintheparentcopied
surfaces.
FeatureElementTreefortheCopyGeometry,
PublishGeometry,andShrinkwrap Features
TheelementtreeforCopyGeometry,PublishGeometry,andShrinkwrap featuresxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfaces.
FeatureElementTreefortheCopyGeometry,
PublishGeometry,andShrinkwrap Features
TheelementtreeforCopyGeometry,PublishGeometry,andShrinkwrap features
isdocumented intheheaderfileProDataShareFeat.h.
Thefollowingfiguredemonstrates thefeatureelementtreestructure:
1180 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforCopyGeometry,PublishGeometry,and
Shrinkwrap Features
Assembly: DataSharingFeatures 1181PRO_E_CG_LOCA TION
PRO_E_DSF_PROP AGATE_ANNOTS
PRO_E_DSF_DTM_FIT
Thefollowinglistdetailsspecialinformation aboutsomeoftheelementsinthis
tree:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_GEOM_COPY, forCopyGeometry,PublishGeometry,andShrinkwrap
features.
•PRO_E_CG_FEAT_SUB_TYPE—Specifies thesubfeaturetypeandisa
mandatory element.Itisvisibleforallcopygeometryfeatures.Thevalidsub
typesareasfollows:
1182 Creo®Parametric TOOLKIT User’sGuide○PRO_CG_COPY_GEOM—Copy Geometry feature
○PRO_CG_SHRINKWRAP—Shrinkwrap feature
○PRO_CG_PUB_GEOM—Publish Geometry featurexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypesareasfollows:
1182 Creo®Parametric TOOLKIT User’sGuide○PRO_CG_COPY_GEOM—Copy Geometry feature
○PRO_CG_SHRINKWRAP—Shrinkwrap feature
○PRO_CG_PUB_GEOM—Publish Geometry feature
•PRO_E_CG_REFS_TYPE—Specifies thetypeofreferences usedinacopy
geometryfeature(apublishedgeometryfeature,oranselectedarrayof
surfaces,edges,curvesanddatums).ItisvisibleforCopyGeometry features.
•PRO_E_CG_LOCATION—Specifies acompound elementthatindicatesthe
methodusedforplacement ofthefeaturewithintheparentmodel.Thisis
validforCopyGeometry andShrinkwrap features.Seethesectiondescribing
ElementDetailsoftheSubtreePRO_E_CG_LOCA TIONonpage1187for
moreinformation.
•PRO_E_CG_PG_OR_REFS—Specifies eitherapublishedgeometryfeatureto
copyoracollection oflocalgeometryreferences tocopy.ItisvisibleforCopy
Geometry featuresandhasthefollowingelements:
○PRO_E_CG_PUBD_GEOM—Specifies theselectedpublishgeometry
featuretobecopied.
○PRO_E_CG_REFS_COLL—Specifies thecollection ofreferences. ItisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGeometry featuresandhasthefollowingelements:
○PRO_E_CG_PUBD_GEOM—Specifies theselectedpublishgeometry
featuretobecopied.
○PRO_E_CG_REFS_COLL—Specifies thecollection ofreferences. Itis
usedforCopyGeometry andPublishGeometry featuresandhasthe
followingelements:
◆PRO_E_STD_SURF_COLLECTION_APPL—Specifies acollection
ofselectedsurfacestocopy.
◆PRO_E_STD_CURVE_COLLECTION_APPL—Specifies acollection
ofselectedcurvesand/oredgestocopy.
○PRO_E_CG_OBJS_COLL—Specifies amultivalued elementcontaining
miscellaneous references suchasdatums,quilts,pointsetc.
○PRO_E_CG_BODY_COLL—Specifies amultivalued elementthatcontains
bodyselections tocopy.
Note
Thereferencecollection elements PRO_E_STD_SURF_COLLECTION_
APPL, PRO_E_STD_CURVE_COLLECTION_APPL, PRO_E_CG_
OBJS_COLL mayreturntheitemoftypePRO_QUERY. IfPRO_QUERY is
encountered, theCreoParametric TOOLKITapplication cannotaccessor
modifytherulesofthequery.However,theapplication canredefinethe
otherproperties oftheDSFwithoutaffectingorremovingthequery.Forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxencountered, theCreoParametric TOOLKITapplication cannotaccessor
modifytherulesofthequery.However,theapplication canredefinethe
otherproperties oftheDSFwithoutaffectingorremovingthequery.For
moreinformation refertothesectionSavedQueriesforCopyGeometry
andPublishGeometry Featuresonpage1190.
Assembly: DataSharingFeatures 1183•PRO_E_SW_COLLECTION_TYPE—Specifies thecollection modeused
whilecreatingaShrinkwrap feature.Thevaluesforthiselement,specifiedby
theenumerated typeProShrinkwrapCollectionType, areasfollows:
○PRO_SW_OUTER_SHELL—Surfaces anddatumsthatrepresentthe
exteriorofthemodelareused.Thisisthedefault.
○PRO_SW_ALL_SOLID_SURFS—All solidsurfacesinthemodelare
automatically collected.
○PRO_SW_MANUAL—Surfaces, edges,curves,anddatumsthatyouselect
areused.Youcancopygeometryfrommorethanonereferencemodel.
•PRO_E_SW_OPTIONS—Specifies Shrinkwrap featureoptions.Thiselement
isvisibleforShrinkwrap featuresandhasthefollowingelements:
○PRO_E_SW_QUALITY—Specifies theshrinkwrap qualitylevelusedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_SW_OPTIONS—Specifies Shrinkwrap featureoptions.Thiselement
isvisibleforShrinkwrap featuresandhasthefollowingelements:
○PRO_E_SW_QUALITY—Specifies theshrinkwrap qualitylevelused
whenidentifying thecontributing geometrytotheShrinkwrap feature.It
canhavevalidvaluesintherangeof1toPRO_MAX_SHRINKWRAP_
QUALITY_LVL.
○PRO_E_SW_FILL_HOLES—Specifies whetherornottousetheoptionto
autofillholes.
○PRO_E_SW_COLLECT_QUILTS—Specifies whetherornottoinclude
externalquiltsintheShrinkwrap feature.
○PRO_E_SW_SKIP_SURF_SIZE—Specifies theshrinkwrap skip
surfacessize.CreoParametric willnotincludesurfacessmallerthanthe
specifiedpercentage ofthemodel'ssizeintheShrinkwrap model.Itcan
haveavaluerangingfrom0(default) to100%,tospecifytherelativesize
ofthesurfacetoignore.
○PRO_E_SW_COLLECT_ORDER—Specifies howthesystemwillhandle
thesubcomponents increatingthefeature.Thisvaluecanbeofthe
followingtypes:
◆PRO_SW_SHRINKWRAP_AND_SELECT—Specifies tofirst
shrinkwrap andthenselect(selectedbydefault).Thesystemanalyzesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesubcomponents increatingthefeature.Thisvaluecanbeofthe
followingtypes:
◆PRO_SW_SHRINKWRAP_AND_SELECT—Specifies tofirst
shrinkwrap andthenselect(selectedbydefault).Thesystemanalyzes
theentireassemblytoidentifytheexternalsurfacestobeincludedand
onlytheappropriate surfacesthatbelongtotheselectedcomponents
areincludedintheresultingshrinkwrap feature.
◆PRO_SW_SELECT_AND_SHRINKWRAP—Specifies selectand
shrinkwrap. Thesystembuildsashrinkwrap basedonselected
components.
○PRO_E_SW_RES_GEOM_OPT—Specifies theoptionsfortheresultant
Shrinkwrap geometry.Thiselementisavailableonlyiftheelement PRO_
E_SW_COLLECTION_TYPE issettothevalue PRO_SW_ALL_SOLID_
1184 Creo®Parametric TOOLKIT User’sGuideSURFS.Thevaluesforthiselement,specifiedbytheenumerated type
ProShrinkwrapResGeomOpt, areasfollows:
◆PRO_SW_RES_GEOM_QUILT—The resultingShrinkwrap featureisa
quilt.
◆PRO_SW_RES_GEOM_SOLID—The resultingShrinkwrap featureisa
solid.
◆PRO_SW_RES_GEOM_ASM_QUILT—The resultingShrinkwrapxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx◆PRO_SW_RES_GEOM_QUILT—The resultingShrinkwrap featureisa
quilt.
◆PRO_SW_RES_GEOM_SOLID—The resultingShrinkwrap featureisa
solid.
◆PRO_SW_RES_GEOM_ASM_QUILT—The resultingShrinkwrap
featureisaquiltthatcontainsamergedgeometryofareferenced
assembly.
○PRO_E_SW__FAILED_SLD_OPT—Specifies theoptionstoaddressthe
failedsolidification subfeatures (externalreferencecopygeometry
features)ofaShrinkwrap feature.Thiselementisavailableonlyifthe
element PRO_E_SW_RES_GEOM_OPT issettothevalue PRO_SW_RES_
GEOM_SOLID. Thevaluesforthiselement,specifiedbytheenumerated
typeProShrinkwrapFailedSldOpt, areasfollows:
◆PRO_SW_FAILED_SLD_FAIL—Failed solidification subfeatures of
theShrinkwrap featurearenotresolved.Asaresult,theShrinkwrap
featurealsofails.
◆PRO_SW_FAILED_SLD_TO_QUILT—Failed solidification
subfeatures oftheShrinkwrap featurearerestoredasquilts.Asaresult,
theShrinkwrap featuredoesnotfail.
○PRO_E_SW_FILL_CNTRS_ARR—Specifies thecontoursofopenspacesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsubfeatures oftheShrinkwrap featurearerestoredasquilts.Asaresult,
theShrinkwrap featuredoesnotfail.
○PRO_E_SW_FILL_CNTRS_ARR—Specifies thecontoursofopenspaces
thatneedtobefilled.Thiselementconsistsofanarrayofcompound
elementsofthetypePRO_E_SW_FILL_CNTRS whichconsistsofthe
followingelements:
◆PRO_E_SW_FILL_CNTRS_SRF_SEL—Select thesurfacethat
definesthecontourtobefilled.
◆PRO_E_SW_FILL_CNTRS_DISP_CRV—Displays ayellowcurve
insteadofafilledcontour.
•PRO_E_SW_COMP_SUBSET—Specifies components oftheassemblytobe
considered whencreatingtheShrinkwrap. Thisarrayelementconsistsofan
arrayofShrinkwrap component subsetelements(PRO_E_SW_COMPONENT).
Thatelementincludesthefollowingelements:
○PRO_E_SW_INCLUDE_COMP specifieswhetherornottoincludethe
component intheshrinkwrap
○PRO_E_SW_SEL_COMPONENT specifiestheselectedcomponent.
Assembly: DataSharingFeatures 1185•PRO_E_SW_REFS_COLL—Specifies thecollection ofsurfacesandother
references tobeincludedorexcludedfromtheShrinkwrap feature.IthasthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAssembly: DataSharingFeatures 1185•PRO_E_SW_REFS_COLL—Specifies thecollection ofsurfacesandother
references tobeincludedorexcludedfromtheShrinkwrap feature.Ithasthe
followingelements:
○PRO_E_STD_SURF_COLLECTION_APPL—Specifies thecollection of
individual surfacesthatmustalwaysbeincludedintheShrinkwrap
feature.
○PRO_E_SW_EXCLUDE_SURF_COLL_APPL—Specifies thecollection of
individual surfacesthatmustalwaysbeexcludedfromtheShrinkwrap
feature.
○PRO_E_STD_CURVE_COLLECTION_APPL—Specifies acollection of
chainsconstructed byselectionofedgesorcurves.
○PRO_E_CG_OBJS_COLL—Specifies amultivalued elementcontaining
miscellaneous references suchasdatums,quilts,pointsetc.
•PRO_E_DSF_PROPAGATE_ANNOTS—Specifies rulesabouthowto
propagate annotations. SeethesectionElementDetailsofPRO_E_DSF_
PROPAGATE_ANNOTS onpage1188belowforthestructureandcontentsof
thiselement.
•PRO_E_CG_SRFS_COPY—Specifies acompound elementthatspecifies
copiedsurfaces.ItisvisibleforCopyGeometry featuresandhasthefollowing
elements:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthiselement.
•PRO_E_CG_SRFS_COPY—Specifies acompound elementthatspecifies
copiedsurfaces.ItisvisibleforCopyGeometry featuresandhasthefollowing
elements:
○PRO_E_SRF_COPY_TYPE—Specifies thetypeofcopiedsurface.Itcan
haveoneofthefollowingvalues:
◆PRO_SRFCOPY_AS_IS
◆PRO_SRFCOPY_EXCLD_FILL
◆PRO_SRFCOPY_INSIDE_BNDRY
◆PRO_SRFCOPY_UNTRIM_TO_ENVLP
◆PRO_SRFCOPY_UNTRIM_TO_DOMAIN
○PRO_E_SRF_COPY_EXCL—Specifies excludedsurfaces.
○PRO_E_SRF_COPY_FILL—Specifies loopstofill.
○PRO_E_STD_CURVE_COLLECTION_APPL—Specifies theboundary
forthecopiedsurfaces.
•PRO_E_DSF_DTMS_FITS—Specifies acompound elementthatindicates
therulesforfittingdatumsintheDSFfeature.ItisvisibleforallinternalCopy
Geometry features)andShrinkwrap features.Thiscompound elementincludes
PRO_E_DTMPLN_FIT andPRO_E_DTMAXIS_FIT subtreesforanyorall
ofthecopieddatums.RefertothechapterElementTrees:DatumFeatureson
page792fordetailsonthedatumfitsubtrees.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DTMPLN_FIT andPRO_E_DTMAXIS_FIT subtreesforanyorall
ofthecopieddatums.RefertothechapterElementTrees:DatumFeatureson
page792fordetailsonthedatumfitsubtrees.
1186 Creo®Parametric TOOLKIT User’sGuide•PRO_E_DSF_DEPENDENCY—Specifies thedependency typeoftheCopy
Geometry Feature.Thevaluesforthiselementarespecifiedbytheenumerated
typeProDSFDependency definedintheheaderfile
ProDataShareFeat.h. Formoreinformation onthevalues,refertothe
sectionFeatureElementTreeonpage1191.
Thevalidvaluesforthedependency statusareasfollows:
○PRO_DSF_UPDATE_AUTOMATICALLY—Specifies thatthegeometry
canbeupdatedwhenitsparentchanges.
○PRO_DSF_UPDATE_MANUALLY—Suspends therelationship betweenthe
currentfeatureandtheoriginalgeometry.Ifyouchangetheoriginalpart,
thecurrentfeaturedoesnotupdateautomatically .Ithastobeupdated
manually.
○PRO_DSF_NO_DEPENDENCY—There isnodependency betweenDSF
featureandreferenced model.
Note
FromCreoParametric 3.0onward,theenumerated typexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmanually.
○PRO_DSF_NO_DEPENDENCY—There isnodependency betweenDSF
featureandreferenced model.
Note
FromCreoParametric 3.0onward,theenumerated type
ProDsfDependency hasbeendeprecated. Usetheenumerated type
ProDSFDependency instead.
•PRO_E_DSF_NOTIFY_UPDATE—Specify thenotification statusforthe
specifiedfeatureusingtheenumerated value ProDsfNotifyUpdate. Use
thiselementonlyiftheelement PRO_E_DSF_DEPENDENCY issettothe
value PRO_DSF_UPDATE_MANUALLY. Thevalidvaluesforthiselementare:
○PRO_DSF_NOTIFY_UPDATE_OFF—Switches offthenotification
update.Thisisthedefaultvalue
○PRO_DSF_NOTIFY_UPDATE_ON—Switches onthenotification update.
Usethefunctions ProFeatureDSFDependencyNotifySet() and
ProFeatureDSFDependencyNotifyGet() tosetandgetthe
notification statusofaDSFfeature.Formoreinformation onthesefunctions,
refertothesectionFeatureandCopyGeom FeatureFunctions onpage1133in
thechapterAssembly: Top-downDesign.
ElementDetailsoftheSubtreePRO_E_CG_
LOCATIONxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrefertothesectionFeatureandCopyGeom FeatureFunctions onpage1133in
thechapterAssembly: Top-downDesign.
ElementDetailsoftheSubtreePRO_E_CG_
LOCATION
Thecompound element PRO_E_CG_LOCATION hasthefollowingelements:
•PRO_E_DSF_EXT_LOCAL_TYPE—Specifies theDSFlocationtype:
Assembly: DataSharingFeatures 1187○PRO_DSF_PLACE_LOCAL typeisalocalfeaturewithintheassembly.
Therefore thereferences willbedependent upontheassemblystructure
andthefeaturedoesnotneedplacement information.
○PRO_DSF_PLACE_EXTERNAL typeissettoexternalize aDataSharing
Feature.Anexternaldata-sharing featuremustbeplacedinitstarget
modelexplicitly.
Note
ThepurposeofExternalDSF'sistocopygeometryfromonemodelto
anothermodelwithouttheneedtocopythegeometryinthecontextofthe
assembly.ExternalDSF'sreducethedependency ontheassemblyandall
modelsalongthepathbetweenthetwocomponents. Onceafeaturehas
beenmade"External", itcannotbeconverted tobecomeinternal.
•PRO_E_DSF_SEL_REF_MDL—Specifies themodeltousefortheexternal
DSF.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelsalongthepathbetweenthetwocomponents. Onceafeaturehas
beenmade"External", itcannotbeconverted tobecomeinternal.
•PRO_E_DSF_SEL_REF_MDL—Specifies themodeltousefortheexternal
DSF.
•PRO_E_CG_PLACEMENT—Specifies theplacement oftheexternalreference
modelinthetargetmodel.Ithasthefollowingelements:
○PRO_E_CG_PLACE_TYPE—The externalplacement referenceforthe
copiedgeometrycanbeofthefollowingtypes:
◆PRO_CG_PLC_DEFAULT—Locates thecopiedgeometryinthe
currentmodelusingthedefaultlocation.
◆PRO_CG_PLC_CSYS_CSYS—Locates thecopiedgeometryinthe
currentmodelbyaligningcoordinate systems.
◆PRO_CG_PLC_CURRENT—Locates thecopiedgeometryinthe
currentusingthecurrentplacement (applicable onlyduringa
conversion ofalocalDSFtoanexternalDSF).
◆PRO_E_CG_CSYS_PLACE—The tworeferenceelementsbelowthis
elementspecifiesCsys-Csys alignment.
•PRO_E_CG_FOLLOW_SRF_OPT—Specifies theoptionsforsurfacetobe
followed.
ElementDetailsofPRO_E_DSF_PROP AGATE_
ANNOTSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementspecifiesCsys-Csys alignment.
•PRO_E_CG_FOLLOW_SRF_OPT—Specifies theoptionsforsurfacetobe
followed.
ElementDetailsofPRO_E_DSF_PROP AGATE_
ANNOTS
Thecompound elementdescribestheoptionsavailabletopropagate annotations in
DSF's.Ithasthefollowingsubelements:
1188 Creo®Parametric TOOLKIT User’sGuide•PRO_E_DSF_ANNOT_CPY_ALL—Specifies aflagwhethertocopyall
annotation elements.
•PRO_E_DSF_ANNOT_DEPEND_ALL—Specifies aflagwhethertomakethe
copiedannotation elementsasdependent ontheiroriginals.
•PRO_E_DSF_ANNOT_AUTO_CPY_DTM—Specifies aflagtopropagate
annotation planesandotherdatumsreferenced byannotation elements
automatically .Annotation planesarepropagated iftheannotation reference
comprising ofthesolidorsurfacegeometryiscopied.
•PRO_E_DSF_ANNOT_SELECTIONS—Instead ofusingtheautomatic flags
forpropagation, theDSFfeaturecanspecifyalistofannotations topropagate.
Eachsubelement representing anannotation hasthefollowingsub-elements:
○PRO_E_DSF_ANNOT_SEL_ANNOTS specifiesthemanuallyselectedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforpropagation, theDSFfeaturecanspecifyalistofannotations topropagate.
Eachsubelement representing anannotation hasthefollowingsub-elements:
○PRO_E_DSF_ANNOT_SEL_ANNOTS specifiesthemanuallyselected
annotation element
○PRO_E_DSF_ANNOT_CPY_STATUS specifiesthecopystatusforthis
selectedelement.
○PRO_E_DSF_ANNOT_DEPENDENCY specifieswhethertomakethe
annotation dependant intheDSF.Itcanhaveoneofthefollowingvalues:
◆PRO_DSF_DEPENDENT issetbydefault.
◆PRO_DSF_INDEPENDENT makestheannotations independent of
changesmadetotheparentannotation.
Shrinkwrap FeaturesCreatedfromCopyGeometry
References
Functions Introduced:
•ProFeatur eIsShrinkwrapRefCopyGeom()
•ProFeatur eShrinkwrapGetRefCopyGeoms()
•ProFeatur eIsShrinkwrap()
•ProFeatur eRefCopyGeomShrinkwrapGet()
Thefunction ProFeatureIsShrinkwrapRefCopyGeom() checkswhether
thespecifiedfeatureisareferencecopygeometryfeature,whichiscreatedbythe
shrinkwrap feature.Theshrinkwrap referencecopygeometryfeaturesreferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedfeatureisareferencecopygeometryfeature,whichiscreatedbythe
shrinkwrap feature.Theshrinkwrap referencecopygeometryfeaturesreference
models,whicharecollectedbyshrinkwrap according tothetypeofshrinkwrap,
user-definedoptions,anduserselections.
Usethefunction ProFeatureShrinkwrapGetRefCopyGeoms() togetan
arrayofreferencecopygeometryfeatures,whicharecreatedbytheshrinkwrap
feature.
Assembly: DataSharingFeatures 1189Thefunction ProFeatureIsShrinkwrap() checkswhetherthespecified
featureisashrinkwrap feature.
Usethefunction ProFeatureRefCopyGeomShrinkwrapGet() togetthe
shrinkwrap featureforthespecifiedreferencecopygeometryfeature.
SavedQueriesforCopyGeometryandPublish
GeometryFeatures
CopyGeometry andPublishGeometry featureshavetheabilitytoretainandreuse
searchtoolqueriesdefinedfromitscollectors. Thefunctionsdescribedinthis
sectionprovidetheabilitytoupdatethesequery-driven datasharingfeaturesusing
CreoParametric TOOLKIT.
Functions Introduced:
•ProDatasharingfeature IsQuerydriven()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionprovidetheabilitytoupdatethesequery-driven datasharingfeaturesusing
CreoParametric TOOLKIT.
Functions Introduced:
•ProDatasharingfeature IsQuerydriven()
•ProDatasharingfeature QueryUpdate()
Thefunction ProDatasharingfeatureIsQuerydriven() returnstrueif
thespecifieddatasharingfeatureisquerydriven.
Thefunction ProDatasharingfeatureQueryUpdate() updatestheitems
collectedbythequerywithintheCopyGeometry orPublishGeometry feature.
Thiswillregenerate thefeatureandmaycausegeometrytobeaddedorremoved.
Retrievingacopyoftheannotationitem
Functions Introduced:
•ProDatasharingfeatCopiedAnnotFind()
Thefunction ProDatasharingfeatCopiedAnnotFind() retrievesthe
annotation itemownedbythedatasharingfeature,whichisacopyofspecified
annotation item.ThefunctionsupportsInheritance, Merge,CopyGeom,
ShrinkWrap,andCutoutfeaturesonly.Theinputargumentsare:
•p_datasharing_featur e—Specifies thedatasharingfeature.
•p_orig_path—Specifies thecomponent pathfromthetoplevelassemblytothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxShrinkWrap,andCutoutfeaturesonly.Theinputargumentsare:
•p_datasharing_featur e—Specifies thedatasharingfeature.
•p_orig_path—Specifies thecomponent pathfromthetoplevelassemblytothe
subcomponent thatownstheannotation. PassNULLiftheannotation isowned
bythetoplevelmodelinthedatasharingfeature.
•p_orig_item—Specifies theannotation itemintheoriginalmodel.
1190 Creo®Parametric TOOLKIT User’sGuideGeneralMerge(Merge,Cutoutand
Inheritance Feature)
FeatureElementTree
Theelementtreeforthegeneralmergefeatureisdocumented intheheaderfile
ProDataShareFeat.h. Thefollowingfiguredemonstrates thefeatureelement
treestructure:
FeatureElementtreeforGeneralMergeFeature
Assembly: DataSharingFeatures 1191PRO_E_DSF_PLACEMENT
Thefollowinglistdetailsspecialinformation aboutsomeoftheelementsinthis
tree:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_GEN_MERGE.
•PRO_E_GMRG_FEAT_TYPE—Specifies thetypeofGeneralMergeFeature:
○PRO_GEN_MERGE_TYPE_MERGE (Mergeorcutoutfeature)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtree:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_GEN_MERGE.
•PRO_E_GMRG_FEAT_TYPE—Specifies thetypeofGeneralMergeFeature:
○PRO_GEN_MERGE_TYPE_MERGE (Mergeorcutoutfeature)
○PRO_GEN_MERGE_TYPE_INHERITANCE (Inheritance feature)
•PRO_E_DSF_REF_MDL—Specifies thereferencemodel.Ithasthefollowing
elements:
○PRO_E_DSF_EXT_LOCAL_TYPE—Specifies theDSFlocationtypeand
isofthefollowingtype:
◆PRO_DSF_PLACE_LOCAL typeisalocalreferencetothereference
model
◆PRO_DSF_PLACE_EXTERNAL indicatesanexternalmerge,cutout,
orinheritance feature.
◆PRO_E_DSF_SEL_REF_MDL—Specifies aselectedreferencemodel.
◆PRO_E_DSF_PLACEMENT—Specifies theplacement oftheData
Sharingfeature.Itcontainsthefollowingelements:
?PRO_E_COMPONENT_CONSTRAINTS
Formoreinformation oncomponent constraint elements,refertochapter
Assembly: Assembling Components onpage1140.
1192 Creo®Parametric TOOLKIT User’sGuide•PRO_E_GMRG_MATERIAL_OPT—Specifies thegeneralmaterialoptions.
Thesearelistedasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAssembly: Assembling Components onpage1140.
1192 Creo®Parametric TOOLKIT User’sGuide•PRO_E_GMRG_MATERIAL_OPT—Specifies thegeneralmaterialoptions.
Thesearelistedasfollows:
○PRO_GEN_MERGE_RMV_MATERIAL—It removesmaterialfromthe
modified(target)model.Thematerialremovedisequaltothemodifying
(source)model.
○PRO_GEN_MERGE_ADD_MATERIAL—It addsmaterialtothemodified
modelfromthemodifying model.Thematerialaddedisequaltothe
modifying model.
○PRO_GEN_MERGE_INT_MATERIAL—It retainstheintersecting material
betweenthemodifiedandmodifying models.
RefertoCreoParametric Assembly Helpformoreinformation.
•PRO_E_GMRG_VARIED_ITEMS—Specifies apointerelementthatdefines
theinheritance featurevarieditemsandtheirvalues.Thishandlecannotbe
directlyreadormodifiedbyCreoParametric TOOLKIT. Instead,usetheVisit
functionsavailableinProVariantFeat.h toreadvarieditems.Toset
varieditems(afterthefeaturehasbeencreated),usetheappropriate
modification functiononanitemwhoseowneristhevariantfeaturemodelxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctionsavailableinProVariantFeat.h toreadvarieditems.Toset
varieditems(afterthefeaturehasbeencreated),usetheappropriate
modification functiononanitemwhoseowneristhevariantfeaturemodel
handle(ProVariantfeatMdlGet()). Formoreinformation, refertothe
sectionInheritance FeatureandFlexibleComponent VariantItemsonpage
1195.
•PRO_E_GMRG_COPY_DATUMS—T ruetocopydatumswiththismergeor
inheritance feature,falsetoleavethemuncopied.
•PRO_E_DSF_PROPAGATE_ANNOTS—Specifies rulesabouthowto
propagate annotations. RefertothesectionFeatureElementTreefortheCopy
Geometry,PublishGeometry,andShrinkwrap Featuresonpage1180forthe
details.AShrinkwrap featureisacollection ofsurfacesanddatumfeaturesof
amodelthatrepresents theexteriorofthemodel.Youcanuseapart,skeleton,
ortop-levelassemblyasthesourcemodelforaShrinkwrap feature.A
Shrinkwrap featureisassociative andautomatically updatestoreflectchanges
intheparentcopiedsurfaces.
•PRO_E_DSF_DTMS_FIT—Specifies acompound elementthatindicatesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxShrinkwrap featureisassociative andautomatically updatestoreflectchanges
intheparentcopiedsurfaces.
•PRO_E_DSF_DTMS_FIT—Specifies acompound elementthatindicatesthe
rulesforfittingdatumsintheDSFfeature.ItisvisibleforallinternalCopy
Geometry features)andShrinkwrap features.Thiscompound elementincludes
PRO_E_DTMPLN_FIT andPRO_E_DTMAXIS_FIT subtreesforanyorall
ofthecopieddatums.RefertothechapterElementTrees:DatumFeatureson
page792fordetailsonthedatumfitsubtrees.
Assembly: DataSharingFeatures 1193•PRO_E_DSF_DEPENDENCY—Specifies thedependency type.Thevaluesfor
thiselementarespecifiedbytheenumerated typeProDsfDependency.
Note
FromCreoParametric 3.0onward,theenumerated type
ProDsfDependency hasbeendeprecated. Usetheenumerated type
ProDSFDependency instead.
Thetypesofdependencies are:
○PRO_DSF_UPDATE_AUTOMATICALLY—Specifies thatthegeometryof
theDSFfeaturedependsuponthegeometryoftheparentmodelused
duringfeaturecreation.TheDSFfeaturereflectsallthechangesmadein
theparentmodel.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_DSF_UPDATE_AUTOMATICALLY—Specifies thatthegeometryof
theDSFfeaturedependsuponthegeometryoftheparentmodelused
duringfeaturecreation.TheDSFfeaturereflectsallthechangesmadein
theparentmodel.
Note
FromCreoParametric 3.0onward,thevalue PRO_DSF_DEPENDENT
hasbeendeprecated. Usetheenumerated value PRO_DSF_UPDATE_
AUTOMATICALLY instead.
○PRO_DSF_UPDATE_MANUALLY —Specifies thatthegeometryofthe
DSFfeatureisindependent ofthegeometryoftheparentmodelused
duringfeaturecreation.Ifyouupdatetheparentmodel,theDSFfeature
doesnotchange.
Note
FromCreoParametric 3.0onward,thevalue PRO_DSF_
INDEPENDENT hasbeendeprecated. Usetheenumerated value PRO_
DSF_UPDATE_MANUALLY instead.
○PRO_DSF_NO_DEPENDENCY—Specifies thatthereisnodependency
betweenthegeometryoftheDSFfeatureandthegeometryoftheparent
modelusedduringfeaturecreation.
PRO_E_DSF_NOTIFY_UPDATE—Specifies thenotifystatusinthespecified
featureusingtheenumerated value ProDsfNotifyUpdate. Formorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelusedduringfeaturecreation.
PRO_E_DSF_NOTIFY_UPDATE—Specifies thenotifystatusinthespecified
featureusingtheenumerated value ProDsfNotifyUpdate. Formore
information onthiselement,refertothesectionFeatureElementTreeforthe
CopyGeometry,PublishGeometry,andShrinkwrap Featuresonpage.
1194 Creo®Parametric TOOLKIT User’sGuidePRO_E_IS_SMT_CUT—Specifies whetherthespecifiedfeatureisasheetmetal
cutorasolidcut.Iftruethisfeatureisasheetmetal cut.
PRO_E_SMT_CUT_NORMAL_DIR—Specifies thesurfacetowhichthesection
projection willbenormal.
Note
Formoreinformation,, refertothesectionSheetmetal CutFeaturesonpage
1320inthechapterProduction Applications: Sheetmetal.
Inheritance FeatureandFlexible
Component VariantItems
AnInheritance featureallowsone-wayassociative propagation ofgeometryand
featuredatafromareferenceparttotargetpartwithinanassembly.Thereference
partistheoriginalpartandthetargetpartcontainstheinheritance features.
Inheritance featuresarealwayscreatedbyreferencing existingparts.Anxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpartistheoriginalpartandthetargetpartcontainstheinheritance features.
Inheritance featuresarealwayscreatedbyreferencing existingparts.An
inheritance featurebeginswithallofitsgeometryanddataidenticaltothe
referencepartfromwhichitisderived.
Userscanvarythevisibilityandvaluesofitemsininheritance features.Creo
Parametric TOOLKITofferstheabilitytoaccessthesevarieditemsandtheir
properties usingtheregularCreoParametric TOOLKITfunctionappropriate for
theproperty.CreoParametric TOOLKITalsoprovidestheabilitytolocateand
separatethevariedproperties fromthenon-varied ones.
Aflexiblecomponent hassimilarcapabilities forvarianceofdimensions and
parameters ofamodelinthecontextofanassembly.CreoParametric TOOLKIT
supportsaccesstothevariantproperties offlexiblecomponents throughthe
regularCreoParametric TOOLKITfunctionsaswell.
Thissectionreferscollectively toinheritance featuresandflexiblecomponents as
"variantfeatures".
VariantFeatureModel
Functions Introduced:
•ProVariantfeatMdlGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThissectionreferscollectively toinheritance featuresandflexiblecomponents as
"variantfeatures".
VariantFeatureModel
Functions Introduced:
•ProVariantfeatMdlGet()
•ProMdlIsV ariantfeatMdl()
•ProMdlV ariantfeatAsmcomppathGet()
Assembly: DataSharingFeatures 1195Usethefunction ProVariantfeatMdlGet() toobtainthespecialmodel
pointerfromavariantfeature.Aspecial ProMdlhandlerepresents the
"inherited" or"flexible"modelhandleinfunctionswhichaccessvariantfeatures.
Thishandleiscalledthe"VariantFeatureModel".Onlycertainfunctionswill
supportinputsincludingtheVariantFeatureModelhandle.
Thefunction ProMdlVariantfeatAsmcomppathGet() returnsaspecial
pointer ProAsmcomppath fromavariantfeature. ProAsmcomppath isthe
pointertothecomponent pathfromthemodelownerofthetoplevelinheritance
featureorthetopflexiblecomponent tothespecifiedvariantfeaturemodel.
Boththesepointerscanbeusedforaccessingproperties thatcanbemodifiedby
thepresenceofaninheritance featureorflexiblecomponent. OtherfunctionswillxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBoththesepointerscanbeusedforaccessingproperties thatcanbemodifiedby
thepresenceofaninheritance featureorflexiblecomponent. Otherfunctionswill
returnanerrorPRO_TK_INVALID_PTR ifprovidedwiththispointer.
Note
Ifyouareusingthevariantfeaturemodelhandleandyouneedtousean
unsupported functiononit,youcanattempttoretrievetheactualmodelby
extracting themodelnameandtypefromthemodelandusing
ProMdlnameRetrieve() togettheoriginalmodel.Thisrequiresthatthe
parentmodelbeaccessible insession.Remember thattheparentmodelwill
notreflectvariations appliedbythevariantfeature.
Usethefunction ProMdlIsVariantfeatMdl() toidentifyifamodelpointer
isavariantfeaturemodelhandle.
AccessingPropertiesofVariantFeatures
Thefollowingitemsaresupported byfunctionsthatacceptthevariantfeature
modelhandle.Exceptwherenoted,bothreadandwriteaccessissupported
•Dimensions
○Variantdimensions oftheinheritance feature:
◆Value
◆Tolerance
◆Dimension bound
◆Nonvariant dimensions oftheinheritance feature(Properties areread
only)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Dimensions
○Variantdimensions oftheinheritance feature:
◆Value
◆Tolerance
◆Dimension bound
◆Nonvariant dimensions oftheinheritance feature(Properties areread
only)
•Parameters
○Variantparameters oftheinheritance feature:
◆Value
1196 Creo®Parametric TOOLKIT User’sGuide◆Nonvariant parameters oftheinheritance feature(Properties areread
only)
•Feature(Inheritance featureonly)
○Variantmemberfeatures:
◆Suppressed orresumedorerasedstatus
◆Nonvariant memberfeatures(Properties arereadonly)
◆Replacedoralternatefeaturereferences
•Annotation (Inheritance featureonly)
○Variantgeometric tolerances:
◆Copystatus
◆Value
◆Nonvariant geometric tolerances (Properties arereadonly)
◆Variantnotes
◆Copystatus
◆Shownorhiddenproperty
◆Nonvariant notes(Properties arereadonly)
◆Variantsymbols
◆Copystatus
◆Nonvariant symbols(Properties arereadonly)
◆Variantsurfacefinishes
◆Copystatus
◆Value
◆Nonvariant surfacefinishes(Properties arereadonly)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx◆Variantsymbols
◆Copystatus
◆Nonvariant symbols(Properties arereadonly)
◆Variantsurfacefinishes
◆Copystatus
◆Value
◆Nonvariant surfacefinishes(Properties arereadonly)
Assembly: DataSharingFeatures 1197ReadFunctionsSupporting Inheritance Features
BasicModelProperties ProMdlMdlnameGet()
ProMdlTypeGet()
ProMdlSubtypeGet()
ProMdlPrincipalunitsystemGet()
ProUnitsystemUnitGet()
ProUnitsystemTypeGet()
ProUnitsystemIsStandard()
ProUnitIsStandard()
ProUnitTypeGet()
ProUnitConversionGet()
ProSolidAccuracyGet()
ProSolidOutlineGet()
ProSolidOutlineCompute()
BasicModelItems ProModelitemNameGet()
ProModelitemDefaultnameGet()
ProSelectionModelitemGet()
Dimensions ProSolidDimensionVisit()
ProFeatureDimensionVisit()
ProDimensionNomvalueGet()
ProDimensionBoundGet()
ProDimensionSymtextGet()
ProDimensionTollabelGet()
ProDimensionSymbolGet()
ProDimensionValueGet()
ProDimensionToltypeGet()
ProDimensionToleranceGet()
ProDimensionTolerancedecimalsGet()
ProDimensionTolerancedenominatorGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDimensionTollabelGet()
ProDimensionSymbolGet()
ProDimensionValueGet()
ProDimensionToltypeGet()
ProDimensionToleranceGet()
ProDimensionTolerancedecimalsGet()
ProDimensionTolerancedenominatorGet()
ProDimensionTypeGet()
ProDimensionIsFractional()
ProDimensionDecimalsGet()
ProDimensionDenominatorGet()
1198 Creo®Parametric TOOLKIT User’sGuideProDimensionIsReldriven()
ProDimensionIsRegenednegative()
ProDimensionTextGet()
ProDimensionTextstyleGet()
ProDimensionIsToleranceDisplayed()
ProDimensionIsBasic()
ProDimensionIsInspection()
ProDimensionIsBaseline()
ProDimensionIsOrdinate()
ProDimensionOrdinatestandardGet()
ProDimensionLocationGet()
ProDimensionPlaneGet()
ProDimensionAttachmentsGet()
ProDimensionOverridevalueGet()
ProDimensionValuedisplayGet()
Parameters ProParameterVisit()
ProParameterValueWithUnitsGet()
ProParameterUnitsGet()
ProParameterIsEnumerated()
ProParameterRangeGet()
ProParameterScaledvalueGet()
Features ProSolidFeatVisit()
ProFeatureTypeGet()
ProFeatureTypenameGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProParameterUnitsGet()
ProParameterIsEnumerated()
ProParameterRangeGet()
ProParameterScaledvalueGet()
Features ProSolidFeatVisit()
ProFeatureTypeGet()
ProFeatureTypenameGet()
ProFeatureSubtypeGet()
ProFeatureStatusGet()
ProSolidFeatstatusGet()
ProFeatureChildrenGet()
ProFeatureParentsGet()
ProFeatureCopyinfoGet()
ProFeatureGroupGet()
ProFeatureGroupStatusGet()
Assembly: DataSharingFeatures 1199ProFeatureGrppatternStatusGet()
ProFeatureHasGeomchks()
ProFeatureIsIncomplete()
ProFeatureIsNcseq()
ProFeatureIsReadonly()
ProFeatureNumSectionsGet()
ProFeatureNumberGet()
ProFeaturePatternGet()
ProFeaturePatternStatusGet()
ProFeatureSectionCopy()
ProFeatureSolidGet()
ProFeatureVerstampGet()
ProFeatureVisibilityGet()
Annotations ProMdlNoteVisit()
ProSolidDispoutlineGet()
ProNoteTextGet()
ProNotePlacementGet()
ProNoteURLGet()
ProNoteOwnerGet()
ProNoteTextstyleGet()
ProTextStyle*Get()
ProNoteDtlnoteGet()
1200 Creo®Parametric TOOLKIT User’sGuideAnnotations ProNoteLeaderstyleGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProNotePlacementGet()
ProNoteURLGet()
ProNoteOwnerGet()
ProNoteTextstyleGet()
ProTextStyle*Get()
ProNoteDtlnoteGet()
1200 Creo®Parametric TOOLKIT User’sGuideAnnotations ProNoteLeaderstyleGet()
ProNoteElbowlengthGet()
ProMdlGtolVisit()
ProGtolTopModelGet()
ProGtolTypeGet()
ProGtol*Get()
ProGtolRightTextGet()
ProGtolTopTextGet()
ProGtolPrefixGet()
ProGtolSuffixGet()
ProAnnotationTextstyleGet()
ProGtoltextTextstyleGet()
ProSolidDtlsyminstVisit()
ProDtlsyminstDataGet()
ProSolidSurffinishVisit()
ProSurffinishValueGet()
ProSurffinishReferencesGet()
ProSurffinishDataGet()
ProAnnotationIsShown()
ProAnnotationIsInactive()
ProAnnotationElementGet()
ProAnnotationelemFeatureGet()
ProAnnotationplaneAngleGet()
ProAnnotationplaneFrozenGet()
ProAnnotationplanePlaneGet()
ProAnnotationplaneReferenceGet()
ProAnnotationplaneTypeGet()
ProAnnotationplaneVectorGet()
ProAnnotationplaneViewnameGet()
ProGtolDatumReferencesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAnnotationplanePlaneGet()
ProAnnotationplaneReferenceGet()
ProAnnotationplaneTypeGet()
ProAnnotationplaneVectorGet()
ProAnnotationplaneViewnameGet()
ProGtolDatumReferencesGet()
Assembly: DataSharingFeatures 1201WriteandModification FunctionsSupporting Inheritance
Features
Dimensions ProDimensionValueSet()
ProDimensionToleranceSet()
ProDimensionBoundSet()
Parameters ProParameterValueWithUnitsSet()
Features ProFeatureSuppress()
ProFeatureResume()
ProFeatureDelete()
Annotations ProNoteTextSet()
ProNoteURLSet()
ProNoteElbowlengthSet()
ProNoteTextstyleSet()
ProTextStyle*Set()
ProGtolValueStringSet()
ProGtolPrefixSet()
ProGtolSuffixSet()
ProGtolTopTextSet()
ProGtolRightTextSet()
ProAnnotationTextstyleSet()
ProGtoltextTextstyleSet()
ProAnnotationShow()
ProCombstateAnnotationErase()
ProSurffinishValueSet()
ProGtolDatumReferencesSet()
ProGtolDatumReferencesSet()
VariantModelItems
FunctionIntroduced:
•ProVariantfeatItemsV isit()
•ProVariantfeatItemStandardize()
•ProVariantfeatItemCopyGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGtolDatumReferencesSet()
ProGtolDatumReferencesSet()
VariantModelItems
FunctionIntroduced:
•ProVariantfeatItemsV isit()
•ProVariantfeatItemStandardize()
•ProVariantfeatItemCopyGet()
•ProVariantfeatItemCopySet()
1202 Creo®Parametric TOOLKIT User’sGuide•ProVariantfeatItemCopyUnset()
Usethefunction ProVariantfeatItemsVisit() tovisitthevariantitems
(dimensions, features,andannotations) ownedbyaninheritance featureor
flexiblecomponent. Theitemhandleswillcontainthevariantfeaturemodel
pointer.
Usethefunction ProVariantfeatItemStandardize() toremovea
varieditemfromtheinheritance featureorflexiblecomponent.
Usethefunction ProVariantfeatItemCopyGet() toobtainthecopyflag
foragivenitemintheinheritance featureorflexiblecomponent. Theinput
argumentsofthisfunctionare:
•featur e—Specifies thevariantfeature
•item—Specifies theitem.
Theoutputargumentsofthisfunctionare:
•copy—Specifies whetherornottocopytheitemintothevariantfeature.Ifthisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxargumentsofthisfunctionare:
•featur e—Specifies thevariantfeature
•item—Specifies theitem.
Theoutputargumentsofthisfunctionare:
•copy—Specifies whetherornottocopytheitemintothevariantfeature.Ifthis
argumentreturnstrue,theitemiscopiedintothefeature.Ifitisfalse,theitem
isnotcopied.Thisvalueoverridesthevalueofthefeatures copy allflag.
Usethefunction ProVariantfeatItemCopySet() toassignthecopyflag
foragivenitemintheinheritance featureorflexiblecomponent.
Usethefunction ProVariantfeatItemCopyUnset() toremovethecopy
flagforagivenitemintheinheritance featureorflexiblecomponent.
VariantParameters
FunctionIntroduced:
•ProVariantfeatParamsV isit()
•ProVariantfeatParamStandardize()
Usethefunction ProVariantfeatParamsVisit()to visitonlythevariant
parameters ownedbyaninheritance featureorflexiblecomponent. Theparameter
handlescontainthevariantfeaturemodelpointer.
Usethefunction ProVariantfeatParamStandardize() toremovea
variedparameter fromtheinheritance featureorflexiblecomponent.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhandlescontainthevariantfeaturemodelpointer.
Usethefunction ProVariantfeatParamStandardize() toremovea
variedparameter fromtheinheritance featureorflexiblecomponent.
VariantReferences
Byusingvariantreferences, youcanrerouteorreplacethereferences forfeatures
intheinheritance featurewithnewreferences locatedinsideoroutsidethe
inheritance feature.Inassemblies, references canbetomodelsotherthanthe
targetmodel,aslongasthemodeliswithintheassembly.
Assembly: DataSharingFeatures 1203InCreoParametric TOOLKIT, avariantreferenceisrepresented bya
ProVariantRef handle.
FunctionIntroduced:
•ProVariantr efAlloc()
•ProVariantr efOriginalrefGe t()
•ProVariantr efOriginalrefS et()
•ProVariantr efReplacementre fGet()
•ProVariantr efReplacementre fSet()
•ProVariantr efFeatidsGet()
•ProVariantr efFeatidsSet()
•ProVariantfeatV ariantr efsGet()
•ProVariantfeatV ariantr efsSet()
•ProVariantr efFree()
•ProVariantr efProarrayFr ee()
Usethefunction ProVariantrefAlloc() toallocateahandleusedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProVariantfeatV ariantr efsGet()
•ProVariantfeatV ariantr efsSet()
•ProVariantr efFree()
•ProVariantr efProarrayFr ee()
Usethefunction ProVariantrefAlloc() toallocateahandleusedto
describeavariantreferenceassignedtoavariantfeature(likeinheritance
features).Theinputargumentsofthisfunctionare:
•original_r ef—Specifies theinitialreferencehandle.
•replacement_r ef—Specifies thereplacement referencehandle.
•feat_ids—Specifies aProArray offeatureids(fromthebasemodel)which
willbeassignedtothereferencereplacement action.
Usethefunction ProVariantrefOriginalrefGet() toobtaintheoriginal
referencethatisreplaced.
Usethefunction ProVariantrefOriginalrefSet() toassigntheoriginal
referencethatistobereplaced.
Usethefunction ProVariantrefReplacementrefGet() toobtainthe
replacement referenceforreplacingtheoriginalreferenceinthisvariantfeature.
Usethefunction ProVariantrefReplacementrefSet() toassignthe
replacement referenceforreplacingtheoriginalreferenceinthisvariantfeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProVariantrefReplacementrefSet() toassignthe
replacement referenceforreplacingtheoriginalreferenceinthisvariantfeature.
Usethefunction ProVariantrefFeatidsGet() toobtainanarrayofthe
featureidstakenfromthebasemodelwhichareassignedthereplacement
reference.
Usethefunction ProVariantrefFeatidsSet() toassignanarrayofthe
featureidstakenfromthebasemodelwhichareassignedthereference
replacement.
1204 Creo®Parametric TOOLKIT User’sGuideNote
Anassignment ofareplacement referencetoafeatureappliesonlyifthe
featuresactuallyusethereplacement reference.
Usethefunction ProVariantfeatVariantrefsGet() toobtainthe
variantreferenceassignments (aProArray ofthevariantreference) storedby
thisvariantfeature.
Usethefunction ProVariantfeatVariantrefsSet() toassignthe
variantreferenceassignments storedbythisvariantfeature.
Usethefunction ProVariantrefFree() tofreeahandleusedtodescribea
variantreferenceassignedtoavariantfeatureandthefunction
ProVariantrefProarrayFree() tofreeanarrayofhandlesusedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProVariantrefFree() tofreeahandleusedtodescribea
variantreferenceassignedtoavariantfeatureandthefunction
ProVariantrefProarrayFree() tofreeanarrayofhandlesusedto
describeavariantreferenceassignedtoavariantfeature.
Assembly: DataSharingFeatures 120559
Drawings
CreatingDrawingsfromTemplates.........................................................................1207
DiagnosingDrawingCreationErrors.......................................................................1208
DrawingSetup......................................................................................................1209
ContextinDrawingMode.......................................................................................1210
AccessDrawingLocationinGrid............................................................................1211
DrawingTree........................................................................................................1211xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDrawingTree........................................................................................................1211
MergeDrawings....................................................................................................1212
DrawingSheets.....................................................................................................1212
DrawingFormatFiles.............................................................................................1215
DrawingViewsandModels....................................................................................1216
DetailItems...........................................................................................................1234
DrawingSymbolGroups........................................................................................1264
DrawingEdges......................................................................................................1266xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDrawingEdges......................................................................................................1266
DrawingTables.....................................................................................................1268
CreatingBOMBalloons.........................................................................................1277
DrawingDimensions..............................................................................................1278
ThischapterdescribestheCreoParametric TOOLKITfunctionsthatdealwith
drawings.Unlessotherwisespecified,functionsthatoperateondrawingsuse
screencoordinates. SeetheCore:3DGeometry onpage168chaptertofindout
moreaboutscreencoordinates andhowtoconverttodrawingcoordinates (or
papercoordinates).
1206 Creo®Parametric TOOLKIT User’sGuideCreatingDrawingsfromTemplates
FunctionIntroduced:
•ProDrawingFro mTmpltCre ate()
•ProDrawingFro mTemplateCr eate()
Note
Thefunction ProDrawingFromTmpltCreate() willbedeprecated inaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctionIntroduced:
•ProDrawingFro mTmpltCre ate()
•ProDrawingFro mTemplateCr eate()
Note
Thefunction ProDrawingFromTmpltCreate() willbedeprecated ina
futurerelease.Usethefunction ProDrawingFromTemplateCreate()
instead.
Useofdrawingtemplatessimplifies drawingcreation.Suchtemplatescontain
drawingviewswithvariousproperties suchas:
•Crosssectionview
•Simplified representation
•Dimensions OnorOff
•Repeatregions(tablesbasedonBOMballoons)
Usethefunction ProDrawingFromTemplateCreate() tocreateadrawing
fromatemplateandtoreturnastructurecontaining anyerrorsencountered during
drawingcreation.Thisinputargumentsare:
•Newdrawingname
•Nameofexistingtemplatetouse
•Solidmodeltousewhencreatingdrawing
Note
Inthefunction ProDrawingFromTemplateCreate(), theobject
ProMdlnameShortdata supportsafilenameof31characters orless
foramodel.
•Drawingoutputoptionsthatspecifyhowyouwanttoviewdrawingsoutput.
Choseanyorallfromthefollowinglist:
○PRODWGCREATE_DISPLAY_DRAWING—display newdrawingina
windowxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforamodel.
•Drawingoutputoptionsthatspecifyhowyouwanttoviewdrawingsoutput.
Choseanyorallfromthefollowinglist:
○PRODWGCREATE_DISPLAY_DRAWING—display newdrawingina
window
○PRODWGCREATE_SHOW_ERROR_DIALOG—display thetemplateerror
dialogtotheuser
Drawings 1207○PRODWGCREATE_WRITE_ERRORS_TO_FILE—write theerrorstoa
diskfile
Thefunctionreturnsanerrorstructureifanyerrorsoccur.Theerrorstructure
containsanarrayoferrors.Eacherrormessagemayhave:
•Errortype
•Nameofviewwhereerroroccurred
•Nameofdrawingsheetwhereerroroccurred
•Nameoftheinvalidormissingobject
Example1:DrawingCreationfromaTemplate
ThesamplecodeinthefileUgDrawingFromTmpltCreate.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
drawing showshowtocreateadrawingfromatemplate.
Diagnosing DrawingCreationErrors
Functions Introduced:
•ProDwgcr eateErrsFr ee()
•ProDwgcr eateErrsCountGet()
•ProDwgcr eateErrT ypeGet()
•ProDwgcr eateErrV iewNameGet()
•ProDwgcr eateErrSheetGet()
•ProDwgcr eateErrV iewGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProDwgcr eateErrsFr ee()
•ProDwgcr eateErrsCountGet()
•ProDwgcr eateErrT ypeGet()
•ProDwgcr eateErrV iewNameGet()
•ProDwgcr eateErrSheetGet()
•ProDwgcr eateErrV iewGet()
•ProDwgcr eateErrObjNameGet()
Thefunction ProDwgcreateErrsFree() freesanexistingerrorstable.
Usethefunction ProDwgcreateErrsCountGet() toreturnthenumberof
drawingcreationerrorsinthetable.
Thefunction ProDwgcreateErrTypeGet() returnsthetypeofadrawing
creationerror.
Usethefunction ProDwgcreateErrViewNameGet() returnsthenameof
thetemplateviewwheretheerroroccurred.
Thefunction ProDwgcreateErrSheetGet() returnsthedrawingsheet
numberwheretheerroroccurred.
Usethefunction ProDwgcreateErrViewGet() returnsthedrawingview
wheretheerroroccurred.Thisfunctionisvalidforthefollowingerrortypes:
•PRODWGCRTERR_EXPLODE_DOESNT_EXIST
1208 Creo®Parametric TOOLKIT User’sGuide•PRODWGCRTERR_MODEL_NOT_EXPLODABLE
•PRODWGCRTERR_SEC_NOT_PERP
•PRODWGCRTERR_NO_RPT_REGIONS
•PRODWGCRTERR_FIRST_REGION_USEDxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRODWGCRTERR_EXPLODE_DOESNT_EXIST
1208 Creo®Parametric TOOLKIT User’sGuide•PRODWGCRTERR_MODEL_NOT_EXPLODABLE
•PRODWGCRTERR_SEC_NOT_PERP
•PRODWGCRTERR_NO_RPT_REGIONS
•PRODWGCRTERR_FIRST_REGION_USED
•PRODWGCRTERR_NOT_PROCESS_ASSEM
•PRODWGCRTERR_TEMPLATE_USED
•PRODWGCRTERR_SEC_NOT_PARALLEL
•PRODWGCRTERR_SIMP_REP_DOESNT_EXIST
ProDwgcreateErrObjNameGet() returnsthenameofthemodelinvalid.
Thisfunctionisvalidforthefollowingerrortypes:
•PRODWGCRTERR_SAVED_VIEW_DOESNT_EXIST
•PRODWGCRTERR_X_SEC_DOESNT_EXIST
•PRODWGCRTERR_EXPLODE_DOESNT_EXIST
•PRODWGCRTERR_SEC_NOT_PERP
•PRODWGCRTERR_SEC_NOT_PARALLEL
•PRODWGCRTERR_SIMP_REP_DOESNT_EXIST
DrawingSetup
Functions Introduced:
•ProInputFileRead()
•ProOutputFileMdlnameW rite()
•ProDrawingSetupOptionGet()
•ProDrawingSetupOptionSet()
•ProMdlDetailOptionGet()
•ProMdlDetailOptionSet()
YoucansetalldrawingsetupfileoptionsfromaCreoParametric TOOLKIT
application. Todothis,importatextfileintheformatofthedrawingsetupfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMdlDetailOptionGet()
•ProMdlDetailOptionSet()
YoucansetalldrawingsetupfileoptionsfromaCreoParametric TOOLKIT
application. Todothis,importatextfileintheformatofthedrawingsetupfile
usingthefunction ProInputFileRead(), withthefiletypesettoPRO_DWG_
SETUP_FILE. YoucancreatesuchafilefromCreoParametric TOOLKITwith
function ProOutputFileMdlnameWrite(). SeetheInterface:Data
Exchange onpage650chapterforinformation onthesefunctions.
Usethefunctions ProDrawingSetupOptionGet() and
ProDrawingSetupOptionSet() toreturnandassignaspecificdrawing
setupfileoption.
Drawings 1209Someofthe2Ddetailoptionsofthedrawingsarealsoapplicable to3Dmodels.
Thedetailoptionsareappliedtothemodelinthesamewayastothedrawings.
Further,thedetailoptionsforthemodelandtheirvaluesarealsostoredinthe
modelinthesamewayasinthedrawings.
Usethefunction ProMdlDetailOptionGet() togetthevalueofthe
specifieddetailoptionforthemodel.Thefunction
ProMdlDetailOptionSet() setsthevalueforthespecifieddetailoptionof
themodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProMdlDetailOptionGet() togetthevalueofthe
specifieddetailoptionforthemodel.Thefunction
ProMdlDetailOptionSet() setsthevalueforthespecifieddetailoptionof
themodel.
ContextinDrawingMode
Functions Introduced:
•ProRibbonContextGet()
•ProRibbonContextSet()
Thefunctions ProRibbonContextGet() andProRibbonContextSet()
retrieveandsetthecontextforthespecifieddrawingwindow,respectively .
FromPro/ENGINEER Wildfire5.0onwards,youcanspecifyacontextfora
drawing.Acontextpresentsasetofcommands relevanttothetypeoftaskthat
youarecurrentlyperforming onadrawing.ThecontextsintheDrawingmodeare
Layout,Table,Annotate,Sketch,AutobuildZ ,LegacyMigration,Analysis,and
Review.
Note
TosetthecontexttoAutobuildZ ,youmustfirstsettheconfiguration option
autobuildz_enabled toyes.
OneoftheargumentstotheProRibbonContextGet() and
ProRibbonContextSet() functionsiscontext,whichisofthetype
ProRibbonContext. ProRibbonContext isanenumerated type,which
takesthefollowingvalues:
•PRO_RBNCONTEXT_DWG_NONExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProRibbonContextSet() functionsiscontext,whichisofthetype
ProRibbonContext. ProRibbonContext isanenumerated type,which
takesthefollowingvalues:
•PRO_RBNCONTEXT_DWG_NONE
•PRO_RBNCONTEXT_DWG_LAYOUT
•PRO_RBNCONTEXT_DWG_TABLE
•PRO_RBNCONTEXT_DWG_ANNOTATE
•PRO_RBNCONTEXT_DWG_SKETCH
•PRO_RBNCONTEXT_DWG_AUTOBUILDZ
•PRO_RBNCONTEXT_DWG_REVIEW
1210 Creo®Parametric TOOLKIT User’sGuide•PRO_RBNCONTEXT_DWG_PUBLISH
Note
IfyousetcontexttoPRO_RBNCONTEXT_DWG_NONE, allactionsforthe
selectedobjectareavailableinallcontexts,exceptthecontextsinwhich
selectionisnotallowed.Forexample,thepublishcontext.
AccessDrawingLocationinGrid
FunctionIntroduced:
•ProDrawingPosT oLocgrid()
Usethefunction ProDrawingPosToLocgrid() tofindthegridcoordinates
ofalocationinthespecifieddrawing.Thefunctionspecifiesthepositionofa
point,expressed inscreencoordinates. ProDrawingPosToLocgrid() returns
stringsrepresenting therowandcolumncontaining thepoint.
DrawingTree
Pro/ENGINEER Wildfire5.0onward,youcanviewahierarchical representationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstringsrepresenting therowandcolumncontaining thepoint.
DrawingTree
Pro/ENGINEER Wildfire5.0onward,youcanviewahierarchical representation
ofdrawingitemsinanactivedrawingsheet.Thisrepresentation iscalleda
DrawingTree.Adrawingtreefacilitatesselectionandavailability ofdrawing
operations fortherepresented drawingitems.Formoreinformation, seetheCreo
Parametric Help.Usethefollowingfunctionstorefresh,expand,andcollapsethe
drawingtree:
Functions Introduced:
•ProDrawingtr eeRefre sh()
•ProDrawingtr eeExpand()
•ProDrawingtr eeCollapse()
Usethefunction ProDrawingtreeRefresh() torebuildthedrawingtreein
theCreoParametric windowthatcontainsthedrawing.Youcanusethisfunction
afteraddingasingledrawingitemormultipledrawingitemstoadrawing.
Usethefunction ProDrawingtreeExpand() toexpandthedrawingtreein
theCreoParametric windowandmakealldrawingsheetsanddrawingitemsin
theactivedrawingsheetvisible.
Usethefunction ProDrawingtreeCollapse() tocollapseallnodesofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheCreoParametric windowandmakealldrawingsheetsanddrawingitemsin
theactivedrawingsheetvisible.
Usethefunction ProDrawingtreeCollapse() tocollapseallnodesofthe
drawingtreeintheCreoParametric windowandmakeitschildnodesinvisible.
Theinputargumentstothesefunctionsare:
Drawings 1211•drawing—Handle tothedrawingthatcontainsthedrawingtree.
•window_id —IDoftheCreoParametric windowinwhichyouwanttorefresh,
expand,orcollapsethedrawingtree.
Note
UsePRO_VALUE_UNUSED torefresh,expand,orcollapsethedrawing
treeintheactivewindow.
Example2:Performing Operations onaDrawing
Tree
ThesamplecodeinthefileUgDrwTree.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_dwg showshowto
expand,collapse,andrefreshthedrawingtreeintheselecteddrawing.
MergeDrawings
FunctionIntroduced:
•ProDrawingMerge()
Usethefunction ProDrawingMerge() tomergetwodrawings.
DrawingSheets
Functions Introduced:
•ProDrawingSheetNameGet()
•ProDrawingSheetsCount()
•ProDrawingSheetT rfGet()
•ProDrawingSheetSizeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProDrawingMerge() tomergetwodrawings.
DrawingSheets
Functions Introduced:
•ProDrawingSheetNameGet()
•ProDrawingSheetsCount()
•ProDrawingSheetT rfGet()
•ProDrawingSheetSizeGet()
•ProDrawingSheetOrientationGet()
•ProDrawingSheetUnitsGet()
•ProDrawingCurr entSheetGet()
•ProDrawingCurr entSheetSet()
•ProDrawingSheetCr eate()
•ProDrawingSheetDelete()
•ProDrawingSheetCopy()
1212 Creo®Parametric TOOLKIT User’sGuide•ProDrawingSheetsReorder()
•ProDrawingSheetFormatIsBlanked()
•ProDrawingFormatGet()
•ProDrawingFormatAdd()
•ProDrawingSheetFormatShow()
•ProDrawingSheetFormatHide()
•ProDrawingSheetFormatIsShown()
•ProDrawingSheetFro mFormatGet()
•ProDrawingT oleranceStandardGet()
•ProDrawingT oleranceStandardSet()
•ProDwgSheetRegenerate()
DrawingsheetsareidentifiedinCreoParametric TOOLKITbythesamesheet
numberstheCreoParametric usersees.
Thefunction ProDrawingSheetNameGet() retrievesthenameofthe
specifieddrawingsheet.
Thefunction ProDrawingSheetsCount() outputsthecurrentnumberofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnumberstheCreoParametric usersees.
Thefunction ProDrawingSheetNameGet() retrievesthenameofthe
specifieddrawingsheet.
Thefunction ProDrawingSheetsCount() outputsthecurrentnumberof
sheetsinthespecifieddrawing.
Thefunction ProDrawingSheetTrfGet() providesthematrixthat
transforms fromscreentodrawingunitsorviceversa.(SeetheCore:Coordinate
SystemsandTransformations onpage220chapterformoredetailson
transformations.)
Thefunction ProDrawingSheetSizeGet() returnsthesizeofthesheetused
forthedrawing.Ifthesheetisastandardpapersize,thiswillbereturned,along
withthewidthandheightofthesheetmeasuredinthesheetunits.
Thefunction ProDrawingSheetOrientationGet() returnstheorientation
ofthedrawingsheet.Theorientation canbeeitherportraitorlandscape.
Thefunction ProDrawingSheetUnitsGet() retrievesthenameofthe
lengthunitsusedformeasuring thedrawingsheet.
Thefunction ProDrawingCurrentSheetGet() returnsthesheetnumberof
thecurrentlyselectedsheetinthespecifieddrawing.Itreturnsapositiveintegerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlengthunitsusedformeasuring thedrawingsheet.
Thefunction ProDrawingCurrentSheetGet() returnsthesheetnumberof
thecurrentlyselectedsheetinthespecifieddrawing.Itreturnsapositiveinteger
fortheretrievedsheetnumberandazeroforaninvalidinputargument.
Thefunction ProDrawingCurrentSheetSet() setsthesheetnumberfor
thecurrentlyselectedsheetinthespecifieddrawing.Oneoftheinputarguments
tothisfunctionisaninteger,current_sheet.
Drawings 1213Thefunction ProDrawingSheetCreate() addsasheettoadrawingmodel
oftypeNotebook, Format,Drawing,Diagram,orReport.Theoutputargumentto
thisfunctionisaninteger,new_sheet. Ifthedrawingsheetissuccessfully created,
new_sheet takesthevalueofthesheetnumberforthenewlycreateddrawing
sheet.Otherwise ittakesthevalue,-1.
Thefunction ProDrawingSheetDelete() deletesasheetfromadrawing
modeloftypeNotebook, Format,Drawing,Diagram,orReport.Youneedtoenter
thetypeofthedrawingmodelandthesheetnumberofthesheettobedeletedas
inputarguments.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodeloftypeNotebook, Format,Drawing,Diagram,orReport.Youneedtoenter
thetypeofthedrawingmodelandthesheetnumberofthesheettobedeletedas
inputarguments.
Thefunction ProDrawingSheetCopy() createsacopyofaspecifieddrawing
sheet.Theinputargumentstothisfunctionare:
•drawing—The drawingmodelhandle.SetittoNULLtocopyasheetfromthe
currentdrawing.
•sheet_to_copy—The sheetnumberofthesheettobecopied.Setittoavalue
lessthan1tocreateacopyofthecurrentlyselectedsheet.
Theoutputargumenttothisfunctionis:
•sheet_copy (optional)—The sheetnumberofthenewlycreatedsheet.Setitto
NULL,ifyoudonotwantthenewsheetnumber.
Thefunction ProDrawingSheetsReorder() assignsanewsheetnumberto
aspecifiedsheet,andrenumbers theremaining sheetsaccordingly .
Thefunction ProDrawingSheetFormatIsBlanked() identifieswhether
theformatofaspecifieddrawingsheetisblank.Incaseofthecurrentsheet,set
theinputarguments drawingandsheettoNULLandtoavaluelessthan1,
respectively .
Thefunction ProDrawingFormatGet() returnsthenameofthedrawingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheinputarguments drawingandsheettoNULLandtoavaluelessthan1,
respectively .
Thefunction ProDrawingFormatGet() returnsthenameofthedrawing
formatthatwasusedforthespecifiedsheet. ProDrawingFormatAdd() adds
orreplacesaspecifiedformatintoaspecifieddrawingsheet.
Thefunction ProDrawingSheetFormatShow() displaysthedrawingformat
foraspecifieddrawingsheet.Todisplaythedrawingformatofthecurrentsheet,
settheinputarguments drawingandsheettoNULLandtoavaluelessthan1,
respectively .
Usethefunction ProDrawingSheetFormatHide() tohidethedrawing
formatforaspecifieddrawingsheet.
Thefunction ProDrawingSheetFormatIsShown() identifiesifthe
drawingformatforaspecifieddrawingsheetisshown.Itreturns PRO_B_TRUE if
thedrawingformatisshownandreturns PRO_B_FALSE ifthedrawingformatis
notshown.
Thefunction ProDrawingSheetFromFormatGet() retrievesthesheet
numberofthedrawingformatforaspecifieddrawingandsheetnumberwithin
thedrawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnotshown.
Thefunction ProDrawingSheetFromFormatGet() retrievesthesheet
numberofthedrawingformatforaspecifieddrawingandsheetnumberwithin
thedrawing.
1214 Creo®Parametric TOOLKIT User’sGuideThefunction ProDrawingToleranceStandardGet() returnsthetolerance
standardthatisassignedtothespecifieddrawing.Usethefunction
ProDrawingToleranceStandardSet() tosetthetolerancestandardfora
drawing.
Thefunction ProDwgSheetRegenerate() regenerates aspecifieddrawing
sheet.
Example3:ListingDrawingSheets
ThesamplecodeinthefileUgDrawingFromTmpltCreate.c locatedat
<creo_toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
drawing showshowtolistthesheetsinthecurrentdrawing.
Example4:CreatingaCopyoftheCurrentDrawing
Sheet
ThesamplecodeinthefileUgSheetCopy.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_dwg showshowto
Addadrawingsheettothecurrentdrawing-type object.
DrawingFormatFiles
Theformatofadrawingreferstotheboundarylines,referencing marksandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloadpoint>/protk_appls/pt_userguide/ptu_dwg showshowto
Addadrawingsheettothecurrentdrawing-type object.
DrawingFormatFiles
Theformatofadrawingreferstotheboundarylines,referencing marksand
graphicelementsthatappearoneverysheetbeforeanydrawingelementsare
shownoradded.Theseusuallyincludeitemssuchastablesforthecompany
name,detailersname,revisionnumberanddate.InaCreoParametric drawing,
youcanassociateaformatfile(.frm)withthedrawing.Thisfilecarriesallthe
formatgraphicalinformation, anditcanalsocarrysomeoptionaldefaultattributes
liketextsizeanddraftscale.Thefunctionsdescribedinthissectionallowyouto
getandsetthesizeofthedrawingformat.
Functions Introduced:
•ProDrawingFormatSizeSet()
•ProDrawingFormatSizeGet()
Thefunction ProDrawingFormatSizeSet() setsthesizeofthedrawing
formatinthespecifieddrawing.Youcanaddastandardorcustomize sizeformat
inthedrawing.Theinputargumentsare:
•drawing—Specifies thenameofthedrawing.
•drawing_sheet—Specifies thenumberofthedrawingsheetwherethedrawing
formatmustbeset.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthedrawing.Theinputargumentsare:
•drawing—Specifies thenameofthedrawing.
•drawing_sheet—Specifies thenumberofthedrawingsheetwherethedrawing
formatmustbeset.
•size—Specifies thesizeofthedrawingusingtheenumerated datatype
ProPlotPaperSize.
Drawings 1215•width—Specifies thewidthofthedrawingininches,when sizeissetto
VARIABLE_SIZE_PLOT.
Itspecifiesthewidthofthedrawinginmillimeters, when sizeissetto
VARIABLE_SIZE_IN_MM_PLOT.
Note
Thisargumentisignoredforalltheothersizesofthedrawingexcept
VARIABLE_SIZE_PLOT andVARIABLE_SIZE_IN_MM_PLOT. In
suchcasesspecifytheargumentasPRO_VALUE_UNUSED.
•height—Specifies theheightofthedrawingininches,whenthesizeissetto
VARIABLE_SIZE_PLOT.
Itspecifiesthewidthofthedrawinginmillimeters, whenthesizeissetto
VARIABLE_SIZE_IN_MM_PLOT.
Note
Thisargumentisignoredforalltheothersizesofthedrawingexcept
VARIABLE_SIZE_PLOT andVARIABLE_SIZE_IN_MM_PLOT. In
suchcasesspecifytheargumentasPRO_VALUE_UNUSED.
Usethefunction ProDrawingFormatSizeGet() togetthesizeofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVARIABLE_SIZE_PLOT andVARIABLE_SIZE_IN_MM_PLOT. In
suchcasesspecifytheargumentasPRO_VALUE_UNUSED.
Usethefunction ProDrawingFormatSizeGet() togetthesizeofthe
drawingformatinthespecifieddrawing.Thefunctionreturnsthesizeofthe
drawing,andthewidthandheightofthedrawingininches.
DrawingViewsandModels
DrawingviewsareidentifiedbytheOHandle ProView. Thisisthesameobject
handleusedtoreference3Dmodelviews,accessedbythefunctionsin
ProView.h, buttherearenocaseswherethesameobjectcanbeaccessedby
bothtypesoffunction.Thegeneralruleisthatfunctionsfor3Dviewsarein
ProView.h, andstartwithProView; functionstomanipulate drawingviews
areinProDrawing.h andthereforealwaysstartwithProDrawing.
Eachdrawingviewhasasolidattachedtoit.Thesamesolidcanappearinmore
thanoneview.Somesolidsmaybeattachedtothedrawing,butnotappearinany
view,iftheCreoParametric userhasdeletedallviewsofitwithoutalsoremoving
thesoliditselffromthedrawing.
1216 Creo®Parametric TOOLKIT User’sGuideListingDrawingViews
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxview,iftheCreoParametric userhasdeletedallviewsofitwithoutalsoremoving
thesoliditselffromthedrawing.
1216 Creo®Parametric TOOLKIT User’sGuideListingDrawingViews
Functions Introduced:
•ProDrawingV iewsCollect()
•ProDrawingV iewV isit()
•ProDrawingV iewSheetGet()
•ProDrawingErasedviewSheetGet()
•ProDrawingV iewOutlineGet()
•ProDrawingV iewT ypeGet()
•ProDrawingV iewIdGet()
•ProDrawingV iewInit()
•ProDrawingV iewonlyOpen()
•ProDrawingV iewPar entGet()
•ProDrawingV iewChildr enGet()
•ProDrawingV iewOriginGet()
•ProDrawingV iewAlignmentGet()
•ProDrawingV iewScaleIsUserdefined()
•ProDrawingV iewScaleGet()
•ProDrawingScaleGet()
•ProDrawingV iewPerspectiveScaleGet()
•ProDrawingV iewFlagGet()
•ProDrawingV iewDisplayGet()
•ProDrawingV iewColorSour ceGet()
•ProDrawingV iewSolidGet()
•ProDrawingV iewT ransformGet()
•ProDrawingV iewNameGet()
•ProDrawingV iewZclippingGet()
•ProDrawingV iewDatumdisplayGet()
•ProDrawingV iewPipingdisplayGet()
•ProDrawingV iewIsErased()
•ProDrawingV iewNeedsRegen()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDrawingV iewNameGet()
•ProDrawingV iewZclippingGet()
•ProDrawingV iewDatumdisplayGet()
•ProDrawingV iewPipingdisplayGet()
•ProDrawingV iewIsErased()
•ProDrawingV iewNeedsRegen()
Drawings 1217ProDrawingViewsCollect() outputsanarrayofProView handlestoall
theviewsinadrawing. ProDrawingViewVisit() isanalternative wayto
findtheviews,andconformstotheusualformofvisitfunctions.
ProDrawingViewSheetGet() outputsthenumberofthesheetinwhicha
specifiedviewappears.
Thefunction ProDrawingErasedviewSheetGet() outputsthenumberof
thesheet,whichcontainedtheviewthatwaserased.Ifthesheetthatcontainedthe
erasedviewisdeleted,thesheetIDisreturnedasPRO_VALUE_UNUSED.
Thefunction ProDrawingViewOutlineGet() outputsthepositionofthe
viewinthesheet.
Thefunction ProDrawingViewTypeGet() returnsthetypeofaspecified
drawingview.Adrawingviewcanbeofthefollowingtypes:
•PRO_VIEW_GENERAL—Specifies ageneraldrawingview.
•PRO_VIEW_PROJECTION—Specifies aprojecteddrawingview.
•PRO_VIEW_AUXILIARY—Specifies anauxiliarydrawingview.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_VIEW_GENERAL—Specifies ageneraldrawingview.
•PRO_VIEW_PROJECTION—Specifies aprojecteddrawingview.
•PRO_VIEW_AUXILIARY—Specifies anauxiliarydrawingview.
•PRO_VIEW_DETAIL—Specifies adetaileddrawingview.
•PRO_VIEW_REVOLVE—Specifies arevolveddrawingview.
•PRO_VIEW_COPY_AND_ALIGN—Specifies acopyandaligndrawingview.
•PRO_VIEW_OF_FLAT_TYPE—Specifies aflattypedrawingview.
Thefunction ProDrawingViewIdGet() retrievestheIDofthedrawingview
specifiedbythedrawingandthedrawingviewhandles.
Thefunction ProDrawingViewInit() retrievesthedrawingviewhandle
basedonthespecifieddrawinghandleandtheviewID.
Thefunction ProDrawingViewonlyOpen() opensadrawingintheview
onlymode.
Thefunction ProDrawingViewParentGet() returnstheparentviewofa
specifieddrawingview.Thefunction ProDrawingViewChildrenGet()
returnsthechildviewsofadrawingviewandthetotalnumberofchildren.
ProDrawingViewOriginGet() returnsthelocationoftheoriginintermsof
theProPoint3d objectandtheselectionreferenceintermsofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreturnsthechildviewsofadrawingviewandthetotalnumberofchildren.
ProDrawingViewOriginGet() returnsthelocationoftheoriginintermsof
theProPoint3d objectandtheselectionreferenceintermsofthe
ProSelection objectforaspecifieddrawingview.
ProDrawingViewAlignmentGet() returnsthealignment ofadrawingview
withrespecttoanotherview.Itreturnsthealignment styleofthedrawingview
thatcanbeeitherhorizontal orvertical,thereferenceviewtowhichtheviewis
aligned,andthealignment references ofboththealignedandreferenceviews.
ProDrawingViewScaleIsUserdefined() returnsabooleanvalue
depending onwhetherthedrawinghasauser-assignedscaleornot.
1218 Creo®Parametric TOOLKIT User’sGuideProDrawingViewScaleGet() returnsthescalefactorapplied,evenifthe
viewisnotascaledview.ProDrawingScaleGet() returnstheoverall
drawingscalethatisappliedtoallunscaledviews.
Thefunction ProDrawingViewPerspectiveScaleGet() returnsthe
perspective scaleappliedtoadrawingview.Thisscaleoptionisavailableonlyforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawingscalethatisappliedtoallunscaledviews.
Thefunction ProDrawingViewPerspectiveScaleGet() returnsthe
perspective scaleappliedtoadrawingview.Thisscaleoptionisavailableonlyfor
generalviews.Thefunctionreturnsthefollowingoutputarguments:
•eye_dist—Specifies theeye-pointdistancefrommodelspace.
•view_dia—Specifies theviewdiameterinpaperunitssuchasmm.
Thefunction ProDrawingViewFlagGet() identifiesiftheprojection arrow
flaghasbeensetforaprojectedordetaileddrawingview.
ProDrawingViewDisplayGet() outputstheProDrawingViewDisplay
structurethatdescribesthedisplaystatusofthedrawingview.Thefieldsinthe
structure,alleitherenumsorbooleans,arelistedbelow:
•style—Whether wireframe, hiddenline,orshaded.
•quilt_hlr—Whether hidden-line-removal isappliedtoquilts.
•tangent_edge_display—Style oflineusedfortangentedges.
•cable_display—Whether cablesareshownbycenterline, asthick,or
usingthecurrentdefault.
•concept_model—Whether theskeletonisdisplayed.
•weld_xsec—Whether weldsareincludedinthecross-section.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•cable_display—Whether cablesareshownbycenterline, asthick,or
usingthecurrentdefault.
•concept_model—Whether theskeletonisdisplayed.
•weld_xsec—Whether weldsareincludedinthecross-section.
ProDrawingViewColorSourceGet() returnsthecolorsourceofthe
drawingviewrepresentation. Thecolorsourcecanbeofthefollowingtypes:
•PRO_VIEW_MODEL_COLOR—Specifies thatthedrawingcolorsare
determined bythemodelsettings.
•PRO_VIEW_DRAWING_COLOR—Specifies thatthedrawingcolorsare
determined bythedrawingssettings.
ProDrawingViewSolidGet() providesthehandletothesolidthatisbeing
displayedinthedrawingview.ProDrawingViewTransformGet() returns
thematrixthatdescribesthetransformbetween3Dsolidcoordinates and2D
screencoordinates foraspecifiedview.
ProDrawingViewNameGet() returnsthenameofaspecifiedviewinthe
drawing.
ProDrawingViewZclippingGet() returnsthereferenceoftheZ-clipping
onthedrawingview.Thereferencecanbeanedge,datum,orpointonthesurface
thatisparalleltotheview.Geometry containedintheZ-clipping planeandinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDrawingViewZclippingGet() returnsthereferenceoftheZ-clipping
onthedrawingview.Thereferencecanbeanedge,datum,orpointonthesurface
thatisparalleltotheview.Geometry containedintheZ-clipping planeandin
frontoftheplaneappears,butgeometrybehindtheplanedoesnotappear.The
systemclipsgeometrythatintersectstheplane.
Drawings 1219Thefunction ProDrawingViewDatumdisplayGet() determines ifasolid
modeldatumhasbeenexplicitlyshowninaparticulardrawingview.
Thefunction ProDrawingViewPipingdisplayGet() returnsthepiping
displayoptionforadrawingview.
Thefunction ProDrawingViewIsErased() identifiesifthedrawingviewis
erasedornot.
Thefunction ProDrawingViewNeedsRegen() identifieswhetherthe
drawingorthespecifieddrawingviewneedstoberegenerated.
Example5:ListingtheViewsinaDrawing
ThesamplecodeinthefileUgDrawingViews.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_drawing
showsacommand thatcreatesaninformation windowreportinginformation
aboutalltheviewsinadrawing.
ModifyingViewsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolkit_loadpoint>/protk_appls/pt_userguide/ptu_drawing
showsacommand thatcreatesaninformation windowreportinginformation
aboutalltheviewsinadrawing.
ModifyingViews
Functions Introduced:
•ProDrawingV iewMove()
•ProDrawingV iewDelete()
•ProDrawingV iewErase()
•ProDrawingV iewResume()
•ProDrawingV iewOriginSet()
•ProDrawingV iewAlignmentSet()
•ProDrawingV iewScaleSet()
•ProDrawingScaleSet()
•ProDrawingV iewPro jectionSet()
•ProDrawingV iewFlagSet()
•ProDrawingV iewDisplaySet()
•ProDrawingV iewNameSet()
•ProDrawingV iewZclippingSet()
•ProDrawingV iewPipingdisplaySet()
•ProDrawingV iewRegenerate()
•ProDwgV iewRegenerate()
1220 Creo®Parametric TOOLKIT User’sGuideThefunction ProDrawingViewMove() movesthespecifieddrawingviewand
itschildviewsbyavectortoanewpositioninscreencoordinates. Thisfunction
performsthesameoperationastheCreoParametric commandSketch▶▶Edit▶▶
MoveSpecial.
Thefunction ProDrawingViewDelete() deletesthedrawingviewandany
ofitschildviews,orfailsiftheviewhasanychildren.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxperformsthesameoperationastheCreoParametric commandSketch▶▶Edit▶▶
MoveSpecial.
Thefunction ProDrawingViewDelete() deletesthedrawingviewandany
ofitschildviews,orfailsiftheviewhasanychildren.
Thefunction ProDrawingViewErase() erasesaspecifieddrawingview.
Thefunction ProDrawingViewResume() resumesthespecifieddrawing
view.
ProDrawingViewOriginSet() assignsthelocationoftheoriginintermsof
theProPoint3d objectandtheselectionreferenceintermsofthe
ProSelection objectforaspecifieddrawingview.
Thefunction ProDrawingViewAlignmentSet() assignsthealignment ofa
drawingviewwithrespecttoanotherview.Thisfunctionassignsthefollowing
inputargumentsrelatedtoalignment:
•view_r eference—Specifies thereferenceviewtowhichthedrawingviewis
aligned.
•align_style—Specifies thealignment styleintermsoftheenumerated type
ProDrawingViewAlignStyle. Thealignment stylecanbeeither
horizontal orvertical.Incaseofhorizontal alignment, thedrawingviewand
theviewitisalignedtolieonthesamehorizontal line.IncaseofverticalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDrawingViewAlignStyle. Thealignment stylecanbeeither
horizontal orvertical.Incaseofhorizontal alignment, thedrawingviewand
theviewitisalignedtolieonthesamehorizontal line.Incaseofvertical
alignment, thedrawingviewandtheviewitisalignedtolieonthesame
verticalline.
•align_r ef_1—Specifies thealignment referenceofthereferenced view.Ifthis
issettoNULL,thereferenceviewisalignedaccording toitsvieworigin.
•align_r ef_2—Specifies thealignment referenceofthealignedview.Ifthisis
settoNULL,thealignedviewisalignedaccording toitsvieworigin.
Thefunction ProDrawingViewScaleSet() modifiesthescaleofascaled
view; ProDrawingScaleSet() modifiestheoveralldrawingscalethatis
appliedtoallunscaledviews.
Thefunction ProDrawingViewProjectionSet() assignsthespecified
drawingviewasaprojection.
Thefunction ProDrawingViewFlagSet() setstheprojection arrowflagto
TRUEforaprojectedordetaileddrawingview.
Thefunction ProDrawingViewDisplaySet() assignsthefieldsinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawingviewasaprojection.
Thefunction ProDrawingViewFlagSet() setstheprojection arrowflagto
TRUEforaprojectedordetaileddrawingview.
Thefunction ProDrawingViewDisplaySet() assignsthefieldsinthe
ProDrawingViewDisplay structurethatdescribethedisplaystatusofthe
drawingview.Thisfunctiondoesnotrepaintthedrawingview,usethefunction
ProWindowRepaint() torepainttheview.
Drawings 1221Note
Inordertomodifytheconcept_model fieldinthe
ProDrawingViewDisplay structure,yourequireanAssembly license.
Thefunction ProDrawingViewNameSet() assignsanametoaspecified
drawingview.
Note
Theconfiguration option allow_duplicate_view_names enablesyou
tosetduplicatenamesfordrawingviews.Whentheconfiguration optionisset
tono,thefunctionreturnsanerrorifanotherdrawingviewinthespecified
drawingexistswiththesamename.
Thefunction ProDrawingViewZclippingSet() setstheZ-clipping onthe
drawingviewtoreferenceagivenedge,datum,orpointonthesurfacethatis
paralleltotheview.Geometry containedintheZ-clipping planeandinfrontofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawingviewtoreferenceagivenedge,datum,orpointonthesurfacethatis
paralleltotheview.Geometry containedintheZ-clipping planeandinfrontofthe
planeappears,butgeometrybehindtheplanedoesnotappear.Thesystemclips
geometrythatintersectstheplane.
Thefunction ProDrawingViewPipingdisplaySet() assignsthepiping
displayoptionforadrawingview.Thepipingdisplayoptionsareasfollows:
•PRO_PIPINGDISP_DEFAULT—Displays thedefaultappearance ofpipes
forthepipingassembly.
•PRO_PIPINGDISP_CENTERLINE—Displays pipesascenterlines without
insulation.
•PRO_PIPINGDISP_THICK_PIPES—Displays thickpipeswithout
insulation.
•PRO_PIPINGDISP_THICK_PIPES_AND_INSULATION—Displays thick
pipesandinsulation.
Thefunction ProDrawingViewRegenerate() regenerates thedrawingview
specifiedbytheProView viewhandle.
Thefunction ProDwgViewRegenerate() erasesthedisplayedviewofthe
currentobject,regenerates theviewfromthecurrentdrawing,thenredisplays the
view.
CreatingViews
FunctionIntroduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDwgViewRegenerate() erasesthedisplayedviewofthe
currentobject,regenerates theviewfromthecurrentdrawing,thenredisplays the
view.
CreatingViews
FunctionIntroduced:
1222 Creo®Parametric TOOLKIT User’sGuide•ProDrawingGeneralviewCr eate()
•ProDrawingPro jectedviewCr eate()
Ageneralviewisusuallythefirstviewplacedonadrawingsheet.Itisthemost
versatileview,thatis,itcanbescaledorrotatedtoanysetting.
Aprojectedviewisanorthographic projection ofanotherview’sgeometryalonga
horizontal orverticaldirection.
Theabovefunctionscreategeneralandprojecteddrawingviews.
Example6:CreatingGeneralandProjectedDrawingViews
ThesamplecodeinthefileUgDrawingViews.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_drawing
addsanewsheettoadrawing,andcreatesonegeneralandtwoprojectedviewsof
aselectedmodel.
Background Views
Functions Introduced:
•ProDrawingV iewIsBackgr ound()
•ProDrawingBackgr oundV iewGet()
Viewscanbeassignednotonlytothesolidviewsthattheusercreates,butalsotoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaselectedmodel.
Background Views
Functions Introduced:
•ProDrawingV iewIsBackgr ound()
•ProDrawingBackgr oundV iewGet()
Viewscanbeassignednotonlytothesolidviewsthattheusercreates,butalsoto
eachsheet.Theviewassignedtoadrawingsheetiscalledabackground view.
Function ProDrawingViewIsBackground() determines whetherthe
specifiedviewisabackground view.
IfyouuseProSelect() foraniteminadrawingthatisnotinsideasolidview,
suchasadetailitem,theProView viewhandleoutputby
ProSelectionViewGet() isthebackground view.
Note
Thesefunctionssupersede thefunctions ProDrawingViewIsOverlay()
andProDrawingOverlayviewGet(), whichpreviously servedthesame
purpose.
DetailedViews
Functions Introduced:
•ProDrawingV iewDetailCr eate()
•ProDrawingV iewDetailRefer enceGet()
Drawings 1223•ProDrawingV iewDetailRefer enceSet()
•ProDrawingV iewDetailCurvedataGet()
•ProDrawingV iewDetailCurvedataSet()
•ProDrawingV iewDetailBoundaryGet()
•ProDrawingV iewDetailBoundarySet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDrawings 1223•ProDrawingV iewDetailRefer enceSet()
•ProDrawingV iewDetailCurvedataGet()
•ProDrawingV iewDetailCurvedataSet()
•ProDrawingV iewDetailBoundaryGet()
•ProDrawingV iewDetailBoundarySet()
Adetailedviewisasmallportionofamodelshownenlargedinanotherview.
Thefunction ProDrawingViewDetailCreate() createsadetailedview
giventhereferencepointontheparentview,thesplinecurvedata,andlocationof
thenewview.Anotewiththedetailedviewnameandthesplinecurveborderare
includedintheparentviewforthecreateddetailedview.
Thefunctions ProDrawingViewDetailReferenceGet() and
ProDrawingViewDetailReferenceSet() returnandassign,respectively ,
thereferencepointontheparentviewforaspecifieddetailedview.
Thefunctions ProDrawingViewDetailCurvedataGet()and
ProDrawingViewDetailCurvedataSet() retrieveandassign,
respectively ,thesplinecurvedataintermsoftheProCurvedata handlefora
specifieddetailedview.Theoutputargument, curve_data specifiesthe
following:
•TheXandYcoordinate directions matchthescreenspace.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrespectively ,thesplinecurvedataintermsoftheProCurvedata handlefora
specifieddetailedview.Theoutputargument, curve_data specifiesthe
following:
•TheXandYcoordinate directions matchthescreenspace.
•Thecoordinate point(0,0)mapstothereferencepoint.
•Thescalingunitisofoneinchrelativetothetopmodeloftheview.Iftwo
pointsinthesplineareatadistanceof'1'fromeachother,thenintheactual
view,thepointswillbeoneinchdistantfromeachother,ifmeasuredinthe
scaleofthetopmodel.Forexample,ifoneofthepointsinthespline
definitionhascoordinates (0.5,0.0,0.0),thenthepositionofthatpointisnot
halfaninchtotherightofthereferencepointonthepaper.Instead,when
projectedasapointinthespaceofthetopmodeloftheview,itishalfaninch
totherightofthereferencepointwhenmeasuredinthespaceofthatmodel.
Usethefunction ProCurvedataAlloc()to allocatememoryforthecurve
datastructure.
Thefunction ProDrawingViewDetailBoundaryGet() retrievesthetype
ofsplinecurveusedtodefinetheboundaryofthedetailedviewandalsoidentifiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatastructure.
Thefunction ProDrawingViewDetailBoundaryGet() retrievesthetype
ofsplinecurveusedtodefinetheboundaryofthedetailedviewandalsoidentifies
whethertheboundaryisdisplayedontheparentview.
Thefunction ProDrawingViewDetailBoundarySet() assignsthe
boundarytypeforadetailedviewintermsoftheenumerated type
ProViewDetailBoundaryType. Thetypesofboundaries are:
•PRO_DETAIL_BOUNDARY_CIRCLE—Draws acircleintheparentview.
•PRO_DETAIL_BOUNDARY_ELLIPSE—Draws anellipseintheparentview.
1224 Creo®Parametric TOOLKIT User’sGuide•PRO_DETAIL_BOUNDARY_HORZ_VER_ELLIPSE—Draws anellipsewith
ahorizontal orverticalmajoraxis.
•PRO_DETAIL_BOUNDARY_SPLINE—Displays thesplineboundarydrawn
bytheuserintheparentview.
•PRO_DETAIL_BOUNDARY_ASME_CIRCLE—Displays anASMEstandard-
compliant circleasanarcwitharrowsandthedetailedviewname.
ThisfunctionalsosetstheProBoolean argument showtodisplaytheboundary
ofthedetailedviewintheparentview.
AuxiliaryViews
Functions Introduced:
•ProDrawingV iewAuxiliaryCr eate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThisfunctionalsosetstheProBoolean argument showtodisplaytheboundary
ofthedetailedviewintheparentview.
AuxiliaryViews
Functions Introduced:
•ProDrawingV iewAuxiliaryCr eate()
•ProDrawingV iewAuxiliarySet()
•ProDrawingV iewAuxiliaryInfoGet()
Anauxiliaryviewisatypeofprojectedviewthatprojectsatrightanglestoa
selectedsurfaceoraxis.Theselectedsurfaceoraxisintheparentviewmustbe
perpendicular totheplaneofthescreen.
Thefunction ProDrawingViewAuxiliaryCreate() createsanauxiliary
viewgiventheselectionreferenceandthepointlocation.
Thefunction ProDrawingViewAuxiliarySet() setsaspecifieddrawing
viewastheauxiliaryview.
Thefunction ProDrawingViewAuxiliaryInfoGet() retrieves
information suchastheselectionreferenceintermsoftheProSelection
objectandthepointlocationintermsoftheProPoint3d objectforaspecified
auxiliaryview.
RevolvedViews
Functions Introduced:
•ProDrawingV iewRevolveCre ate()
•ProDrawingV iewRevolveInfoGet()
Arevolvedviewisacrosssectionofadrawingviewrevolved90degreesaroundxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxauxiliaryview.
RevolvedViews
Functions Introduced:
•ProDrawingV iewRevolveCre ate()
•ProDrawingV iewRevolveInfoGet()
Arevolvedviewisacrosssectionofadrawingviewrevolved90degreesaround
acuttingplaneprojection.
Thefunction ProDrawingViewRevolveCreate() createsarevolvedview
givenacrosssection,theselectionreference, andthepointlocation.
Drawings 1225Thefunction ProDrawingViewRevolveInfoGet() retrievesinformation
suchasthecrosssectionintermsoftheProXsec object,theselectionreference
intermsoftheProSelection object,andthepointlocationintermsofthe
ProPoint3d objectforaspecifiedrevolvedview.
ViewOrientation
Functions Introduced:
•ProDrawingV iewOrientationFr omNameSet()
•ProDrawingV iewOrientationFr omRefer enceSet()
•ProDrawingV iewOrientationFr omAngleSet()
Theorientation typeforadrawingviewisgivenbytheenumerated type
ProDrawingViewOrientationType. Thevieworientation canbeofthe
followingtypes:
•PRO_VIEW_ORIENT_NAME—The drawingviewisorientedusingsaved
viewsfromthemodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDrawingViewOrientationType. Thevieworientation canbeofthe
followingtypes:
•PRO_VIEW_ORIENT_NAME—The drawingviewisorientedusingsaved
viewsfromthemodel.
•PRO_VIEW_ORIENT_GEOM_REF—The drawingviewisorientedusing
geometric references fromthemodel.
•PRO_VIEW_ORIENT_ANGLE—The drawingviewisorientedusingangles
ofselectedreferences orcustomangles.
Note
Thedrawingviewmustbedisplayedbeforeapplyinganyorientation toit.
Thefunction ProDrawingViewOrientationFromNameSet() assignsthe
orientation ofaspecifieddrawingviewaccording tothefollowinginput
arguments:
•mdl_view_name—Specifies thenameofthesavedviewinthemodel.
•orientation_name—Specifies thenameoftheuser-definedorientation forthe
savedview.
•x_angle—Specifies theXangleindegreesfortheuser-definedorientation.
•y_angle—Specifies theYangleindegreesfortheuser-definedorientation.
Thefunction ProDrawingViewOrientationFromReferenceSet()
assignstheorientation ofaspecifieddrawingviewaccording tothefollowing
inputarguments:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDrawingViewOrientationFromReferenceSet()
assignstheorientation ofaspecifieddrawingviewaccording tothefollowing
inputarguments:
•ref_name_1—Specifies thenameofthefirstgeometric reference.
1226 Creo®Parametric TOOLKIT User’sGuide•ref_sel_1—Specifies thefirstreferenceselectiononthemodelintermsofthe
ProSelection object.
•ref_name_2—Specifies thenameofthesecondgeometric reference.
•ref_sel_2—Specifies thesecondreferenceselectiononthemodelintermsof
theProSelection object.
Thefunction ProDrawingViewOrientationFromAngleSet() assigns
theorientation ofaspecifieddrawingviewaccording tothefollowinginput
arguments:
•sel—Specifies thereferenceselectionintermsoftheProSelection object.
ItcanbeanaxisorNULLforothertype.
•angle—Specifies theangleindegreeswiththeselectedreference.
•rot_ref_name—Specifies thenameoftherotationalangle.
•index—Specifies theindexoftheanglesetting.
VisibleAreasofViews
Functions Introduced:
•ProDrawingV iewV isibleare aTypeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•rot_ref_name—Specifies thenameoftherotationalangle.
•index—Specifies theindexoftheanglesetting.
VisibleAreasofViews
Functions Introduced:
•ProDrawingV iewV isibleare aTypeGet()
•ProDrawingV iewFullV isibleAr eaSet()
•ProDrawingV iewHalfV isibleAr eaGet()
•ProDrawingV iewHalfV isibleAr eaSet()
•ProDrawingV iewPartialV isibleAr eaSet()
•ProDrawingV iewPartialV isibleAr eaGet()
•ProDrawingV iewBro kenV isibleAr eaGet()
•ProDrawingV iewBro kenV isibleAr eaSet()
•ProDrawingV iewBro kenNumberGet()
Asyoudetailyourmodel,certainportionsofthemodelmaybemorerelevant
thanothersormaybeclearerifdisplayedfromadifferentviewpoint.
Thefunction ProDrawingViewVisibleareaTypeGet() retrievesthetype
ofvisibleareaforaspecifieddrawingviewintermsoftheenumerated type
ProDrawingViewVisibleareaType. Thevisibleareacanbeofthe
followingtypes:
•PRO_VIEW_FULL_AREA—The completedrawingviewisretainedasthe
visiblearea.
•PRO_VIEW_HALF_AREA—A portionofthemodelfromtheviewonone
sideofacuttingplaneisremoved.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingtypes:
•PRO_VIEW_FULL_AREA—The completedrawingviewisretainedasthe
visiblearea.
•PRO_VIEW_HALF_AREA—A portionofthemodelfromtheviewonone
sideofacuttingplaneisremoved.
Drawings 1227•PRO_VIEW_PARTIAL_AREA—A portionofthemodelinaviewwithina
closedboundaryisdisplayed.
•PRO_VIEW_BROKEN_AREA—A portionofthemodelviewfrombetween
twoormoreselectedpointsisremoved,andthegapbetweentheremaining
twoportionsisclosedwithinaspecifieddistance.
Thefunction ProDrawingViewFullVisibleAreaSet() retainsthe
specifieddrawingviewasthefullvisiblearea.
Thefunction ProDrawingViewHalfVisibleAreaGet()
Thefunction ProDrawingViewHalfVisibleAreaSet()
•plane_r ef—Specifies theselectionreferenceintermsoftheProSelection
objectthatdividesthedrawingview.Thecuttingplanecanbeaplanarsurface
oradatum,butitmustbeperpendicular tothescreeninthenewview.
•keep_side—Specifies thehalfsideofthemodelthatistoberetained.
•line_standar dProDrawingLineStandardType
○PRO_HVL_NONE—Specifies noline
○PRO_HVL_SOLID—Specifies asolidline.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•keep_side—Specifies thehalfsideofthemodelthatistoberetained.
•line_standar dProDrawingLineStandardType
○PRO_HVL_NONE—Specifies noline
○PRO_HVL_SOLID—Specifies asolidline.
○PRO_HVL_SYMMETRY—Specifies asymmetry line.
○PRO_HVL_SYMMETRY_ISO—Specifies anISO-standard symmetry line.
○PRO_HVL_SYMMETRY_ASME—Specifies anASME-standard symmetry
line
Thefunction ProDrawingViewPartialVisibleAreaGet()
Thefunction ProDrawingViewPartialVisibleAreaSet() assignsthe
followingargumentstodefinethepartialvisibleareaforaspecifieddrawing
view:
•ref_point—ProSelection
•curve_data—ProCurvedata
•show_boundaryProBooleanPRO_B_TRUE
Thefunction ProDrawingViewBrokenVisibleAreaGet() retrievesthe
brokenvisibleareaforaspecifieddrawingview.
Thefunction ProDrawingViewBrokenVisibleAreaSet() assignsthe
followingargumentstodefinethebrokenvisibleareaforaspecifieddrawing
view:
1228 Creo®Parametric TOOLKIT User’sGuide•dir—Specifies thedirectionofthebrokenlinesthatdefinethebrokenareatoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingargumentstodefinethebrokenvisibleareaforaspecifieddrawing
view:
1228 Creo®Parametric TOOLKIT User’sGuide•dir—Specifies thedirectionofthebrokenlinesthatdefinethebrokenareato
beremoved.Thedirectionisgivenbytheenumerated type
ProViewBrokenDir andtakesthefollowingvalues:
○PRO_VIEW_BROKEN_DIR_HORIZONTAL—Specifies thehorizontal
direction.
○PRO_VIEW_BROKEN_DIR_VERTICAL—Specifies thevertical
direction.
•first_sel—Specifies theselectionpointintermsoftheProSelection
objectforthefirstbreakline.
•second_sel—Specifies theselectionpointintermsoftheProSelection
objectforthesecondbreakline.
•line_style—Specifies thelinestyleforthebrokenlinesintermsofthe
enumerated typeProViewBrokenLineStyle. Itcanbeoneofthe
followingtypes:
○PRO_VIEW_BROKEN_LINE_STRAIGHT—Specifies astraightbroken
line.
○PRO_VIEW_BROKEN_LINE_SKETCH—Specifies arandomsketch
drawnbytheuserthatdefinesthebrokenline.
○PRO_VIEW_BROKEN_LINE_S_CURVE_OUTLINE—Specifies aS-
curveontheviewoutline.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxline.
○PRO_VIEW_BROKEN_LINE_SKETCH—Specifies arandomsketch
drawnbytheuserthatdefinesthebrokenline.
○PRO_VIEW_BROKEN_LINE_S_CURVE_OUTLINE—Specifies aS-
curveontheviewoutline.
○PRO_VIEW_BROKEN_LINE_S_CURVE_GEOMETRY—Specifies aS-
curveongeometry.
○PRO_VIEW_BROKEN_LINE_HEART_BEAT_OUTLINE—Specifies a
heartbeattypeofcurveontheviewoutline.
○PRO_VIEW_BROKEN_LINE_HEART_BEAT_GEOMETRY—Specifies a
heartbeattypeofcurveonthegeometry.
•curve_data—Specifies thesplinecurvedataintermsoftheProCurvedata
objectwhentheline_styleisofthetypePRO_VIEW_BROKEN_LINE_
SKETCH.
Thefunction ProDrawingViewBrokenNumberGet() returnsthenumberof
breaksdefinedforthebrokenvisiblearea.Twobrokenlinesdefineonebreak.
Note
Abrokenvisibleareacanbecreatedonlyforgeneralandprojectedview
types.
Drawings 1229SectionsofaView
Functions Introduced:
•ProDrawingV iewSectionT ypeGet()
•ProDrawingV iew2DSectionGet()
•ProDrawingV iew2DSectionSet()
•ProDrawingV iew2DSectionNumberGet()
•ProDrawingV iew2DSectionFlip()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProDrawingV iewSectionT ypeGet()
•ProDrawingV iew2DSectionGet()
•ProDrawingV iew2DSectionSet()
•ProDrawingV iew2DSectionNumberGet()
•ProDrawingV iew2DSectionFlip()
•ProDrawingV iew2DSectionFlipGet()
•ProDrawingV iew3DSectionGet()
•ProDrawingV iew3DSectionSet()
•ProDrawingV iewSinglepartSectionGet()
•ProDrawingV iewSinglepartSectionSet()
•ProDrawingV iew2DSectionT otalSet()
•ProDrawingV iew2DSectionAr eaSet()
Thefunction ProDrawingViewSectionTypeGet() retrievesthesection
typeforaspecifieddrawingviewintermsoftheenumerated type
ProDrawingViewSectionType. Asectioncanbeofthefollowingtypes:
•PRO_VIEW_NO_SECTION—Specifies nosection.
•PRO_VIEW_TOTAL_SECTION—Specifies thecompletedrawingview.
•PRO_VIEW_AREA_SECTION—Specifies a2Dcrosssection.
•PRO_VIEW_3D_SECTION—Specifies a3Dcrosssection.
•PRO_VIEW_PART_SURF_SECTION—Specifies asectioncreatedoutofa
solidsurfaceoradatumquiltinthemodel.
Adrawingcanhavemany2Dcrosssectionsdefinedinit.Thesecrosssectionsarexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_VIEW_PART_SURF_SECTION—Specifies asectioncreatedoutofa
solidsurfaceoradatumquiltinthemodel.
Adrawingcanhavemany2Dcrosssectionsdefinedinit.Thesecrosssectionsare
indexed.Thefirstcrosssectionhasitsindexnumbersetto0.Depending onwhich
2Dcrosssectionyouwanttoworkwith,specifytheindexnumber.
Thefunction ProDrawingView2DSectionGet() retrievesthe2Dcross
sectionforaspecifieddrawingview.
Thefunction ProDrawingView2DSectionSet() assignsthefollowing
argumentstodefinethe2Dcrosssectionforadrawingview:
•sec_name—Specifies thenameofthe2Dcrosssection.
1230 Creo®Parametric TOOLKIT User’sGuide•sec_ar ea_type—Specifies thetypeofsectionarea.Thesectionareaisgivenby
theenumerated typeProDrawingViewSectionAreaType andcanbeof
thefollowingtypes:
○PRO_VIEW_SECTION_AREA_FULL—Sectioning isappliedtofull
drawingview.
○PRO_VIEW_SECTION_AREA_HALF—Sectioning isappliedtohalf
drawingviewdepending upontheinputsforhalfside.
○PRO_VIEW_SECTION_AREA_LOCAL—Specifies localsectioning.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawingview.
○PRO_VIEW_SECTION_AREA_HALF—Sectioning isappliedtohalf
drawingviewdepending upontheinputsforhalfside.
○PRO_VIEW_SECTION_AREA_LOCAL—Specifies localsectioning.
○PRO_VIEW_SECTION_AREA_UNFOLD—Unfold thedrawingviewand
sectionit.
○PRO_VIEW_SECTION_AREA_ALIGNED—Sectioning isasperthe
alignedviews.
•ref_sel—Specifies theselectionreferenceintermsoftheProSelection
object.
•curve_data—Specifies thesplinecurvedataintermsoftheProCurvedata
handle.
•arrow_display_view—Specifies thedrawingview,thatis,eithertheparentor
childview,wherethesectionarrowistobedisplayed.
Note
ForasectionareaoftypePRO_VIEW_SECTION_AREA_FULL inthe
abovefunction,youcanpasstheinputarguments ref_sel, curve_data, and
arrow_display_view asNULL.
Thefunction ProDrawingView2DSectionNumberGet() retrievesthe
numberof2Dcrosssectionsdefinedforadrawingview.
Thefunction ProDrawingView2DSectionFlip() flipsthedirectionof2D
crosssectioninadrawingview.Specifytheindexofthe2Dcrosssectionthatyou
wanttoflip.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnumberof2Dcrosssectionsdefinedforadrawingview.
Thefunction ProDrawingView2DSectionFlip() flipsthedirectionof2D
crosssectioninadrawingview.Specifytheindexofthe2Dcrosssectionthatyou
wanttoflip.
Usethefunction ProDrawingView2DSectionFlipGet() returnsa
booleanvaluethatindicatesthedirectioninwhichthe2Dcrosssectionhasbeen
clipped.Depending onthetypeofcrosssection,thebooleanvalueindicates
differentdirectionofclippingasbelow:
•Planarcrosssection—The booleanvalue:
○PRO_B_FALSE indicatesthatthecrosssectionhasbeenclippedinthe
directionofthepositivenormaltothecrosssectionplane.
Drawings 1231○PRO_B_TRUE indicatesthatthecrosssectionhasbeenclippedinthe
oppositedirectionofthepositivenormal.
•Offsetcrosssection—The integervalue:
○PRO_B_FALSE indicatesthatmaterialhasbeenremovedfromtheleftof
thecrosssectionentitiesiftheviewingdirectionisfromthepositiveside
oftheentityplane.
○PRO_B_TRUE indicatesthatthematerialhasbeenretainedfromtheleftof
thecrosssectionentitiesandrestofthematerialhasbeenremoved.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoftheentityplane.
○PRO_B_TRUE indicatesthatthematerialhasbeenretainedfromtheleftof
thecrosssectionentitiesandrestofthematerialhasbeenremoved.
Thefunction ProDrawingView3DSectionGet() retrievesthe3Dcross
sectionforaspecifieddrawingview.
Thefunction ProDrawingView3DSectionSet() assignsthefollowing
argumentstodefinea3Dcrosssectionforaview:
•sec_name —Specifies thenameofthe3Dcrosssection.
•show_x_hatch—Specifies aProBoolean valuethatdetermines whetherX-
hatchingisdisplayedinthe3Dcross-sectional view.Setthisargumentto
PRO_B_TRUE todisplayX-hatching.
Thefunction ProDrawingViewSinglepartSectionGet() retrievesthe
sectioncreatedoutofasolidsurfaceoradatumquiltinthemodelforaspecified
drawingview.
Thefunction ProDrawingViewSinglepartSectionSet() assignsthe
referenceselectionintermsoftheProSelection objectforthesolidsurfaceor
datumquiltthatisusedtocreatethesectionintheview.
ThefunctionsProDrawingView2DSectionTotalSet() and
ProDrawingView2DSectionAreaSet() enableyoutosetthevisibilityofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumquiltthatisusedtocreatethesectionintheview.
ThefunctionsProDrawingView2DSectionTotalSet() and
ProDrawingView2DSectionAreaSet() enableyoutosetthevisibilityof
modeledgesina2Dcrosssectionviewofadrawing.
Thefunction ProDrawingView2DSectionTotalSet() setsthevisibility
ofmodeledgestoTotal.Atotalcrosssectionshowsnotonlythecross-sectioned
area,butalsotheedgesofthemodelthatbecomevisiblewhenacrosssectionis
made.Heremodeledgesbehindthesectionplanesaswellassectionedgesare
displayed.
Thefunction ProDrawingView2DSectionAreaSet() setsthevisibilityof
modeledgestoArea.Anareacrosssectiondisplaysonlythecrosssectionwithout
thegeometry,thatis,onlysectionedgesaredisplayed.
ViewStates
Functions Introduced:
•ProDrawingV iewSimplifiedGet()
•ProDrawingV iewSimplifiedSet()
1232 Creo®Parametric TOOLKIT User’sGuide•ProDrawingV iewExplodedGet()
•ProDrawingV iewExplodedSet()
Thefunctions ProDrawingViewSimplifiedGet() and
ProDrawingViewSimplifiedSet() retrieveandsetthesimplifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDrawingV iewExplodedSet()
Thefunctions ProDrawingViewSimplifiedGet() and
ProDrawingViewSimplifiedSet() retrieveandsetthesimplified
representation foraspecifieddrawingview.
Thefunctions ProDrawingViewExplodedGet() and
ProDrawingViewExplodedSet() retrieveandsettheexplodedstatefora
specifieddrawingview.
Example7:CreatingDrawingViewsandAccessing
theirProperties
ThesamplecodeinthefileUgNotesColor.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_dwg createsboth
generalandprojection typesofdrawingviewsandaccessestheviewscale,
orientation, explodedstate,andvisibleareasofthecreateddrawingviews.
DrawingModels
Functions Introduced:
•ProDrawingSolidsCollect()
•ProDrawingSolidsV isit()
•ProDrawingSolidAdd()
•ProDrawingSolidDelete()
•ProDrawingSimpre psCollect()
•ProDrawingAsmsimpr epAdd()
•ProDrawingAsmsimpr epDelete()
•ProDrawingSolidReplace()
•ProDrawingCurr entsolidGet()
•ProDrawingCurr entsolidSet()
Thefunction ProDrawingSolidsCollect() outputsanarrayofthesolidsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDrawingAsmsimpr epDelete()
•ProDrawingSolidReplace()
•ProDrawingCurr entsolidGet()
•ProDrawingCurr entsolidSet()
Thefunction ProDrawingSolidsCollect() outputsanarrayofthesolids
attachedtothedrawing,includingthosenotcurrentlydisplayedinaview.
Function ProDrawingSolidsVisit() isavisitfunctionoftheusualform
whichvisitsthesamesolids.
Thefunction ProDrawingSolidAdd() addsanewsolidtoadrawing,but
doesnotdisplayit.(Tocreateadrawingview,refertotheCreatingViewsonpage
1222section.)
Drawings 1233ProDrawingSolidDelete() deletesasolidfromadrawing,providedthat
solidisnotcurrentlydisplayedinaview.
Functions
ProDrawingSimprepsCollect(),ProDrawingAsmsimprepAdd(),
andProDrawingAsmsimprepDelete() aretheequivalents totheabove
functionsbuttakeahandletoasimplified rep.
Thefunction ProDrawingSolidReplace() replacesadrawingmodelsolid
withanothersolid.Theoldandnewsolidsmustbemembersofthesamefamily
table.Thefollowingexamplecodedescribesthisfunction.
Thefunctions ProDrawingCurrentsolidGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwithanothersolid.Theoldandnewsolidsmustbemembersofthesamefamily
table.Thefollowingexamplecodedescribesthisfunction.
Thefunctions ProDrawingCurrentsolidGet() and
ProDrawingCurrentsolidSet() provideaccesstothecurrentsolidmodel
foragivendrawing.
Example8:ReplaceDrawingModelSolidwithaSolid
ThesamplecodeinthefileUgDrawingSolidReplace.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_drawing
showshowtoreplaceadrawingmodelsolidwithasolid.
DetailItems
Thefunctionsdescribedinthissectionoperateondetailitems.Detailitemsare
thosedrawingitemsthatyoucreateinCreoParametric inthedrawings.
InCreoParametric TOOLKIT, youhavetheabilitytocreate,delete,andmodify
detailitems,controltheirdisplay,andexaminewhatdetailitemsarepresentinthe
drawing.
TheretypesofdetailitemsavailableinCreoParametric TOOLKITare:
•Draftentities—Contain thegraphicalitemscreatedinCreoParametric using
theoptionsundertheSketchtab,intheSketching group.Someoftheitems
areasfollows:
○Arc
○Ellipse
○Line
○Point
○Polygon
○Splinexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Draftentities—Contain thegraphicalitemscreatedinCreoParametric using
theoptionsundertheSketchtab,intheSketching group.Someoftheitems
areasfollows:
○Arc
○Ellipse
○Line
○Point
○Polygon
○Spline
•Notes—Textualannotations createdinCreoParametric usingthecommand
Annotate ▶▶Note.Theycanalsocontainspecialsymbols.
1234 Creo®Parametric TOOLKIT User’sGuide•Symboldefinitions—Named groupsofotherdetailitemsthattheCreo
Parametric usercansavetodisk.YoucreatetheminCreoParametric usingthe
optionsintheAnnotate ▶▶Symbolcommand.
•Symbolinstances—Instances ofasymbol.
•Draftgroups—Groups ofdetailitemssuchasdraftentities,notes,symbol
instances,anddrawingdimensions. YoucreatetheminCreoParametric using
thecommandSketch▶▶DraftGroup.
•OLEobjects—Object LinkingandEmbedding (OLE)objectsembedded inthe
CreoParametric drawingfilefromtheInsertObjectdialogboxthatopens
whenyouclickLayout▶▶Object.
AlldetailitemsareidentifiedbyDHandles whichareequivalent toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric drawingfilefromtheInsertObjectdialogboxthatopens
whenyouclickLayout▶▶Object.
AlldetailitemsareidentifiedbyDHandles whichareequivalent to
ProModelitem, andinheritfromProModelitem. Thisimpliesthatfunctions
suchasProSelectionModelitemGet(), ProSelectionAlloc(), and
ProModelitemInit(), canbeusedfordetailitems.Thevaluesofthetype
fieldforthetypesofdetailitemare:
•PRO_DRAFT_ENTITY—This typeisusedfordraftentitiesandOLEobjects.
Specialfunctionsexisttodistinguish OLEobjectsfromotherdetailentities.
•PRO_NOTE
•PRO_SYMBOL_DEFINITION
•PRO_SYMBOL_INSTANCE
•PRO_DRAFT_GROUP
Thereisgenericdetailobjectcalled ProDtlitem, whosetypefieldcantakeany
ofthesevalues,andisusedforarguments tofunctionsthatcanrepresentany
detailitem.Thefollowingobjecthandlesareusedinthemorespecificcases:
•ProDtlentity
•ProDtlnote
•ProDtlsymdef
•ProDtlsyminst
•ProDtlgroup
ListingDetailItems
Functions Introduced:
•ProDrawingDtlentitiesCollect()
•ProDrawingDtlentityV isit()
•ProDrawingDtlnotesCollect()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDtlentity
•ProDtlnote
•ProDtlsymdef
•ProDtlsyminst
•ProDtlgroup
ListingDetailItems
Functions Introduced:
•ProDrawingDtlentitiesCollect()
•ProDrawingDtlentityV isit()
•ProDrawingDtlnotesCollect()
•ProDrawingDtlnoteV isit()
Drawings 1235•ProDrawingDtlsymdefsCollect()
•ProDrawingDtlsymdefV isit()
•ProDrawingDtlsyminstsCollect()
•ProDrawingDtlsyminstV isit()
•ProDrawingDtlgr oupsCollect()
•ProDrawingDtlgr oupV isit()
•ProDrawingOLEobjectsV isit()
Thefunction ProDrawingDtlentitiesCollect() collectsallthedetail
entitiesinthespecifieddrawingandsheet.Settheinputargument symboltoNULL
ifyouarecollecting adetailiteminthedrawing.Ifyouarecollecting adraft
entityinasymboldefinition, setsymboltospecifytheowningsymboldefinition.
Note
Thefunction ProDrawingDtlentitiesCollect() willnotcollect
entitieswithspecialsymboldefinition, suchas,datumtargetsorparametric
connector symbols.
Thefunction ProDrawingDtlentityVisit() visitsallthedraftentities
storedinthespecifieddrawingandsheet.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentitieswithspecialsymboldefinition, suchas,datumtargetsorparametric
connector symbols.
Thefunction ProDrawingDtlentityVisit() visitsallthedraftentities
storedinthespecifieddrawingandsheet.
Note
Thefunction ProDrawingDtlentityVisit() willnotvisitentitieswith
specialsymboldefinition, suchas,datumtargetsorparametric connector
symbols.
Thefunction ProDrawingDtlnotesCollect() collectsallthenotesinthe
specifieddrawing.Settheinputargument symboltoNULLifyouarecollecting a
notefromthedrawing.Ifyouarecollecting anotefromasymboldefinition, set
symboltospecifytheowningsymboldefinition.
Thefunction ProDrawingDtlnoteVisit() visitsthenotesinthespecified
drawing.
Thefunction ProDrawingDtlsymdefsCollect() collectsthesymbol
definitions inthespecifieddrawing.
Thefunction ProDrawingDtlsymdefVisit() visitsthesymboldefinitions
inthedrawing.
Thefunction ProDrawingDtlsyminstsCollect() collectssymbol
instancesinthespecifieddrawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDrawingDtlsymdefVisit() visitsthesymboldefinitions
inthedrawing.
Thefunction ProDrawingDtlsyminstsCollect() collectssymbol
instancesinthespecifieddrawing.
1236 Creo®Parametric TOOLKIT User’sGuideThefunction ProDrawingDtlsyminstVisit() visitssymbolinstancesin
thespecifieddrawing.
Thefunction ProDrawingDtlgroupsCollect() collectsgroupsinthe
specifieddrawing.
Thefunction ProDrawingDtlgroupVisit() visitsgroupsinthespecified
drawing.
Thefunction ProDrawingOLEobjectsVisit() visitstheOLEobjects
embedded inthemodel.Specifythevisitactionandvisitfilterfunctions.
DisplayingDetailItems
Functions Introduced:
•ProDtlentityDraw()
•ProDtlentityErase()
•ProDtlnoteDraw()
•ProDtlnoteErase()
•ProDtlnoteShow()
•ProDtlnoteRemove()
•ProDtlsyminstDraw()
•ProDtlsyminstErase()
•ProDtlsyminstShow()
•ProDtlsyminstRemove()
•ProDtlgr oupDraw()
•ProDtlgr oupErase()
Eachofthedisplayable itemtypeshasfourdisplayfunctions.
TheShowfunctiondisplaysthedetailitem,suchthatitisrepaintedonthenextxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDtlsyminstRemove()
•ProDtlgr oupDraw()
•ProDtlgr oupErase()
Eachofthedisplayable itemtypeshasfourdisplayfunctions.
TheShowfunctiondisplaysthedetailitem,suchthatitisrepaintedonthenext
draftregeneration.
TheRemovefunctionundrawsthedetailitempermanently ,sothatitisnot
redrawnonthenextdraftregeneration.
TheDrawfunctiondrawsthedetailitemtemporarily ,sothatitisremovedonthe
nextdraftregeneration.
TheErasefunctionundrawsthedetailitemtemporarily ,sothatitisredrawnon
thenextdraftregeneration, ifitwaspreviously “shown”.
UsetheShowfunctionaftercreatinganitem,andtheRemovefunctionbefore
deletingit.UsetheErasefunctionbeforemodifying anitem,andtheDraw
functionafterwards.
Drawings 1237Note
Thesefunctionsrequirethatthedrawingmustbethecurrentlydisplayed
model.Tocreateormodifydetailitemsinamodelthatisnotcurrently
displayed, usetheattributesinthedatastructuresrelatedtoDisplay.For
exampleuseProDtlnotedataDisplayedSet() tosettheitemtobe
savedwiththedisplayedstatusturnedon,sothatthenextretrievalofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplayed, usetheattributesinthedatastructuresrelatedtoDisplay.For
exampleuseProDtlnotedataDisplayedSet() tosettheitemtobe
savedwiththedisplayedstatusturnedon,sothatthenextretrievalofthe
modelwilldisplaytheitem.
Creating,ModifyingandReadingDetailItems
Functions Introduced:
•ProDtlentityCre ate()
•ProDtlentityDataGet()
•ProDtlentityDelete()
•ProDtlentityModify()
•ProDtlentityErase()
•ProDtlentityIsOLEObject()
•ProDtlnoteCre ate()
•ProDtlnoteDataGet()
•ProDtlnoteDelete()
•ProDtlnoteLineEnvelopeGet()
•ProDtlnoteModify()
•ProDtlsymdefCre ate()
•ProDtlsymdefDataGet()
•ProDtlsymdefDelete()
•ProDtlsymdefModify()
•ProDtlsymdefT oModelCopy()
•ProDtlsyminstCre ate()
•ProDtlsyminstDataGet()
•ProDtlsyminstDelete()
•ProDtlsyminstModify()
•ProDtlgr oupCreat e()
•ProDtlgr oupDataGet()
1238 Creo®Parametric TOOLKIT User’sGuide•ProDtlgr oupDelete()
•ProDtlgr oupModify()
Foreachofthefivedetailitemtypesthereisanopaquedatastructurewhichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDtlgr oupCreat e()
•ProDtlgr oupDataGet()
1238 Creo®Parametric TOOLKIT User’sGuide•ProDtlgr oupDelete()
•ProDtlgr oupModify()
Foreachofthefivedetailitemtypesthereisanopaquedatastructurewhich
describesthecontentsofthedetailitem.Youbuildtheappropriate datastructure
first,usingfunctionsprovidedforthatpurpose,andthenpassitasinputtothe
appropriate Create() function.The*DataGet() functionsoutputafilled
structuredescribing anexistingdetailitem.Thedatastructuresarebuiltand
unpackedbytheirownfunctionsforthatpurposedescribedinthefollowing
sections.
Thefunction ProDtlentityDataGet() returnsastructurethatcontains
information aboutthespecifieddetailitem,inadrawingorinasymboldefinition.
Note
Thefunctions ProDtlentityDataGet(), ProDtlentityCreate(),
ProDtlentityDelete(), andProDtlentityModify cannotaccess
symboldefinitions forspecialsymbols,suchas,datumtargetsorparametric
connector symbols.Forsuchsymbols,thefunctionsreturntheerrorPRO_TK_
GENERAL_ERROR.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsymboldefinitions forspecialsymbols,suchas,datumtargetsorparametric
connector symbols.Forsuchsymbols,thefunctionsreturntheerrorPRO_TK_
GENERAL_ERROR.
Thefunctions ProDtlnoteDataGet() andProDtlsyminstDataGet()
haveanargumentforthedisplaymode.Bothnotesandsymbolsmaycontain
parameterized text,andthedisplaymodespecifieswhetherthedatastructure
outputbythe*DataGet() functionmustcontainthetextbeforesubstitution of
theparameters (SYMBOLIC mode),orafterthedisplayedtext(NUMERIC mode).
Ifusing ProDtlnoteDataGet() asafirststepinnotemodification, always
setmodetoSYMBOLIC orthemodification removestheparameterization. Refer
tosectionDetailNoteLineDataonpage1246formoreinformation.
Somedatastructurescontainarraysof,orpointersto,deeperstructureswhich
havetheirownmanipulation functions, alsodescribedinlatersections.Lower
leveldatastructuresshouldbebuiltbeforetheupperleveloneswhencreating
detailitems.Thedatastructuresandtheirmemberstructuresarelistedbelow.
•ProDtlentitydata—A draftentityxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxleveldatastructuresshouldbebuiltbeforetheupperleveloneswhencreating
detailitems.Thedatastructuresandtheirmemberstructuresarelistedbelow.
•ProDtlentitydata—A draftentity
•ProCurvedata—The 2Dgeometryoftheentity(described intheCore:3D
Geometry onpage168chapter)
•ProDtlnotedata—A detailnote
•ProDtlnoteline—A lineoftextinanote
•ProDtlnotetext—A segmentoftextinalinethatmayhaveit'sown
cosmeticproperties, suchasfont,height,andsoon
Drawings 1239•ProDtlattach—One structurefortheattachment ofthenoteitself,andone
perleaderonthenote
•ProDtlsymdefdata—A symboldefinition
•ProDtlsymdefattach—The typesofattachment supportforaninstance
ofthissymbol
•ProDtlsyminstdata—A symbolinstance
•ProDtlvartext—A variabletextsubstitution
Thesequenceofcallstocreateadraftentitycontaining, forexample,alinewould
be:
1.ProDtlentitydataAlloc()—Allocate theentitydata(seethesection
onDraftEntityDataonpage1241).
2.ProCurvedataAlloc()—Allocate memoryforacurvestructurexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbe:
1.ProDtlentitydataAlloc()—Allocate theentitydata(seethesection
onDraftEntityDataonpage1241).
2.ProCurvedataAlloc()—Allocate memoryforacurvestructure
3.ProLinedataInit()—Set thecurvestructuretodescribetherequiredline
byinitializing alinedatastructure.
4.ProDtlentitydataCurveSet()—Add thecurvedatatotheentitydata
(seethesectiononDraftEntityDataonpage1241).
5.ProDtlentityCreate()—Create theentity(seethesectiononCreating,
Modifying andReadingDetailItemsonpage1238).
Note
Youmustsetthedrawingviewbeforeattempting tocreateadetailentity,
unlessyouarecreatingentitiesinasymboldefinition. Theviewcanbea
traditional drawingviewobtainedthrough
ProDrawingViewsCollect(), orthedrawingsheetbackground
viewobtainedfromProDrawingBackgroundViewGet().
Theotherdetailitemsfollowthesameprinciples, althoughforsymboldefinitions
thereareaddedcomplexities; theseareexplainedinsectionCreatingaSymbol
Definition onpage1257.
Thefunction ProDtlentityIsOLEObject() identifiesifthespecifieddetailxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthereareaddedcomplexities; theseareexplainedinsectionCreatingaSymbol
Definition onpage1257.
Thefunction ProDtlentityIsOLEObject() identifiesifthespecifieddetail
entityisactuallyanOLEobject.Formoreinformation onOLEobjectsreferto
Accessing OLEObjectsonpage1243.
EachentityitemhasitsownDelete() functionwhichremovesitpermanently
fromtheCreoParametric drawing.
EachentityitemalsohasitsownModify() functionwhichpassesanewData
structure.
1240 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProDtlnoteErase() totemporarily undrawthenote(seethe
sectiononDisplaying DetailItemsonpage1237).
Thefunction ProDtlnoteDataGet() returnsthedataforthenote.
Thefunction ProDtlnotedataColorSet() modifiesthecolorinthedata
(seethesectiononDetailNoteDataonpage1250).
Thefunction ProDtlnoteModify() usesthemodifieddatatomodifythenote
itself.
Thefunction ProDtlnoteDraw() redrawsthenote(seethesectionon
Displaying DetailItemsonpage1237).
Thefunction ProDtlnoteLineEnvelopeGet() determines thescreenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxitself.
Thefunction ProDtlnoteDraw() redrawsthenote(seethesectionon
Displaying DetailItemsonpage1237).
Thefunction ProDtlnoteLineEnvelopeGet() determines thescreen
coordinates oftheenvelopearoundadetailnote.Thisenvelopeisdefinedbyfour
points.SeefigureDetailNoteEnvelopePointOrderforhowpointorderis
determined.
DetailNoteEnvelopePointOrder
Thefunction ProDtlsymdefToModelCopy() copiesaspecifiedsymbol
definitionfromonemodeltoanother.
Thefunction ProDtlsymdefDelete() deletesasymboldefinition. This
functionreturnstheerrorPRO_TK_GENERAL_ERROR whenthedeletionofa
symboldefinitionfromapartfails.
Thefunction ProDtlsymdefModify() modifiesasymboldefinition. The
inputargumentsarelistedbelow:
•symdef—Specifies thesymboldefinition.
•data—Specifies thesymboldefinitiondata.
DraftEntityData
Functions Introduced:
•ProDtlentitydataAlloc()
•ProDtlentitydataFre e()
•ProDtlentitydataIdGet()
Drawings 1241•ProDtlentitydataCurveGet()
•ProDtlentitydataCurveSet()
•ProDtlentitydataColorGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProDtlentitydataAlloc()
•ProDtlentitydataFre e()
•ProDtlentitydataIdGet()
Drawings 1241•ProDtlentitydataCurveGet()
•ProDtlentitydataCurveSet()
•ProDtlentitydataColorGet()
•ProDtlentitydataColorSet()
•ProDtlentitydataFontGet()
•ProDtlentitydataFontSet()
•ProDtlentitydataW idthGet()
•ProDtlentitydataW idthSet()
•ProDtlentitydataV iewGet()
•ProDtlentitydataV iewSet()
•ProDtlentitydataIsConstruction()
•ProDtlentitydataConstructionSet()
•ProDrawingDraftT oDraftent()
Theopaquedatastructurewhichdescribesthecontentsofadraftentityiscalled
ProDtlentitydata.
Theonlylower-levelopaquedatastructurecontainedbyProEntitydata is
ProCurvedata whichisalsousedforother2Dand3Dgeometry,especially
ImportFeatures,andisdescribedelsewhere.
Thefunctions ProDtlentitydataAlloc() and
ProDtlentitydataFree() allocateandfreeanopaqueentitydatastructure.
Functions ProDtlentitydataCurveGet() and
ProDtlentitydataCurveSet() getandsetthegeometryoftheentityin
theformofaProCurvdata object.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtlentitydataFree() allocateandfreeanopaqueentitydatastructure.
Functions ProDtlentitydataCurveGet() and
ProDtlentitydataCurveSet() getandsetthegeometryoftheentityin
theformofaProCurvdata object.
ProDtlentitydataColorGet() and
ProDtlentitydataColorSet() getandsetthecolorofthedraftentity.The
visibledatastructure ProColor, declaredinProDtlitem.h, canspecifythe
colorinthreeways:
•Bycolorindex,thatis,bychoosingoneofcolorspredefined inCreo
Parametric, represented bythevaluesofProColortype in
ProToolkit.h
•Bychoosingthedefaultcolorforthistypeofdetailitem.(Forentities,the
defaultisPRO_COLOR_DRAWING andfornotesthedefaultisPRO_COLOR_
LETTER.)
•Byspecifying thethreeRGBcolorvalues.
IfdoyoudonotcallProDtlentitydataColorSet() whencreatinganew
entity,thecolorwillbesettobethedefaultcolorfordraftentities.
1242 Creo®Parametric TOOLKIT User’sGuideProDtlentitydataFontGet() andProDtlentitydataFontSet()
getandsetthelinestylefontwhichdetermines thelinestyleusedtodisplaythexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1242 Creo®Parametric TOOLKIT User’sGuideProDtlentitydataFontGet() andProDtlentitydataFontSet()
getandsetthelinestylefontwhichdetermines thelinestyleusedtodisplaythe
entity.ThevaluesarethosewhichappearintheLineFontselectorintheModify
LineStyledialoginCreoParametric. Ifyoudonotcall
ProDtlentitydataFontSet() whencreatinganentity,thefontwillbe
SOLIDFONT.
ProDtlentitydataWidthGet() and
ProDtlentitydataWidthSet() getandsetthelinewidthofthedraft
entity.Thevalueisinterpreted inthesamewayasthevalueenteredintotheWidth
textboxinModifyLineStyledialogboxintheCreoParametric userinterface.The
value-1.0indicatesthattheentityshouldhavethedefaultwidthforentities
currentlysetforthedrawing.Ifyoudonotcall
ProDtlentitydataWidthSet() whencreatinganewentity,thewidthis
-1.0.
ProDtlentitydataViewGet() andProDtlentitydataViewSet()
getandsetthedrawingviewtowhichtheentitywillbeattached.Ifanentityis
attachedtoaview,itmoveswhenevertheCreoParametric usermovesthatview.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-1.0.
ProDtlentitydataViewGet() andProDtlentitydataViewSet()
getandsetthedrawingviewtowhichtheentitywillbeattached.Ifanentityis
attachedtoaview,itmoveswhenevertheCreoParametric usermovesthatview.
Entitiesnotattachedtoamodelviewmustbeassignedtothedrawingsheet
background viewinstead.
ProDtlentitydataIsConstruction() and
ProDtlentitydataConstructionSet() getandsettheflagthatcontrols
whethertheentityiscreatednormalorasaconstruction entity.
Usethefunction ProDrawingDraftToDraftent() toconvertaselectionof
typedrafttodraftentityinthespecifieddrawing.Theinputargumentsfollow:
•p_draw—Specifies thedrawingthatownsthedraftentity.
•p_sel_draft—A ProSelection objectthatrepresents theselectionoftype
asdraft.
Theoutputargument r_p_sel_draft_ent returnsthehandletotheconverted
selectionusingtheProSelection object.Theconverted selectionismanaged
bythefunctionthatcallsthefunction ProDrawingDraftToDraftent().
Example9:CreateaDraftLinewithPredefined ColorxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectionusingtheProSelection object.Theconverted selectionismanaged
bythefunctionthatcallsthefunction ProDrawingDraftToDraftent().
Example9:CreateaDraftLinewithPredefined Color
ThesamplecodeinthefileUgDtlentityExamples.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_drawing
showsautilitythatcreatesadraftlineinoneofthecolorspredefined inCreo
Parametric.
AccessingOLEObjects
Anobjectlinkingandembedding (OLE)objectisanexternalfile,suchasa
document, graphicsfile,orvideofilethatiscreatedusinganexternalapplication
andwhichcanbeinsertedintoanotherapplication, suchasCreoParametric. You
Drawings 1243cancreateandinsertsupported OLEobjectsintoatwo-dimensional Creo
Parametric file,suchasadrawing,report,formatfile,Notebook, ordiagram.The
functionsdescribedinthissectionenableyoutoidentifyandaccessOLEobjects
embedded indrawings.
FunctionDescription
•ProDrawingOLEobjectSheetGet()
•ProDrawingOLEobjectOutlineGet()
•ProDrawingOLEobjectApplicationtypeGet()
•ProDrawingOLEobjectPathGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxembedded indrawings.
FunctionDescription
•ProDrawingOLEobjectSheetGet()
•ProDrawingOLEobjectOutlineGet()
•ProDrawingOLEobjectApplicationtypeGet()
•ProDrawingOLEobjectPathGet()
Thefunction ProDrawingOLEobjectSheetGet() returnsthesheetnumber
fortheOLEobject.
Thefunction ProDrawingOLEobjectOutlineGet() returnstheextentof
theOLEobjectembedded inthedrawing.
Thefunction ProDrawingOLEobjectApplicationtypeGet() returns
thetypeoftheOLEobjectasastring,forexample, “Microsoft Word
Document”.
Thefunction ProDrawingOLEobjectPathGet() returnsthepathtothe
externalfileforeachOLEobject,ifitislinkedtoanexternalfile.
DetailNoteTextData
Functions Introduced:
•ProDtlnotetextAlloc()
•ProDtlnotetextFre e()
•ProTextStyleHeightGet()
•ProTextStyleHeightSet()
•ProTextStyleW idthGet()
•ProTextStyleW idthSet()
•ProTextStyleSlantAngleGet()
•ProTextStyleSlantAngleSet()
•ProTextStyleThicknessGet()
•ProTextStyleThicknessSet()
•ProTextStyleFontGet()
•ProTextStyleFontSet()
•ProDtlnotetextUlineGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProTextStyleSlantAngleGet()
•ProTextStyleSlantAngleSet()
•ProTextStyleThicknessGet()
•ProTextStyleThicknessSet()
•ProTextStyleFontGet()
•ProTextStyleFontSet()
•ProDtlnotetextUlineGet()
•ProDtlnotetextUlineSet()
1244 Creo®Parametric TOOLKIT User’sGuide•ProDtlnotetextStringGet()
•ProDtlnotetextStringSet()
•ProDtlnotetextStyleGet()
•ProDtlnotetextStyleSet()
•ProDtlnoteWr apTextGet()
•ProDtlnoteWr apTextSet
Eachlineofadrawingnotemaycontaintextinseveraldifferentfonts,heights,
andsoon.Soeachlineisdescribedintermsofanarrayoftextitems,whose
contentsaredescribedbythedatastructure ProDtlnotetext.
ProDtlnotetextAlloc() andProDtlnotetextFree() allocateand
freeaProDtlnotetext datastructure.
ProTextStyleHeightGet() andProTextStyleHeightSet() getand
settheheightofthetext.Thevalue-1.0meansthatthetexthasthedefaultheight
fortextcurrentlyspecifiedforthedrawing.
ProTextStyleWidthGet() andProTextStyleWidthSet() getandset
thewidthfactorofthetext.Thewidthfactoristheratioofthewidthofeachxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfortextcurrentlyspecifiedforthedrawing.
ProTextStyleWidthGet() andProTextStyleWidthSet() getandset
thewidthfactorofthetext.Thewidthfactoristheratioofthewidthofeach
charactertotheheight.Thevalue-1.0meansthatthewidthfactorhasthedefault
valuefortextcurrentlyspecifiedforthedrawing.
ProTextStyleSlantAngleGet() and
ProTextStyleSlantAngleSet() getandsettheslantangleofthetext.
ProTextStyleThicknessGet() and
ProTextStyleThicknessSet() getandsetthelinethicknessofthetext.
Thevalue-1.0meansthatthetexthasthedefaultthicknessfortextcurrently
specifiedforthedrawing.
ProTextStyleFontGet() andProTextStyleFontSet() getandset
thefontusedtodisplaythetext.
ProDtlnotetextUlineGet() andProDtlnotetextUlineSet() get
andsetwhetherthetextitemisunderlined. Thedefaultisnounderline.
ProDtlnotetextStringGet() andProDtlnotetextStringSet()
getandsetthestringofcharacters containedinthetextitem.
Thefunctions ProDtlnotetextStyleGet() and
ProDtlnotetextStyleSet() retrieveandsetthetextstyleforthespecifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgetandsetthestringofcharacters containedinthetextitem.
Thefunctions ProDtlnotetextStyleGet() and
ProDtlnotetextStyleSet() retrieveandsetthetextstyleforthespecified
textasaProTextStyle structure.IttakesasinputtheProDtlnotetext
object.
ProDtlnoteWrapTextGet() andProDtlnoteWrapTextSet() getand
setthewrapstatusofthetextforaspecifiednoteinadrawing.
Drawings 1245Thefunction ProDtlnoteWrapTextSet() setsthetextwrappingstatusto
ONorOFF.Theinputargumentsarelistedbelow:
•note—Specifies thenoteforwhichthewrapstatusistobeset.
•wrap—Specifies ifthetextiswrapped.Towrapthetext,specifythevalueas
Pro_B_True.
•wrapwidth—Specifies thewidthofthewrappedtextline,iftheinputargument
wrapissettoPro_B_True.
DetailNoteLineData
Functions Introduced:
•ProDtlnotelineAlloc()
•ProDtlnotelineFr ee()
•ProDtlnotelineT extAdd()
•ProDtlnotelineT extsSet()
•ProDtlnotelineT extsCollect()
TheProDtlnoteline datastructuredescribesthecontentsofasinglelineof
textinadetailnote.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDtlnotelineFr ee()
•ProDtlnotelineT extAdd()
•ProDtlnotelineT extsSet()
•ProDtlnotelineT extsCollect()
TheProDtlnoteline datastructuredescribesthecontentsofasinglelineof
textinadetailnote.
ProDtlnotelineAlloc() andProDtlnotelineFree() allocateand
freeaProDtlnoteline structure.
ProDtlnotelineTextAdd() addsatextitem,describedbya
ProDtlnotetext datastructure,toanoteline.Ifthelinealreadycontained
textitems,thenewoneisaddedattheendofthearray.
ProDtlnotelineTextsSet() setsthecontentsofawholetextline,by
providinganewarrayofProDtlnotetext items.Ifthenotelinealready
containedtextitems,theyarereplacebythenewones.
ProDtlnotelineTextsCollect() outputsanarrayofthetextitems
containedinaspecifiedtextline.
PointstonoteaboutTextLinesandparameterization:
•IfthestringinaTextLineyouputinanotecontainsoneormoreparameters,
CreoParametric willdividetheTextLineintoseveralTextItemstoensure
thateachparameter hasitsownTextItem.
•WhenyoulookatthetextinanexistingnotebyusingthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric willdividetheTextLineintoseveralTextItemstoensure
thateachparameter hasitsownTextItem.
•Whenyoulookatthetextinanexistingnotebyusingthefunction
ProDtlnoteDataGet() withthemodeoptionsettoSYMBOLIC (thatis,
toseethetextbeforesubstitution oftheparameters), youwillseethetext
bracketing andtextitemidentifiers thatyoualsoseewhenyoueditatextline
inCreoParametric.
Forexample,ifyoumakeatextlinecontaining asingletextitemwiththetext
1246 Creo®Parametric TOOLKIT User’sGuide"model =&model_name"
CreoParametric willputthe&model_name intoaseparatetextitemwhenthe
noteiscreated.IfyouthenuseProDtlnoteDataGet() onthecreated
notewiththemodeoptionsettoSYMBOLIC, youwillseethefollowingtwo
textitemsintherelevanttextline
"model =" "&model_name"
IfyousetmodetoNUMERIC, youseethesetextitems:
"model =" "MODEL"
where MODEListhenameofthemodel.
Note
CreoParametric doesnotresolveandreplacesymboliccalloutsfornotes
whicharenotdisplayed. Therefore, ifthenoteisnotdisplayedorishiddenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"model =" "MODEL"
where MODEListhenameofthemodel.
Note
CreoParametric doesnotresolveandreplacesymboliccalloutsfornotes
whicharenotdisplayed. Therefore, ifthenoteisnotdisplayedorishidden
inalayer,thetextretrievedmaycontainsymboliccallouts,evenwhenthe
modeissettoNUMERIC.
NotethatProDtlnotetextStringGet() doesnotreturnthe
bracketsandnumbersforeachindividual textentity.Inaddition,the
functiondoesnotreturnthespecialescapecharacters (suchas\})to
representcharacters previously provided.
RefertothesectionCreatingaSymbolDefinition onpage1257fora
description ofhowtofindwhichCreoParametric modelownsthe
parameter referredtobyparameterized text.
DetailAttachments andLeaders
Functions Introduced:
•ProDtlattachAlloc()
•ProDtlattachGet()
•ProDtlattachSet()
•ProDtlattachFr ee()
•ProDtlattachArr owtypeGet()
•ProDtlattachArr owtypeSet()
Theopaquedatastructure ProDtlattach isusedfortwotasks:
•Thewayinwhichadrawingnoteorasymbolinstanceisattachedtothe
drawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDtlattachArr owtypeGet()
•ProDtlattachArr owtypeSet()
Theopaquedatastructure ProDtlattach isusedfortwotasks:
•Thewayinwhichadrawingnoteorasymbolinstanceisattachedtothe
drawing.
•Thewayinwhichaleaderonadrawingnoteorsymbolinstanceisattached.
Drawings 1247EachnoteandsymbolinstancemustcontainoneProDtlattach todescribeits
attachment inthedrawing,andmaycontainanynumberofProDtlattach
objectsdescribing theleaders.
ProDtlattachAlloc() allocatesandinitializesthememoryforadetail
attachment. Theinputsare:
•type—The typeofattachment tothedrawingview.Thedetailattachment types
areasfollows:
○FREE—The attachment istoa2Dlocationinthedrawingview.
○PARAMETRIC—The attachment istoapointonasurfaceoranedgeofa
solid.
○OFFSET—The attachment isoffsettoanotherdrawingview,toamodel
item,ortoa3Dmodelannotation.
Note
Youcannotattachasymbolto3Dmodelannotation usingtheOFFSET
attachment type.
•view—The drawingview.IfthetypeisFREE,theattachment isrelativetothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxitem,ortoa3Dmodelannotation.
Note
Youcannotattachasymbolto3Dmodelannotation usingtheOFFSET
attachment type.
•view—The drawingview.IfthetypeisFREE,theattachment isrelativetothe
drawingview,thatistheattachment moveswhenthedrawingviewismoved.
ThisisNULL,ifthedetailattachment isnotrelatedtothedrawingview,butis
placedataspecifiedlocationinthedrawingsheet,oriftheattachment is
offsettoamodelitemortoa3Dmodelannotation.
•location—If thetypeisFREEorOFFSET,thisargumentprovidesthelocation
oftheattachment. Thislocationisinscreencoordinates fordrawingitems,
symbolinstancesandsurfacefinishesonflat-to-screen annotation planes,and
inmodelcoordinates forsymbolsandsurfacefinisheson3Dmodelannotation
planes.Thedistancefromthislocationtothelocationoftheitemtowhichthe
detailitemisattached(givenbytheargument attach_point) issavedasthe
offsetdistanceforanOFFSETattachment.
•attach_point—If thetypeisPARAMETRIC orOFFSET,this
ProSelection structureprovidesthelocationoftheitemtowhichthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoffsetdistanceforanOFFSETattachment.
•attach_point—If thetypeisPARAMETRIC orOFFSET,this
ProSelection structureprovidesthelocationoftheitemtowhichthe
detailitemisattached.Thisincludesthedrawingviewinwhichthe
attachment ismade.Ifyouarebuildingthisstructureusing
ProSelectionAlloc(), setthelocationusing
ProSelectionUvParamSet(), andthedrawingviewusing
ProSelectionViewSet().
Usethefunction ProDtlattachSet() tosettheabove ProDtlattach
information foranexistingattachment.
1248 Creo®Parametric TOOLKIT User’sGuideThefunction ProDtlattachGet() unpackstheaboveinformation foran
existingattachment. Theoutputargumentsare:
•type—The typeofattachment tothedrawingview.Thedetailattachment types
areasfollows:
○FREE—The attachment istoa2Dlocationinthedrawingview.
○PARAMETRIC—The attachment istoapointonasurfaceoranedgeofa
solidinadrawingview.
○OFFSET—The attachment isoffsettoanotherdrawingview,toamodel
item,ortoa3Dmodelannotation.
○UNIMPLEMENTED—The attachment istoanitemthatisnotcurrentlyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsolidinadrawingview.
○OFFSET—The attachment isoffsettoanotherdrawingview,toamodel
item,ortoa3Dmodelannotation.
○UNIMPLEMENTED—The attachment istoanitemthatisnotcurrently
supported inCreoParametric TOOLKIT. However,youcanstillretrieve
thelocationandtheviewtowhichtheattachment isconnected.
○SUPPRESSED—The attachment istoanitem,whichismissingfromthe
drawingorpart.
•view—IfthetypeisFREEorUNIMPLEMENTED, thisargumentspecifiesthe
drawingview.ThisisNULL,ifthedetailattachment isnotrelatedtothe
drawingview,butisplacedataspecifiedlocationinthedrawingsheet,orif
theattachment isoffsettoamodelitemortoa3Dmodelannotation.
•location—If thetypeisFREE, OFFSET,orUNIMPLEMENTED, thisargument
specifiesthelocationoftheattachment. Thislocationisinscreencoordinates
fordrawingitems,symbolinstancesandsurfacefinishesonflat-to-screen
annotation planes,andinmodelcoordinates forsymbolsandsurfacefinishes
on3Dmodelannotation planes.Thedistancefromthislocationtothelocationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxannotation planes,andinmodelcoordinates forsymbolsandsurfacefinishes
on3Dmodelannotation planes.Thedistancefromthislocationtothelocation
oftheitemtowhichthedetailitemisattached(givenbytheargument attach_
point)issavedastheoffsetdistanceforanOFFSETattachment.
•attach_point —IfthetypeisPARAMETRIC orOFFSET,thisargument
providesthelocationoftheitemtowhichthedetailitemisattached.This
includesthedrawingviewinwhichtheattachment ismade.
ProDtlattachFree() freesanattachment thatwasallocatedwith
ProDtlattachAlloc().
Thefunction ProDtlattachArrowtypeGet() returnsthetypeofarrowhead
usedfortheleadersattachedtoadrawingnoteorsymbolinstance.Usethe
function ProDtlattachArrowtypeSet() toassignthetypeofarrowhead.
Drawings 1249Note
Thefunctions ProDtlattachArrowtypeGet() and
ProDtlattachArrowtypeSet() areapplicable onlyfor
ProDtlattach leaderattachment objectsobtainedusingthefunctions
ProDtlsyminstdataLeadersCollect() and
ProDtlnotedataLeadersCollect().
DetailNoteData
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtlattach leaderattachment objectsobtainedusingthefunctions
ProDtlsyminstdataLeadersCollect() and
ProDtlnotedataLeadersCollect().
DetailNoteData
Functions Introduced:
•ProDtlnotedataAlloc()
•ProDtlnotedataFre e()
•ProDtlnotedataIdGet()
•ProDtlnotedataLineAdd()
•ProDtlnoteldataLinesSet()
•ProDtlnotedataLinesCollect()
•ProTextStyleMirr orGet()
•ProTextStyleMirr orSet()
•ProTextStyleColorGetW ithDef()
•ProTextStyleColorSetW ithDef()
•ProDtlnotedataAttachmentGet()
•ProDtlnotedataAttachmentSet()
•ProDtlnotedataLeadersCollect()
•ProDtlnotedataLeadersSet()
•ProDtlnotedataLeaderAdd()
•ProDtlnotedataElbowlengthGet()
•ProDtlnotedataElbowlengthSet()
•ProTextStyleAngleGet()
•ProTextStyleAngleSet()
•ProTextStyleJustificationGet()
•ProTextStyleJustificationSet()
•ProTextStyleV ertJustificationGet()
•ProTextStyleV ertJustificationSet()
1250 Creo®Parametric TOOLKIT User’sGuide•ProDtlnotedataIsDisplayed()
•ProDtlnotedataDisplayedSet()
•ProDtlnoteDtlsyminstsCollect()
•ProDtlnotedataT extStyleGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProTextStyleV ertJustificationSet()
1250 Creo®Parametric TOOLKIT User’sGuide•ProDtlnotedataIsDisplayed()
•ProDtlnotedataDisplayedSet()
•ProDtlnoteDtlsyminstsCollect()
•ProDtlnotedataT extStyleGet()
•ProDtlnotedataT extStyleSet()
•ProDtlnoteT ableCellGet()
Theobject ProDtlnotedata isanopaquepointertoadatastructurethat
describesthecontentsofadrawingnote.
ProDtlnotedataAlloc() andProDtlnotedataFree() allocateand
freememoryforthedata.
ProDtlnotedataIdGet() givesyoutheintegeridofthenoteinCreo
Parametric thatthedatadescribes. ThiswillbesetiftheProDtlnotedata has
beenacquiredusing ProDtlnoteDataGet(). Itisnotnecessarytosetthis
whencreatinganote;thefunction ProDtlnoteCreate() willassignanidto
thenewnote.
ProDtlnotedataLineAdd() addsaProDtlnoteline objecttoa
ProDtlnotedata description. Ifthenotealreadycontainslinesoftext,thenew
linewillbeaddedattheend.
ProDtlnoteldataLinesSet() setsanarrayofProDtlnoteline objects
asthelinesinaProDtlnotedata description. Ifthenotealreadycontainstextxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlinewillbeaddedattheend.
ProDtlnoteldataLinesSet() setsanarrayofProDtlnoteline objects
asthelinesinaProDtlnotedata description. Ifthenotealreadycontainstext
lines,theywillbereplacedbythenewlines.
ProDtlnotedataLinesCollect() outputsanarrayof
ProDtlnoteline objectsdescribing thelinesinagiven ProDtlnotedata
description.
ProTextStyleMirrorSet() specifiestheoptiontomirrorthenote.Specify
theinputargument mirrortotruetomirrorthenote.
ProTextStyleMirrorGet() returnsthemirroringoptionspecifiedforthe
note.
ProTextStyleColorGetWithDef() and
ProTextStyleColorSetWithDef() getandsetthecolorforthenote.If
youdonotcallProTextStyleColorSetWithDef() whencreatinganote,
thenotewillhavethedefaultcolordefinedbyPRO_COLOR_METHOD_
DEFAULT. RefertotheDraftEntityDataonpage1241sectionforafuller
description oftheProColor object.
ProDtlnotedataAttachmentGet() and
ProDtlnotedataAttachmentSet() getandsettheProDtlattach
objectwhichdescribestheattachment ofthenote,thatis,whereandhowitis
positioned onthedrawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtlnotedataAttachmentGet() and
ProDtlnotedataAttachmentSet() getandsettheProDtlattach
objectwhichdescribestheattachment ofthenote,thatis,whereandhowitis
positioned onthedrawing.
Drawings 1251ProDtlnotedataLeadersCollect() outputsanarrayof
ProDtlattach objectswhichdescribedtheattachment pointsoftheleaderson
thenote.ProDtlnotedataLeadersSet() addsandarrayofleaderstoa
note,replacingexistingleaders. ProDtlnotedataLeaderAdd() addsanew
leadertotheendofthearrayofcurrentleadersonanote.
ProDtlnotedataElbowlengthGet() and
ProDtlnotedataElbowlengthSet() getandsetthelengthoftheelbow
thatconnectseachleadertothenote.Ifyoudonotcall
ProDtlnotedataElbowlengthSet() whencreatinganote,therewillbe
noelbow.
Thefunctions ProTextStyleAngleGet() and
PProTextStyleAngleSet() getandsettheangleofrotationofthenote.If
youdonotcallProTextStyleAngleSet() whencreatingthenote,the
rotationdefaultsto0.0.
Thefunctions ProTextStyleJustificationGet() and
ProTextStyleJustificationSet() returnandsetthehorizontalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyoudonotcallProTextStyleAngleSet() whencreatingthenote,the
rotationdefaultsto0.0.
Thefunctions ProTextStyleJustificationGet() and
ProTextStyleJustificationSet() returnandsetthehorizontal
justification forthetextstyleobject.Thefunctions
ProTextStyleVertJustificationGet() and
ProTextStyleVertJustificationSet() returnandsetthevertical
justification forthetextstyleobject.Verticaljustification appliesonlytonotesin
drawingtablesandOnItemnotes.
ProDtlnotedataIsDisplayed() and
ProDtlnotedataDisplayedSet() retrieveandsettheflagthatcontrols
whetherthenoteisvisibleornot.Ifthenoteiscreatedwiththisflagsettotrue,
regenerate thedrawingusing ProDwgDraftRegenerate() toseethe
displayednote.
ProDtlnoteDtlsyminstsCollect() returnsalistofallthesymbol
instancesthataredeclaredinadetailnoteviathe“sym()”calloutformat.The
symbolinstancesarereturnedintheordertheyareencountered inthenotetext.
Thefunctions ProDtlnotedataTextStyleGet() and
ProDtlnotedataTextStyleSet() retrieveandsetthetextstyleforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsymbolinstancesarereturnedintheordertheyareencountered inthenotetext.
Thefunctions ProDtlnotedataTextStyleGet() and
ProDtlnotedataTextStyleSet() retrieveandsetthetextstyleforthe
specifiednoteasaProTextStyle structure.Ittakesasinputthe
ProDtlnotedata object.
Ifthenotehastextswithdifferentstyles,thestylereturnedbythefunction
ProDtlnotedataTextStyleGet() willhavemixedstateforattributes. The
attributesarenotthesameforalltexts.Insuchacaseofmixedattribute,if
functionsuchasProTextStyleFontGet() iscalled,theerrorPRO_TK_
GENERAL_ERROR isreturned.
Thefunction ProDtlnoteTableCellGet() returnstheinformation onthe
rowsandcolumnswithinatableforthespecifiedtablenote.Theinformation is
givenbythefollowingoutputarguments:
•table—Specifies thetable.
1252 Creo®Parametric TOOLKIT User’sGuide•p_row—Specifies theindexedrowthatstartsat0.
•p_col—Specifies theindexedcolumnthatstartsat0.
Example10:CreateDrawingNoteatSpecifiedLocationwith
LeadertoSurfaceandSurfaceNamexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•p_col—Specifies theindexedcolumnthatstartsat0.
Example10:CreateDrawingNoteatSpecifiedLocationwith
LeadertoSurfaceandSurfaceName
ThesamplecodeinthefileUgDtlnoteExamples.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
drawing, showsafunctionwhichcreatesadrawingnoteataspecifiedlocation,
withaleaderattachedtoasolidsurface,andwhichshowsthenameofthesurface.
Read-OnlyNotes
Functions Introduced:
•ProDtlnotedataReadonlySet()
•ProDtlnotedataReadonlyGet()
•ProDrawingReadonlyselectionAllow()
Youcanmakeanexistingdrawingnoteunselectable byCreoParametric usersif
youwishtoprotectitfrommodification. Thefunctions
ProDtlnotedataReadonlySet() and
ProDtlnotedataReadonlyGet() setandgetthispropertyon
ProDtlnotedata objects.Usefunction
ProDtlnotedataReadonlySet() inconjunction with
ProDtlnoteDataGet() andProDtlnoteModify() tochangethesetting.
Thefunction ProDrawingReadonlyselectionAllow() willtemporarily
allowtheselectionofread-onlynotes.
Parameterized NoteText
Functionintroduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDrawingReadonlyselectionAllow() willtemporarily
allowtheselectionofread-onlynotes.
Parameterized NoteText
Functionintroduced:
•ProDtlnoteModelr efGet()
Anoteinadrawing,orinasymboldefinition, canbeparameterized. Thismeans
thatitcontainsthenameofaparameter fromaCreoParametric model,preceded
bya'&'.The'&'andtheparameter namearereplacedbythevalueofthe
parameter whenthenoteisdisplayed, orwhenthesymbolisinstantiated.
Theparameterizations indifferentnotesandsymbolsinasingledrawingmay
refertoparameters ondifferentCreoParametric models,depending uponthe
historyofthedrawing.Thefunction ProDtlnoteModelrefGet() allows
youtofindoutwhichmodelisreferredtobyaspecificparameter.
Drawings 1253Cross-referencing GtolsandDrawingAnnotations
Thefunctionsdescribedinthissectionprovidethedrawingobjectthatrepresents
ashowngtol(ifthegtolisshowninthedrawing),orvice-versa.
Functions Introduced:
•ProGtolDtlnoteGet()
•ProDtlnoteGtolGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionsdescribedinthissectionprovidethedrawingobjectthatrepresents
ashowngtol(ifthegtolisshowninthedrawing),orvice-versa.
Functions Introduced:
•ProGtolDtlnoteGet()
•ProDtlnoteGtolGet()
Thefunction ProGtolDtlnoteGet() returnsthedetailnotethatrepresents a
showngeometric tolerance.
Note
Thisfunctionreturnsthefirstdetailnotethatcallsoutthegeometric tolerance.
CreoParametric doesnotrestrictuserstoshowingonlyasingleversionofa
geometric tolerancecallout.
Thefunction ProDtlnoteGtolGet() returnsthegeometric toleranceshown
inadetailnote,ifapplicable.
Cross-referencing 3DNotesandDrawing
Annotations
Thefunctionsdescribedinthissectionprovideaccesstothedrawingobjectthat
represents ashown3Dnote,(ifthe3Dnoteisshowninthedrawing),orvice-
versa.
Functions Introduced:
•ProNoteDtlnoteGet()
•ProDtlnoteNoteGet()
Thefunction ProNoteDtlnoteGet() returnsadetailnotethatrepresents a
shownmodeltree.
Note
Thisfunctionreturnsthefirstdetailnotethatcallsoutthesolidmodelnote.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProNoteDtlnoteGet()
•ProDtlnoteNoteGet()
Thefunction ProNoteDtlnoteGet() returnsadetailnotethatrepresents a
shownmodeltree.
Note
Thisfunctionreturnsthefirstdetailnotethatcallsoutthesolidmodelnote.
CreoParametric doesnotrestrictuserstoshowingonlyasingleversionofa
solidmodelnotecallout.
Thefunction ProDtlnoteNoteGet() returnsthesolidmodelnotethatis
displayedasadetailnote,ifapplicable.
1254 Creo®Parametric TOOLKIT User’sGuideSymbolDefinitionAttachments
Functions Introduced:
•ProDtlsymdefattachAlloc()
•ProDtlsymdefattachGet()
•ProDtlsymdefattachFr ee()
•ProDtlsymdefdataAttachAdd()
•ProDtlsymdefdataAttachSet()
•ProDtlsymdefdataAttachGet()
Asymboldefinitionhasseveraldifferentwaysinwhichinstancesofthatsymbol
canbeattachedtothedrawing.InCreoParametric userssettheseattachments
fromtheGeneraltabontheSymbolDefinitionAttributes dialog.Eachattachment
typeisdescribedinCreoParametric TOOLKITbyanopaquedatastructurecalled
ProDtlsymdefattach. ThisisallocatedandfilledbythefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfromtheGeneraltabontheSymbolDefinitionAttributes dialog.Eachattachment
typeisdescribedinCreoParametric TOOLKITbyanopaquedatastructurecalled
ProDtlsymdefattach. Thisisallocatedandfilledbythefunction
ProDtlsymdefattachAlloc(). Thetypesofattachment are:
•FREE—The symbolwillhavenoleaders,andwillbeattachedbyaspecified
location.
•ON_ITEM—The symbolwillbeattachedtoanentityinthedrawing.
•NORM_ITEM—The symbolwillbeattachedtoanentity,andberotatedtobe
normaltothatentity.
•LEFT_LEADER—The attachment isbyaleadertoapointonanentityatthe
leftofthesymbol.
•RIGHT_LEADER—T heattachment isbyaleadertoapointonanentityat
therightofthesymbol.
•RADIAL_LEADER—The attachment isbyaleaderattachedtoacircular
entityinthesymbol.
Theinputargumentstothefunctionarethese
•type—The typeofattachment
•entity_id—The idoftheentityinthesymboldefinitionwhichhasthe
attachment point,iftheattachment typeis*_LEADER.entity_parameter The
“t”valueofthelocationontheentitywhichformstheattachment point,ifthe
attachment typeis*_LEADER.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattachment point,iftheattachment typeis*_LEADER.entity_parameter The
“t”valueofthelocationontheentitywhichformstheattachment point,ifthe
attachment typeis*_LEADER.
•position—The locationinthesymbolcoordinate systemwhichformsthe
attachment point,iftheattachment typeisFREE, ON_ITEM, orNORM_ITEM.
SymbolDefinitionData
Functions Introduced:
Drawings 1255•ProDtlsymdefdataAlloc()
•ProDtlsymdefdataFr ee()
•ProDtlsymdefdataIdGet()
•ProDtlsymdefdataHeighttypeGet()
•ProDtlsymdefdataHeighttypeSet()
•ProDtlsymdefdataT extrefSet()
•ProDtlsymdefdataT extrefGe t()
•ProDtlsymdefdataElbowGet()
•ProDtlsymdefdataElbowSet()
•ProDtlsymdefdataT extangfixedGet()
•ProDtlsymdefdataT extangfixedSet()
•ProDtlsymdefdataScaledheightGet()
•ProDtlsymdefdataPathSet()
•ProDtlsymdefdataPathGet()
•ProDtlsymdefdataNameGet()
Theopaqueobject ProDtlsymdefdata describesthecontentsofasymbol
definition. Thefunctions ProDtlsymdefdataAlloc() and
ProDtlsymdefdataFree() allocateandfreethisdata.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDtlsymdefdataNameGet()
Theopaqueobject ProDtlsymdefdata describesthecontentsofasymbol
definition. Thefunctions ProDtlsymdefdataAlloc() and
ProDtlsymdefdataFree() allocateandfreethisdata.
ProDtlsymdefdataIdGet() givesyoutheintegeridofthesymbol
definitioninCreoParametric thatthedatadescribes. Thiswillbesetifthe
ProDtlsymdefdata hasbeenacquiredusing ProDtlsymdefDataGet().
Itisnotnecessarytosetthiswhencreatingasymboldefinition; thefunction
ProDtlsymdefCreate() willassignanidtothenewnote.
ProDtlsymdefdataHeighttypeGet() and
ProDtlsymdefdataHeighttypeSet() getandsetthewayinwhichthe
sizeofaninstanceofthissymboldefinitionisset.Thethreetypesare:
•FIXED—The symbolinstanceheightisfixed.
•VARIABLE—The symbolinstanceheightmaybemodifiedbytheCreo
Parametric user.
•TEXTRELATED—The symbolinstanceheightisrelatedtotheheightofatext
iteminthedefinition.
IftheheighttypeisTEXTRELATED thefunctions
ProDtlsymdefdataTextrefSet() and
ProDtlsymdefdataTextrefGet() setandgetthetextiteminthesymbolxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxiteminthedefinition.
IftheheighttypeisTEXTRELATED thefunctions
ProDtlsymdefdataTextrefSet() and
ProDtlsymdefdataTextrefGet() setandgetthetextiteminthesymbol
definitionwhichdetermines thesymbolinstanceheight.Thereferenceisbynote
id,lineindex,andtextitemindex.
1256 Creo®Parametric TOOLKIT User’sGuideProDtlsymdefdataElbowGet() and
ProDtlsymdefdataElbowSet() getandsetthebitflagrepresenting the
elbowofthesymboldefinition.
ProDtlsymdefdataTextangfixedGet() and
ProDtlsymdefdataTextangfixedSet() getandsetwhethertheangleof
textinthesymbolisfixed.
ProDtlsymdefdataScaledheightGet() returnstheheightofthesymbol
definitionininches.
ProDtlsymdefdataPathSet() andProDtlsymdefdataPathGet()
setandgetthepathandfilenameofthefileinwhichthesymboldefinitionmay
besaved.Thisisusedtogivethesymbolitsname.
ProDtlsymdefdataNameGet() getsthenameofthesymboldefinition.
CreatingaSymbolDefinition
Thenotesanddraftentitiesthatarecontainedbyasymboldefinitionarecreatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbesaved.Thisisusedtogivethesymbolitsname.
ProDtlsymdefdataNameGet() getsthenameofthesymboldefinition.
CreatingaSymbolDefinition
Thenotesanddraftentitiesthatarecontainedbyasymboldefinitionarecreated
using ProDtlentityCreate() andProDtlnoteCreate(), usingthe
ProDtlsymdef handleasthesymbolargument.Soyouneedtocreatetheempty
symboldefinitionfirst,andthenaddthenotesandentities.
Ifyouwanttoaddparametric leaderattachments, using
ProDtlsymdefdataAttachAdd() andsoon,theseidentifytheentitiesto
whichtheleadersshouldattachusingtheobjecthandlesoutputbythecallsto
ProDtlnoteCreate() andProDtlentityCreate() thatcreatedthem.
Sotheseattachment typesshouldalsobeaddedafterthesymboliscreated.
Sothestepsincreatingasymboldefinitionare:
•Allocateadescription —ProDtlsymdefdataAlloc()
•AddaFREEattachment —ProDtlsymdefattachAlloc(),
ProDtlsymdefdataAttachAdd()
•Createthesymbol—ProDtlsymdefCreate()
•Addthenotesandentities(asforcreatingnotesandentitiesinthedrawing)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•AddaFREEattachment —ProDtlsymdefattachAlloc(),
ProDtlsymdefdataAttachAdd()
•Createthesymbol—ProDtlsymdefCreate()
•Addthenotesandentities(asforcreatingnotesandentitiesinthedrawing)
•Addanyleaderattachments—ProDtlsymdefattachAlloc(),
ProDtlsymdefdataAttachAdd()
Example11:CreateSymbolDefinition
ThesamplecodeinthefileUgDtlsymdefExamples.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
drawing, showsafunctionwhichcreatesasymboldefinitionwhichcontains
fourlineentitiesformingabox,anoteatthemiddleofthebox,andafree
attachment.
Drawings 1257RetrievingaSymbolDefinitionfromDisk
Functionintroduced:
•ProDrawingDtlsymdefRetrieve()
•ProDrawingSystemDtlsymdefRetrieve()
CreoParametric symbolsexistintwodifferentareas:theuser-definedareaandthe
systemsymbolsarea.
Thefunction ProDrawingDtlsymdefRetrieve() enablesyoutoretrievea
symboldefinitionfromtheuser-definedlocationdesignated bytheconfiguration
option pro_symbol_dir. Thesymboldefinitionshouldhavebeenpreviouslyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsymboldefinitionfromtheuser-definedlocationdesignated bytheconfiguration
option pro_symbol_dir. Thesymboldefinitionshouldhavebeenpreviously
savedtoafileusingCreoParametric.
Thefunction ProDrawingSystemDtlsymdefRetrieve() retrievesa
symboldefinitionfromthesystemdirectory.Thesystemareacontainssymbols
providedbyCreoParametric withtheDetailmodule(suchastheWelding
SymbolsLibrary).
SymbolInstanceVariableText
Functions Introduced:
•ProDtlvartextAlloc()
•ProDtlvartextFre e()
•ProDtlvartextDataGet()
Asymbolinstancemayreplaceanytextinsideanoteinthesymboldefinitionthat
isencloseinbackslashcharacters. Theopaquedatastructure ProDtlvartext
describessuchasubstitution. Itdescribesthe“prompt”string,thatis,thestringin
thesymboldefinitionwhichitisreplacing, andthe“value”,thatis,thenewtext
string.
Thefunction ProDtlvartextAlloc() allocatesandinitializesa
ProDtlvartext object. ProDtlvartextFree() freesthememory,and
ProDtlvartextDataGet() unpackstheinformation ina
ProDtlvartext.
SymbolInstanceDataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtlvartext object. ProDtlvartextFree() freesthememory,and
ProDtlvartextDataGet() unpackstheinformation ina
ProDtlvartext.
SymbolInstanceData
Functions Introduced:
•ProDtlsyminstdataAlloc()
•ProDtlsyminstdataFr ee()
•ProDtlsyminstdataColorSet()
•ProDtlsyminstdataColorGet()
1258 Creo®Parametric TOOLKIT User’sGuide•ProDtlsyminstdataDefSet()
•ProDtlsyminstdataDefGet()
•ProDtlsyminstdataAttachtypeSet()
•ProDtlsyminstdataAttachtypeGet()
•ProDtlsyminstdataDefattachSet()
•ProDtlsyminstdataDefattachGet()
•ProDtlsyminstdataAttachmentGet()
•ProDtlsyminstdataAttachmentSet()
•ProDtlsyminstDimattachGet()
•ProDtlsyminstdataLeadersCollect()
•ProDtlsyminstdataLeadersSet()
•ProDtlsyminstdataLeaderAdd()
•ProDtlsyminstdataElbowlengthGet()
•ProDtlsyminstdataElbowlengthSet()
•ProDtlsyminstdataAngleSet()
•ProDtlsyminstdataAngleGet()
•ProDtlsyminstdataScaledheightSet()
•ProDtlsyminstdataScaledheightGet()
•ProDtlsymInstnoteDataGet()
•ProDtlsymInstentityDataGet()
•ProDtlsyminstdataDisplayedSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDtlsyminstdataAngleGet()
•ProDtlsyminstdataScaledheightSet()
•ProDtlsyminstdataScaledheightGet()
•ProDtlsymInstnoteDataGet()
•ProDtlsymInstentityDataGet()
•ProDtlsyminstdataDisplayedSet()
•ProDtlsyminstdataIsDisplayed()
•ProDtlsyminstdataIsInvisible()
•ProDtlsyminstdataV artextAdd()
•ProDtlsyminstdataV artextsSet()
•ProDtlsyminstdataV artextsCollect()
•ProDtlsyminstdataT ransformGet()
•ProDtlsyminstdataGro upoptionsSet()
•ProDtlsyminstEntitiesV isibleGet()
•ProDtlsyminstIsDatumT arget()
•ProDtlsyminstEnvelopeGet()
ProDtlsyminstdataAlloc() andProDtlsyminstdataFree()
allocateandfreeaProDtlsyminstdata description.
Drawings 1259ProDtlsyminstdataDefSet() andProDtlsyminstdataDefGet()
setandgetthereferencetothesymboldefinitionthatthisinstanceinstantiates.
ProDtlsyminstdataAttachtypeSet() and
ProDtlsyminstdataAttachtypeGet() setandgetthetypeofattachment
beingchosenforthesymbolinstance.Thecorresponding attachment typesmuch
existinthesymboldefinition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtlsyminstdataAttachtypeSet() and
ProDtlsyminstdataAttachtypeGet() setandgetthetypeofattachment
beingchosenforthesymbolinstance.Thecorresponding attachment typesmuch
existinthesymboldefinition.
Ifyouwanttomakeanattachment toasymbolinstanceofatypethatwasnot
specifiedinthesymboldefinition, youcanaddyouownsymboldefinition
attachment tothesymbolinstances. ProDtlsyminstdataDefattachSet()
andProDtlsyminstdataDefattachGet() setandgeta
ProDtlsymdefattach objectonasymbolinstancewiththispurpose.
ProDtlsyminstdataAttachmentGet() and
ProDtlsyminstdataAttachmentSet() getandsettheactualattachment
forthesymbolinstance,thatis,whereitispositioned onthedrawing,intheform
ofaProDtlattach object.RefertothesectiononDetailAttachments and
Leadersonpage1247formoreinformation aboutthisobject.
Note
Youcannotattachasymbolto3Dmodelannotation usingtheOFFSET
attachment type.Whileattachingasymbolto3Dmodelannotation, ifyouset
theattachment typeasOFFSET,thefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Youcannotattachasymbolto3Dmodelannotation usingtheOFFSET
attachment type.Whileattachingasymbolto3Dmodelannotation, ifyouset
theattachment typeasOFFSET,thefunction
ProDtlsyminstdataAttachmentSet() returnstheerrorPRO_TK_
INVALID_TYPE.
Thefunction ProDtlsyminstDimattachGet() returnsthedimension to
whichthespecifiedsymbolinstanceisattached.Thefunctionreturnstheerrorof
typePRO_TK_BAD_CONTEXT whenthedimension towhichthespecified
symbolinstanceisattachedisnotavailable.Inthiscase,themodelcontaining the
dimension waseitherdeletedorsuppressed intheassembly.
ProDtlsyminstdataLeaderAdd() addsaleadertoasymbolinstance
description.
ProDtlsyminstdataLeadersSet() setsanarrayofleadersinasymbol
instance,replacinganyexistingleaders.
Note
Toremovealltheleadersfromthesymbolinstancedata,passNULLasthe
valuefortheinputargument leadersandsettheattachment typeto
PROSYMDEFATTACHTYPE_FREE.
1260 Creo®Parametric TOOLKIT User’sGuideProDtlsyminstdataLeadersCollect() outputsanarrayoftheleadersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluefortheinputargument leadersandsettheattachment typeto
PROSYMDEFATTACHTYPE_FREE.
1260 Creo®Parametric TOOLKIT User’sGuideProDtlsyminstdataLeadersCollect() outputsanarrayoftheleaders
onaProDtlsyminstdata description.
ProDtlsyminstdataElbowlengthGet() and
ProDtlsyminstdataElbowlengthSet() getandsetthelengthofthe
elbowthatconnectseachleadertothesymbolinstance.Ifyoudonotcall
ProDtlnotedataElbowlengthSet() whencreatingasymbolinstance,
therewillbenoelbow.
ProDtlsyminstdataAngleSet() and
ProDtlsyminstdataAngleGet() getandsettherotationangleofthe
symbol,ifthesymboldefinitionallowsrotation.(Seealsothefunction
ProDtlsymdefdataTextangfixedSet() inthesectiononSymbol
Definition Dataonpage1255.)
ProDtlsyminstdataScaledheightSet() and
ProDtlsyminstdataScaledheightGet() assignandreturntheheightof
asymbolinstanceintheunitsoftheownerdrawingormodel,respectively .This
valueisconsistent withtheheightvalueshownforasymbolinstanceinthe
Properties dialogboxintheCreoParametric userinterface.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasymbolinstanceintheunitsoftheownerdrawingormodel,respectively .This
valueisconsistent withtheheightvalueshownforasymbolinstanceinthe
Properties dialogboxintheCreoParametric userinterface.
Note
Thescaledheightobtainedusingtheabovefunctionsispartiallybasedonthe
properties ofthesymboldefinitionassignedusingthefunction
ProDtlsyminstdataDefSet(). Changingthesymboldefinitionmay
changethecalculated valueforthescaledheight.
ProDtlsymInstnoteDataGet() and
ProDtlsymInstentityDataGet() retrievethedataofanoteandanentity,
respectively ,inthesymbolinstance.
Thefunction ProDtlsyminstdataIsDisplayed() checksifthespecified
instanceisnotmarkedaserased.Thefunction
ProDtlsyminstdataDisplayedSet() setstheflagwhichcontrols
whetherornottheinstanceismarkedasdisplayed.
Thefunction ProDtlsyminstdataIsInvisible() checksifthespecified
instanceisinvisible.Aninvisiblesymbolinstancewillnotappearinthedrawing
evenifitmarkedasdisplayed. Forexample:
•ifthesymbolisinadraftgroup,whichismarkedassuppressedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinstanceisinvisible.Aninvisiblesymbolinstancewillnotappearinthedrawing
evenifitmarkedasdisplayed. Forexample:
•ifthesymbolisinadraftgroup,whichismarkedassuppressed
•ifthesymbolisaBOMballoon,andtherepeatregioncannotfindan
appropriate model
•ifthesymbolisaweldsymbol,anditsfeatureissuppressed
•ifthesymbolisadatumtargetsymbol,anditsfeatureissuppressed
Drawings 1261ProDtlsyminstdataVartextAdd(),
ProDtlsyminstdataVartextsSet(),
ProDtlsyminstdataVartextsCollect() manipulate
ProDtllvartext objectsinthesymbolinstance,whichprovidefor
substitution oftextinthesymboldefinition. SeesectionSymbolInstanceVariable
Textonpage1258formoreinformation abouttheProDtlvartext object.
Thefunction ProDtlsyminstdataTransformGet() providesamatrixthat
describesthetransformation betweensymboldefinitioncoordinates andscreen
coordinates forthisinstances,thatis,itdescribesthelocationandorientation of
thesymbol.Thesymbolcoordinates arespecifiedininches.
Thefunction ProDtlsyminstdataGroupoptionsSet() setstheoptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcoordinates forthisinstances,thatis,itdescribesthelocationandorientation of
thesymbol.Thesymbolcoordinates arespecifiedininches.
Thefunction ProDtlsyminstdataGroupoptionsSet() setstheoption
fordisplaying groupsinthesymbolinstance.Thepossibleoptionsare:
•Interactive—prompt theusertoselectthegroupstoactivate
•All—activate allgroups
•None—do notactivateanygroup
•Custom—activate onlythosegroupsincludedinthearrayof
ProDtlsymgroup handlespassedtothisfunction.
SeethesectionDrawingSymbolGroupsonpage1264tolearnmoreabout
accessinggroupsduringsymbolplacement.
Thefunction ProDtlsyminstEntitiesVisibleGet() returnsthevisible
entitiesinthesymbolinstancedata.Theinputargument sym_instisthesymbol
instancethatdisplaysthesymboladdedtothedrawing.
Thefunction ProDtlsyminstIsDatumTarget() checksifthespecified
symbolinstanceisadatumtarget.Thisfunctionreturns PRO_B_TRUE ifthe
specifiedsymbolinstanceisadatumtargetandreturns PRO_B_FALSE ifitis
not.
Thefunction ProDtlsyminstEnvelopeGet() returnstheenvelopeofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsymbolinstanceisadatumtarget.Thisfunctionreturns PRO_B_TRUE ifthe
specifiedsymbolinstanceisadatumtargetandreturns PRO_B_FALSE ifitis
not.
Thefunction ProDtlsyminstEnvelopeGet() returnstheenvelopeofthe
symbol.Whileretrievingcoordinates ofthesymbolinaspecifiedsolid,ifthe
symbolisdisplayedinthesolidaswellasinthedrawing,thedrawingmustnotbe
active.Theinputargumentsfollow:
•syminst—Symbol.
•drawing—Drawing. Thevalueforthisinputargumentmustbepassedonlyif
thesolidsymbolisshowninthedrawing.Else,passitasNULL.
•path—Ifthevalueoftheinputargument drawingisnotNULL,thenthepath
pointstoapartinanassemblywhosedrawingispassedhere.Thispartisthe
ownerofthesymbolinstance.
Theoutputargument envelope istheenvelopesurrounding thesymbolinthe
modelcoordinate system.Fordrawing,theenvelopesurrounding thesymbolisin
thescreencoordinates.
1262 Creo®Parametric TOOLKIT User’sGuideCross-referencing WeldSymbolsandDrawing
Annotations
Thefunctionsdescribedinthissectionprovideadrawingobjectthatrepresents axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthescreencoordinates.
1262 Creo®Parametric TOOLKIT User’sGuideCross-referencing WeldSymbolsandDrawing
Annotations
Thefunctionsdescribedinthissectionprovideadrawingobjectthatrepresents a
shownweldsymbol(iftheweldsymbolisshowninthedrawing),ortheweld
featurethatownsashownweldsymbol.
Functions Introduced:
•ProFeatur eDtlsyminstGet()
•ProDtlsyminstFeature Get()
Thefunction ProFeatureDtlsyminstGet() returnsthedetailsymbol
instancethatrepresents ashownmodelsymbol.
Thefunction ProDtlsyminstFeatureGet() returnstheweldfeaturethat
ownstheshownweldsymbol.
Example12:CreateFreeInstanceofSymbolDefinition
ThesamplecodeinthefileUgDtlsyminstExamples.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
drawing, showsafunctionwhichcreatesafreeinstanceofasymboldefinition.
DetailGroupData
Functions Introduced:
•ProDtlgr oupdataAlloc()
•ProDtlgr oupdataFree( )
•ProDtlgr oupdataIdGet()
•ProDtlgr oupdataNameGet()
•ProDtlgr oupdataIsDisplayed()
•ProDtlgr oupdataDisplayedSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProDtlgr oupdataAlloc()
•ProDtlgr oupdataFree( )
•ProDtlgr oupdataIdGet()
•ProDtlgr oupdataNameGet()
•ProDtlgr oupdataIsDisplayed()
•ProDtlgr oupdataDisplayedSet()
•ProDtlgr oupdataItemAdd()
•ProDtlgr oupdataItemsSet()
•ProDtlgr oupdataItemsCollect()
ProDtlgroupdataAlloc() andProDtlgroupdataFree() allocateand
freeadetailgroupstructureintheformofaProDtlgroup object.
ProDtlgroupdataAlloc() alsosetsthenameofthegroup.
ProDtlgroupdataIdGet() returnstheinternalIDofanexistinggroup.
ProDtlgroupdataNameGet() getsthenameofthegroup.
Drawings 1263ProDtlgroupdataDisplayedSet() and
ProDtlgroupdataIsDisplayed() setandgettheflagthatcontrols
whetherornotthegroupisvisible.
ProDtlgroupdataItemAdd() addsanitemtothegroupcontents.Items
supported inthegroupsincludeentities,notes,symbolinstances,anddraft
drawingdimensions.
ProDtlgroupdataItemsSet() setsthearrayofitemsintoagroupstructure,
replacinganyexistingitemsthatmayhavebeenassigned.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawingdimensions.
ProDtlgroupdataItemsSet() setsthearrayofitemsintoagroupstructure,
replacinganyexistingitemsthatmayhavebeenassigned.
ProDtlgroupdataItemsCollect() returnsanarrayoftheitemsinthe
groupstructure.
Example13:CreateNewGroupofItems
ThesamplecodeinthefileUgDtlgroupExamples.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
drawing, showsacommand whichcreatesagroupfromasetofselecteddetail
items.
DrawingSymbolGroups
ThissectiondescribesCreoParametric TOOLKITfunctionsthatgiveaccessto
user-definedgroupscontainedindrawingsymbols.
User-definedgroupsinsymboldefinitions arerepresented bythefollowinghandle
inCreoParametric TOOLKIT:
typedef struct pro_dtlvargroup
{
ProDtlsymdef symbol_def;
int var_group_id;
}ProDtlsymgroup;
Thegrouphandlecontainsthedefinitionhandleandanidentifierthatisuniquein
thegroupdefinition.
CreoParametric allowsahierarchal relationship betweenthegroupsinasymbol
definition. Thus,somegroupscontaingroups,orareparentsofothergroups.Toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthegroupdefinition.
CreoParametric allowsahierarchal relationship betweenthegroupsinasymbol
definition. Thus,somegroupscontaingroups,orareparentsofothergroups.To
transmitthe“level”inwhichagroupresidestoCreoParametric TOOLKIT
functions, passtheProDtlsymgroup handleoftheparentgroup.Tolookatthe
groupsatthetoplevel,passaProDtlsymgroup handlewithanidentifierof-1.
IdentifyingSymbolGroupsinanInstance
Functionintroduced:
•ProDtlsyminstSymgr oupsCollect()
1264 Creo®Parametric TOOLKIT User’sGuideThefunction ProDtlsyminstSymgroupsCollect() indicateswhich
groupsareincludedinthesymbolinstance.Youcancollectthegroupsbasedon
theirstatus:
•All—retrieve allgroupsinthedefinitionofthesymbolinstance
•Active—retrieve onlythosegroupswhichareactivelyshowninthissymbol
instance
•Inactive—retrieve onlythosegroupswhicharenotshowninthissymbol
instance
IdentifyingSymbolGroupsinaDefinition
Functions Introduced:
•ProDtlsymgro upSubgr oupsCollect()
•ProDtlsymgro upDataGet()
•ProDtlsymgro updataNameGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinstance
IdentifyingSymbolGroupsinaDefinition
Functions Introduced:
•ProDtlsymgro upSubgr oupsCollect()
•ProDtlsymgro upDataGet()
•ProDtlsymgro updataNameGet()
•ProDtlsymgro updataItemsCollect()
•ProDtlsymgro upPar entGet()
•ProDtlsymgro upLevelIsExclusive()
Thefunction ProDtlsymgroupSubgroupsCollect() returnsthenamesof
allsubgroups storedinthesymboldefinitionattheindicatedlevel.
Usethefunction ProDtlsymgroupDataGet() togetthedataforthegroup
storedinthesymboldefinition.
Thefunction ProDtlsymgroupdataNameGet() returnsthenameofthe
groupusingthesymbolgroupdataasinput,whilethefunction
ProDtlsymgroupdataItemsCollect() returnsthenamesofallthegroup
membersusingsymboldataasinput.Notethatallthesegroupmembersare
entitiesornotescontainedonlywithinthesymboldefinition.
Thefunction ProDtlsymgroupParentGet() returnstheparentgroupto
whichthecurrentgroupbelongs.
Thefunction ProDltsymgroupLevelIsExclusive() indicatesifthe
subgroups storedinthesymboldefinitionatthecurrentlevelareexclusiveorxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichthecurrentgroupbelongs.
Thefunction ProDltsymgroupLevelIsExclusive() indicatesifthe
subgroups storedinthesymboldefinitionatthecurrentlevelareexclusiveor
independent. Ifgroupsareexclusive, onlyoneofthegroupsatthislevelmaybe
activeinthemodelatanytime.Ifgroupsareindependent, anynumberofgroups
maybeactive.
Manipulating SymbolGroups
Functions Introduced:
•ProDtlsymgro updataAlloc()
Drawings 1265•ProDtlsymgro updataNameSet()
•ProDtlsymgro updataItemsSet()
•ProDtlsymgro updataItemAdd()
•ProDtlsymgro updataFr ee()
•ProDtlsymgro upSubgr oupCreat e()
•ProDtlsymgro upModify()
•ProDtlsymgro upDelete()
•ProDtlsymgro upLevelExclusiveSet()
Theopaquehandle ProDtlsymgroupdata containstheinformation neededto
defineorredefineagroup.
Thefunction ProDtlsymgroupdataAlloc() allocatesthedatastructure.
Thefunction ProDtlsymgroupdataNameSet() setsthenameofthesymbol
groupwhilethefunction ProDtlsymgroupdataItemsSet() setsthe
specifieditemstobecontainedinthesymbolgroup,providedsuchitemsbelongxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDtlsymgroupdataNameSet() setsthenameofthesymbol
groupwhilethefunction ProDtlsymgroupdataItemsSet() setsthe
specifieditemstobecontainedinthesymbolgroup,providedsuchitemsbelong
tothesymboldefinition. Theitemstobeincludedcanbedetailentitiesandnotes.
Thefunction ProDtlsymgroupdataItemAdd() addsasingleitemtothe
symbolgroup,providedsuchanitembelongstothesymboldefinition. Theitem
tobeaddedcanbeadetailentityoranote.
Thefunction ProDtlsymgroupdataFree() freesthedatastructure.
Thefunction ProDtlsymgroupSubgroupCreate() createsanewgroupin
thesymboldefinitionatthespecifiedlevelbelowtheparentgroup.
Thefunction ProDtlsymgroupModify() modifiesthesymbolgroup
definition.
Thefunction ProDtlsymgroupDelete() deletesagroupfromthesymbol
definition. Thisfunctiondoesnotdeletetheentitiescontainedinthegroup.
Thefunction ProDtlsymgroupLevelExclusiveSet() makesthegroups
attheindicatedlevel,exclusiveorindependent, inthesymboldefinition.
DrawingEdgesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDtlsymgroupLevelExclusiveSet() makesthegroups
attheindicatedlevel,exclusiveorindependent, inthesymboldefinition.
DrawingEdges
Thefunctionsdescribedinthissectionprovideaccesstothedisplayproperties
suchascolor,linefont,andthicknessofmodeledgesindrawingviews.Model
edgescanberegularedges,silhouetteedges,ornon-analytical silhouetteedges.
Theopaquehandle ProDrawingEdgeDisplay providesaccesstothedisplay
properties ofmodeledges.
1266 Creo®Parametric TOOLKIT User’sGuideNote
Youcanselectmodeledgesfromdetailedviewsformodification, butno
changewillbeapplied.Tomodifythedisplayofamodeledgeinadetailed
view,youmustselecttheedgeintheparentview.
Functions Introduced:
•ProDrawingEdgeDisplayGet()
•ProDrawingEdgeDisplaySet()
•ProDrawingedgedisplayFr ee()
•ProDrawingedgedisplayColorGet()
•ProDrawingedgedisplayColorSet()
•ProDrawingedgedisplayFontGet()
•ProDrawingedgedisplayFontSet()
•ProDrawingedgedisplayWi dthGet()
•ProDrawingedgedisplayWi dthSet()
•ProDrawingedgedisplayIsGlobal()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDrawingedgedisplayColorSet()
•ProDrawingedgedisplayFontGet()
•ProDrawingedgedisplayFontSet()
•ProDrawingedgedisplayWi dthGet()
•ProDrawingedgedisplayWi dthSet()
•ProDrawingedgedisplayIsGlobal()
•ProDrawingedgedisplayGlobalSet()
Thefunction ProDrawingEdgeDisplayGet() obtainsthedisplayproperties
ofaspecifiedmodeledgeinadrawingview.Itallocatesthe
ProDrawingEdgeDisplay objectforstoringthedisplayproperties.
Thefunction ProDrawingEdgeDisplaySet() assignsthedisplayproperties
ofaspecifiedmodeledgeinadrawingview.Afterassigningtheproperties, you
mustrepaintthedrawingviewtoupdatethedisplay.
Thefunction ProDrawingedgedisplayFree() freesthememoryallocated
fortheProDrawingEdgeDisplay object.
Thefunctions ProDrawingedgedisplayColorGet() and
ProDrawingedgedisplayColorSet() obtainandassignthecolortobe
usedforthedisplayofaspecifiedmodeledge.
Thefunctions ProDrawingedgedisplayFontGet() and
ProDrawingedgedisplayFontSet() obtainandassignthelinefonttobe
usedforthedisplayofaspecifiedmodeledge.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusedforthedisplayofaspecifiedmodeledge.
Thefunctions ProDrawingedgedisplayFontGet() and
ProDrawingedgedisplayFontSet() obtainandassignthelinefonttobe
usedforthedisplayofaspecifiedmodeledge.
Thefunctions ProDrawingedgedisplayWidthGet() and
ProDrawingedgedisplayWidthSet() obtainandassignthewidthtobe
usedforthedisplayofaspecifiedmodeledge.Youmustpassavaluelessthan
zerotousethedefaultwidth.
Drawings 1267Note
Thewidthobtainedisinscreencoordinates. Toconvertthewidthvalueinto
drawingcoordinates, usethesheettransformation matrixobtainedusing
ProDrawingSheetTrfGet().
Thefunction ProDrawingedgedisplayIsGlobal() determines ifthe
modeledgedisplayproperties suchascolor,linefont,andwidthhavebeen
appliedgloballytoallthedrawingviewsinthedrawingsheet.
Thefunction ProDrawingedgedisplayGlobalSet() setstheflagthat
assignsthemodeledgedisplayproperties suchascolor,linefont,andwidth
globallytoallthedrawingviewsinthedrawingsheet.
DrawingTables
AdrawingtableisidentifiedbytheDHandle ProDwgtable whichistypedeftoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxassignsthemodeledgedisplayproperties suchascolor,linefont,andwidth
globallytoallthedrawingviewsinthedrawingsheet.
DrawingTables
AdrawingtableisidentifiedbytheDHandle ProDwgtable whichistypedefto
andinheritedfromProModelitem. ThetypefieldinProDwgtable hasthe
value PRO_DRAW_TABLE.
SelectingDrawingTablesandCells
FunctionIntroduced:
•ProSelectionDwgtblcellGet()
Inordertoasktheusertoselectatablecell,usetheoption dwg_table asinputto
ProSelect(), andthenuseProSelectionModelitemGet() toacquire
theProDwgtable handletothetable.
Toselectatablecell,usetheoption table_cell andcall
ProSelectionModelitemGet() togetthetablehandle,andthespecial
function ProSelectionDwgtblcellGet() thatreturnstheIDsofthe
selectedtablesegment,columnandrow.Thefunction
ProSelectionDwgtblcellGet() returnsrowandcolumnvaluesstarting
from0.Togettheactualvaluesoftherowsandthecolumns,add1totheresult,
sothatthesecanbeusedinotherCreoParametric TOOLKITfunctions.
CreatingDrawingTables
Functions Introduced:
•ProDwgtabledataAlloc()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfrom0.Togettheactualvaluesoftherowsandthecolumns,add1totheresult,
sothatthesecanbeusedinotherCreoParametric TOOLKITfunctions.
CreatingDrawingTables
Functions Introduced:
•ProDwgtabledataAlloc()
•ProDwgtabledataOriginSet()
•ProDwgtabledataSizetypeSet()
1268 Creo®Parametric TOOLKIT User’sGuide•ProDwgtabledataColumnsSet()
•ProDwgtabledataRowsSet()
•ProDrawingT ableCreat e()
•ProDwgtableT extEnter()
•ProDwgtableDisplay()
•ProDwgtableGr owthdire ctionSet()
Theinformation requiredtobuildatableiscontainedinanopaquedatastructure,
ProDwgtabledata thathastobeallocatedandfilledbeforethetablecanbe
created.Thefunction ProDwgtabledataAlloc() allocatesthedata.
ProDwgtabledataOriginSet() setsthepositionofthetopleftcornerofa
tableintheProDwgtabledata description.
ProDwgtabledataSizetypeSet() specifieswhetherthesizeofthe
columnsandrowswillbeinscreencoordinates, orasthenumberoftext
characters. Itisusuallymoreconvenient tospecifyasnumbersofcharacters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDwgtabledataSizetypeSet() specifieswhetherthesizeofthe
columnsandrowswillbeinscreencoordinates, orasthenumberoftext
characters. Itisusuallymoreconvenient tospecifyasnumbersofcharacters.
ProDwgtabledataColumnsSet() setsthewidthofthecolumnsaswellas
thedefaultjustifications oftextinthecolumns.
ProDwgtabledataRowsSet() setstheheightoftherows.
ProDwgtableTextEnter()
ProDrawingTableCreate() createsthetableintheCreoParametric
drawingandoptionally displaysit.Ifyourprogramisabouttoaddrows,columns,
ortexttothetable,itisusuallybetternottodrawitimmediately .Itcanbedrawn
laterusing ProDwgtableDisplay() andthiswillavoidmultipleredrawing.
Thegrowthdirectionofadrawingtabledetermines howadrawingtablewill
expandintermsofrowsandcolumnswhenrepeatregionsareaddedtothetable.
Usethefunction ProDwgtableGrowthdirectionSet() tosetthegrowth
directionofthetable.Thegrowthdirectionargument,
ProDwgtableGrowthdirType takesthefollowingvalues:
•PRODWGTABLEGROWTHDIR_DOWNRIGHT
•PRODWGTABLEGROWTHDIR_DOWNLEFTxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdirectionofthetable.Thegrowthdirectionargument,
ProDwgtableGrowthdirType takesthefollowingvalues:
•PRODWGTABLEGROWTHDIR_DOWNRIGHT
•PRODWGTABLEGROWTHDIR_DOWNLEFT
•PRODWGTABLEGROWTHDIR_UPRIGHT
•PRODWGTABLEGROWTHDIR_UPLEFT
Formoreinformation onthegrowthdirection,seetheCreoParametric Help.
ReadingDrawingTables
Functions Introduced:
•ProDrawingT ableV isit()
•ProDrawingT ablesCollect()
Drawings 1269•ProDwgtableInfoGet()
•ProDwgtableColumnsCount()
•ProDwgtableRowsCount()
•ProDwgtableColumnSizeGet()
•ProDwgtableRowSizeGet()
•ProDwgtableCellNoteGet()
•ProDwgtableCelltextGet()
•ProDwgtableIsFr omFormat()
•ProDwgtableRetrieve()
•ProDwgtableByOriginRetrieve()
•ProDwgtableGr owthdire ctionGet()
ProDrawingTableVisit() visitsallthetablesinaspecifieddrawing;it
conformstotheusualstandardforvisitfunctions.
ProDrawingTablesCollect() isanalternative, andreturnsanarrayof
ProDwgtable handlesforadrawing.
Atablemaybedividedintoseveralsegments, whicharenumbered sequentiallyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDrawingTablesCollect() isanalternative, andreturnsanarrayof
ProDwgtable handlesforadrawing.
Atablemaybedividedintoseveralsegments, whicharenumbered sequentially
from0.Thefunction ProDwgtableInfoGet() takesaProDwgtable anda
segmentIDasinput,andfillsadatastructurethatdescribestheproperties ofthe
table.Ifthesegmentdoesnotexist,itreturns PRO_TK_NOT_EXIST. The
properties ofthetableareasfollows:
int rotation; The number of90degree turns
clockwise.
double seg_origin[3]; The screen coordinates ofthe
top left corner ofthe segment.
int nrows; The number ofrows.
int ncols; The number ofcolumns.
double outline[2][3]; The outline ofthe segment.
double seg_char_height; The text height used for the
segment.
double table_char_height; The text height used for the
drawing.
double char_width; The character width factor.
Thefunctions ProDwgtableRowsCount() and
ProDwgtableColumnsCount() returnthenumberofrowsandcolumnsina
tablerespectively .
Thefunctions ProDwgtableColumnSizeGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctions ProDwgtableRowsCount() and
ProDwgtableColumnsCount() returnthenumberofrowsandcolumnsina
tablerespectively .
Thefunctions ProDwgtableColumnSizeGet() and
ProDwgtableRowSizeGet() givethecolumnwidthandrowheightfora
specifiedtablecolumnandrowrespectively .
1270 Creo®Parametric TOOLKIT User’sGuideThetextitemineachcellofadrawingtableisstoredasadetailnote.Ifyouneed
tomodifythenoteinsomeway,forexamplethestyle,youcanusethe
ProDtlnote*() functionsdescribedinthesectiononDetailItemsonpage
1234.Thefunction ProDwgtableCellNoteGet() returnsthehandletothe
detailnotethatrepresents thetextinaspecifiedtablecell.
Thefunction ProDwgtableCelltextGet() placesthetextofthetableintoa
stringarray.
Thefunction ProDwgtableIsFromFormat() indicateswhetheratablewas
addedtothetableasaresultofimporting aformat.
Thefunction ProDwgtableRetrieve() retrievesadrawingtablefroma
properlyformattedCreoParametric tablefile,andplacesitinthespecified
drawing.ItallowsyoutoaddatabletoadrawingwithouthavingtospecifyallthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProDwgtableRetrieve() retrievesadrawingtablefroma
properlyformattedCreoParametric tablefile,andplacesitinthespecified
drawing.Itallowsyoutoaddatabletoadrawingwithouthavingtospecifyallthe
tableproperties. Thisfunctionalsosupportsparameter tablesexportedintheCSV
orTXTformatfromtheParameters dialogboxorusing
ProParameterTableExport(). RefertotheCore:Parameters onpage208
chapterformoreinformation onparameters.
Theinputargumentsare:
•drawing—Specifies thedrawinginwhichthetablemustberetrieved.
•file_name—Specifies thenameofthedrawingtable.Youmustnotmention
theextension.
•file_path—Specifies thepathtothedrawingtablefile.Thepathmustbe
specifiedrelativetotheworkingdirectory.
•file_version—Species theversionofthedrawingtablethatmustbe
retrieved.Theversion0,represents thelatestversionofthedrawingtable.
•position—Specifies thecoordinates ofthepointonthedrawingsheet,
wherethetablemustbeplaced.Theupper-leftcornerofthetableisplacedatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxretrieved.Theversion0,represents thelatestversionofthedrawingtable.
•position—Specifies thecoordinates ofthepointonthedrawingsheet,
wherethetablemustbeplaced.Theupper-leftcornerofthetableisplacedat
thispointonthedrawingsheet.Youmustspecifythevalueinscreen
coordinates.
•solid—Specifies themodelfromwhichdatamustbecopiedintothe
drawingtable.IfthisargumentispassedasNULL,anemptytableiscreated.
•simp_rep—Specifies ahandletothesimplified representation inasolid,
fromwhichdatamustbecopiedintothedrawingtable.Ifthisargumentis
passedasNULL,andtheargument solidisnotNULL,thendatafromthe
solidmodeliscopiedintothedrawingtable.
Thefunction ProDwgtableByOriginRetrieve() retrievesadrawingtable
fromaproperlyformattedCreoParametric tablefile,andplacesitinthespecified
drawing.Thefunctionissimilartofunction ProDwgtableRetrieve(),
exceptthatitpositionstheoriginofthetableatthespecifiedpointinthedrawing.
Tablescanbecreatedwithdifferentoriginsbyspecifying theoptionDirection,in
theInsertTabledialogbox.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexceptthatitpositionstheoriginofthetableatthespecifiedpointinthedrawing.
Tablescanbecreatedwithdifferentoriginsbyspecifying theoptionDirection,in
theInsertTabledialogbox.
Drawings 1271Thefunction ProDwgtableGrowthdirectionGet() getsthegrowth
directionofthetableusingtheenumerated type
ProDwgtableGrowthdirType. Formoreinformation onthevaluesof
ProDwgtableGrowthdirType, seethesectionCreatingDrawingTableson
page1268.
ModifyingDrawingTables
Functions Introduced:
•ProDwgtableRowAdd()
•ProDwgtableColumnAdd()
•ProDwgtableRowDelete()
•ProDwgtableColumnDelete()
•ProDwgtableColumnWi dthSet()
•ProDwgtableRowHeightSet()
•ProDwgtableRowheightAutoadjustGet()
•ProDwgtableRowheightAutoadjustSet()
•ProDwgtableCellsMerge()
•ProDwgtableCellsRemesh()
•ProDwgtableCelltextWr ap()
•ProDwgtableSave()
•ProDwgtableRotate()
•ProDwgtableErase()
•ProDwgtableDelete()
ProDwgtableRowAdd() andProDwgtableColumnAdd() canaddarow
oracolumnbeforeorafteranexistingroworcolumn.Theinputargumentsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDwgtableSave()
•ProDwgtableRotate()
•ProDwgtableErase()
•ProDwgtableDelete()
ProDwgtableRowAdd() andProDwgtableColumnAdd() canaddarow
oracolumnbeforeorafteranexistingroworcolumn.Theinputarguments
height_in_chars andwidth_in_chars specifytherowheightandcolumnwidthin
characters, respectively .Anotherinputargument displayspecifieswhetherthe
updatedtableshouldbedisplayed. Whenmakingmanychangestoatable,itis
advisablenottodisplaythemimmediately ,buttouse
ProDwgtableDisplay() toupdatethedisplaylater.
ProDwgtableRowDelete() andProDwgtableColumnDelete() delete
anyspecifiedroworcolumn,includingremovingthetextfromtheaffectedcells.
ProDwgtableColumnWidthSet() and
ProDwgtableRowHeightSet() assignthewidthofaspecifiedcolumnand
theheightofaspecifiedrow,respectively ,depending uponthesizeofthedrawing
table.Thedrawingtablesizegivenbytheenumerated datatype
ProDwgtableSizetype canbeofthefollowingtypes:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheheightofaspecifiedrow,respectively ,depending uponthesizeofthedrawing
table.Thedrawingtablesizegivenbytheenumerated datatype
ProDwgtableSizetype canbeofthefollowingtypes:
1272 Creo®Parametric TOOLKIT User’sGuide•PRODWGTABLESIZE_CHARACTERS—Specifies thesizeincharacters. Ifthe
specifiedvalueforwidthofacolumnorheightofarowisafraction,
PRODWGTABLESIZE_CHARACTERS roundsdownthefractionalvaluetothe
nearestwholenumber.
•PRODWGTABLESIZE_SCREEN—Specifies thesizeinscreencoordinates.
•PRODWGTABLESIZE_CHARS_TRUE—Specifies thesizeincharacters. It
enablesyoutospecifyafractionalvalueforthewidthofacolumnandheight
ofarow.
Toaccommodate awrappedtextinatablerow,youcanusetheCreoParametric
TOOLKITfunctionstoautomatically adjusttheheightoftherowtoaccommodate
theentiretextcontent.Thefunctions
ProDwgtableRowheightAutoadjustGet() and
ProDwgtableRowheightAutoadjustSet() getandsettheautomatic row
heightadjustment propertyforarowofadrawingtable.ThesefunctionsusethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDwgtableRowheightAutoadjustGet() and
ProDwgtableRowheightAutoadjustSet() getandsettheautomatic row
heightadjustment propertyforarowofadrawingtable.Thesefunctionsusethe
enumerated typeProDwgtableRowheightAutoadjusttype, whichhas
thefollowingvalues:
•PRODWGTBLROWHEIGHT_AUTOADJUST_FALSE—Specifies thatthe
automatic rowheightadjustment propertyisnotset.
•PRODWGTBLROWHEIGHT_AUTOADJUST_TRUE—Specifies thatthe
automatic rowheightadjustment propertyisset.
•PRODWGTBLROWHEIGHT_AUTOADJUST_TRUE_LEGACY—Specifies a
pre-CreoParametric 1.0releasebehavior.Inthisbehavior,sometimes therow
heightmaybeautomatically adjustingandsometimes maynotbe
automatically adjusting.Tosetanexplicitrowadjustment statususethe
function ProDwgtableRowheightAutoadjustSet().
Note
○Thevalue PRODWGTBLROWHEIGHT_AUTOADJUST_TRUE_LEGACY is
notapplicable tothefunction
ProDwgtableRowheightAutoadjustSet().
○Whenusingthefunction
ProDwgtableRowheightAutoadjustSet() anychangesinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
○Thevalue PRODWGTBLROWHEIGHT_AUTOADJUST_TRUE_LEGACY is
notapplicable tothefunction
ProDwgtableRowheightAutoadjustSet().
○Whenusingthefunction
ProDwgtableRowheightAutoadjustSet() anychangesinthe
heightofarowwillbeseenonlyafterthenextregeneration, oracallto
thefunction ProDrawingTablesUpdate().
ProDwgtableCellsMerge() allowsthemergingofcellswithinaspecified
rangeofrowsandcolumns,toformasinglecell.Thenewcellcanbeaddressed
(forexample,whenusing ProDwgtableTextEnter(), orothercallsto
ProDwgtableCellsMerge()) bytherowandcolumnnumberoftheoriginal
Drawings 1273topleftcell.Rowsbelow,andcolumnstotheright,retaintheiroriginalnumbers.
Thefunction ProDwgtableCellsRemesh() unmergesallthemergedcellsin
aspecifiedrangeofrowsandcolumns.
ProDwgtableCelltextWrap() wrapsthetextinacell.
ProDwgtableSave() savesadrawingtableinoneoftheformatslistedbelow.
Theformatsgivenbytheenumerated typeProDwgtableFormattype canbe
ofthefollowingtypes:
•PRODWGTABLEFORMAT_TBL—Specifies thetabularformat.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDwgtableSave() savesadrawingtableinoneoftheformatslistedbelow.
Theformatsgivenbytheenumerated typeProDwgtableFormattype canbe
ofthefollowingtypes:
•PRODWGTABLEFORMAT_TBL—Specifies thetabularformat.
•PRODWGTABLEFORMAT_TXT—Specifies thetextformat.
•PRODWGTABLEFORMAT_CSV—Specifies theCSVformat.
ProDwgtableRotate() rotatesatable90degreesclockwise.
ProDwgtableErase() erasesadrawingtable.
ProDwgtableDelete() deletesadrawingtable.
Notification Functions
CreoParametric TOOLKITnotifications areavailablewhenadrawingtableora
rowfromadrawingtableisdeleted.Thenotification functionsareestablished ina
sessionusingthefunction ProNotificationSet().
•ProDwgtableDeletePre Action()
•ProDwgtableDeletePostAction()
•ProDwgtableRowDeletePre Action()
•ProDwgtableRowDeletePostAction()
Thenotification function ProDwgtableDeletePreAction() iscalled
beforedeletionofadrawingtable.Thisfunctionisavailablebycalling
ProNotificationSet() withthevalueofthenotifytypeasPRO_
DWGTABLE_DELETE_PRE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeforedeletionofadrawingtable.Thisfunctionisavailablebycalling
ProNotificationSet() withthevalueofthenotifytypeasPRO_
DWGTABLE_DELETE_PRE.
Thenotification function ProDwgtableDeletePostAction() iscalled
afterdeletionofadrawingtable.Thisfunctionisavailablebycalling
ProNotificationSet() withthevalueofthenotifytypeasPRO_
DWGTABLE_DELETE_POST.
Thenotification function ProDwgtableRowDeletePreAction() iscalled
beforethedeletionofarowfromtheselecteddrawingtable.Theinputarguments
forthisfunctionareasfollows:
•table—The tablecontaining therowtobedeleted.
•i_row—Theindexoftherowtobedeleted.
1274 Creo®Parametric TOOLKIT User’sGuideNote
Theindexofthefirstrowis1.
Thisfunctionisavailablebycalling ProNotificationSet() withthevalue
ofthenotifytypeasPRO_DWGTABLE_ROW_DELETE_PRE. Thespecifiedrowis
notdeletediftheapplication returnsanerrorfromthiscallback.Iftheusercancels
thedeletion,anappropriate messageshouldbedisplayed, ifrequired.
Thenotification function ProDwgtableRowDeletePostAction() iscalledxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthedeletion,anappropriate messageshouldbedisplayed, ifrequired.
Thenotification function ProDwgtableRowDeletePostAction() iscalled
afterthedeletionofarowfromtheselecteddrawingtable.Thisfunctionis
availablebycalling ProNotificationSet() withthevalueofthenotify
typeasPRO_DWGTABLE_ROW_DELETE_POST.
Example14:CreationofTableListingDatumPoints
ThesamplecodeinthefileUgDwgtableExamples.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
drawing, showsacommand thatcreatesadrawingtablelistingthedatumpoints
inamodelshowninadrawingview.
DrawingTableSegments
Functions Introduced:
•ProDwgtableSegMove()
•ProDwgtableSegCount()
•ProDwgtableSegSheetGet()
•ProDwgtableSegmentOriginSet()
Drawingtablescanbeconstructed withoneormoresegments. Eachsegmentcan
beindependently placed.
Note
Forthesefunctions, pass-1torefertotheonlysegmentofaone-segment
table.
Moveadrawingtablesegmenttonewscreencoordinates withthefunction
ProDwgtableSegMove(). Passthecoordinates ofthetargetpositioninformatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtable.
Moveadrawingtablesegmenttonewscreencoordinates withthefunction
ProDwgtableSegMove(). Passthecoordinates ofthetargetpositioninformat
x,y,z=0tothisthefunction.Itmovesthetablesegmenttothetargetposition.
Drawings 1275Determine thenumberofsegmentsinatablewiththefunction
ProDwgtableSegCount(). Passthenameofthetabletothefunctionandit
returnsthenumberoftablesegments.
Usethefunction ProDwgtableSegSheetGet() todetermine whichsheet
containsaspecifieddrawingtablesegment.
Usethefunction ProDwgtableSegmentOriginSet() toassigntheorigin
foraspecifieddrawingtablesegment.
RepeatRegions
Functions Introduced:
•ProDwgtableCellIsComment()
•ProDwgtableCellComponentGet()
•ProDwgtableCellRefmodelGet()
•ProDrawingT ablesUpdate()
Thefunctions ProDwgtableCellIsComment(),
ProDwgtableCellComponentGet(),
ProDwgtableCellRefmodelGet(), and
ProDrawingTablesUpdate() applytorepeatregionsindrawingtables.
ProDwgtableCellIsComment() indicateswhetheracellinarepeatregion
containsacomment.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDwgtableCellRefmodelGet(), and
ProDrawingTablesUpdate() applytorepeatregionsindrawingtables.
ProDwgtableCellIsComment() indicateswhetheracellinarepeatregion
containsacomment.
ProDwgtableCellComponentGet() returnsthefullpathtothecomponent
referenced inacellinarepeatregionofadrawingtable.However,thisfunction
doesnotreturnavalidpathifthecellhastheattribute NODUPLICATE orNO
DUPLICATE/LEVEL sincethereisnouniquepathavailable.Inthiscase,use
ProDwgtableCellRefmodelGet() toreturnthereferenceassemblyand
component referredtobythecellinarepeatregion.Thisfunctiondiffers
fromProDwgtableCellComponentGet() suchthatitreturnsreference
objects,evenifthecellattributeissettoNODUPLICATE orNODUPLICATE/
LEVEL.
Thefunction ProDrawingTablesUpdate() updatesrepeatregionsinall
tablestoaccountforchangestothemodelormodels.Itisequivalent totheCreo
Parametric command Table,Repeat Region,orUpdate.Thedrawingmust
bedisplayedinthecurrentwindow.
Note
Youmustcallthefunction ProMdlDisplay() todisplaythedrawingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric command Table,Repeat Region,orUpdate.Thedrawingmust
bedisplayedinthecurrentwindow.
Note
Youmustcallthefunction ProMdlDisplay() todisplaythedrawing
beforeusingthefunction ProDrawingTablesUpdate().
1276 Creo®Parametric TOOLKIT User’sGuideCreatingBOMBalloons
BOMballoonsarecircularcalloutscreatedinanassemblydrawing.Theyshows
theBillofMaterialsinformation foreachcomponent. YoucanaddtheBOM
balloonsinthedrawingusingthefunctionsdescribedinthissection.
BeforeyoucanaddBOMballoons,youmustcreateatable,addtherepeatregion,
enterthedesiredreportsymbols,anddesignatetheBOMballoonregion.After
thisyoucanshowBOMballoonsonaselectedassemblyview.
Functions Introduced:
•ProDwgtableCellRegionGet()
•ProBomballoonCr eate()
•ProBomballoonAllCr eate()
•ProBomballoonByComponentCre ate()
•ProBomballoonByRecordCre ate()
•ProBomballoonClean()
Thefunction ProDwgtableCellRegionGet() returnstheIDoftherepeat
region.Youmustspecifythenameofthetable,thecolumnandrowIDasinput
parameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProBomballoonByRecordCre ate()
•ProBomballoonClean()
Thefunction ProDwgtableCellRegionGet() returnstheIDoftherepeat
region.Youmustspecifythenameofthetable,thecolumnandrowIDasinput
parameters.
Thefunction ProBomballoonCreate() createstheBOMballoonsatthe
specifiedview.Theinputargumentsare:
•pro_drawing—Specifies thenameofthedrawing.
•pro_table—Specifies thenameofthetablethatcontainstherepeatregionand
thebillofmaterial.
•region_id—Specifies theIDoftherepeatregionthatcontainsthebillof
material.IftheIDoftherepeatregioninthetableis-1,usetherepeatregion
withIDas0inthetable.
•pro_view—Specifies theviewwheretheballoonsmustbeadded.
Thefunction ProBomballoonAllCreate() createstheBOMballoonstothe
firstviewofthedrawing.
Thefunction ProBomballoonByComponentCreate() createstheballoons
atthespecifiedviewandonthespecifiedcomponent. Iftheviewisspecifiedas
NULL,theballoonsareaddedtothefirstviewofthedrawing.Specifythepathto
thecomponent ascomponent_memb_id_tab.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxatthespecifiedviewandonthespecifiedcomponent. Iftheviewisspecifiedas
NULL,theballoonsareaddedtothefirstviewofthedrawing.Specifythepathto
thecomponent ascomponent_memb_id_tab.
Thefunction ProBomballoonByRecordCreate() createstheballoonsfor
thespecifiedrecordintheBOMtable.Theinputargumentsare:
•pro_drawing—Specifies thenameofthedrawing.
•pro_table—Specifies thenameofthetablethatcontainstherepeatregionand
thebillofmaterial.
Drawings 1277•region_id—Specifies theIDoftherepeatregionthatcontainsthebillof
material.If theIDoftherepeatregioninthetableis-1,usetherepeatregion
withIDas0inthetable.
•pro_view—Specifies theviewwheretheballoonsmustbeadded.Specifythis
argumenttocreatetheballoonswithoutaleader.
•table_r ecord_index—Specifies therecordintheBOMtable.Theballoonsare
createdatthefirstcomponent thatmatchesthespecifiedrecord.
•reference_memb_id_tab—Specifies thepathtothecomponent. Thispathis
usedasreferencefortheleaderoftheballoon.
•reference_id—Specifies theIDofthecomponent. WhentheIDissettoK_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•reference_memb_id_tab—Specifies thepathtothecomponent. Thispathis
usedasreferencefortheleaderoftheballoon.
•reference_id—Specifies theIDofthecomponent. WhentheIDissettoK_
NOT_USED, theballoonsareattachedwithoutleaders.
•reference_type—Specifies thetypeofcomponent usingtheenumerated data
typeProType.
•attach_note_location—Specifies aProArray oftheattachment pointforthe
balloonsonthecomponent.
Thefunction ProBomballoonClean() cleansupthelocationanddisplayof
BOMballoonsinthespecifiedview.Theinputargumentsare:
•pro_drawing—Specifies thenameofthedrawing.
•pro_view—Specifies theviewwhereBOMballoonshavebeenadded.
•clean_pos—Specifies abooleanvaluetoindicateiftheballoonmustbe
cleaned.
•existing_snap_lines—Specifies abooleanvaluetoindicateiftheexistingsnap
linesmustbeusedforthecleanup.
•offset_fr om_view_outline—Specifies theoffsetdistancefortheballoon
placement fromtheviewoutline.
•stagger—Specifies abooleanvaluetoindicateiftheballoonsmustbexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlinesmustbeusedforthecleanup.
•offset_fr om_view_outline—Specifies theoffsetdistancefortheballoon
placement fromtheviewoutline.
•stagger—Specifies abooleanvaluetoindicateiftheballoonsmustbe
staggeredatdifferentoffsetdistancefromtheviewoutline.
•create_stagger_snap_lines—Specifies theincremental valueforthestagger
distancebetweenthesnaplines.
•interballoons_distance—Specifies thedistancebetweentheBOMballoons.
•attach_to_surface—Specifies iftheleadersoftheballoonmustpointtoedges
orsurfaces.ToattachtheleadertoasurfacespecifythevalueasPRO_B_
TRUE.
DrawingDimensions
ThissectiondescribesCreoParametric TOOLKITfunctionsthatgiveaccessto
thetypesofdimension thatcanbecreatedindrawingmode.Theydonotapplyto
dimensions whicharecreatedinsolidmode,eitherthosecreatedautomatically as
aresultoffeaturecreation,orreferencedimensions createdinasolid.
1278 Creo®Parametric TOOLKIT User’sGuideTheProDimension objectisintroduced inthesectiononDimensions onpagexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaresultoffeaturecreation,orreferencedimensions createdinasolid.
1278 Creo®Parametric TOOLKIT User’sGuideTheProDimension objectisintroduced inthesectiononDimensions onpage
556;readtheexplanation ofProDimension atthestartofthatsectionbefore
readingfurther.
Dimensions createdindrawingmodearestoredeitherinthesolidorinthe
drawing,depending uponthesettingoftheconfig.pro option CREATE_
DRAWING_DIMS_ONLY. ThedefaultisNO,meaningthatthedimensions willbe
storedinthesolid.RefertotheCreoParametric DetailedDrawingsHelpformore
information onthevarioustypesofcreateddimension, andtheirbehavior.
TheownerfieldintheProDimension objectalwaysreferstothemodelin
whichthedimension isstored.
Thefunction ProDrawingDimensionVisit(), describedinthesectionon
Dimensions onpage556,canbeusedtofindallthedimensions storedina
drawing.
DrawingDimensionAttachments andDimension
Creation
Functions Introduced:
•ProDrawingDimAttachpointsGet()
•ProDrawingDimensionCr eate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawing.
DrawingDimensionAttachments andDimension
Creation
Functions Introduced:
•ProDrawingDimAttachpointsGet()
•ProDrawingDimensionCr eate()
Thefunction ProDrawingDimAttachpointsGet() retrievestheentitiesto
whichadimension isattachedandthetypeofattachments. Thisisapplicable only
fordimensions createdinthedrawingmode.
Note
Dimensions createdinsolidmodearestoredinadifferentwayfromthose
createdinadrawing,becauseoftheirdifferentrole,andtheirattachments are
notaccessible tothisfunction.Ifthefunctioniscalledforafunctioncreatedin
solidmode,itwillreturnanerror.
Theinformation abouttheentitiestowhichthedimension isattachedisgivenby
thefollowingoutputarguments:
•attachments_arr—Specifies aProArray ofentitiestowhichadimension is
attached.Eachattachment pointisdescribedbytwoconsecutive array
elements,ofwhichthesecondonemaybeNULL.Ifbothelementsarenot
NULL,thentheattachment pointreferstotheintersection oftheelements.If
thesecondelementisNULL,thentheattachment pointreferstothefirstone.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelements,ofwhichthesecondonemaybeNULL.Ifbothelementsarenot
NULL,thentheattachment pointreferstotheintersection oftheelements.If
thesecondelementisNULL,thentheattachment pointreferstothefirstone.
•dsense_arr—Specifies aProArray ofProDimSense thatgivesmore
information abouthowthedimension attachestotheentities.
Drawings 1279ProDimSense isdeclaredinheaderfileProDimension.h. Thisisthe
declaration:
typedef struct pro_dim_sense {
ProDimSenseType type;
int sense;
ProDimAngleSense angle_sense;
ProDimOrient orient_hint;
}ProDimSense;
Thetype fieldindicateswhattypeofinformation isbeingprovidedbythe
senseand/or angle_sense fields.Thefollowingsectionslistthevaluesof
ProDimSenseType withanexplanation ofthevalueofsenseandangle_
senseneededineachcase.
1280 Creo®Parametric TOOLKIT User’sGuideNote
Someoftheexplanations belowrefertothedirectionofanentity.Eachentity
(whichincludes3Dedgesandcurves,and2Ddraftentities)hasaninherent
directionwhichisthedirectioninwhichitsparameter “t”increases.InthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSomeoftheexplanations belowrefertothedirectionofanentity.Eachentity
(whichincludes3Dedgesandcurves,and2Ddraftentities)hasaninherent
directionwhichisthedirectioninwhichitsparameter “t”increases.Inthe
datastructuredescription oftheentity,ProCurvedata, thefirstend
specifiedisalwaystheendatwhicht=0.Forexample,thedirectionofaline
entityisfromfieldend1toend2inProLinedata.
•PRO_DIM_SNS_TYP_NONE —Inthiscase,nootherinformation isneeded
todescribetheattachment points.Forexample,ifthereisasingleattachment
whichisastraightline,thedimension isthelengthoftheline;ifthe
attachments aretwoparallellines,thedimension isthedistancebetweenthem.
•PRO_DIM_SNS_TYP_PNT —Inthiscasethesensefieldissettoavalue
oftheenum ProPointType (declaredintheheader),whichspecifiesthe
partoftheentitytowhichthedimension isattached.Thepossiblevaluesare
these:
Drawings 1281○PRO_POINT_TYP_END1 —Thefirstend(thatis,where“t”=0)
○PRO_POINT_TYP_END2 —Thesecondend(thatis,where“t”=1.0)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpartoftheentitytowhichthedimension isattached.Thepossiblevaluesare
these:
Drawings 1281○PRO_POINT_TYP_END1 —Thefirstend(thatis,where“t”=0)
○PRO_POINT_TYP_END2 —Thesecondend(thatis,where“t”=1.0)
○PRO_POINT_TYP_CENTER —Thecenter,ifentityisanarcoracircle
○PRO_POINT_TYP_NONE —Thisisequivalent tosetting typetoPRO_
DIM_SNS_TYP_NONE
○PRO_POINT_TYP_MIDPT —Themidpointoftheentity(where“t”=
0.5)
•PRO_DIM_SNS_TYP_SPLN_PNT —Thismeansthattheattachment istoa
pointofaspline.Thesensefieldissettotheindexofthesplinepoint.
•PRO_DIM_SNS_TYP_TGT_IDX —Thedimension attachestoatangentof
theentity,whichisanarcorcircle.Thesensefieldissettotheindexofthe
tangentinalistofallpossibletangentsorderedbythe“t”valueatwhichthey
touchtheentity.
•PRO_DIM_SNS_TYP_LIN_AOC_TGT —Thedimension isthe
perpendicular distancebetweenalineandatangenttoanarcoracirclewhich
isparalleltotheline.Thevalueofsenseisoneofthevaluesoftheenum
ProDimLinAocTgtSense. Ifthetwopossibletangentsareondifferentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxperpendicular distancebetweenalineandatangenttoanarcoracirclewhich
isparalleltotheline.Thevalueofsenseisoneofthevaluesoftheenum
ProDimLinAocTgtSense. Ifthetwopossibletangentsareondifferent
sidesofthelineentity(becausethedistancefromthelinetothecenterisless
thantheradius)thenthetwotangentsaredistinguished asleftorrightofthe
line(withrespecttoitsnaturaldirection). Ifthetwotangentsareonthesame
sideoftheline(becausethedistancefromthelinetothecenterismorethan
theradius),thetwotangentsaredistinguished asonthesamesideofthearc/
circlecenter(0)orontheoppositeside(1).Thereisanenumvalueforeachof
thefourpossiblecombinations ofwaystoidentifyatangent,thoughofcourse
onlytwoarepossibleforaparticularlineandarc/circlepair.
ThefourvaluesofProDimLinAocTgtSense are:
•PRO_DIM_LIN_AOC_TGT_LEFT0—The tangentistotheleftoftheline,
andonthesamesideofthecenterofthearc/circleastheline.
•PRO_DIM_LIN_AOC_TGT_RIGHT0—The tangentistotherightoftheline,
andonthesamesideofthecenterofthearc/circleastheline.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandonthesamesideofthecenterofthearc/circleastheline.
•PRO_DIM_LIN_AOC_TGT_RIGHT0—The tangentistotherightoftheline,
andonthesamesideofthecenterofthearc/circleastheline.
•PRO_DIM_LIN_AOC_TGT_LEFT1—The tangentistotheleftoftheline,
andontheoppositesidofthecenterofthearc/circletotheline.
•PRO_DIM_LIN_AOC_TGT_RIGHT1—The tangentistotherightoftheline,
andontheoppositesideofthecenterofthearc/circletotheline.
•PRO_DIM_SNS_TYP_ANGLE —Thedimension istheanglebetweentwo
straightentities.Thefieldangle_sense isgivenbythestructure
1282 Creo®Parametric TOOLKIT User’sGuideProDimAngleSense whichcontainsthreebooleanfields.Theyhavethe
followingmeaning:
○is_first—Is settoTRUEiftheangledimension startsfromthisentity
inacounterclockwise direction; FALSEifthedimension endsatthis
entity.ThevaluemustbeTRUEforoneentity,andFALSEfortheother.
○should_flip—If should_flip isFALSE,andtheentity'sinherent
directionisawayfromtheanglevertex,thenthedimension attachesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentity.ThevaluemustbeTRUEforoneentity,andFALSEfortheother.
○should_flip—If should_flip isFALSE,andtheentity'sinherent
directionisawayfromtheanglevertex,thenthedimension attaches
directlytotheentity.Iftheentity'sdirectionistowardstheanglevertex,
thedimension isattachedtoawitnesslinewhichisinlinewiththeentity
butontheoppositesideoftheanglevertex—If should_flip isTRUE,
thenthesecasesareinterchanged.
○pic_vec_dir—Reserved forfutureuse.
•PRO_DIM_SNS_TYP_PNT_ANGLE—The dimension istheanglebetweena
lineentityandthetangenttoacurvedentityatoneofitsends.Thecurve
attachment isofthistype.(Thelineattachment isofthetypePRO_DIM_
SNS_TYP_PNT describedabove.)Inthiscaseboththeangleandangle_
sensefieldsmustbeset:senseshowswhichendofthecurvethe
dimension isattachedto;angle_sense showsthedirectioninwhichthe
dimension rotatesandinwhichsideofthetangentitattaches.
Thefieldorient_hint describestheorientation ofthedimension incases
wherethiscannotbededucedfromtheattachments themselves. (Whensuchaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdimension rotatesandinwhichsideofthetangentitattaches.
Thefieldorient_hint describestheorientation ofthedimension incases
wherethiscannotbededucedfromtheattachments themselves. (Whensucha
dimension iscreatedinteractively inCreoParametric, theuserispromptedforthe
extrainformation.) Forexample,iftheattachments aredatumpointsthatarenot
verticallyorhorizontally aligned,CreoParametric needstoknowwhetherthe
dimension istobehorizontal, vertical,orslanted.Thehintreferstothedimension
itself,nottheattachment, althoughitisafieldinProDimSense. Creo
Parametric looksatthevalueoforient_hint inthefirstiteminthe
ProDimSense arrayyouprovide.
ThevaluesofProDimOrient are:
•PRO_DIM_ORNT_NONE—No orientation information isneededorprovided.
•PRO_DIM_ORNT_HORIZ—The dimension ishorizontal
•PRO_DIM_ORNT_VERT—The dimension isvertical
•PRO_DIM_ORNT_SLANTED—The dimension isslanted
•PRO_DIM_ORNT_ELPS_RAD1—The majordiameterofanellipse
•PRO_DIM_ORNT_ELPS_RAD2—The minordiameterofanellipsexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_DIM_ORNT_VERT—The dimension isvertical
•PRO_DIM_ORNT_SLANTED—The dimension isslanted
•PRO_DIM_ORNT_ELPS_RAD1—The majordiameterofanellipse
•PRO_DIM_ORNT_ELPS_RAD2—The minordiameterofanellipse
•PRO_DIM_ORNT_ARC_ANG—The angleofanarc
•PRO_DIM_ORNT_ARC_LENGTH—The lengthofanarc
Drawings 1283•PRO_DIM_ORNT_LIN_TANCRV_ANG—If thedimension isattachedtoa
lineandanendpointofacurve,thedefaultdimension willbealinear
dimension showingthedistancebetweenthelineandthecurvepoint.Ifyou
wantthedimension toshowinsteadtheanglebetweenthelineandthetangent
atthecurvepoint,set“orient_hint” tothisvalue.
Thefunction ProDrawingDimCreate() hasbeendeprecated. Usethe
function ProDrawingDimensionCreate() instead.Thefunction
ProDrawingDimensionCreate() createsadimension inadrawing.Ittakes
asinputanarrayofProSelection objectsandanarrayofProDimSense
structuresthatdescribetherequiredattachments. Itwillstorethenewdimension
inthesolidorthedrawingdepending uponthesettingoftheconfig.proxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasinputanarrayofProSelection objectsandanarrayofProDimSense
structuresthatdescribetherequiredattachments. Itwillstorethenewdimension
inthesolidorthedrawingdepending uponthesettingoftheconfig.pro
option CREATE_DRAWING_DIMS_ONLY. Specifytheorientation ofthe
dimension intheinputargument orient_hint. Youcancreatedimensions thathave
intersection typeofreference. Theintersection typeofreferenceisareferencethat
isderivedfromtheintersection oftwoentities.RefertotheCreoParametric
DetailedDrawingsHelpformoreinformation onintersection typeofreference.
Thedimension willbeaddedtothedrawingviewspecifiedinthe
ProSelection object.Ifyouwanttobuildtheattachment ProSelection
objectprogrammatically bycalling ProSelectionAlloc(), ratherthan
interactively using ProSelect(), callthefunction
ProSelectionViewSet() toensurethatyourProSelection specifiesthe
drawingview.
ThefunctionoutputsaProDimension objecttoidentifythenewdimension.
OrdinateDimensions
Functions Introduced:
•ProDrawingDimIsOrdinate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdrawingview.
ThefunctionoutputsaProDimension objecttoidentifythenewdimension.
OrdinateDimensions
Functions Introduced:
•ProDrawingDimIsOrdinate()
•ProDrawingOrdbaselineCr eate()
•ProDrawingDimT oOrdinate()
•ProDrawingDimT oLinear()
Thefunction ProDrawingDimIsOrdinate() tellsyouwhetheraparticular
dimension isanordinatedimension. Ifso,italsooutputsaProDimension
objecttoidentifythebaselinedimension beingreferenced.
Thefunction ProDrawingOrdbaselineCreate() convertsaspecified
dimension toanordinatebaselinedimension. Thechoiceofwhichendofthe
dimension becomesthebaselineismadebyaninputoftypeProVector which
shouldbeclosetotheappropriate attachment entity,andbein3Dsolid
coordinates. ThefunctionoutputsanewProDimension objectwhichisusedto
identifythebaselinedimension whenconverting toordinateotherdimensions
whichshouldsharethatbaseline.
1284 Creo®Parametric TOOLKIT User’sGuideThefunction ProDrawingDimToOrdinate() convertsanexistinglinearxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichshouldsharethatbaseline.
1284 Creo®Parametric TOOLKIT User’sGuideThefunction ProDrawingDimToOrdinate() convertsanexistinglinear
dimension toordinate.ItrequiresasoneofitsinputsaProDimension object
thatwasoutputfromProDrawingOrdbaselineCreate() asinputto
identifythebaseline.
Thefunction ProDrawingDimToLinear() convertsanexistingordinate
dimension tolinear.
Thelastthreefunctionsinthissectionallupdatethedisplayofthedimension ifit
iscurrentlydisplayed.
Example15:CommandCreationofDatumPointTable
ThesamplecodeinthefileUgDrawingDimensions.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
drawing, showsacommand whichcreatesverticalandhorizontal ordinate
dimensions fromeachdatumpointinamodelinadrawingviewtoaselected
coordinate systemdatum.
OtherDrawingDimensionProperties
Functions Introduced:
•ProDrawingDimIsAssociative()
•ProDrawingDimensionIsDisplayed()
•ProDrawingDimensionIsT oleranceDisplayed()
•ProDrawingDimensionV iewGet()
•ProDrawingDimSwitchV iew()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProDrawingDimIsAssociative()
•ProDrawingDimensionIsDisplayed()
•ProDrawingDimensionIsT oleranceDisplayed()
•ProDrawingDimensionV iewGet()
•ProDrawingDimSwitchV iew()
•ProDrawingDimensionPosGet()
•ProDrawingDimensionT extstyleGet()
•ProDrawingDimensionMove()
•ProDrawingDualDimensionGet()
•ProDimensionDualOptionsGet()
•ProDimensionDualOptionsSet()
•ProDrawingDimensionPathGet()
Ifyoucreateadimension whichattachesonlytodraftentitiesinthedrawing,the
dimension maybeassociative ornon-associative. Thissettingdependsonthe
settingofthedrawingsetupoption associative_dimensioning. The
associative statusofadimension remainsevenwhenthesetupoptionchanges,so
adrawingmaycontaindimensions ofbothtypes.Thefunction
ProDrawingDimIsAssociative() tellsyouwhetherornotaparticular
dimension isassociative. RefertotheDrawing User's Guideforafuller
description ofassociative draftdimensions.
Drawings 1285Thefunction ProDrawingDimensionIsDisplayed() identifieswhetheraxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdimension isassociative. RefertotheDrawing User's Guideforafuller
description ofassociative draftdimensions.
Drawings 1285Thefunction ProDrawingDimensionIsDisplayed() identifieswhethera
drawingdimension isdisplayedinthedrawing.
Thefunction ProDrawingDimensionIsToleranceDisplayed()
identifieswhetherthetolerancevalueisdisplayedonthedrawingdimension.
Thefunction ProDrawingDimensionViewGet() tellsyouwhatdrawing
viewadimension isbeingdisplayedin.ProDrawingDimSwitchView()
allowsyoutoswitchit'sdisplaytoanotherview.Notethatnotallviewswill
supportthedisplayofparticulardimension.
Thefunction ProDrawingDimensionPosGet() returnsthepositionofthe
centerofthetextboxforthespecifieddimension. Thecoordinates returnedbythis
functioncannotbeusedinthefunction ProDrawingDimensionMove(). Use
thefunction ProDimlocationTextGet() insteadofthefunction
ProDrawingDimensionPosGet().
Thefunction ProDrawingDimensionTextstyleGet() retrievesthetext
styleassignedtothespecifieddimension orreferencedimension. FromCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDrawingDimensionPosGet().
Thefunction ProDrawingDimensionTextstyleGet() retrievesthetext
styleassignedtothespecifieddimension orreferencedimension. FromCreo
Parametric 2.0M190onward,thefunction
ProDrawingDimensionTextstyleGet() hasbeensuperseded bythe
function ProAnnotationTextstyleGet().
Thefunction ProDrawingDimensionMove() allowsyoutomovethe
dimension texttoanewpositiononthedrawing.Usethefunction
ProDimlocationTextGet() togetthepositionbeforeandafterthemove.
Thefunction ProDrawingDualDimensionGet() identifieswhethera
drawingisusingdualdimensioning, andalsospecifiestheproperties ofthedual
dimensioning.
Thefunction ProDimensionDualOptionsGet() getsinformation aboutthe
displayoptionsforthespecifieddualdimension. Intheinputargument drawing,
specifythedrawinginwhichthedimension isdisplayed. Tospecifyadimension
inownermodel,specifytheargumentvalueasNULL.Theoutputargumentsare:
•type—From CreoParametric 5.0.0.0onward,thisargumentisnolongerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifythedrawinginwhichthedimension isdisplayed. Tospecifyadimension
inownermodel,specifytheargumentvalueasNULL.Theoutputargumentsare:
•type—From CreoParametric 5.0.0.0onward,thisargumentisnolonger
supported. Specifiesthetypeofdisplayforprimaryandsecondary dimension
usingtheenumerated datatypeProDualDimensionDisplayType. The
validvaluesare:
○PRO_SECONDARY_DIM_DISPLAY_OFF—Specifies thatsecondary
dimension isnotdisplayedinadualdimension.
○PRO_SECONDARY_DIM_DISPLAY_BOTTOM—Specifies thatthe
secondary dimension mustbeplacedbelowtheprimarydimension.
○PRO_SECONDARY_DIM_DISPLAY_RIGHT—Specifies thatthe
secondary dimension onthesamelineastheprimarydimension, onthe
rightside.
•secondary_unit—From CreoParametric 5.0.0.0onward,thisargumentisno
longersupported. Specifiesthenameoftheunitforsecondary dimension.
1286 Creo®Parametric TOOLKIT User’sGuide•dim_decimals—Specifies thenumberofdecimalplacesforthesecondary
dimension.
•tol_decimals—Specifies thenumberofdecimalplacesfortoleranceinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1286 Creo®Parametric TOOLKIT User’sGuide•dim_decimals—Specifies thenumberofdecimalplacesforthesecondary
dimension.
•tol_decimals—Specifies thenumberofdecimalplacesfortoleranceinthe
secondary dimension.
Usethefunction ProDimensionDualOptionsSet() tosetthedisplay
optionsfordualdimensions. FromCreoParametric 5.0.0.0onward,thearguments
typeandsecondary_unit arenolongersupported forthefunction
ProDimensionDualOptionsSet().
Thefunction ProDrawingDimensionPathGet() extractsthecomponent
pathforadimension displayedinadrawing.
Drawings 128760
Production Applications:
Sheetmetal
GeometryAnalysis................................................................................................1290
BendTablesandDimensions .................................................................................1293
BendAllowanceParameters..................................................................................1294xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBendAllowanceParameters..................................................................................1294
UnattachedPlanarWallFeature.............................................................................1295
FlangeWallFeature..............................................................................................1305
ExtendWallFeature..............................................................................................1321
SplitAreaFeature.................................................................................................1325
PunchandDieFormFeatures................................................................................1327
QuiltFormFeature................................................................................................1334
FlattenFormFeature.............................................................................................1337xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFlattenFormFeature.............................................................................................1337
ConvertFeatures..................................................................................................1339
RipFeatures.........................................................................................................1343
CornerReliefFeature............................................................................................1352
EditingCornerReliefFeature.................................................................................1357
EditingCornerSeams............................................................................................1359
BendFeature........................................................................................................1364
EditingBendReliefs..............................................................................................1376xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEditingBendReliefs..............................................................................................1376
EdgeBendFeature...............................................................................................1379
UnbendFeature....................................................................................................1382
FlatPatternFeature...............................................................................................1386
BendBackFeature................................................................................................1387
SketchFormFeature.............................................................................................1389
JoinFeature..........................................................................................................1395
TwistWallFeature.................................................................................................1398xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTwistWallFeature.................................................................................................1398
MergeWallFeature...............................................................................................1402
Recognizing SheetMetalDesignObjects................................................................1404
1288 Creo®Parametric TOOLKIT User’sGuideThischapterdescribesthesheetmetalgeometryanalysisandbendtablefunctions.
Italsointroduces anddescribesthefeatureelementtreesforthesheetmetal
features.
Production Applications: Sheetmetal 1289GeometryAnalysis
CreoParametric TOOLKITgeometryanalysisfunctionsprovideforanalysisof
sheetmetalpartgeometryandensureeffectivecustomization ofsheetmetalparts.
Theseanalysesincludeextracting partthicknessdataandobtainingedgeand
surfacedataforsheetmetalcomponents.
Inaddition,sheetmetalbendedgeandbendsurfacefunctionssupportanalyses
that:
•Extractbendinformation associated withbendlines(K-factor,Y-factor,bendxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacedataforsheetmetalcomponents.
Inaddition,sheetmetalbendedgeandbendsurfacefunctionssupportanalyses
that:
•Extractbendinformation associated withbendlines(K-factor,Y-factor,bend
deduction, bendallowance).
•Findbendlineswhenapartisinaflatstate.
•MapflatstateIDstobentstateIDs.
Functions Introduced:
•ProSmtPartThicknessGet()
•ProSmtSurfaceT ypeGet()
•ProSmtedgeContourGet()
•ProSmtOppsurfGet()
•ProSmtOppedgeGet()
•ProSmtBendsrfPar entGet()
•ProSmtBendsrfChildGet()
•ProSmtBendedgeChildGet()
•ProSmtBendedgePar entGet()
•ProSmtMdlIsFlatStateInstance()
•ProFaminstanceIsFlatState()
•ProSmtBendsrfInfoGet()
Thefunction ProSmtPartThicknessGet() returnsthedimension that
definesthethicknessofthespecifiedsheetmetalcomponent. Ifthemodel
containsthethicknessparameter,thenthisdimension cannotbemodifieddirectly.
Usethefunction ProParameterValueWithUnitsSet() toassignthe
valueofthethicknessparameter.Ifyouspecifyanonsheetmetalpart,
ProSmtPartThicknessGet() returns PRO_TK_BAD_CONTEXT.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProParameterValueWithUnitsSet() toassignthe
valueofthethicknessparameter.Ifyouspecifyanonsheetmetalpart,
ProSmtPartThicknessGet() returns PRO_TK_BAD_CONTEXT.
Thefunction ProSmtSurfaceTypeGet() returnsthetypeofthespecified
solidsurface.Thisenablesyoutodetermine whetherasurfaceiscreatedbya
sheetmetalfeature,andtodistinguish amongthedifferenttypesofsheetmetal
surfaces,suchasside,white,andgreen.
Thepossiblevaluesareasfollows:
•PRO_SMT_SURF_NON_SMT—The surfacewascreatedbyasolidfeature.
1290 Creo®Parametric TOOLKIT User’sGuide•PRO_SMT_SURF_SIDE—The surfaceisasidesurfacecreatedbyasheet
metalfeature.
•PRO_SMT_SURF_FACE—The surfaceistheface(green)surfacecreatedbya
sheetmetalfeature.
•PRO_SMT_SURF_OFFSET—The surfaceistheoffset(white)surfacecreated
byasheetmetalfeature.
Thefunction ProSmtedgeContourGet() returnsacompletecontourthat
containsthespecifiededge.Thisfunctionreturns PRO_TK_BAD_CONTEXT ifthe
edgeisnotonthegreenorwhitesideofthespecifiedpart.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProSmtedgeContourGet() returnsacompletecontourthat
containsthespecifiededge.Thisfunctionreturns PRO_TK_BAD_CONTEXT ifthe
edgeisnotonthegreenorwhitesideofthespecifiedpart.
Thefunction ProSmtOppsurfGet() returnsasurfacethatisopposite(offset
to)thespecifiedsurface.
Thefunction ProSmtOppedgeGet() returnstheedgethatisopposite(offset
to)thespecifiededge.Edgedataforfunction ProSmtOppedgeGet() usesthe
followingdefinitions:
•AnedgeislyingonagreensurfaceifoneofitssurfaceshasSHEETMET AL
TYPE=FACE.
•AnedgeislyingonawhitesurfaceifoneofitssurfaceshasSHEETMET AL
TYPE=OFFSET.
•Theoppositeedgetoanedgemustbeonthesurfaceoppositetheoriginal
edge'ssurfaceandmustbeageometrical offsetoftheoriginaledge.
•Anedgeisinaperipheral contourif,andonlyifthefollowingaretrue:
○Itisinthepartgeometry.
○ExactlyoneofitssurfacesiseitherFACEorOFFSET.
Thefunction ProSmtBendsrfParentGet() returnstheparentofthe
specifiedsurface.Forexample,ifthespecifiedsurfaceisinbentposition,thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○Itisinthepartgeometry.
○ExactlyoneofitssurfacesiseitherFACEorOFFSET.
Thefunction ProSmtBendsrfParentGet() returnstheparentofthe
specifiedsurface.Forexample,ifthespecifiedsurfaceisinbentposition,this
functionreturnsthesurfacethatisthemostrecent,unbentequivalent ofthe
specifiedsurface.Seenotesbelow.
Thefunction ProSmtBendsrfChildGet() returnstheactive(visible)child
surfaceofthespecified,inactive(invisible) surface.Asurfaceisactive(visible)if
itisinthepartgeometrylist.Seenotesbelow.
Thefunction ProSmtBendedgeParentGet() returnstheparentofthe
specifiededge.Forexample,ifthespecifiededgeisinbentposition,thisfunction
returnstheedgethatisthemostrecent,unbentequivalent ofthespecifiededge.
Seenotesbelow.
Thefunction ProSmtBendedgeChildGet() returnstheactive(visible)child
edgeofthespecified,inactive(invisible) edge.Anedgeisactive(visible)ifboth
itssurfacesareactiveandtheedgeiscontainedinthecontoursofbothsurfaces.
Seenotesbelow.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxedgeofthespecified,inactive(invisible) edge.Anedgeisactive(visible)ifboth
itssurfacesareactiveandtheedgeiscontainedinthecontoursofbothsurfaces.
Seenotesbelow.
Production Applications: Sheetmetal 1291•Edgesandsurfacesinquiltgeometryarealsovisible,buttheyareinvalidas
inputtosheetmetal functions.
•Surfaceandedgeparentandchildfunctionsusethefollowingdefinitions:
○Anedgeorsurfacehasaparentiftheedgeorsurfaceisaresultofbending
orunbending anotheredgeorsurface.
○Ifanedgeorsurfaceisactiveandisaresultofbendingorunbending, any
parentofthisedgeorsurfacethatisinthechainofbendsorunbendshas
thisedgeorsurfaceastheactivechild.
Thefunction ProSmtMdlIsFlatStateInstance() checksifthemodelisa
flatstateinstancemodel.
Thefunction ProFaminstanceIsFlatState() checksifthefamily
instanceofthemodelisasheetmetalflatinstanceornot.
Thefunction ProSmtBendsrfInfoGet() getsalltheinformation aboutthe
specifiedbendsurfaceinasheetmetalpart.Youcanspecifyasinput,thefacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinstanceofthemodelisasheetmetalflatinstanceornot.
Thefunction ProSmtBendsrfInfoGet() getsalltheinformation aboutthe
specifiedbendsurfaceinasheetmetalpart.Youcanspecifyasinput,theface
surface PRO_SMT_SURF_FACE or,theoffsetsurface PRO_SMT_SURF_
OFFSETwhichiscreatedbythesheetmetalfeature.Thecylindrical andplanar
surfaces,whicharecreatedbyunbending thecylindrical surfaces,canbespecified
asinput.
Thefollowinginformation iscollected:
•radius—Specifies thebendradius.
•is_inside_radius—Specifies PRO_B_TRUE ifthebendradiusisinside.It
returns PRO_B_FALSE ifthebendradiusisoutside.
•angle—Specifies thebendangleindegrees.
•dev_length—Specifies thedeveloped lengthofthesurface.
•dev_len_info—Specifies astructure,thatcontainsinformation aboutthevalues
ofvariousparameters, whichwereusedtocalculatethedeveloped length.The
structure ProSmtDvlLenCalcInfo containsthefollowinginformation:
○method—Specifies themethodusedtocalculatethedeveloped length.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofvariousparameters, whichwereusedtocalculatethedeveloped length.The
structure ProSmtDvlLenCalcInfo containsthefollowinginformation:
○method—Specifies themethodusedtocalculatethedeveloped length.The
methodisspecifiedusingtheenumerated datatypeProDvlLenMethod.
○model—Specifies themodel,whosebendallowance settingsareusedto
calculatethedeveloped length.Usually,themodelisthepartthatownsthe
specifiedbendsurface.Amodelcanalsobeareferencepart,whenthe
specifiedsurfacehasbeencopiedfromareferencepart.Herethe
developed lengthiscalculated according tothebendallowance settingsof
thereferencepart,orthebendallowance settingsofafeatureinthe
referencepart.
1292 Creo®Parametric TOOLKIT User’sGuide○y_factor_value—Specifies thevalueofK-factororY-factorusedto
calculatethedeveloped length.
Note
y_factor_value isspecifiedonlyifthemethodusedtocalculate
developed lengthisPRO_DVL_LEN_DRIVEN_BY_Y_FACTOR.
○bend_table—Specifies thenameofthebendtablethatcontrolsthebend
allowance calculations forthedeveloped length.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdeveloped lengthisPRO_DVL_LEN_DRIVEN_BY_Y_FACTOR.
○bend_table—Specifies thenameofthebendtablethatcontrolsthebend
allowance calculations forthedeveloped length.
○formula—Specifies theformulathatwasusedtocalculatethedeveloped
length.
○allowance—Specifies thevalueofbendallowance fromthebendtable.
○dimension—Specifies thedimension IDassociated withthedeveloped
length.Ifthemethodusedtocalculatedeveloped lengthisPRO_DVL_
LEN_DRIVEN_BY_DIMENSION, thendeveloped lengthisspecified
manuallybytheuser.
○driven_by_part_settings—Specifies ifthedeveloped lengthisdrivenby
bendallowance settingsofapartorbybendallowance settingsofa
feature. PRO_B_TRUE indicatesthatthebendallowance settingsofapart
areused.
BendTablesandDimensions
Bendtablefunctionssupportreadinginorremovingbenttabledataforasheet
metalpartorfeatureinthepart.
Sheetmetaldimension functionsfindorsetwhetherornotdeveloped length
dimensions aredriven.
Functions Introduced:
•ProSmtPartBendtableApply()
•ProSmtPartBendtableRemove()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmetalpartorfeatureinthepart.
Sheetmetaldimension functionsfindorsetwhetherornotdeveloped length
dimensions aredriven.
Functions Introduced:
•ProSmtPartBendtableApply()
•ProSmtPartBendtableRemove()
•ProSmtFeatur eBendtableApply()
•ProSmtFeatur eBendtableRemove()
•ProSmtFeatur eDevldimsGet()
•ProSmtDevldimIsDriven()
•ProSmtDevldimDrivenSet()
Production Applications: Sheetmetal 1293Thefunction ProSmtPartBendtableApply() appliesthespecifiedbent
tabletothesheetmetalpart,andthenregenerates thepart.Theinputargument
from_filespecifieswhetherthebendtableistobeappliedfrommemoryorfrom
thespecifiedfile.
Thefunction ProSmtPartBendtableRemove() removesthespecifiedbend
tablefromthesheetmetalpart,andthenregenerates thepartusingtheYFactor.
Thefunction ProSmtFeatureBendtableApply() appliesthespecified
benttabletothesheetmetalpartfeature,andthenregenerates thepart.Theinput
argument from_filespecifieswhetherthebendtableistobeappliedfrommemory
orfromthespecifiedfile.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbenttabletothesheetmetalpartfeature,andthenregenerates thepart.Theinput
argument from_filespecifieswhetherthebendtableistobeappliedfrommemory
orfromthespecifiedfile.
Thefunction ProSmtFeatureBendtableRemove() setsasheetmetal
featuretousethepartbendtableinsteadofthefeaturebendtable,andthen
regenerates thepart.
Thefunction ProSmtFeatureDevldimsGet() returnsthedeveloped length
dimensions forthespecifiedsheetmetalbendorwallfeature.Italsoreturnsthe
surfaceswhosedeveloped lengththesedimensions define.
Thefunction ProSmtDevldimIsDriven() specifieswhetheradeveloped
lengthdimension isdrivenornot.Usethefunction
ProSmtDevldimDrivenSet() tosetadeveloped lengthdimension todriven.
BendAllowanceParameters
Youcansetthesheetmetalbendallowance properties usingthebendallowance
parameters. Theseparameters canbedefinedusingtheProParameter
functions. Formoreinformation onParameters, refertothechapterCore:
Parameters onpage208.
Youcannoteditthesebendallowance parameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameters. Theseparameters canbedefinedusingtheProParameter
functions. Formoreinformation onParameters, refertothechapterCore:
Parameters onpage208.
Youcannoteditthesebendallowance parameters.
UpdateBendAllowancefromAssignedMaterial
Parameter Name—SMT_UPDATE_BEND_ALLOW_INFO
Theparameter allowsyoutosettheotherbendallowance parameters tobe
dependent ontheassignedmaterial.
Type—Boolean
Values—YesorNo
DefaultValue—Yes
BendAllowanceType
Parameter Name—SMT_PART_BEND_ALLOW_FACTOR_TYPE
1294 Creo®Parametric TOOLKIT User’sGuideTheparameter allowsyoutosetthebendallowance type.Youcansetwhetherthe
KfactororYfactormustbeused.
Type—String
Values—KfactororYfactor
DefaultValue—Yfactor
BendAllowanceFactorValue
Parameter Name—SMT_PART_BEND_ALLOWANCE_FACTOR
Theparameter allowsyoutosetthevalueofthebendallowance factor.
Type—Real number
Values—Numeric value
DefaultValue—0.5
BendAllowanceTableName
Parameter Name—SMT_PART_BEND_TABLE_NAME
Theparameter allowsyoutodefinethenameofthebendallowance table.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxType—Real number
Values—Numeric value
DefaultValue—0.5
BendAllowanceTableName
Parameter Name—SMT_PART_BEND_TABLE_NAME
Theparameter allowsyoutodefinethenameofthebendallowance table.
Type—String
Values—Can beemptyorlistofallthenamesofthebendtablesfromthepart.
DefaultValue—Empty
Unattached PlanarWallFeature
Aplanarwallisaplanarsectionofasheetmetalpart.Itcaneitherbeaprimary
wall(thefirstwallinthedesign),orasecondary wall(whichisdependent onthe
primarywall).Planarwallscantakeanyflatshape.
CreoParametric TOOLKITsupportsplanarwallsthatarecreatedusingtheFill
ToolorthePlanarWalltool.PlanarwallscreatedusingtheFillToolare
unattached andmaybetheprimarywall.WallcreatedusingtheFlatWalltoolare
secondary wallsthatareattachedtoexistingwalledges,andmayormaynothave
abendapplied.
Unattached PlanarWallbasedontheFillTool
Asheetmetalplanarwallcreatedbasedonthefilltoolsharesmostofthesame
elementsasthestandardfillfeaturedocumented intheheaderfile
ProFlatSrf.h. TheelementtreeshouldincludesomeofthefollowingsheetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAsheetmetalplanarwallcreatedbasedonthefilltoolsharesmostofthesame
elementsasthestandardfillfeaturedocumented intheheaderfile
ProFlatSrf.h. Theelementtreeshouldincludesomeofthefollowingsheet
metalspecificelementstogenerateasheetmetalfeature:
Production Applications: Sheetmetal 1295•PRO_E_IS_UNATTACHED_WALL—Has aBooleanvaluethatspecifies
whetherthefeatureisactuallyaflatwall.
•PRO_E_STD_DIRECTION—Specifies thematerialcreationdirectionofthe
sheetmetalflatwall,whichallowsyoutocontrolthethicknessofthefirst
sheetmetalwall.
•PRO_E_STD_SMT_THICKNESS—Has adoublevaluethatspecifiesthewall
thickness. Ifthisfeatureisnotthefirstwallfeatureinthepart,thethickness
valueisirrelevantandcanbe0.0.Thefeatureinheritsthethicknessofthefirst
wallfeature.Thiselementisnotrequiredandcannotbemodifiedifthesheet
metalthicknessparameter isalreadyassignedinthemodel.
•PRO_E_STD_SMT_SWAP_DRV_SIDE—Specifies whethertoswapthesides
ofthedrivingandtheoffsetsurfaces(thegreenandwhitesurfacesofthe
wall).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmetalthicknessparameter isalreadyassignedinthemodel.
•PRO_E_STD_SMT_SWAP_DRV_SIDE—Specifies whethertoswapthesides
ofthedrivingandtheoffsetsurfaces(thegreenandwhitesurfacesofthe
wall).
Fordetailsonstandardfillfeatures,refertothesectionFillFeatureonpage846.
FeatureElementTreefortheAttachedFlatWall
Feature
TheelementtreeforFlatWallfeatureisdocumented intheheaderfile
ProSmtFlatWall.h andhasasimplestructure.Thefollowingfigure
demonstrates thefeatureelementtreestructure:
1296 Creo®Parametric TOOLKIT User’sGuideFeatureElementtreeforFlatWallFeature
Production Applications: Sheetmetal 12971298 Creo®Parametric TOOLKIT User’sGuidePRO_E_SMT_BEND_RELIEF
Thefeatureelementtreecontainsnonon-standard elementtypes.Thefollowing
listdetailsspecialinformation aboutsomeoftheelementsinthistree:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_WALL.
•PRO_E_SMT_WALL_TYPE—Specifies thewalltype.ForFlatWalls,this
shouldbePRO_SMT_WALL_TYPE_FLAT.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_WALL.
•PRO_E_SMT_WALL_TYPE—Specifies thewalltype.ForFlatWalls,this
shouldbePRO_SMT_WALL_TYPE_FLAT.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_SMT_FLAT_WALL_ATT_EDGE—Specifies theattachment edge.
•PRO_E_SMT_FLAT_WALL_ANGLE—Specifies thebendangleandconsists
ofthefollowingelements:
○PRO_E_SMT_FLAT_WALL_ANGLE_TYPE specifiestheangletypeand
isofthefollowingtypes:
◆PRO_BND_ANGLE_VALUE—uses anindicatedvalue.
◆PRO_BND_ANGLE_BY_PARAM—uses thedefaultvalueofthesheet
metalparameter SMT_DFLT_BEND_ANGLE.
◆PRO_BND_ANGLE_FLAT—uses noangleforthewall.
Production Applications: Sheetmetal 1299○PRO_E_SMT_FLAT_WALL_ANGLE_VAL—specifies theanglevalue.
○PRO_E_SMT_FLAT_WALL_ANGLE_FLIP—indicates whetherornotto
reversetheangledirection.
•PRO_E_STD_SECTION—Specifies thewallsection.Wallsectionscanbe
standardoruser-defined.Standardwallsectionsarestoredinthelocation
<creo_loadpoint>\<datecode>\Common Files\text\smt.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_STD_SECTION—Specifies thewallsection.Wallsectionscanbe
standardoruser-defined.Standardwallsectionsarestoredinthelocation
<creo_loadpoint>\<datecode>\Common Files\text\smt.
Thesestandardsectionscanberetrieved;theirdimensions modified,andcan
beaddeddirectlyintothePRO_E_STD_SECTION elementtreeasthePRO_
E_SKETCHER element.Thisdoesnotrequiredefinitionofasketchplaneor
viewingdirection,anditdoesnotrequireanincomplete featuretobecreated
asisdescribedinthechapterElementTrees:SketchedFeaturesonpage987.
Whenstandardsectionsareusedtocreatethewall,theCreoParametric user
interfacewillshowthecorrecttypeofsectioninthedropdownmenu(for
example:Rectangle,Trapezoid,L,T).
Ifauser-definedsectionistobeusedtocreateaflatwall,itmustconformtothe
followingrestrictions:
•Itmustbea2Dsection
•Itmustnotbenamedthesamenameasoneofthedefaultsectiontypesfrom
theCreoParametric loadpoint.
•Itmustcontainahorizontal centerline and2coordinate systems.The
centerline represents thealignment withtheattachment edge,andthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheCreoParametric loadpoint.
•Itmustcontainahorizontal centerline and2coordinate systems.The
centerline represents thealignment withtheattachment edge,andthe
coordinate systemsrepresenttheedgeendpoints.
•Thehorizontal dimension mustbespecified.
Whenuser-definedsectionsareusedtocreatethewall,CreoParametric
automatically createsnecessarysketchingplanesforthesectionduringcreation.
Therefore thesectionmaybeassigneddirectlyintothePRO_E_SKETCHER
elementwithoutdefiningthesketchplaneandwithoutcreatingthefeatureas
incomplete. Afterthefeaturehasbeencreated,the3Dsectioncanbeextracted
fromthefeatureelementtreeandthesectioncanbemodifiedtoincludereferences
toothergeometric entitiesinthesheetmetalpart.
•PRO_E_SMT_FILLETS—Specifies thebendproperties ofthesheetmetal
wall:
○PRO_E_SMT_FILLETS_USE_RAD—true, abendisapplied,iffalse,no
bendisused.
○PRO_E_SMT_FILLETS_SIDE—Specifies filletsideandhasthe
followingpermittedvalues:
◆PRO_BEND_RAD_OUTSIDE—apply thebendradiustotheoutsideof
thebend.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbendisused.
○PRO_E_SMT_FILLETS_SIDE—Specifies filletsideandhasthe
followingpermittedvalues:
◆PRO_BEND_RAD_OUTSIDE—apply thebendradiustotheoutsideof
thebend.
1300 Creo®Parametric TOOLKIT User’sGuide◆PRO_BEND_RAD_INSIDE—apply thebendradiustotheinsideof
thebend.
◆PRO_BEND_RAD_PARAMETER—apply thebendradiusatthe
dimension locationsetbytheSMT_DFLT_RADIUS_SIDE parameter
inCreoParametric.
○PRO_E_SMT_FILLETS_VALUE—Specifies bendradius.
•PRO_E_SMT_WALL_HEIGHT—Specifies theheightoftheattachment wall.
Ithasthefollowingelements:
○PRO_E_SMT_WALL_HEIGHT_TYPE—Specifies themannerinwhich
thenewlycreatedwallfeatureattachestotheattachment edge.This
elementtakesthefollowingvalues:
◆PRO_SMT_WALL_HEIGHT_AUTO—Specifies thatthewallfeature
attachestotheattachment edgebytrimmingtheheightofthe
attachment wallautomatically .
◆PRO_SMT_WALL_HEIGHT_VALUE—Specifies thatthewallfeature
attachestotheattachment edgebytrimmingtheheightofthe
attachment wallbyaspecifiedvalue.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattachment wallautomatically .
◆PRO_SMT_WALL_HEIGHT_VALUE—Specifies thatthewallfeature
attachestotheattachment edgebytrimmingtheheightofthe
attachment wallbyaspecifiedvalue.
◆PRO_SMT_WALL_HEIGHT_APP_BEND—Specifies thatthewall
featureappendstotheattachment edgewithouttrimmingtheheightof
theattachment wall.
◆PRO_E_SMT_WALL_HEIGHT_VALUE—specifies thevalueofthe
heightoftheattachment wall.
◆PRO_SMT_WALL_HEIGHT_OFFSET_FROM_ORIG—Specifies that
thewallfeatureattachestotheselectedattachment edgeatthe
specifiedoffsetdistance.Thedistanceismeasuredfromthepositionof
thewall,ifitwasattachedstraighttotheoriginaledge,withoutbend.
◆PRO_SMT_WALL_HEIGHT_OFFSET_FROM_BEND—Specifies that
thewallfeatureappendstotheselectedattachment edgeatthe
specifiedoffsetdistance.Thedistanceismeasuredfromthepositionof
thewall,ifitwasattachedtotheoriginaledgewithanadditional bend,
aswiththeoption PRO_SMT_WALL_HEIGHT_APP_BEND.
•PRO_E_SMT_BEND_RELIEF—Specifies bendreliefattheedgesofthenewxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthewall,ifitwasattachedtotheoriginaledgewithanadditional bend,
aswiththeoption PRO_SMT_WALL_HEIGHT_APP_BEND.
•PRO_E_SMT_BEND_RELIEF—Specifies bendreliefattheedgesofthenew
wallfeature.Thereliefcanbespecificdifferentlyoneachsideofthebend:
PRO_E_SMT_BEND_RELIEF_SIDE1—Specifies thefirstbendrelief:
•PRO_E_BEND_RELIEF_TYPE specifiesrelieftypeandhasthefollowing
values:
○PRO_BEND_RLF_NONE—specifies attachment ofthewallusingno
relief.
Production Applications: Sheetmetal 1301○PRO_BEND_RLF_RIP— specifiesrippingofthematerialateach
attachment point.
○PRO_BEND_RLF_STRETCH—specifies stretching ofthematerialfor
bendreliefatwallattachment point.
○PRO_BEND_RLF_RECTANGULAR—specifies addingarectangular relief
ateachattachment point
○PRO_BEND_RLF_OBROUND—specifies addinganobroundreliefateach
attachment point.
•PRO_E_BEND_RELIEF_WIDTH—specifies thereliefwidth(forrectangular
andobroundrelief).
•PRO_E_BEND_RELIEF_DEPTH—specifies reliefdepth(forrectangular and
obroundrelief).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattachment point.
•PRO_E_BEND_RELIEF_WIDTH—specifies thereliefwidth(forrectangular
andobroundrelief).
•PRO_E_BEND_RELIEF_DEPTH—specifies reliefdepth(forrectangular and
obroundrelief).
•PRO_E_BEND_RELIEF_ANGLE—specifies reliefangle(forstretchrelief).
PRO_E_SMT_BEND_RELIEF_SIDE2—Includes anidenticalsubtreeforthe
reliefappliedtothesecondsideofthewall.
•PRO_E_SMT_WALL_THICKNESS_FLIP—Indicates whetherornottoflip
thethicknessdirectionofthenewwall.
•PRO_E_SMT_DEV_LEN_CALCULATION—Specifies themethodusedto
calculatetheDeveloped Lengthdimensions forbends.
•PRO_E_SMT_CORNERS_ARR—Specifies theedgetransitionforaparticular
cornerintersection. SeethesectionThe ElementSubtreeforPRO_E_SMT_
CORNERS_ARR onpage1315formoreinformation oncornertreatment.
○PRO_E_WALL_CORNER_TREATMENT—Specifies thecornertreatment
thatisappliedtothewall.Thiselementisdefinedbytheenumerated data
typeProWallCornerTreatment andittakesthefollowingvalid
values:
◆PRO_WALL_CORNER_SEAM—Specifies ifthecorneriscreatedusing
aseam.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatisappliedtothewall.Thiselementisdefinedbytheenumerated data
typeProWallCornerTreatment andittakesthefollowingvalid
values:
◆PRO_WALL_CORNER_SEAM—Specifies ifthecorneriscreatedusing
aseam.
◆PRO_WALL_CORNER_NO_SEAM—Specifies ifthecorneriscreated
withoutusingaseam.
◆PRO_WALL_CORNER_IGNORE—Specifies ifthecornerisnot
created.
1302 Creo®Parametric TOOLKIT User’sGuideTheElementSubtreeforLengthCalculation
•PRO_E_SMT_DEV_LEN_SOURCE— Specifiesthedevelopment length
source.Thevalidvaluesforthiselementaredefinedintheenumerated type
ProDvlLenSrcType, andareasfollows:
○PRO_DVL_SRC_NOT_DEFINED— Specifiesthatsourceisnotdefined
○PRO_DVL_SRC_PART_YF_AND_BTAB—uses partY-factorandapplied
bendtable.
○PRO_DVL_SRC_PART_YF_ONLY—uses thepartY-factor.
○PRO_DVL_SRC_FEAT_YF_AND_BTAB—uses thefeaturespecificY-
factorandbendtable.
○PRO_DVL_SRC_FEAT_BTAB_ONLY—uses thefeaturespecificbend
table.
○PRO_DVL_SRC_FEAT_YF_ONLY—uses thefeaturespecificy-factor.
○PRO_DVL_SRC_USE_ORIGINAL—calculates thedevelopment lengthxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfactorandbendtable.
○PRO_DVL_SRC_FEAT_BTAB_ONLY—uses thefeaturespecificbend
table.
○PRO_DVL_SRC_FEAT_YF_ONLY—uses thefeaturespecificy-factor.
○PRO_DVL_SRC_USE_ORIGINAL—calculates thedevelopment length
usingthesameoptionwhichwasusedtocreatetheoriginaldevelopment
lengthwhenthebendwascreated.Forexample,iforiginaldevelopment
lengthofthebendwascalculated usingapartbendtable,thenew
development willalsobecalculated usingthesametable.
•PRO_E_SMT_DEV_LEN_Y_FACTOR—Specifies thefeatureY-factorandhas
thefollowingelements:
○PRO_E_SMT_DEV_LEN_Y_FACTOR_TYPE—Specifies thetypesofY-
factor.Thevalidvaluesforthiselementaredefinedintheenumerated type
ProDvlLenFactor, andareasfollows:
◆PRO_FACTOR_NOT_DEFINED
◆PRO_FACTOR_Y
◆PRO_FACTOR_K
○PRO_E_SMT_DEV_LEN_Y_FACTOR_VALUE —Specifiesthevalueof
Y-orK-factor.
•PRO_E_SMT_DEV_LEN_BEND_TABLE —Specifiesthedevelopment length
bendtableusingtheindexofthebendtableasloadedandstoredinthismodel.
Production Applications: Sheetmetal 1303NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxY-orK-factor.
•PRO_E_SMT_DEV_LEN_BEND_TABLE —Specifiesthedevelopment length
bendtableusingtheindexofthebendtableasloadedandstoredinthismodel.
Production Applications: Sheetmetal 1303Note
•Bendallowance isamethodusedtocalculatethedeveloped lengthofflat
sheetmetalrequiredtomakeabendofaspecificradiusandangle.The
calculation accountsforthethicknessofthesheetmetal,bendradii,bend
angles,andothermaterialproperties suchasY-andK-factors. Developed
lengthfluctuateswithdifferentmaterialtypesandthickness, andthebend
tableaccountsforthosevariations.
•Y-andK-factorsarepartconstantsdefinedbythelocationofthesheetmetal
material'sneutralbendline.Theneutralbendlinepositionisbasedona
numericreferenceforthetypeofsheetmetalmaterialusedinyourdesign.The
numericreferences rangefrom0to1,withthelowernumbersrepresenting
softermaterial.BoththeY-andK-factorsareintegralelementsincalculating
thedeveloped length(thelengthofflatsheetmetalrequiredtomakeabendof
aspecificradiusandangle)inyourdesign.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsoftermaterial.BoththeY-andK-factorsareintegralelementsincalculating
thedeveloped length(thelengthofflatsheetmetalrequiredtomakeabendof
aspecificradiusandangle)inyourdesign.
CreatingaFlatWallFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaFlatWallFeaturebasedon
elementtreeinput.Formoreinformation about ProFeatureCreate(), refer
tothesectionOverview ofFeatureCreationonpage750intheElementTrees:
Principles ofFeatureCreationonpage749chapter.
RedefiningaFlatWallFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaFlatWallFeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
intheElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaFlatWallFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
1304 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureElemtreeExtract() tocreateafeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingaFlatWallFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
1304 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaFlatWallFeatureandtoretrievethe
elementtreedescription ofaFlatWallFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771intheElementTrees:Principles ofFeatureCreationonpage749
chapter.
Example1:CreationofaRectangular FlatWallusing
apreselected edge
ThesamplecodeinUgSmtFlatWallCreate.c locatedatcreo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat
demonstrates howtocreatearectangular flatwallusingapreselected edge.
FlangeWallFeature
Flangewallfeaturesmaybeeithersweptorextruded.
Asweptflangewallfollowsthetrajectoryformedbythechainoftangent
attachment edges.Youcansketchacrosssectionalongtheattachment edgeand
thewallsweepsalongthatedge.Theattachment edgeneednotbelinearandthe
adjacentsurfaceneednothavetobeplanar.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattachment edges.Youcansketchacrosssectionalongtheattachment edgeand
thewallsweepsalongthatedge.Theattachment edgeneednotbelinearandthe
adjacentsurfaceneednothavetobeplanar.
Anextrudedflangewallextendsfromonelinearedgeintospace.Youcansketch
thesidesectionofthewallandprojectittoacertainlengthinbothdirections.
FeatureElementTreefortheFlangeWallFeature
TheelementtreeforFlangeWallfeatureisdocumented intheheaderfile
ProSmtFlangeWall.h, andhasasimplestructure.Thefollowingfigure
demonstrates thefeatureelementtreestructure:
Production Applications: Sheetmetal 1305FeatureElementtreeforFlangeWallFeature
1306 Creo®Parametric TOOLKIT User’sGuidePRO_E_SMT_FLANGE_DEPTH
PRO_E_SMT_BEND_RELIEF
Production Applications: Sheetmetal 1307PRO_E_SMT_CORNER_RELIEF
PRO_E_SMT_MTR_CUTS
1308 Creo®Parametric TOOLKIT User’sGuidePRO_E_SMT_CORNERS_ARR
PRO_E_SMT_DEV_LEN_CALCULA TION
Apartfromtheusualelementforthetreeroot,aFlangeWallfeaturecontainsthe
followingelements:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_SMT_MTR_CUTS
1308 Creo®Parametric TOOLKIT User’sGuidePRO_E_SMT_CORNERS_ARR
PRO_E_SMT_DEV_LEN_CALCULA TION
Apartfromtheusualelementforthetreeroot,aFlangeWallfeaturecontainsthe
followingelements:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_WALL.
Production Applications: Sheetmetal 1309•PRO_E_SMT_WALL_TYPE—Specifies thewalltypeandmustbe
○PRO_SMT_WALL_TYPE_FLANGE
○PRO_SMT_WALL_TYPE_MERGE
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_SMT_FLANGE_TYPE—Specifies thetypeofflangewall:
○PRO_FLANGE_WALL_TYPE_2D_SWEPT—a sweptflangewallinthe
defaultorientation.
○PRO_FLANGE_WALL_TYPE_3D_SWEPT—a sweptflangewallwith
non-default directions, orientations, andstartpoints.
○PRO_FLANGE_WALL_TYPE_EXTRUDE—a flangewallextrudedfroma
sketchingplane.
•PRO_E_STD_CURVE_COLLECTION_APPL—Specifies theattachment edge
chain.Ifthetypeisswept,thiscanreferencemultiplenon-tangent edges
selectedasonebyoneorusinganyoftheotherinstruction types.Iftheflangexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_STD_CURVE_COLLECTION_APPL—Specifies theattachment edge
chain.Ifthetypeisswept,thiscanreferencemultiplenon-tangent edges
selectedasonebyoneorusinganyoftheotherinstruction types.Iftheflange
walltypeistobe"Extruded", thismustcontainaOnebyOnechainwitha
linearedge.
•PRO_E_SMT_FLANGE_TRAJ_CRV_NORM—Specifies whethertheflange
wallshouldprogressalongthedefaultedgechaindirectionorintheopposite
direction.
•PRO_E_STD_SECTION—Specifies thewallsection.
Wallsectionscanbestandardoruser-defined.Standardwallsectionsarestoredin
thelocation <creo_loadpoint>\<datecode>\Common Files\text\
smt.Thesestandardsectionscanberetrieved,theirdimensions modified,andcan
beaddeddirectlyintothePRO_E_STD_SECTION elementtreeasthePRO_E_
SKETCHER element.Thisdoesnotrequiredefinitionofasketchplaneorviewing
direction,anditdoesnotrequireanincomplete featuretobecreatedasis
describedinthechapterCreatingSketchedFeatures.Whenstandardsectionsare
usedtocreatethewall,theCreoParametric userinterfacewillshowthecorrectxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdescribedinthechapterCreatingSketchedFeatures.Whenstandardsectionsare
usedtocreatethewall,theCreoParametric userinterfacewillshowthecorrect
typeofsectioninthedropdownmenu(forexample:I,Arc,etc.).
Ifauser-definedsectionistobeusedtocreateaflatwall,itmustconformtothe
followingrestrictions:
•Itmustbea2Dsection.
•Itmustnotbenamedthesamenameasoneofthedefaultsectiontypesfrom
theCreoParametric loadpoint.
•Itmustcontainahorizontal centerline withacoordinate systemlocatedonit.
Thecenterline represents thealignment withtheattachment wall,andthe
coordinate systemrepresents theattachment pointforthesection.
1310 Creo®Parametric TOOLKIT User’sGuide•Thesectionmayoptionally containbentorstraightedges.Itmayalsocontain
sheetmetalsectionentitiesthatassistinconstructing thecorrectswept
geometry.
Whenuser-definedsectionsareusedtocreatethewall,CreoParametric
automatically createsnecessarysketchingplanesforthesectionduringcreation.
Therefore thesectionmaybeassigneddirectlyintothePRO_E_SKETCHERxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxWhenuser-definedsectionsareusedtocreatethewall,CreoParametric
automatically createsnecessarysketchingplanesforthesectionduringcreation.
Therefore thesectionmaybeassigneddirectlyintothePRO_E_SKETCHER
elementwithoutdefiningthesketchplaneandwithoutcreatingthefeatureas
incomplete. Afterthefeaturehasbeencreated,ifthewalltypeis3Dsweptor
Extruded,the3Dsectioncanbeextractedfromthefeatureelementtreeandthe
sectioncanbemodifiedtoincludereferences toothergeometric entitiesinthe
sheetmetalpart.
•PRO_E_SMT_WALL_SHARPS_TO_BENDS—If PRO_B_TRUE thenCreo
Parametric attemptstoconvertsharpedgesinthesectiontobends.
•PRO_E_SMT_FLANGE_SEC_FLIP—Specifies whetherornottoflipthe
directionofthesectionforuser-definedsections.
•PRO_E_SMT_FLANGE_DEPTH—Specifies thedepthoftheflange,thatis,
theextentoftheflangecover.Thiselementgovernstheresultsforextruded
flangewallsonly.Forsweptwalls,theextentsaregovernedbytherulesinthe
element PRO_E_STD_CURV_COLLECTION_APPL, whichmightinclude
trimvaluesandboundarygeometry.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxflangewallsonly.Forsweptwalls,theextentsaregovernedbytherulesinthe
element PRO_E_STD_CURV_COLLECTION_APPL, whichmightinclude
trimvaluesandboundarygeometry.
•PRO_E_SMT_FILLETS—Specifies thebendproperties ofthesheetmetal
wall.
○PRO_E_SMT_FILLETS_USE_RAD—If true,abendisapplied,iffalse,
nobendisused.
○PRO_E_SMT_FILLETS_SIDE—Specifies filletsideandhasthe
followingpermittedvalues:
◆PRO_BEND_RAD_OUTSIDE—apply thebendradiustotheoutsideof
thebend.
◆PRO_BEND_RAD_INSIDE—apply thebendradiustotheinsideof
thebend.
◆PRO_BEND_RAD_PARAMETER—apply thebendradiusatthe
dimension locationsetbytheSMT_DFLT_RADIUS_SIDE parameter
inCreoParametric.
○PRO_E_SMT_FILLETS_VALUE—the bendradius.
•PRO_E_SMT_WALL_HEIGHT—Specifies theheightoftheattachment wall.
Ithasthefollowingelements:
○PRO_E_SMT_WALL_HEIGHT_TYPE—specifies themannerinwhichthe
newlycreatedwallfeatureattachestotheattachment edge.Thiselementis
Production Applications: Sheetmetal 1311definedbytheenumerated datatypeProBendPosition andtakesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnewlycreatedwallfeatureattachestotheattachment edge.Thiselementis
Production Applications: Sheetmetal 1311definedbytheenumerated datatypeProBendPosition andtakesthe
followingvalues:
◆PRO_BEND_POSITION_CONSTRAINED—Specifies thatthe
attachedwallgeometryiskeptwithintheboundaryoftheattachment
edge.
◆PRO_BEND_POSITION_PROF_ON_EDGE—Specifies thatthebend
geometryisaddedwhilekeepingthewallprofileontheoriginal
attachment edge
◆PRO_BEND_POSITION_BEND_OUTSIDE—Specifies thatthebend
geometryisaddedwiththebendlinetangenttotheattachment edge.
◆PRO_BEND_POSITION_OFFSET_BEND_APEX—Specifies thatthe
offsetismeasuredfromtheattachment edgetotheBendApex.
◆PRO_BEND_POSITION_OFFSET_BEND_START—Specifies that
theoffsetismeasuredfromtheattachment edgetotheBendStart.
○PRO_E_SMT_WALL_HEIGHT_VALUE specifiesthevalueoftheheight
oftheattachment wall.
•PRO_E_SMT_BEND_RELIEF —Specifiesbendrelief.Refertothesection
FeatureElementTreefortheSheetmetal FlatWallFeatureonpage1296for
moreinformation onthiselementsubtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoftheattachment wall.
•PRO_E_SMT_BEND_RELIEF —Specifiesbendrelief.Refertothesection
FeatureElementTreefortheSheetmetal FlatWallFeatureonpage1296for
moreinformation onthiselementsubtree.
•PRO_E_SMT_WALL_THICKNESS_FLIP —Indicateswhetherornottoflip
thethicknessdirectionofthenewwall.
•PRO_E_SMT_CORNER_RELIEF—Indicates acompound element
representing cornerrelief.Cornerreliefisaddedateachintersection ofapair
ofbends.
•PRO_E_SMT_MTR_CUTS—Indicates acompound elementrepresenting miter
cuts.
•PRO_E_SMT_AUTO_EXLD_EDGE—Specifies whethertosetautomatic
exclusionofedges.CreoParametric usesthefollowingsetofrulesandlogic
inordertoexecutetheautomatic wallsegmentexcluding:
○Longwallsegmenthaslowerexcluding prioritythanshortwallsegment
○Smallwallsegmentthatisneighbortolongwallhashighexcluding
prioritythanothershortwallsegments
○Awallsegmentwhoseoverlapping areaattheintersection ofbendsurfaces
ofneighborhood wallsegmentsismaximum hasthehighestexcluding
priorityxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprioritythanothershortwallsegments
○Awallsegmentwhoseoverlapping areaattheintersection ofbendsurfaces
ofneighborhood wallsegmentsismaximum hasthehighestexcluding
priority
•PRO_E_SMT_CORNERS_ARR—Specifies theedgetransitions.
•PRO_E_SMT_DEV_LEN_CALCULATION—Specifies theproperties usedto
calculatethedevelopment length.SeethesectionTheElementSubtreefor
1312 Creo®Parametric TOOLKIT User’sGuidePRO_E_SMT_DEV_LEN_CALCULA TIONonpage1303formore
information.
TheElementSubtreeforPRO_E_SMT_FLANGE_DEPTH
PRO_E_SMT_FLANGE_DEPTH hasthefollowingelements:
•PRO_E_SMT_FLANGE_SIDE_1_DEPTH—Specifies firstsideoftheflange
extentsandhasthefollowingelements:
○PRO_WALL_LEN_TYPE_NONE—the flangedoesnotextendinthis
direction.
○PRO_WALL_LEN_TYPE_BLIND—the flangeextendsaspecifiedlength
valueinthisdirection.
○PRO_WALL_LEN_TYPE_BLIND_SYM—the flangeextendsasymmetric
lengthvalueinbothdirection.Ifthisisusedforside1,side2mustuse
PRO_WALL_LEN_TYPE_NONE.
○PRO_WALL_LEN_TYPE_TO_REF—the flangeextendstoaselectedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_WALL_LEN_TYPE_BLIND_SYM—the flangeextendsasymmetric
lengthvalueinbothdirection.Ifthisisusedforside1,side2mustuse
PRO_WALL_LEN_TYPE_NONE.
○PRO_WALL_LEN_TYPE_TO_REF—the flangeextendstoaselected
geometric reference.
○PRO_WALL_LEN_TYPE_TO_END—the flangeextendstotheendofthe
attachment reference.
○PRO_E_SMT_FLANGE_DEPTH_OFFSET—specifies thedepthoffsetfor
blindandsymmetric blindextents.
○PRO_E_SMT_FLANGE_DEPTH_REF—specifies thedepthplacement
referencefor"toref"extents.
•PRO_E_SMT_FLANGE_SIDE_2_DEPTH—Specifies side2thesecondside
oftheflange.Thissubtreeisidenticaltothefirstside.
TheElementSubtreeforPRO_E_SMT_CORNER_RELIEF
Cornerreliefisrequiredwhenmultiplenon-tangent edgesareusedforattachment
oftheflangewall.Theelement PRO_E_SMT_CORNER_RELIEF represents
cornerreliefinthefeature.Ithasthefollowingproperties:
•PRO_E_SMT_CORNER_RELIEF_TYPE specifiesthetypesofcornerreliefs:
○PRO_CORNER_RELIEF_NO—Creo Parametric doesnotaddreliefand
generatessquarecorners.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcornerreliefinthefeature.Ithasthefollowingproperties:
•PRO_E_SMT_CORNER_RELIEF_TYPE specifiesthetypesofcornerreliefs:
○PRO_CORNER_RELIEF_NO—Creo Parametric doesnotaddreliefand
generatessquarecorners.
○PRO_CORNER_RELIEF_V_NOTCH—Creo Parametric addsaVnotch
shapecutatthecorners.
○PRO_CORNER_RELIEF_CIRCULAR—Creo Parametric addsacircular
shapereliefatthecornerswitharadiusdimension.
Production Applications: Sheetmetal 1313○PRO_CORNER_RELIEF_OBROUND—Creo Parametric addsanobround
reliefatthecornerswithaspecifieddiameteranddepth.
○PRO_CORNER_RELIEF_RECTANGULAR—Creo Parametric addsa
rectangular reliefatthecornerswithaspecifiedwidthanddepth.
•PRO_E_SMT_CORNER_RELIEF_WIDTH acompound elementwiththe
followingelements:
○PRO_E_SMT_CORNER_RELIEF_WIDTH_TYPE—This isoneofthe
membersofProSmdRelType. SeetableRelationValueTypesonpage
1317forthelistofvaluetypespermitted.
○PRO_E_SMT_CORNER_RELIEF_WIDTH_VAL —Thisisthevaluefor
thedimension, ifthewidthtypeisPRO_DIM_ENTER.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmembersofProSmdRelType. SeetableRelationValueTypesonpage
1317forthelistofvaluetypespermitted.
○PRO_E_SMT_CORNER_RELIEF_WIDTH_VAL —Thisisthevaluefor
thedimension, ifthewidthtypeisPRO_DIM_ENTER.
•PRO_E_SMT_CORNER_RELIEF_DEPTH acompound elementwiththe
followingelements:
○PRO_E_SMT_CORNER_RELIEF_DEPTH_TYPE—This isoneofthe
membersofProCornerRlfDepthType. Seetableforthelistofvalue
typespermitted.
○PRO_E_SMT_CORNER_RELIEF_DEPTH_VAL—This isthevaluefor
thedimension, ifthewidthtypeisPRO_DIM_ENTER.
TheElementSubtreeforPRO_E_SMT_MTR_CUTS
Amitercutremovesmaterialfromanyprofileintersecting wallsegments. The
mitercutiscontrolled bytwodimensions—width andoffsetasshowninthe
figurebelow.Offsetisthedistancebetweentheendofthemitercuttothe
placement chain.CreoParametric useshalfofthespecifiedwidthvaluetocutthe
materialofeachsideofthecenterline ofthemitercut.
MiterCut
Ithasthefollowingelements:
•PRO_E_SMT_MTR_CUTS_ADD—Specifies whethertoaddmitercuts.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmaterialofeachsideofthecenterline ofthemitercut.
MiterCut
Ithasthefollowingelements:
•PRO_E_SMT_MTR_CUTS_ADD—Specifies whethertoaddmitercuts.
1314 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SMT_MTR_CUTS_KEEP_DEF_AREAS—Specifies thedeformation
areaofthemitercut.Adeformation areaisasectionofsheetmetalthathelps
toaccurately stretchthematerialwhenyouunbendthesheetmetalpart.
•PRO_E_SMT_MTR_CUTS_WIDTH
○PRO_E_SMT_MTR_CUTS_WIDTH_TYPE—This isoneofthemembers
ofProMiterCutWidthType. Thevalidtypesare:
◆PRO_MITER_CUT_WIDTH_TYPE_BLIND—Specifies thetype
PRO_DIM_ENTER
◆PRO_MITER_CUT_WIDTH_TYPE_GAP—Specifies thetypePRO_
DIM_SMT_GAP
◆PRO_MITER_CUT_WIDTH_TYPE_PARAM—Specifies thetype
PRO_DIM_DFLT_MITER_CUT_WIDTH
SeetableRelationValueTypesonpage1317forthelistofvaluetypes
permitted.
○PRO_E_SMT_MTR_CUTS_WIDTH_VAL—This isthevalueforthe
dimension, ifthewidthtypeisPRO_DIM_ENTER.
•PRO_E_SMT_MTR_CUTS_OFFSET
○PRO_E_SMT_MTR_CUTS_OFFSET_TYPE—This isoneofthemembers
ofProMiterCutOffsetType. Thevalidtypesare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdimension, ifthewidthtypeisPRO_DIM_ENTER.
•PRO_E_SMT_MTR_CUTS_OFFSET
○PRO_E_SMT_MTR_CUTS_OFFSET_TYPE—This isoneofthemembers
ofProMiterCutOffsetType. Thevalidtypesare:
◆PRO_MITER_CUT_OFFSET_TYPE_BLIND—Specifies thetype
PRO_DIM_ENTER
◆PRO_MITER_CUT_OFFSET_TYPE_GAP—Specifies thetypePRO_
DIM_SMT_GAP
◆PRO_MITER_CUT_OFFSET_TYPE_PARAM—Specifies thetype
PRO_DIM_DFLT_MITER_CUT_OFFSET
SeetableRelationValueTypesonpage1317forthelistofvaluetypes
permitted.
○PRO_E_SMT_MTR_CUTS_OFFSET_VAL—This isthevalueforthe
dimension, ifthewidthtypeisPRO_DIM_ENTER.
TheElementSubtreeforPRO_E_SMT_CORNERS_ARR
Whentheflangeisattachedtomultiplenon-tangent edges,itispossibletodefine
edgetransitions foreachsuchintersection. Themembersofthearrayelement
PRO_E_SMT_CORNERS_ARR eachdefinetheedgetransitionforaparticular
cornerintersection. Eachmemberhasasubelement called PRO_E_SMT_EDGE_
RIPwhichcontainsthefollowing:
Production Applications: Sheetmetal 1315•PRO_E_SMT_EDGE_RIP_TYPE specifiesedgetreatmenttypesandcanbe
asfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRIPwhichcontainsthefollowing:
Production Applications: Sheetmetal 1315•PRO_E_SMT_EDGE_RIP_TYPE specifiesedgetreatmenttypesandcanbe
asfollows:
○PRO_EDGE_RIP_OPEN
○PRO_EDGE_RIP_BLIND
○PRO_EDGE_RIP_MITER_CUT
○PRO_EDGE_RIP_OVERLAP
○PRO_EDGE_RIP_CONNECT
•PRO_E_SMT_EDGE_RIP_CLOSE_CORNER specifiesifthegapbetweenthe
bendsurfacesofacornerreliefmustbeclosed.Thiselementisapplicable only
iftheelement PRO_E_SMT_EDGE_RIP_TYPE issettoPRO_EDGE_RIP_
OPEN.
•PRO_E_SMT_EDGE_RIP_ADD_GAP specifieswhethertoaddagap.
•PRO_E_SMT_EDGE_RIP_DIM_1 specifiesthefirstside’sproperties.
○PRO_E_SMT_EDGE_RIP_DIM_1_TYPE —Thisisoneofthemembers
ofProEdgeRipDimType. Thevalidtypesare:
◆PRO_EDGE_RIP_DIM_TYPE_BLIND—Specifies thetypePRO_
DIM_ENTER.
◆PRO_EDGE_RIP_DIM_TYPE_GAP—Specifies thetypePRO_DIM_
SMT_GAP.
◆PRO_EDGE_RIP_DIM_TYPE_PARAM—Specifies thetypePRO_
DIM_DFLT_EDGE_TREA_WIDTH.
SeetableRelationValueTypesonpage1317forthelistofvaluetypes
permitted.
○PRO_E_SMT_EDGE_RIP_DIM_1_VAL —Thisisthevalueforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx◆PRO_EDGE_RIP_DIM_TYPE_PARAM—Specifies thetypePRO_
DIM_DFLT_EDGE_TREA_WIDTH.
SeetableRelationValueTypesonpage1317forthelistofvaluetypes
permitted.
○PRO_E_SMT_EDGE_RIP_DIM_1_VAL —Thisisthevalueforthe
dimension, ifthewidthtypeisPRO_DIM_ENTER.
•PRO_E_SMT_EDGE_RIP_DIM_2 specifiesthesecondside’sproperties.
○PRO_E_SMT_EDGE_RIP_DIM_2_TYPE—This isoneofthemembers
ofProEdgeRipDimType. SeetableRelationValueTypesonpage1317
forthelistofvaluetypespermitted.
○PRO_E_SMT_EDGE_RIP_DIM_2_VAL—This isthevalueforthe
dimension, ifthewidthtypeisPRO_DIM_ENTER.
•PRO_E_SMT_EDGE_RIP_FLIP specifieswhethertofliptheoverlapping
side.
1316 Creo®Parametric TOOLKIT User’sGuideRelationValueTypes
ProSmdRelT ype Description
PRO_DIM_THICK Thepartthickness. Itrepresents theparameter SMT_
THICKNESS inasheetmetalpart.
PRO_DIM_DOUBLE_THICK 2xthepartthickness. Itrepresents theparameter
SMT_THICKNESS inasheetmetalpart.
PRO_DIM_ENTER Auser-defined value
PRO_DIM_DEF_CRN_REL_WIDTH ThevalueofthesheetmetalParameter SMT_DFLT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSMT_THICKNESS inasheetmetalpart.
PRO_DIM_ENTER Auser-defined value
PRO_DIM_DEF_CRN_REL_WIDTH ThevalueofthesheetmetalParameter SMT_DFLT_
CRNR_REL_WIDTH, onlyallowedforcornerrelief
width.
PRO_DIM_DEF_CRN_REL_DEPTH ThevalueofthesheetmetalParameter SMT_DFLT_
CRNR_REL_DEPTH, onlyallowedforcornerrelief
depth.
PRO_DIM_MINUS_THICK -1xthepartthickness
PRO_DIM_MINUS_DOUBLE_THICK -2xthepartthickness
PRO_DIM_DFLT_EDGE_TREA_WIDTH ThevalueofthesheetmetalParameter SMT_DFLT_
EDGE_TREAT_WIDTH, onlyallowedforedge
transitionwidth
PRO_DIM_DFLT_MITER_CUT_WIDTH ThevalueofthesheetmetalParameter SMT_DFLT_
MITER_CUT_WIDTH, onlyallowedformitercut
width
PRO_DIM_DFLT_MITER_CUT_OFFSET ThevalueofthesheetmetalParameter SMT_DFLT_
MITER_CUT_OFFSET, onlyallowedformitercut
offset
PRO_DIM_THICK_1_1 1.1xthepartthickness
PRO_DIM_THICK_05 0.5xthepartthickness
PRO_DIM_SMT_GAP ThevalueofthesheetmetalParameter SMT_GAP
PRO_DIM_MINUS_SMT_GAP Thenegative(minus)valueofthesheetmetal
Parameter SMT_GAPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_DIM_THICK_05 0.5xthepartthickness
PRO_DIM_SMT_GAP ThevalueofthesheetmetalParameter SMT_GAP
PRO_DIM_MINUS_SMT_GAP Thenegative(minus)valueofthesheetmetal
Parameter SMT_GAP
PRO_DIM_MINUS_THICK_05 -0.5xthepartthickness
PRO_DIM_DEF_BEND_RAD ThevalueofthesheetmetalParameter SMT_DFLT_
BEND_RADIUS.
PRO_DIM_UP_TO_BEND Thereliefdepthtype.RepresentsUptoBend
optionforbendandcornerreliefs.
PRO_DIM_TAN_TO_BEND Thereliefdepthtype.RepresentsUptoBend
optionforbendandcornerreliefs.
PRO_DIM_DEF_BEND_ANGLE ThevalueofthesheetmetalParameter SMT_DFLT_
BEND_ANGLE.
PRO_DIM_DEF_BEND_REL_WIDTH Thebendreliefwidth.Thevalueofthesheetmetal
Parameter SMT_DFLT_BEND_REL_WIDTH.
PRO_DIM_DEF_BEND_REL_DEPTH Thebendreliefdepth.Thevalueofthesheetmetal
Parameter SMT_DFLT_BEND_REL_DEPTH.
PRO_DIM_DEF_BEND_REL_ANGLE Thebendreliefangle.Thevalueofthesheetmetal
Parameter SMT_DFLT_BEND_REL_ANGLE.
PRO_DIM_CRN_RLF_DEPTH_TYPE Thecornerreliefdepth.Thevalueofthesheetmetal
Parameter SMT_DFLT_CRNR_REL_DEPTH_TYPE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParameter SMT_DFLT_BEND_REL_ANGLE.
PRO_DIM_CRN_RLF_DEPTH_TYPE Thecornerreliefdepth.Thevalueofthesheetmetal
Parameter SMT_DFLT_CRNR_REL_DEPTH_TYPE.
PRO_DIM_BEND_RLF_DEPTH_TYPE Thebendreliefdepth.Thevalueofthesheetmetal
Parameter SMT_DFLT_BEND_REL_DEPTH_TYPE.
Production Applications: Sheetmetal 1317CreatingaFlangeWallFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaFlangeWallFeaturebased
onelementtreeinput.Formoreinformation about ProFeatureCreate(),
refertothesectionOverview ofFeatureCreationonpage750intheElement
Trees:Principles ofFeatureCreationonpage749chapter.
RedefiningaFlangeWallFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaFlangeWallFeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
intheElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaFlangeWallFeature
FunctionIntroducedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureRedefine(), refertothesectionFeatureRedefineonpage773
intheElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaFlangeWallFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() tocreateafeature
elementtreethatdescribesthecontentsofaFlangeWallFeatureandtoretrieve
theelementtreedescription ofaFlangeWallFeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertothesectionFeatureInquiryon
page771intheElementTrees:Principles ofFeatureCreationonpage749
chapter.
Example2:CreationofFlangeWallfeatureusing
CreoParametric TOOLKIT
ThesamplecodeinUgSmtFlgWallCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_featcreat
demonstrates howtocreateaflangewallfeatureusingCreoParametric
TOOLKIT. Thefeatureiscreatedusingtwoexternalproperties: thewallthickness
determines thebendradius,andtheattachment edge(s)areobtainedfromthe
currentlyselectededgesintheCreoParametric model.Ifasingleedgeisselected,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdetermines thebendradius,andtheattachment edge(s)areobtainedfromthe
currentlyselectededgesintheCreoParametric model.Ifasingleedgeisselected,
itisconverted toatangentchainbeforeitusedtocreatethefeature.Thesectionis
the2DsectionhandlefortheI-wallsectionprovidedwithCreoParametric.
1318 Creo®Parametric TOOLKIT User’sGuideSheetmetalWallFeatures
InCreoParametric TOOLKIT, youcancreateextruded,revolvedorsweptwall
features.Youcanspecifythewallthickness, generatebends,andassigna
development lengthcalculation tothewall.
Anextrudedwallisdrawnasacross-section extrudedinthespecifieddirection.
Similarly,therevolvedandsweptwallsaredrawn.
InCreoParametric TOOLKIT, anextrudedwallsharesthesameelementtreeas
thebasicExtrudefeaturedocumented intheheaderfileProExtrude.h. The
revolvedwallsharesitselementtreewiththebasicRevolvefeaturedocumented
intheheaderfileProRevolve.h. Thesweptprotrusion wallsharesitselement
treewiththebasicsweepfeaturedocumented indocumented intheheaderfile
ProSweep.h.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintheheaderfileProRevolve.h. Thesweptprotrusion wallsharesitselement
treewiththebasicsweepfeaturedocumented indocumented intheheaderfile
ProSweep.h.
Theelementtreeshouldincludesomeofthefollowingsheetmetal-specific
elementstogenerateasheetmetalwallfeature:
•PRO_E_STD_SMT_THICKNESS—Has adoublevaluethatspecifiesthewall
thickness. Ifthisfeatureisnotthefirstwallfeatureinthepart,thethickness
valueisirrelevantandcanbe0.0.Thefeatureinheritsthethicknessofthefirst
wallfeature.Thiselementisnotrequiredandcannotbemodifiedifthesheet
metalthicknessparameter isalreadyassignedinthemodel.
•PRO_E_STD_SMT_SWAP_DRV_SIDE—Specifies sheetmetalswapsidesto
switchsidesofdrivingandoffsetsides.
•PRO_E_SMT_WALL_SHARPS_TO_BENDS—Converts anysharpedgesin
thesectiontoappropriate bends.
•PRO_E_SMT_FILLETS—Refer tothesectionFeatureElementTreeforthe
Sheetmetal FlatWallFeatureonpage1296forthedescription oftheelement.
•PRO_E_SMT_DEV_LEN_CALCULATION—Refer tothesectionFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_SMT_FILLETS—Refer tothesectionFeatureElementTreeforthe
Sheetmetal FlatWallFeatureonpage1296forthedescription oftheelement.
•PRO_E_SMT_DEV_LEN_CALCULATION—Refer tothesectionFeature
ElementTreefortheSheetmetal FlatWallFeatureonpage1296forthe
description oftheelement.
•PRO_E_SMT_MERGE_DATA—This compound elementdefinesthe
parameters requiredtomergethewallgeometrytoanexistingwall.
○PRO_E_SMT_MERGE_AUTO— Thevalidvaluesforthiselementare:
◆True—Mer gesthewallgeometrytoanexistingwallinthedesign.
◆False—Does notmergethewalls.
○PRO_E_SMT_MERGE_KEEP_LINES—Controls thevisibilityofmerged
edgesonsurfacejoints.Thevalidvaluesforthiselementare:
◆True—Mer gededgesarevisibleonsurfacejoints.
◆False—Merg ededgesarenotvisibleonsurfacejoints.
Production Applications: Sheetmetal 1319FordetailsonthebasicExtrudeandRevolvefeatures,refertothechapterElement
Trees:ExtrudeandRevolveonpage996.
FordetailsonthebasicSweepfeature,refertothechapterElementTrees:Sweep
onpage1025.
SheetmetalCutFeaturesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTrees:ExtrudeandRevolveonpage996.
FordetailsonthebasicSweepfeature,refertothechapterElementTrees:Sweep
onpage1025.
SheetmetalCutFeatures
Asheetmetalcutremovesmaterialfromthewallsitencounters.
InCreoParametric TOOLKIT, asheetmetalcutfeaturesharesthesameelement
treeasthebasicextrudefeatureorthesolidifyfeatureorthethickenfeature.The
elementtreeshouldincludesomeofthefollowingsheetmetalcut-specific
elementstogenerateasheetmetalcutfeature:
•PRO_E_IS_SMT_CUT—If truethisfeatureisasheetmetalcut,otherwiseit
isasolidcut.Itisapplicable onlyinsheetmetalparts.
•PRO_E_SMT_CUT_NORMAL_DIR—This elementdefinesthesurfaceto
whichthesectionprojection willbenormal.Theprojection normalspecifies
thesideofthesheemetal wallfromwhichthesketchedcurvesplitsthewall.
Thevaluesforthiselementareasfollows:
○PRO_SMT_CUT_DRVSIDE_GREEN—Specifies thenormaltothedriven
surface.Thisisadirectionfromthegreensidetothewhitesideofthe
sheetmetalwall.Thisisthedefaultvalue.
○PRO_SMT_CUT_DRVSIDE_WHITE—Specifies thenormaltotheoffsetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurface.Thisisadirectionfromthegreensidetothewhitesideofthe
sheetmetalwall.Thisisthedefaultvalue.
○PRO_SMT_CUT_DRVSIDE_WHITE—Specifies thenormaltotheoffset
surface.Thisisadirectionfromthewhitesidetothegreensideofthe
sheetmetalwall.
FordetailsonthebasicExtrudefeature,seetheTheElementTreeforExtruded
Featuresonpage997.
FordetailsonthebasicSolidifyfeature,seetheSolidifyFeatureonpage860.
FordetailsonthebasicThickenfeature,seetheThickenFeatureonpage857.
Theextrudefeaturehasadditional optionalelement PRO_E_SMT_PUNCH_
TOOL_DATA. Thiscompound elementdefinessheetmetalcutthatisusedtocut
andrelievesheetmetalwalls.Itisusedinsheetmetalmanufacturing. Itis
applicable tosheetmetalcuts,madebythePunchUDF.Itdefinestheparameters
relatedtothepunchfeature.
Thecompound element PRO_E_SMT_PUNCH_TOOL_DATA containsthe
followingelements:
•PRO_E_SMT_PUNCH_TOOL_ATTR—Specifies thesymmetry flagforthe
Manufacturing UDFPunchTool.Thevalidvaluesforthiselementare:
○PRO_PUNCH_TOOL_ATTR_SYM_NONE—Specifies thatthetoolisnotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingelements:
•PRO_E_SMT_PUNCH_TOOL_ATTR—Specifies thesymmetry flagforthe
Manufacturing UDFPunchTool.Thevalidvaluesforthiselementare:
○PRO_PUNCH_TOOL_ATTR_SYM_NONE—Specifies thatthetoolisnot
symmetric aboutanyaxis.
1320 Creo®Parametric TOOLKIT User’sGuide○PRO_PUNCH_TOOL_ATTR_SYM_X—Specifies thatthetoolis
symmetrical abouttheX-axisofthecoordinate system
○PRO_PUNCH_TOOL_ATTR_SYM_Y—Specifies thatthetoolis
symmetrical abouttheY-axisofthecoordinate system.
○PRO_PUNCH_TOOL_ATTR_SYM_XY—Specifies thatthetoolis
symmetrical aboutboththeXandY-axisofthecoordinate system.
•PRO_E_SMT_PUNCH_TOOL_NAME—Specifies thenameofthe
Manufacturing UDFpunchtoolused.
Forsheetmetalcutsandpunches,youcanspecifyifthepunchaxispointmustbe
created.Apunchaxispointisareferencepointthatmoveswithafeatureduring
both,theunbendandbendbackoperations. Intheelement PRO_E_SMT_
PUNCH_AXIS_PNT, specify PRO_B_TRUE tocreatethepunchaxispointinthe
sheetmetalfeature.
ExtendWallFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxboth,theunbendandbendbackoperations. Intheelement PRO_E_SMT_
PUNCH_AXIS_PNT, specify PRO_B_TRUE tocreatethepunchaxispointinthe
sheetmetalfeature.
ExtendWallFeature
TheExtendWallfeatureallowsyoutoextendanattachment wallwithastraight
edge.
FeatureElementTreefortheExtendWallFeature
TheelementtreefortheExtendWallfeatureisdocumented intheheaderfile
ProSmtExtendWall.h. Thefollowingfigureshowsthefeatureelementtree
structure.
Production Applications: Sheetmetal 1321FeatureElementTreeforExtendWallFeature
PRO_E_SMT_EXTEND_W ALL_EXTENSIONS_CMP
Theelementsinthistreearedescribedasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_WALL.
•PRO_E_SMT_WALL_TYPE—Specifies thesheetmetalwalltypeanditsvalue
isPRO_SMT_WALL_TYPE_EXTEND.
•PRO_E_STD_FEATURE_NAME—Specifies thefeaturename.
1322 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SMT_EXTEND_WALL_EDGE—Specifies theedgeoftheattachment
wallyouselectforextension.
•PRO_E_SMT_EXTEND_WALL_DIST—Specifies thedistanceproperties forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1322 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SMT_EXTEND_WALL_EDGE—Specifies theedgeoftheattachment
wallyouselectforextension.
•PRO_E_SMT_EXTEND_WALL_DIST—Specifies thedistanceproperties for
theattachment walltobeextended.Thiscompound elementconsistsofthe
followingelements:
○PRO_E_SMT_EXTEND_DIST_TYPE—Specifies thedistancetypeused
forextension. Ittakesthefollowingvalues
◆PRO_EXTEND_DIST_BY_VALUE—Specifies thattheattachment
wallisextendedbyaspecifiedvalueandremainsparalleltothe
selectededge.
◆PRO_EXTEND_DIST_TO_THROUGH_UNTIL—Specifies thatthe
attachment wallisextendednormallytotheselectededgeuntilit
intersectsthereferenced plane.
◆PRO_EXTEND_DIST_TO_SELECTED—Specifies thatthe
attachment wallisextendednormallytotheselectededgeuntilit
intersectsthereferenced planeandremainsparalleltotheselected
edge.
○PRO_E_SMT_EXTEND_DIST_VALUE—Specifies thedistancevalue.
Thiselementisapplicable onlyiftheelement PRO_E_SMT_EXTEND_
DIST_TYPE hasthevalue PRO_EXTEND_DIST_BY_VALUE.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxedge.
○PRO_E_SMT_EXTEND_DIST_VALUE—Specifies thedistancevalue.
Thiselementisapplicable onlyiftheelement PRO_E_SMT_EXTEND_
DIST_TYPE hasthevalue PRO_EXTEND_DIST_BY_VALUE.
○PRO_E_SMT_EXTEND_DIST_REF—Specifies theplaneorsurface
selectedasthereference. Thiselementisapplicable onlyiftheelement
PRO_E_SMT_EXTEND_DIST_TYPE hasthevalue PRO_EXTEND_
DIST_TO_THROUGH_UNTIL orPRO_EXTEND_DIST_TO_
SELECTED.
•PRO_E_SMT_EXTEND_WALL_EXTENSIONS_CMP—Specifies the
extensionproperties ofthetwosidesoftheattachment wall.
TheElementSubtreeforPRO_E_SMT_EXTEND_W ALL_
EXTENSIONS_CMP
PRO_E_SMT_EXTEND_WALL_EXTENSIONS_CMP isacompound elementand
consistsofthefollowingelements:
•PRO_E_SMT_EXTEND_SIDE1_EXTENSION_CMP—Specifies the
extensionproperties oftheside1.Thiscompound elementconsistsofthe
followingelements:
○PRO_E_SMT_EXTEND_EXTENSION_TYPE_OPT—Specifies the
extensiontype.Itisgivenbytheenumerated type
ProExtendExtensionType andtakesthefollowingvalues:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingelements:
○PRO_E_SMT_EXTEND_EXTENSION_TYPE_OPT—Specifies the
extensiontype.Itisgivenbytheenumerated type
ProExtendExtensionType andtakesthefollowingvalues:
Production Applications: Sheetmetal 1323◆PRO_EXTEND_EXT_NORMAL_TO_EDGE—Specifies thattheside1
oftheattachment wallisextendednormaltotheselectededge.
◆PRO_EXTEND_EXT_ALONG_BOUND_EDGE—Specifies thattheside
1oftheattachment wallisextendedalongtheboundaryoftheselected
edge.
○PRO_E_SMT_EXTEND_ADJUST_SRF—Specifies whetherthesurface
adjacenttoside1oftheextendededgeisalsoextended.Thevaluesfor
thiselementarespecifiedbytheenumerated typeProExtendAdjSrf
andareasfollows:
◆PRO_EXTEND_ADJ_SRF_FALSE
◆PRO_EXTEND_ADJ_SRF_TRUE
•PRO_E_SMT_EXTEND_SIDE2_EXTENSION_CMP—Specifies the
extensionproperties oftheside2.Thiscompound elementconsistsofthe
sameelementsastheelement PRO_E_SMT_EXTEND_SIDE1_
EXTENSION_CMP.
CreatingaExtendWallFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaExtendWallfeaturebasedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsameelementsastheelement PRO_E_SMT_EXTEND_SIDE1_
EXTENSION_CMP.
CreatingaExtendWallFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaExtendWallfeaturebased
ontheelementtreedefinition. Formoreinformation about
ProFeatureCreate(), refertotheOverview ofFeatureCreationonpage750
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
RedefiningaExtendWallFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaExtendWallfeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertheFeatureRedefineonpage773sectionin
theElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaExtendWallFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
1324 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureElemtreeExtract() toretrievetheelement
treedescription oftheExtendWallfeature.Formoreinformation aboutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProFeatur eElemtree Extract()
1324 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureElemtreeExtract() toretrievetheelement
treedescription oftheExtendWallfeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertheFeatureInquiryonpage771
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
SplitAreaFeature
YoucansplitasheetmetalwallusingasketchedcurvewiththeSplitAreafeature.
Whenyousplitasheetmetalwall,nosidesurfacesarecreated.
FeatureElementTreefortheSplitAreaFeature
TheelementtreefortheSplitAreafeatureisdocumented intheheaderfile
ProSmtSplitArea.h. Thefollowingfigureshowsthefeatureelementtree
structure.
FeatureElementTreeforSplitAreaFeature
Theelementsinthistreeareasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_DEFORM_AREA.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_SMT_CUT_NORMAL_DIR—Specifies thenormalofprojection. The
projection normalspecifiesthesideofthesheemetal wallfromwhichthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFEAT_DEFORM_AREA.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_SMT_CUT_NORMAL_DIR—Specifies thenormalofprojection. The
projection normalspecifiesthesideofthesheemetal wallfromwhichthe
sketchedcurvesplitsthewall.Thevaluesforthiselementareasfollows:
○PRO_SMT_CUT_DRVSIDE_GREEN—Specifies thenormaltothedriven
surface.Thisisadirectionfromthegreensidetothewhitesideofthe
sheetmetalwall.Thisisthedefaultvalue.
Production Applications: Sheetmetal 1325○PRO_SMT_CUT_DRVSIDE_WHITE—Specifies thenormaltotheoffset
surface.Thisisadirectionfromthewhitesidetothegreensideofthe
sheetmetalwall.
•PRO_E_STD_SECTION—Specifies thesketchselectedforthesplit.Youcan
createanewsectionorselectaninternalsketchfromthemodel.
•PRO_E_SMT_PROJ_DIR—Specifies theprojection direction.Itisspecified
bytheenumerated typeProSmtProjDir. Thevalidvaluesare:
○PRO_SMT_PROJ_DIR_ONE—Specifies theprojection tooneside.This
isthedefaultvalue.
○PRO_SMT_PROJ_DIR_TWO—Specifies theprojection totheopposite
side.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbytheenumerated typeProSmtProjDir. Thevalidvaluesare:
○PRO_SMT_PROJ_DIR_ONE—Specifies theprojection tooneside.This
isthedefaultvalue.
○PRO_SMT_PROJ_DIR_TWO—Specifies theprojection totheopposite
side.
○PRO_SMT_PROJ_DIR_BOTH—Specifies theprojection toboththesides.
•PRO_E_STD_MATRLSIDE—Specifies thedirectioninwhichtheareaofthe
sheetmetalwallissplit.Itisspecifiedbytheenumerated type
ProSplitAreaMatSide. Thevalidvaluesare:
○PRO_SPLITAREA_MATSIDE_ONE—Specifies thesplitinonedirection.
○PRO_SPLITAREA_MATSIDE_TWO—Specifies thesplitintheopposite
direction.Thisisthedefaultvalue.
CreatingaSplitAreaFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaSplitAreafeaturebased
ontheelementtreedefinition. Formoreinformation about
ProFeatureCreate(), refertheOverview ofFeatureCreationonpage750
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
RedefiningaSplitAreaFeature
FunctionIntroduced
•ProFeatur eRedefine()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
RedefiningaSplitAreaFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaSplitAreafeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertheFeatureRedefineonpage773sectionin
theElementTrees:Principles ofFeatureCreationonpage749chapter.
1326 Creo®Parametric TOOLKIT User’sGuideAccessingaSplitAreaFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() toretrievetheelement
treedescription oftheSplitAreafeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertheFeatureInquiryonpage771
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
PunchandDieFormFeatures
AFormisasheetmetalwallmoldedbyatemplate(reference part).Mergingthe
geometryofareferencepartcreatestheFormfeature.
PunchFormfeaturemoldsthesheetmetalwallusingonlythereferencepartxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAFormisasheetmetalwallmoldedbyatemplate(reference part).Mergingthe
geometryofareferencepartcreatestheFormfeature.
PunchFormfeaturemoldsthesheetmetalwallusingonlythereferencepart
geometrywhereasDieFormfeaturemoldsthesheetmetalusingthereferencepart
toformthegeometry(convexorconcave)surrounded byaboundingplane.
FeatureElementTreeforthePunchandDieForm
Features
TheelementtreeforthePunchandDieFormfeaturesisdocumented intheheader
fileProSmtForm.h andcanbeusedtocreatebothpunchanddieformfeatures.
Thefollowingfigureshowsthefeatureelementtreestructure:
Production Applications: Sheetmetal 1327FeatureElementTreeforPunchFormFeature
PRO_SMT_SURF_F ACE
Thesurfaceistheface(green)surfacecreatedbyasheetmetalfeature.
1328 Creo®Parametric TOOLKIT User’sGuidePRO_SMT_SURF_OFFSET
Thesurfaceistheoffset(white)surfacecreatedbyasheetmetalfeature.
Theelementsinthistreeareasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_GEN_MERGE.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementsinthistreeareasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_GEN_MERGE.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_GMRG_SMT_TYPE—Specifies thetypeofsheetmetalfeature.The
valuesforthiselementarespecifiedbytheenumerated type
ProGenMergeSmtType andthevalidvaluesare:
○PRO_GEN_MERGE_SMT_TYPE_FORM—Specifies thePunchForminall
theversions.
Note
Usetheelement PRO_GEN_MERGE_SMT_TYPE_FORM_PUNCH
insteadofPRO_GEN_MERGE_SMT_TYPE_FORM fromCreo
Parametric3.0 onwards.
○PRO_GEN_MERGE_SMT_TYPE_FORM_PUNCH—Specifies thePunch
FormfeatureforpartscreatedinCreoParametric3.0 onward.
○PRO_GEN_MERGE_SMT_TYPE_NOT_SMT—Specifies amerge,
inheritance oranyothertypeofGeneralMergefeature.
○PRO_GEN_MERGE_SMT_TYPE_FORM_DIE—Specifies theDieForm
feature.
•PRO_E_GMRG_FEAT_TYPE—Specifies thetypeofGeneralMergefeature.
Production Applications: Sheetmetal 1329Note
ForGeneralMergefeatureoftypePRO_GEN_MERGE_TYPE_MERGE, thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature.
•PRO_E_GMRG_FEAT_TYPE—Specifies thetypeofGeneralMergefeature.
Production Applications: Sheetmetal 1329Note
ForGeneralMergefeatureoftypePRO_GEN_MERGE_TYPE_MERGE, the
element PRO_E_DSF_DEPENDENCY canbesettoPRO_DSF_UPDATE_
AUTOMATICALLY only.
Formoreinformation onthetypesofGeneralMergefeatures,referthe
GeneralMerge(Mergonpage1191sectionintheAssembly: DataSharing
Featuresonpage1179chapter.
•PRO_E_DSF_REF_MDL—Specifies thepunchordiemodelusedtocreatethe
PunchorDieFormfeature.Itconsistsofthefollowingelement:
○PRO_E_DSF_SEL_REF_MDL—Specifies theselectedpunchordie
model.
•PRO_E_COMP_PLACE_INTERFACE—Specifies theassemblycomponent
interfacesusedtodefinetheplacement ofthepunchordiemodelinthesheet
metalgeometry.Formoreinformation ontheelementscontainedbythe
placement interfaceselement,referthePlacement viaInterfaceonpage1154
sectionintheAssembly: Assembling Components onpage1140chapter.
•PRO_E_COMPONENT_CONSTRAINTS—Specifies theassemblycomponentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxplacement interfaceselement,referthePlacement viaInterfaceonpage1154
sectionintheAssembly: Assembling Components onpage1140chapter.
•PRO_E_COMPONENT_CONSTRAINTS—Specifies theassemblycomponent
constraints usedtodefinetheplacement ofthepunchordiemodelinthesheet
metalgeometry.Formoreinformation onthecomponent constraints elements,
referthePlacement Constraints onpage1152sectionintheAssembly:
Assembling Components onpage1140chapter.
Note
Theplacement bycoordinate systemoptionintheCreoParametric user
interfaceforthePunchorDieFormfeatureisnotavailableviaCreo
Parametric TOOLKIT.Toplacethemodelinthesheetmetalgeometry
usingacoordinate system,defineacoordinate systemfeatureinthesheet
metalmodelanduseitforplacement.
•PRO_E_GMRG_VARIED_ITEMS—Specifies apointerelementthatdefines
theInheritance featurevarieditemsandtheirvalues.Thiselementisavailable
onlywhenthePunchorDieFormfeatureisofthetypePRO_GEN_MERGE_
TYPE_INHERITANCE.For moreinformation onthiselement,referthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheInheritance featurevarieditemsandtheirvalues.Thiselementisavailable
onlywhenthePunchorDieFormfeatureisofthetypePRO_GEN_MERGE_
TYPE_INHERITANCE.For moreinformation onthiselement,referthe
Inheritance FeatureandFlexibleComponent VariantItemsonpage1195
sectionintheAssembly: DataSharingFeaturesonpage1179chapter.
1330 Creo®Parametric TOOLKIT User’sGuide•PRO_E_DSF_DEPENDENCY—Specifies thedependency type.Thevaluesfor
thiselementarespecifiedbytheenumerated typeProDsfDependency.
Note
FromCreoParametric 3.0onward,theenumerated type
ProDsfDependency hasbeendeprecated. Usetheenumerated type
ProDSFDependency instead.
Thevalidvaluesforthedependency statusare:
○PRO_DSF_UPDATE_AUTOMATICALLY—Specifies thatthegeometryof
thePunchorDieFormfeaturedependsuponthegeometryofthemodel
usedduringfeaturecreation.ThePunchorDieFormfeaturereflectsall
thechangesmadeintheparentmodel.
Note
FromCreoParametric 3.0onward,thevalue PRO_DSF_DEPENDENT
hasbeendeprecated. Usetheenumerated value PRO_DSF_UPDATE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthechangesmadeintheparentmodel.
Note
FromCreoParametric 3.0onward,thevalue PRO_DSF_DEPENDENT
hasbeendeprecated. Usetheenumerated value PRO_DSF_UPDATE_
AUTOMATICALLY instead.
○PRO_DSF_UPDATE_MANUALLY—Specifies thatthegeometryofthe
PunchorDieFormfeatureisindependent ofthegeometryofthemodel
usedduringfeaturecreation.Ifyouupdatethemodel,thefeaturedoesnot
change.
Note
FromCreoParametric 3.0onward,thevalue PRO_DSF_
INDEPENDENT hasbeendeprecated. Usetheenumerated value PRO_
DSF_UPDATE_MANUALLY instead.
○PRO_DSF_NO_DEPENDENCY—Specifies thatthereisnodependency
betweenthegeometryofthePunchorDieFormfeatureandthegeometry
ofthePunchorDiemodelusedduringfeaturecreation.
Production Applications: Sheetmetal 1331Note
Allthedependency statusesspecifiedintheenumerated type
ProDsfDependency aredefinedintheheaderfile
ProDataShareFeat.h. Formoreinformation onthevalues,referto
thesectionFeatureElementTreeonpage1191inAssembly: DataSharing
Features.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDsfDependency aredefinedintheheaderfile
ProDataShareFeat.h. Formoreinformation onthevalues,referto
thesectionFeatureElementTreeonpage1191inAssembly: DataSharing
Features.
•PRO_E_FORM_PUNCH_SIDE—Specifies thePunchdirection.Thedirection
specifiesasideofawallfromwhichthemodelpenetrates thesheetmetal
geometry.Thevaluesforthiselementarespecifiedbytheenumerated type
ProSmtSurfType. Thesurfacetypesareasfollows:
○PRO_SMT_SURF_FACE—The punchmodelmovesinadirectionfrom
thegreensidetothewhitesideofthesheetemetal model.Refertothe
figurePRO_SMT_SURF_F ACEonpage1328
○PRO_SMT_SURF_OFFSET—The punchmodelmovesinadirectionfrom
thewhitesidetothegreensideofthesheetmetalmodel.Refertothe
figurePRO_SMT_SURF_OFFSET onpage1329.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies acollection of
surfacestobeexcludedfromthePunchorDiemodelduringfeaturecreation.
•PRO_E_FORM_DIE_POCKET_GEOM_CMP—Compound element.Specify
thiselementonlyiftheenumerated typeProGenMergeSmtType issetto
PRO_GEN_MERGE_SMT_TYPE_FORM_DIE type.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_FORM_DIE_POCKET_GEOM_CMP—Compound element.Specify
thiselementonlyiftheenumerated typeProGenMergeSmtType issetto
PRO_GEN_MERGE_SMT_TYPE_FORM_DIE type.
Note
ThiselementcannotbeusedforcreatingPunchFormfeaturesandis
specifictoDieFormfeaturesonly.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies thecollection of
selectedsurfacestobeusedforPocketGeometry duringthefeaturecreation.
•PRO_E_FORM_TOOL_CSYS—Specifies thereferencecoordinate system
usedduringthemanufacturing process.Thecoordinate systeminthePunch
modelisusedbydefault.
•PRO_E_FORM_TOOL_NAME—Specifies thenameofthemanufacturing tool
usedtocreatethePunchorDiemodel.ThenamespecifiedbytheSMT_
FORM_TOOL_NAME parameter inthemodelisusedbydefault.
1332 Creo®Parametric TOOLKIT User’sGuide•PRO_E_GMRG_FORM_AUTO_ROUNDS—Specifies theProBoolean option
toroundthenon-placement sharpedges(thatdonotlieontheplacement
surface).Thisoptionalelementusesaconstantoutsideradiusofvalueequalto
thethicknessoftheoriginalsheetmetalpart.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoroundthenon-placement sharpedges(thatdonotlieontheplacement
surface).Thisoptionalelementusesaconstantoutsideradiusofvalueequalto
thethicknessoftheoriginalsheetmetalpart.
•PRO_E_SMT_FILLET_INTERSECT—Specifies theoptiontoroundthe
placement sharpedges(thatlieontheplacement surfaceandintersectthe
sheetmetalgeometry). Thisoptionalelementconsistsofthefollowing
elements:
○PRO_E_SMT_FILLET_RADIUS_USEFLAG—Specifies whetherafillet
radiusisused.
○PRO_E_SMT_FILLET_RADIUS_SIDE—Specifies theradiusdirection,
thatis,outsideorinside.Thevaluesforthiselement,specifiedbythe
enumerated typeProSmdRadType, areasfollows:
◆PRO_BEND_RAD_OUTSIDE—The radiusisappliedtotheoutsideof
thesheetmetalgeometry.
◆PRO_BEND_RAD_INSIDE—The radiusisappliedtotheinsideofthe
sheetmetalgeometry.
○PRO_E_SMT_FILLET_RADIUS_VALUE —Specifiestheradiusvalue.
•PRO_E_SMT_TRIM_FORM_SIDES—T rimedgesofshearedform.Specifies
ifCreoParametric appliestrimmingofsheetmetal sidesurfacesduringformxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_E_SMT_FILLET_RADIUS_VALUE —Specifiestheradiusvalue.
•PRO_E_SMT_TRIM_FORM_SIDES—T rimedgesofshearedform.Specifies
ifCreoParametric appliestrimmingofsheetmetal sidesurfacesduringform
featuregeneration. Thevalidvaluesforthiselementfollow:
○PRO_B_TRUE
○PRO_B_FALSE
CreatingaPunchorDieFormFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaPunchorDieFormfeature
basedontheelementtreedefinition. Formoreinformation about
ProFeatureCreate(), refertheOverview ofFeatureCreationonpage750
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
RedefiningaPunchorDieFormFeature
FunctionIntroduced
•ProFeatur eRedefine()
Production Applications: Sheetmetal 1333Usethefunction ProFeatureRedefine() toredefineaPunchorDieForm
featurebasedonthechangesmadeintheelementtree.Formoreinformation
about ProFeatureRedefine(), refertheFeatureRedefineonpage773
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaPunchorDieFormFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxabout ProFeatureRedefine(), refertheFeatureRedefineonpage773
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaPunchorDieFormFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() toretrievetheelement
treedescription ofthePunchorDieFormfeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertheFeatureInquiryonpage771
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
QuiltFormFeature
TheQuiltFormfeaturemoldsthesheetmetalwallusingareferenced closedor
opendatumquilt.
FeatureElementTreefortheQuiltFormFeature
TheelementtreefortheQuiltFormfeatureisdocumented intheheaderfile
ProSmtPunchQuilt.h. Thefollowingfigureshowsthefeatureelementtree
structure:
1334 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforQuiltFormFeature
Theelementsinthistreeareasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_PUNCH_QUILT.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1334 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforQuiltFormFeature
Theelementsinthistreeareasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_PUNCH_QUILT.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_FORM_PUNCH_QUILT—Specifies thereferenced datumquilt.The
geometryofthereferenced quiltismergedwiththesheetmetalpart.
•PRO_E_FORM_PUNCH_SIDE—Specifies thepunchdirection.Thepunch
directionspecifiesasideofawallfromwhichthepunchmodelpenetrates the
sheetmetalgeometry.Thevaluesforthiselementarespecifiedbythe
enumerated typeProSmtSurfType. Thesurfacetypesareasfollows:
Production Applications: Sheetmetal 1335○PRO_SMT_SURF_FACE—The punchmodelmovesinadirectionfrom
thegreensidetothewhitesideofthesheetemetal model.Refertothe
figurePRO_SMT_SURF_F ACEonpage1328.
○PRO_SMT_SURF_OFFSET—The punchmodelmovesinadirectionfrom
thewhitesidetothegreensideofthesheetmetalmodel.Refertothe
figurePRO_SMT_SURF_OFFSET onpage1329.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfigurePRO_SMT_SURF_F ACEonpage1328.
○PRO_SMT_SURF_OFFSET—The punchmodelmovesinadirectionfrom
thewhitesidetothegreensideofthesheetmetalmodel.Refertothe
figurePRO_SMT_SURF_OFFSET onpage1329.
•PRO_E_FORM_PUNCH_MATERIAL_SIDE —Specifieswhetherthe
resultantsheetmetalgeometryliesinsideoroutsidethereferenced quiltafter
thefeatureiscreated.Thegeometryisplacedinsideoroutsidethereferenced
quiltusingthethicknessvalueoftheoriginalsheetmetalpart.Thevaluesfor
thiselement,specifiedbytheenumerated typeProSmdPunchMatSide,are
asfollows:
○PRO_SMT_PUNCH_MAT_INSIDE
○PRO_SMT_PUNCH_MAT_OUTSIDE
•PRO_E_STD_SURF_COLLECTION_APPL —Specifiesacollection of
surfacestobeexcludedfromthereferenced quiltwhenthefeatureiscreated.
•PRO_E_SMT_FILLET_INTERSECT—Specifies thesetoffilletsthatare
addedtothecontourscreatedbytheintersection ofthereferenced quiltwith
thesheetmetalpart.Thiselementconsistsofthefollowingelements:
○PRO_E_SMT_FILLET_RADIUS_USEFLAG—Specifies whetherafillet
radiusisused.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesheetmetalpart.Thiselementconsistsofthefollowingelements:
○PRO_E_SMT_FILLET_RADIUS_USEFLAG—Specifies whetherafillet
radiusisused.
○PRO_E_SMT_FILLET_RADIUS_SIDE—Specifies theradiusdirection
(outsideorinside).Thevaluesforthiselement,specifiedbythe
enumerated typeProSmdRadType, areasfollows:
◆PRO_BEND_RAD_OUTSIDE—The radiusisappliedtotheoutsideof
thesheetmetalgeometry.
◆PRO_BEND_RAD_INSIDE—The radiusisappliedtotheinsideofthe
sheetmetalgeometry.
○PRO_E_SMT_FILLET_RADIUS_VALUE—Specifies theradiusvalue.
•PRO_E_SMT_FILLET_QUILT—Specifies thesetoffilletsthatareaddedto
sharps(edgesbetweennon-tangent goemetries) onthereferenced quilt.This
elementconsistsofthesamesetofelementsasPRO_E_SMT_FILLET_
INTERSECT.
•PRO_E_FORM_PUNCH_HIDE_QUILT—Specifies whetherthereferenced
quiltwillbehiddeninthefeature.Thevaluesforthiselement,specifiedbythe
enumerated typeProSmdPunchHideQuilt, areasfollows:
○PRO_SMT_PUNCH_HIDE_ORIGINAL
○PRO_SMT_PUNCH_KEEP_ORIGINALxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxquiltwillbehiddeninthefeature.Thevaluesforthiselement,specifiedbythe
enumerated typeProSmdPunchHideQuilt, areasfollows:
○PRO_SMT_PUNCH_HIDE_ORIGINAL
○PRO_SMT_PUNCH_KEEP_ORIGINAL
1336 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SMT_TRIM_FORM_SIDES—T rimedgesofshearedform.Specifies
ifCreoParametric appliestrimmingofsheetmetal sidesurfacesduringform
featuregeneration. Thevalidvaluesforthiselementfollow:
○PRO_B_TRUE
○PRO_B_FALSE
CreatingaQuiltFormFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaQuiltFormfeaturebased
ontheelementtreedefinition. Formoreinformation about
ProFeatureCreate(), refertheOverview ofFeatureCreationonpage750
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
RedefiningaQuiltFormFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaQuiltFormfeature
basedonthechangesmadeintheelementtree.Formoreinformation aboutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRedefiningaQuiltFormFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaQuiltFormfeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertheFeatureRedefineonpage773sectionin
theElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaQuiltFormFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() toretrievetheelement
treedescription oftheQuiltFormfeature.Formoreinformation
aboutProFeatureElemtreeExtract(), refertheFeatureInquiryonpage
771sectionintheElementTrees:Principles ofFeatureCreationonpage749
chapter.
FlattenFormFeature
TheFlattenFormfeatureallowsyoutoflattenexistingFormfeaturesinyour
model.
Production Applications: Sheetmetal 1337FeatureElementTreeforFlattenFormFeature
TheelementtreeforaFlattenFormfeatureisdocumented intheheaderfile
ProSmtFlattenForm.h andhasasimplestructure.ThefollowingfigurexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementtreeforaFlattenFormfeatureisdocumented intheheaderfile
ProSmtFlattenForm.h andhasasimplestructure.Thefollowingfigure
demonstrates thestructureofthefeatureelementtree.
FlattenFormElementTree
Theelementsinthistreearedescribedasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_FLATTEN.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_SMT_FLATTEN_REF_TYPE—Specifies theselectiontypeforthe
Formfeaturestobeflattened.Itisspecifiedbytheenumerated type
ProFlattenRefType. Thevalidselectiontypesare:
○PRO_FLATTEN_FORM_REFSEL—Specifies thetypewhereyouselectan
arrayofFormfeaturesfromthemodel.Thisisthedefaultvalue.
○PRO_FLATTEN_FORM_ALLSEL—Specifies thetypewhereCreo
Parametric findsandselectsalltheFormfeaturesfromthemodel.
•PRO_E_STEP_SEL_FORM—Specifies thearrayofFormfeaturesyouselect.
•PRO_E_SMT_FLATTEN_PROJ_CUTS—Specifies ifcutsmustbeprojected
totheflattenedform.
CreatingaFlattenFormFeature
FunctionIntroduced
•ProFeatur eCreate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_SMT_FLATTEN_PROJ_CUTS—Specifies ifcutsmustbeprojected
totheflattenedform.
CreatingaFlattenFormFeature
FunctionIntroduced
•ProFeatur eCreate()
1338 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProFeatureCreate() tocreateaFlattenFormfeaturebased
ontheelementtreedefinition. Formoreinformation about
ProFeatureCreate(), refertheOverview ofFeatureCreationonpage750
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
RedefiningaFlattenFormFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaFlattenFormfeature
basedonthechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertheFeatureRedefineonpage773sectionin
theElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaFlattenFormFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() toretrievetheelement
treedescription oftheFlattenFormfeature.Formoreinformation aboutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctionIntroduced
•ProFeatur eElemtree Extract()
Usethefunction ProFeatureElemtreeExtract() toretrievetheelement
treedescription oftheFlattenFormfeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertheFeatureInquiryonpage771
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
ConvertFeatures
ShellFeature
Youcanusetheconvertfeaturestoconvertasolidpartintoasheetmetalpart.For
ablock-like part,usetheShellfeaturetoremoveoneormorewallsthathollows
theinsideofthemodel,leavingashellofthespecifiedwallthickness.
TheelementtreefortheShellfeatureisdocumented intheheaderfile
ProSmtShell.h, andisshowninthefollowingfigure:
Production Applications: Sheetmetal 1339ElementTreeforShellFeature
Theelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.The
valueofthisfeaturemustbePRO_
FEAT_DATUM_SURF.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.The
valueofthisfeaturemustbePRO_
FEAT_DATUM_SURF.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisShell_1.
PRO_E_DTM_SRF_TYPE PRO_VALUE_TYPE_INT SpecifiestheDatumSurfaceType
usingtheenumerated type
ProSmtDtmSrfType. The
valueofthisfeaturemustbePRO_
DTM_SRF_AS_WALL_
SHELL.
PRO_E_SMT_CONV_BODY PRO_VALUE_TYPE_
SELECTIONSpecifiesthebodytobeselected
toconverttoasheetmetal part.
PRO_E_SHELL_SRF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
collection ofsurfacestobe
removedtoshellthesolid.
PRO_E_STD_SMT_THICKNESS PRO_ELEM_TYPE_DOUBLE Specifiesthethicknessofthewall.
Itmustbepositiveanumber.
PRO_E_STD_MATRLSIDE PRO_VALUE_TYPE_INT Specifiesthedirectionofmaterial
thickness.
PRO_E_STD_SMT_SWAP_DRV
_SIDEPRO_VALUE_TYPE_INT Specifiessheetmetalswapsidesto
switchsidesofshelledanddriving
surfaces.
1340 Creo®Parametric TOOLKIT User’sGuideDrivingSurfaceFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthickness.
PRO_E_STD_SMT_SWAP_DRV
_SIDEPRO_VALUE_TYPE_INT Specifiessheetmetalswapsidesto
switchsidesofshelledanddriving
surfaces.
1340 Creo®Parametric TOOLKIT User’sGuideDrivingSurfaceFeature
TheDrivingSurfacefeatureconvertsasolidgeometrytosheetmetalpart.Forthin
protrusions withconstantthickness, usetheDrivingSurfacefeaturetoselecta
surfaceasthedrivingsurfaceandtosetthewallthickness.
TheelementtreefortheDrivingSurfacefeatureisdocumented intheheaderfile
ProSmtDrvSurf.h andisshowninthefollowingfigure:
ElementTreeforDrivingSurfaceFeature
Theelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.The
valueofthisfeaturemustbePRO_
FEAT_DATUM_SURF.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisDriving_
Surface_1.
PRO_E_DTM_SRF_TYPE PRO_VALUE_TYPE_INT SpecifiestheDatumSurfaceType
usingtheenumerated type
ProSmtDtmSrfType. The
valueofthisfeaturemustbePRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThedefaultvalueisDriving_
Surface_1.
PRO_E_DTM_SRF_TYPE PRO_VALUE_TYPE_INT SpecifiestheDatumSurfaceType
usingtheenumerated type
ProSmtDtmSrfType. The
valueofthisfeaturemustbePRO_
DTM_SRF_AS_WALL. Foran
emptybody,thevalueofthis
Production Applications: Sheetmetal 1341ElementID DataType Description
featuremustbePRO_DTM_SRF_
EMPTY_BODY_CONV.
PRO_E_SMT_CONV_BODY PRO_VALUE_TYPE_
SELECTIONSpecifiesthebodytobeselected
tobeconverted toasheetmetal
part.
PRO_E_SMT_DRV_SURF PRO_VALUE_TYPE_
SELECTIONSpecifiesthecollection ofasolid
surfacetobeusedasthedriving
surface.
PRO_E_STD_SMT_THICKNESS PRO_ELEM_TYPE_DOUBLE Specifiesthethicknessofthewall.
PRO_E_STD_MATRLSIDE PRO_VALUE_TYPE_INT Specifiesthedirectionofmaterial
thickness.
PRO_E_STD_SMT_SWAP_DRV
_SIDEPRO_VALUE_TYPE_INT Specifiessheetmetalswapsidesto
switchsidesofdrivingand
selectedsurfaces.
PRO_E_SMT_DRV_ADD_SURF Compound Specifiestheadditional surfaceto
beusedasadrivingsurfaceforthe
sheetmetal bodypart.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxswitchsidesofdrivingand
selectedsurfaces.
PRO_E_SMT_DRV_ADD_SURF Compound Specifiestheadditional surfaceto
beusedasadrivingsurfaceforthe
sheetmetal bodypart.
PRO_E_SMT_DRV_EXCL_SURF Compound Specifiesthesurfacestobe
excludedsothattheyarenot
treatedasfacesurfacesinthesheet
metalbody.
1342 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SMT_ADJACENT_RND_
OPTSPRO_VALUE_TYPE_INT Specifiestheadjacentround
optionsandisdefinedbythe
enumerated datetype
ProSmtAdjRndOpts. Thevalid
valuesfollow:
•PRO_SMT_ADJ_RND_
RECREATE—Removes rounds
andchamfersandrecreates
themafterthepartisconverted
toasheetmetalpart.
•PRO_SMT_ADJ_RND_
REMOVE—Removes the
roundedgeometry.The
resultinggeometryissimilarto
thegeometrybeforetheround
operation.
•PRO_SMT_ADJ_RND_
IGNORE—Ignores the
roundedgeometry.The
resultinggeometryiswithout
theroundedgeometry.
PRO_E_SMT_KEEP_NOT_
CLASS_SURFSPRO_VALUE_TYPE_INT Specifiesthekeepnotclassified
surfacesandisdefinedbythe
enumerated datatypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxroundedgeometry.The
resultinggeometryiswithout
theroundedgeometry.
PRO_E_SMT_KEEP_NOT_
CLASS_SURFSPRO_VALUE_TYPE_INT Specifiesthekeepnotclassified
surfacesandisdefinedbythe
enumerated datatype
ProSmtKeepNotClassSurf
sType.Thevalidvaluesfollow:
•PRO_SMT_IGNORE_NOT_
CLASS_SURFS —Ignores
surfacesthatarenotclassified
asthedrivingsurface,
additional surfaces,and
excludedsurfacesasseparate
quilts.
•PRO_SMT_KEEP_NOT_
CLASS_SURFS—Keeps
surfacesthatarenotclassified
asthedrivingsurface,
additional surfaces,and
excludedsurfacesasseparate
quilts.
RipFeatures
Ripfeaturesallowyoutotearacontinuous pieceofsheetmetalmaterialsothat
whenyouunbendadesign,ittearsalongtherippedsection.Therearefourtypes
ofripsavailable:
•Sketched Rip—Tearsthesheetmetalpartalongasketchedpath.Youcan
excludesurfacestoprotectthemfromrip.
Production Applications: Sheetmetal 1343•Surface Rip—Cuts outasurfacepatchfromthesheetmetalpartandinthe
processremovesvolumefromthepart.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexcludesurfacestoprotectthemfromrip.
Production Applications: Sheetmetal 1343•Surface Rip—Cuts outasurfacepatchfromthesheetmetalpartandinthe
processremovesvolumefromthepart.
•Edge Rip—Tearsthesheetmetalpartalonganedge.Youcandefineedge
treatmentfortherippededges.
•RipConnect—T earsthesheetmetalpartbetweentwodatumpointsor
verticesoracombination ofboth.
Thefourriptypesarespecifiedbytheenumerated typeProSmtRipType and
takethefollowingvalues:
•PRO_SMT_RIP_REGULAR—Specifies aSketchedRip.
•PRO_SMT_RIP_SURFACE—Specifies aSurfaceRip.
•PRO_SMT_RIP_EDGE—Specifies anEdgeRip.
•PRO_SMT_RIP_CONNECT—Specifies aConnectRip.
SketchedRipFeature
TheSketchedRipfeatureallowsyoutotearthesheetmetalpartalongasketched
path.
FeatureElementTreeforSketchedRipFeature
TheelementtreeforaSketchedRipfeatureisdocumented intheheaderfile
ProSmtRegularRip.h andhasasimplestructure.Thefollowingfigure
demonstrates thestructureofthefeatureelementtree.
SketchedRipElementTreexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementtreeforaSketchedRipfeatureisdocumented intheheaderfile
ProSmtRegularRip.h andhasasimplestructure.Thefollowingfigure
demonstrates thestructureofthefeatureelementtree.
SketchedRipElementTree
1344 Creo®Parametric TOOLKIT User’sGuideTheelementsinthistreearedescribedasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_RIP.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_SMT_RIP_TYPE—Specifies theriptypeandshouldhavethevalue
PRO_SMT_RIP_REGULAR.
•PRO_E_STD_SECTION—Specifies thesketchselectedfortherip.Youcan
createanewsectionorselectaninternalsketchfromthemodel.
•PRO_E_SMT_CUT_NORMAL_DIR—Specifies thenormalofprojection. The
projection normalspecifiesthesideofthesheemetal partfromwherethe
sketchedcurveripsthepart.Thevaluesforthiselementareasfollows:
○PRO_SMT_CUT_DRVSIDE_GREEN—Specifies thenormaltothedriven
surface.Thisisadirectionfromthegreensidetothewhitesideofthe
sheetmetalpart.Thisisthedefaultvalue.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_SMT_CUT_DRVSIDE_GREEN—Specifies thenormaltothedriven
surface.Thisisadirectionfromthegreensidetothewhitesideofthe
sheetmetalpart.Thisisthedefaultvalue.
○PRO_SMT_CUT_DRVSIDE_WHITE—Specifies thenormaltotheoffset
surface.Thisisadirectionfromthewhitesidetothegreensideofthe
sheetmetalpart.
•PRO_E_SMT_PROJ_DIR—Specifies theprojection direction.Itisspecified
bytheenumerated typeProSmtProjDir. Thevalidvaluesare:
○PRO_SMT_PROJ_DIR_ONE—Specifies theprojection tooneside.This
isthedefaultvalue.
○PRO_SMT_PROJ_DIR_TWO—Specifies theprojection totheopposite
side.
○PRO_SMT_PROJ_DIR_BOTH—Specifies theprojection toboththesides.
•PRO_E_STD_MATRLSIDE—Specifies thedirectioninwhichtheareaofthe
sheetmetalpartisripped.Itisspecifiedbytheenumerated type
ProSketchRipMatSide. Thevalidvaluesare:
○PRO_SKETCHRIP_MATSIDE_ONE—Specifies theripinonedirection.
○PRO_SKETCHRIP_MATSIDE_TWO—Specifies theripintheopposite
direction.Thisisthedefaultvalue.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies acollection ofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_SKETCHRIP_MATSIDE_TWO—Specifies theripintheopposite
direction.Thisisthedefaultvalue.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies acollection of
surfacesthatareexcludedfromtheripoperation. Thiselementisoptional.
SurfaceRipFeature
TheSurfaceRipfeatureallowsyoutocutoutasurfacepatchfromthesheetmetal
partandintheprocessremovesvolumefromthepart.
Production Applications: Sheetmetal 1345FeatureElementTreeforSurfaceRipFeature
TheelementtreeforaSurfaceRipfeatureisdocumented intheheaderfile
ProSmtSurfaceRip.h andhasasimplestructure.Thefollowingfigure
demonstrates thestructureofthefeatureelementtree.
SurfaceRipElementTree
Theelementsinthistreearedescribedasfollows:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_RIP.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_SMT_RIP_TYPE—Specifies theriptypeandshouldhavethevalue
PRO_SMT_RIP_SURFACE.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies thecollection of
surfacesyouselecttoberipped.
EdgeRipFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_SMT_RIP_TYPE—Specifies theriptypeandshouldhavethevalue
PRO_SMT_RIP_SURFACE.
•PRO_E_STD_SURF_COLLECTION_APPL—Specifies thecollection of
surfacesyouselecttoberipped.
EdgeRipFeature
TheEdgeRipfeatureallowsyoutotearthesheetmetalpartalonganedge.
FeatureElementTreeforEdgeRipFeature
TheelementtreeforaEdgeRipfeatureisdocumented intheheaderfile
ProSmtEdgeRip.h andhasasimplestructure.Thefollowingfigure
demonstrates thestructureofthefeatureelementtree.
1346 Creo®Parametric TOOLKIT User’sGuideEdgeRipElementTree
PRO_E_SMT_EDGE_RIP
Theelementsinthistreearedescribedasfollows:
Production Applications: Sheetmetal 1347•PRO_E_FEATURE_TYPE—Specifies thefeaturetypeandshouldbePRO_
FEAT_RIP.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthefeature.
•PRO_E_SMT_RIP_TYPE—Specifies theriptypeandshouldhavethevalue
PRO_SMT_RIP_EDGE.
•PRO_E_SMT_EDGE_RIP_ARRAY—Specifies anarrayoftheelement PRO_
E_SMT_EDGE_RIP_SET. PRO_E_SMT_EDGE_RIP_SET isacompound
elementthatconsistsofthefollowingelements:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_SMT_RIP_EDGE.
•PRO_E_SMT_EDGE_RIP_ARRAY—Specifies anarrayoftheelement PRO_
E_SMT_EDGE_RIP_SET. PRO_E_SMT_EDGE_RIP_SET isacompound
elementthatconsistsofthefollowingelements:
○PRO_E_SMT_EDGE_RIP_REFERENCES—Specifies anarrayofthe
element PRO_E_SMT_EDGE_REFERENCES. PRO_E_SMT_EDGE_
REFERENCES isacompound elementthatconsistsofthefollowing
element:
◆PRO_E_STD_CURVE_COLLECTION_APPL—Specifies thechainof
edgesselectedfortherip.
○PRO_E_SMT_EDGE_RIP—Specifies thetypesandoptionsforthe
treatmentoftherippededges.
TheElementSubtreeforPRO_E_SMT_EDGE_RIP
PRO_E_SMT_EDGE_RIP isacompound elementthatconsistsofthefollowing
elements:
•PRO_E_SMT_EDGE_RIP_TYPE—Specifies theedgetreatmenttypes.Itis
specifiedbytheenumerated typeProEdgeRipType. Thevalidtypesare:
○PRO_EDGE_RIP_OPEN—Rips thesheetmetalwallsattheirpointof
intersection.
○PRO_EDGE_RIP_BLIND—Rips thesheetmetalpartwithagapspecified
bytwodimensions.
○PRO_EDGE_RIP_MITER_CUT—Rips thesheetmetalpartwithagap
specifiedbyasingledimension.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintersection.
○PRO_EDGE_RIP_BLIND—Rips thesheetmetalpartwithagapspecified
bytwodimensions.
○PRO_EDGE_RIP_MITER_CUT—Rips thesheetmetalpartwithagap
specifiedbyasingledimension.
○PRO_EDGE_RIP_OVERLAP—Rips thesheetmetalpartsuchthatone
sideoverlapstheother.
○PRO_EDGE_RIP_PARAM—Rips thesheetmetalpartbythevalue
specifiedbythedefined SMT_GAP parameter.
•PRO_E_SMT_EDGE_RIP_FLIP—Specifies whethertofliptheoverlapping
side.ThiselementisavailableonlyifthePRO_E_SMT_EDGE_RIP_TYPE
hasthevalue PRO_EDGE_RIP_OVERLAP.
•PRO_E_SMT_EDGE_RIP_ADD_GAP—Specifies whethertoaaddagap
clearance. Thiselementisapplicable onlyiftheelement PRO_E_SMT_
1348 Creo®Parametric TOOLKIT User’sGuideEDGE_RIP_TYPE hasthevalue PRO_EDGE_RIP_OVERLAP orPRO_
EDGE_RIP_PARAM.
•PRO_E_SMT_EDGE_RIP_CLOSE_CORNER—Specifies ifthegapbetween
thebendsurfacesofanedgeripmustbeclosed.Thiselementisapplicable
onlyiftheelement PRO_E_SMT_EDGE_RIP_TYPE issettoPRO_EDGE_
RIP_OPEN.
•PRO_E_SMT_EDGE_RIP_DIM_1—Specifies theproperties ofside1.Thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthebendsurfacesofanedgeripmustbeclosed.Thiselementisapplicable
onlyiftheelement PRO_E_SMT_EDGE_RIP_TYPE issettoPRO_EDGE_
RIP_OPEN.
•PRO_E_SMT_EDGE_RIP_DIM_1—Specifies theproperties ofside1.This
elementconsistsofthefollowingelements:
○PRO_E_SMT_DIMENSION_TYPE—Specifies thedimension type.Itis
specifiedbytheenumerated typeProEdgeRipDimType. Thevalid
typesare:
◆PRO_EDGE_RIP_DIM_TYPE_BLIND—Specifies thetypePRO_
DIM_ENTER.
◆PRO_EDGE_RIP_DIM_TYPE_GAP—Specifies thetypePRO_DIM_
SMT_GAP.
◆PRO_EDGE_RIP_DIM_TYPE_PARAM—Specifies thetypePRO_
DIM_DFLT_EDGE_TREA_WIDTH.
SeetableRelationValueTypesonpage1317forthedescriptions ofthe
abovelistofvaluetypes.
○PRO_E_SMT_DIMENSION_VALUE—Specifies thedimension valuefor
thetypeselected.
•PRO_E_SMT_EDGE_RIP_DIM_2—Specifies theproperties ofside2.This
compound elementconsistsofthesameelementsastheelement PRO_E_
SMT_EDGE_RIP_DIM_1.
RipConnectFeature
TheRipConnectfeatureallowsyoutotearthesheetmetalpartbetweentwoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompound elementconsistsofthesameelementsastheelement PRO_E_
SMT_EDGE_RIP_DIM_1.
RipConnectFeature
TheRipConnectfeatureallowsyoutotearthesheetmetalpartbetweentwo
datumpointsorverticesoracombination ofboth.Aripconnectendpointmustbe
eitheradatumpoint,oravertexandmustlieattheendofanedgeriporonthe
partborder.
TheelementtreefortheRipConnectfeatureisdocumented intheheaderfile
ProSmtConnectRip.h andisasshowninthefollowingfigure:
Production Applications: Sheetmetal 1349ElementTreeforRipConnectFeature
Theelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.The
valueofthisfeaturemustbePRO_
FEAT_RIP.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisRip_
Connect_1.
PRO_E_SMT_RIP_TYPE PRO_VALUE_TYPE_INT Specifiestheriptype.Thevalid
valueforthiselementisPRO_
SMT_RIP_CONNECT.
PRO_E_SMT_RIP_CONNECT_
COMPCompound Specifiesacompound element.
PRO_E_SMT_RIP_CONNECT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_SMT_RIP_TYPE PRO_VALUE_TYPE_INT Specifiestheriptype.Thevalid
valueforthiselementisPRO_
SMT_RIP_CONNECT.
PRO_E_SMT_RIP_CONNECT_
COMPCompound Specifiesacompound element.
PRO_E_SMT_RIP_CONNECT_
SETSArray Specifiesanarrayofripconnect
sets.
PRO_E_SMT_RIP_CONNECT_
SETCompound Specifiesacompound elementof
referencepointsandgap
parameters.
PRO_E_SMT_RIP_CONN_REFS Array Specifiesanarrayelement
containing thestartingandend
pointoftheripconnectfeature.
Youcanspecifyuptotwo
1350 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
elementsinthisarray.
PRO_E_SMT_RIP_CONN_REF Compound Specifiesacompound elementof
vertexordatumpoints.
PRO_E_SMT_RIP_CONN_END PRO_VALUE_TYPE_
SELECTIONSpecifiesavertexordatumpoint
todefinethestartorendoftherip.
Thisvertexordatumpointmustbe
placedontheedgeortheborderof
asheetmetalpart.
PRO_E_SMT_RIP_CONN_GAP
_COMPCompound Specifiesacompound elementof
gapparameters.
PRO_E_SMT_RIP_CONN_ADD
_GAPPRO_VALUE_TYPE_BOOLEAN Specifiesifagapclearanceshouldxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasheetmetalpart.
PRO_E_SMT_RIP_CONN_GAP
_COMPCompound Specifiesacompound elementof
gapparameters.
PRO_E_SMT_RIP_CONN_ADD
_GAPPRO_VALUE_TYPE_BOOLEAN Specifiesifagapclearanceshould
beaddedtotheselectedsetofthe
ripconnect.Thevalidvaluesare
TRUEorFALSE.
PRO_E_SMT_RIP_CONN_GAP
_VALPRO_VALUE_TYPE_DOUBLE Specifiesthegapvalue.
CreatingaRipFeature
FunctionIntroduced
•ProFeatur eCreate()
Usethefunction ProFeatureCreate() tocreateaspecificRipfeaturebased
ontheelementtreedefinition. Formoreinformation about
ProFeatureCreate(), refertheOverview ofFeatureCreationonpage750
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
RedefiningaRipFeature
FunctionIntroduced
•ProFeatur eRedefine()
Usethefunction ProFeatureRedefine() toredefineaRipfeaturebasedon
thechangesmadeintheelementtree.Formoreinformation about
ProFeatureRedefine(), refertheFeatureRedefineonpage773sectionin
theElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaRipFeature
FunctionIntroducedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureRedefine(), refertheFeatureRedefineonpage773sectionin
theElementTrees:Principles ofFeatureCreationonpage749chapter.
AccessingaRipFeature
FunctionIntroduced
•ProFeatur eElemtree Extract()
Production Applications: Sheetmetal 1351Usethefunction ProFeatureElemtreeExtract() toretrievetheelement
treedescription oftheRipfeature.Formoreinformation about
ProFeatureElemtreeExtract(), refertheFeatureInquiryonpage771
sectionintheElementTrees:Principles ofFeatureCreationonpage749chapter.
CornerReliefFeature
Cornerreliefcanbeaddedateachintersection ofapairofbends.Whenyouadd
relief,sheetmetalsectionsareremovedfromthemodel.
TheelementtreefortheCornerRelieffeatureisdocumented intheheaderfile
ProSmtCornerRelief.h andisshowninthefollowingfigure:
ElementTreeforCornerReliefFeature
Theelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisCorner_
Relief_1.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisCorner_
Relief_1.
PRO_E_CORNER_RELIEFS Compound Thiscompound elementdefines
thecornerreliefsets.
1352 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_CORNER_RELIEFS_
CR_STATEPRO_VALUE_TYPE_INT Specifiesthecornerreliefstate
usingtheenumerated datatype
ProCrnRelCrState andhas
thevalues:
•PRO_CRN_REL_CR_IN
_FORMED—Creates corner
reliefgeometryonlywhenthe
cornerbendsareinformed
state.
•PRO_CRN_REL_CR_IN_
UNBEND_ONLY—Creates
cornerreliefgeometryonly
whenthecornerbendsarein
unbendstate.
PRO_E_CORNER_RELIEFS_
ARRArray Anarrayelementofcornerrelief
sets.
PRO_E_CORNER_RELIEF_
SETCompound Thiscompound elementcontainsa
cornerreliefset.
PRO_E_CORNER_RELIEF_
REF_ARRArray Anarrayelementthatcontainsthe
cornersselectedinthisset.
PRO_E_CORNER_RELIEF_
REF_SETCompound Asetofelementsthatdefinesa
selectedcorner.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcornerreliefset.
PRO_E_CORNER_RELIEF_
REF_ARRArray Anarrayelementthatcontainsthe
cornersselectedinthisset.
PRO_E_CORNER_RELIEF_
REF_SETCompound Asetofelementsthatdefinesa
selectedcorner.
PRO_E_CORNER_RELIEF_
REF_TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofcornerrelief
usingtheenumerated datatype
ProCrnRelRefType. Thevalid
valuesforthiselementare:
•PRO_CRN_REL_3_
SURFACES—Corner relief
mustbeappliedtothe
specifiedcornersinthemodel.
•PRO_CRN_REL_ALL—
Cornerreliefmustbeapplied
toallthecornersinthemodel.
PRO_E_CORNER_RELIEF_
REF_FLATPRO_VALUE_TYPE_SELECTION Specifiesselectionofaflat
surfacethatisusedtolocatethe
corner.
PRO_E_CORNER_RELIEF_
REF_BND_1PRO_VALUE_TYPE_SELECTION Specifiesselectionofafirst
cylindrical surfacethatisusedto
locatethecorner.
PRO_E_CORNER_RELIEF_
REF_BND_2PRO_VALUE_TYPE_SELECTION Specifiesselectionofasecond
cylindrical surfacethatisusedto
locatethecorner.
PRO_E_CORNER_RELIEF_
DEFINECompound Acornerreliefcompound
element.
RefertothesectionCornerReliefxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcylindrical surfacethatisusedto
locatethecorner.
PRO_E_CORNER_RELIEF_
DEFINECompound Acornerreliefcompound
element.
RefertothesectionCornerRelief
Optionsonpage1354formore
detailsonthiselementand
subsequent childelements.
Production Applications: Sheetmetal 1353CornerReliefOptions
Thecompound element PRO_E_CORNER_RELIEF_ DEFINEdefinesthe
optionsandvaluesforacornerrelieffeature.
ElementTreeforCornerReliefFeatureOptions
TheelementsofPRO_E_CORNER_RELIEF_ DEFINEaredescribedasfollows:
ElementID DataType Description
PRO_E_CORNER_RELIEF_
DEFINECompound Acornerreliefcompound
element.
PRO_E_SMT_CORNER_
RELIEFCompound Thiscompound elementdefines
thecornerreliefproperties.
PRO_E_SMT_CORNER_
RELIEF_TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofcornerrelief
usingtheenumerated datatype
ProCornerRelType andhas
thefollowingvalues:
1354 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_CORNER_RELIEF_V_
NOTCH—Adds aVnotch
shapecutatthecorners.
•PRO_CORNER_RELIEF_
CIRCULAR—Adds acircularxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefollowingvalues:
1354 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_CORNER_RELIEF_V_
NOTCH—Adds aVnotch
shapecutatthecorners.
•PRO_CORNER_RELIEF_
CIRCULAR—Adds acircular
shapereliefatthecornerswith
aradiusdimension.
•PRO_CORNER_RELIEF_
RECTANGULAR—Adds a
rectangular reliefatthe
cornerswithaspecifiedwidth
anddepth.
•PRO_CORNER_RELIEF_
OBROUND—Adds anobround
reliefatthecornerswitha
specifieddiameteranddepth.
•PRO_CORNER_RELIEF_
NO—Does notaddreliefand
generatessquarecorners.
•PRO_CORNER_RELIEF_
PARAM—Adds thecorner
reliefassetbytheSMT_
DFLT_CRNR_REL
_TYPEparameter inCreo
Parametric.
PRO_E_SMT_CORNER_
RELIEF_WIDTHCompound Thiscompound elementdefines
thewidthtypeandwidthvaluefor
cornerrelief.
PRO_E_SMT_CORNER_
RELIEF_WIDTH_TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofwidthforthe
cornerreliefusingtheenumerated
datatypeProSmdRelType and
usesoneofthevalueslistedin
RelationValueTypesonpage
1317
PRO_E_SMT_CORNER_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRELIEF_WIDTH_TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofwidthforthe
cornerreliefusingtheenumerated
datatypeProSmdRelType and
usesoneofthevalueslistedin
RelationValueTypesonpage
1317
PRO_E_SMT_CORNER_
RELIEF_WIDTH_VALPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofwidthfor
thecornerrelief.
PRO_E_SMT_CORNER_
RELIEF_DEPTHCompound Thiscompound elementdefines
thedepthtypeanddepthvaluefor
cornerrelief.
PRO_E_SMT_CORNER_
RELIEF_DEPTH_TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofdepthforthe
cornerreliefusingtheenumerated
datatype
ProCornerRlfDepthType
andusesoneofthevalueslistedin
Production Applications: Sheetmetal 1355ElementID DataType Description
RelationValueTypesonpage
1317
PRO_E_SMT_CORNER_
RELIEF_DEPTH_VALPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofdepthvalue
forthecornerrelief.
PRO_E_SMT_CORNER_
RELIEF_ROTATECompound Thiscompound elementdefines
therotationparameters forcorner
reliefandisapplicable onlyif
PRO_E_SMT_CORNER_
RELIEF_TYPE valueisPRO_
CORNER_RELIEF_OBROUND or
PRO_CORNER_RELIEF_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRELIEF_ROTATECompound Thiscompound elementdefines
therotationparameters forcorner
reliefandisapplicable onlyif
PRO_E_SMT_CORNER_
RELIEF_TYPE valueisPRO_
CORNER_RELIEF_OBROUND or
PRO_CORNER_RELIEF_
RECTANGULAR.
PRO_E_SMT_CORNER_
RELIEF_ROTATE_ADDPRO_VALUE_TYPE_INT Specifiesifrotationshouldbe
addedtothereliefplacement. The
validvaluesforthiselementare:
•PRO_B_TRUE
•PRO_B_FALSE
PRO_E_SMT_CORNER_
RELIEF_ROTATE_VALPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofrotation.
PRO_E_SMT_CORNER_
RELIEF_OFFSETCompound Thiscompound elementdefines
theoffsetparameters forcorner
reliefandisapplicable onlyif
PRO_E_SMT_CORNER_
RELIEF_TYPE valueisPRO_
CORNER_RELIEF_CIRCULAR,
PRO_CORNER_RELIEF_
OBROUND orPRO_CORNER_
RELIEF_RECTANGULAR.
PRO_E_SMT_CORNER_
RELIEF_OFFSET_ADDPRO_VALUE_TYPE_INT Specifiesifoffsetshouldbeadded
tothereliefplacement. Thevalid
valuesforthiselementare:
•PRO_B_TRUE
•PRO_B_FALSE
1356 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SMT_CORNER_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtothereliefplacement. Thevalid
valuesforthiselementare:
•PRO_B_TRUE
•PRO_B_FALSE
1356 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SMT_CORNER_
RELIEF_OFFSET_VALPRO_VALUE_TYPE_DOUBLE Specifiestheoffsetvalue.
PRO_E_CORNER_RELIEFS_
DIM_SCHEMEPRO_VALUE_TYPE_INT Specifiesthedimension scheme
usingtheenumerated datatype
ProCrnRelDimRefType and
hasthevalues:
•PRO_CRN_REL_DIM_REF
_BEND_AXES_XSECTION
—Placesthereliefatthepoint
wherethebendedges
intersect.
•PRO_CRN_REL_DIM
_REF_CORNER_VERTEX
—Placesthereliefatthepoint
wherethebendlinesintersect.
EditingCornerReliefFeature
TheEditCornerRelieffeatureremovesoreditsmultiplecornerreliefdesign
objectsinyourmodel.Whenyoueditcornerreliefs,youcanchangethewidthand
depthofdifferenttypesofreliefsandyoucansetboundingsurfacestoremove.
Youcaneditcornerreliefstonoreliefortoanyoneofthetypesofcornerreliefs.
Production Applications: Sheetmetal 1357TheelementtreefortheEditCornerRelieffeatureisdocumented intheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxYoucaneditcornerreliefstonoreliefortoanyoneofthetypesofcornerreliefs.
Production Applications: Sheetmetal 1357TheelementtreefortheEditCornerRelieffeatureisdocumented intheheaderfile
ProSmtEditCornerRelief.h andisshowninthefollowingfigure:
1358 Creo®Parametric TOOLKIT User’sGuideTheelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_EDIT_CORNER_
RELIEF.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisEdit_
Corner_Relief_1.
PRO_E_EDIT_CORNER_
RELIEFCompound Thiscompound elementdefines
theoptionsandsetsthevaluesfor
editingcornerreliefs.
PRO_E_EDIT_CORNER_
RELIEF_SEL_OPTPRO_VALUE_TYPE_INT Specifiesthecornerreliefstate
usingtheenumerated datatype
ProCrnRelCrState. Ithasthe
followingvalidvalues:
•PRO_CRN_REL_CR_IN_
FORMED—Creates corner
reliefgeometryonlywhenthe
cornerbendsareinformed
state.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusingtheenumerated datatype
ProCrnRelCrState. Ithasthe
followingvalidvalues:
•PRO_CRN_REL_CR_IN_
FORMED—Creates corner
reliefgeometryonlywhenthe
cornerbendsareinformed
state.
•PRO_CRN_REL_CR_IN_
UNBEND_ONLY—Creates
cornerreliefgeometryonly
whenthecornerbendsarein
unbendstate.
PRO_E_CORNER_RELIEF_
DEFINECompound Acornerreliefcompound
element.
RefertothesectionCornerRelief
Optionsonpage1354formore
detailsonthiselementand
subsequent childelements.
EditingCornerSeams
TheEditCornerSeamfeatureenablesyoutoremoveoreditmultiplecornerseam
designobjectsinyourmodel.
TheelementtreefortheEditCornerSeamfeatureisdocumented intheheaderfile
ProSmtEditCornerSeam.h andisasshowninthefollowingfigure:
Production Applications: Sheetmetal 1359FeatureElementTreeforEditCornerSeamFeature
Theelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
EDIT_CORNER_SEAM.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
EDIT_CORNER_SEAM.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesthe
nameofthefeature.Thedefault
valueisEdit_Corner_Seam_
1.
PRO_E_EDIT_CORNER_SEAM Compound Mandatory element.This
compound elementdefinesthe
optionsandsetsthevaluesfor
editingcornerseams.
1360 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_EDIT_CORNER_SEAM_
SEL_MODEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
modeforselectingcornerseams.
Thevalidvaluesare:
•PRO_SMT_RECOGNITION_
MANUAL_SEL—Specifies
manualselectionofcorner
seamstoedit.
•PRO_SMT_RECOGNITION_
AUTO_SEL—Specifies
automatic selectionofcorner
seamstoedit.
PRO_E_EDIT_CORNER_SEAM_
GEOMSMulti Collector Thiselementismandatory when
theselectionmodeissettoPRO_
SMT_RECOGNITION_MANUAL_
SEL.
Specifiestheselectionofgeometry
forcornerseams.
PRO_E_REMOVE_CORNER_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_EDIT_CORNER_SEAM_
GEOMSMulti Collector Thiselementismandatory when
theselectionmodeissettoPRO_
SMT_RECOGNITION_MANUAL_
SEL.
Specifiestheselectionofgeometry
forcornerseams.
PRO_E_REMOVE_CORNER_
SEAMPRO_VALUE_TYPE_BOOLEAN Specifiesthatthecornerseam
mustberemoved.
PRO_E_EDIT_CORNER_SEAM_
SHAPECompound Thiselementismandatory when
theelement PRO_E_REMOVE_
CORNER_SEAM issettofalse.
Thiscompound elementdefines
theoptionsandsetsthevaluesfor
cornerseamedges.
PRO_E_EDIT_BEND_RCR_
CRNRPRO_VALUE_BOOLEAN Specifiesifthecornerreliefsmust
beautomatically changedtoV
notchcornertype.
PRO_E_CRNR_SEAM_CR_RND_
CHMFPRO_VALUE_TYPE_INT Mandatory element.Specifiesif
theroundsandchamfersmustbe
recreatedafterthecornerseams
areedited.Theinputtothe
elementarethevaluesdefinedby
theenumerated datatype
ProEditBendCrRndChmfOpt.
Thevalidvaluesare:
•PRO_ED_CR_CRNR_SEAM_
RND_CHMF— Theroundsand
chamfersarerecreated.
•PRO_ED_NO_CR_CRNR_
SEAM_RND_CHMF— The
roundsandchamfersarenot
recreated.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProEditBendCrRndChmfOpt.
Thevalidvaluesare:
•PRO_ED_CR_CRNR_SEAM_
RND_CHMF— Theroundsand
chamfersarerecreated.
•PRO_ED_NO_CR_CRNR_
SEAM_RND_CHMF— The
roundsandchamfersarenot
recreated.
PRO_E_SMT_EDGE_RIP_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofcornerseam
usingtheenumerated datatype
ProEdgeRipType. Thevalid
valuesare:
•PRO_EDGE_RIP_OPEN—
Editsthecornerseamatthe
intersection pointofedges.
Production Applications: Sheetmetal 1361ElementID DataType Description
•PRO_EDGE_RIP_BLIND—
Editsthecornerseamwitha
gapspecifiedbytwo
dimensions.
•PRO_EDGE_RIP_MITER_
CUT—Edits thecornerseam
withagapspecifiedbya
singledimension.
•PRO_EDGE_RIP_
OVERLAP—Edits thecorner
seamsuchthatoneedge
overlapstheother.
PRO_E_SMT_EDGE_RIP_ADD_
GAPPRO_VALUE_TYPE_BOOLEAN Specifieswhethertoaddagap
clearance. Thiselementis
applicable onlyiftheelement
PRO_E_SMT_EDGE_RIP_TYPE
issettoPRO_EDGE_RIP_
MITER_CUT orPRO_EDGE_
RIP_OVERLAP.
PRO_E_SMT_EDGE_RIP_
CLOSE_CORNERPRO_VALUE_TYPE_BOOLEAN Specifiesifthegapbetweenthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplicable onlyiftheelement
PRO_E_SMT_EDGE_RIP_TYPE
issettoPRO_EDGE_RIP_
MITER_CUT orPRO_EDGE_
RIP_OVERLAP.
PRO_E_SMT_EDGE_RIP_
CLOSE_CORNERPRO_VALUE_TYPE_BOOLEAN Specifiesifthegapbetweenthe
bendsurfacesofacornerrelief
mustbeclosed.Thiselementis
applicable onlyiftheelement
PRO_E_SMT_EDGE_RIP_TYPE
issettoPRO_EDGE_RIP_OPEN.
PRO_E_SMT_EDGE_RIP_DIM_
1Compound Thiselementismandatory when
theelement PRO_E_SMT_EDGE_
RIP_TYPE issettoPRO_EDGE_
RIP_BLIND.
Specifiesacompound elementthat
definestheproperties ofside1.
PRO_E_SMT_DIMENSION_
TYPEPRO_VALUE_TYPE_INT Specifiesthedimension type.For
PRO_EDGE_RIP_DIM_TYPE_
BLINDdimension type,the
relationvalueissettoPRO_
DIM_ENTER.
PRO_E_SMT_DIMENSION_
VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthedimension valuefor
side1.
PRO_E_SMT_EDGE_RIP_DIM_
2Compound Thiselementismandatory when
theelement PRO_E_SMT_EDGE_
RIP_TYPE issettoPRO_EDGE_
RIP_BLIND.
Specifiesacompound elementthat
definestheproperties ofside2.
PRO_E_SMT_DIMENSION_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2Compound Thiselementismandatory when
theelement PRO_E_SMT_EDGE_
RIP_TYPE issettoPRO_EDGE_
RIP_BLIND.
Specifiesacompound elementthat
definestheproperties ofside2.
PRO_E_SMT_DIMENSION_
TYPEPRO_VALUE_TYPE_INT Specifiesthedimension type.For
PRO_EDGE_RIP_DIM_TYPE_
BLINDdimension type,the
relationvalueissettoPRO_
DIM_ENTER.
PRO_E_SMT_DIMENSION_ PRO_VALUE_TYPE_DOUBLE Specifiesthedimension valuefor
1362 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
VALUE side2.
PRO_E_SMT_EDGE_RIP_GAP Compound Thiselementismandatory when
theelement PRO_E_SMT_EDGE_
RIP_TYPE issettoPRO_EDGE_
RIP_MITER_CUT orPRO_E_
SMT_EDGE_RIP_ADD_GAP is
settotrue.
Specifiestheproperties forthe
gap.
PRO_E_SMT_DIMENSION_
TYPEPRO_VALUE_TYPE_INT Specifiesthegaptype.ForPRO_
EDGE_RIP_MITER_CUT and
PRO_EDGE_RIP_OVERLAP
dimension typestherelationvalue
issettoPRO_ DIM_ENTER.
PRO_E_SMT_DIMENSION_
VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthevalueforthegap.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEDGE_RIP_MITER_CUT and
PRO_EDGE_RIP_OVERLAP
dimension typestherelationvalue
issettoPRO_ DIM_ENTER.
PRO_E_SMT_DIMENSION_
VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthevalueforthegap.
PRO_E_SMT_EDGE_RIP_FLIP PRO_VALUE_TYPE_BOOLEAN Specifiesifthesideofcornerseam
thatoverlapsmustbeflipped.
PRO_E_EDIT_CORNER_SEAM_
TABLEArray Specifiesanarrayelementthat
definestheoptionstoremovethe
cornerseam.
PRO_E_CORNER_SEAM_RMV_
SETTINGSCompound Specifiesacompound elementthat
definestheoptionstoremovethe
cornerseam.
PRO_E_EDIT_CORNER_SEAM_
RMV_REFSCompound Specifiesacompound elementthat
definesthecornerreference
geometrytowhichtheseamis
attached.Thesurfaceshouldbe
planarortwocylinders.
PRO_E_CORNER_SEAM_RMV_
FLATPRO_VALUE_TYPE_
SELECTIONSpecifiesaflatsurface.
PRO_E_CORNER_SEAM_RMV_
BEND_1PRO_VALUE_TYPE_
SELECTIONSpecifiesthefirstbendsurface.
PRO_E_CORNER_SEAM_RMV_
BEND_2PRO_VALUE_TYPE_
SELECTIONSpecifiesthesecondbendsurface.
PRO_E_CORNER_SEAM_
BOUNDARIESMulti Collector Specifiescollection ofbounding
surfaces.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CORNER_SEAM_RMV_
BEND_2PRO_VALUE_TYPE_
SELECTIONSpecifiesthesecondbendsurface.
PRO_E_CORNER_SEAM_
BOUNDARIESMulti Collector Specifiescollection ofbounding
surfaces.
PRO_E_CORNER_SEAM_RMV_
SIDE_1Compound Specifiesacompound elementthat
definestheproperties ofside1.
PRO_E_CORNER_SEAM_RMV_
DEFAULTPRO_VALUE_TYPE_BOOLEAN Specifiesthedefaultoptionto
removethecornerseamforside1.
PRO_E_EDIT_CORNER_SEM_
RMV_METHODPRO_VALUE_TYPE_INT Specifiesthemethodtoremove
thecornerseamforside1.The
validvaluesarespecifiedusingthe
enumerated datatype
ProEditCornerSeamRemove
Type:
•PRO_CORNER_SEAM_
REMOVE_TANGENT—
Extendsortrimsthebounding
surfacemakingitaplanar
Production Applications: Sheetmetal 1363ElementID DataType Description
surfacetangenttooriginal
surface.
•PRO_CORNER_SEAM_
REMOVE_SAME—Extends or
trimstheboundingsurfaceby
continuing pastitsoriginal
boundaries andkeepingthe
sametypeofsurface.
•PRO_CORNER_SEAM_
REMOVE_PARALLEL—
Extendsortrimsthebounding
surfaceparalleltothebend
axis.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtrimstheboundingsurfaceby
continuing pastitsoriginal
boundaries andkeepingthe
sametypeofsurface.
•PRO_CORNER_SEAM_
REMOVE_PARALLEL—
Extendsortrimsthebounding
surfaceparalleltothebend
axis.
•PRO_CORNER_SEAM_
REMOVE_COMMON_
VERTEX—Extends ortrims
theboundingsurfacenormalto
thecorner.
•PRO_CORNER_SEAM_
REMOVE_NORMAL—Finds the
commonvertexfor
intersection ofbothbounding
surfaces.
PRO_E_CORNER_SEAM_RMV_
SIDE_2Compound Specifiesacompound elementthat
definestheproperties ofside2.
PRO_E_CORNER_SEAM_RMV_
DEFAULTPRO_VALUE_TYPE_BOOLEAN Specifiesthedefaultoptionto
removethecornerseamforside2.
PRO_E_EDIT_CORNER_SEM_
RMV_METHODPRO_VALUE_TYPE_INT Specifiesthemethodtoremove
thecornerseamforside2using
theenumerated datatype
ProEditCornerSeamRemove
Type.
BendFeature
TheBendfeatureallowsyoutobendthesheetmetalindifferentwaysusingthe
bendlineoranedgeoracurveandbydefiningspecificradiusandangle.
TheelementtreefortheBendfeatureisdocumented intheheaderfile
ProSmtBend.h andisasshowninthefollowingfigure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbendlineoranedgeoracurveandbydefiningspecificradiusandangle.
TheelementtreefortheBendfeatureisdocumented intheheaderfile
ProSmtBend.h andisasshowninthefollowingfigure:
1364 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforBendFeature
Theelementsinthistreearedescribedasfollows:
Production Applications: Sheetmetal 1365ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
BEND.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisBend_1.
PRO_E_SMT_BEND_FORM PRO_VALUE_TYPE_INT Specifiesthetypeofbendusing
theenumerated datatype
ProBendForm. Thevalidvalues
forthiselementare:
•PRO_SMT_BEND_FORM_
ANGLE—Specifies anangled
typeofbend.
•PRO_SMT_BEND_FORM
_ROLL—Specifies arolled
typeofbend.
PRO_E_SMT_BEND_LINE Compound Thiscompound elementdefines
thebendlineproperties. Formore
information, seethesectionBend
LineElementsonpage1368.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_SMT_BEND_FORM
_ROLL—Specifies arolled
typeofbend.
PRO_E_SMT_BEND_LINE Compound Thiscompound elementdefines
thebendlineproperties. Formore
information, seethesectionBend
LineElementsonpage1368.
PRO_E_SMT_BEND_FIXED
_SIDEPRO_VALUE_TYPE_INT Specifiesthefixedsideofthebend
usingtheenumerated datatype
ProBendSide. Thevalidvalues
forthiselementare:
•PRO_SMT_BEND_SIDE
_ONE—Specifies firstsideas
thefixedside.
•PRO_SMT_BEND_SIDE
_TWO—Specifies thesecond
sideasthefixedside.
PRO_E_SMT_BEND_LOCATION PRO_VALUE_TYPE_INT Specifiesthelocationofthebend
inrelationtothebendline,using
theenumerated datatype
ProBendSide. Thevalidvalues
forthiselementare:
•PRO_SMT_BEND_SIDE
_ONE—Specifies abendupto
thebendline.
•PRO_SMT_BEND_SIDE
_TWO—Specifies abendupto
theothersideofthebendline.
•PRO_SMT_BEND_BOTH
_SIDES—Specifies abend
centeredonbothsidesofthe
bendline.
PRO_E_SMT_BEND_
DIRECTIONPRO_VALUE_TYPE_INT Specifiesthedirectionofthebend
usingtheenumerated datatype
ProBendSide. Thevalidvalues
forthiselementare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcenteredonbothsidesofthe
bendline.
PRO_E_SMT_BEND_
DIRECTIONPRO_VALUE_TYPE_INT Specifiesthedirectionofthebend
usingtheenumerated datatype
ProBendSide. Thevalidvalues
forthiselementare:
•PRO_SMT_BEND_SIDE
_ONE—Specifies thebend
directionnormaltothe
1366 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
selectedsurface.
•PRO_SMT_BEND_SIDE
_TWO—Flips thebend
direction.
PRO_E_SMT_BEND_ANGLE Compound Thiscompound elementandits
sub-elements areavailablewhen
theelement PRO_E_SMT_BEND_
FORMhasitsvalueasPRO_SMT_
BEND_FORM_ANGLE.
Thecompound elementdefinesthe
bendangle.
PRO_E_SMT_BEND_ANGLE_
TYPEPRO_VALUE_TYPE_INT Specifiesthebendangletype
usingtheenumerated datatype
ProBendAngleType. Thevalid
valuesforthiselementare:
•PRO_SMT_BEND_ANGLE_
INTERNAL—Specifies the
resultinginternalbendangle.
•PRO_SMT_BEND_ANGLE_
EXTERNAL—Specifies the
bendangledeflection from
straight.
PRO_E_SMT_BEND_ANGLE_
VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofthebend
angle.
PRO_E_SMT_BEND_TRANSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_SMT_BEND_ANGLE_
EXTERNAL—Specifies the
bendangledeflection from
straight.
PRO_E_SMT_BEND_ANGLE_
VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofthebend
angle.
PRO_E_SMT_BEND_TRANS
_FLIPPRO_VALUE_TYPE_INT Flipsthedirectionwherethebend
cylinderwillbecreatedalongthe
bendtransitionlineusingthe
enumerated datatype
ProBendSide. Thevalidvalues
forthiselementare:
•PRO_SMT_BEND_SIDE
_ONE—Createsthecylinder
alongthefirstlineofthe
transition.
•PRO_SMT_BEND_SIDE
_TWO—Creates thecylinder
alongthesecondlineofthe
transition.
Note
Thetransitionflipelementis
availableonlyifthereisone
transitionsetinthefeature.
PRO_E_SMT_BEND_TRANS_
AREASArray Anarrayelementofbend
transitionlinesthatdefinesthe
bendtransitionarea.
PRO_E_SMT_BEND_TRANS_
SETCompound Thiscompound elementdefines
thebendtransitionlines.
PRO_E_STD_SECTION Compound Thiscompound elementspecifies
asketchedsectionforthebend
line.Formoreinformation onhow
Production Applications: Sheetmetal 1367ElementID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_STD_SECTION Compound Thiscompound elementspecifies
asketchedsectionforthebend
line.Formoreinformation onhow
Production Applications: Sheetmetal 1367ElementID DataType Description
tocreatefeaturesthatcontain
sketchedsections,refertothe
sectionCreatingFeatures
Containing Sectionsonpage989.
PRO_E_SMT_FILLETS Compound Thiscompound elementdefines
thebendproperties ofthesheet
metalwallandthevalueofbend
radius.
PRO_E_SMT_FILLETS_SIDE PRO_VALUE_TYPE_INT Specifiesthefilletside.Thevalid
valuesare:
•PRO_BEND_RAD_
OUTSIDE—Applies thebend
radiustotheoutersurfaceof
thebend.
•PRO_BEND_RAD_INSIDE—
Appliesthebendradiustothe
innersurfaceofthebend.
•PRO_BEND_RAD_
PARAMETER—Applies the
bendradiusatthedimension
locationsetbytheSMT_
DFLT_RADIUS_SIDE
parameter inCreoParametric.
PRO_E_SMT_FILLETS_VALUE PRO_VALUE_TYPE_DOUBLE Specifiesthevalueofthebend
radius.
PRO_E_SMT_BEND_RELIEF Compound Thiscompound elementdefines
thebendreliefattheedges.For
moreinformation seethesection
BendReliefElementsonpage
1372.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxradius.
PRO_E_SMT_BEND_RELIEF Compound Thiscompound elementdefines
thebendreliefattheedges.For
moreinformation seethesection
BendReliefElementsonpage
1372.
PRO_E_SMT_DEV_LEN_
CALCULATIONCompound Thiscompound elementdefines
themethodusedtocalculatethe
Developed Lengthdimensions for
thebends.Formoreinformation
seethesectionTheElement
SubtreeforLengthCalculation on
page1303
BendLineElements
Thiscompound element PRO_E_SMT_BEND_LINE definesthebendline,its
properties andreferences forsheetmetalbends.
1368 Creo®Parametric TOOLKIT User’sGuideTheelementsofPRO_E_SMT_BEND_LINE aredescribedasfollows:
Production Applications: Sheetmetal 1369ElementID DataType Description
PRO_E_SMT_BEND_LINE_
TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofbendusing
theenumerated datatype
ProBendLineType. Thevalid
valuesforthiselementare:
•PRO_SMT_BEND_LINE
_NOT_DEFINED—Specifies
anundefined bendline.
•PRO_SMT_BEND_LINE
_SKETCH Specifiesauser
definedbendline.
•PRO_SMT_BEND_LINE
_CURVE—Specifies alinearxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesforthiselementare:
•PRO_SMT_BEND_LINE
_NOT_DEFINED—Specifies
anundefined bendline.
•PRO_SMT_BEND_LINE
_SKETCH Specifiesauser
definedbendline.
•PRO_SMT_BEND_LINE
_CURVE—Specifies alinear
chaintobeusedasthebend
line.
•PRO_SMT_BEND_LINE_
INTERNAL_LINE—Specifies
thebendlinethatwillbe
createdbasedonthe
compound element PRO_E_
SMT_BEND_LINE
_INTERNAL.
PRO_E_SMT_BEND_REF_
SURFACEPRO_VALUE_TYPE_
SELECTIONThiselementisavailablewhenthe
valueofelement PRO_E_SMT_
BEND_LINE_TYPE isPRO_
SMT_BEND_LINE_INTERNAL_
LINEorPRO_SMT_BEND_
LINE_
SKETCH.
Specifiesthesurfacetobebent.
Thisisthesurfaceonwhichthe
bendlineisset.
PRO_E_STD_SECTION Compound Thiscompound elementandits
sub-elements areavailableonlyif
theelement PRO_E_SMT_BEND_
LINE_TYPE hasitsvalueas
PRO_SMT_BEND_LINE
_SKETCH.
Thecompound elementspecifiesa
sketchedsectionforthebendline.
Formoreinformation onhowto
createfeaturesthatcontain
sketchedsections,refertothe
sectionCreatingFeatures
Containing Sectionsonpage1147.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThecompound elementspecifiesa
sketchedsectionforthebendline.
Formoreinformation onhowto
createfeaturesthatcontain
sketchedsections,refertothe
sectionCreatingFeatures
Containing Sectionsonpage1147.
PRO_E_SMT_BEND_CURVE Compound Thiselementanditssub-elements
areavailablewhentheelement
PRO_E_SMT_BEND_LINE_
TYPEhasitsvalueasPRO_SMT_
BEND_LINE_CURVE.
1370 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Thiscompound elementdefines
thecurvereferences andbend
curveoffsetvalue.
PRO_E_STD_CURVE_
COLLECTION_APPLPRO_VALUE_TYPE_POINTER Specifiesasurfaceedgeoracurve
thatdefinesthebendline.
PRO_E_SMT_BEND_CURVE_
USE_OFFSETPRO_VALUE_TYPE_INT Specifieswhethertooffsetthe
bendcurvefromtheselected
reference. Thevalidvaluesforthis
elementare:
•PRO_B_TRUE
•PRO_B_FALSE
PRO_E_SMT_BEND_CURVE
_OFFSET_VALUEPRO_VALUE_TYPE_DOUBLE Specifiestheoffsetvalueforthe
bendcurve.
PRO_E_SMT_BEND_LINE_
INTERNALCompound Thiselementanditssub-elements
areavailablewhentheelement
PRO_E_SMT_BEND_LINE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx_OFFSET_VALUEPRO_VALUE_TYPE_DOUBLE Specifiestheoffsetvalueforthe
bendcurve.
PRO_E_SMT_BEND_LINE_
INTERNALCompound Thiselementanditssub-elements
areavailablewhentheelement
PRO_E_SMT_BEND_LINE_
TYPEhasitsvalueasPRO_SMT_
BEND_LINE_INTERNAL_LINE.
Thecompound elementdefinesthe
bendlinereferenceends,offsets
andoffsetvalues.
PRO_E_SMT_BEND_LINE_REF
_END1PRO_VALUE_TYPE_
SELECTIONSpecifiesavertexoranedgeas
theplacement referenceforthe
firstendofthebendline.
PRO_E_SMT_BEND_LINE_REF
_END2PRO_VALUE_TYPE_
SELECTIONSpecifiesavertexoranedgeas
theplacement referenceforthe
secondendofthebendline.
PRO_E_SMT_BEND_LINE_REF
_OFFSET1PRO_VALUE_TYPE_
SELECTIONThiselementisavailablewhen
youchooseanedgereferencein
theelement PRO_E_SMT_BEND_
LINE_
REF_END1.
Specifiesanedgeastheoffset
referenceforthefirstendofthe
bendline.
PRO_E_SMT_BEND_LINE_REF
_OFFSET2PRO_VALUE_TYPE_
SELECTIONThiselementisavailablewhen
youchooseanedgereferencein
theelement PRO_E_SMT_BEND_
LINE_
REF_END2.
Specifiesanedgeastheoffsetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbendline.
PRO_E_SMT_BEND_LINE_REF
_OFFSET2PRO_VALUE_TYPE_
SELECTIONThiselementisavailablewhen
youchooseanedgereferencein
theelement PRO_E_SMT_BEND_
LINE_
REF_END2.
Specifiesanedgeastheoffset
referenceforthesecondendofthe
bendline.
Production Applications: Sheetmetal 1371ElementID DataType Description
PRO_E_SMT_BEND_LINE_REF
_OFFSET1_VALUEPRO_VALUE_TYPE_DOUBLE Thiselementisavailablewhen
youchooseanedgereferencein
theelement PRO_E_SMT_BEND_
LINE
_REF_END1.
Specifiestheoffsetvaluefromthe
firstendofthebendline.
PRO_E_SMT_BEND_LINE_REF
_OFFSET2_VALUEPRO_VALUE_TYPE_DOUBLE Thiselementisavailablewhen
youchooseanedgereferencein
theelement PRO_E_SMT_BEND_
LINE
_REF_END2.
Specifiestheoffsetvaluefromthe
secondendofthebendline.
BendReliefElements
Thecompound element PRO_E_SMT_BEND_RELIEF definesthebendrelief
elements.Thereliefcanbespecifieddifferentlyoneachsideofthebend.
ThetwomainelementsofPRO_E_SMT_BEND_RELIEF are:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBendReliefElements
Thecompound element PRO_E_SMT_BEND_RELIEF definesthebendrelief
elements.Thereliefcanbespecifieddifferentlyoneachsideofthebend.
ThetwomainelementsofPRO_E_SMT_BEND_RELIEF are:
1372 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SMT_BEND_RELIEF_SIDE1—This compound elementspecifies
thebendreliefappliedtothefirstsideoftheendofthebend.
•PRO_E_SMT_BEND_RELIEF_SIDE2—This compound elementspecifies
thebendreliefappliedtothesecondsideoftheendofthebend.
Thefollowingelementsarecommontotheboththecompound elements:
ElementID DataType Description
PRO_E_BEND_RELIEF_TYPE PRO_VALUE_TYPE_INT Specifiestherelieftypeusingthe
enumerated datatype
ProBendRlfType. Thevalid
valuesforthiselementare:
•PRO_BEND_RLF_NONE—
Specifiesnorelief.
•PRO_BEND_RLF_RIP—
Specifiesrippingofthe
material.
•PRO_BEND_RLF_
STRETCH— Specifies
stretching ofthematerialfor
bendrelief.
•PRO_BEND_RLF_
RECTANGULAR— Specifies
addingarectangular relief.
•PRO_BEND_RLF_
OBROUND— Specifiesadding
anobroundrelief.
•PRO_BEND_RLF_PARAM—xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstretching ofthematerialfor
bendrelief.
•PRO_BEND_RLF_
RECTANGULAR— Specifies
addingarectangular relief.
•PRO_BEND_RLF_
OBROUND— Specifiesadding
anobroundrelief.
•PRO_BEND_RLF_PARAM—
Specifiesrelieftypesetbythe
partparameter SMT_DFLT_
BEND_REL_TYPE.
PRO_E_BEND_RELIEF_WIDTH PRO_VALUE_TYPE_DOUBLE Specifiesthereliefwidthandis
applicable onlyifthevalueof
PRO_E_BEND_RELIEF_TYPE
isPRO_BEND_RLF_
RECTANGULAR, PRO_BEND_
RLF_STRETCH orPRO_BEND_
RLF_OBROUND.
PRO_E_BEND_RELIEF_
DEPTH_TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofdepthrelief.
Thevalidvaluesforthiselement
aredefinedintheenumerated type
ProBendRlfDepthType and
areasfollows:
•PRO_BEND_RLF_DEPTH_
NOT_USED— Specifiesthat
thedepthforthereliefisnot
used.
•PRO_BEND_RLF_DEPTH_
BLIND— Createsarelief
throughthegeometryasper
thespecifiedvalue.
•PRO_BEND_RLF_DEPTH_
Production Applications: Sheetmetal 1373ElementID DataType Description
UP_TO_BEND— Createsa
1374 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
reliefuptothebend.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: Sheetmetal 1373ElementID DataType Description
UP_TO_BEND— Createsa
1374 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
reliefuptothebend.
•PRO_BEND_RLF_DEPTH_
TAN_TO_BEND— Createsa
relieftangential tothebend.
PRO_BEND_RLF_DEPTH_
TAN_TO_BEND isapplicable
onlywhenrelieftypeissetto
PRO_BEND_RLF _OBROUND.
•PRO_BEND_RLF_DEPTH_
TYPE_PARAM— Specifiesthe
depthtypeofthereliefatthe
dimension locationandisset
bypartparameter SMT_
DFLT_BEND_REL_DEPTH_
TYPE.
Thiselementdecidesthevisibility
ofthebendreliefdepthelement
PRO_E_BEND_RELIEF_DEPTH.
IfPRO_E_BEND_RELIEF_
DEPTH_TYPE issettoPRO_
BEND_RLF_DEPTH_BLIND or
PRO_BEND_RLF_DEPTH_
TYPE_PARAM andthepart
parameter SMT_DFLT_BEND_
REL_DEPTH
_TYPEissettoBlind,thenthe
existingelement PRO_E_BEND_
RELIEF_DEPTH isused.
PTCrecommends thatyoudefine
theelement PRO_E_BEND_
RELIEF_DEPTH_TYPE
explicitlyforallCreoParametric
TOOLKITapplications. Ifthe
element PRO_E_BEND_
RELIEF_DEPTH_TYPE isnot
defined,thedefaultvalueisused.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheelement PRO_E_BEND_
RELIEF_DEPTH_TYPE
explicitlyforallCreoParametric
TOOLKITapplications. Ifthe
element PRO_E_BEND_
RELIEF_DEPTH_TYPE isnot
defined,thedefaultvalueisused.
ThedefaultvaluefromCreo
Parametric 1.0onwards,depends
onthepartparameter SMT_
DFLT_BEND_REL_DEPTH
_TYPEandtheconfiguration
option SMT_DRIVE_TOOLS_
BY_PARAMETERS.
Ifthevalueoftheconfiguration
option SMT_DRIVE_TOOLS_
BY_PARAMETERS issettoNo,
Production Applications: Sheetmetal 1375ElementID DataType Description
thenthedefaultvalueisthelast
bendrelieftype,asselectedin
CreoParametric duringthe
creationofthenewfeature.For
thePro/TOOLKITapplications
priortoCreoParametric 1.0,ifthe
defaultvalueisnotBlind,thenthe
element PRO_E_BEND_
RELIEF_DEPTH_TYPE isnot
used.Forsuchcases,setthePRO_
E_BEND_RELIEF_DEPTH_
TYPEtoPRO_BEND_RLF_
DEPTH_BLIND.
PRO_E_BEND_RELIEF_DEPTH PRO_VALUE_TYPE_DOUBLE Specifiesthereliefdepthandis
applicable onlyifthevalueof
PRO_E_BEND_RELIEF_TYPE
isPRO_BEND_RLF_
RECTANGULAR orPRO_BEND_
RLF_OBROUND.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDEPTH_BLIND.
PRO_E_BEND_RELIEF_DEPTH PRO_VALUE_TYPE_DOUBLE Specifiesthereliefdepthandis
applicable onlyifthevalueof
PRO_E_BEND_RELIEF_TYPE
isPRO_BEND_RLF_
RECTANGULAR orPRO_BEND_
RLF_OBROUND.
PRO_E_BEND_RELIEF_ANGLE PRO_VALUE_TYPE_DOUBLE Specifiesthereliefangleandis
applicable onlyifthevalueof
PRO_E_BEND_RELIEF_TYPE
isPRO_BEND_RLF_STRETCH.
EditingBendReliefs
TheEditBendRelieffeatureenablesyoutoeditbendreliefsinexistingbends.
TheelementtreefortheEditBendRelieffeatureisdocumented intheheaderfile
ProSmtEditBendRelief.h andisshowninthefollowingfigure:
1376 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforEditBendReliefFeature
Theelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoffeature.Thevalueofthis
featuremustbePRO_FEAT_
EDIT_BEND_RELIEF.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesthe
nameofthefeature.Thedefault
valueisEDIT_BEND_RELIEF_
1.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturemustbePRO_FEAT_
EDIT_BEND_RELIEF.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesthe
nameofthefeature.Thedefault
valueisEDIT_BEND_RELIEF_
1.
PPRO_E_EDIT_BEND_RELIEF Compound Mandatory element.This
compound elementdefinesthe
optionsandsetsthevaluesfor
editingabendrelief.
PRO_E_EDIT_BEND_RELIEF_
SEL_MODEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
modeforselectingbendreliefs.
Thevalidvaluesare:
•PRO_SMT_RECOGNITION_
MANUAL_SEL—Specifies
manualselectionofbend
reliefstoedit.
•PRO_SMT_RECOGNITION_
AUTO_SEL—Specifies
automatic selectionofbend
Production Applications: Sheetmetal 1377ElementID DataType Description
reliefstoedit.
PRO_E_EDIT_BEND_RELIEF_
GEOMSMulti Collector Thiselementismandatory when
theselectionmodeissettoPRO_
SMT_RECOGNITION_MANUAL_
SEL.Specifiestheselectionof
geometryforbendreliefs.
Youcanselectvalidbendrelief
designobjects,geometryof
recognizable bendreliefs,or
surfacesofbendsforwhichbend
reliefscanbeedited.YoucanalsoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSEL.Specifiestheselectionof
geometryforbendreliefs.
Youcanselectvalidbendrelief
designobjects,geometryof
recognizable bendreliefs,or
surfacesofbendsforwhichbend
reliefscanbeedited.Youcanalso
selectplaneswithadjacentbends.
Ifanintentsurfaceisselected,all
thesurfaceswhicharenotrelevant
willbeignored.Thickness edges
canbeselectedwhensidesurfaces
cannotbeselected.Bendrelief
verticescanbeselectedwhen
neithersidesurfacesnorthickness
edgescanbeselected.
PRO_E_EDIT_BEND_RELIEF_
SHAPECompound Mandatory element.This
compound elementspecifiesthe
optionsthatdefinetheshapeofa
bendrelief.
PRO_E_BEND_RELIEF_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofbendrelief.Thevalid
valuesare:
•PRO_BEND_RLF_RIP—The
selectedbendreliefsareedited
toripreliefswithno
dimensions.
•PRO_BEND_RLF_
RECTANGULAR—The
selectedbendreliefsareedited
torectangular reliefswith
widthanddepthdimensions.
•PRO_BEND_RLF_
OBROUND—The bendreliefis
editedtoanobroundrelief
withwidthanddepth
dimensions.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRECTANGULAR—The
selectedbendreliefsareedited
torectangular reliefswith
widthanddepthdimensions.
•PRO_BEND_RLF_
OBROUND—The bendreliefis
editedtoanobroundrelief
withwidthanddepth
dimensions.
PRO_E_BEND_RELIEF_WIDTH PRO_VALUE_TYPE_DOUBLE Thiselementismandatory when
theelement PRO_E_BEND_
RELIEF_TYPE issettoPRO_
BEND_RLF_RECTANGULAR or
PRO_BEND_RLF_OBROUND.
Specifiesthevalueforwidthina
bendrelief.
PRO_E_BEND_RELIEF_ PRO_VALUE_TYPE_INT Thiselementismandatory when
1378 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
DEPTH_TYPE theelement PRO_E_BEND_
RELIEF_TYPE issettoPRO_
BEND_RLF_RECTANGULAR or
PRO_BEND_RLF_OBROUND.
Specifiesthetypeofdepthfor
bendrelief.Thevalidvaluesare:
•PRO_BEND_RLF_DEPTH_
BLIND—Creates arelief
throughthegeometryasper
thespecifiedvalue.
•PRO_BEND_RLF_DEPTH_
UP_TO_BEND— Createsa
reliefuptothebend.
•PRO_BEND_RLF_DEPTH_
TAN_TO_BEND—This depth
typeisapplicable onlyfor
bendrelieftypePRO_BEND_
RLF_OBROUND. Createsa
relieftangential tothebend.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUP_TO_BEND— Createsa
reliefuptothebend.
•PRO_BEND_RLF_DEPTH_
TAN_TO_BEND—This depth
typeisapplicable onlyfor
bendrelieftypePRO_BEND_
RLF_OBROUND. Createsa
relieftangential tothebend.
PRO_E_BEND_RELIEF_DEPTH PRO_VALUE_TYPE_DOUBLE Thiselementismandatory when
theelement PRO_E_BEND_
RELIEF_DEPTH_TYPE issetto
PRO_BEND_RLF_DEPTH_
BLIND.
Specifiesthevaluefordepthina
bendrelief.Thedepthismeasured
fromtheedgeofthebend.
PRO_E_EDIT_BEND_RELIEF_
TABLEArray Thiselementalongwithitschild
elementsisreservedforinternal
use.
EdgeBendFeature
TheEdgeBendfeatureallowsyoutoroundsharpedgesofasheetmetal.
TheelementtreefortheEdgeBendfeatureisdocumented intheheaderfile
ProSmtEdgeBend.h andisshowninthefollowingfigure:
Production Applications: Sheetmetal 1379FeatureElementTreeforEdgeBendFeature
Theelementsinthistreearedescribedasfollows:
1380 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.The
valueofthisfeaturemustbePRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1380 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.The
valueofthisfeaturemustbePRO_
FEAT_EDGE_BEND.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisEdge_
Bend_1.
PRO_E_SMT_EDGE_BEND_
ARRAYArray Anarrayelementofsingleor
multipleEdgeBendsets.
PRO_E_SMT_EDGE_BEND_SET Compound Thiscompound elementcontainsa
singleedgebendset.
PRO_E_SMT_EDGE_BEND_
REFERENCESArray Anarrayelementofsurfaceedges,
thatformanedgebendset.
PRO_E_SMT_EDGE_
REFERENCESCompound Thiscompound elementdefines
thecollection ofsurfaceedgeora
curve.
PRO_E_STD_CURVE_
COLLECTION_APPLPRO_VALUE_TYPE_POINTER Specifiesthesharpedgestobe
rounded.
PRO_E_SMT_FILLET_SELECT Compound Thiscompound elementdefines
thebendproperties andthevalue
ofthebendradius.
PRO_E_SMT_FILLET_
RADIUS_SIDEPRO_VALUE_TYPE_INT Specifiesthefilletsideusingthe
enumerated datatype
ProSmdRadType. Thevalid
valuesforthiselementareas
follows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthebendradius.
PRO_E_SMT_FILLET_
RADIUS_SIDEPRO_VALUE_TYPE_INT Specifiesthefilletsideusingthe
enumerated datatype
ProSmdRadType. Thevalid
valuesforthiselementareas
follows:
•PRO_BEND_RAD_
OUTSIDE—Applies thebend
radiustotheoutersurfaceof
thebend.
•PRO_BEND_RAD_INSIDE—
Appliesthebendradiustothe
innersurfaceofthebend.
•PRO_BEND_RAD_
PARAMETER—Applies the
bendradiusatthedimension
locationsetbytheSMT_
DFLT_RADIUS_SIDE
parameter inCreoParametric.
PRO_E_SMT_FILLET_
RADIUS_VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofthebend
radius.
Production Applications: Sheetmetal 1381ElementID DataType Description
PRO_E_SMT_BEND_RELIEF Compound Thiscompound elementdefines
thebendreliefattheedges.Refer
tothesectionBendRelief
Elementsonpage1372formore
information.
PRO_E_SMT_DEV_LEN_
CALCULATIONCompound Thiscompound elementdefines
themethodusedtocalculatethe
Developed Lengthdimensions for
bends.Formoreinformation see
thesectionTheElementSubtree
forLengthCalculation onpage
1303.
UnbendFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthemethodusedtocalculatethe
Developed Lengthdimensions for
bends.Formoreinformation see
thesectionTheElementSubtree
forLengthCalculation onpage
1303.
UnbendFeature
Theunbendfeatureallowsyoutounbendoneormorecylinderbasedcurvature
surfacessuchasbendsorcurvedwallsinasheetmetalpart.
TheelementtreefortheUnbendfeatureisdocumented intheheaderfile
ProRegularUnbend.h andisshowninthefollowingfigure:
1382 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforUnbendFeature
Theelementsinthistreearedescribedasfollows:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.The
valueofthisfeaturemustbePRO_
FEAT_UNBEND.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisUnbend_1.
PRO_E_SMT_UNBEND_TYPE PRO_VALUE_TYPE_INT Createsaregularunbendfeature
usingtheenumerated datatype
ProSmtUnbendType. This
Production Applications: Sheetmetal 1383ElementID DataType Description
elementtakesthevalidvalue
PRO_SMT_REGULAR_UNBEND.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusingtheenumerated datatype
ProSmtUnbendType. This
Production Applications: Sheetmetal 1383ElementID DataType Description
elementtakesthevalidvalue
PRO_SMT_REGULAR_UNBEND.
PRO_E_SMT_UNBEND_SUB_
TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofunbend
executionusingtheenumerated
datatypeProUnbendSubType
whichhasthefollowingvalues:
•PRO_UNBEND_ALL—
Specifiesthatallthecurved
surfacesandedgesmustbe
automatically selectedfor
unbend.
•PRO_UNBEND_SELECTED—
Specifiesthatthecurved
surfacesandedgesmustbe
manuallyselectedforunbend.
PRO_E_SMT_PRIMARY_
FIXED_GEOMCompound Thiscompound elementdefinesa
surfaceoranedgethatremains
fixedduringtheunbending.
PRO_E_SMT_FIXED_REF PRO_VALUE_TYPE_
SELECTIONSpecifiesasurfaceoredgethat
remainsfixedduringunbending.
PRO_E_SMT_FIXED_REF
_SIDEPRO_VALUE_TYPE_INT Thiselementisapplicable onlyifa
sharpedgeisselectedasthefixed
referenceintheelement PRO_E_
SMT_FIXED_REF.
Flipstheedgeandoneofthe
surfacestheedgeliesinbetween,
toremainfixedduringunbending,
usingtheenumerated datatypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsharpedgeisselectedasthefixed
referenceintheelement PRO_E_
SMT_FIXED_REF.
Flipstheedgeandoneofthe
surfacestheedgeliesinbetween,
toremainfixedduringunbending,
usingtheenumerated datatype
ProSmtFixedRefSide. The
validvaluesforthiselementare:
•PRO_SMT_FIXED_SIDE_
ONE—First sidefromtheedge
willbefixed.
•PRO_SMT_FIXED_SIDE_
TWO—Second sidefromthe
edgewillbefixed.
PRO_E_SMT_UNBEND_REF_
ARRArray Anarrayelementdefiningthelist
ofedgestounbend.
PRO_E_SMT_UNBEND_REF Compound Thiscompound elementdefines
collection ofgeometrytobe
unbent.
PRO_E_SMT_UNBEND_
SINGLE_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesedgeorsurfaceorintent
surfaceorintentchaintounbend.
PRO_E_SMT_DEFORM_
SURFACESCompound Thiscompound elementdefines
thedeformation surfaces.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_POINTER Collectsthesurfacestobeusedas
deformation areas.
PRO_E_SMT_ADD_CORNER_
RELIEFS_OPTSCompound Thiscompound elementdefines
thereliefparameters.
1384 Creo®Parametric TOOLKIT User’sGuideElementID DataType Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdeformation areas.
PRO_E_SMT_ADD_CORNER_
RELIEFS_OPTSCompound Thiscompound elementdefines
thereliefparameters.
1384 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SMT_ADD_CORNER_
RELIEFSPRO_VALUE_TYPE_BOOLEAN Specifiesifthereliefgeometry
mustbecreated.Thevalidvalues
forthiselementare:
•PRO_B_TRUE
•PRO_B_FALSE
PRO_E_SMT_ADD_CORNER_
RELIEFS_TYPEPRO_VALUE_TYPE_INT Specifiesthecornerreliefsettings
usingtheenumerated datatype
ProSmtAddCornRelType.
Thevalidvaluesforthiselement
are:
•PRO_SMT_ADD_CORN_REL
_UNDEF—Specifies thatthe
cornerreliefparameter is
undefined.
•PRO_SMT_ADD_CORN_REL
_BY_FLAT_PAT—Creates
thecornerreliefgeometryon
themodel.
•PRO_SMT_ADD_CORN_REL
_BY_PARAMS—Does not
createsthecornerrelief
geometryonthemodel.
PRO_E_SMT_FLATTEN_FORM_
WALLSPRO_VALUE_TYPE_BOOLEAN Specifiesifthewallsadjustedto
formgeometrymustbeunbent.
Whenformsarealsoflattened,
geometryisfirstunbent.Thevalid
valuesare:
•PRO_B_TRUE
•PRO_B_FALSE
Note
Youcanspecifythevalueforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxformgeometrymustbeunbent.
Whenformsarealsoflattened,
geometryisfirstunbent.Thevalid
valuesare:
•PRO_B_TRUE
•PRO_B_FALSE
Note
Youcanspecifythevaluefor
thiselementonlyifthe
enumerated datatype
ProUnbendSubTypeis set
tothevalue PRO_UNBEND_
ALL.
PRO_E_SMT_FLATTEN_ALL_
FORMSPRO_VALUE_TYPE_BOOLEAN Specifiesifalltheformsinthe
modelmustbeflattened.Thevalid
valuesare:
•PRO_B_TRUE
Production Applications: Sheetmetal 1385ElementID DataType Description
•PRO_B_FALSE
Note
Youcanspecifythevaluefor
thiselementonlyifthe
enumerated datatype
ProSmtUnbendTypeis set
tothevalue PRO_SMT_
FLAT_PATTERN.
PRO_E_SMT_FLATTEN_PROJ_
CUTSPRO_VALUE_TYPE_BOOLEAN Specifiesifcutsmustbeprojected
totheflattenedform.
PRO_E_SMT_MERGE_SAME_
SIDESPRO_VALUE_TYPE_BOOLEAN Specifiesifthesidesurfaces
locatedinthesamelocationmust
bekept.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE
•PRO_B_FALSE
Note
Youcanspecifythevaluefor
thiselementonlyifthe
enumerated datatype
ProSmtUnbendTypeis set
tothevalue PRO_SMT_
FLAT_PATTERN.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbekept.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE
•PRO_B_FALSE
Note
Youcanspecifythevaluefor
thiselementonlyifthe
enumerated datatype
ProSmtUnbendTypeis set
tothevalue PRO_SMT_
FLAT_PATTERN.
FlatPatternFeature
TheFlatPatternfeaturecreatesaflattenedversionofasheetmetalpart.
ThisfeatureusesthesameelementtreeastheUnbendfeaturedocumented inthe
headerfileProRegularUnbend.h. Itsharesmostoftheelementswiththe
Unbendfeaturetree.ThefollowingelementsarespecifictoFlatPatternfeature:
•PRO_E_FEATURE_TYPE—Specifies thetypeoffeature.Thevalueofthis
featuremustbePRO_FEAT_FLAT_PAT.
•PRO_E_SMT_UNBEND_TYPE—Creates aflattenedsheetmetalpartusingthe
enumerated datatypeProSmtUnbendType. Thiselementtakesthevalid
value PRO_SMT_FLAT_PATTERN.
•PRO_E_SMT_FLATTEN_ALL_FORMS—Specifies ifalltheformsinthe
modelmustbeflattened.Thevalidvaluesare:
○PRO_B_TRUE
○PRO_B_FALSE
1386 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SMT_MERGE_SAME_SIDES—Specifies ifthesidesurfaceslocatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelmustbeflattened.Thevalidvaluesare:
○PRO_B_TRUE
○PRO_B_FALSE
1386 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SMT_MERGE_SAME_SIDES—Specifies ifthesidesurfaceslocated
inthesamelocationmustbekept.Thevalidvaluesforthiselementare:
○PRO_B_TRUE
○PRO_B_FALSE
BendBackFeature
Thebendbackfeatureallowsyoutoreturntheunbentwallstotheirformedbent
positionsinasheetmetalpart.
Theelementtreeforthebendbackfeatureisdocumented intheheaderfile
ProSmtBendBack.h andisshowninthefollowingfigure:
ElementTreeforBendBackFeature
Production Applications: Sheetmetal 1387ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeoffeature.The
valueofthisfeaturemustbePRO_
FEAT_BEND_BACK.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
ThedefaultvalueisBend_
Back_1.
PRO_E_SMT_BEND_BACK_
SUB_TYPEPRO_VALUE_TYPE_INT Specifiesifallorselected
geometrymustbebent.The
enumerated datatype
ProBendBackSubType
containsthevalidvaluesforthis
elementandareasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBack_1.
PRO_E_SMT_BEND_BACK_
SUB_TYPEPRO_VALUE_TYPE_INT Specifiesifallorselected
geometrymustbebent.The
enumerated datatype
ProBendBackSubType
containsthevalidvaluesforthis
elementandareasfollows:
•PRO_BEND_BACK_ALL
—Specifiesthatallunbent
geometrymustbebentback.
•PRO_BEND_BACK_
SELECTED— Specifiesthat
onlythespecifiedgeometry
mustbebentback.
PRO_E_SMT_PRIMARY_
FIXED_GEOMCompound Thiscompound elementdefines
thefixedgeometryduringthe
bendbackoperation.
PRO_E_SMT_FIXED_REF PRO_VALUE_TYPE_
SELECTIONSpecifiesasurfaceoredgethat
remainsfixedduringthebend
backoperation.
PRO_E_SMT_FIXED_REF_
SIDEPRO_VALUE_TYPE_INT Specifiestheflipoptionforthe
sideoftheedgethatwillremain
fixedduringthebendback
operation. Thevalidvaluesforthis
elementaredefinedinthe
enumerated datatype
ProSmtFixedRefSideand are
asfollows:
•PRO_SMT_FIXED_SIDE
_ONE—First edgesideofthe
selectedfixedgeometrywillbe
fixed.
•PRO_SMT_FIXED_SIDE
_TWO—Second edgeside
normaltotheselectedfixed
geometrywillbefixed.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasfollows:
•PRO_SMT_FIXED_SIDE
_ONE—First edgesideofthe
selectedfixedgeometrywillbe
fixed.
•PRO_SMT_FIXED_SIDE
_TWO—Second edgeside
normaltotheselectedfixed
geometrywillbefixed.
PRO_E_SMT_BBACK_REF_ARR Array Anarrayelementofedgesor
surfacestobebentback.
PRO_E_SMT_BBACK_REF Compound Thiscompound elementdefines
collection ofedgesorsurfacesto
bebentback.
PRO_E_SMT_BBACK_SINGLE_
REFPRO_VALUE_TYPE_
SELECTIONSpecifiescollection ofedges,
surfaces,intentsurfacesand
chainstobebentback.
PRO_E_SMT_BBACK_FLAT_
CONTOURS_ARRArray Anarrayelementthatspecifies
whichcontoursthatpartially
intersectabendlineshallremain
1388 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
flatduringthebendback
operation.
PRO_E_SMT_GEOM_CONTOUR Compound Thiscompound elementspecifies
thecollection ofcontourgeometry
toremainflatduringthebendback
operation.
PRO_E_SMT_GEOM_CONTOUR_
GEOMPRO_VALUE_TYPE_
SELECTIONSpecifiesthedrivenoroffsetsheet
metalsurfaceorsurfacesfromthe
element PRO_E_SMT_BBACK_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoremainflatduringthebendback
operation.
PRO_E_SMT_GEOM_CONTOUR_
GEOMPRO_VALUE_TYPE_
SELECTIONSpecifiesthedrivenoroffsetsheet
metalsurfaceorsurfacesfromthe
element PRO_E_SMT_BBACK_
SINGLE_REF thatformcontours.
PRO_E_SMT_GEOM_CONTOUR_
EDGEPRO_VALUE_TYPE_
SELECTIONSpecifiesedgesfromtheelement
PRO_E_SMT_GEOM_CONTOUR_
GEOMthatformcontours.
SketchFormFeature
Thesketchformfeaturehelpsyoutocreateapunchorapiercingusingasketch.
Youcanalsoselectanexistingsketchordefineaninternalone.Thissketchbased
formtoolenablesyoutospecifythepunchandthepiercingdepth.
Theelementtreeforthesketchformfeatureisdocumented intheheaderfile
ProSmtSketchForm.h andisshowninthefollowingfigure:
Production Applications: Sheetmetal 1389ElementTreeforSketchFormFeature
ThefollowingtabledescribestheelementsintheelementtreefortheSketchForm
feature.
1390 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvaluexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature.
1390 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
SMT_SKETCH_FORM.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameforthesheet
metalsequence.Thedefaultvalue
isSketched_Form_1.
PRO_E_STD_SECTION Compound Mandatory element.
PRO_E_SKETCH_FORM_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthesketched
formfeature.Thevalidvaluesfor
thiselementaredefinedinthe
enumerated type
ProSketchFormType:
•PRO_SMT_SKETCH_FORM
_TYPE_PUNCH— Specifythe
value 1ifyouwanttoselect
punchasyourformtype.
•PRO_SMT_SKETCH_FORM
_TYPE_PIERCING—
Specifythevalue 2ifyou
wanttoselectpiercingasyour
formtype.
PRO_E_SKETCH_FORM_
DEPTH_PUNCHPRO_VALUE_TYPE_DOUBLE Definesthedepthofthe
penetration ofthepunching
operation.
Note
Specifyavalueforthis
elementonlyiftheelement
PRO_E_SKETCH_FORM_
TYPEissettoPRO_SMT_
SKETCH_FORM_
TYPE_PUNCH.
PRO_E_SKETCH_FORM_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpenetration ofthepunching
operation.
Note
Specifyavalueforthis
elementonlyiftheelement
PRO_E_SKETCH_FORM_
TYPEissettoPRO_SMT_
SKETCH_FORM_
TYPE_PUNCH.
PRO_E_SKETCH_FORM_
DEPTH_PIERCINGPRO_VALUE_TYPE_DOUBLE Definesthedepthofthe
penetration ofthepiercing
operation.
Note
Specifyavalueforthis
elementonlyiftheelement
PRO_E_SKETCH_FORM_
TYPEissettoPRO_SMT_
SKETCH_FORM_
TYPE_PIERCING.
PRO_E_SKETCH_FORM_DIR PRO_VALUE_TYPE_INT Thiselementchangesthedirection
oftheform.Thevalidvaluesfor
thiselementare:
•PRO_B_TRUE— Specifies
Production Applications: Sheetmetal 1391ElementID DataType Description
thatthedirectionoftheformis
changed.
•PRO_B_FALSE— Specifies
thatthedirectionoftheformis
notchanged.
PRO_E_EXT_COMP_DRFT_ANG Compound Thiscompound elementdefines
theparameters forthetaperangle.
Note
Usethiselementonlyifthe
element PRO_E_SKETCH_
FORM_TYPE issettoPRO_
SMT_SKETCH_FORM_
TYPE_PUNCH.
PRO_E_EXT_DRFT_ANG PRO_VALUE_TYPE_INT Specifiestheadditionofataperto
thesketchformfeature.ThevalidxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Usethiselementonlyifthe
element PRO_E_SKETCH_
FORM_TYPE issettoPRO_
SMT_SKETCH_FORM_
TYPE_PUNCH.
PRO_E_EXT_DRFT_ANG PRO_VALUE_TYPE_INT Specifiestheadditionofataperto
thesketchformfeature.Thevalid
valuesforthiselementaredefined
intheenumerated type
ProExtDrftAng andareas
follows:
•PRO_EXT_DRFT_ANG
_NO_DRAFT— Specifiesthat
thefeaturehasnodraftangle
ortaper.
•PRO_EXT_DRFT_ANG
_DRAFT— Specifiesthatthe
featurehasadraftangleor
taper.
Note
Usethiselementonlyifthe
element PRO_E_SKETCH_
FORM_TYPE issettoPRO_
SMT_SKETCH_FORM
_TYPE_PUNCH.
PRO_E_EXT_DRFT_ANG_VAL PRO_VALUE_TYPE_DOUBLE Specifiesthetaperingofthe
geometrybythespecifiedvalue.
Note
Usethiselementonlyifthe
element PRO_E_SKETCH_
FORM_TYPE issettoPRO_
SMT_SKETCH_FORM_
TYPE_PUNCH.
PRO_E_SRF_END_
ATTRIBUTESPRO_VALUE_TYPE_INT Thiselementcapsthesketchplane
andoffsetsurfaceoftheform
feature.Thevalidvaluesforthis
1392 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
elementaredefinedinthe
enumerated typexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandoffsetsurfaceoftheform
feature.Thevalidvaluesforthis
1392 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
elementaredefinedinthe
enumerated type
ProExtSurfEndAttr andare
asfollows:
•PRO_EXT_SURF_END
_ATTR_OPEN— Specifies
thatthesketchplaneandthe
offsetsurfacewillnotbe
capped.
•PRO_EXT_SURF_END
_ATTR_CAPPED— Thisis
thedefaultvalue.Specifies
thatthesketchplaneandthe
offsetsurfacewillbecapped.
Note
Usethiselementonlyifthe
element PRO_E_SKETCH_
FORM_TYPE issettoPRO_
SMT_SKETCH_FORM
_TYPE_PUNCH.
PRO_E_FORM_PUNCH_
MATERIAL_SIDEPRO_VALUE_TYPE_INT Thiselementflipsthematerial
deformation directionforthe
punchingoperation. Thevalid
valuesforthiselementaredefined
intheenumerated type
ProSmdPunchMatSide, and
areasfollows:
•PRO_SMT_PUNCH_MAT_
OUTSIDE— Specifiesthatthe
punchingoperationtakesplace
ontheouterside.
•PRO_SMT_PUNCH_MAT_
INSIDE— Specifiesthatthe
punchingoperationtakesplace
ontheinnerside.
Note
Usethiselementonlyifthe
element PRO_E_SKETCH_
FORM_TYPE issettoPRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxontheouterside.
•PRO_SMT_PUNCH_MAT_
INSIDE— Specifiesthatthe
punchingoperationtakesplace
ontheinnerside.
Note
Usethiselementonlyifthe
element PRO_E_SKETCH_
FORM_TYPE issettoPRO_
SMT_SKETCH_FORM_
TYPE_PUNCH.
PRO_E_SMT_FILLET_
INTERSECTCompound Thiscompound elementspecifies
anoptiontoroundtheplacement
sharpedgesthatlieonthe
placement references andare
createdbytheintersection ofthe
sheetmetalgeometrywiththe
Production Applications: Sheetmetal 1393ElementID DataType Description
quilt.Formoreinformation onthe
elementsrelatedtoPRO_E_SMT_
FILLET_INTERSECT, referto
thesectionSubElementsofPRO_
E_SMT_FILLET_INTERSECT
andPRO_E_SMT_FILLET_
QUILTonpage1394.
PRO_E_SMT_FILLET_QUILT PRO_VALUE_TYPE_INT Thiscompound elementspecifies
theoptiontoroundthenon
placement sharpedgesthatdonot
lieontheplacement references
andarecreatedbythedeformation
ofthesheetmetalgeometrybased
onthequilt.Formoreinformation
ontheelementsrelatedtoPRO_
E_SMT_FILLET_QUILT, refer
tothesectionSubElementsof
PRO_E_SMT_FILLET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandarecreatedbythedeformation
ofthesheetmetalgeometrybased
onthequilt.Formoreinformation
ontheelementsrelatedtoPRO_
E_SMT_FILLET_QUILT, refer
tothesectionSubElementsof
PRO_E_SMT_FILLET_
INTERSECT andPRO_E_SMT_
FILLET_QUIL Tonpage1394.
PRO_E_SMT_TRIM_FORM_
SIDESPRO_VALUE_TYPE_INT Trimedgesofshearedform.
SpecifiesifCreoParametric
appliestrimmingofsheetmetal
sidesurfacesduringformfeature
generation. Thevalidvaluesfor
thiselementfollow:
•PRO_B_TRUE
•PRO_B_FALSE
SubElementsofPRO_E_SMT_FILLET_INTERSECT
andPRO_E_SMT_FILLET_QUIL T
Thefollowingtablelistsalltheelementsthatarecommontothecompound
elements PRO_E_SMT_FILLET_INTERSECT andPRO_E_SMT_FILLET_
QUILT.
1394 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SMT_FILLET_
RADIUS_USEFLAGPRO_VALUE_TYPE_INT Specifieswhetherafilletradiusis
used.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE— Specifies
thatafilletisused.
•PRO_B_FALSE— Specifies
thatthefilletisnotused.
PRO_E_SMT_FILLET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxused.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE— Specifies
thatafilletisused.
•PRO_B_FALSE— Specifies
thatthefilletisnotused.
PRO_E_SMT_FILLET_
RADIUS_SIDEPRO_VALUE_TYPE_INT Specifiestheradiusdirection.The
valuesforthiselementare
specifiedintheenumerated type
ProSmdRadType, areas
follows:
•PRO_BEND_RAD
_OUTSIDE— Specifiesthat
theradiusisappliedtothe
outsideofthesheetmetal
geometry.
•PRO_BEND_RAD
_INSIDE— Specifiesthatthe
radiusisappliedtotheinside
ofthesheetmetalgeometry.
Note
Usethiselementonlyifthe
element PRO_E_SKETCH_
FORM_TYPE issettoPRO_
SMT_SKETCH_FORM
_TYPE_PUNCH.
PRO_E_SMT_FILLET_
RADIUS_VALUEPRO_VALUE_TYPE_DOUBLE Specifiestheradiusvalue.
JoinFeature
TheJoinfeaturehelpsyoutoconnecttwointersecting wallsinasheetmetalpart.
Youcantrimthenonintersecting portionsofthewallsaswellasaddabendand
bendreliefattheintersection. Youcanalsocontrolthelocationoftheintersection
inwhichthefeaturewouldbecreated.
TheelementtreefortheJoinfeatureisdocumented intheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbendreliefattheintersection. Youcanalsocontrolthelocationoftheintersection
inwhichthefeaturewouldbecreated.
TheelementtreefortheJoinfeatureisdocumented intheheaderfile
ProSmtJoinWalls.h andisshowninthefollowingfigure:
Production Applications: Sheetmetal 1395ElementTreeforJoinFeature
ThefollowingtabledescribestheelementsintheelementtreefortheJoinfeature.
1396 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthesheet
metalfeature.Thevalidvaluefor
thiselementisPRO_FEAT_
JOIN_WALLS.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameforthesheet
metalfeature.Thedefaultvalueis
JOIN_1.
PRO_E_SMT_WALL_JOIN_
TRIMPRO_VALUE_TYPE_INT Specifiesanoptionfortrimming
thenonintersecting geometry.The
validvaluesforthiselementare
definedintheenumerated type
ProSmtJoinWallsTrimType
andareasfollows:
•PRO_INTWLS_TRIM_
OPEN_CUTS— Specifiesthe
originalintersecting walls
withoutbeingtrimmed.
•PRO_INTWLS_TRIM_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedintheenumerated type
ProSmtJoinWallsTrimType
andareasfollows:
•PRO_INTWLS_TRIM_
OPEN_CUTS— Specifiesthe
originalintersecting walls
withoutbeingtrimmed.
•PRO_INTWLS_TRIM_
BNDR_EXTS— Specifiesthat
thenonintersection portions
uptotheintersection between
thesurfaceswillberemoved.
•PRO_INTWLS_TRIM_
BEND_LINE— Specifiesthat
thenonintersecting surfaces
willbetrimmeduptothe
bend.
PRO_E_SMT_WALL_JOIN_
EXTENDPRO_VALUE_TYPE_INT Thevalidvaluesforthiselement
aredefinedintheenumerated type
ProSmtJoinWallsExtType
andareasfollows:
•PRO_INTWLS_EXT_LINE_
TO_INT—Extendsthe
intersection linetothe
intersection area.
•PRO_INTWLS_EXT_LINE_
TO_ALL— Extendsthe
intersection linetothe
intersection plane.
Note
Theintersecting wallsmust
beplanar.
PRO_E_SMT_WALL_JOIN_
REFSArray Anarrayelementofonlytwo
surfaces,thatformajoinfeature
set.
PRO_E_SMT_WALL_JOIN_
REFS_CMPNDCompound Thiscompound elementdefines
thecollection ofgeometrytobe
joined.
PRO_E_SMT_WALL_JOIN_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxREFSArray Anarrayelementofonlytwo
surfaces,thatformajoinfeature
set.
PRO_E_SMT_WALL_JOIN_
REFS_CMPNDCompound Thiscompound elementdefines
thecollection ofgeometrytobe
joined.
PRO_E_SMT_WALL_JOIN_
REFS_SRFPRO_ELEM_TYPE_SELECT Selectthesurfaceswhicharetobe
connected bythejoinfeature.
Production Applications: Sheetmetal 1397ElementID DataType Description
PRO_E_SMT_WALL_JOIN_
FLIPPRO_VALUE_TYPE_INT Thiselementflipsthewalljoin
direction.Theselectionpointof
eachwalldetermines whichside
ofthewallswillbekept.
PRO_E_SMT_FILLETS Compound Thiscompound elementdefines
thebendtypesofthesheetmetal
wallandthevalueofbendradius.
PRO_E_SMT_FILLETS_SIDE PRO_VALUE_TYPE_INT Specifiesthefilletside.Thevalid
valuesforthiselementaredefined
intheenumerated type
ProSmdRadType andareas
follows:
•PRO_BEND_RAD_
OUTSIDE— Appliesthebend
radiustotheoutersurfaceof
thebend.
•PRO_BEND_RAD_INSIDE—
Appliesthebendradiustothe
innersurfaceofthebend.
•PRO_BEND_RAD_
PARAMETER— Appliesthe
bendradiusatthedimensionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOUTSIDE— Appliesthebend
radiustotheoutersurfaceof
thebend.
•PRO_BEND_RAD_INSIDE—
Appliesthebendradiustothe
innersurfaceofthebend.
•PRO_BEND_RAD_
PARAMETER— Appliesthe
bendradiusatthedimension
locationsetbytheSMT_
DFLT_RADIUS_SIDE
parameter inCreoParametric.
PRO_E_SMT_FILLETS_VALUE PRO_VALUE_TYPE_DOUBLE Specifiesthevalueofthebend
radius.
PRO_E_SMT_BEND_RELIEF Compound Thiscompound elementdefines
thebendreliefattheedges.For
moreinformation seethesection
BendReliefElementsonpage
1372.
PRO_E_SMT_DEV_LEN_
CALCULATIONCompound Thiscompound elementdefines
themethodusedtocalculatethe
Developed Lengthdimensions for
bends.Formoreinformation see
thesectionTheElementSubtree
forLengthCalculation onpage
1303.
TwistWallFeature
Thetwistwallfeatureenablesyoutocreateaspiralorcoil-shaped sectionofsheet
metal.Thetwistwallcanbeattachedtoastraightedgeonanexistingplanarwall.
Thetwistwalltypicallyservesasatransitionbetweentwoareasofsheetmetal
becauseitcanchangetheplaneofasheetmetalpart.ThetwistcanberectangularxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThetwistwalltypicallyservesasatransitionbetweentwoareasofsheetmetal
becauseitcanchangetheplaneofasheetmetalpart.Thetwistcanberectangular
ortrapezoidal.
Theelementtreeforthetwistwallfeatureisdocumented intheheaderfile
ProSmtTwist.h andisshowninthefollowingfigure:
1398 Creo®Parametric TOOLKIT User’sGuideElementTreeforTwistWallFeature
Production Applications: Sheetmetal 1399Thefollowingtabledescribestheelementsintheelementtreeforthetwistwall
feature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthesheet
metalfeature.Thevalidvaluefor
thiselementisPRO_FEAT_
TWIST.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameforthesheet
metalfeature.Thedefaultvalueis
Twist_1.
PRO_E_SMT_TWIST_ATT_
EDGEPRO_VALUE_TYPE_
SELECTIONSpecifiesanedgetowhichthe
twistwallwillbeattached.
PRO_E_SMT_TWIST_TYPE PRO_VALUE_TYPE_INT Specifiesthewidthoptionsforthe
walls.
Thevalidvaluesforthiselement
aredefinedbytheenumerated data
typeProSmtTwistType and
areasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtwistwallwillbeattached.
PRO_E_SMT_TWIST_TYPE PRO_VALUE_TYPE_INT Specifiesthewidthoptionsforthe
walls.
Thevalidvaluesforthiselement
aredefinedbytheenumerated data
typeProSmtTwistType and
areasfollows:
•PRO_SMT_TWIST_TRIM_
EDGES—Calculates thewall
widthfromtheendsofthe
attachment edges.Thewalls
areoffsetbythespecified
valuefromtheattachment
ends.
•PRO_SMT_TWIST_TYPE_
PNT—Calculates andcenters
thewallwidthfromthetwist
axisbythespecified
dimension.
PRO_E_SMT_TWIST_TRIM_
EDGESCompound Specifiesacompound element
whichdefinesoptionsfortwist
wallends.
Thiselementisavailablewhenthe
valueoftheelement PRO_E_
SMT_TWIST_TYPE issetto
PRO_SMT_TWIST_TRIM_
EDGES.
PRO_E_SMT_TWIST_SIDE_1_
OFFSET
PRO_E_SMT_TWIST_SIDE_2_
OFFSETCompound Specifiesthetrimoptionand
offsetvalueforthefirstand
seconddirectionofwallends.
Theelements PRO_E_SMT_
TWIST_OFFSET_TYPE and
PRO_E_SMT_TWIST_OFFSET_
VALarecommontothecompound
elementsinbothdirections.
PRO_E_SMT_TWIST_OFFSET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoffsetvalueforthefirstand
seconddirectionofwallends.
Theelements PRO_E_SMT_
TWIST_OFFSET_TYPE and
PRO_E_SMT_TWIST_OFFSET_
VALarecommontothecompound
elementsinbothdirections.
PRO_E_SMT_TWIST_OFFSET_
TYPEPRO_VALUE_TYPE_INT Specifiesthetypeoftrimforthe
firstandseconddirectionusingthe
enumerated datatype
1400 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
ProSmtTwistOffsetType.
Thevalidvaluesare:
•PRO_TWIST_OFFSET_
TYPE_TO_END—Specifies
thattheendsofthetwistwall
aresetattheendedgesofthe
attachment points.
•PRO_TWIST_OFFSET_
TYPE_BLIND—Specifies that
thewallendsshouldbe
trimmedorextendedfromthe
endedgesoftheattachment
pointsinspecifieddirection.
PRO_E_SMT_TWIST_OFFSET_
VALPRO_VALUE_TYPE_DOUBLE Specifiestheoffsetvalue.
Thiselementisapplicable when
thevalueoftheelement PRO_E_
SMT_TWIST_OFFSET_TYPE is
settoPRO_TWIST_OFFSET_
TYPE_BLIND.
PRO_E_SMT_TWIST_AXIS_
POINTCompound Specifiesacompound element
whichdefinesoptionsfortwist
axis.
ThiselementisavailablewhenthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSMT_TWIST_OFFSET_TYPE is
settoPRO_TWIST_OFFSET_
TYPE_BLIND.
PRO_E_SMT_TWIST_AXIS_
POINTCompound Specifiesacompound element
whichdefinesoptionsfortwist
axis.
Thiselementisavailablewhenthe
valueoftheelement PRO_E_
SMT_TWIST_TYPE issetto
PRO_SMT_TWIST_TYPE_PNT.
PRO_E_SMT_TWIST_POINT_
TYPEPRO_VALUE_TYPE_INT Specifiesthelocationofthetwist
axisusingtheenumerated data
type
ProSmtTwistPointType.
Thevalidvaluesare:
•PRO_SMT_TWIST_MID_
PNT—Specifies thatthetwist
axisislocatedatthecenterof
thewallwidth.
•PRO_SMT_TWIST_DTM_
PNT—Specifies thatthetwist
axisislocatedonthespecified
datumpoint.
PRO_E_SMT_TWIST_START_
WIDTH_VALPRO_VALUE_TYPE_DOUBLE Specifiesthewidthofthestart
wall.
PRO_E_SMT_TWIST_ATT_
POINT_REFPRO_VALUE_TYPE_
SELECTIONThiselementisavailablewhenthe
valueoftheelement PRO_E_
SMT_TWIST_POINT_TYPE is
settoPRO_SMT_TWIST_DTM_
PNT.
Production Applications: Sheetmetal 1401ElementID DataType Description
Specifiesadatumpointonthe
attachment edge.Thecenterline of
thetwistwallpassesthroughthisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsettoPRO_SMT_TWIST_DTM_
PNT.
Production Applications: Sheetmetal 1401ElementID DataType Description
Specifiesadatumpointonthe
attachment edge.Thecenterline of
thetwistwallpassesthroughthis
datumpoint.Thecenterline ofthe
twistaxisisperpendicular tothe
startedgeandcoplanarwiththe
existingwall.
PRO_E_SMT_TWIST_ANGLE_
VALPRO_VALUE_TYPE_DOUBLE Specifiestherotationangleofthe
twistwall.
PRO_E_SMT_TWIST_WALL_
LENGTH_VALPRO_VALUE_TYPE_DOUBLE Specifiesthelengthofthetwist
wall,measuredfromthe
attachment edgetotheendofthe
twistaxis.
PRO_E_SMT_TWIST_END_
WIDTHCompound Specifiesacompound which
definesoptionstochangethe
widthoftheendwall.
PRO_E_SMT_TWIST_END_
WIDTH_TYPEPRO_VALUE_TYPE_INT Specifiesthewidthoptionforthe
endwallusingtheenumerated
datatype
ProSmtTwistEndWidthType.
Thevalidvaluesare:
•PRO_TWIST_END_WIDTH_
SAME_AS_START—Specifies
thatthewidthoftheendwall
mustbesameasthestartwall.
•PRO_TWIST_END_WIDTH_
BLIND—Specifies thatthe
widthoftheendwallmustbe
settothespecifiedvalue.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_TWIST_END_WIDTH_
SAME_AS_START—Specifies
thatthewidthoftheendwall
mustbesameasthestartwall.
•PRO_TWIST_END_WIDTH_
BLIND—Specifies thatthe
widthoftheendwallmustbe
settothespecifiedvalue.
PRO_E_SMT_TWIST_END_
WIDTH_VALPRO_VALUE_TYPE_DOUBLE Specifiesthewidthoftheend
wall.
PRO_E_SMT_TWIST_DEV_
LEN_VALPRO_VALUE_TYPE_DOUBLE Specifiesthelengthofwallin
unbentstate.
MergeWallFeature
Themergewallfeatureenablesyoutocollectunattached wallstomergethem
togetherintoonepieceusingthebasereferencecollector.Theedgesbetween
certainpiecesofwallscanbeexcludedfromthemergeoperationtokeepthe
corresponding areasdisconnected.
Theelementtreeforthemergewallfeatureisdocumented intheheaderfile
ProSmtMergeWalls.h andisshowninthefollowingfigure:
1402 Creo®Parametric TOOLKIT User’sGuideElementTreeforMergeWallFeature
Thefollowingtabledescribestheelementsintheelementtreeforthemergewall
feature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT SpecifiesthetypeofthesheetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingtabledescribestheelementsintheelementtreeforthemergewall
feature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthesheet
metalfeature.Thevalidvaluefor
thiselementisPRO_FEAT_
WALL.
PRO_E_SMT_WALL_TYPE PRO_VALUE_TYPE_INT Specifiesthewalltypeforthe
sheetmetalfeature.Thedefault
valueisspecifiedbythe
enumerated
typeProSmtWallWallType
andthevalidvalueisPRO_SMT_
WALL_TYPE_MERGE.
Production Applications: Sheetmetal 1403ElementID DataType Description
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthefeaturenameofthe
sheetmetalfeature.
PRO_E_SMT_WALL_MERGE_
BASE_REFCompound Specifiesacollection ofsurfaces
formergingwiththebasewall.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Specifiestheselectionofmerge
geometrythatcanbeselectedtobe
designated assheetmetaldesign
objects.
PRO_E_SMT_WALL_MERGE_
GEOM_REFCompound Specifiesthesurfacesofoneor
moreunattached flatwallsto
mergewiththebasewall.
PRO_E_STEP_MERGE_EDGE PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdesignated assheetmetaldesign
objects.
PRO_E_SMT_WALL_MERGE_
GEOM_REFCompound Specifiesthesurfacesofoneor
moreunattached flatwallsto
mergewiththebasewall.
PRO_E_STEP_MERGE_EDGE PRO_VALUE_TYPE_
SELECTIONSpecifiestheexcludededgesthat
areincludedbythemergeofthe
surfaces.
PRO_E_SMT_MERGE_KEEP_
LINESPRO_VALUE_TYPE_BOOLEAN Controlsthevisibilityofmerged
edgesonsurfacejoints.Thevalid
valuesforthiselementare:
•Pro_B_True—Merge d
edgesarevisibleonsurface
joints.
•Pro_B_False—Merged
edgesarenotvisibleon
surfacejoints.
PRO_E_SMT_MERGE_KEEP_
BEND_EDGESPRO_VALUE_TYPE_BOOLEAN Controlstheabilitytokeepedges
betweenthebendsurfaceswhile
mergingsurfacesinthemerged
walls.Thevalidvaluesareas
follows:
•Pro_B_True—Keep edges
ofbendsurfacesbetween
existingbendsurfacesinthe
mergedwalls
•Pro_B_False—Does not
keepedgesofbendsurfacesin
themergedwalls.
Recognizing SheetMetalDesignObjects
FromCreoParametric 4.0F000onward,theSheetmetal Designitemsarecreatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmergedwalls
•Pro_B_False—Does not
keepedgesofbendsurfacesin
themergedwalls.
Recognizing SheetMetalDesignObjects
FromCreoParametric 4.0F000onward,theSheetmetal Designitemsarecreated
asdesignobjects.Bends,bendreliefs,cornerreliefs,cornerseams,andformsare
sheetmetaldesignobjects.TheRecognition commands enableyoutotagsurfaces
assheetmetaldesignobjectsornotsheetmetaldesignobjects.Thefollowing
sheetmetalobjectscanberecognized as,orrecognized asnot,asheetmetal
designobject:
•Bends
•Bendreliefs
•Cornerreliefs
1404 Creo®Parametric TOOLKIT User’sGuide•Cornerseams
•Forms
Note
IntheProSmtRecognition.h elementtree,youcantagobjectsofthe
sametypeatatimeassheetmetaldesignobjectornotsheetmetaldesign
object.Thismeansonlyonecompound elementforobjectsofthesametype
canbedefinedatatimeforafeature.
Theelementtreetorecognizeassheetmetaldesignobjectsornotsheetmetal
designobjectsisdocumented intheheaderfileProSmtRecognition.h andis
showninthefollowingfigure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcanbedefinedatatimeforafeature.
Theelementtreetorecognizeassheetmetaldesignobjectsornotsheetmetal
designobjectsisdocumented intheheaderfileProSmtRecognition.h andis
showninthefollowingfigure:
Production Applications: Sheetmetal 1405ElementTreeforRecognizing Sheetmetal Features
Thefollowingtabledescribestheelementsintheelementtree:
1406 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthesheet
metalfeature.Thevalidvaluefor
thiselementisPRO_FEAT_SMT_
RECOGNITION.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameforthesheet
metalfeature.
PRO_E_SMT_BND_RLF_RCG Compound Specifiesacompound element
whichdefinesbendreliefsassheet
metaldesignobjects.
PRO_E_SMT_RECOGNITION_
SEL_TYPEPRO_VALUE_TYPE_INT Specifiesthemodeforselecting
bendreliefs.Seethesection
ValuesforPRO_E_SMT_
RECOGNITION_SEL_TYPE on
page1410,formoreinformation
onvalidvalues.
PRO_E_SMT_PIO_SCOPE PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbendreliefs.Seethesection
ValuesforPRO_E_SMT_
RECOGNITION_SEL_TYPE on
page1410,formoreinformation
onvalidvalues.
PRO_E_SMT_PIO_SCOPE PRO_VALUE_TYPE_
SELECTIONSpecifiesthegeometrythatcanbe
selectedtobedesignated assheet
metaldesignobjects.Youcan
selectdrivenoroffsetsheetmetal
surface,intentsurfacethat
containsatleastonesideofbend
relief,adesignobjectwhichisnot
bendrelief,thicknessedgeifthe
bendreliefdoesnotcontainany
surface,bendreliefvertexifthe
bendreliefdoesnotcontainany
surfaceoredge.
PRO_E_SMT_CRN_RLF_RCG Compound Specifiesacompound element
whichdefinescornerreliefsas
sheetmetaldesignobjects.
PRO_E_SMT_RECOGNITION_
SEL_TYPEPRO_VALUE_TYPE_INT Specifiesthemodeforselecting
cornerrelief.Seethesection
ValuesforPRO_E_SMT_
RECOGNITION_SEL_TYPE on
page1410,formoreinformation
onvalidvalues.
PRO_E_SMT_PIO_SCOPE PRO_VALUE_TYPE_
SELECTIONSpecifiesthecornerrelief
geometrythatcanbeselectedtobe
designated assheetmetaldesign
objects.
PRO_E_SMT_BEND_RCG Compound Specifiesacompound elementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_SMT_PIO_SCOPE PRO_VALUE_TYPE_
SELECTIONSpecifiesthecornerrelief
geometrythatcanbeselectedtobe
designated assheetmetaldesign
objects.
PRO_E_SMT_BEND_RCG Compound Specifiesacompound element
whichdefinesbendsassheetmetal
designobjects.
PRO_E_SMT_RECOGNITION_
SEL_TYPEPRO_VALUE_TYPE_INT Specifiesthemodeforselecting
bends.SeethesectionValuesfor
PRO_E_SMT_RECOGNITION_
SEL_TYPE onpage1410,for
moreinformation onvalidvalues.
PRO_E_SMT_PIO_SCOPE PRO_VALUE_TYPE_
SELECTIONSpecifiesthebendgeometrythat
canbeselectedtobedesignated as
sheetmetaldesignobjects.You
canselectcylindrical bendsurface,
intentsurfacethatcontainsa
Production Applications: Sheetmetal 1407ElementID DataType Description
cylindrical bendoradesignobject
whichisnotabend.
PRO_E_SMT_CRN_SEAM_RCG Compound Specifiesacompound element
whichdefinescornerseamsas
sheetmetaldesignobjects.
PRO_E_SMT_RECOGNITION_
SEL_TYPEPRO_VALUE_TYPE_INT Specifiesthemodeforselecting
cornerseams.Seethesection
ValuesforPRO_E_SMT_
RECOGNITION_SEL_TYPE onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichdefinescornerseamsas
sheetmetaldesignobjects.
PRO_E_SMT_RECOGNITION_
SEL_TYPEPRO_VALUE_TYPE_INT Specifiesthemodeforselecting
cornerseams.Seethesection
ValuesforPRO_E_SMT_
RECOGNITION_SEL_TYPE on
page1410,formoreinformation
onvalidvalues.
PRO_E_SMT_PIO_SCOPE PRO_VALUE_TYPE_
SELECTIONSpecifiesthecornerseam
geometrythatcanbeselectedtobe
designated assheetmetaldesign
objects.
Youcanselectoneormore
references fromthefollowing:
•Sidesurfacethatcanbe
associated withacornerseam.
•NotCornerSeamdesign
objects.
•Planarfaceoroffsetsurface,
whichwillbeconsidered as
thereferenceforallneighbor
cornerseams.
•Bendsurface,whichwillbe
considered asthereferencefor
allneighborcornerseams.
PRO_E_SMT_FORM_RCG Compound Specifiesacompound element
whichdefinesformsassheetmetal
designobjects.
PRO_E_SMT_RECOGNITION_
SEL_TYPEPRO_VALUE_TYPE_INT Specifiesthemodeforselecting
forms.SeethesectionValuesfor
PRO_E_SMT_RECOGNITION_
SEL_TYPE onpage1410,for
moreinformation onvalidvalues.
PRO_E_SMT_RCG_FORM_AS_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSEL_TYPEPRO_VALUE_TYPE_INT Specifiesthemodeforselecting
forms.SeethesectionValuesfor
PRO_E_SMT_RECOGNITION_
SEL_TYPE onpage1410,for
moreinformation onvalidvalues.
PRO_E_SMT_RCG_FORM_AS_
ONEPRO_VALUE_TYPE_BOOLEAN Specifiesiftheselectedform
geometrymustbeconsidered as
oneformdesignobject.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofform
geometrythatcanbeselectedtobe
designated assheetmetaldesign
objects.
PRO_E_SMT_FORM_BOUND_
REFSPRO_VALUE_TYPE_
SELECTIONSpecifiestheformsonareference
surface.Youcanselectdrivenor
offsetsheetmetalsurfacesor
intentsurfacesthatcontaindriven
oroffsetsheetmetalsurfaces.
1408 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SMT_BND_RLF_UNRCG Compound Specifiesacompound element
whichdefinesbendreliefsasnot
sheetmetaldesignobjects.
Thechildelementsandtheir
valuesaresameasthePRO_E_
SMT_BND_RLF_RCG element.
PRO_E_SMT_CRN_RLF_UNRCG Compound Specifiesacompound element
whichdefinescornerreliefsasnotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsheetmetaldesignobjects.
Thechildelementsandtheir
valuesaresameasthePRO_E_
SMT_BND_RLF_RCG element.
PRO_E_SMT_CRN_RLF_UNRCG Compound Specifiesacompound element
whichdefinescornerreliefsasnot
sheetmetaldesignobjects.
Thechildelementsandtheir
valuesaresameasthePRO_E_
SMT_CRN_RLF_RCG element.
PRO_E_SMT_BEND_UNRCG Compound Specifiesacompound element
whichdefinesbendsasnotsheet
metaldesignobjects.
Thechildelementsandtheir
valuesaresameasthePRO_E_
SMT_BEND_RCG element.
PRO_E_SMT_CRN_SEAM_
UNRCGCompound Specifiesacompound element
whichdefinescornerseamsasnot
sheetmetaldesignobjects.
Thechildelementsandtheir
valuesaresameasthePRO_E_
SMT_CRN_SEAM_RCG element.
Production Applications: Sheetmetal 1409ElementID DataType Description
PRO_E_SMT_PIO_SCOPE PRO_VALUE_TYPE_
SELECTIONSpecifiesthecornerseam
geometrythatcanbeselectedtobe
designated asnotsheetmetal
designobjects.
Youcanselectoneormore
references fromthefollowing:
•Sidesurfacethatcanbe
associated withacornerseam.
•CornerSeamdesignobjects.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometrythatcanbeselectedtobe
designated asnotsheetmetal
designobjects.
Youcanselectoneormore
references fromthefollowing:
•Sidesurfacethatcanbe
associated withacornerseam.
•CornerSeamdesignobjects.
•Planarfaceoroffsetsurface,
whichwillbeconsidered as
thereferenceforallneighbor
cornerseams.
•Bendsurface,whichwillbe
considered asthereferencefor
allneighborcornerseams.
PRO_E_SMT_FORM_UNRCG Compound Specifiesacompound element
whichdefinesformsasnotsheet
metaldesignobjects.
Thechildelementsandtheir
valuesaresameasthePRO_E_
SMT_FORM_RCG element.
ValuesforPRO_E_SMT_RECOGNITION_SEL_TYPE
Thiselementspecifiesthemodeforselectingbends,bendreliefs,cornerreliefs,
cornerseams,andformsassheetmetaldesignobjects.Thevalidvaluesare:
•PRO_SMT_RECOGNITION_MANUAL_SEL—Specifies manualselectionof
thesheetmetal designobject.
•PRO_SMT_RECOGNITION_AUTO_SEL—Specifies automatic selectionof
thesheetmetal designobject.
1410 Creo®Parametric TOOLKIT User’sGuide61
Production Applications:
Manufacturingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesheetmetal designobject.
•PRO_SMT_RECOGNITION_AUTO_SEL—Specifies automatic selectionof
thesheetmetal designobject.
1410 Creo®Parametric TOOLKIT User’sGuide61
Production Applications:
Manufacturing
Manufacturing Models...........................................................................................1412
CreatingaManufacturing Model.............................................................................1412
AnalyzingaManufacturing Model...........................................................................1413
CreatingManufacturing Objects.............................................................................1416
AnalyzingManufacturing Features..........................................................................1430
ThischapterdescribestheCreoParametric TOOLKITfunctionsfor
manufacturing operations. Familiarity withCreoNCfunctionssimplifies theuse
ofthesemanufacturing functions.
1411Manufacturing Models
Functions Introduced:
•ProMfgAssemGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmanufacturing operations. Familiarity withCreoNCfunctionssimplifies theuse
ofthesemanufacturing functions.
1411Manufacturing Models
Functions Introduced:
•ProMfgAssemGet()
•ProMfgT ypeGet()
Youcanusethefunction ProSolidFeatVisit() tovisitallthecomponents
inamanufacturing model.However,thisfunctionrequiresaProSolid (orone
ofitsinstances, ProPart orProAssembly) handletothemodelasinput.The
function ProMfgAssemGet() outputsaProAssembly handletothetop-
levelassemblyinthemanufacturing model,givenitsProMfghandle.This
assemblyhandlecanthenbepassedtoProSolidFeatVisit().
Manufacturing models,likeothermodelsinCreoParametric, areuniquely
identifiedbynameandtype.However,thereareseveraldifferentvarietiesof
manufacturing models.Forexample,assemblymachining, sheetmetal
manufacturing, andmoldmanufacturing arealltypesofmanufacturing models.
TheProMfgobjectisageneralpurpose,opaquehandleusedtorepresentanyof
thedifferentmanufacturing modelvarieties.Todistinguish betweenthedifferentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheProMfgobjectisageneralpurpose,opaquehandleusedtorepresentanyof
thedifferentmanufacturing modelvarieties.Todistinguish betweenthedifferent
typesofmanufacturing model,therearemanufacturing subtypes.Thecomplete
listofsubtypesisasfollows:
•PRO_MFGTYPE_MACH_ASSEM
•PRO_MFGTYPE_SHEET_METAL
•PRO_MFGTYPE_MOLD
•PRO_MFGTYPE_CAST
•PRO_MFGTYPE_CMM
Thefunction ProMfgTypeGet() outputsthesubtype,giventheProMfg
handletothemanufacturing object.
CreatingaManufacturing Model
FunctionIntroduced
•ProMfgMdlCre ate()
Thefunction ProMfgMdlCreate() outputsaninitialized ProMfgobject
handle,giventhemodelname,manufacturing subtype,andnameofthereference
model.Forsheetmetal manufacturing, thisshouldbethesheetmetal workpiece.
Forallothersubtypes,thereferencemodelargumentisignored.
1412 Creo®Parametric TOOLKIT User’sGuideAnalyzingaManufacturing Model
CreoNChastwomodesofoperation—part andassemblymanufacturing. Inboth
cases,thetop-levelmodelisanassemblythatcontainsthedescription ofthetools.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoNChastwomodesofoperation—part andassemblymanufacturing. Inboth
cases,thetop-levelmodelisanassemblythatcontainsthedescription ofthetools.
Thefollowingdiagramshowsthehierarchyofpartandassemblymanufacturing
models.
PartandAssemblyManufacturing ModelHierarchy
Inpartmanufacturing, thestoragesolidisapartthatrepresents theworkpiece or
stock,andthedesignpieceisanothercomponent atthesamelevel.Inassembly
manufacturing, thestoragesolidistheactualassemblyrepresenting thedesign
model.Theworkpiece canbeatanylevelinsidethisassembly.Inbothtypesof
manufacturing, themanufacturing operations aredescribedasfeaturesofthe
storagesolid.
Production Applications: Manufacturing 1413TheimportanttasksforCreoParametric TOOLKITaretotraversethe
manufacturing assemblycomponents, identifythestoragesolidthatcontainsthe
manufacturing operations asitsfeatures,andlistthemanufacturing tools.
Thissectioncontainsthefollowingsubsections:
•TraversingManufacturing Components onpage1414
•Identifying theStorageSolidonpage1414xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmanufacturing operations asitsfeatures,andlistthemanufacturing tools.
Thissectioncontainsthefollowingsubsections:
•TraversingManufacturing Components onpage1414
•Identifying theStorageSolidonpage1414
•VisitingManufacturing Toolsonpage1415
TraversingManufacturing Components
FunctionIntroduced:
•ProAsmcompT ypeGet()
Youcanvisitthecomponents inamanufacturing assemblyusingthesame
functionsthatenableyoutovisitthecomponents ofaregularassembly.Forafull
description ofthesefunctions, seetheAssembly: BasicAssembly Accessonpage
1112chapter.
Thecomponents withinamanufacturing assemblyperformavarietyofdifferent
roles.Thefunction ProAsmcompTypeGet() providestheroleofanymodel
underamanufacturing assembly.Thepossiblerolesareasfollows:
•PRO_ASM_COMP_TYPE_NONE—A regularcomponent (nospecial
manufacturing role)
•PRO_ASM_COMP_TYPE_WORKPIECE—A workpiece
•PRO_ASM_COMP_TYPE_REF_MODEL—A referencemodel
•PRO_ASM_COMP_TYPE_FIXTURE—A fixture
•PRO_ASM_COMP_TYPE_MOLD_BASE—A moldbasexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmanufacturing role)
•PRO_ASM_COMP_TYPE_WORKPIECE—A workpiece
•PRO_ASM_COMP_TYPE_REF_MODEL—A referencemodel
•PRO_ASM_COMP_TYPE_FIXTURE—A fixture
•PRO_ASM_COMP_TYPE_MOLD_BASE—A moldbase
•PRO_ASM_COMP_TYPE_MOLD_COMP—A moldcomponent
•PRO_ASM_COMP_TYPE_MOLD_ASSEM—A moldassembly
•PRO_ASM_COMP_TYPE_GEN_ASSEM—A generalassembly
•PRO_ASM_COMP_TYPE_CAST_ASSEM—A castassembly
•PRO_ASM_COMP_TYPE_DIE_BLOCK—A dieblock
•PRO_ASM_COMP_TYPE_DIE_COMP—A diecomponent
•PRO_ASM_COMP_TYPE_SAND_CORE—A sandcore
•PRO_ASM_COMP_TYPE_CAST_RESULT—A castresult
IdentifyingtheStorageSolid
Functions Introduced:
1414 Creo®Parametric TOOLKIT User’sGuide•ProMfgSolidGet()
•ProMfgFeatur eOwnerGet()
AnotherimportanttaskinusingCreoParametric TOOLKITforaccessingCreo
NCmodelsistofindthestoragesolidinsidethemanufacturing model.Thismodel
isimportantbecausethemanufacturing operations—workcells, NCsequences,
andsoon—arerepresented asfeatureswithinit.
Manufacturing featuresaretreatedlikeallotherfeaturesinCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisimportantbecausethemanufacturing operations—workcells, NCsequences,
andsoon—arerepresented asfeatureswithinit.
Manufacturing featuresaretreatedlikeallotherfeaturesinCreoParametric
TOOLKIT. ThisenablesyoutosearchforNCsequences asyouwouldforsolid
features.Forexample,tovisitalltheworkcellsofamanufacturing solid,youcan
usetheProSolidFeatVisit()function andfilteroutanymodelitemsnotof
typePRO_E_WCELL.
Thefunction ProMfgSolidGet() returnsthehandletothestoragesolid,and
ProMfgFeatureOwnerGet() returnsthecomponent pathtothesolidfrom
thetop-levelassembly.
Example1:IdentifyingWorkcellFeaturesofaNCModel
ThesamplecodeinUgMfgWcellIdentify.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_mfg showshowto
identifyworkcellfeatures.
VisitingManufacturing Tools
Functions Introduced:
•ProMfgT oolV isit()
•ProToolTypeGet()
•ProToolModelMdlnameGet()
•ProToolParamGet()
•ProToolAttributesGet()
•ProToolV erify()
Toolsarenotstoredasfeaturesofthemanufacturing solid,norascomponents inxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMfgT oolV isit()
•ProToolTypeGet()
•ProToolModelMdlnameGet()
•ProToolParamGet()
•ProToolAttributesGet()
•ProToolV erify()
Toolsarenotstoredasfeaturesofthemanufacturing solid,norascomponents in
theassembly; theyarespecialobjectswithinthetop-levelmanufacturing model,
sotheyneedtheirownvisitfunction.ThisfunctionisProMfgToolVisit(),
whichhasthesameformasothervisitfunctionsinCreoParametric TOOLKIT,
exceptitdoesnotoffertheoptionofauser-definedfilterfunction.Youcallthe
actionfunctionwithaninputargumentoftypeProTool toidentifythetool.
Theotherfunctionsanalyzethetoolbeingvisited.
Thefunction ProToolTypeGet() returnsthetooltype.Examples ofthetypes
areasfollows:
•PRO_TOOL_DRILL
Production Applications: Manufacturing 1415•PRO_TOOL_TURN
•PRO_TOOL_SAW
•PRO_TOOL_MILL
TheProToolModelMdlnameGet() functionoutputsthemodelnameand
typeofatool,givenitsProTool handle.
Thefunction ProToolParamGet() retrievesthevalueofaspecifiedtool
parameter.ThisyieldsavalueintermsofthetypeProParamvalue (seethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofatool,givenitsProTool handle.
Thefunction ProToolParamGet() retrievesthevalueofaspecifiedtool
parameter.ThisyieldsavalueintermsofthetypeProParamvalue (seethe
Core:Parameters onpage208chapterformoreinformation).
Thefunction ProToolAttributesGet() providesthecurrentsettingof
severalBooleanattributesofthetoolintheformofanintegerbitmap.Currently,
theattributesdefinewhetherasolidtoolistobebyreferenceorbycopy.Seethe
sectionCreatingNCSequences onpage1426formoreinformation oncreating
tools.
Thefunction ProToolVerify() returnsaBooleanshowingwhethera
specifiedtoolhandlecorresponds toanexistingtool.
CreatingManufacturing Objects
Thissectionexplainshowtocreatealltypesofmanufacturing feature.This
sectionassumesyouhaveanunderstanding ofelementtreesforfeaturecreation
andCreoNC.Foranintroduction toelementtrees,seeElementTrees:Principles
ofFeatureCreationonpage749.
Note
YoumusthaveaCreoNClicensetocreatemanufacturing featuresusingCreo
Parametric TOOLKIT.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandCreoNC.Foranintroduction toelementtrees,seeElementTrees:Principles
ofFeatureCreationonpage749.
Note
YoumusthaveaCreoNClicensetocreatemanufacturing featuresusingCreo
Parametric TOOLKIT.
Animportantprincipleofcreatingmanufacturing featuresisthatalltheelements
requiredtobedefinedinteractively mustalsobedefinedwhenyoucreatethat
featureusingCreoParametric TOOLKIT.
Aswithcreatingsolidfeatures,manufacturing featuresuseelementtreestodefine
thefeaturebeforeyoucallProFeatureCreate() tocreatethefeature.
However,themethodofcreatingtoolsisslightlydifferent,asdescribedinthe
followingsections.
CreatingTools
Functions Introduced:
•ProToolinputAlloc()
1416 Creo®Parametric TOOLKIT User’sGuide•ProToolinputT ypeSet()
•ProToolElemParamAdd()
•ProToolElemModelSet()
•ProToolinputElemAdd()
•ProToolInit()
•ProToolCr eate()
•ProToolinputFr ee()
•ProToolFileRead()
•ProToolFileW rite()
InCreoParametric, andthereforeinCreoParametric TOOLKIT,toolsarenotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProToolinputElemAdd()
•ProToolInit()
•ProToolCr eate()
•ProToolinputFr ee()
•ProToolFileRead()
•ProToolFileW rite()
InCreoParametric, andthereforeinCreoParametric TOOLKIT,toolsarenot
features,andmustbecreatedinaslightlydifferentmannerforsolidand
manufacturing features.
Toolcreationinvolvesinitializing aninputstructureusingacallto
ProToolinputAlloc().
Yousetthetooltype(forexample,centerdrillorream)directlyintheinput
structureusingthefunction ProToolinputTypeSet().
Youcanthenaddtoolelementstothisinputstructureusingathree-step process.
First,initializeeachelementusingthefunction ProElementAlloc(). Next,
adddatatothiselementusinganelement-specific function.Finally,addthe
elementtothetoolinputstructureusing ProToolinputElemAdd().
AsinCreoParametric, toolscanbedefinedbyparameter orbymodel.Toadda
parameter toatool,firstallocatethespaceforaparameter elementusingacall
suchasthis:
status =ProElementAlloc (PRO_E_PARAM, &element);
Next,addtheparameter totheelementusingthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameter toatool,firstallocatethespaceforaparameter elementusingacall
suchasthis:
status =ProElementAlloc (PRO_E_PARAM, &element);
Next,addtheparameter totheelementusingthefunction
ProToolElemParamAdd(), thenaddtheelementitselftotheinputstructure
usingthefunction ProToolinputElemAdd().
Thefollowingtableliststheparameters requiredtobedefinedforeachturning
tool.
Parameter Turn TurnGroove
NOSE_RADIUS • •
TOOL_WIDTH • •
SIDE_WIDTH •
LENGTH • •
SIDE_ANGLE • •
END_ANGLE • •
GAUGE_X_LENGTH • •
GAUGE_Z_LENGTH • •
TOOL_MATERIAL • •
HOLDER_TYPE •
Production Applications: Manufacturing 1417Thefollowingtableliststheparameters requiredtobedefinedformillingtools.
Parameter Mill SideMill ThreadMillGroove
CUTTER_DIAM • • • •
CORNER_RADIUS • • •
CUTTER_WIDTH •
SHANK_DIAM •
LENGTH • • • •
INSERT_LENGTH •
END_OFFSET •
SIDE_ANGLE • •
GAUGE_X_
LENGTH• •
GAUGE_Z_
LENGTH• • •
NUM_OF_TEETH • • •
TOOL_MATERIAL • •
Thefollowingtableliststheparameters requiredtobedefinedforauxiliaryand
contouring tools.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEND_OFFSET •
SIDE_ANGLE • •
GAUGE_X_
LENGTH• •
GAUGE_Z_
LENGTH• • •
NUM_OF_TEETH • • •
TOOL_MATERIAL • •
Thefollowingtableliststheparameters requiredtobedefinedforauxiliaryand
contouring tools.
Parameter Auxiliary Contouring
CUTTER_DIAM • •
LENGTH • •
Thefollowingtableliststheparameters requiredtobedefinedforholemaking
tools.
Parameter DrillCsinkTapReamCenter
DrillBoreBack-
Spot
CUTTER_DIAM • • • • • • •
POINT_
DIAMETER• •
DRILL_
DIAMETER•
BODY_
DIAMETER•
LENGTH • • • • • • •
CHAMFER_
LENGTH•
DRILL_LENGTH •
INSERT_
LENGTH•
TIP_OFFSET •
GAUGE_OFFSET •
CUTTING_
OFFSET•
SIDE_ANGLE •
POINT_ANGLE • • •
CSINK_ANGLE • •
GAUGE_X_
LENGTH• • • • • • •
1418 Creo®Parametric TOOLKIT User’sGuideParameter DrillCsinkTapReamCenter
DrillBoreBack-
Spot
GAUGE_Z_
LENGTH• • • • • • •
TOOL_
MATERIAL• • • • • • •
RefertotheCreoParametric NCManufacturing Helpformoreinformation.
Creatingatoolusingatoolmodelissimilartothepreviousprocess.First,allocatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSpot
GAUGE_Z_
LENGTH• • • • • • •
TOOL_
MATERIAL• • • • • • •
RefertotheCreoParametric NCManufacturing Helpformoreinformation.
Creatingatoolusingatoolmodelissimilartothepreviousprocess.First,allocate
spaceforanelementoftypePRO_E_TOOL_MODEL. Setthemodelintheelement
usingthefunction ProToolElemModelSet(), thenaddittotheinput
structureusing ProToolinputElemAdd(). AsinCreoNC,youmustspecify
therequirednumberofdimensions withinthetoolmodel.
Creatingthetoolrequirestwosteps.First,initializeatoolhandleusing
ProToolInit(). Thiscreatesatoolidentifierthatuniquelydefinesthetool
andisusedtoreferencethattoolwithinthemanufacturing model.Youpassthis
identifier,togetherwiththecompleted inputstructure,tothefunction
ProToolCreate(), whichactuallycreatesthetool.
Oncethetoolhasbeencreated,releasethememoryusedbythetoolinput
structureanditsassociated elementsusingthefunction
ProToolinputFree().
Thefollowingtableshowstheelementsrequiredfortoolcreation.Inthistable,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructureanditsassociated elementsusingthefunction
ProToolinputFree().
Thefollowingtableshowstheelementsrequiredfortoolcreation.Inthistable,
theValuecolumnspecifieswhethertheelementisrequired(R)oroptional(O).
Element Description Value
Name Thenameusedtoidentifythetool R
Type Mill,drill,andsoon R
Parameters (forparameter-driventools
only)Toolparameters R
Model(forsolidtoolsonly) Modelthatrepresents thetool R
Thefunction ProToolFileRead() createsanewtoolorredefinesanexisting
tool.Theinputargumentsforthisfunctionareasfollows:
•tool_handle—Specify thehandletothetooltobecreatedorredefined.
•input_file—Specify thefullpathandnameoftheinputfilethatcontains
alltheparameter information aboutthetooltobecreatedorredefined.
Thefunction ProToolFileWrite() writesallinformation aboutthetoolinto
afile.Passthefollowingasinputargumentstothisfunction:
•tool_handle—Specify thehandletothetoolwhoseinformation istobe
saved.
•output_file—Specify thefullpathandnameoftheoutputfilewherethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxafile.Passthefollowingasinputargumentstothisfunction:
•tool_handle—Specify thehandletothetoolwhoseinformation istobe
saved.
•output_file—Specify thefullpathandnameoftheoutputfilewherethe
toolinformation istobesaved.
Production Applications: Manufacturing 1419Example2:CreatingaToolfromaSolidModel
ThesamplecodeinUgMfgSldToolCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_mfg showshowto
createatoolfromsolidmodel.
Example3:CreatingaParameter-Driven Tool
ThesamplecodeinUgMfgParamToolCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_mfg
showshowtocreateadrillingtoolfromparameters.
Example4:CreatingaMillingWorkcell
ThesamplecodeinUgMfgWcellCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_mfg showsthe
processtocreateamillingworkcell.Copythemill_d20.xml filefrom
<creo_toolkit_loadpoint>/protk_appls/models/mfg toyour
workingdirectorytocreateaworkcellusingthesamplecode.
Manufacturing Parametersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprocesstocreateamillingworkcell.Copythemill_d20.xml filefrom
<creo_toolkit_loadpoint>/protk_appls/models/mfg toyour
workingdirectorytocreateaworkcellusingthesamplecode.
Manufacturing Parameters
Ingeneral,thereareanumberofparameters thataremandatory foragiventool
typeorNCsequence,andothersthatareoptional.Forexample,amillingtool
requiresthatitslengthanddiameterbespecified,whileotherparameters suchas
thenumberofteeth,ortoolmaterialareoptional.
Theadditionofmanufacturing parameters tobothworkcellsandoperations is
optional.
Thefollowingfigureshowsaparameter elementsubtree.
ParameterElementSubtree
1420 Creo®Parametric TOOLKIT User’sGuideTheprocessofcreatingaparameter elementsubtreeisthesameforworkcells,
operations, andNCsequences. First,allocatethespaceforthePRO_E_MFG_
PARAMSarrayelement.Thesimplestmethodofcreatingthetreeistodelay
addingthePRO_E_MFG_PARAMS elementtoitsparentuntilyouhavefully
definedthetree.AsyoudefineeachPRO_E_MFG_PARAM element,addittothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPARAMSarrayelement.Thesimplestmethodofcreatingthetreeistodelay
addingthePRO_E_MFG_PARAMS elementtoitsparentuntilyouhavefully
definedthetree.AsyoudefineeachPRO_E_MFG_PARAM element,addittothe
PRO_E_MFG_PARAMS arrayusing ProElemtreeElementAdd(). Use
NULLfortheelementpathaseachPRO_E_MFG_PARAM elementisaddedtothe
parameter elementtree.
ThePRO_E_MFG_PARAM elementitselfisacompound elementandrequirestwo
childrentobedefined.OneisthePRO_E_MFG_PARAM_NAME element,astring
(notawidestring)thatrepresents theparameter nametodefine.Theotherisa
PRO_E_MFG_PARAMVAL element,whichrepresents thevalueoftheparameter.
Depending onthecontext,thismightbeaninteger,double,orwidestring.For
example, CUT_FEED isrepresented byadouble,whereas NUMBER_OF_ARC_
PNTSisaninteger.RefertotheCreoParametric NCManufacturing Helpfor
moreinformation onmanufacturing parameters.
Example4:CreatingaParameterTree
ThesamplecodeinUgMfgParamTreeCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_mfgxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmoreinformation onmanufacturing parameters.
Example4:CreatingaParameterTree
ThesamplecodeinUgMfgParamTreeCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_mfg
showshowtocreateaparameter elementtree.
UsingExternalFunctionstoDefineParameters in
theManufacturing StepTable
CreoParametric TOOLKITprovidesthecapability todefinecustomized functions
thatareavailablefromwithintheRelationsuserinterfaceandcanbeusedto
definerelationsforagivenitem.Thiscapability isdescribedinthesectionAdding
aCustomized FunctiontotheRelationsDialoginCreoParametric onpage206in
thechapterCore:Relationsonpage202.Externalrelationfunctionscanalsobe
usedwithinrelationsstoredinstepsintheManufacturing StepTable.
Externalfunctionscanbeusedtodefinenewparameters forthemembersofthe
steptable.Forexample,ifaparameter 'sample_parameter' isdefinedas
follows:
sample_parameter =protk_user_defined_function (list ofarguments)
Thedefinitionsuggeststhatthevalueoftheparameter sample_parameter isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollows:
sample_parameter =protk_user_defined_function (list ofarguments)
Thedefinitionsuggeststhatthevalueoftheparameter sample_parameter is
setasaresultofthecalculation doneusingthefunction protk_user_
defined_function.
Thefollowingstepsarerequiredtodefinenewparameters usingexternalrelation
functions:
1.WithintheCreoParametric TOOLKITapplication, registeranappropriate
externalfunctionusing ProRelationFunctionRegister().
Production Applications: Manufacturing 14212.Intheuserinterfaceforthesteptable,definetherelationcallingtheexternally
registered functions.
CreoParametric TOOLKITrelationfunctionscalledfromanentryintheStep
Tablewillhaveoneoftwoownersfortherelationset(ProRelSet) depending
onthefollowingcases:
Case1:Ifthestephasbeenapplied
Theownerwillbethemanufacturing featurecreatedbythissteptableentry.
Case2:Ifthestephasnotbeenapplied
TheownerwillbeanobjectwhosetypeisPRO_NC_STEP_OBJECT.
Usingexternalfunctions, itispossibletointeractwithanexternaldatabaseorxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCase2:Ifthestephasnotbeenapplied
TheownerwillbeanobjectwhosetypeisPRO_NC_STEP_OBJECT.
Usingexternalfunctions, itispossibletointeractwithanexternaldatabaseor
application, inordertosetthevalueofsomeparameters intheProcessTable.
Becauserelationsmaybereevaluated manytimesduringaregeneration cycle,
PTCrecommends thattheexternalfunctionscontainsomecontrolthatprevents
reconnection totheexternaldatabaseoneachinvocation.
Note
IfnoCreoParametric TOOLKITapplication hasregistered theneeded
externalfunction,anyrelationusingthefunctioncannotbeevaluatedandis
shownasanerror.However,whendefiningGlobalRelations, evenifan
undefined functionisencountered, therelationwillpassthevalidation, but,
therelationwillnotbeappliedtothestepsbecausethefunctionisnotfound.
CreatingManufacturing Features
Thecreationofmanufacturing featuresmirrorsthecreationofsolidfeaturesin
CreoParametric TOOLKIT.Allfeaturesattheveryleastmustdefineafeature
type.Certainmanufacturing featuresalsohavearequirement thatsome“non-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric TOOLKIT.Allfeaturesattheveryleastmustdefineafeature
type.Certainmanufacturing featuresalsohavearequirement thatsome“non-
redefinable” elementsmustbedefined.
Withtheexceptionoffixtures,allfeaturesarecreatedinthemanufacturing solid.
However,fixturesareownedbythemanufacturing assembly.
Likesolidfeaturecreation,manufacturing featurecreationconsistsofseveral
distinctsteps:
1.Createthefeatureelementtree.
2.Addnodesorsubtreestothefeaturetree.
3.Createaselectionthatrepresents themodelinwhichtoconstructthefeature.
4.Createthefeature.
1422 Creo®Parametric TOOLKIT User’sGuideThefollowingsectionsdocument onlythefirsttwostepsformanufacturing
features,becausetheactualprocessoffeaturecreationiscommontoall.
CreatingFixtures
Afixturesetupfeatureisoneofthesimplestmanufacturing featuresandcontains
amaximum offourelements.
Youshouldnameafixturesetupfeature.Optionally ,youcandefinethefollowing:
•Thetimerequiredtoperformthesetup
•Theidentifiers ofthefixturingcomponents
•Associated commentsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxamaximum offourelements.
Youshouldnameafixturesetupfeature.Optionally ,youcandefinethefollowing:
•Thetimerequiredtoperformthesetup
•Theidentifiers ofthefixturingcomponents
•Associated comments
ToCreateanElementTreeforaFixtureSetupFeature
1.Allocatespaceforthetreeusingthefollowingcall:
ProElementAlloc (PRO_E_FEATURE_TREE);
2.Definethefeaturetypeelement(PRO_E_FEATURE_TYPE) tobeaninteger
ofvalue PRO_FEAT_FIXSETUP.
3.Definethename(PRO_E_FEAT_NAME) tobeawidestring.
4.Optionally ,addthesetuptime(PRO_E_SETUP_TIME) asadouble.
5.Optionally ,addthecomponent identifiers ofthefixturingmodels(PRO_E_
FIXT_COMPONENTS).
Note
Becausethisisamultivalue element,youcanaddmultiple(integer)values
tothePRO_E_FIXT_COMPONENT element.
Whenthetreeiscomplete,youcanpassit(andaselectionhandlethatrepresents
themanufacturing assembly) tothefunction ProFeatureCreate().
CreatingWorkcells
TheelementtreeforworkcellsisdescribedintheincludefileProWcell.h. For
thisfeature,thefeaturetypeelementisPRO_FEAT_WORKCELL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatingWorkcells
TheelementtreeforworkcellsisdescribedintheincludefileProWcell.h. For
thisfeature,thefeaturetypeelementisPRO_FEAT_WORKCELL.
Thefollowingtableshowstherequiredandoptionalelementsforworkcell
features.Inthistable,the“Value”columnspecifieswhethertheelementis
required(R)oroptional(O).
Production Applications: Manufacturing 1423Element Description Value
Celltype Mill,mill/turn,andsoon. R
Numberofaxes Thenumberofaxes. R
Tabledirection Horizontal orvertical(forturnor
mill/turn)R
Machinenumberheads 1or2(forturnormill/turn) R
Name Theworkcellname. O
Tooling Addtoolstotheworkcell. O
Tooltable Manipulate thetoolsinatool
table.O
Parameters Theworkcellparameters. O
Thefeatureelementhastwocomplexelements—PRO_E_MFG_PARAMS,
describedinthesectionManufacturing Parameters onpage1420,andPRO_E_
TOOL_TABLE. Thefollowingfigureshowshowthetooltableelementis
constructed.
ToolTableElement
Thefirstthingtonoteisthataworkcellcanhavemultipletooltables,ifithasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOL_TABLE. Thefollowingfigureshowshowthetooltableelementis
constructed.
ToolTableElement
Thefirstthingtonoteisthataworkcellcanhavemultipletooltables,ifithas
morethanonemachinehead.Inthiscase,youcancreateatooltableforeach
head.
Amanufacturing tableismadeupofanarrayofPRO_E_MFG_TABLE_ROW
elements,whichisitselfanarrayofPRO_E_MFG_TABLE_CELL elements.Each
PRO_E_MFG_TABLE_CELL isacompound elementthatcontainstwomore
elements—the celltypeanditsvalue.
1424 Creo®Parametric TOOLKIT User’sGuideThefollowingexamplesshowhowtocreateatooltablewithfivedrillbits,
ranginginsizefromM8toM16.Thetooltableformostworkcells(excluding
CMM)isofthefollowingformat:
POSITION TOOL_ID REGISTER COMMENTS
1 drill_M8 8MM Drill
2 drill_M10 10MM Drill
Forexample,tocreatethefirstrowofthetable,youwoulddefinethefollowing
PRO_E_MFG_TABLE_CELLs:
•Todefinethefirstcellsothepositionofthetoolisindex1,setthevalueofthe
PRO_E_MFG_TABLE_CELL_TYPE toPRO_TOOL_TABLE_INDEX, andset
thevalueofPRO_E_MFG_TABLE_CELL_VALUE totheintegervalue1.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Todefinethefirstcellsothepositionofthetoolisindex1,setthevalueofthe
PRO_E_MFG_TABLE_CELL_TYPE toPRO_TOOL_TABLE_INDEX, andset
thevalueofPRO_E_MFG_TABLE_CELL_VALUE totheintegervalue1.
•Similarly,definethetoolidentifiertobeadrill_M8. Setthecelltype
elementtoPRO_TOOL_TABLE_TOOL_ID, andsetthevaluetoawidestring
ofvalue drill_M8. Becausetheregistercolumnisempty,itcanbeignored.
Tosetthecomments element,setthetypetoPRO_TOOL_TABLE_
COMMENTS, andsetthevaluetoawidestringofvalue“8MMDrill.”
Example5:Creatinga2-AxisLatheWorkcell
ThesamplecodeinUgMfgWcellCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_mfg showshowtoset
upasimple2-axis,horizontal lathe,usingthepreviously createdtooltable.Note
thatboththePRO_E_LATHE_DIR andPRO_E_MACH_NUM_HEADS are
requiredforthisworkcelltype.Alltheotherelementsareoptional.
CreatingOperations
Theelementtreeformanufacturing operations isdescribedintheheaderfile
ProMfgoper.h. Forthisfeature,thefeaturetypeelementisPRO_FEAT_
WORKCELL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatingOperations
Theelementtreeformanufacturing operations isdescribedintheheaderfile
ProMfgoper.h. Forthisfeature,thefeaturetypeelementisPRO_FEAT_
WORKCELL.
Thefollowingtableshowstheelementsofamanufacturing operation. Inthis
table,the“Value”columnspecifieswhethertheelementisrequired(R)or
optional(O).
Element Description Value
Workcell Theidentifieroftheworkcell
featureinwhichtoperformthe
operationR
Machinecoordinate system Theidentifierofthemachining
coordinate systemR
Name Theoperationname O
Comments Theoperationcomments O
Frompoint Thedatumpointfromwhichto
starttheoperationO
Production Applications: Manufacturing 1425Element Description Value
Homepoint Thedatumpointonwhichtoend
theoperationO
Parameters Theoperationparameters O
Thecreationofthefeaturetreeissimple,apartfromthehomeandpointelements.
Thefollowingfigureshowstheelementtreeforthehomepoints.
HomePointElementTree
Inthisexample,thereisafromandhomepointdefinedforeachmachining head.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingfigureshowstheelementtreeforthehomepoints.
HomePointElementTree
Inthisexample,thereisafromandhomepointdefinedforeachmachining head.
Ifthereisonlyonehead,thevalueofthePRO_E_MACH_HEAD elementshould
be1.NotethatthePRO_E_POINT_SEL selectionshouldbeinitialized nottothe
datumpointfeature,buttothedatumpointgeometry.Tofindthisgeometry,call
thefunction ProFeatureGeomitemVisit()).
Example6:CreatinganOperation
ThesamplecodeinUgMfgOperCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_mfg showshowto
createanoperation.
CreatingNCSequences
HeaderfileProNcseq.h describestheelementtreeformanufacturing NC
sequences.
Therearesixsupported NCsequencetypes:
•PRO_NCSEQ_PROF_SUR_MILL—Profile milling,featuretypePRO_FEAT_
MILL
•PRO_NCSEQ_VOL_MILL—V olumemilling,featuretypePRO_FEAT_MILL
•PRO_NCSEQ_CONV_SURF_MILL—Conventional surface,featuretype
PRO_FEAT_MILL
•PRO_NCSEQ_FACE_MILL—Face milling,featuretypePRO_FEAT_MILLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMILL
•PRO_NCSEQ_VOL_MILL—V olumemilling,featuretypePRO_FEAT_MILL
•PRO_NCSEQ_CONV_SURF_MILL—Conventional surface,featuretype
PRO_FEAT_MILL
•PRO_NCSEQ_FACE_MILL—Face milling,featuretypePRO_FEAT_MILL
1426 Creo®Parametric TOOLKIT User’sGuide•PRO_NCSEQ_PREV_TOOL_MILL—Local millingusingprevioustool,
featuretypePRO_FEAT_MILL
•PRO_NCSEQ_HOLEMAKING—Holemaking, typePRO_FEAT_DRILL
Likeworkcells, anNCsequencefeaturehasanumberofnon-redefinable
elements.ForallNCsequences, thePRO_E_NCSEQ_TYPE andPRO_E_NUM_
AXESelementsarenon-redefinable. Forholemaking sequences, thePRO_E_
HOLEMAKING_TYPE, PRO_E_PECK_TYPE, andPRO_E_HOLE_CYCLE_
TYPEelementsarenon-redefinable. Theseelementsarespecifictoholemaking
sequences andneednotbedefinedformillingsequences. Thefollowingtable
showstheelementsofanNCsequence.Inthistable,theValuecolumnspecifies
whethertheelementisrequired(R)oroptional(O).
Element Description Value
Featuretype Thefeaturetype R
Type Thesequencetype R
Operation Operation towhichtoaddtheNC
sequenceRxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhethertheelementisrequired(R)oroptional(O).
Element Description Value
Featuretype Thefeaturetype R
Type Thesequencetype R
Operation Operation towhichtoaddtheNC
sequenceR
Retraction plane Theretractionplane R
Tool Thetool R
Csys Themanufacturing coordinate system R
Parameters Themanufacturing parameters R
Name ThenameoftheNCsequence O
Numberofaxes Thenumberofaxes O
Machinehead Themachinehead O
Fixture Thefixture O
Entitiestobemachined
Surface Thesurface R
Holesorvolume Theholesorvolume R
Startpath Thestartpath R
Endpath Theendpath R
TheretractionplanethatmustbedefinedaspartoftheNCsequencerequiresthe
identifieroftheunderlying geometryofthedatumplane.Toobtainthisidentifier,
visitthedatumplanegeometryitemsusing ProFeatureGeomitemVisit().
Therearealsoanumberofrequiredparameters foreachNCsequencethatmust
bedefined.Forconventional milling,thefollowingparameters arerequired:
•CUT_FEED
•TOLERANCE
•STEP_OVER
•SPINDLE_SPEED
•CLEAR_DIST
Forfacemilling,thefollowingparameters arerequired:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbedefined.Forconventional milling,thefollowingparameters arerequired:
•CUT_FEED
•TOLERANCE
•STEP_OVER
•SPINDLE_SPEED
•CLEAR_DIST
Forfacemilling,thefollowingparameters arerequired:
Production Applications: Manufacturing 1427•CUT_FEED
•STEP_DEPTH
•TOLERANCE
•STEP_OVER
•SPINDLE_SPEED
•CLEAR_DIST
Forholemaking, thefollowingparameters arerequired:
•CUT_FEED
•TOLERANCE
•SPINDLE_SPEED
•CLEAR_DIST
Bothmillingandholemaking featureselementsrequirethattheentities(andsome
associated properties) tobemachinedaresetbyAPIfunctions, ratherthanby
elementtree.Likethestandardelements,thesefunctionsrequireacallto
ProElementAlloc() toreservespacefortheelements.Oncetheelementsare
complete,youcanaddthemtothetreeliketheotherstandardelements.
Note
Currently,using ProFeatureElemtreeExtract()with NCsequences
yieldsanelementtreewithoutholesorsurfaceelements.Inotherwords,there
isnowaytoretrieveholesetorsurfaceinformation.
Milling-Specific Functions
Functions Introduced:
•ProNcseqElemSurfaceAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyieldsanelementtreewithoutholesorsurfaceelements.Inotherwords,there
isnowaytoretrieveholesetorsurfaceinformation.
Milling-Specific Functions
Functions Introduced:
•ProNcseqElemSurfaceAdd()
•ProNcseqElemMillsurfSet()
•ProNcseqElemSurfaceflipSet()
AfteryouallocatethesurfaceelementwithProElementAlloc(), youcanadd
thesurfacetobemilledtotheelementusingthefunction
ProNcseqElemSurfaceAdd().
Ifthemodelcontainsamillingsurface,youcansetthewholesurfaceintheNC
sequenceusing ProNcseqElemMillsurfSet(). Tocontrolitsorientation,
callProNcseqElemSurfaceflipSet().
1428 Creo®Parametric TOOLKIT User’sGuideExample7:AddingSurfaces
ThesamplecodeinUgMfgSrfAdd.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_mfg showshowto
usethefunction ProNcseqElemSurfaceAdd().
Holemaking-Specific Functions
Toaddholesetstoanelementtree,first,obtaintheholesetnumberbycallingthe
function ProNcseqElemHolesetAdd(). Thisholesetisusedtoreferencea
setofholeswiththesameproperties, includingdepth,direction,countersinkxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction ProNcseqElemHolesetAdd(). Thisholesetisusedtoreferencea
setofholeswiththesameproperties, includingdepth,direction,countersink
diameter,andsoon.Notethatfeatureelement PRO_E_HOLESETS haslimited
supportfordrillpointsets,butallowstheusertoidentifyandtodeleteexisting
drillpointsetsinafeature,ortooverwritedrillpointsetswithdrillaxessets.
Forexample,youmightwantonesetofholestobecountersunk toadiameterof
10mm,andanothersetto14mm.Becausethesecountersinking operations are
donewiththesametool,theyshouldbeinthesameNCsequence.Becausethe
countersink diameterisdifferentforeach,youshouldcreatetwoholesets.
Note
Thefollowingfunctions(andtheelementtreePRO_E_HOLES) existinPro/
TOOLKITRevisions 20andlateronlytoprovidebackwards compatibility .
UsethemorecompleteandpowerfulelementtreePRO_E_HOLESETS for
holemaking functions.
•ProNcseqElemHolesetAdd()
•ProNcseqElemHolesetDepthTypeSet()
•ProNcseqElemHolesetDepthBySet()
•ProNcseqElemHolesetDepthSet()
•ProNcseqElemHolesetStartSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxholemaking functions.
•ProNcseqElemHolesetAdd()
•ProNcseqElemHolesetDepthTypeSet()
•ProNcseqElemHolesetDepthBySet()
•ProNcseqElemHolesetDepthSet()
•ProNcseqElemHolesetStartSet()
•ProNcseqElemHolesetEndSet()
•ProNcseqElemHolesetDirectionSet()
•ProNcseqElemHolesetAxisAdd()
•ProNcseqElemHolesetDrillpartAdd()
•ProNcseqElemHolesetCsinkdiamSet()
Production Applications: Manufacturing 1429CreatingMaterialRemovalVolumes
InCreoParametric, materialremovalfeaturescanbecreatedbydefining
geometrytorepresentthevolumeremoved,ortheycanbecalculated
automatically fromtheNCsequence.ThecurrentreleaseofCreoParametric
TOOLKITsupportsautomatic materialremovalfeaturecreationonly.
Thefeaturetreeisverysimple,asshowninthefollowingfigure.
FeatureTree
SetthePRO_E_FEATURE_TYPE valuetoPRO_FEAT_MAT_REMOVAL, andset
thePRO_E_REF_SEQ totheidentifieroftheNCsequencefeaturefromwhichto
createthematerialremovalvolume.
Example8:CreatingaConventional MillingSequence
ThesamplecodeinUgMfgMillSeqCreate.c locatedat<creo_toolkit_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreatethematerialremovalvolume.
Example8:CreatingaConventional MillingSequence
ThesamplecodeinUgMfgMillSeqCreate.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_userguide/ptu_mfg showshowto
createamillingfeatureusinganelementtree.
AnalyzingManufacturing Features
Functions Introduced:
•ProMfgoperT oolpathDisplay()
•ProNcseqT oolpathDisplay()
•ProNcseqNumGet()
•ProNcseqCutTi meGet()
•ProNcseqRemovedV olGet()
Youcanusethefunctions ProMfgoperToolpathDisplay() and
ProNcseqToolpathDisplay() toinvokethecorresponding toolpathforthe
specifiedobject.Thefunction ProNcseqNumGet() returnsthenumberofthe
specifiedNCsequence.
Thefinaltwofunctionsaccessthemachining timeandthevolumeofmaterial
removedduringthemachining sequence.
1430 Creo®Parametric TOOLKIT User’sGuide62
Production Applications:
Customized ToolDatabase
Overview..............................................................................................................1432xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications:
Customized ToolDatabase
Overview..............................................................................................................1432
SettinguptheDatabaseandCustomSearchParameters ........................................1432
RegisteringtheExternalDatabase..........................................................................1433
QueryingtheExternalDatabase.............................................................................1434
ReturningtheSearchResults.................................................................................1436
CreoParametric TOOLKITsupportsintegration oftheCreoNCtoolsearch
command withexternaltooldatabases. Thesefunctionsandcallbacksallowusers
tocreatequeriesforthird-party toolmanagerapplications. Theseapplications
queryexternaldatabases(youcanspecifymorethanone)andreturnlogicaltool
datatoCreoParametric.
1431Overview
CreoParametric TOOLKITsuppliesfunctionsthatallowintegration oftheToolxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxqueryexternaldatabases(youcanspecifymorethanone)andreturnlogicaltool
datatoCreoParametric.
1431Overview
CreoParametric TOOLKITsuppliesfunctionsthatallowintegration oftheTool
Selectionuserinterfacewithathird-party toolmanagerapplication. This
integration consistsofincludesthreeareasoffunctionality:
•Theabilitytopreregister oneormoredatabaseswiththeCreoParametric user
interface,andtoassigncustomsearchparameters toeachdatabase.Custom
searchparameters areitemswhichwouldnotbeincludednativelyinsideof
CreoParametric, butwhichcouldbeusedtoinitiateornarrowthetoolsearch.
•Callbackfunctions, thatareinvokedwhentheuseroptstosearchinsidethe
tooldatabase.Withinthecallbackfunctions, theapplication canextractthe
nativeandnon-negative searchparameters andusetheseparameters toexecute
thesearch.
•TheabilitytoreturnalistofdetailedresultstoCreoParametric tobe
displayedintheresultsdialogbox.
SettinguptheDatabaseandCustom
SearchParameters
Thefunctionsdescribedinthissectionenableyoutosetuptheexternaldatabasexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplayedintheresultsdialogbox.
SettinguptheDatabaseandCustom
SearchParameters
Thefunctionsdescribedinthissectionenableyoutosetuptheexternaldatabase
andcustomsearchparameters supported bythedatabase.
Functions Introduced:
•ProMfgdbDataAlloc()
•ProMfgdbDataDbnameAdd()
•ProMfgdbNameCr eate()
•ProMfgdbSear choptCreate()
•ProMfgdbDataSearc hoptAdd()
•ProMfgdbSear choptApplicDataAdd()
•ProMfgdbSear choptAllowedV alueAdd()
Thefunction ProMfgdbDataAlloc() allocatesaProMfgdbData handle
containing databaseandsearchinformation.
Thefunction ProMfgdbDataDbnameAdd() addsthenameofanexternaltool
databasetothehandleallocatedbyProMfgdbDataAlloc(). Tospecifymore
thanonedatabase,makemultiplecallstoProMfgdbDataDbnameAdd().
Thefunction ProMfgdbNameCreate() allocatesmemoryforahandle
containing thenameofagroupintowhichsearchoptionsareorganized.
1432 Creo®Parametric TOOLKIT User’sGuideThefunction ProMfgdbSearchoptCreate() allocatesandinitializesaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontaining thenameofagroupintowhichsearchoptionsareorganized.
1432 Creo®Parametric TOOLKIT User’sGuideThefunction ProMfgdbSearchoptCreate() allocatesandinitializesa
structureforacustomsearchoption.Itrequiresthattheoptionbeassignedtoa
group,typicallythiswouldbeallocatedfromProMfgdbNameCreate().
Thefunction ProMfgdbDataSearchoptAdd()adds acustomsearchoption
totheProMfgdbData handle.
Thefunction ProMfgdbSearchoptApplicDataAdd() specifiesthe
categoryandobjecttypeforwhichacustomsearchoptionisvalid.Callthis
functionatleastonceforeachoption.Assignanoptiontomultiplecategories or
objecttypeswithmultiplecallstothisfunction.
Thefunction ProMfgdbSearchoptAllowedValueAdd() addsvalidvalues
availableforasearchoption.Assignmultiplevalueswithmultiplecallstothis
function.
Registering theExternalDatabase
ThefunctiondescribedinthissectionallowsyoutoregistertheCreoParametric
TOOLKITapplication tosearchtheexternaltooldatabase.
FunctionIntroduced:
•ProMfgdbRegister()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRegistering theExternalDatabase
ThefunctiondescribedinthissectionallowsyoutoregistertheCreoParametric
TOOLKITapplication tosearchtheexternaltooldatabase.
FunctionIntroduced:
•ProMfgdbRegister()
Thefunction ProMfgdbRegister() registersanexternaldatabasewithCreo
Parametric. YoushouldsupplytheProMfgdbData handleyoucreatedforyour
externaldatabase(s).
Thefunctionalsorequiresthatyousupplythreecallbacks:
•AProMfgdbLoginAction, whichiscalledbyCreoParametric whenthe
userattemptstoinitiateaccesstotheexternaldatabase.
•AProMfgdbLogoffAction, whichiscalledwhentheuserisreadyto
closetheconnection totheexternaldatabase.
•AProMfgdbSearchAction, whichprovidesthecustomimplementation
forthesearch,andprovidestheresultsbacktoCreoParametric.
Finally,thefunctionrequiresthatyousupplytheobjectcategory.Althoughthere
areseveralcategories listedforthisfunction,currentlythefunctionsupportsonly
thefollowingcategory:
•PROMFGDBCAT_CUTTING_TOOL
○Whenoneormoreexternaldatabaseshavebeenregistered withCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxareseveralcategories listedforthisfunction,currentlythefunctionsupportsonly
thefollowingcategory:
•PROMFGDBCAT_CUTTING_TOOL
○Whenoneormoreexternaldatabaseshavebeenregistered withCreo
Parametric, asearchiconisdisplayedintheToolSetupdialogboxinCreo
Parametric asshowninthefollowingfigure.Clickthesearchiconto
invoketheCuttingToolSearchdialogbox.
Production Applications: Customized ToolDatabase 1433QueryingtheExternalDatabase
WhenusersinvoketheSearchicontoconstructaquery,theywillbepresented
withtheCuttingToolSearchdialog,asshowninthefollowingfigure.Withinthe
dialog,userscanspecifythequeryparameters, valuesandgroupthequery
constraints withlogicaloperators. Whentheusercompletes thequeryand
executestheFindcommand, CreoParametric willcalltheCreoParametric
TOOLKITapplication withthedatafromthisdialog.
1434 Creo®Parametric TOOLKIT User’sGuideThefunctionsdescribedinthissectionenableyoutoconverttheCreoParametric
queriesintoaformatthatcanbeusedwiththeexternaldatabase.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1434 Creo®Parametric TOOLKIT User’sGuideThefunctionsdescribedinthissectionenableyoutoconverttheCreoParametric
queriesintoaformatthatcanbeusedwiththeexternaldatabase.
CreoParametric tooldatabasequeriesarearrangedinatreeformat,asshownin
thefollowingfigure.Leafnodescontainexpressions, forexample,unitsandtype.
Functions Introduced:
•ProMfgdbQuerynodeIsLeaf()
•ProMfgdbQuerynodeLeftChildGet()
•ProMfgdbQuerynodeRightChildGet()
•ProMfgdbQuerynodeLogicOperGet()
•ProMfgdbQuerynodeExprGet()
•ProMfgdbQueryT argetGet()
Production Applications: Customized ToolDatabase 1435•ProMfgdbExprNameGet()
•ProMfgdbExprCategoryGet()
•ProMfgdbExprV alueGet()
•ProMfgdbExprV alueT ypeGet()
•ProMfgdbExprCompopGet()
ProMfgdbQuerynodeIsLeaf()
Thefunctions ProMfgdbQuerynodeLeftChildGet() and
ProMfgdbQuerynodeRightChildGet() returneithertheleftorright
branchofaquerynode,respectively .
ProMfgdbQuerynodeLogicOperGet()ProMfgdbQuerynodeI
sLeaf()
ProMfgdbQuerynodeExprGet()
ProMfgdbQueryTargetGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbranchofaquerynode,respectively .
ProMfgdbQuerynodeLogicOperGet()ProMfgdbQuerynodeI
sLeaf()
ProMfgdbQuerynodeExprGet()
ProMfgdbQueryTargetGet()
Afterthequeryfunctionsreturnexpressions fromaleafnode,yourCreo
Parametric TOOLKITapplication cangatherinformation containedinthe
expressions. Thefollowingfunctionsreturnattributesandoperatorscontainedin
thereturnedexpressions ofaleafnode.
Thefunction ProMfgdbExprNameGet() returnsthenameoftheattribute
containedinthespecifiedexpression. Thefunction
ProMfgdbExprCategoryGet() returnsthecategoryoftheattribute
containedinthespecifiedexpression. Thefunctions
ProMfgdbExprValueGet() andProMfgdbExprValueTypeGet()
returnthevalueandvaluetypecontainedinthespecifiedexpression, respectively .
Thefunction ProMfgdbExprCompopGet() returnsthecomparison operator
(=,<,>,andsoon)containedinthespecifiedexpression.
ReturningtheSearchResults
Thefunctionsinthissectionenableyoutopopulatetheresultsofthequerytothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(=,<,>,andsoon)containedinthespecifiedexpression.
ReturningtheSearchResults
Thefunctionsinthissectionenableyoutopopulatetheresultsofthequerytothe
externaldatabaseandpassthembacktoCreoParametric sothatCreoParametric
willdisplaythemappropriately intheresultswindow.
Functions Introduced:
•ProMfgdbMatchAlloc()
•ProMfgdbMatchParamAdd()
Usethefunction ProMfgdbMatchAlloc() toallocatememoryforthe
structureusedtostoreamatchtothequery.
Thefunction ProMfgdbMatchParamAdd() addsaparameter tothematch
structure.Makemultiplecallstothisfunctiontoaddmultipleparameters tothe
match.
1436 Creo®Parametric TOOLKIT User’sGuideAnexampleoftheresultspassedbackfromadatabasequeryisshowninthe
followingfigure:
Production Applications: Customized ToolDatabase 143763
Production Applications: CreoNC
Sequences, Operations andWork
Centers
Overview..............................................................................................................1440xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNC
Sequences, Operations andWork
Centers
Overview..............................................................................................................1440
ElementTrees:RoughingStep...............................................................................1440
ElementTrees:Reroughing Step............................................................................1445
ElementTrees:FinishingStep................................................................................1451
ElementTrees:CornerFinishingStep.....................................................................1455
ElementTrees:3–AxisTrajectoryMillingStep.........................................................1461
Manufacturing 2–AxisCurveTrajectoryMillingStep.................................................1467
ElementTrees:ManualCycleStep.........................................................................1472xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:ManualCycleStep.........................................................................1472
ElementTrees:ThreadMilling................................................................................1478
ElementTrees:TurningStep..................................................................................1494
ElementTrees:ThreadTurningStep.......................................................................1500
ElementTrees:CreoNCOperationDefinition.........................................................1505
ElementTrees:WorkcellDefinition.........................................................................1510
ElementTrees:Manufacturing MillWorkcell............................................................1513
ElementTrees:Manufacturing Mill/TurnWorkcell.....................................................1517
ElementTrees:Manufacturing LatheWorkcell.........................................................1525xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:Manufacturing LatheWorkcell.........................................................1525
ElementTrees:Manufacturing CMMWorkcell.........................................................1529
ElementTrees:ProfileMillingStep.........................................................................1531
ElementTrees:FaceMillingStep...........................................................................1538
ElementTrees:FixtureDefinition............................................................................1547
Manufacturing Holemaking Step.............................................................................1549
ShutoffSurfaceFeatureElementTree...................................................................1588
ElementTrees:Manufacturing RoundandChamfer.................................................1591
ElementTrees:EngravingStep..............................................................................1598xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementTrees:EngravingStep..............................................................................1598
ElementTrees:Manufacturing CutlineMillingSequence..........................................1606
ElementTrees:Manufacturing DrillGroupFeature...................................................1622
Manufacturing VolumeMillingFeature....................................................................1628
1438 Creo®Parametric TOOLKIT User’sGuideElementTrees:SkirtFeature..................................................................................1635
Sub-Element Trees:CreoNCSteps........................................................................1643
ThischapterdescribestheCreoParametric TOOLKITsupportforCreoNC
sequences.
Production Applications: CreoNCSequences, Operations andWorkCenters 1439Overview
ThissectiondescribestheCreoParametric TOOLKITfunctionsthatenableyouto
accessthefollowingtypesofmanufacturing featuresofCreoNCSequences,
Operations andWorkCenters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThissectiondescribestheCreoParametric TOOLKITfunctionsthatenableyouto
accessthefollowingtypesofmanufacturing featuresofCreoNCSequences,
Operations andWorkCenters.
CreoNCStep HeaderFile
Roughing ProMfgFeatRoughing.h
Reroughing ProMfgFeatReroughing.h
Finishing ProMfgFeatFinishing.h
Corner Finishing ProMfgFeatCornerFinishing.h
2–Axis Curve Trajectory Milling ProMfgFeat2xCurvTraj.h
3–Axis Trajectory Milling ProMfgFeatTrajectory.h
Profile Milling ProMfgFeatProfMilling.h
Manual Cycle ProMfgFeatManualCycle.h
Thread Milling ProMfgFeatThreadMilling.h
Area Turning ProMfgFeatTurning.h
Groove Turning ProMfgFeatTurning.h
Profile Turning ProMfgFeatTurning.h
Face Milling ProMfgFeatFacing.h
Creo NCOperation Definition ProMfgFeatOperation.h
Workcell Definition ProMfgFeatWcellWedm.h
ProMfgFeatWcellMill.h
ProMfgFeatWcellMillTurn.h
ProMfgFeatWcellLathe.h
ProMfgFeatWcellCmm.h
Fixture Definition ProMfgFeatFixture.h
Thread Turning ProMfgFeatTurnThread.h
Holemaking ProMfgFeatHolemaking.hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMfgFeatWcellMillTurn.h
ProMfgFeatWcellLathe.h
ProMfgFeatWcellCmm.h
Fixture Definition ProMfgFeatFixture.h
Thread Turning ProMfgFeatTurnThread.h
Holemaking ProMfgFeatHolemaking.h
Shut-off Surface Feature ProMoldShutSrf.h
Round andChamfer ProMfgFeatRoundChamferMilling.h
Engraving ProMfgFeatEngraving.h
Cutline Milling ProMfgFeatCutlineMilling.h
Drill Group Feature ProMfgFeatDrillGroup.h
ElementTrees:RoughingStep
Thissectiondescribeshowtoconstructandaccesstheelementtreeforamilling
roughingfeature.Italsodescribeshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
1440 Creo®Parametric TOOLKIT User’sGuideTheRoughingFeatureElementTree:
Theelementtreeforthemillingroughingsequenceisdocumented intheheader
fileProMfgFeatRoughing.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1441ElementTreeforRoughingfeature
ThefollowingtabledescribestheelementsintheelementtreefortheRoughing
feature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1441ElementTreeforRoughingfeature
ThefollowingtabledescribestheelementsintheelementtreefortheRoughing
feature.
1442 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
ThedefaultvalueisRoughing_
1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_NCSEQ_ROUGHVOL_MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. Forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Production Applications: CreoNCSequences, Operations andWorkCenters 1443ElementID DataType Description
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_CMP_MILL_WIND Compound Mandatory compound element.
Specifiesthemillwindow
compound definition. Formore
information, refertothesection
SurfaceCollection withMill
Windowonpage1651.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypeforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypefor
thiselementis:PRO_TM_TYPE_
AUTOMATIC_CUT.
Formoreinformation, refertothe
sectionToolMotion—AutoCut
onpage1737.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocessxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
1444 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:Reroughing Step
Thissectiondescribeshowtoconstructandaccesstheelementtreeforamilling
reroughing feature.Italsodescribeshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
Production Applications: CreoNCSequences, Operations andWorkCenters 1445TheReroughing FeatureElementTree:
Theelementtreeforthemillingreroughing sequenceisdocumented intheheaderxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1445TheReroughing FeatureElementTree:
Theelementtreeforthemillingreroughing sequenceisdocumented intheheader
fileProMfgFeatReroughing.h, andisasshowninthefollowingfigure:
1446 Creo®Parametric TOOLKIT User’sGuideElementTreeforReroughing feature
ThefollowingtabledescribestheelementsintheelementtreefortheReroughing
feature.
Production Applications: CreoNCSequences, Operations andWorkCenters 1447ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence
featurename.Thedefaultvalueis
Re-roughing_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequencetype.
Thevalidvalueforthiselementis
PRO_NCSEQ_REROUGH_MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.SpecifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofCreoNCsequencetype.
Thevalidvalueforthiselementis
PRO_NCSEQ_REROUGH_MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
1448 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_CMP_MILL_WIND Compound Mandatory compound element.
Specifiesthemillwindow
compound definition. Formore
information, refertothesection
SurfaceCollection withMill
Windowonpage1651.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_CMP_MILL_WIND Compound Mandatory compound element.
Specifiesthemillwindow
compound definition. Formore
information, refertothesection
SurfaceCollection withMill
Windowonpage1651.
PRO_E_MFG_PREV_SEQ PRO_VALUE_TYPE_
SELECTIONMandatory Element.Specifiesthe
selectionsequencefeaturethat
requiresremovalofleftover
material.Thevalidvaluesforthis
elementare:
•VolumeMilling
•ProfileMilling
•Re-roughing sequence
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypefor
thiselementisPRO_TM_TYPE_
AUTOMATIC_CUT. Formore
information, refertothesection
ToolMotion—AutoCutonpage
1737.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowstoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_ Optionalelement.Specifiesthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1449ElementID DataType Description
SELECTION referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
ThiselementisusedonlyinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining
step..
Note
Thiselementisusedonlyin
specialprocessapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining
step..
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
1450 Creo®Parametric TOOLKIT User’sGuideElementTrees:FinishingStep
Thissectiondescribeshowtoconstructandaccesstheelementtreeformilling
Finishingfeature.Italsodescribeshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
TheFinishingFeatureElementTree:
TheelementtreeforthemillingFinishingsequenceisdocumented intheheader
fileProMfgFeatFinishing.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1451ElementTreeforFinishingfeature
ThefollowingtabledescribestheelementsintheelementtreefortheFinishing
feature.
1452 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature.
1452 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueis
Finishing_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_NCSEQ_CVNC_FINISH_
MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSpecifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Production Applications: CreoNCSequences, Operations andWorkCenters 1453ElementID DataType Description
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_CMP_MILL_WIND Compound Mandatory compound element.
Specifiesthemillwindow
compound definition. Formore
information, refertothesection
SurfaceCollection withMill
Windowonpage1651.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypefor
thiselementis:PRO_TM_TYPE_
AUTOMATIC_CUT.
Formoreinformation, refertothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSpecifiesthetoolmotion
compound specifications. The
applicable toolmotiontypefor
thiselementis:PRO_TM_TYPE_
AUTOMATIC_CUT.
Formoreinformation, refertothe
sectionToolMotion—AutoCut
onpage1737.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
1454 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtimeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:CornerFinishingStep
Thissectiondescribeshowtoconstructandaccesstheelementtreeforacorner
finishingstep.Italsodescribeshowtocreate,redefine,andaccesstheproperties
ofthesefeatures.
Production Applications: CreoNCSequences, Operations andWorkCenters 1455TheCornerFinishingElementTree:
Theelementtreeforthecornerfinishingsequenceisdocumented intheheader
fileProMfgFeatCornerFinishing.h, andisasshowninthefollowing
figure:
1456 Creo®Parametric TOOLKIT User’sGuideElementTreeforCornerFinishingStepxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfileProMfgFeatCornerFinishing.h, andisasshowninthefollowing
figure:
1456 Creo®Parametric TOOLKIT User’sGuideElementTreeforCornerFinishingStep
Production Applications: CreoNCSequences, Operations andWorkCenters 1457ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
ThedefaultvalueisCorner_
Finishing_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_NCSEQ_CVNC_CORN_
MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFormoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
1458 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_CMP_MILL_WIND Compound Mandatory compound element.
Specifiesthemillwindow
compound definition. Formore
information, refertothesection
SurfaceCollection withMill
Windowonpage1651.
PRO_E_MFG_PREV_TOOL_ID PRO_VALUE_TYPE_WSTRING Optionalelement.Nameofcutting
tool(toolid)whichwillbeused
forcalculating theremainder
material.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSurfaceCollection withMill
Windowonpage1651.
PRO_E_MFG_PREV_TOOL_ID PRO_VALUE_TYPE_WSTRING Optionalelement.Nameofcutting
tool(toolid)whichwillbeused
forcalculating theremainder
material.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypefor
thiselementis:PRO_TM_TYPE_
AUTOMATIC_CUT. Formore
information, refertothesection
ToolMotion—AutoCutonpage
1737.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxposition.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
Production Applications: CreoNCSequences, Operations andWorkCenters 1459ElementID DataType Description
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
1460 Creo®Parametric TOOLKIT User’sGuideElementTrees:3–AxisTrajectoryMilling
Step
Thissectiondescribeshowtoconstructandaccesstheelementtreeforthe3Axisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1460 Creo®Parametric TOOLKIT User’sGuideElementTrees:3–AxisTrajectoryMilling
Step
Thissectiondescribeshowtoconstructandaccesstheelementtreeforthe3Axis
TrajectoryMillingfeature.Italsodescribeshowtocreate,redefine,andaccessthe
properties ofthesefeatures.For2-axiscurvetrajectorymillingstep,refertothe
sectionManufacturing 2–AxisCurveTrajectoryMillingSteponpage1467.
Theelementtreeforthe3axistrajectorymillingsequenceisdocumented inthe
headerfileProMfgFeatTrajectory.h, andisasshowninthefollowing
figure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1461ElementTreefor3AxisTrajectoryMillingfeature
Thefollowingtabledescribestheelementsintheelementtreeforthe3Axis
TrajectoryMillingfeature.
1462 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueis
Trajectory_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequencetype.
Thevalidvalueforthiselement
isPRO_NCSEQ_TRAJ_MILL_
STEP.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_MFG_SEQ_NUM_AXES_
OPTPRO_VALUE_TYPE_INT Specifiesthenumberofaxesfor
milling.Youcanspecify3,4,or5
axes.
Note
Youcansetthiselementto5
onlyiftheworkcenterallows
5-axismachining.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumthatwillbeusedasthe
coordinate systemfortheCreoNC
sequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.SpecifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSpecifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
Production Applications: CreoNCSequences, Operations andWorkCenters 1463ElementID DataType Description
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefaultxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONOptionalcompound element.
Specifiesthechecksurfaces
compound definition. Formore
information, refertothesection
CheckingSurfacesonpage1658.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypesfor
thiselementare:
•PRO_TM_TYPE_CURVE
_TRAJECTORY. Formore
information, refertothe
sectionToolMotion—Curve
Trajectoryonpage1711.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompound specifications. The
applicable toolmotiontypesfor
thiselementare:
•PRO_TM_TYPE_CURVE
_TRAJECTORY. Formore
information, refertothe
sectionToolMotion—Curve
Trajectoryonpage1711.
•PRO_TM_TYPE_SURF_
TRAJECTORY. Formore
information, refertothe
sectionToolMotion—
SurfaceTrajectoryonpage
1722.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,
refertothesectionTool
Motion—FollowCutonpage
1741.
•PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionTool
Motion—FollowCurveon
page1665.
•PRO_TM_TYPE_GOTO
1464 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
_POINT.Formore
information, refertothe
sectionToolMotion—GoTo
Pointonpage1667.
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
•PRO_TM_TYPE_GOHOME.
Formoreinformation, referto
thesectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_PLUNGE.
Formoreinformation, referto
thesectionToolMotion—
Plungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_PLUNGE.
Formoreinformation, referto
thesectionToolMotion—
Plungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—Go
Retractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothe
sectionToolMotion—
TangentApproach onpage
1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionTool
Motion—TangentExiton
page1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—
NormalApproach onpage
1681.
•PRO_TM_TYPE_NORMAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—NormalExiton
page1684.
•PRO_TM_TYPE_LEAD_IN.
Formoreinformation, referto
thesectionToolMotion—
LeadInonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—
LeadOutonpage1686.
Production Applications: CreoNCSequences, Operations andWorkCenters 1465ElementID DataType Description
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
information, refertothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLeadOutonpage1686.
Production Applications: CreoNCSequences, Operations andWorkCenters 1465ElementID DataType Description
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—Helical
Approach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXITFormoreinformation,
refertothesectionTool
Motion—HelicalExiton
page1691.
•PRO_TM_TYPE_RAMP_
EXIT.Formoreinformation,
refertothesectionTool
Motion—RampExitonpage
1731.
•PRO_TM_TYPE_CONNECT.
Formoreinformation, referto
thesectionToolMotion—
Connectonpage1733.
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothe
sectionToolMotion—CL
Command onpage1738.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisitexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
1466 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
ThiselementallowsyoutoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
Manufacturing 2–AxisCurveTrajectory
MillingStep
Theelementtreeforthe2–axiscurvetrajectorysequenceisdocumented inthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
Manufacturing 2–AxisCurveTrajectory
MillingStep
Theelementtreeforthe2–axiscurvetrajectorysequenceisdocumented inthe
headerfileProMfgFeat2xCurvTraj.h, andisasshowninthefollowing
figure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1467Thefollowingtabledescribestheelementsintheelementtreeforthe2–axiscurve
trajectorysequencefeature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
sequencefeaturename.The
defaultvalueisCurve_
Trajectory_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequencetype.
Thevalidvalueforthiselement
isPRO_NCSEQ_FF_TRAJ_
1468 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofCreoNCsequencetype.
Thevalidvalueforthiselement
isPRO_NCSEQ_FF_TRAJ_
1468 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
coordinate systemdatumfeatureto
beusedasasequencecoordinate
system.
PRO_E_RETR_SURF Compound Mandatory element.Specifiesthe
retractcompound definition. The
elementtreefortheRetract
Elementsisdefinedinthesection
RetractElementsonpage1644.
Formoreinformation, refertothe
sectionRetractElementsformore
information ontheelementtree.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory element.Specifiesthe
toolreferencecompound
definition. Theelementtreeforthe
ToolReference isdefinedinthe
headerfile
ProMfgElemToolRef.h. For
moreinformation, refertothe
sectionToolReference onpage
1647formoreinformation onthe
elementtree.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofsitewithdefaultvalues
formanufacturing parameters.
Note
Thenameisgoingtobe
ignoredifsitedoesnotexist
inthemanufacturing model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxformanufacturing parameters.
Note
Thenameisgoingtobe
ignoredifsitedoesnotexist
inthemanufacturing model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
Production Applications: CreoNCSequences, Operations andWorkCenters 1469ElementID DataType Description
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_LOOP_SURF_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Selectthe
surfacesforwhichtheloopsof
edgesmustbecollected.The
collectedloopsofedgesare
machined.
PRO_E_MFG_TRAJ_CRV Compound Mandatory element.Specifiesthe
machining curvescompound
definition.
PRO_E_STD_CURVE_
COLLECTION_APPLCurve Collection Mandatory element.Specifiesthe
curvecollection.
PRO_E_FF_TRAJ_FLIP_OPT PRO_VALUE_TYPE_INT Optionalelement.Flipsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmachining curvescompound
definition.
PRO_E_STD_CURVE_
COLLECTION_APPLCurve Collection Mandatory element.Specifiesthe
curvecollection.
PRO_E_FF_TRAJ_FLIP_OPT PRO_VALUE_TYPE_INT Optionalelement.Flipsthe
machining directionofthetool.
Thevalidvaluesforthiselement
are:
•PRO_B_TRUE—Specifies that
thedefaultdirectiononthe
curvewillbeused.
•PRO_B_FALSE—Specifies
thattheoppositedirectionon
thecurvewillbeused.
PRO_E_MFG_OFFSET Compound Optionalelement.Specifiesthe
offsetcompound definition.
PRO_E_MFG_OFFSET_CUT PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
offsetcut.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE—T ooloffset
willbeapplied.
•PRO_B_FALSE—T ooloffset
willnotbeapplied.
PRO_E_MFG_MAT_TO_RMV PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
materialside.Thevalidvaluesfor
thiselementare:
•PRO_MFG_DIR_SAME
—Specifies thedefaultside
willbeused.
•PRO_MFG_DIR_
OPPOSITE—Specifies that
thedefaultsidewillbeflipped.
PRO_E_MFG_DRV_SRF_DIR PRO_VALUE_TYPE_INT Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MFG_DIR_SAME
—Specifies thedefaultside
willbeused.
•PRO_MFG_DIR_
OPPOSITE—Specifies that
thedefaultsidewillbeflipped.
PRO_E_MFG_DRV_SRF_DIR PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
flipdriveSurfacedirection.The
validvaluesforthiselementare:
•PRO_B_FALSE—Specifies
1470 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
thatthedefaultdirectiononthe
drivesurfacewillbeused.
•PRO_B_TRUE—Specifies that
theoppositedirectiononthe
drivesurfacewillbeused.
PRO_E_MFG_START_HEIGHT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionoftheplanewhere
machining willbegin.
PRO_E_MFG_HEIGHT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiessingle
selectionoftheplaneforthetool
tiptofollow.
PRO_E_TOOL_MTN_ARR Array Optionalelement.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Optionalelement.Specifiesthe
toolmotioncompound
specification.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.AllowstoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_TOOL_MTN Compound Optionalelement.Specifiesthe
toolmotioncompound
specification.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Allowsto
startmachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Allowsto
endmachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Specifiesthe
arrayofidsofprerequisite
sequences. Theelementtreefor
theSequencePrerequisites is
definedintheheaderfile
ProMfgElemPrerequisi
te.h.Formoreinformation, refer
tothesectionSequence
Prerequisites onpage1653for
moreinformation ontheelement
tree.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometryreferences to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxplane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometryreferences to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
viewname.Itallowsyouto
associatespecificviewwitha
machining step.
Production Applications: CreoNCSequences, Operations andWorkCenters 1471ElementID DataType Description
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.It
allowsyoutoassociateaspecific
simplified representation witha
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimate.Itallowsyouto
specifytimeestimateforthe
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtimeestimate.Itallowsyouto
specifytimeestimateforthe
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimate.Itallowsyouto
specifycostestimateforthe
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtime.Itallowsyouto
specifyactualtimeforthe
machining step
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:ManualCycleStep
Thissectiondescribeshowtoconstructandaccesstheelementtreeformanual
millingcyclefeature.Italsodescribeshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
1472 Creo®Parametric TOOLKIT User’sGuideTheManualCycleStepFeatureElementTree:
Theelementtreeforthemanualcyclestepfeatureisdocumented intheheaderfile
ProMfgFeatManualCycle.h, andisasshowninthefollowingfigure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementtreeforthemanualcyclestepfeatureisdocumented intheheaderfile
ProMfgFeatManualCycle.h, andisasshowninthefollowingfigure:
ElementTreeforManualCycleStepfeature
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
Production Applications: CreoNCSequences, Operations andWorkCenters 1473ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valuesforthiselementare:
•PRO_FEAT_MILL— For
millingmanualcycle.
•PRO_FEAT_TURN— For
turningmanualcycle.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
ThedefaultvalueisManual_
Cycle_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvaluesforthiselementare:
•PRO_SEQ_MANUAL_
CYCLE_MILL— Formilling
manualcycle.
•PRO_SEQ_MANUAL_
CYCLE_TURN— Forturning
manualcycle.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCYCLE_MILL— Formilling
manualcycle.
•PRO_SEQ_MANUAL_
CYCLE_TURN— Forturning
manualcycle.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_Creo NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Thiscompound elementspecifies
retractdefinition. Formore
information, refertothesection
RetractElementsonpage1644
Note
Thiselementismandatory
formillingmanualCreoNC
sequences andisignoredfor
turningmanualsequences.
.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, refertoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdifferentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1474 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
Note
Thiselementisoptionalfor
millingmanualsequences
andisignoredforturning
manualsequences.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypesfor
thiselementare:
•PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionTool
Motion—FollowCurveon
page1665.
•PRO_TM_TYPE_GOTO
_POINT.Formore
information, refertothe
sectionToolMotion—GoTo
Pointonpage1667.
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
Production Applications: CreoNCSequences, Operations andWorkCenters 1475ElementID DataType Description
•PRO_TM_TYPE_GOTO_
SURFACE— Thistoolmotion
typeisformillingmanual
cycleonly.Formore
information, refertothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_TM_TYPE_GOTO_
SURFACE— Thistoolmotion
typeisformillingmanual
cycleonly.Formore
information, refertothe
sectionToolMotion—GoTo
Surfaceonpage1693.
•PRO_TM_TYPE_GOTO_
AXIS
—Thistoolmotiontypeisfor
millingmanualcycleonly.For
moreinformation, refertothe
sectionToolMotion—GoTo
Axisonpage1695.
•PRO_TM_TYPE_GOHOME.
Formoreinformation, referto
thesection Tool Motion —
GoHome onpage 1675.
•PRO_TM_TYPE_CONNECT.
Formoreinformation, referto
thesectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_PLUNGE—
Thistoolmotiontypeisfor
millingmanualcycleonly.For
moreinformation, refertothe
sectionToolMotion—Plunge
onpage1743.
•PRO_TM_TYPE_GO_
RETRACT— Thistoolmotion
typeisformillingmanual
cycleonly.Formore
information, refertothe
sectionToolMotion—Plunge
onpage1743.
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothe
sectionToolMotion—CL
Command onpage1738.
Theelementsrelatedtotool
motionaredefinedin
ProMfgElemToolMtnAuto
Cut.h.Formoreinformation,
refertothesectionToolMotion—
AutoCutonpage1737.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionToolMotion—CL
Command onpage1738.
Theelementsrelatedtotool
motionaredefinedin
ProMfgElemToolMtnAuto
Cut.h.Formoreinformation,
refertothesectionToolMotion—
AutoCutonpage1737.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
1476 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocessxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstep.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
Production Applications: CreoNCSequences, Operations andWorkCenters 1477ElementID DataType Description
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:ThreadMilling
Thissectiondescribeshowtoconstructandaccesstheelementtreeforathread
roughingfeature.Italsodescribeshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
TheThreadMillingFeatureElementTree:
TheelementtreeforthethreadmillingCreoNCsequenceisdocumented inthe
headerfileProMfgFeatThreadMilling.h, andisasshowninthefollowing
figure:
1478 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_TOOL_MTNelementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxheaderfileProMfgFeatThreadMilling.h, andisasshowninthefollowing
figure:
1478 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_TOOL_MTNelement
Production Applications: CreoNCSequences, Operations andWorkCenters 1479ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
ThedefaultvalueisThread_
Milling_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_NCSEQ_THREAD_MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
Note
Thiselementismandatory
when PRO_E_DRILL_MODE
issettoPRO_DRILL_
HOLE_ON_MILL andis
ignoredwhensettoPRO_
DRILL_HOLE_ON_LATHE.
PRO_E_MFG_MILL_THREAD_
TYPE_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
threadtype.Thevalidvaluesfor
thiselementare:
•External
•Internal
Thevalueforthiselementis
definedbythe
ProMillThreadType
parameter.
PRO_E_MFG_MILL_THREAD_
TAPER_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
tapertype.Thevalidvaluesfor
thiselementare:
•None
•NTP
•Custom
Thevalueforthiselementis
definedbythe
ProMillThreadTaperType
1480 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
parameter.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1480 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
parameter.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_THRM_HOLESET_
ARRArray Specifiesanarrayofthread
holesets.Itgivesspecification of
threadstomachine.Formore
information, refertothesection
Manufacturing ThreadMilling
Holesetonpage1484.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypesfor
thiselementare:
•PRO_TM_TYPE_THREAD
Production Applications: CreoNCSequences, Operations andWorkCenters 1481ElementID DataType Description
_MILLING. Formore
information, refertothe
sectionToolMotion—Thread
Millingonpage1751.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx_MILLING. Formore
information, refertothe
sectionToolMotion—Thread
Millingonpage1751.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,
refertothesectionTool
Motion—FollowCutonpage
1741.
•PRO_TM_TYPE_GOTO_
POINT.Formoreinformation,
refertothesectionTool
Motion—GoToPointon
page1667.
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
•PRO_TM_TYPE_GOHOME.
Formoreinformation, referto
thesectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_CONNECT.
Formoreinformation, referto
thesectionToolMotion—
Connectonpage1733.
•PRO_TM_TYPE_PLUNGE.
Formoreinformation, referto
thesectionToolMotion—
Plungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—Go
Retractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothe
sectionToolMotion—
TangentApproach onpage
1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionTool
Motion—TangentExiton
page1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. FormorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionToolMotion—
TangentApproach onpage
1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionTool
Motion—TangentExiton
page1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—
NormalApproach onpage
1681.
1482 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_TM_TYPE_NORMAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—NormalExiton
page1684.
•PRO_TM_TYPE_LEAD_IN.
Formoreinformation, referto
thesectionToolMotion—
LeadInonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—
LeadOutonpage1686.
•PRO_TM_TYPE_RAMP_
APPROACH. Formore
information, refertothe
sectionToolMotion—Ramp
Approach onpage1729.
•PRO_TM_TYPE_RAMP_
EXIT.Formoreinformation,
refertothesectionTool
Motion—RampExitonpage
1731.
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothe
sectionToolMotion—CL
Command onpage1738.For
moreinformation, refertothe
sectionToolMotion—Auto
Cutonpage1737.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMotion—RampExitonpage
1731.
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothe
sectionToolMotion—CL
Command onpage1738.For
moreinformation, refertothe
sectionToolMotion—Auto
Cutonpage1737.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupportsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
Production Applications: CreoNCSequences, Operations andWorkCenters 1483ElementID DataType Description
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
Manufacturing ThreadMillingHoleset
Theelement PRO_E_MFG_THRM_HOLESET_ARR isdocumented intheheader
fileProMfgElemThreadHoleset.h, andisshowninthefollowingfigure.
1484 Creo®Parametric TOOLKIT User’sGuideElementtreeforManufacturing ThreadMillingHoleset
Production Applications: CreoNCSequences, Operations andWorkCenters 1485ThefollowingtableliststhecontentsofPRO_E_MFG_THRM_HOLESET_ARR
element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1485ThefollowingtableliststhecontentsofPRO_E_MFG_THRM_HOLESET_ARR
element.
ElementID DataType Description
PRO_E_MFG_THRM_HOLESET_
ARRArray Thiselementspecifiesanarrayof
threadholesets.Itgives
specifications aboutmachining
references.
PRO_E_MFG_THRM_HOLESET_
COMPOUNDCompound Mandatory element.This
compound elementspecifiesthe
threadholesetdefinition.
Note
Specifythiselementonly
whentheholesetarrayhasat
leastonemember
PRO_E_HOLESET_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
holesettype.Thevalidvaluefor
thiselementisPRO_HOLESET_
DRILL_AXES.
PRO_E_HOLESET_START Compound Mandatory element.Specifiesthe
holemaking startcompound
specification.
PRO_E_HOLESET_START_
TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
startsurfaceoptionusingthe
enumerated value
ProDrillStartType.
PRO_E_HOLESET_START_
SURFACEPRO_VALUE_TYPE_
SELECTIONSpecifiesthestartingsurfaceor
quiltselection.
Note
Thiselementismandatory ifxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstartsurfaceoptionusingthe
enumerated value
ProDrillStartType.
PRO_E_HOLESET_START_
SURFACEPRO_VALUE_TYPE_
SELECTIONSpecifiesthestartingsurfaceor
quiltselection.
Note
Thiselementismandatory if
theelement PRO_E_
HOLESET_START_TYPE is
settoPRO_DRILL_FROM_
SURFACE.
PRO_E_MFG_THRM_HSET_
END_COMPOUNDCompound Mandatory element.Specifiesthe
threaddepthcompound
specification.
PRO_E_HOLESET_END_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
endtypeoption.Thevalidvalues
forthiselementare:
•PRO_DRILL_UPTO_
SURFACE
•PRO_DRILL_AUTO_END
•PRO_DRILL_OFFSET_
FROM_START
PRO_E_HOLESET_END_
SURFACEPRO_VALUE_TYPE_
SELECTIONSpecifiestheendsurfaceorquilt
1486 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
selection.
Note
Thiselementismandatory if
theelement PRO_E_
HOLESET_END_TYPE isset
toPRO_DRILL_UPTO_
SURFACE.
PRO_E_HOLESET_DEPTH_
VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthedepthtothecut
threadfromthestart.
Note
Thiselementismandatory if
theelement PRO_E_
HOLESET_END_TYPE issetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoPRO_DRILL_UPTO_
SURFACE.
PRO_E_HOLESET_DEPTH_
VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthedepthtothecut
threadfromthestart.
Note
Thiselementismandatory if
theelement PRO_E_
HOLESET_END_TYPE isset
toPRO_DRILL_OFFSET_
FROM_START.
PRO_E_DRILL_PART_DATA Compound Thiselementgivescompound
information aboutcomponents
usedindepthcomputation.
Note
Specifythiselementonlyif
thestartorendofmachining
hastobecomputed andthe
followingconditions hold
true:
•Theelement PRO_E_
HOLESET_START_
TYPEissettoPRO_
DRILL_AUTO_START.
•Theelement PRO_E_
HOLESET_END_TYPE is
settoPRO_DRILL_
AUTOorPRO_DRILL_
THRU_ALL
•Theelement PRO_E_
HOLESET_DEPTH_
TYPEissettoPRO_
DRILL_AUTO orPRO_
DRILL_THRU_ALL
PRO_E_AUTO_SEL_DRILL_
PARTSPRO_VALUE_TYPE_INT Mandatory element.Thiselement
Production Applications: CreoNCSequences, Operations andWorkCenters 1487ElementID DataType Description
definesthewayinwhich
components arecollected.The
validvaluesforthiselementare:
•TRUE—Allcomponents of
typereferencepartorxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinesthewayinwhich
components arecollected.The
validvaluesforthiselementare:
•TRUE—Allcomponents of
typereferencepartor
workpiece areconsidered for
depthcalculation.
•FALSE—Only selected
components areconsidered in
depthcalculation.
PRO_E_DRILL_PARTS PRO_VALUE_TYPE_
SELECTIONSpecifiesthecomponents
selections. Thiselementsupports
multipleselections.
Note
•Thiselementis
mandatory iftheelement
PRO_E_AUTO_SEL_
DRILL_PARTS issetto
FALSE.
•Thiselementisignoredif
theelement PRO_E_
AUTO_SEL_DRILL_
PARTSissettoFALSE.
PRO_E_MFG_THRM_HSET_
HOLES_COMPCompound Mandatory element.This
compound elementgivesthe
compound information about
1488 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
locationofholes.
Note
Specifythiselementonly
whenatleastoneofthe
followinghavebeendefined:
•PRO_E_HOLESET_
SEL_INDIV_AXES
•PRO_E_HOLESET_
SEL_AXIS_PATTS
•PRO_E_HOLESET_
SEL_BY_SURFACES
•PRO_E_MFG_HSET_
DIAM_TYPE_OPT
•PRO_E_MFG_HSET_
THREAD_DESCR_ARR
•PRO_E_MFG_HSET_
DIAM_ARR
•PRO_E_MFG_HSET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSEL_INDIV_AXES
•PRO_E_HOLESET_
SEL_AXIS_PATTS
•PRO_E_HOLESET_
SEL_BY_SURFACES
•PRO_E_MFG_HSET_
DIAM_TYPE_OPT
•PRO_E_MFG_HSET_
THREAD_DESCR_ARR
•PRO_E_MFG_HSET_
DIAM_ARR
•PRO_E_MFG_HSET_
PARAM_ARR
PRO_E_HOLESET_SEL_AXIS_
PATTSPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaxesofpatterned
holes.Thiselementsupports
multipleselections.
Note
Ifapatternleaderisselected,
allholesinpatternwillbe
collected.
PRO_E_HOLESET_SEL_BY_
SURFACESPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofsurfacesorquiltswith
holes.Thiselementsupports
multipleselections.
PRO_E_MFG_HSET_DIAM_
TYPE_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeofholediametersthatcanbe
collectedintheelement PRO_E_
MFG_HSET_DIAM_ARR. The
typeofholediameterisspecified
usingtheenumerated datatype
ProHolesetDiamType. The
validvaluesare:
•PRO_HSET_ALL_DIAMS—
Thisisthedefaultvalue.
Specifiesthatdiametersof
bothsolidsurfacesandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofholediameterisspecified
usingtheenumerated datatype
ProHolesetDiamType. The
validvaluesare:
•PRO_HSET_ALL_DIAMS—
Thisisthedefaultvalue.
Specifiesthatdiametersof
bothsolidsurfacesand
Production Applications: CreoNCSequences, Operations andWorkCenters 1489ElementID DataType Description
cosmeticthreadscanbe
collected.
Note
Iftheelement PRO_E_
MFG_HSET_DIAM_
TYPE_OPT isnot
defined,thenbydefault,
theholediameteroftype
PRO_HSET_ALL_
DIAMSisused.
•PRO_HSET_HOLE_DIAMS—
Specifiesthatdiametersonly
ofsolidsurfacescanbe
collected.
•PRO_HSET_THREAD_
DIAMS—Specifies that
diametersonlyofcosmetic
threadscanbecollected.
PRO_E_MFG_HSET_DIAM_ARR Array Optionalelement.Specifiesan
arrayofdiametersofholesto
machine.
PRO_E_MFG_HSET_DIAM_
COMPOUNDCompound Optionalelement.Specifiesthe
compound definitionofahole
diameter.
PRO_E_MFG_HSET_HOLE_
DIAMPRO_VALUE_TYPE_DOUBLE Specifiesthediameterofaholeto
machine.
Note
Thiselementisamandatory
childelementoftheelement
PRO_E_MFG_HSET_DIAM_
COMPOUND.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdiameter.
PRO_E_MFG_HSET_HOLE_
DIAMPRO_VALUE_TYPE_DOUBLE Specifiesthediameterofaholeto
machine.
Note
Thiselementisamandatory
childelementoftheelement
PRO_E_MFG_HSET_DIAM_
COMPOUND.
PRO_E_MFG_HSET_THREAD_
DESCR_ARRArray Optionalelement.Thisarray
elementgivesthreaddescriptions
ofholestomachine.
PRO_E_MFG_HSET_THREAD_
DESCR_COMPCompound Optionalelement.Specifies
compound definitionofathread
description.
PRO_E_MFG_HSET_THREAD_
DESCRPRO_VALUE_TYPE_WSTRING Specifiesthethreadsizestring.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_THREAD_DESCR_
COMPelement.
PRO_E_MFG_HSET_PARAM_ PRO_VALUE_TYPE_INT Specifiesthetypeofquerythat
1490 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
RULE_OPT mustbeusedtosearchforholesto
machine.
Thequerytypeisspecifiedusing
theenumerated datatype
ProHsetParamRuleOpt. The
validvaluesare:
•PRO_HSET_BOOL_OPER_
OR—Collects holesthatsatisfy
atleastoneofthesearch
conditions setforaparameter.
PRO_HSET_BOOL_OPER_
AND—Collects holesthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProHsetParamRuleOpt. The
validvaluesare:
•PRO_HSET_BOOL_OPER_
OR—Collects holesthatsatisfy
atleastoneofthesearch
conditions setforaparameter.
PRO_HSET_BOOL_OPER_
AND—Collects holesthat
satisfyallthesearchconditions
setforaparameter.
Thesearchconditions and
parameters aredefinedinthe
elements PRO_E_MFG_HSET_
PARAM*.
PRO_E_MFG_HSET_PARAM_
ARRArray Optionalelement.Specifiesan
arrayofsearchconditions to
collectholesformachining.
PRO_E_MFG_HSET_PARAM_
COMPOUNDCompound Optionalelement.Specifiesa
compound elementthatdefinesa
searchconditiontomatchwiththe
userdefinedparameters inhole
features.
Eachconditiondefinesan
expression withuserdefined
parameter nameontheleftsideof
theexpression andvalueto
compareontherightside.
PRO_E_MFG_HSET_PARAM_
NAMEPRO_VALUE_TYPE_WSTRING Specifiesthenameoftheuser
definedparameter.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
element.
PRO_E_MFG_HSET_PARAM_
DTYPEPRO_VALUE_TYPE_INT Specifiesthedatatypeofthe
valuesusingtheenumerated valuexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedparameter.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
element.
PRO_E_MFG_HSET_PARAM_
DTYPEPRO_VALUE_TYPE_INT Specifiesthedatatypeofthe
valuesusingtheenumerated value
Production Applications: CreoNCSequences, Operations andWorkCenters 1491ElementID DataType Description
ProParamvalueType.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
element.
PRO_E_MFG_HSET_PARAM_
OPERPRO_VALUE_TYPE_INT Specifiesthetypeofexpression
operatorusingtheenumerated
value ProDrillParamOper.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
element.
PRO_E_MFG_HSET_PARAM_
VAL_DBLPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofthedouble
datatype.
Note
•Thiselementismandatory
childofPRO_E_MFG_HSET_
PARAM_COMPOUND element
fordoubledatatype(PRO_E_
MFG_HSET_PARAM_DTYPE
issettoPRO_PARAM_
DOUBLE). Itisignoredfor
otherdatatypes.
PRO_E_MFG_HSET_PARAM_
VAL_INTPRO_VALUE_TYPE_INT Specifiesthevalueoftheinteger
datatype.
Note
•ThiselementismandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMFG_HSET_PARAM_DTYPE
issettoPRO_PARAM_
DOUBLE). Itisignoredfor
otherdatatypes.
PRO_E_MFG_HSET_PARAM_
VAL_INTPRO_VALUE_TYPE_INT Specifiesthevalueoftheinteger
datatype.
Note
•Thiselementismandatory
childofPRO_E_MFG_HSET_
PARAM_COMPOUND element
forintegerdatatype(PRO_E_
MFG_HSET_PARAM_DTYPE
issettoPRO_PARAM_
INTEGER). Itisignoredfor
otherdatatypes.
PRO_E_MFG_HSET_PARAM_
VAL_STRPRO_VALUE_TYPE_WSTRING Specifiesthevalueofthestring
1492 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
datatype.
Note
•Thiselementismandatory
childofPRO_E_MFG_HSET_
PARAM_COMPOUND element
forstringdatatype(PRO_E_
MFG_HSET_PARAM_DTYPE
issettoPRO_PARAM_
STRING). Itisignoredfor
otherdatatypes.
PRO_E_MFG_HSET_PARAM_
VAL_BOOLPRO_VALUE_TYPE_INT Specifiesthevalueofthestring
datatype.
Note
•Thiselementismandatory
childofPRO_E_MFG_HSET_
PARAM_COMPOUND element
forbooleandatatype(PRO_
E_MFG_HSET_PARAM_
DTYPEissettoPRO_
PARAM_BOOLEAN). Itis
ignoredforotherdatatypes.
PRO_E_HOLESET_SEL_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
•Thiselementismandatory
childofPRO_E_MFG_HSET_
PARAM_COMPOUND element
forbooleandatatype(PRO_
E_MFG_HSET_PARAM_
DTYPEissettoPRO_
PARAM_BOOLEAN). Itis
ignoredforotherdatatypes.
PRO_E_HOLESET_SEL_
INDIV_AXESPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdatum
axes.Thiselementsupports
multipleselections.
Note
Thiselementismandatory if
youhavenotdefinedthe
followingelements:
•PRO_E_HOLESET_
SEL_AXIS_PATTS
•PRO_E_HOLESET_
SEL_BY_SURFACES
•PRO_E_MFG_HSET_
THREAD_DESCR_ARR
•PRO_E_MFG_HSET_
DIAM_ARR
•PRO_E_MFG_HSET_
PARAM_ARR
Production Applications: CreoNCSequences, Operations andWorkCenters 1493ElementID DataType Description
PRO_E_HOLESET_SEL_
UNSEL_AXESPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaxesofholestobe
excludedformachining. This
elementsupportsmultiple
selections.
PRO_E_MFG_HSET_START_
HOLE_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
axisselectionfortheholetobe
machinedfirst.
ElementTrees:TurningStepxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementsupportsmultiple
selections.
PRO_E_MFG_HSET_START_
HOLE_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
axisselectionfortheholetobe
machinedfirst.
ElementTrees:TurningStep
Thissectiondescribeshowtoconstructandaccesstheelementtreeforaturning
step.Italsodescribeshowtocreate,redefine,andaccesstheproperties ofthese
features.RefertotheCreoNCHelpformoreinformation ontheTurntypeCreo
NCsequences.
TheTurningElementTree:
Theelementtreefortheturningstepisdocumented intheheaderfile
ProMfgFeatTurning.h, andisasshowninthefollowingfigure:
1494 Creo®Parametric TOOLKIT User’sGuideElementTreeforTurningfeature
Thefollowingtabledescribestheelementsintheelementtreefortheareaturning
feature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
TURN.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvaluesforthiselementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
TURN.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvaluesforthiselement
Production Applications: CreoNCSequences, Operations andWorkCenters 1495ElementID DataType Description
are:
•Area_Turning_2—For area
turningCreoNCsequences.
•Profile_Turning_1—For
profileturningCreoNC
sequences.
•Groove_Turning_1—For
grooveturningCreoNC
sequences.
PRO_E_SEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvaluesforthiselementare:
•PRO_SEQ_AREA_TURN—For
anareaturningsequence.
•PRO_SEQ_GROOVE_TURN—
Foragrooveturningsequence.
•PRO_SEQ_PROF_TURN—For
aprofileturningsequence.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_SEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_MFG_SUB_SPINDLE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_SEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
CreoNCsequence.Thiselement
canbeusedwhentwopartsare
machinedduringthesame
operationindifferentspindles,that
isinthemainspindleandinthe
subspindle.Thevalidvaluesfor
thiselementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
1496 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Thesitefilenamewillbe
ignoredifthesitedoesnotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnameofthesitefilewithdefault
valuesformanufacturing
parameters.
1496 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing parameters.
Formoreinformation, refertothe
sectionManufacturing Parameters
onpage1648.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypesfor
thiselementare:
•PRO_TM_TYPE_AREA_
TURNING. Formore
information, refertothesection
ToolMotion—Areaand
GrooveTurningonpage1702.
•PRO_TM_TYPE_GROOVE_
TURNING. Formore
information, refertothesection
ToolMotion—Areaand
GrooveTurningonpage1702.
•PRO_TM_TYPE_PROF_
TURNING. Formore
information, refertothesection
ToolMotion—ProfileTurning
onpage1708.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxToolMotion—Areaand
GrooveTurningonpage1702.
•PRO_TM_TYPE_PROF_
TURNING. Formore
information, refertothesection
ToolMotion—ProfileTurning
onpage1708.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,
refertothesectionToolMotion
—FollowCutonpage1741
PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionToolMotion
—FollowCurveonpage1665.
•PRO_TM_TYPE_GOTO_
POINT.Formoreinformation,
refertothesectionToolMotion
—GoToPointonpage1667
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
Production Applications: CreoNCSequences, Operations andWorkCenters 1497ElementID DataType Description
•PRO_TM_TYPE_GOHOME. For
moreinformation, refertothe
sectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothesection
ToolMotion—Tangent
Approach onpage1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionToolMotion
—TangentExitonpage1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothesectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxApproach onpage1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionToolMotion
—TangentExitonpage1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothesection
ToolMotion—Normal
Approach onpage1681.
•PRO_TM_TYPE_NORMAL_
EXIT.Formoreinformation,
refertothesectionToolMotion
—NormalExitonpage1684
•PRO_TM_TYPE_LEAD_IN.
Formoreinformation, referto
thesectionToolMotion—
LeadInonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—
LeadOutonpage1686.
•PRO_TM_TYPE_RAMP_
APPROACH. Formore
information, refertothesection
ToolMotion—Ramp
Approach onpage1729.
•PRO_TM_TYPE_RAMP_
EXIT.Formoreinformation,
refertothesectionToolMotion
—RampExitonpage1731.
•PRO_TM_TYPE_CONNECT.
Formoreinformation, referto
thesectionToolMotion—
Connectonpage1733
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothesection
ToolMotion—CLCommand
onpage1738.
Formoreinformation, refertothe
sectionToolMotion—AutoCut
onpage1737.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxConnectonpage1733
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothesection
ToolMotion—CLCommand
onpage1738.
Formoreinformation, refertothe
sectionToolMotion—AutoCut
onpage1737.
1498 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsofthe
prerequisiteCreo NCsequences.
Formoreinformation, refertothe
sectionSequencePrerequisites on
page1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocessxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachiningxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtimeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
Production Applications: CreoNCSequences, Operations andWorkCenters 1499ElementID DataType Description
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:ThreadTurningStep
Thissectiondescribeshowtoconstructandaccesstheelementtreeforathread
turningstep.Italsodescribeshowtocreate,redefine,andaccesstheproperties of
thesefeatures.
TheThreadTurningElementTree:
TheelementtreeforthethreadturningCreoNCsequence isdocumented inthe
headerfileProMfgFeatTurnThread.h, andisasshowninthefollowing
figure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesefeatures.
TheThreadTurningElementTree:
TheelementtreeforthethreadturningCreoNCsequence isdocumented inthe
headerfileProMfgFeatTurnThread.h, andisasshowninthefollowing
figure:
1500 Creo®Parametric TOOLKIT User’sGuideElementTreeforThreadTurningfeature
Production Applications: CreoNCSequences, Operations andWorkCenters 1501ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
TURN.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueforthiselement
isThread_Turning_1.
PRO_E_SEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_SEQ_THREAD_TURN
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_TURN_THREAD_
LOCATION_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
locationofthethread.ThevalidxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_TURN_THREAD_
LOCATION_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
locationofthethread.Thevalid
valuesforthiselementare:
•PRO_E_TURN_OPTION_
OUT—For externalthreads
•PRO_E_TURN_OPTION_IN
—Forinternalthreads
PRO_E_TURN_THREAD_
OUTPUT_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofoutputYoucanspecifyone
ofthefollowingvalidvaluesfor
thiselement:
•PRO_E_TURN_THREAD_ISO
•PRO_E_TURN_THREAD_AI_
MACRO
PRO_E_TURN_THREAD_FORM_
TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthethread..Thevalid
valuesforthiselementare:
•PRO_E_TURN_THREAD_
UNIFIED—For Unified
threads
•PRO_E_TURN_THREAD_
GENERAL—For General
threads
•PRO_E_TURN_THREAD_
BUTTRESS—For Buttress
threads
•PRO_E_TURN_THREAD_
ACME—For Acmethreads
PRO_E_SEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_MFG_SUB_SPINDLE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxACME—For Acmethreads
PRO_E_SEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
1502 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1644.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing parameters.
Formoreinformation, refertothe
sectionManufacturing Parameters
onpage1648.
PRO_E_TURN_PROFILE PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesturn
profileselection.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. Formore
information, refertothesection
ToolMotion—AutoCutonpage
1737.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowstoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
Production Applications: CreoNCSequences, Operations andWorkCenters 1503ElementID DataType Description
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
ThiselementisusedonlyinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
1504 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1504 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments
ElementTrees:CreoNCOperation
Definition
ThissectiondescribeshowtoconstructandaccesstheelementtreeforaCreoNC
operationdefinitionfeature.Italsodescribeshowtocreate,redefine,andaccess
theproperties ofthesefeatures.
TheCreoNCOperationDefinitionElementTree:
TheelementtreefortheCreoNCoperationsequenceisdocumented intheheader
fileProMfgFeatOperation.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1505ElementTreeforCreoNCoperationdefinitionfeature
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
OPERATION.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
OPERATION.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueforthiselement
isOP040.
1506 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_OPER_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedastheoperationcoordinate
systemfortheCreoNCsequence.
PRO_E_OPER_SUBSP_CSYS PRO_VALUE_TYPE_
SELECTIONOptionalelement.Selecta
coordinate systemgeometryitem
whichcanbeusedasasub-spindle
coordinate system.
PRO_E_MFG_WCELL_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
workcellfeatureselection.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_FROM1_PNT PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_FROM1_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Allowsto
startmachining bythehead1tool
atthespecifiedposition.
PRO_E_MFG_HOME1_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Allowsto
endmachining bythehead1tool
atthespecifiedposition.
PRO_E_MFG_FROM2_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Allowsto
startmachining bythehead2tool
atthespecifiedposition.
Note
Thiselementisignoredfor
workcellswithsinglehead.
PRO_E_MFG_HOME2_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Allowsto
endmachining byheadthe2tool
atthespecifiedposition.
Note
Thiselementisignoredfor
workcellswithsinglehead.
PRO_E_MFG_FROM3_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointgeometryitem
selection.Allowstostartxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxatthespecifiedposition.
Note
Thiselementisignoredfor
workcellswithsinglehead.
PRO_E_MFG_FROM3_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointgeometryitem
selection.Allowstostart
machining bythehead3toolatthe
specifiedposition.
Note
Thiselementisignoredfor
workcellswithnumberof
headslessthan3.
Production Applications: CreoNCSequences, Operations andWorkCenters 1507ElementID DataType Description
PRO_E_MFG_HOME3_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointgeometryitem
selection.Allowstoendmachining
bythehead3toolatthespecified
position.
Note
Thiselementisignoredfor
workcellswithnumberof
headslessthan3.
PRO_E_MFG_FROM4_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointgeometryitem
selection.Allowstostart
machining bythehead4toolatthe
specifiedposition.
Note
Thiselementisignoredfor
workcellswithnumberof
headslessthan4.
PRO_E_MFG_HOME4_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointgeometryitemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedposition.
Note
Thiselementisignoredfor
workcellswithnumberof
headslessthan4.
PRO_E_MFG_HOME4_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointgeometryitem
selection.Allowstoendmachining
bythehead4toolatthespecified
position.
Note
Thiselementisignoredfor
workcellswithnumberof
headslessthan4.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofapplicable manufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h.
1508 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Formoreinformation, refertothe
sectionManufacturing Parameters
onpage1648formoreinformation
ontheelementtree.
Note
Fornewfeatures,ifthe
parameter arrayisnot
specifiedthedefaultvalues
willbeassignedtothe
corresponding manufacturing
parameters ofthecreated
feature.
PRO_E_MFG_OPER_STOCK_
MATERIALPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
stockmaterialname.
PRO_E_MFG_FIXTURE_REF PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcorresponding manufacturing
parameters ofthecreated
feature.
PRO_E_MFG_OPER_STOCK_
MATERIALPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
stockmaterialname.
PRO_E_MFG_FIXTURE_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofafixturesetupfeature.
PRO_E_FIXTURE_
COMPONENT_REFArray Optionalelement.Specifiesan
arrayofoperationfixturesetup
components thatcanbeinserted
intothetopassembly.Thisarray
canbecanbespecifiedeitherin
combination withorwithouta
fixturesetupreferencespecifiedby
PRO_E_MFG_FIXTURE_REF.
Thiselementsupportsmultiple
selections.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
Production Applications: CreoNCSequences, Operations andWorkCenters 1509ElementID DataType Description
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:WorkcellDefinition
Thissectiondescribeshowtoconstructandaccesstheelementtreeforaworkcell
definition. Italsodescribeshowtocreate,redefine,andaccesstheproperties of
thesefeatures.
TheManufacturing WEDMWorkcellElementTree
TheelementtreefortheWEDMworkcelltypeisdocumented intheheaderfile
ProMfgFeatWcellWedm.h, andisasshowninthefollowingfigure:
1510 Creo®Parametric TOOLKIT User’sGuideElementTreeforWEDMworkcellfeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementtreefortheWEDMworkcelltypeisdocumented intheheaderfile
ProMfgFeatWcellWedm.h, andisasshowninthefollowingfigure:
1510 Creo®Parametric TOOLKIT User’sGuideElementTreeforWEDMworkcellfeature
ThefollowingtabledescribestheelementsintheelementtreefortheWEDM
workcellfeature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_WORKCELL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueforthiselement
isWEDM01.
PRO_E_WCELL_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoftheworkcellusedforthe
CreoNCsequence.Thevalid
valueforthiselementisPRO_
WCELL_WEDM.
PRO_E_MFG_WCELL_NUM_
AXESPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
numberofcontrolled axes
Production Applications: CreoNCSequences, Operations andWorkCenters 1511ElementID DataType Description
(numberofprogrammable motionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnumberofcontrolled axes
Production Applications: CreoNCSequences, Operations andWorkCenters 1511ElementID DataType Description
(numberofprogrammable motion
directions). Thevalidvaluesfor
thiselementare:
•PRO_WCELL_2_AXIS
•PRO_WCELL_4_AXIS
PRO_E_MFG_ENABLE_CMM_
OPTPRO_VALUE_TYPE_INT Allowsenabling/disabling ofthe
toolheadforthecreationofCMM
sequences. Thevalidvaluesfor
thiselementare:
•PRO_B_TRUE: Enablestool
headwithCMMprobesand
allowsthecreationofCMM
sequences
•PRO_B_FALSE: Disables
CMMtoolheadandcreation
ofCMMsequences.
Note
Thiselementisoptional,
whenCMMtoolheadisnot
defined.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_WCELL_HEAD_1 Compound Optionalelement.Specifiesthe
toolheadcompound definition.
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
toolsetuparray.Formore
information, refertothesection
ElementTrees:ToolSetupon
page1654.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolheadcompound definition.
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
toolsetuparray.Formore
information, refertothesection
ElementTrees:ToolSetupon
page1654.
PRO_E_MFG_WCELL_CMM_
HEADCompound Optionalelement.Specifiesthe
CMMprobesheadcompound
definition.
Note
Thiselementisignoredif
PRO_E_MFG_ENABLE_
CMM_OPT issettoPRO_B_
FALSE.
PRO_E_MFG_CMM_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
CMMprobessetuparray.For
moreinformation, refertothe
sectionElementTrees:CMM
ProbeSetuponpage1657.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiestheworkcellcomments.
1512 Creo®Parametric TOOLKIT User’sGuideElementTrees:Manufacturing Mill
Workcell
Thissectiondescribeshowtoconstructandaccesstheelementtreefor
manufacturing millworkcellfeature.Italsodescribeshowtocreate,redefine,and
accesstheproperties ofthesefeatures.
TheMillWorkcellFeatureElementTree:
Theelementtreeforthemanufacturing millworkcellfeatureisdocumented inthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaccesstheproperties ofthesefeatures.
TheMillWorkcellFeatureElementTree:
Theelementtreeforthemanufacturing millworkcellfeatureisdocumented inthe
headerfileProMfgFeatWcellMill.h, andisasshowninthefollowing
figure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1513ElementTreeforMillWorkcellfeature
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_WORKCELL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueforthiselement
isMILL01.
1514 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_WCELL_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoftheworkcellusedforthe
CreoNCsequence.Thevalid
valueforthiselementisPRO_
WCELL_MILL.
PRO_E_MFG_WCELL_NUM_
AXESPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
numberofcontrolled axes
(numberofprogrammable motionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoNCsequence.Thevalid
valueforthiselementisPRO_
WCELL_MILL.
PRO_E_MFG_WCELL_NUM_
AXESPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
numberofcontrolled axes
(numberofprogrammable motion
directions). Thevalidvaluesfor
thiselementare:
•PRO_WCELL_3_AXIS
•PRO_WCELL_4_AXIS
•PRO_WCELL_5_AXIS
PRO_E_MFG_ENABLE_CMM_
OPTPRO_VALUE_TYPE_INT Specifiesenabling/disabling ofthe
toolheadforthecreationofCMM
sequences. Thevalidvaluesfor
thiselementare:
•PRO_B_TRUE: Enablestool
headwithCMMprobesand
allowsthecreationofCMM
sequences
•PRO_B_FALSE: Disables
CMMtoolheadandcreation
oftheCMMsequences.
Note
Thiselementisoptional,
whenCMMtoolheadisnot
definedorisdisabled.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_WCELL_HEAD_1 Compound Optionalelement.Specifiesthe
toolheadcompound definition.
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
toolsetuparray.FormorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_WCELL_HEAD_1 Compound Optionalelement.Specifiesthe
toolheadcompound definition.
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
toolsetuparray.Formore
information, refertothesection
ElementTrees:ToolSetupon
page1654.
PRO_E_MFG_WCELL_CMM_
HEADCompound Optionalcompound element.
SpecifiestheCMMprobeshead
Production Applications: CreoNCSequences, Operations andWorkCenters 1515ElementID DataType Description
compound definition.
Note
Thiselementisignoredif
PRO_E_MFG_ENABLE_
CMM_OPT issettoPRO_
B_FALSE.
PRO_E_MFG_CMM_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
CMMprobessetuparray.For
moreinformation, refertothe
sectionElementTrees:CMM
ProbeSetuponpage1657.
PRO_E_MFG_WCELL_CUST_
CYCLE_ARRArray Optionalelement.Specifiesthe
arrayofcustomcyclenames(to
beusedbyholemaking
sequences). Forholemaking
sequences, Formoreinformation,
refertothesectionManufacturing
Holemaking Steponpage1549.
PRO_E_MFG_WCELL_CUST_
CYCLE_COMPCompound Optionalcompound element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeusedbyholemaking
sequences). Forholemaking
sequences, Formoreinformation,
refertothesectionManufacturing
Holemaking Steponpage1549.
PRO_E_MFG_WCELL_CUST_
CYCLE_COMPCompound Optionalcompound element.
Specifiesthecompound definition
ofacustomcyclename.
PRO_E_MFG_WCELL_CUST_
CYCLE_NAMEPRO_VALUE_TYPE_WSTRING Specifiesthecustomcyclename.
Note
Thiselementisamandatory
childofPRO_E_MFG_
WCELL_CUST_CYCLE_
COMPelement.
PRO_E_MFG_WCELL_ASSEM_
COMPOUNDCompound Optionalcompound element.
SpecifiestheSimulation assembly
compound definition.
PRO_E_MFG_WCELL_
ASSEMBLY_NAMEAssembly Name Specifiesthesimulation assembly
modelname.
Note
Thiselementisamandatory
childofPRO_E_MFG_
WCELL_ASSEM_
COMPOUND element.
1516 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_WCELL_LOCAL_
CSYS_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthecoordinate system
datumfeature.Itwillbealigned
withthesimulation assembly
coordinate systemduring
machining simulation.
Note
•ThiselementisaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCSYS_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthecoordinate system
datumfeature.Itwillbealigned
withthesimulation assembly
coordinate systemduring
machining simulation.
Note
•Thiselementisa
mandatory childelement
ofPRO_E_MFG_
WCELL_ASSEM_
COMPOUND element.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiestheworkcellcomments.
Example1:CreatingorRedefining aToolfromaFile
ThesamplecodeinUgMfgToolFileReadWrite.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_mfg
showshowtocreateatoolorredefineitfromafileandsavetheinformation
aboutthetooltoafile.
ElementTrees:Manufacturing Mill/Turn
Workcell
Thissectiondescribeshowtoconstructandaccesstheelementtreeforamillturn
workcell.Italsodescribeshowtocreate,redefine,andaccesstheproperties of
thesefeatures.
TheMill/TurnWorkcellElementTree:
Theelementtreeforthemill/turnworkcellisdocumented intheheaderfile
ProMfgFeatWcellMillTurn.h, andisasshowninthefollowingfigure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesefeatures.
TheMill/TurnWorkcellElementTree:
Theelementtreeforthemill/turnworkcellisdocumented intheheaderfile
ProMfgFeatWcellMillTurn.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1517ElementTreeforMill/TurnWorkcell
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_WORKCELL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueforthiselement
isMILL01.
PRO_E_WCELL_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoftheworkcellusedforthe
CreoNCsequence.Thevalid
valueforthiselementisPRO_
WCELL_MILL_N_TRN.
1518 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_WCELL_NUM_
HEADSPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
numberoftoolheads(turrets).
Thevalidvaluesare:
•PRO_MFG_ONE_HEAD_
WCELL—This isthedefault
value.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_WCELL_NUM_
HEADSPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
numberoftoolheads(turrets).
Thevalidvaluesare:
•PRO_MFG_ONE_HEAD_
WCELL—This isthedefault
value.
•PRO_MFG_TWO_HEAD_
WCELL
PRO_E_MFG_WCELL_NUM_
SPINDLESPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
numberofspindlestobeusedfor
thefeaturecreation.Thevalid
valuesforthiselementaredefined
intheenumerated type
ProMfgWcellNumSpindles
andareasfollows:
•PRO_MFG_ONE_SPINDLE_
WCELL—This isthedefault
value.
•PRO_MFG_TWO_SPINDLE_
WCELL
PRO_E_MFG_LATHE_DIR_OPT PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
latheorientation .Thevalidvalues
forthiselementare:
•PRO_WCELL_LATHE_
HORIZONTAL—This isthe
defaultvalue.
•PRO_WCELL_LATHE_
VERTICAL
PRO_E_MFG_WCELL_ENABLE_
TURN_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
enabling/disabling oftheturning
machine.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE—Enables the
turningmachining onthe
workcell.Thisishedefault
value.
•PRO_B_FALSE—Disables
theturningmachining onthe
workcell.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmachine.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE—Enables the
turningmachining onthe
workcell.Thisishedefault
value.
•PRO_B_FALSE—Disables
theturningmachining onthe
workcell.
PRO_E_MFG_ENABLE_CMM_
OPTPRO_VALUE_TYPE_INT Optionalelement.Initializes a
CMMoperation. Thevalidvalues
forthiselementare:
•PRO_B_TRUE: Enablesthe
toolheadwithCMMprobes
andallowsthecreationof
CMMsequences.
•PRO_B_FALSE: Disablesthe
CMMtoolheadandallows
thecreationofCMM
sequences.
PRO_E_MFG_WCELL_NUM_
AXESPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
numberofcontrolled axesenabled
Production Applications: CreoNCSequences, Operations andWorkCenters 1519ElementID DataType Description
formillingsequences. Thevalid
valuesforthiselementare:
•PRO_WCELL_3_AXIS
•PRO_WCELL_4_AXIS
•PRO_WCELL_5_AXIS
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_WCELL_HEAD_1 Compound Optionalcompound element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_WCELL_HEAD_1 Compound Optionalcompound element.
Specifiesthecompound definition
fortoolhead1.
PRO_E_MFG_WCELL_HEAD_2 Compound Optionalelement.Specifiesthe
compound definitionfortoolhead
2.
Note
Thiselementisignoredif
youhavesettheelement
PRO_E_MFG_WCELL_
NUM_HEADS toPRO_MFG_
ONE_HEAD_WCELL value.
PRO_E_MFG_WCELL_TOOL
_SETUP_ARRArray Optionalelement.Specifiesthe
Toolsetuparray.Formore
information, refertothesection
ElementTrees:ToolSetupon
page1654.
PRO_E_MFG_WCELL_HEAD_3 Compound Optionalelement.Specifiesthe
toolsspecification forhead3.
Note
Thiselementisignoredfor
workcellswithnumberof
headslessthan3thatis,
whentheelement PRO_E_
MFG_WCELL_NUM_HEADS
issettoPRO_MFG_ONE_
HEAD_WCELL orPRO_
MFG_TWO_HEAD_WCELL.
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
Toolsetuparray.Formore
information, refertothesection
ElementTrees:ToolSetupon
page1654.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxHEAD_WCELL orPRO_
MFG_TWO_HEAD_WCELL.
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
Toolsetuparray.Formore
information, refertothesection
ElementTrees:ToolSetupon
page1654.
PRO_E_MFG_WCELL_HEAD_4 Compound Optionalelement.Specifiesthe
1520 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
toolsspecification forhead4.
Note
Thiselementisignoredfor
workcellswithnumberof
headslessthan4thatis,
whentheelement PRO_E_
MFG_WCELL_NUM_HEADS
issettoPRO_MFG_ONE_
HEAD_WCELL, PRO_MFG_
TWO_HEAD_WCELL or
PRO_MFG_THREE_HEAD_
WCELL.
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
Toolsetuparray.Formore
information, refertothesection
ElementTrees:ToolSetupon
page1654.
PRO_E_MFG_WCELL_CMM_
HEADCompound Optionalcompound element.
SpecifiestheCMMprobeshead
compound definition.
Note
Thiselementisignoredif
PRO_E_MFG_ENABLE_
CMM_OPT issettoPRO_
B_FALSE.
PRO_E_MFG_CMM_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
CMMprobessetuparray.Forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompound definition.
Note
Thiselementisignoredif
PRO_E_MFG_ENABLE_
CMM_OPT issettoPRO_
B_FALSE.
PRO_E_MFG_CMM_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
CMMprobessetuparray.For
moreinformation, refertothe
sectionElementTrees:CMM
ProbeSetuponpage1657.
PRO_E_MFG_WCELL_CUST_
CYCLE_ARRArray Optionalelement.Specifiesthe
arrayofcustomcyclenames(to
beusedbyholemaking
sequences). Forholemaking
sequences, Formoreinformation,
refertothesectionManufacturing
Holemaking Steponpage1549.
PRO_E_MFG_WCELL_CUST_
CYCLE_COMPCompound Optionalcompound element.
Specifiesthecompound definition
ofacustomcyclename.
Production Applications: CreoNCSequences, Operations andWorkCenters 1521ElementID DataType Description
PRO_E_MFG_WCELL_CUST_
CYCLE_NAMEPRO_VALUE_TYPE_WSTRING Specifiesthecustomcyclename.
Note
Thiselementisamandatory
childofPRO_E_MFG_
WCELL_CUST_CYCLE_
COMPelement.
PRO_E_MFG_WCELL_ASSEM_
COMPOUNDCompound Optionalcompound element.
Specifiesthesimulation assembly
compound definition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Thiselementisamandatory
childofPRO_E_MFG_
WCELL_CUST_CYCLE_
COMPelement.
PRO_E_MFG_WCELL_ASSEM_
COMPOUNDCompound Optionalcompound element.
Specifiesthesimulation assembly
compound definition.
PRO_E_MFG_WCELL_
ASSEMBLY_NAMEAssembly Name Specifiesthesimulation assembly
modelname.
Note
Thiselementisamandatory
childofPRO_E_MFG_
WCELL_ASSEM_
COMPOUND element.
PRO_E_MFG_WCELL_LOCAL_
CSYS_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthecoordinate system
datumfeature.Itwillbealigned
withthesimulation assembly
coordinate systemduring
machining simulation.
Note
Thiselementisamandatory
childelementofPRO_E_
MFG_WCELL_ASSEM_
COMPOUND element.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiestheworkcellcomments.
PRO_E_MFG_MILL TURN_HEADS Element
Thecompound element PRO_E_MFG_MILLTURN_HEADS containselements
thatcanbeusedtodefinetheparameters fortheturrethead.Theelementsof
PRO_E_MFG_MILLTURN_HEADS areasfollows:
•PRO_E_MFG_MILLTURN_HEAD_1—Contains theoptionsforthefirst
turret.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatcanbeusedtodefinetheparameters fortheturrethead.Theelementsof
PRO_E_MFG_MILLTURN_HEADS areasfollows:
•PRO_E_MFG_MILLTURN_HEAD_1—Contains theoptionsforthefirst
turret.
•PRO_E_MFG_MILLTURN_HEAD_2—Contains theoptionsforthesecond
turret.
•PRO_E_MFG_MILLTURN_HEAD_3—Contains theoptionsforthethird
turret.
•PRO_E_MFG_MILLTURN_HEAD_4—Contains theoptionsforthefourth
turret.
1522 Creo®Parametric TOOLKIT User’sGuide•PRO_E_MILLTURN_TOOL_ROT_DIR_OPT
ElementTreeforPRO_E_MFG_MILL TURN_HEADS element
Theelements PRO_E_MFG_MILLTURN_HEAD_1, PRO_E_MFG_MILLTURN_
HEAD_2, PRO_E_MFG_MILLTURN_HEAD_3 andPRO_E_MFG_MILLTURN_
HEAD_4containthefollowingelements:
Production Applications: CreoNCSequences, Operations andWorkCenters 1523ElementID DataType Description
PRO_E_WCELL_HEAD_MILL_
OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
turretmillingoption.Thevalid
valuesforthiselementare:
•PRO_B_TRUE—Enables the
millingoperations forthe
turrethead.
•PRO_B_FALSE—Disables
themillingoperations forthe
turrethead.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxturretmillingoption.Thevalid
valuesforthiselementare:
•PRO_B_TRUE—Enables the
millingoperations forthe
turrethead.
•PRO_B_FALSE—Disables
themillingoperations forthe
turrethead.
PRO_E_WCELL_HEAD_TURN_
OPTPRO_VALUE_TYPE_INT Specifiestheenabling/disabling of
theturningoptionfortheturret.
Thevalidvaluesforthiselement
are:
•PRO_B_TRUE—Enables the
turningoperations forthe
turret.Thisisthedefault
value.
•PRO_B_FALSE—Disables
theturningoperations forthe
turret.
Note
Thiselementisignoredifthe
element PRO_E_MFG_
WCELL_ENABLE_TURN_
OPTissettoPRO_B_
FALSE.
PRO_E_WCELL_HEAD_FLASH_
OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
turretflashtooloption.Thevalid
valuesforthiselementare:
•PRO_B_TRUE—Enables the
flashtoolfortheturret.
•PRO_B_FALSE—Disables
theflashtoolfortheturret.
PRO_E_WCELL_HEAD_ROT_
POS_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
turretrotationpositioning option.
Thevalidvaluesforthiselement
are:
•PRO_B_TRUE—Enables the
rotationpositioning forthe
turret.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPOS_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
turretrotationpositioning option.
Thevalidvaluesforthiselement
are:
•PRO_B_TRUE—Enables the
rotationpositioning forthe
turret.
•PRO_B_FALSE—Disables
therotationpositioning forthe
turret.
1524 Creo®Parametric TOOLKIT User’sGuideElementTrees:Manufacturing Lathe
Workcell
Thissectiondescribeshowtoconstructandaccesstheelementtreeforalathe
workcell.Italsodescribeshowtocreate,redefine,andaccesstheproperties of
thesefeatures.
TheLatheWorkcellElementTree:
Theelementtreeforthelatheworkcellisdocumented intheheaderfile
ProMfgFeatWcellLathe.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1525ElementTreeforLatheWorkcell
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_WORKCELL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_WORKCELL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueforthiselement
isLATHE01.
PRO_E_WCELL_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
1526 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
typeoftheworkcellusedforthe
CreoNCsequence.Thevalid
valueforthiselementisPRO_
WCELL_LATHE.
PRO_E_MFG_WCELL_NUM_
HEADSPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
numberoftoolheads(turrets).
Thevalidvaluesare:
•PRO_MFG_ONE_HEAD_
WCELL—This isthedefault
value.
•PRO_MFG_TWO_HEAD_
WCELL
PRO_E_MFG_WCELL_NUM_
SPINDLESPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
numberofspindlestobeusedfor
thefeaturecreation.Thevalid
valuesforthiselementaredefined
intheenumerated type
ProMfgWcellNumSpindles
andareasfollows:
•PRO_MFG_ONE_SPINDLE_
WCELL—This isthedefault
value.
•PRO_MFG_TWO_SPINDLE_
WCELLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefeaturecreation.Thevalid
valuesforthiselementaredefined
intheenumerated type
ProMfgWcellNumSpindles
andareasfollows:
•PRO_MFG_ONE_SPINDLE_
WCELL—This isthedefault
value.
•PRO_MFG_TWO_SPINDLE_
WCELL
PRO_E_MFG_LATHE_DIR_OPT PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
latheorientation .Thevalidvalues
forthiselementare:
•PRO_WCELL_LATHE_
HORIZONTAL—This isthe
defaultvalue.
•PRO_WCELL_LATHE_
VERTICAL
PRO_E_MFG_ENABLE_CMM_
OPTPRO_VALUE_TYPE_INT Optionalelement.Initializes a
CMMoperation. Thevalidvalues
forthiselementare:
•PRO_B_TRUE: Enablesthe
toolheadwithCMMprobes
andallowsthecreationof
CMMsequences.
•PRO_B_FALSE: Disablesthe
CMMtoolheadandallows
thecreationofCMM
sequences.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_WCELL_HEAD_1 Compound Optionalcompound element.
Specifiesthecompound definition
fortoolhead1.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_WCELL_HEAD_1 Compound Optionalcompound element.
Specifiesthecompound definition
fortoolhead1.
PRO_E_MFG_WCELL_HEAD_2 Compound Optionalelement.Specifiesthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1527ElementID DataType Description
compound definitionfortoolhead
2.
Note
Thiselementisignoredif
youhavesettheelement
PRO_E_MFG_WCELL_
NUM_HEADS toPRO_MFG_
ONE_HEAD_WCELL value.
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
Toolsetuparray.Formore
information, refertothesection
ElementTrees:ToolSetupon
page1654.
PRO_E_MFG_WCELL_CMM_
HEADCompound Optionalcompound element.
SpecifiestheCMMprobeshead
compound definition.
Note
Thiselementisignoredif
PRO_E_MFG_ENABLE_
CMM_OPT issettoPRO_B_
FALSE.
PRO_E_MFG_CMM_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
CMMprobessetuparray.For
moreinformation, refertothe
sectionElementTrees:CMM
ProbeSetuponpage1657.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCMM_OPT issettoPRO_B_
FALSE.
PRO_E_MFG_CMM_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
CMMprobessetuparray.For
moreinformation, refertothe
sectionElementTrees:CMM
ProbeSetuponpage1657.
PRO_E_MFG_WCELL_CUST_
CYCLE_ARRArray Optionalelement.Specifiesthe
arrayofcustomcyclenames(to
beusedbyholemaking
sequences). Forholemaking
sequences, Formoreinformation,
refertothesectionManufacturing
Holemaking Steponpage1549
PRO_E_MFG_WCELL_CUST_
CYCLE_COMPCompound Optionalcompound element.
Specifiesthecompound definition
ofacustomcyclename.
PRO_E_MFG_WCELL_CUST_
CYCLE_NAMEPRO_VALUE_TYPE_WSTRING Specifiesthecustomcyclename.
Note
Thiselementisamandatory
childofPRO_E_MFG_
WCELL_CUST_CYCLE_
COMPelement.
PRO_E_MFG_WCELL_ASSEM_
COMPOUNDCompound Optionalcompound element.
SpecifiestheSimulation assembly
1528 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
compound definition.
PRO_E_MFG_WCELL_
ASSEMBLY_NAMEAssembly Name Specifiesthesimulation assembly
modelname.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1528 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
compound definition.
PRO_E_MFG_WCELL_
ASSEMBLY_NAMEAssembly Name Specifiesthesimulation assembly
modelname.
Note
Thiselementisamandatory
childofPRO_E_MFG_
WCELL_ASSEM_
COMPOUND element.
PRO_E_MFG_WCELL_LOCAL_
CSYS_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthecoordinate system
datumfeature.Itwillbealigned
withthesimulation assembly
coordinate systemduring
machining simulation.
Note
Thiselementisamandatory
childelementofPRO_E_
MFG_WCELL_ASSEM_
COMPOUND element.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiestheworkcellcomments.
ElementTrees:Manufacturing CMM
Workcell
ThissectiondescribeshowtoconstructandaccesstheelementtreeforaCMM
workcell.Italsodescribeshowtocreate,redefine,andaccesstheproperties of
thesefeatures.
TheCMMWorkcellElementTree:
TheelementtreefortheCMMworkcellisdocumented intheheaderfile
ProMfgFeatWcellCmm.h, andisasshowninthefollowingfigure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesefeatures.
TheCMMWorkcellElementTree:
TheelementtreefortheCMMworkcellisdocumented intheheaderfile
ProMfgFeatWcellCmm.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1529ElementTreeforCMMWorkcell
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalid
valueforthiselementisPRO_
FEAT_WORKCELL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueforthiselement
isAdddefault value.
PRO_E_WCELL_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoftheworkcellusedforthe
CreoNCsequence.Thevalid
valueforthiselementisPRO_
WCELL_CMM.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_WCELL_CMM_
HEADCompound Optionalcompound element.
SpecifiestheCMMprobeshead
compound definition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_WCELL_CMM_
HEADCompound Optionalcompound element.
SpecifiestheCMMprobeshead
compound definition.
1530 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_CMM_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
CMMprobessetuparray.For
moreinformation, refertothe
sectionTheCMMprobeSetup
ElementTree:onpage1657.
PRO_E_MFG_WCELL_ASSEM_
COMPOUNDCompound Optionalcompound element.
Specifiesthesimulation assembly
compound definition.
PRO_E_MFG_WCELL_
ASSEMBLY_NAMEAssembly Name Specifiesthesimulation assembly
modelname.
Note
Thiselementisamandatory
childofPRO_E_MFG_
WCELL_ASSEM_
COMPOUND element.
PRO_E_MFG_WCELL_LOCAL_
CSYS_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthecoordinate system
datumfeature.Itwillbealigned
withthesimulation assembly
coordinate systemduring
machining simulation.
Note
Thiselementisamandatory
childelementofPRO_E_
MFG_WCELL_ASSEM_
COMPOUND element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumfeature.Itwillbealigned
withthesimulation assembly
coordinate systemduring
machining simulation.
Note
Thiselementisamandatory
childelementofPRO_E_
MFG_WCELL_ASSEM_
COMPOUND element.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiestheworkcellcomments.
ElementTrees:ProfileMillingStep
Thissectiondescribeshowtoconstructandaccesstheelementtreeforaprofile
millingstep.Italsodescribeshowtocreate,redefine,andaccesstheproperties of
thesefeatures.
TheProfileMillingElementTree:
TheelementtreefortheprofilemillingCreoNCsequenceisdocumented inthe
headerfileProMfgFeatProfMilling.h, andisasshowninthefollowing
figure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1531ElementTreeforProfileMillingSequence
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
1532 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
ThedefaultvalueisProfile_
Milling_1.
PRO_E_SEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_SEQ_PROF_SURF_MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_MFG_SEQ_NUM_AXES_
OPTPRO_VALUE_TYPE_INT Specifiesthenumberofcontrolled
axes.Thevalidvaluesare:
•3—Applicable ifworkcenter
allows3-axismachining. This
isthedefaultvalue.
•4—Applicable ifworkcenter
allows4-axisor5-axis
machining. Itisusedfor
machining withthetoolaxis
paralleltotheplanespecified
inPRO_E_MFG_4_AXIS_
PLANE.
•5—Applicable ifworkcenter
allows5-axismachining.
PRO_E_SEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwillxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinPRO_E_MFG_4_AXIS_
PLANE.
•5—Applicable ifworkcenter
allows5-axismachining.
PRO_E_SEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_ PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1533ElementID DataType Description
NAME tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MACH_SURFS Compound Mandatory element.Specifiesthe
machining surfacescompound
definition.
PRO_E_MFG_SURF_SIDE_
COMPOUNDCompound Optionalcompound element.
SpecifiesthesurfacessidexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MACH_SURFS Compound Mandatory element.Specifiesthe
machining surfacescompound
definition.
PRO_E_MFG_SURF_SIDE_
COMPOUNDCompound Optionalcompound element.
Specifiesthesurfacesside
compound definition. Formore
information, refertothesection
Manufacturing SurfaceSideon
page1537.
PRO_E_MFG_4_AXIS_PLANE PRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdatum
planeorplanarsurface.
Note
•Thiselementismandatory for
4-axismachining (PRO_E_
MFG_SEQ_NUM_AXES_OPT
setto4).
•Thiselementisignoredfor3-
axisand5-axismachining.
PRO_E_SCALLOP_SURF_COLL Compound Optionalcompound element.
Specifiesthescallopsurfaces
compound definition.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Optionalelement.Specifiesthe
scallopsurfacescollection.
PRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
checksurfacescompound
definition. Formoreinformation,
refertothesectionChecking
Surfacesonpage1658.
PRO_E_MFG_CMP_APPROACH_
EXITCompound Optionalelement.Specifiesthe
approachandexitcompoundxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxchecksurfacescompound
definition. Formoreinformation,
refertothesectionChecking
Surfacesonpage1658.
PRO_E_MFG_CMP_APPROACH_
EXITCompound Optionalelement.Specifiesthe
approachandexitcompound
definition. Formoreinformation,
refertothesectionApproach and
Exitonpage1660.
1534 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Optionalelement.Specifiesthe
toolmotioncompound
specification andtheapplicable
toolmotiontypesforthiselement
are:
•Tool Motion —Profile
Mill Cutonpage 1735
•Tool Motion —Follow
Cutonpage 1741
•Tool Motion —Follow
Curve onpage 1665
•Tool Motion —GoTo
Point onpage 1667
•Tool Motion —GoDelta
onpage 1671
•Tool Motion —GoHome
onpage 1675
•Tool Motion —Plunge
onpage 1743
•Tool Motion —Go
Retract onpage 1679
•Tool Motion —Tangent
Approach onpage 1697
•Tool Motion —Tangent
Exit onpage 1699
•Tool Motion —Normal
Approach onpage 1681
•Tool Motion —Normalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonpage 1743
•Tool Motion —Go
Retract onpage 1679
•Tool Motion —Tangent
Approach onpage 1697
•Tool Motion —Tangent
Exit onpage 1699
•Tool Motion —Normal
Approach onpage 1681
•Tool Motion —Normal
Exit onpage 1684
•Tool Motion —Lead In
onpage 1677
•Tool Motion —Lead Out
onpage 1686
•Tool Motion —Helical
Approach onpage 1688
•Tool Motion —Helical
Exit onpage 1691
•Tool Motion —Follow
Curve onpage 1665—For
4and5axismachining.
•Approach Along Tool
Axis onpage 1661
•Exit Along Tool Axis on
page 1663—For 4and5axis
Production Applications: CreoNCSequences, Operations andWorkCenters 1535ElementID DataType Description
machining.
Note
TheFollowCutmotionmust
beplacedjustafterthe
element PRO_TM_TYPE_
PROFILE_MILL_CUT,
motionoranotherFollowCut
motion.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowstoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
1536 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
Manufacturing SurfaceSide
Theelement PRO_E_MFG_SURF_SIDE_COMPOUND isdocumented inthe
headerfileProMfgElemSurfSide.h, andisasshowninthefollowingfigure:
Thefollowingtabledescribestheelementsintheelementtreeforthesurfaceside
feature.
Production Applications: CreoNCSequences, Operations andWorkCenters 1537PRO_E_MFG_SURF_SIDE_
COMPOUNDCompound SpecifiesthesurfaceSide
compound.
PRO_E_MFG_SURF_SIDE_
TOLERAEPRO_VALUE_TYPE_DOUBLE Mandatory element.Specifiesthe
toleranceusedforcomposing
groupsofadjacentquilts.
Note
Thevalueforthiselement
shouldbenonnegative.
PRO_E_MFG_SURF_SIDE_
FLIP_QUILTSPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofquiltstobeflipped.
Thiselementsupportsmultiple
selections.
ElementTrees:FaceMillingStepxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_SURF_SIDE_
FLIP_QUILTSPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofquiltstobeflipped.
Thiselementsupportsmultiple
selections.
ElementTrees:FaceMillingStep
ThissectiondescribeshowtoconstructandaccesstheelementtreeforaFace
Millingfeature.Italsodescribeshowtocreate,redefine,andaccesstheproperties
ofthesefeatures.
1538 Creo®Parametric TOOLKIT User’sGuideTheFaceMillingElementTree:
Theelementtreeforthefacemillingfeatureisdocumented intheheaderfile
ProMfgFeatFacing.h, andisasshowninthefollowingfigure:
ElementTreeforFaceMillingfeature
ThefollowingtableliststhecontentsofPRO_E_FEATURE_TREE element.
Production Applications: CreoNCSequences, Operations andWorkCenters 1539ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
ThedefaultvalueisFace_
Milling_1.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
ThedefaultvalueisFace_
Milling_1.
PRO_E_SEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_SEQ_FACE_MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_SEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
1540 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MACH_SURFS Compound Mandatory compound element.
Specifiesthemachining surfaces
compound definition. Formore
information, refertothesection
ElementTrees:Machining
Surfacesonpage1544.
PRO_E_MFG_CMP_APPROACH_
EXITCompound Optionalcompound element.
Specifiestheapproachandexit
compound definition. Formore
information, refertothesection
Approach andExitonpage1660.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypesfor
thiselementare:
•PRO_TM_TYPE_FACE_
MILLING. Formore
information, refertothe
sectionToolMotion—Face
Millingonpage1748.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplicable toolmotiontypesfor
thiselementare:
•PRO_TM_TYPE_FACE_
MILLING. Formore
information, refertothe
sectionToolMotion—Face
Millingonpage1748.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,
refertothesectionTool
Motion—FollowCutonpage
1741.
•PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionTool
Motion—FollowCurveon
page1665.
•PRO_TM_TYPE_GOTO_
POINT.Formoreinformation,
refertothesectionTool
Motion—GoToPointon
page1667.
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
Production Applications: CreoNCSequences, Operations andWorkCenters 1541ElementID DataType Description
thesectionToolMotion—Go
Deltaonpage1671.
•PRO_TM_TYPE_GOHOME.
Formoreinformation, referto
thesectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_CONNECT.
Formoreinformation, referto
thesectionToolMotion—
Connectonpage1733.
•PRO_TM_TYPE_PLUNGE.
Formoreinformation, referto
thesectionToolMotion—
Plungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—GoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxConnectonpage1733.
•PRO_TM_TYPE_PLUNGE.
Formoreinformation, referto
thesectionToolMotion—
Plungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—Go
Retractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothe
sectionToolMotion—
TangentApproach onpage
1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionTool
Motion—TangentExiton
page1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—
NormalApproach onpage
1681.
•PRO_TM_TYPE_NORMAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—NormalExiton
page1684.
•PRO_TM_TYPE_LEAD_IN.
Formoreinformation, referto
thesectionToolMotion—
LeadInonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—
LeadOutonpage1686.
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
1542 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
information, refertothe
sectionToolMotion—Helical
Approach onpage1688.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLeadOutonpage1686.
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
1542 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
information, refertothe
sectionToolMotion—Helical
Approach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—HelicalExiton
page1691.
•PRO_TM_TYPE_RAMP_
APPROACH. Formore
information, refertothe
sectionToolMotion—Ramp
Approach onpage1729.
•PRO_TM_TYPE_RAMP_
EXIT.Refertothesection
ToolMotion—RampExiton
page1731.
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothe
sectionToolMotion—CL
Command onpage1738.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_ENTRY_PNT_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
entrypointselection.Effectsstartxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_ENTRY_PNT_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
entrypointselection.Effectsstart
locationofthefirstcut.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Production Applications: CreoNCSequences, Operations andWorkCenters 1543ElementID DataType Description
Note
Thiselementisusedonlyinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallowsyoutoassociateaspecific
viewwiththemachining step.
Production Applications: CreoNCSequences, Operations andWorkCenters 1543ElementID DataType Description
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:MachiningSurfaces
TheMachiningSurfaceElementTree:
Theelementtreeforthemachining surfacesfeatureisdocumented intheheader
fileProMfgElemMachSurf.h, andisasshowninthefollowingfigure:
1544 Creo®Parametric TOOLKIT User’sGuideElementTreeforMachiningSurfaceFeature
ElementID DataType Description
PRO_E_MACH_SURF_OPT PRO_VALUE_TYPE_INT Thiselementspecifiesthe
controlling oftheobjecttobe
selected.Thevalidvaluesforthis
elementare:
•PRO_MACH_SURF_OPT_
SURFACES—Specifies that
surfacecollection willbe
defined.
•PRO_MACH_SURF_OPT_
MILL_WIND—Specifies that
windowselectionwillbe
defined(forFaceMilling).
•PRO_MACH_SURF_OPT_
PREV_STEP—Specifies that
previousstepwillbedefined
(notforFaceMilling).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefined.
•PRO_MACH_SURF_OPT_
MILL_WIND—Specifies that
windowselectionwillbe
defined(forFaceMilling).
•PRO_MACH_SURF_OPT_
PREV_STEP—Specifies that
previousstepwillbedefined
(notforFaceMilling).
PRO_E_MACH_SURF_COMP Compound Thiscompound elementspecifies
thecollection ofsurfaces.
Note
Thiselementisignoredifthe
element PRO_E_MACH_
SURF_OPT isnotsetto
PRO_MACH_SURF_OPT_
SURFACES.
PRO_E_MACH_SURF_REF_
TYPEPRO_VALUE_TYPE_INTEGER Specifiesthereferencetypes.The
validvaluesforthiselementare:
Production Applications: CreoNCSequences, Operations andWorkCenters 1545ElementID DataType Description
•PRO_SURF_REF_TYPE_
REFPART—Specifies that
surfacesfromareferencepart
arecollected.
•PRO_SURF_REF_TYPE_
WORKPIECE—Specifies that
surfacesfromaworkpiece part
arecollected.
•PRO_SURF_REF_TYPE_
MILL_VOLUME—Specifies
thatmillvolumeisselectedor
individual surfacesbelonging
toamillvolumearecollected.
•PRO_SURF_REF_TYPE_
MILL_MVOLSRF—Specifies
thataMillSurfaceisselected
orindividual surfacesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMILL_VOLUME—Specifies
thatmillvolumeisselectedor
individual surfacesbelonging
toamillvolumearecollected.
•PRO_SURF_REF_TYPE_
MILL_MVOLSRF—Specifies
thataMillSurfaceisselected
orindividual surfaces
belonging toaMillSurface
quiltarecollected.
•PRO_SURF_REF_TYPE_
TOP_ASSEM_SRF—Specifies
thatquiltcreatedatthe
assemblylevelisselected.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Thiselementspecifiesthe
collection ofselectedsurfacesto
bemachined.
Note
Thiselementismandatory if
neither PRO_E_MFG_MILL_
WIND_SRF norPRO_E_
MACH_SURF_PREV_STEP
aredefined.
PRO_E_MFG_MILL_WIND_SRF PRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofmill
windowfeature.
Note
Specifythiselementonlyif
theelements PRO_E_STD_
SURF_COLLECTION_APPL
andPRO_E_MACH_SURF_
PREV_STEP arenotdefined.
1546 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MACH_SURF_PREV_
STEPPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofanCreo
NCstepfeature.
Note
Thiselementismandatory if
neithertheelement PRO_E_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MACH_SURF_PREV_
STEPPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofanCreo
NCstepfeature.
Note
Thiselementismandatory if
neithertheelement PRO_E_
STD_SURF_COLLECTION_
APPLnortheelement PRO_
E_MFG_MILL_WIND_SRF
aredefined.Thiselement
mustnotbesetotherwise.
PRO_E_MACH_SRF_FLIP PRO_VALUE_TYPE_INTEGER Specifiesthepositionofflipquilt.
Thevalidvaluesforthiselement
are:
•PRO_B_FALSE—Specifies
themachining ofthesurface
onthesidedefinedbythe
defaultnormal.
•PRO_B_TRUE—Specifies the
machining ofthesurfaceon
theoppositesidedefinedby
thedefaultnormal.
Note
Thiselementismandatory if
theelement PRO_E_MACH_
SURFSisdefinedandthe
referencetypeissettoPRO_
SURF_REF_TYPE_MILL_
MVOLSRF orPRO_SURF_
REF_TYPE_TOP_ASSEM_
SRF.
ElementTrees:FixtureDefinition
Thissectiondescribeshowtoconstructandaccesstheelementtreefor
Manufacturing FixtureSetup.Italsodescribeshowtocreate,redefine,andaccess
theproperties ofthesefeatures.
TheManufacturing FixtureSetupElementTree:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxManufacturing FixtureSetup.Italsodescribeshowtocreate,redefine,andaccess
theproperties ofthesefeatures.
TheManufacturing FixtureSetupElementTree:
Theelementtreeforthemanufacturing fixturesetupisdocumented intheheader
fileProMfgFeatFixture.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1547ElementTreeforManufacturing FixtureSetupfeature
ThefollowingtableliststhecontentsofPRO_E_FEATURE_TREE element.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
FIXSETUP.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
ThedefaultvalueisFSETP1.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_FIXTURE_
COMPONENT_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofthereference
components. ThiselementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_FIXTURE_
COMPONENT_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofthereference
components. Thiselement
supportsmultipleselections.
Note
Specifythiselementonlyif
thecomponent isinsertedin
themanufacturing assembly.
1548 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstep.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
Manufacturing Holemaking Step
TheelementtreeforPRO_E_FEATURE_TREE isdocumented intheheaderfile
ProMfgFeatHolemaking.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1549ThefollowingtableliststhecontentsofPRO_E_FEATURE_TREE element.
ElementID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1549ThefollowingtableliststhecontentsofPRO_E_FEATURE_TREE element.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
DRILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
sequencefeaturename.
1550 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
sequencetype.Thevalidvaluefor
thiselementisPRO_SEQ_
HOLEMAKING.
PRO_E_HOLEMAKING_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofholemaking sequence
usingtheenumerated value
ProHolemakingType.
PRO_E_DRILL_MODE PRO_VALUE_TYPE_INT Specifiestheholemaking mode-
machining withrotatingpartor
rotatingtoolusingtheenumerated
value ProDrillModeOption.
Note
Thiselementismandatory
fordrillingonmill-turnwork
center.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmachining withrotatingpartor
rotatingtoolusingtheenumerated
value ProDrillModeOption.
Note
Thiselementismandatory
fordrillingonmill-turnwork
center.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_MFG_HOLEMAKING_
CYCLE_TYPEPRO_VALUE_TYPE_INT Specifiestheholemaking cycle
typeusingtheenumerated value
ProHmCycleType.
Note
Thiselementismandatory
fordrilling,tapping,
counterboring,
countersinking. For
countersinking, thiselement
shouldbesettothevalue
PRO_HM_CYCLE_TYPE_
STANDARD. Thiselementis
ignoredforothertypesof
holemaking.
PRO_E_MFG_SEQ_NUM_AXES_
OPTPRO_VALUE_TYPE_INT Specifiesthenumberofaxes.The
validvalueforthiselementare:
•3
•5
Note
Thiselementcanbesetto5
onlyifworkcenterallows5-
axismachining.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
coordinate systemdatumfeatureto
beusedasasequencecoordinate
system.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonlyifworkcenterallows5-
axismachining.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
coordinate systemdatumfeatureto
beusedasasequencecoordinate
system.
Production Applications: CreoNCSequences, Operations andWorkCenters 1551ElementID DataType Description
PRO_E_RETR_SURF Compound Specifiestheretractcompound
definition. Formoreinformation,
refertothesectionRetract
Elementsonpage1644formore
information ontheelementtree.
Note
•Thiselementis
mandatory whenthe
element PRO_E_
DRILL_MODE issetto
PRO_DRILL_HOLE_
ON_MILL.
•Thiselementisignored
whentheelement PRO_
E_DRILL_MODE issetto
PRO_DRILL_HOLE_
ON_LATHE.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxduringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Specifiesthetoolreference
compound definition. Formore
information, refertothesection
ToolReference onpage1647for
moreinformation ontheelement
tree.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofsitewithdefaultvalues
1552 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
formanufacturing parameters.
Note
Thenamewillbeignoredif
sitedoesnotexistinthe
manufacturing model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmanufacturing model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_CUSTOM_CYCLE_
NAMEPRO_VALUE_TYPE_WSTRING Specifiesthenameofcustom
cyclewhichwillbeusedtodefine
machining strategy.
Note
•Acustomcyclewith
specifiednamemust
existsinmanufacturing
model.
•Thiselementis
mandatory forcustom
cycleholemaking (when
theelement PRO_E_
HOLEMAKING_TYPE is
notsettoPRO_HOLE_
MK_CUSTOM)
PRO_E_HOLESETS Array Specifiesanarrayofholesets
whichgivesspecification ofholes
tomachine.Formoreinformation,
refertothesectionManufacturing
Holemaking Holesetonpage1555
formoreinformation onthe
elementtree.
PRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONSpecifiesthechecksurfaces
compound definition. Theelement
treefortheCheckingSurfacesis
definedintheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxformoreinformation onthe
elementtree.
PRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONSpecifiesthechecksurfaces
compound definition. Theelement
treefortheCheckingSurfacesis
definedintheheaderfile
ProMfgElemCheckSurf.h.
Formoreinformation, refertothe
sectionCheckingSurfacesonpage
1658formoreinformation onthe
elementtree.
Production Applications: CreoNCSequences, Operations andWorkCenters 1553ElementID DataType Description
PRO_E_TOOL_MTN_ARR Array Optionalelement.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Optionalelement.Specifiesthe
toolmotioncompound
specification. Theapplicable tool
motiontypesforthiselementare:
•Tool Motion —Auto Cut
onpage 1737
•Tool Motion —GoTo
Point onpage 1667
•Tool Motion —GoDelta
onpage 1671
•Tool Motion —GoHome
onpage 1675
•Tool Motion —Go
Retract onpage 1679
•Tool Motion —Connect
onpage 1733
•Tool Motion —CL
Command onpage 1738
.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.AllowstoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRetract onpage 1679
•Tool Motion —Connect
onpage 1733
•Tool Motion —CL
Command onpage 1738
.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Allowsto
startmachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Allowsto
endmachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Specifiesthe
arrayofidsofprerequisite
sequences. Theelementtreefor
theSequencePrerequisites is
definedintheheaderfile
ProMfgElemPrerequisi
te.h.Formoreinformation, refer
tothesectionSequence
Prerequisites onpage1653for
moreinformation ontheelement
tree.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometryreferences to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometryreferences to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
viewname.Itallowsyouto
1554 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
associatespecificviewwitha
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.It
allowsyoutoassociateaspecific
simplified representation witha
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimate.Itallowsyouto
specifytimeestimateforthe
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtimeestimate.Itallowsyouto
specifytimeestimateforthe
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimate.Itallowsyouto
specifycostestimateforthe
machining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtime.Itallowsyouto
specifyactualtimeforthe
machining step
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
Manufacturing Holemaking Holeset
Theelement PRO_E_HOLESETS specifiesanarrayofholesetsandgives
specifications aboutmachining references. Thiselementisdocumented inthe
headerfileProMfgElemHoleset.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1555ElementtreeforManufacturing Holemaking HolesetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxheaderfileProMfgElemHoleset.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1555ElementtreeforManufacturing Holemaking Holeset
1556 Creo®Parametric TOOLKIT User’sGuideThefollowingtableliststhecontentsofPRO_E_HOLESETS element.
ElementID DataType Description
PRO_E_HOLESET Compound Mandatory element.Specifiesthe
holesetdefinition.
Note
Theholesetarraymusthave
atleastonemember.
PRO_E_HOLESET_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
holesettype-axes,pointsor
geometry.Thevaluesforthis
elementaredefinedby
ProHolesetType.
PRO_E_HOLESET_START Compound Mandatory element.Specifiesthe
holemaking startcompound
specification.
Note
Thiselementisignoredfor
webdrilling.Mandatory for
othertypesofholemaking.
PRO_E_HOLESET_END Compound Specifiestheholemaking depth
compound specification.
Note
Thiselementisignoredfor
webdrilling.Mandatory for
othertypesofholemaking.
PRO_E_HOLESET_DEPTH Compound Specifiesthewebdrillingdepthxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompound specification.
Note
Thiselementisignoredfor
webdrilling.Mandatory for
othertypesofholemaking.
PRO_E_HOLESET_DEPTH Compound Specifiesthewebdrillingdepth
compound specification.
Note
Mandatory forwebdrilling.
Ignoredforothertypesof
holemaking.
PRO_E_HOLESET_CUSTOM_
CYCLE_PLATESCompound Specifiesthecompound definition
ofthecustomcycle.
Note
Thiselementismandatory
forcustomcycleholemaking.
Ignoredforothertypesof
holemaking.
PRO_E_DRILL_PART_DATA Compound Specifiesthecompound
information aboutcomponents
usedindepthcomputation.
Production Applications: CreoNCSequences, Operations andWorkCenters 1557ElementID DataType Description
Mandatory elementifstartorend
ofmachining hastobecomputed
andatleastoneofthefollowing
holdtrue:
•PRO_E_HOLESET_START_
TYPEissettoPRO_DRILL_
AUTO_START.
•PRO_E_HOLESET_END_
TYPEissettoPRO_DRILL_
AUTOorPRO_DRILL_
THRU_ALL.
•PRO_E_HOLESET_DEPTH_
TYPEissettoPRO_DRILL_
AUTOorPRO_DRILL_
THRU_ALL.
PRO_E_AUTO_SEL_DRILL_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPEissettoPRO_DRILL_
AUTO_START.
•PRO_E_HOLESET_END_
TYPEissettoPRO_DRILL_
AUTOorPRO_DRILL_
THRU_ALL.
•PRO_E_HOLESET_DEPTH_
TYPEissettoPRO_DRILL_
AUTOorPRO_DRILL_
THRU_ALL.
PRO_E_AUTO_SEL_DRILL_
PARTSPRO_VALUE_TYPE_INT Mandatory element.Theoption
definesthewaycomponents are
collected.Thevalidvaluesforthis
elementare:
•TRUE—All components of
type"reference part"or
"workpiece" areconsidered for
depthcalculation.
•FALSE—Only selected
components areconsidered in
depthcalculation.
PRO_E_DRILL_PARTS PRO_VALUE_TYPE_
SELECTIONSpecifiesthecomponents
selections. Thiselementsupports
multipleselections.
Note
Mandatory elementifPRO_
E_AUTO_SEL_DRILL_
PARTSissettoFALSE.
PRO_E_AUTODRILL_INFO Compound Acompound elementspecifying
autodrillinginformation.
Note
Thiselementismandatory
forautodrillingholesets.
PRO_E_AUTODRILL_DEPTH_
BY_TABLEPRO_VALUE_TYPE_INT Thiselementisusedforauto
drillingholesets.Thevalidvalues
forthiselementare:
•TRUE—It readsthedepth
information fromtheauto
drillingtable.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_AUTODRILL_DEPTH_
BY_TABLEPRO_VALUE_TYPE_INT Thiselementisusedforauto
drillingholesets.Thevalidvalues
forthiselementare:
•TRUE—It readsthedepth
information fromtheauto
drillingtable.
•FALSE—It takesthedepth
information fromtheholeset
1558 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
definition.
Note
Thiselementismandatory
forautodrillingholesets.
PRO_E_HOLESET_ORIENT_
TYPEPRO_VALUE_TYPE_INT Specifiesthemachining direction
optionfor5-axisholemaking from
theselectedreference. Thevalid
valuesforthiselementare:
•Away
•Toward
Thevaluesforthiselementare
definedby
ProDrillOrientType.
Note
Thiselementisoptionalfor
axesholesetfor5-axis
holemaking. Ignoredinall
othercases.
PRO_E_HOLESET_ORIENT_
REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthesinglereference
selection(surface,point,axis)to
definethedirectionofmachining
for5-axisholemaking.The valid
valuesforthiselementare:
•Away—Applicable whenthe
element PRO_E_HOLESET_
ORIENT_TYPE issetto
PRO_DRILL_ORIENT_TO_
REF.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinethedirectionofmachining
for5-axisholemaking.The valid
valuesforthiselementare:
•Away—Applicable whenthe
element PRO_E_HOLESET_
ORIENT_TYPE issetto
PRO_DRILL_ORIENT_TO_
REF.
•Toward—Applicable when
theelement PRO_E_
HOLESET_ORIENT_TYPE is
settoPRO_DRILL_
ORIENT_FROM_REF
Note
Thiselementisoptionalfor
axesholesetfor5-axis
holemaking. Ignoredinall
othercases.
PRO_E_HOLESET_TIP_CTRL_
PNTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
cuttingtoolcontroltipnumber.It
definesapointonthecuttingtool
tobecontrolled duringmachining
Production Applications: CreoNCSequences, Operations andWorkCenters 1559ElementID DataType Description
oftheholeset.
Note
Thefirstpointofthetoolis
usediftheelementdoesnot
exist.
PRO_E_HOLESET_
SELECTION_RULESCompound Mandatory element.Specifiesthe
compound information about
locationofholestodrill.
Note
Definethiselementwhenat
leastoneofthefollowing
childelementsaredefined:
•PRO_E_HOLESET_
SEL_PNTS_ON_
SURFACES
•PRO_E_HOLESET_
SEL_INDIV_PNTS
•PRO_E_HOLESET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocationofholestodrill.
Note
Definethiselementwhenat
leastoneofthefollowing
childelementsaredefined:
•PRO_E_HOLESET_
SEL_PNTS_ON_
SURFACES
•PRO_E_HOLESET_
SEL_INDIV_PNTS
•PRO_E_HOLESET_
SEL_PNTS_BY_
FEATURE
•PRO_E_HOLESET_
SEL_AUTO_CHAMFER
•PRO_E_HOLESET_
SEL_INDIV_AXES
•PRO_E_HOLESET_
SEL_AXIS_PATTS
•PRO_E_MFG_HSET_
DRILL_GROUP_REF
•PRO_E_HOLESET_
SEL_BY_SURFACES
•PRO_E_MFG_HSET_
DIAM_TYPE_OPT
•PRO_E_MFG_HSET_
DIAM_ARR
•PRO_E_MFG_HSET_
PARAM_ARR
PRO_E_MFG_HSET_START_
HOLE_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
axisselection(foraxesholeset)or
1560 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
pointselection(forpointsholeset)
fortheholetobedrilledfirst.
PRO_E_HOLESET_
UNFLIPPED_AXESPRO_VALUE_TYPE_
SELECTIONSpecifiestheaxisselections for
holesthatshouldbedrilledasper
orientation oftheaxisentities.
Thiselementsupportsmultiple
selections.
Note
Thiselementisoptionalfor
axesholesetfor5-axis
holemaking. Ignoredinall
othercases.
PRO_E_HOLESET_FLIPPED_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorientation oftheaxisentities.
Thiselementsupportsmultiple
selections.
Note
Thiselementisoptionalfor
axesholesetfor5-axis
holemaking. Ignoredinall
othercases.
PRO_E_HOLESET_FLIPPED_
AXESPRO_VALUE_TYPE_
SELECTIONSpecifiestheaxisselections for
holesthatshouldbedrilledinthe
directionoppositetothe
orientation oftheaxisentities.
Thiselementsupportsmultiple
selections.
Note
Thiselementisoptionalfor
axesholesetfor5-axis
holemaking. Ignoredinall
othercases.
PRO_E_HOLESET_GANG_
TOOL_INFOCompound Optionalelement.Acompound
elementspecifying thegangtool
properties.
PRO_E_HSET_GANG_TOOL_
PARENT_IDPRO_VALUE_TYPE_INT Thiselementismandatory for
gangtoolspecification. Specifies
theparentstepid.
PRO_E_HSET_IS_GANG_
TOOL_LEADERPRO_VALUE_TYPE_INT Thiselementismandatory for
gangtoolspecification. Specifies
ifholesetisaleaderofthegang
tool.Ittakesthefollowingvalues:
•True—Specifies thatthe
holesetisaleaderofthegang
tool.
•False—Specifies thatthe
holesetisnotaleaderofthe
gangtool.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxifholesetisaleaderofthegang
tool.Ittakesthefollowingvalues:
•True—Specifies thatthe
holesetisaleaderofthegang
tool.
•False—Specifies thatthe
holesetisnotaleaderofthe
gangtool.
ElementtreeforPRO_E_HOLESET_ST ART
TheelementtreeforPRO_E_HOLESET_START isasshowninthefigurebelow:
Production Applications: CreoNCSequences, Operations andWorkCenters 1561Thefollowingtableliststhesubelementsoftheelement PRO_E_HOLESET_
STARTdefinedintheheaderfileProMfgElemHoleset.h.
ElementID DataType Description
PRO_E_HOLESET_START Compound Mandatory element.Specifiesthe
holemaking startcompound
specification.
Note
Thiselementisignoredfor
webdrilling.Mandatory for
othertypesofholemaking.
PRO_E_HOLESET_START_
TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
startsurfaceoptionusingthe
enumerated value
ProDrillStartType.
Note
Thiselementisignoredfor
webdrillingand
counersinking (when PRO_
E_HOLEMAKING_TYPE is
settoPRO_HOLE_MK_
CSINKorPRO_HOLE_MK_
WEB).Mandatory forother
typesofholemaking.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDrillStartType.
Note
Thiselementisignoredfor
webdrillingand
counersinking (when PRO_
E_HOLEMAKING_TYPE is
settoPRO_HOLE_MK_
CSINKorPRO_HOLE_MK_
WEB).Mandatory forother
typesofholemaking.
1562 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_HOLESET_START_
SURFACEPRO_VALUE_TYPE_
SELECTIONSpecifiesthestartingsurfaceor
quiltselection.
Note
•Forcountersink, this
elementisoptionalif
auto_chamfer ruleisset
andthereisnoexplicit
axesselection.
•Forwebdrillingthis
elementisignored.
•Forotherholemaking
typesthiselementis
mandatory ifPRO_E_
HOLESET_START_
TYPEissettoPRO_
DRILL_FROM_
SURFACE.
PRO_E_HOLESET_START_Z_
OFFSETPRO_VALUE_TYPE_DOUBLE Specifiesthatthedrillingwillstart
atthisoffsetfromsequence
coordinate systemorigin.
Note
Thiselementismandatory if
theelement PRO_E_
HOLESET_START_TYPE is
settoPRO_DRILL_START_
OFFSET_FROM_CSYS.
Ignoredinallothercases.
ElementtreeforPRO_E_HOLESET_END
TheelementtreeforPRO_E_HOLESET_END isasshowninthefigurebelow:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheelement PRO_E_
HOLESET_START_TYPE is
settoPRO_DRILL_START_
OFFSET_FROM_CSYS.
Ignoredinallothercases.
ElementtreeforPRO_E_HOLESET_END
TheelementtreeforPRO_E_HOLESET_END isasshowninthefigurebelow:
Production Applications: CreoNCSequences, Operations andWorkCenters 1563Thefollowingtableliststhesubelementsoftheelement PRO_E_HOLESET_END
definedintheheaderfileProMfgElemHoleset.h.
ElementID DataType Description
PRO_E_HOLESET_END Compound Specifiestheholemaking depth
compound specification.
Note
Thiselementisignoredfor
webdrilling.Mandatory for
othertypesofholemaking.
PRO_E_HOLESET_END_TYPE PRO_VALUE_TYPE_INT Specifiestheendtypeoption.The
valuesforthiselementaredefined
byProDrillEndType.
Note
Thiselementisignoredfor
counersinking. Mandatory for
othertypesofholemaking.
PRO_E_HOLESET_END_
MEASURE_BYPRO_VALUE_TYPE_INT Specifiesthedepthcalculation
option.The validvaluesforthis
elementare
•Tip
•Shoulder
1564 Creo®Parametric TOOLKIT User’sGuideElementID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMEASURE_BYPRO_VALUE_TYPE_INT Specifiesthedepthcalculation
option.The validvaluesforthis
elementare
•Tip
•Shoulder
1564 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Thevaluesforthiselementare
definedby
ProDrillDepthByType.
Note
Thiselementisignoredfor
counersinking andweb
drilling.Mandatory forother
typesofholemaking.
PRO_E_HOLESET_END_
SURFACEPRO_VALUE_TYPE_
SELECTIONSpecifiestheendsurfaceorquilt
selection.
Note
•Thiselementisignored
forcountersinking and
webdrilling.
•Thiselementisignored
forcustomdrillingif
cycledefinitiondoesnot
useendsurface.
•Thiselementis
mandatory ifPRO_E_
HOLESET_END_TYPE is
settoPRO_DRILL_
UPTO_SURFACE.
Ignoredinallothercases.
PRO_E_HOLESET_DEPTH_
VALUEPRO_VALUE_TYPE_DOUBLE Specifiesthedepthtodrillfrom
start.
Note
Thiselementismandatory if
PRO_E_HOLESET_END_
TYPEissettoPRO_DRILL_
OFFSET_FROM_START.
Ignoredinallothercases.
PRO_E_HOLESET_END_Z_
OFFSETPRO_VALUE_TYPE_DOUBLE Specifiesthatthedrillingwillend
atthisoffsetfromsequencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_HOLESET_END_
TYPEissettoPRO_DRILL_
OFFSET_FROM_START.
Ignoredinallothercases.
PRO_E_HOLESET_END_Z_
OFFSETPRO_VALUE_TYPE_DOUBLE Specifiesthatthedrillingwillend
atthisoffsetfromsequence
Production Applications: CreoNCSequences, Operations andWorkCenters 1565ElementID DataType Description
coordinate systemorigin.
Note
Thiselementismandatory if
theelement PRO_E_
HOLESET_END_TYPE isset
toPRO_DRILL_END_
OFFSET_FROM_CSYS.
Ignoredinallothercases.
PRO_E_HOLESET_CSINK_
DIAMPRO_VALUE_TYPE_DOUBLE Specifiesthecountersink diameter.
Note
Thiselementismandatory
forcountersink sequence
(when PRO_E_
HOLEMAKING_TYPE isset
toPRO_HOLE_MK_CSINK).
Ignoredinallothercases.
PRO_E_HOLESET_USE_
BRKOUT_DISTPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifies the
depthbreakoutoption.Thevalid
valuesforthiselementare:
•TRUE—Todrillanadditional
BREAKOUT_DISTANCE
(manufacturing parameter)
deeper.
•FALSE— Doesnotdrill
deeperthandefinedbydepth
specification. Ignoredfor
countersink sequences.
Note
Thiselementisignoredifxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•TRUE—Todrillanadditional
BREAKOUT_DISTANCE
(manufacturing parameter)
deeper.
•FALSE— Doesnotdrill
deeperthandefinedbydepth
specification. Ignoredfor
countersink sequences.
Note
Thiselementisignoredif
end_typeisPRO_DRILL_
THRU_ALL_PARTS or
PRO_DRILL_AUTO_END.
ElementtreeforPRO_E_HOLESET_DEPTH
TheelementtreeforPRO_E_HOLESET_DEPTH isasshowninthefigurebelow:
1566 Creo®Parametric TOOLKIT User’sGuideThefollowingtableliststhesubelementsoftheelement PRO_E_HOLESET_
DEPTHdefinedintheheaderfileProMfgElemHoleset.h.
ElementID DataType Description
PRO_E_HOLESET_DEPTH Compound Specifiesthewebdrillingdepth
compound specification.
Note
Mandatory forwebdrilling.
Ignoredforothertypesof
holemaking.
PRO_E_HOLESET_DEPTH_
TYPEPRO_VALUE_TYPE_INT Specifiesthewebdrillingdepth
typeoption.Thevalidvaluesfor
thiselementare:
•Blind
•Auto
•Through
•Thevaluesforthiselementare
definedby
ProDrillDepthType.
Note
Thiselementismandatory
forwebdrilling.Ignoredfor
othertypesofholemaking.
PRO_E_HOLESET_DEPTH_BY_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthiselementare:
•Blind
•Auto
•Through
•Thevaluesforthiselementare
definedby
ProDrillDepthType.
Note
Thiselementismandatory
forwebdrilling.Ignoredfor
othertypesofholemaking.
PRO_E_HOLESET_DEPTH_BY_
TYPEPRO_VALUE_TYPE_INT Specifiesthewebdrillingdepth
calculation option.Thevalid
valuesforthiselementare:
•Tip
•Shoulder
•Thevaluesforthiselementare
Production Applications: CreoNCSequences, Operations andWorkCenters 1567ElementID DataType Description
definedby
ProDrillDepthByType.
Note
Thiselementismandatory
forwebdrilling.Ignoredfor
othertypesofholemaking.
PRO_E_HOLESET_DEPTH_
PLATESArray Specifiesanarrayofwebdrilling
plates.
Note
Thiselementismandatory
forwebdrilling.Ignoredfor
othertypesofholemaking.
PRO_E_HOLESET_DEPTH_
PLATECompound Mandatory element.Specifiesthe
webdrillingplatedefinition.
Note
Atleastoneplatemustbe
definedinarrayofplates.
PRO_E_HOLESET_PLATE_
STARTPRO_VALUE_TYPE_
SELECTIONSpecifiesthewebdrillingplate
startingsurfaceorquiltselection.
Note
Thiselementismandatory ifxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Atleastoneplatemustbe
definedinarrayofplates.
PRO_E_HOLESET_PLATE_
STARTPRO_VALUE_TYPE_
SELECTIONSpecifiesthewebdrillingplate
startingsurfaceorquiltselection.
Note
Thiselementismandatory if
PRO_E_HOLESET_DEPTH_
TYPEissettoPRO_DRILL_
BLIND.Ignoredinallother
cases.
PRO_E_HOLESET_PLATE_
END_OPTPRO_VALUE_TYPE_INT Specifiesthewebdrillingplate
depthtypeoption.Thevaluesfor
thiselementaredefinedby
ProDrillEndType.
Note
Thiselementismandatory
forwebdrilling.Ignoredfor
othertypesofholemaking.
PRO_E_HOLESET_PLATE_END PRO_VALUE_TYPE_
SELECTIONSpecifiesthewebdrillingplate
1568 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
endsurfaceorquiltselection.
Note
Thiselementismandatory
forwebdrillingifPRO_E_
HOLESET_PLATE_END_
OPTissettoPRO_DRILL_
UPTO_SURFACE. Ignoredin
allothercases.
PRO_E_HOLESET_PLATE_
DEPTHPRO_VALUE_TYPE_DOUBLE Specifiesthewebdrillingdepth
fromplatestart.
Note
Mandatory forwebdrillingif
PRO_E_HOLESET_PLATE_
END_OPT issettoPRO_
DRILL_OFFSET_FROM_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallothercases.
PRO_E_HOLESET_PLATE_
DEPTHPRO_VALUE_TYPE_DOUBLE Specifiesthewebdrillingdepth
fromplatestart.
Note
Mandatory forwebdrillingif
PRO_E_HOLESET_PLATE_
END_OPT issettoPRO_
DRILL_OFFSET_FROM_
START.Ignoredinallother
cases.
PRO_E_HOLESET_PLATE_
BRKOUTPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
webdrillingdepthbreakout
option.Thevalidvaluesforthis
elementare:
•TRUE—Drills anadditional
BREAKOUT_DISTANCE
(manufacturing parameter)
deeper.
•FALSE—Does notdrilldeeper
thandefinedbydepth
specification.
Note
Thiselementisignoredfor
countersink sequences.
ElementTreeforPRO_E_HOLESET_CUST OM_CYCLE_
PLATES
TheelementtreeforPRO_E_HOLESET_CUSTOM_CYCLE_PLATES isasshown
inthefigurebelow:
Production Applications: CreoNCSequences, Operations andWorkCenters 1569Thefollowingtableliststhesubelementsoftheelement PRO_E_HOLESET_
CUSTOM_CYCLE_PLATES definedintheheaderfile
ProMfgElemHoleset.h.
ElementID DataType Description
PRO_E_HOLESET_CUSTOM_
CYCLE_PLATESCompound Specifiesthecompound definitionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCUSTOM_CYCLE_PLATES definedintheheaderfile
ProMfgElemHoleset.h.
ElementID DataType Description
PRO_E_HOLESET_CUSTOM_
CYCLE_PLATESCompound Specifiesthecompound definition
ofthecustomcycle.
Note
Thiselementismandatory
forcustomcycleholemaking.
Ignoredforothertypesof
holemaking.
PRO_E_HOLESET_CUSTOM_
CYCLE_REFERENCESArray Specifiesanarrayofcustomcycle
1570 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
references.
Note
•Thenumberofmembers
inarrayshouldmatch
withnumberofreferences
incustomcycledefinition
(storedinmanufacturing
model).
•Mandatory ifreferences
areusedinthecustom
cycledefinition(see
PRO_E_MFG_CUSTOM_
CYCLE_NAME).
PRO_E_HOLESET_CUSTOM_
CYCLE_REFCompound Mandatory elementforcustom
cyclewithreferences. Specifies
thecompound definitionofa
customcyclereference.
PRO_E_MFG_CUST_CYCLE_
PLATE_NAMECompound Mandatory elementforreference
definition. Specifiesthenameof
customcyclereference.
PRO_E_HOLESET_CUSTOM_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecompound definitionofa
customcyclereference.
PRO_E_MFG_CUST_CYCLE_
PLATE_NAMECompound Mandatory elementforreference
definition. Specifiesthenameof
customcyclereference.
PRO_E_HOLESET_CUSTOM_
CYCLE_REF_OPTPRO_VALUE_TYPE_INT Mandatory elementforreference
definition. Specifiesthetypeof
referencespecification. Thevalues
forthiselementaredefinedby
ProCustomRefOption.
PRO_E_HOLESET_CUSTOM_
CYCLE_REF_SELPRO_VALUE_TYPE_
SELECTIONSpecifiesthecustomcycle
referencesurfaceorquilt
selection.
Note
Mandatory ifPRO_E_
HOLESET_CUSTOM_
CYCLE_REF_OPT issetto
PRO_CUSTOM_DRILL_
SELECT_REFERENCE.
Ignoredinallothercases.
PRO_E_HOLESET_CUSTOM_
CYCLE_REF_Z_OFFSETPRO_VALUE_TYPE_DOUBLE Specifiesthecustomcycle
referencespecification byoffset
valuefromsequencecoordinate
Production Applications: CreoNCSequences, Operations andWorkCenters 1571ElementID DataType Description
systemorigin.
Note
Mandatory ifPRO_E_
HOLESET_CUSTOM_
CYCLE_REF_OPT issetto
PRO_CUSTOM_DRILL_
OFFSET_FROM_CSYS.
Ignoredinallothercases.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsystemorigin.
Note
Mandatory ifPRO_E_
HOLESET_CUSTOM_
CYCLE_REF_OPT issetto
PRO_CUSTOM_DRILL_
OFFSET_FROM_CSYS.
Ignoredinallothercases.
PRO_E_HOLESET_CUSTOM_
CYCLE_REF_DEPTHSpecifiesthecustomcycle
referencespecification byoffset
valuefromstartsurface.
Note
Mandatory ifPRO_E_
HOLESET_CUSTOM_
CYCLE_REF_OPT issetto
PRO_CUSTOM_DRILL_
OFFSET_FROM_START.
Ignoredinallothercases.
PRO_E_HOLESET_CUSTOM_
CYCLE_VARIABLESArray Specifiesanarrayofcustomcycle
variables.
Note
•Thenumberofmembers
inarrayshouldmatch
withnumberofvariables
inthecustomcycle
definition(storedin
manufacturing model).
•Mandatory ifvariables
areusedinnamedcustom
cycle(seePRO_E_MFG_
CUSTOM_CYCLE_
NAME).
PRO_E_HOLESET_CUSTOM_
CYCLE_VARCompound Mandatory elementforcustom
cyclewithvariables.Specifiesthe
compound definitionofacustom
cyclevariable.
1572 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_CUST_CYCLE_
VAR_NAMEPRO_VALUE_TYPE_WSTRING Mandatory elementforvariable
definition. Specifiesthenameofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcyclevariable.
1572 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_CUST_CYCLE_
VAR_NAMEPRO_VALUE_TYPE_WSTRING Mandatory elementforvariable
definition. Specifiesthenameof
customcyclevariable.
PRO_E_HOLESET_CUSTOM_
CYCLE_VAR_VALUEPRO_VALUE_TYPE_DOUBLE Mandatory elementforvariable
definition. SpecifiestheCustom
cyclevariablevalue.
ElementtreeforPRO_E_HOLESET_SELECTION_RULES
TheelementtreeforPRO_E_HOLESET_SELECTION_RULES isasshownin
thefigurebelow:
Production Applications: CreoNCSequences, Operations andWorkCenters 1573Thefollowingtableliststhesubelementsoftheelement PRO_E_HOLESET_
SELECTION_RULES definedintheheaderfileProMfgElemHoleset.h.
1574 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_HOLESET_
SELECTION_RULESCompound Mandatory element.Specifiesthe
compound information about
locationofholestodrill.
Note
Definethiselementwhenat
leastoneofthefollowing
childelementsaredefined:
•PRO_E_HOLESET_
SEL_PNTS_ON_
SURFACES
•PRO_E_HOLESET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompound information about
locationofholestodrill.
Note
Definethiselementwhenat
leastoneofthefollowing
childelementsaredefined:
•PRO_E_HOLESET_
SEL_PNTS_ON_
SURFACES
•PRO_E_HOLESET_
SEL_INDIV_PNTS
•PRO_E_HOLESET_
SEL_PNTS_BY_
FEATURE
•PRO_E_HOLESET_
SEL_AUTO_CHAMFER
•PRO_E_HOLESET_
SEL_INDIV_AXES
•PRO_E_HOLESET_
SEL_AXIS_PATTS
•PRO_E_MFG_HSET_
DRILL_GROUP_REF
•PRO_E_HOLESET_
SEL_BY_SURFACES
•PRO_E_MFG_HSET_
DIAM_TYPE_OPT
•PRO_E_MFG_HSET_
DIAM_ARR
•PRO_E_MFG_HSET_
PARAM_ARR
PRO_E_HOLESET_SEL_PNTS_
ON_SURFACESPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofsurfaces
(orquilts)withpoints.This
elementsupportsmultiple
Production Applications: CreoNCSequences, Operations andWorkCenters 1575ElementID DataType Description
selections.
Note
•Thiselementisoptional
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
•Thiselementisignored
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
PRO_E_HOLESET_SEL_PNTS_
BY_FEATUREPRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxE_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
•Thiselementisignored
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
PRO_E_HOLESET_SEL_PNTS_
BY_FEATUREPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdatum
pointfeatures.Thiselement
supportsmultipleselections.
Note
•Thiselementisoptional
elementforpointsholeset
(PRO_E_HOLESET_
TYPEissettoPRO_
HOLESET_DRILL_
POINTS).
•Thiselementisignored
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES)
PRO_E_HOLESET_SEL_
PROJECT_SURFACESPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofsurfaces
orquilts.Thiselementsupports
1576 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
multipleselections.
Note
•Thiselementis
mandatory forfive-axis
holemaking (PRO_E_
MFG_SEQ_NUM_AXES_
OPTissetto5)ifatleast
onepointselectionisset
foroneofthefollowing
elements:
○PRO_E_HOLESET_
SEL_INDIV_PNTS
○PRO_E_HOLESET_
SEL_PNTS_BY_
FEATURE
•Onlythepointsplacedon
selectedsurfacewillbe
considered formachiningxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonepointselectionisset
foroneofthefollowing
elements:
○PRO_E_HOLESET_
SEL_INDIV_PNTS
○PRO_E_HOLESET_
SEL_PNTS_BY_
FEATURE
•Onlythepointsplacedon
selectedsurfacewillbe
considered formachining
inthedirectionnormalto
thesurface(atthe
locationdefinedbythe
point).
•Thiselementisignored
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
PRO_E_HOLESET_SEL_MAX_
PROJECT_DISTPRO_VALUE_TYPE_DOUBLE Specifiestheaccuracyusedto
determine whetherapointliesona
Production Applications: CreoNCSequences, Operations andWorkCenters 1577ElementID DataType Description
surface.
Note
•Thiselementis
mandatory forfive-axis
holemaking (PRO_E_
MFG_SEQ_NUM_AXES_
OPTissetto5)ifatleast
onepointselectionisset
foroneofthefollowing
elements:
○PRO_E_HOLESET_
SEL_INDIV_PNTS
○PRO_E_HOLESET_
SEL_PNTS_BY_
FEATURE
•Onlythepointsplacedon
selectedsurfacewillbe
considered formachining
inthedirectionnormalto
thesurface(atthe
locationdefinedbythe
point).
•Thiselementisignored
foraxesholeset(PRO_E_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFEATURE
•Onlythepointsplacedon
selectedsurfacewillbe
considered formachining
inthedirectionnormalto
thesurface(atthe
locationdefinedbythe
point).
•Thiselementisignored
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
PRO_E_HOLESET_SEL_
UNSEL_PNTSPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofpoints
forholestobeexcludedfor
machining. Thiselementsupports
1578 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
multipleselections.
Note
•Thiselementisoptional
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
•Thiselementisignored
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
PRO_E_HOLESET_SEL_
INDIV_PNTSPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofpoints.
Thiselementsupportsmultiple
selections.
Note
•Thiselementis
mandatory forpoints
holeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_POINTS) if
noneofthefollowing
elementsisdefined:
○PRO_E_HOLESET_
SEL_PNTS_ON_
SURFACES
○PRO_E_HOLESET_
SEL_PNTS_BY_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmandatory forpoints
holeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_POINTS) if
noneofthefollowing
elementsisdefined:
○PRO_E_HOLESET_
SEL_PNTS_ON_
SURFACES
○PRO_E_HOLESET_
SEL_PNTS_BY_
FEATURE
•Ignoredforaxesholeset
(PRO_E_HOLESET_
TYPEissettoPRO_
HOLESET_DRILL_
AXES).
PRO_E_HOLESET_SEL_AUTO_
CHAMFERPRO_VALUE_TYPE_INT Specifiestheautochamferoption.
Thevalidvaluesforthiselement
are:
•TRUE—Collects holeswith
chamfersmatchingchamfer
anglewithangleofcuttingtool
Production Applications: CreoNCSequences, Operations andWorkCenters 1579ElementID DataType Description
(seePRO_E_MFG_TOOL_
REF_COMPOUND fortool
reference).
•FALSE—Does notcollect
holesbychamferdimensions.
Note
Thiselementisignoredfor
pointsholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_DRILL_
POINTS).
PRO_E_HOLESET_SEL_AXIS_
PATTSPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofaxesof
patternedholes.Ifapatternleader
isselected,allholesinpatternwill
becollected.Thiselement
supportsmultipleselections.
Note
•ThiselementisOptionalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONSpecifiestheselectionofaxesof
patternedholes.Ifapatternleader
isselected,allholesinpatternwill
becollected.Thiselement
supportsmultipleselections.
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
PRO_E_MFG_HSET_DRILL_
GROUP_REFPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdrill
groupfeatures.Thiselement
supportsmultipleselections.
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
1580 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_HOLESET_SEL_BY_
SURFACESPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofsurfaces
orquiltswithholes.Thiselement
supportsmultipleselections.
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONSpecifiestheselectionofsurfaces
orquiltswithholes.Thiselement
supportsmultipleselections.
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
PRO_E_MFG_HSET_DIAM_
TYPE_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeofholediametersthatcanbe
collectedintheelement PRO_E_
MFG_HSET_DIAM_ARR. The
typeofholediameterisspecified
usingtheenumerated datatype
ProHolesetDiamType. The
validvaluesare:
•PRO_HSET_ALL_DIAMS—
Thisisthedefaultvalue.
Specifiesthatdiametersof
bothsolidsurfacesand
cosmeticthreadscanbe
collected.
Note
Iftheelement PRO_E_
MFG_HSET_DIAM_
TYPE_OPT isnot
defined,thenbydefault,
theholediameteroftype
PRO_HSET_ALL_
DIAMSisused.
•PRO_HSET_HOLE_DIAMS—
Specifiesthatdiametersonly
ofsolidsurfacescanbe
collected.
•PRO_HSET_THREAD_
DIAMS—Specifies that
diametersonlyofcosmetic
threadscanbecollected.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_HSET_ALL_
DIAMSisused.
•PRO_HSET_HOLE_DIAMS—
Specifiesthatdiametersonly
ofsolidsurfacescanbe
collected.
•PRO_HSET_THREAD_
DIAMS—Specifies that
diametersonlyofcosmetic
threadscanbecollected.
Production Applications: CreoNCSequences, Operations andWorkCenters 1581ElementID DataType Description
Note
Thiselementisnotrequired
forholesetoftypepointsand
geometry.
PRO_E_MFG_HSET_DIAM_ARR Array Specifiesanarrayofdiametersof
holestomachine.
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
PRO_E_MFG_HSET_DIAM_
COMPOUNDCompound Specifiesthecompound definition
ofaholediameter.
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
PRO_E_MFG_HSET_HOLE_
DIAMPRO_VALUE_TYPE_DOUBLE Specifiesthediameterofaholeto
machine.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
PRO_E_MFG_HSET_HOLE_
DIAMPRO_VALUE_TYPE_DOUBLE Specifiesthediameterofaholeto
machine.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_DIAM_COMPOUND
element.
PRO_E_MFG_HSET_PARAM_
RULE_OPTPRO_VALUE_TYPE_INT Specifiesthetypeofquerythat
mustbeusedtosearchforholesto
1582 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
machine.
Thequerytypeisspecifiedusing
theenumerated datatype
ProHsetParamRuleOpt. The
validvaluesare:
•PRO_HSET_BOOL_OPER_
OR—Collects holesthatsatisfy
atleastoneofthesearch
conditions setforaparameter.
PRO_HSET_BOOL_OPER_
AND—Collects holesthat
satisfyallthesearchconditions
setforaparameter.
Thesearchconditions and
parameters aredefinedinthe
elements PRO_E_MFG_HSET_
PARAM*.
PRO_E_MFG_HSET_PARAM_
ARRArray Specifiesanarrayofsearch
conditions tocollectholesfor
machining.
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issettoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelements PRO_E_MFG_HSET_
PARAM*.
PRO_E_MFG_HSET_PARAM_
ARRArray Specifiesanarrayofsearch
conditions tocollectholesfor
machining.
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
PRO_E_MFG_HSET_PARAM_
COMPOUNDCompound Optionalelement.Specifiesa
compound elementthatdefinesa
searchconditiontomatchwiththe
userdefinedparameters inhole
features.
Eachconditiondefinesan
expression withuserdefined
parameter nameontheleftsideof
theexpression andvalueto
compareontherightside.
Production Applications: CreoNCSequences, Operations andWorkCenters 1583ElementID DataType Description
Note
•ThiselementisOptional
foraxesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_
DRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
PRO_E_MFG_HSET_PARAM_
NAMEPRO_VALUE_TYPE_WSTRING Specifiesthenameofuserdefined
parameter.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDRILL_AXES).
•Thiselementisignored
forpointsholeset(PRO_
E_HOLESET_TYPE is
settoPRO_HOLESET_
DRILL_POINTS).
PRO_E_MFG_HSET_PARAM_
NAMEPRO_VALUE_TYPE_WSTRING Specifiesthenameofuserdefined
parameter.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
element.
PRO_E_MFG_HSET_PARAM_
DTYPEPRO_VALUE_TYPE_INT Specifiesthedatatypeofthe
value.Thevaluesforthiselement
aredefinedbydefinedby
ProParamvalueType.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
element.
PRO_E_MFG_HSET_PARAM_
OPERPRO_VALUE_TYPE_INT SpecifiestheTtypeofexpression
operator.Thevaluesforthis
elementaredefinedbydefinedby
ProDrillParamOper.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
element.
1584 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_HSET_PARAM_
VAL_DBLPRO_VALUE_TYPE_DOUBLE Specifiesthevalueoftypedouble.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM
_COMPOUND elementfor
doubledatatype(PRO_E_
MFG_HSET_PARAM_DTYPExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVAL_DBLPRO_VALUE_TYPE_DOUBLE Specifiesthevalueoftypedouble.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM
_COMPOUND elementfor
doubledatatype(PRO_E_
MFG_HSET_PARAM_DTYPE
issettoPRO_PARAM_
DOUBLE). Ignoredforother
datatypes.
PRO_E_MFG_HSET_PARAM_
VAL_INTPRO_VALUE_TYPE_INT Specifiesthevalueoftypeinteger.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
elementfordoubledatatype
(PRO_E_MFG_HSET_
PARAM_DTYPE issetto
PRO_PARAM_INTEGER).
Ignoredforotherdatatypes.
PRO_E_MFG_HSET_PARAM_
VAL_STRPRO_VALUE_TYPE_WSTRING Specifiesthevalueoftypestring.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
elementfordoubledatatype
(PRO_E_MFG_HSET_
PARAM_DTYPE issetto
PRO_PARAM_STRING).
Ignoredforotherdatatypes.
PRO_E_MFG_HSET_PARAM_
VAL_BOOLPRO_VALUE_TYPE_INT Specifiesthevalueoftype
Production Applications: CreoNCSequences, Operations andWorkCenters 1585ElementID DataType Description
ProBoolean.
Note
Thiselementisamandatory
childofPRO_E_MFG_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1585ElementID DataType Description
ProBoolean.
Note
Thiselementisamandatory
childofPRO_E_MFG_
HSET_PARAM_COMPOUND
elementfordoubledatatype
(PRO_E_MFG_HSET_
PARAM_DTYPE issetto
PRO_PARAM_BOOLEAN).
Ignoredforotherdatatypes.
PRO_E_HOLESET_SEL_
UNSEL_AXESPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofaxesof
holestobeexcludedfor
machining. Thiselementsupports
multipleselections.
Note
•ThiselementisOptionalfor
axesholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_DRILL_
AXES).
•Thiselementisignoredfor
pointsholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_DRILL_
POINTS).
Thiselementsupportsmultiple
selections.
PRO_E_HOLESET_SEL_
INDIV_AXESPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdatum
axes.Mandatory elementforaxes
holeset(PRO_E_HOLESET_
TYPEissettoPRO_HOLESET_
DRILL_AXES) ifnoneofthe
followingelementsisdefined:
•PRO_E_HOLESET_SEL_
AUTO_CHAMFER
•PRO_E_HOLESET_SEL_
AXIS_PATTS
•PRO_E_MFG_HSET_
DRILL_GROUP_REFxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxholeset(PRO_E_HOLESET_
TYPEissettoPRO_HOLESET_
DRILL_AXES) ifnoneofthe
followingelementsisdefined:
•PRO_E_HOLESET_SEL_
AUTO_CHAMFER
•PRO_E_HOLESET_SEL_
AXIS_PATTS
•PRO_E_MFG_HSET_
DRILL_GROUP_REF
•PRO_E_HOLESET_SEL_
BY_SURFACES
•PRO_E_MFG_HSET_DIAM_
ARR
•PRO_E_MFG_HSET_
PARAM_ARR
1586 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Thiselementisignoredfor
pointsholeset(PRO_E_
HOLESET_TYPE issetto
PRO_HOLESET_DRILL_
POINTS).
Thiselementsupportsmultiple
selections.
PRO_E_HOLESET_SEL_
UNSEL_GEOMETRYPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofholesto
beexcludedformachining. This
elementsupportsmultiple
selections.
Note
•Thiselementisoptional
forageometryholeset
thatis,iftheelement
PRO_E_HOLESET_
TYPEissettoPRO_
HOLESET_DRILL_
GEOM.
•Thiselementisignored
forpointsholesetand
axesholeset.
PRO_E_HOLESET_SEL_
INDIV_GEOMETRYPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionfor
individual holes.Thiselement
supportsmultipleselections. This
elementismandatory forgeometryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaxesholeset.
PRO_E_HOLESET_SEL_
INDIV_GEOMETRYPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionfor
individual holes.Thiselement
supportsmultipleselections. This
elementismandatory forgeometry
holeset,ifnoneofthefollowing
elementsaredefined:
•PRO_E_HOLESET_SEL_
AUTO_CHAMFER
•PRO_E_HOLESET_SEL_
BY_SURFACES
•PRO_E_MFG_HSET_DIAM_
ARR
Note
Thiselementisignoredfor
pointsholesetandaxes
holeset.
Production Applications: CreoNCSequences, Operations andWorkCenters 1587ShutoffSurfaceFeatureElementTree
Theshutofftoolcreatesasurfacethatcapsanopeninginamoldedpart.Inthe
MoldandCastDesignmode,theshutofftoolcreatesanassemblysurfacethat
references thequilts,surfacesandedgesofapart.InthePartdesignmode,the
shutofftoolcreatespartsurfacesthatreferencesolidsurfacesandquiltsurfaces
withsingle-sided ordouble-sided edges.
Theelementtreefortheshutoffsurfacefeatureisdocumented intheheaderfile
ProMoldShutSrf.h, andisasshowninthefollowingfigure:
ElementTreeforMoldShutOfffeature:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwithsingle-sided ordouble-sided edges.
Theelementtreefortheshutoffsurfacefeatureisdocumented intheheaderfile
ProMoldShutSrf.h, andisasshowninthefollowingfigure:
ElementTreeforMoldShutOfffeature:
Thefollowingtabledescribestheelementsintheelementtreefortheshut-off
surfacefeature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthefeature.
Thevalidvalueforthiselementis
PRO_MOLD_SHUTOFF_SRF.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthefeature.
1588 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_SHUT_SRF_REF_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofreferences tobeselected
fortheshutoffsurface.Select
eithersurfacereferences orcurve
references. Thevalidvaluesfor
thiselementaredefinedinthe
enumerated type
ProShutSrfRefType:
•PRO_SHUT_SRF_SRF_
REF—Specifiesthereferences
forasurface.
•PRO_SHUT_SRF_CRV_
REF—Specifiesthereferences
foracurve.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthiselementaredefinedinthe
enumerated type
ProShutSrfRefType:
•PRO_SHUT_SRF_SRF_
REF—Specifiesthereferences
forasurface.
•PRO_SHUT_SRF_CRV_
REF—Specifiesthereferences
foracurve.
PRO_E_SHUT_SRF_SRF_REFS Compound Mandatory element.Specifiesa
compound elementthatcontains
thesurfacereferences.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONSpecifiesthesurfacesforwhich
shutoffsurfacesneedtobe
created.Selectasinglesurfaceor
multiplesurfaces,ifthereference
typePRO_E_SHUT_SRF_REF_
TYPEissetasPRO_SHUT_SRF_
SRF_REF. IfPRO_E_SHUT_
SRF_REF_TYPE issetasPRO_
SHUT_SRF_CRV_REF, thenall
thesurfacesareautomatically
selected.
PRO_E_SHUT_SRF_COLL_
CRV_CMPCompound Specifiesacompound elementfor
curvechains.Chainsenableyouto
performoperations onallofthe
selectedcurvesinthatchainoron
multiplechainssimultaneously by
eitherincludingorexcluding them
fromcreatingshutoffsurfaces.
PRO_E_SHUT_SRF_ARR_
COLL_CRVArray Specifiesanarrayofcurvechain
loopsthatcanbeincludedor
excludedfromcreatingshutoffxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxeitherincludingorexcluding them
fromcreatingshutoffsurfaces.
PRO_E_SHUT_SRF_ARR_
COLL_CRVArray Specifiesanarrayofcurvechain
loopsthatcanbeincludedor
excludedfromcreatingshutoff
surfaces.Bydefaultallthe
selectedsurfacesareincluded
whilecreatingtheshutoff
Production Applications: CreoNCSequences, Operations andWorkCenters 1589ElementID DataType Description
surfaces.
Note
Theselectedloopsare
excludedwhilecreatingshut
offsurfacesonlyifthe
element PRO_E_SHUT_
SRF_CLOSE_ALL issetto
PRO_SHUT_SRF_SHUT_
ALLandthiselement
becomesoptional.
PRO_E_STD_CURVE_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONSpecifiesthereferencechainloops
tobeincludedorexcludedwhile
creatingshutoffsurfaces.Select
bothopenandclosedchainloops
asreference. Bydefaultallthe
selectedreferencechainloopsare
includedwhilecreatingtheshut
offsurfaces.Thereferencechain
loopsareexcludedonlyifthe
valueoftheelement PRO_E_
SHUT_SRF_CLOSE_ALL isset
tothevalue True.
Note
Youcanspecifyonlyone-
sidededgesascurvechain
loopsiftheelement PRO_E_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoffsurfaces.Thereferencechain
loopsareexcludedonlyifthe
valueoftheelement PRO_E_
SHUT_SRF_CLOSE_ALL isset
tothevalue True.
Note
Youcanspecifyonlyone-
sidededgesascurvechain
loopsiftheelement PRO_E_
SHUT_SRF_REF_TYPE is
settoPRO_SHUT_SRF_
CRV_REF.
PRO_E_SHUT_SRF_CAP_SRFS Compound Optionalelement.Specifiesa
compound elementforcapsurface
references.
1590 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofreference
surfacesforcappingopenloops.
Thisisanoptionalelementand
youcanselectsingleormultiple
surfacesasreference.
Note
•Youcanselectmultiple
surfacesonlyifthedatum
planeisnotselected.
•Selectareferencesurface
onlyifopencurve-chain
loopsareselected.
PRO_E_SHUT_SRF_CLOSE_
ALLPRO_VALUE_TYPE_BOOLEAN Specifiesanoptiontoincludeall
loopswhilecreatingshutoff
surfaces.Thevalidvalueforthis
elementisPRO_SHUT_SRF_
SHUT_ALL.
ElementTrees:Manufacturing Roundand
ChamferxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxALLPRO_VALUE_TYPE_BOOLEAN Specifiesanoptiontoincludeall
loopswhilecreatingshutoff
surfaces.Thevalidvalueforthis
elementisPRO_SHUT_SRF_
SHUT_ALL.
ElementTrees:Manufacturing Roundand
Chamfer
Thissectiondescribeshowtoconstructandaccesstheelementtreefor
manufacturing aroundandchamferfeature.Italsodescribeshowtocreate,
redefine,andaccesstheproperties ofthesefeatures.
Manufacturing RoundAndChamferElementTree
TheelementtreefortheRoundandChamferfeatureisdocumented intheheader
fileProMfgFeatRoundChamferMilling.h andisasshowninthe
followingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1591ElementTreeforRoundAndChamferfeature
1592 Creo®Parametric TOOLKIT User’sGuideThefollowingtabledescribestheelementsintheelementtreefortheRoundand
Chamferfeature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxChamferfeature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueis
Engraving_1.
PRO_E_SEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvaluesforthiselementare:
•PRO_SEQ_ROUND_MILL—
Forroundsequence.
•PRO_SEQ_CHAMFER_
MILL—Forchamfer
sequence.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_SEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthesequeecoordinate
systemfortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.SpecifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSpecifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_ PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1593ElementID DataType Description
NAME nameofthesitefilewithdefaultxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1593ElementID DataType Description
NAME nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MACH_SURFS Compound Mandatory compound element.
Specifiesthemachining surfaces
compound definition. Formore
information, refertothesection
ElementTrees:Machining
Surfacesonpage1544.
PRO_E_MFG_CUT_START_
PNT_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Selectadatum
point,orapointonthebottom
edgesofthemachining surfaces.
Note
Thiselementisapplicable
onlywhenthemachining
surfacesformaclosedloop.
Itallowstostartmachining at
thelocationnearesttothe
selectedpoint.
PRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
checksurfacescollection. Forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacesformaclosedloop.
Itallowstostartmachining at
thelocationnearesttothe
selectedpoint.
PRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
checksurfacescollection. For
moreinformation, refertothe
sectionCheckingSurfacesonpage
1658.
PRO_E_TOOL_MTN_ARR Array Optionalelement.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Optionalcompound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypefor
thiselementare:
•PRO_TM_TYPE_ROUND_
MILLING— ForRound
Sequence. Formore
information, refertothe
sectionToolMotion—Round
Millingonpage1750.
1594 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_TM_TYPE_CHAMFER_
MILLING— ForChamfer
sequence.Formore
information, refertothe
sectionToolMotion—
ChamferMillingonpage
1746.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,
refertothesectionTool
Motion—FollowCutonpage
1741.
•PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionTool
Motion—FollowCurveon
page1665.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,
refertothesectionTool
Motion—FollowCutonpage
1741.
•PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionTool
Motion—FollowCurveon
page1665.
•PRO_TM_TYPE_GOTO_
POINT.Formoreinformation,
refertothesectionTool
Motion—GoToPointon
page1667.
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
•PRO_TM_TYPE_GOHOME.
Formoreinformation, referto
thesectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_CONNECT.
Formoreinformation, referto
thesectionToolMotion—
Connectonpage1733.
•PRO_TM_TYPE_PLUNGE.
Formoreinformation, referto
thesectionToolMotion—
Plungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—Go
Retractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothe
sectionToolMotion—
TangentApproach onpage
1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionToolxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRetractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothe
sectionToolMotion—
TangentApproach onpage
1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionTool
Production Applications: CreoNCSequences, Operations andWorkCenters 1595ElementID DataType Description
Motion—TangentExiton
page1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—
NormalApproach onpage
1681.
•PRO_TM_TYPE_NORMAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—NormalExiton
page1684.
•PRO_TM_TYPE_LEAD_IN.
Formoreinformation, referto
thesectionToolMotion—
LeadInonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—
LeadOutonpage1686.
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—Helical
Approach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—HelicalExiton
page1691.
•PRO_TM_TYPE_RAMP_
APPROACH. Formore
information, refertothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxApproach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—HelicalExiton
page1691.
•PRO_TM_TYPE_RAMP_
APPROACH. Formore
information, refertothe
sectionToolMotion—Ramp
Approach onpage1729.
•PRO_TM_TYPE_RAMP_
EXIT.Formoreinformation,
refertothesectionTool
Motion—RampExitonpage
1731.
1596 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothe
sectionToolMotion—CL
Command onpage1738.
Theapplicable toolmotiontypes
for4and5-axismachining are:
•PRO_TM_TYPE_ALONG_
AXIS_APPROACH. Formore
information, refertothe
sectionApproach AlongTool
Axisonpage1661.
•PRO_TM_TYPE_ALONG_
AXIS_EXIT. Formore
information, refertothe
sectionExitAlongToolAxis
onpage1663.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.SpecifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequees.Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
refereeselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1597ElementID DataType Description
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcostestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:EngravingStep
Thissectiondescribeshowtoconstructandaccesstheelementtreefora
engraving step.Italsodescribeshowtocreate,redefine,andaccesstheproperties
ofthesefeatures.
TheEngravingStepElementTree
TheelementtreefortheEngraving Stepfeatureisdocumented intheheaderfile
ProMfgFeatEngraving.h andisasshowninthefollowingfigure:
1598 Creo®Parametric TOOLKIT User’sGuideElementTreeforEngravingfeature
ThefollowingtabledescribestheelementsintheelementtreefortheEngraving
feature.
Production Applications: CreoNCSequences, Operations andWorkCenters 1599ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature.
Production Applications: CreoNCSequences, Operations andWorkCenters 1599ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Thedefaultvalueis
Engraving_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_NCSEQ_GROOVE_MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_MFG_SEQ_NUM_AXES_
OPTPRO_VALUE_TYPE_INT Specifiesthenumberofcontrolled
axes.Thevalidvaluesforthis
elementare:
•3—Defaultvalue.
•4—Usedformachining with
toolaxisparalleltotheplane
specifiedinPRO_E_MFG_4_
AXIS_PLANE. Thisis
applicable ifworkcenter
allows4-axis,or5-axis
machining.
•5—Usedfor5-axis
machining. Thisisapplicable
ifworkcenterallows5-axis
machining.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedinPRO_E_MFG_4_
AXIS_PLANE. Thisis
applicable ifworkcenter
allows4-axis,or5-axis
machining.
•5—Usedfor5-axis
machining. Thisisapplicable
ifworkcenterallows5-axis
machining.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1600 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
1661
PRO_E_MFG_TOOL_REF_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1600 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MFG_MACH_CRVS Compound Mandatory compound element.
Specifiesthemachining curves
compound definition.
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Specifiesthecurvecollection.
NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_MACH_CRVS Compound Mandatory compound element.
Specifiesthemachining curves
compound definition.
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Specifiesthecurvecollection.
Note
Thiselementismandatory if
theelement PRO_E_MFG_
CURVE_FEAT isnotset.
PRO_E_MFG_CURVE_FEAT PRO_VALUE_TYPE_
SELECTIONSpecifiesthecurvefeature
selection.Thiselementsupports
multipleselections.
Note
Thiselementismandatory if
theelement PRO_E_STD_
CURVE_COLLECTION_
APPLisnotset.
PRO_E_MFG_NORM_SRFS Compound Optionalelement.Specifiesthe
normalsurfacescompound
definition.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Specifiesthenormalsurfaces
collection andisusedfortoolaxis
Production Applications: CreoNCSequences, Operations andWorkCenters 1601ElementID DataType Description
control.
Note
•Thiselementismandatory if
theelement PRO_E_STD_
CURVE_COLLECTION_
APPLissetwithcurves.
•Thiselementisignoredfor3-
axismachining.
PRO_E_MFG_NORM_GEOM PRO_VALUE_TYPE_
SELECTIONSpecifiesthenormalsurfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Thiselementismandatory if
theelement PRO_E_STD_
CURVE_COLLECTION_
APPLissetwithcurves.
•Thiselementisignoredfor3-
axismachining.
PRO_E_MFG_NORM_GEOM PRO_VALUE_TYPE_
SELECTIONSpecifiesthenormalsurface
selectionandisusedfortoolaxis
control.
Note
•Thiselementismandatory if
theelement PRO_E_STD_
CURVE_COLLECTION_
APPLissetwithedges.
•Thiselementisignoredfor3-
axismachining.
PRO_E_MFG_4_AXIS_PLANE PRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdatum
planeorplanarsurface.
Note
•Thiselementis
mandatory for4-axis
machining, whenthe
elementPRO_E_MFG_
SEQ_NUM_AXES_OPT
issetto4.
•Thiselementisignored
for3-axisand5-axis
machining.
PRO_E_TOOL_MTN_ARR Array Optionalelement.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Mandatory compound element.
Specifiesthetoolmotion
compound specifications. The
applicable toolmotiontypefor
thiselementare:
•PRO_TM_TYPE_GROOVE_
MILLING. Formore
information, refertothe
sectionToolMotion—
GrooveMillingonpage1749.
•PRO_TM_TYPE_FOLLOW_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompound specifications. The
applicable toolmotiontypefor
thiselementare:
•PRO_TM_TYPE_GROOVE_
MILLING. Formore
information, refertothe
sectionToolMotion—
GrooveMillingonpage1749.
•PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionTool
1602 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Motion—FollowCurveon
page1665.
•PRO_TM_TYPE_GOTO_
POINT.Formoreinformation,
refertothesectionTool
Motion—GoToPointon
page1667.
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
•PRO_TM_TYPE_GOHOME.
Formoreinformation, referto
thesectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_CONNECT.
Formoreinformation, referto
thesectionToolMotion—
Connectonpage1733.
•PRO_TM_TYPE_PLUNGE.
Formoreinformation, referto
thesectionToolMotion—
Plungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—Go
Retractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothe
sectionToolMotion—xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPlungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—Go
Retractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothe
sectionToolMotion—
TangentApproach onpage
1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionTool
Motion—TangentExiton
page1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—
NormalApproach onpage
1681.
•PRO_TM_TYPE_NORMAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—NormalExiton
page1684.
•PRO_TM_TYPE_LEAD_IN.
Production Applications: CreoNCSequences, Operations andWorkCenters 1603ElementID DataType Description
Formoreinformation, referto
thesectionToolMotion—
LeadInonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—
LeadOutonpage1686.
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—Helical
Approach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXIT.Formoreinformation,
refertothesectionToolxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLeadOutonpage1686.
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—Helical
Approach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—HelicalExiton
page1691.
•PRO_TM_TYPE_RAMP_
APPROACH. Formore
information, refertothe
sectionToolMotion—Ramp
Approach onpage1729.
•PRO_TM_TYPE_RAMP_
EXIT.Formoreinformation,
refertothesectionTool
Motion—RampExitonpage
1731.
PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothe
sectionToolMotion—CL
Command onpage1738.
Theapplicable toolmotiontypes
for4and5-axismachining are:
•PRO_TM_TYPE_ALONG_
AXIS_APPROACH. Formore
information, refertothe
sectionApproach AlongTool
Axisonpage1661.
•PRO_TM_TYPE_ALONG_
AXIS_EXIT. Formore
information, refertothe
sectionExitAlongToolAxis
onpage1663.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation, refertothe
sectionExitAlongToolAxis
onpage1663.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
1604 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxadditional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Production Applications: CreoNCSequences, Operations andWorkCenters 1605ElementID DataType Description
Note
Thiselementisusedonlyinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcostestimateforthemachining
step.
Production Applications: CreoNCSequences, Operations andWorkCenters 1605ElementID DataType Description
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTrees:Manufacturing Cutline
MillingSequence
Thissectiondescribeshowtoconstructandaccesstheelementtreeforacutline
millingsequence.Italsodescribeshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
TheCutlineMillingElementTree
Theelementtreeforthecutlinemillingsequenceisdocumented intheheaderfile
ProMfgFeatCutlineMilling.h, andisasshowninthefollowingfigure:
1606 Creo®Parametric TOOLKIT User’sGuideElementTreeforCutlineMillingfeature
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1606 Creo®Parametric TOOLKIT User’sGuideElementTreeforCutlineMillingfeature
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheCreoNCsequence.
Production Applications: CreoNCSequences, Operations andWorkCenters 1607ElementID DataType Description
ThedefaultvalueisCutline_
Milling_1.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofCreoNCsequence.The
validvalueforthiselementis
PRO_NCSEQ_CUTLINE_MILL.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_MFG_SEQ_NUM_AXES_
OPTPRO_VALUE_TYPE_INT Specifiesthenumberofcontrolled
axes.Thevalidvaluesforthis
elementare:
•3—Default value.
•4—Usedformachining with
toolaxisparalleltotheplane
specifiedinPRO_E_MFG_4_
AXIS_PLANE. Thisis
applicable ifworkcenter
allows4-axis,or5-axisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaxes.Thevalidvaluesforthis
elementare:
•3—Default value.
•4—Usedformachining with
toolaxisparalleltotheplane
specifiedinPRO_E_MFG_4_
AXIS_PLANE. Thisis
applicable ifworkcenter
allows4-axis,or5-axis
machining.
•5—Usedfor5-axismachining.
Thisisapplicable ifwork
centerallows5-axis
machining.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate system
fortheCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractcompound
definition. Formoreinformation,
refertothesectionRetract
Elementsonpage1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thiselementcanbe
usedwhentwopartsaremachined
duringthesameoperationin
differentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, refertoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdifferentspindles,thatisinthe
mainspindleandinthesub
spindle.Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, referto
thesectionSpindleTypesonpage
1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencecompound
definition. Formoreinformation,
refertothesectionToolReference
onpage1647.
1608 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
tooladaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexistinthemanufacturing
model.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing
parameters. Formoreinformation,
refertothesectionManufacturing
Parameters onpage1648.
PRO_E_MACH_SURFS Compound Mandatory compound element.
Specifiesthemachining surfaces
compound definition. Formore
information, refertothesection
ElementTrees:Machining
Surfacesonpage1544.
PRO_E_CUTLINE_TP_
OPTIONSCompound Optionalelement.Specifiestool
pathoptions.
PRO_E_CUTLINE_TP_TOOL_
CENTER_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
toolcentercurveoption.
PRO_E_CUTLINE_CUT_
DEFINITIONCompound Mandatory element.Specifiesthe
cutlinearraycompound definition.
Formoreinformation onthesub
elements,Formoreinformation,
refertothesectionElementTree
forPRO_E_CUTLINE_CUT_
DEFINITION onpage1613.
PRO_E_MFG_SURF_SIDE_
COMPOUNDCompound Optionalelement.Specifiesthe
surfacesidedefinition. Formore
information, refertothesection
Manufacturing SurfaceSideon
page1537.
PRO_E_MFG_4_AXIS_PLANE PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCOMPOUNDCompound Optionalelement.Specifiesthe
surfacesidedefinition. Formore
information, refertothesection
Manufacturing SurfaceSideon
page1537.
PRO_E_MFG_4_AXIS_PLANE PRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdatum
planeorplanarsurface.
Note
Thiselementismandatory
for4-axismachining, when
theelement PRO_E_MFG_
SEQ_NUM_AXES_OPT isset
to4andisignoredfor3-axis
and5-axismachining.
Production Applications: CreoNCSequences, Operations andWorkCenters 1609ElementID DataType Description
PRO_E_SCALLOP_SURF_COLL Compound Optionalelement.Specifiesthe
scallopsurfacescompound
definition.
PRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
checksurfacescollection. For
moreinformation, refertothe
sectionCheckingSurfacesonpage
1658.
PRO_E_MFG_AXIS_DEF_COMP Compound Optionalelement.Specifiesthe
compound elementfortheaxis
definition.
PRO_E_TOOL_MTN_ARR Array Optionalelement.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcompound elementfortheaxis
definition.
PRO_E_TOOL_MTN_ARR Array Optionalelement.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound Optionalelement.Specifiesthe
toolmotioncompound
specifications. Theapplicable tool
motiontypesforthiselementare:
•PRO_TM_TYPE_CUTLINE_
MILLING. Formore
information, refertothe
sectionTheCutlineMilling
ElementTreeonpage1606.
•PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionTool
Motion—FollowCurveon
page1665.
•PRO_TM_TYPE_GOTO_
POINT.Formoreinformation,
refertothesectionTool
Motion—GoToPointon
page1667.
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
•PRO_TM_TYPE_GOHOME.
Formoreinformation, referto
thesectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_PLUNGE.
Formoreinformation, referto
thesectionToolMotion—
Plungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—Go
Retractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPlungeonpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothe
sectionToolMotion—Go
Retractonpage1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothe
1610 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
sectionToolMotion—
TangentApproach onpage
1697.
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionTool
Motion—TangentExiton
page1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—
NormalApproach onpage
1681.
•PRO_TM_TYPE_NORMAL_
EXIT.Formoreinformation,
refertothesectionTool
Motion—NormalExiton
page1684.
•PRO_TM_TYPE_LEAD_IN.
Formoreinformation, referto
thesectionToolMotion—
LeadInonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—
LeadOutonpage1686.
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
information, refertothe
sectionToolMotion—Helical
Approach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXITFormoreinformation,
refertothesectionTool
Motion—HelicalExiton
page1691.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAPPROACH. Formore
information, refertothe
sectionToolMotion—Helical
Approach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXITFormoreinformation,
refertothesectionTool
Motion—HelicalExiton
page1691.
•PRO_TM_TYPE_RAMP_
APPROACH. Formore
information, refertothe
sectionToolMotion—Ramp
Approach onpage1729.
•PRO_TM_TYPE_RAMP_
EXIT.Formoreinformation,
refertothesectionTool
Motion—RampExitonpage
1731.
•PRO_TM_TYPE_CONNECT.
Formoreinformation, referto
thesectionToolMotion—
Connectonpage1733.
Production Applications: CreoNCSequences, Operations andWorkCenters 1611ElementID DataType Description
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothe
sectionToolMotion—CL
Command onpage1738.
Theapplicable toolmotiontypes
for4and5-axismachining are:
•PRO_TM_TYPE_ALONG_
AXIS_APPROACH. Formore
information, refertothe
sectionApproach AlongTool
Axisonpage1661.
•PRO_TM_TYPE_ALONG_
AXIS_EXIT. Formore
information, refertothe
sectionExitAlongToolAxis
onpage1663.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionApproach AlongTool
Axisonpage1661.
•PRO_TM_TYPE_ALONG_
AXIS_EXIT. Formore
information, refertothe
sectionExitAlongToolAxis
onpage1663.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datum
plane,axis,point,anddatum
coordinate. Itallowsyoutocreate
additional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxadditional geometric references to
beusedonlyinspecialprocess
application. Thiselementsupports
multipleselections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
1612 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
timeestimatedforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
costestimateforthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
ElementTreeforPRO_E_CUTLINE_CUT_
DEFINITION
TheelementtreeforPRO_E_CUTLINE_CUT_DEFINITION isasshowninthe
figurebelow:
Production Applications: CreoNCSequences, Operations andWorkCenters 1613Thefollowingtableliststhesubelementsoftheelement PRO_E_CUTLINE_
CUT_DEFINITION definedintheheaderfile
ProMfgFeatCutlineMilling.h.
ElementID DataType Description
PRO_E_CUTLINE_ALT_SRFS Compound Optionalelement.Specifiesthe
cutlinealternatesurfacecompound
definition.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Optionalelement.Specifiesthe
cutlinealternatesurfacecollection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcutlinealternatesurfacecompound
definition.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Optionalelement.Specifiesthe
cutlinealternatesurfacecollection.
PRO_E_CUTLINE_USE_ALT_
SRFSPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
cutlinealternatesurfaceoption
definition.
PRO_E_CUTLINE_AUTO_
OUTER_OPTPRO_VALUE_TYPE_INT Specifiestheautocutlineoption
definition. Thevalidvaluesfor
thiselementare:
•PRO_B_FALSE—Specifies
thatcutlinesarebeingdefined
manually.
•PRO_B_TRUE—Specifies that
cutlinesarebeingdefined
automatically .
PRO_E_CUTLINE_INNER_
POINTPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
autocutlineinnerpointselection.
PRO_E_CUTLINE_INNER_
FIRST_OPTPRO_VALUE_TYPE_INT Specifiestheautocutlineinner
firstoptiondefinition. Thevalid
valuesforthiselementare:
•PRO_B_FALSE—Specifies
thatouterautocutlineisfirst.
1614 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_B_TRUE—Specifies that
innnerautocutlineisfirst.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesforthiselementare:
•PRO_B_FALSE—Specifies
thatouterautocutlineisfirst.
1614 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_B_TRUE—Specifies that
innnerautocutlineisfirst.
PRO_E_CUTLINE_REF_ARR Array Mandatory element.Specifiesan
arrayofcutlines.
PRO_E_CUTLINE_SYNC_ARR Array Optionalelement.Specifiesan
arrayofcutlinesynchronization
lines.
ElementTreeforPRO_E_CUTLINE_REF_ARR
TheelementtreeforPRO_E_CUTLINE_REF_ARR isasshowninthefigure
below:
Thefollowingtableliststhesubelementsoftheelement PRO_E_CUTLINE_
REF_ARR definedintheheaderfileProMfgFeatCutlineMilling.h.
ElementID DataType Description
PRO_E_CUTLINE_REF_ITEM Compound Specifiesthecutlinecompound
definition.
Note
Thiselementismandatory if
theelement PRO_E_
CUTLINE_AUTO_OUTER_
OPTissettoPRO_B_FALSE
andisnotusedifPRO_E_
CUTLINE_AUTO_OUTER_
OPTissettoPRO_B_TRUE.
PRO_E_CUTLINE_ID PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
cutlineid.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheelement PRO_E_
CUTLINE_AUTO_OUTER_
OPTissettoPRO_B_FALSE
andisnotusedifPRO_E_
CUTLINE_AUTO_OUTER_
OPTissettoPRO_B_TRUE.
PRO_E_CUTLINE_ID PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
cutlineid.
Production Applications: CreoNCSequences, Operations andWorkCenters 1615ElementID DataType Description
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Mandatory element.Specifiesthe
cutlinechaincollection.
PRO_E_NCD_CURVE_POINT Compound Optionalelement.Specifiesthe
cutlinestartpointcompound
definition.
PRO_E_NCD_CURVE_POINT_
REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
cutlinestartpointreference.
PRO_E_NCD_CURVE_POINT_
OFFSET_TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
cutlinestartpointoffsettype.
PRO_E_NCD_CURVE_POINT_
OFFSETPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
cutlinestartpointoffsetdefinition.
PRO_E_CUTLINE_PROJ_PLN PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
cutlineprojectplanedefinition.
ElementTreeforPRO_E_CUTLINE_SYNC_ARRxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcutlinestartpointoffsetdefinition.
PRO_E_CUTLINE_PROJ_PLN PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
cutlineprojectplanedefinition.
ElementTreeforPRO_E_CUTLINE_SYNC_ARR
TheelementtreeforPRO_E_CUTLINE_SYNC_ARR isasshowninthefigure
below:
Thefollowingtableliststhesubelementsoftheelement PRO_E_CUTLINE_
SYNC_ARR definedintheheaderfileProMfgFeatCutlineMilling.h.
ElementID DataType Description
PRO_E_CUTLINE_SYNC_ITEM Compound Optionalelement.Specifiesthe
cutlinesynchlinecompound
definition.
PRO_E_CUTLINE_SYNC_ID PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
cutlinesynchlineid.
PRO_E_CUTLINE_SYNC_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
cutlinesynchlinename.
1616 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_CUTLINE_SYNC_TYPE PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
cutlinesynchlinetype.Thevalid
valuesforthiselementare:
•PRO_E_CUTLINE_SYNC_
TYPE_POINTS— Specifies
thesynchbetweenpointson
thecutlines.
•PRO_E_CUTLINE_SYNC_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcutlinesynchlinetype.Thevalid
valuesforthiselementare:
•PRO_E_CUTLINE_SYNC_
TYPE_POINTS— Specifies
thesynchbetweenpointson
thecutlines.
•PRO_E_CUTLINE_SYNC_
TYPE_REF—Specifies the
synchonthereferencechains.
PRO_E_CUTLINE_SYNC_
POINT_ARRArray Optionalelement.Specifiesan
arrayofcutlinesynchpoints.
PRO_E_CUTLINE_SYNC_
POINTCompound Optionalelement.Specifiesthe
cutlinesynchpointcompound
definition.
PRO_E_CUTLINE_SYNC_
POINT_REF_IDPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
cutlinesynchpointreferenceID.
PRO_E_CUTLINE_SYNC_
POINT_RATIOPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
cutlinesynchpointratio.
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Optionalelement.Specifiesthe
cutlinesynchlinechaincollection.
Production Applications: CreoNCSequences, Operations andWorkCenters 1617ElementTreeforPRO_E_MFG_AXIS_DEF_COMP
TheelementtreeforPRO_E_MFG_AXIS_DEF_COMP isasshowninthefigure
below:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1617ElementTreeforPRO_E_MFG_AXIS_DEF_COMP
TheelementtreeforPRO_E_MFG_AXIS_DEF_COMP isasshowninthefigure
below:
1618 Creo®Parametric TOOLKIT User’sGuidePRO_E_MFG_AXIS_DEF_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoftheaxisdefinition. The
validvaluesforthiselementare
definedintheenumerated type
ProAxisDefType andareas
follows:
•PRO_AXIS_DEF_TYPE_
UNDEF
•PRO_AXIS_DEF_BY_
PIVOT_REF
•PRO_AXIS_DEF_BY_
LOCATIONS
•PRO_AXIS_DEF_BY_TWO_
CONTOURS
•PRO_AXIS_DEF_BY_NORM_
SURF
PRO_E_MFG_AXIS_DEF_
PIVOT_REFPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofthesingle
reference. Youcanselecteithera
pointoranaxis.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_PIVOT_REF This
elementisignoredinallother
cases.
PRO_E_MFG_AXIS_DEF_
NORM_SRFCompound NormalSurfacecompound
element.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDEF_BY_PIVOT_REF This
elementisignoredinallother
cases.
PRO_E_MFG_AXIS_DEF_
NORM_SRFCompound NormalSurfacecompound
element.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_ NORM_SURF. This
elementisignoredinallother
cases.
Production Applications: CreoNCSequences, Operations andWorkCenters 1619PRO_E_MFG_AXIS_DEF_
LOCATION_ARRArray Specifiesanarrayoflocations.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_LOCATIONS. This
elementisignoredinallother
cases.
PRO_E_MFG_AXIS_DEF_
LOCATIONCompound Mandatory element.Specifiesthe
compound elementforthelocation
axisdefinition.
PRO_E_MFG_AXIS_DEF_
ORIGIN_REFPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofthesingle
reference. Youcaneitherselecta
pointonacurveoranedge.
PRO_E_MFG_AXIS_DEF_
ORIENT_COMPCompound Mandatory element.Specifiesthe
orientation compound element.
PRO_E_MFG_AXIS_DEF_
ORIENT_REFPRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreference. Youcaneitherselecta
pointonacurveoranedge.
PRO_E_MFG_AXIS_DEF_
ORIENT_COMPCompound Mandatory element.Specifiesthe
orientation compound element.
PRO_E_MFG_AXIS_DEF_
ORIENT_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthesinglereference
selection.Youcanselecteithera
pointoranaxis.
Note
Thiselementismandatory ,if
theelements PRO_E_MFG_
AXES_DEF_ANGLE_X and
PRO_E_MFG_AXES_DEF_
ANGLE_Y arenotdefined.
PRO_E_MFG_AXES_DEF_
ANGLE_XPRO_VALUE_TYPE_DOUBLE Specifiestheleadangle.Thevalid
rangeforthiselementisfrom—90
to+90.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_ORIENT_REF
isnotdefined.
PRO_E_MFG_AXES_DEF_
ANGLE_YPRO_VALUE_TYPE_DOUBLE Specifiesthetiltangle.Thevalid
rangeforthiselementisfrom—90
to+90.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_ORIENT_REF
isnotdefined.
1620 Creo®Parametric TOOLKIT User’sGuidePRO_E_MFG_AXIS_DEF_LOC_
FLIP_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
flipdirectionatalocation.The
validvaluesforthiselementare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxisnotdefined.
1620 Creo®Parametric TOOLKIT User’sGuidePRO_E_MFG_AXIS_DEF_LOC_
FLIP_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
flipdirectionatalocation.The
validvaluesforthiselementare:
•PRO_B_TRUE—Specifies that
thedirectionwillbereversed.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
PRO_E_MFG_AXIS_DEF_
CURVE_COMPCompound Specifiesthecompound element
forthepivotcurve.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_TYPE issetto
thevalue PRO_AXIS_DEF_
BY_TWO_CONTOURS. This
elementisignoredinallother
cases.
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Mandatory element.Specifiesa
generalcompound elementfor
chaincollection.
PRO_E_MFG_AXIS_DEF_
SYNC_ARRArray Optionalelement.Specifiesthe
synchronization array.
PRO_E_MFG_AXIS_DEF_
SYNC_COMPCompound Optionalelement.Specifiesthe
synchronization compound
element.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_1PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
singlereferenceselection.SelectaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSYNC_COMPCompound Optionalelement.Specifiesthe
synchronization compound
element.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_1PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
singlereferenceselection.Selecta
pointonthetrajectorycurve.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_2PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
singlereferenceselection.Selecta
pointonthepivotcurve.
PRO_E_MFG_AXIS_DEF_
SYNC_FLIP_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
flipdirection.The validvaluesfor
thiselementare:
•PRO_B_TRUE—Specifies that
thetoolmotionisflippedinthe
reversedirection.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
PRO_E_MFG_AXIS_DEF_
FLIP_OPTPRO_VALUE_TYPE_INT Specifiestheflipdirection.The
validvaluesforthiselementare:
•PRO_B_TRUE—Specifies that
thedirectionwillbereversed.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
Production Applications: CreoNCSequences, Operations andWorkCenters 1621ElementTrees:Manufacturing DrillGroup
Featurexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
Production Applications: CreoNCSequences, Operations andWorkCenters 1621ElementTrees:Manufacturing DrillGroup
Feature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforaDrill
Groupfeature.Italsodescribeshowtocreate,redefine,andaccesstheproperties
ofthesefeatures.
TheDrillGroupFeatureElementTree
Theelementtreeforthedrillgroupfeatureisdocumented intheheaderfile
ProMfgFeatDrillGroup.h, andisasshowninthefollowingfigure:
1622 Creo®Parametric TOOLKIT User’sGuideElementTreeforDrillGroupfeature
ThefollowingtabledescribestheelementsintheelementtreefortheDrillGroup
feature.
Production Applications: CreoNCSequences, Operations andWorkCenters 1623ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
OPERATION.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheNCfeature.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
OPERATION.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
namefortheNCfeature.The
defaultvalueisDRILL_GROUP_
1.
PRO_E_DRILL_GRP_CSYS PRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdatum
coordinate system.
Note
Thiselementisnotsupported
fortheCreoParametric 2.0
release.
PRO_E_DRILL_GRP_AXES_
COMPOUNDCompound Mandatory element.This
compound elementspecifies
information aboutlocationof
holestobedrilled.
Note
Youcanusethiselementonly
whenatleastoneofthe
followingchildelementsare
defined:
•PRO_E_DRILL_GRP_
AXES_INDIV
•PRO_E_DRILL_GRP_
AXES_PATTERN
•PRO_E_DRILL_GRP_
SURFACES
•PRO_E_DRILL_GRP_
DIAM_ARR
•PRO_E_DRILL_GRP_
PARAM_ARR
PRO_E_DRILL_GRP_AXES_
EXCLPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaxesofholestobe
excludedformachining. This
elementsupportsmultiple
selections.
PRO_E_DRILL_GRP_AXES_
PATTERNPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaxesofpatternedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectionofaxesofholestobe
excludedformachining. This
elementsupportsmultiple
selections.
PRO_E_DRILL_GRP_AXES_
PATTERNPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaxesofpatterned
holes.Thiselementsupports
multipleselections.
1624 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
Note
Ifapatternleaderisselected,
alltheholesinthepattern
willbecollected.
PRO_E_DRILL_GRP_RULES_
COMPOUNDCompound Optionalelement.Thiscompound
elementspecifiestheinformation
aboutholesearchrules.
PRO_E_DRILL_GRP_
SURFACESPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofsurfacesorquiltswith
holes.Thiselementsupports
multipleselections.
PRO_E_DRILL_GRP_DIAM_
TYPE_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeofholediametersthatcanbe
collectedintheelement PRO_E_
DRILL_GRP_DIAM_ARR. The
typeofholediameterisspecified
usingtheenumerated datatype
ProHolesetDiamType. The
validvaluesare:
•PRO_HSET_ALL_DIAMS—
Thisisthedefaultvalue.
SpecifiesthatdiametersofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDRILL_GRP_DIAM_ARR. The
typeofholediameterisspecified
usingtheenumerated datatype
ProHolesetDiamType. The
validvaluesare:
•PRO_HSET_ALL_DIAMS—
Thisisthedefaultvalue.
Specifiesthatdiametersof
bothsolidsurfacesand
cosmeticthreadscanbe
collected.
Note
Iftheelement PRO_E_
DRILL_GRP_DIAM_
TYPE_OPT isnot
defined,thenbydefault,
theholediameteroftype
PRO_HSET_ALL_
DIAMSisused.
•PRO_HSET_HOLE_DIAMS—
Specifiesthatdiametersonly
ofsolidsurfacescanbe
collected.
•PRO_HSET_THREAD_
DIAMS—Specifies that
diametersonlyofcosmetic
threadscanbecollected.
PRO_E_DRILL_GRP_DIAM_
ARRArray Optionalelement.Specifiesan
arrayofdiametersofholestobe
machined.
PRO_E_DRILL_GRP_DIAM_
COPMPOUNDCompound Optionalelement.Specifiesa
compound definitionofahole
diameter.
PRO_E_DRILL_GRP_DIAM PRO_VALUE_TYPE_DOUBLE Specifiesthediameterofthehole
Production Applications: CreoNCSequences, Operations andWorkCenters 1625ElementID DataType Description
tobemachined.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_DIAM_COPMPOUNDxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1625ElementID DataType Description
tobemachined.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_DIAM_COPMPOUND
element.
PRO_E_DRILL_GRP_PARAM_
RULE_OPTPRO_VALUE_TYPE_INT Specifiesthetypeofquerythat
mustbeusedtosearchforholesto
machine.
Thequerytypeisspecifiedusing
theenumerated datatype
ProHsetParamRuleOpt. The
validvaluesare:
•PRO_HSET_BOOL_OPER_
OR—Collects holesthatsatisfy
atleastoneofthesearch
conditions setforaparameter.
PRO_HSET_BOOL_OPER_
AND—Collects holesthat
satisfyallthesearchconditions
setforaparameter.
Thesearchconditions and
parameters aredefinedinthe
elements PRO_E_DRILL_GRP_
PARAM*.
PRO_E_DRILL_GRP_PARAM_
ARRArray Optionalelement.Specifiesan
arrayofsearchconditions to
collecttheholesformachining.
PRO_E_DRILL_GRP_PARAM_
COMPOUNDCompound Optionalelement.Specifiesa
compound definitionofa
conditiontomatchthehole
featureswiththeuserdefined
parameters.
Note
InCreoParametric, eachxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_DRILL_GRP_PARAM_
COMPOUNDCompound Optionalelement.Specifiesa
compound definitionofa
conditiontomatchthehole
featureswiththeuserdefined
parameters.
Note
InCreoParametric, each
conditiondefinesexpression
withuserdefinedparameter
nameontheleftsideofthe
expression andvalueonthe
rightsideforcomparison.
PRO_E_DRILL_GRP_PARAM_
NAMEPRO_VALUE_TYPE_WSTRING Specifiesthenameoftheuser
1626 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
definedparameter.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_PARAM_COMPOUND
element.
PRO_E_DRILL_GRP_PARAM_
DATA_TYPEPRO_VALUE_TYPE_INT Specifiesthedatatypeofspecified
valueusingtheenumerated type
ProParamvalueType.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_PARAM_COMPOUND
element.
PRO_E_DRILL_GRP_PARAM_
OPERPRO_VALUE_TYPE_INT Specifiesthetypeofthe
expression operatorusingthe
enumerated type
ProDrillParamOper.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_PARAM_COMPOUND
element.
PRO_E_DRILL_GRP_PARAM_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexpression operatorusingthe
enumerated type
ProDrillParamOper.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_PARAM_COMPOUND
element.
PRO_E_DRILL_GRP_PARAM_
VAL_INTPRO_VALUE_TYPE_INT Specifiesthevalueoftypedouble.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_PARAM_COMPOUND
elementfordoubledatatype
andisignoredforotherdata
types.
PRO_E_DRILL_GRP_PARAM_
VAL_DBLPRO_VALUE_TYPE_DOUBLE Specifiesthevalueoftypeinteger.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_PARAM_COMPOUND
elementforintegerdatatype
andisignoredforotherdata
types.
Production Applications: CreoNCSequences, Operations andWorkCenters 1627ElementID DataType Description
PRO_E_DRILL_GRP_PARAM_
VAL_WSTRPRO_VALUE_TYPE_WSTRING Specifiesthevalueoftypestring.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_PARAM_COMPOUND
elementforstringdatatype
andisignoredforotherdata
types.
PRO_E_DRILL_GRP_PARAM_
VAL_BOOLPRO_VALUE_TYPE_INT Specifiesthevalueoftype
ProBoolean.
Note
ThiselementisamandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGRP_PARAM_COMPOUND
elementforstringdatatype
andisignoredforotherdata
types.
PRO_E_DRILL_GRP_PARAM_
VAL_BOOLPRO_VALUE_TYPE_INT Specifiesthevalueoftype
ProBoolean.
Note
Thiselementisamandatory
childofPRO_E_DRILL_
GRP_PARAM_COMPOUND
elementforProBoolean data
typeandisignoredforother
datatypes.
PRO_E_DRILL_GRP_AXES_
INDIVPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofdatum
axes.Thiselementsupports
multipleselections.
Note
Thiselementismandatory if
noneofthefollowing
elementsaredefined:
•PRO_E_DRILL_GRP_
AXES_PATTERN
•PRO_E_DRILL_GRP_
SURFACES
•PRO_E_DRILL_GRP_
DIAM_ARR
•PRO_E_DRILL_GRP_
PARAM_ARR
Manufacturing VolumeMillingFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforaVolume
Millingfeature.Italsodescribeshowtocreate,redefine,andaccesstheproperties
ofthisfeature.
1628 Creo®Parametric TOOLKIT User’sGuideTheVolumeMillingFeatureElementTree
TheelementtreefortheVolumeMillingfeatureisdocumented intheheaderfile
ProMfgFeatVolMilling.h, andisasshowninthefollowingfigure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementtreefortheVolumeMillingfeatureisdocumented intheheaderfile
ProMfgFeatVolMilling.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1629ElementTreeforVolumeMillingfeature
ThefollowingtabledescribestheelementsintheelementtreefortheVolume
Millingfeature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthefeature.
Thevalidvalueforthiselementis
PRO_FEAT_MILL.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthedefaultnameforthe
feature.
PRO_E_NCSEQ_TYPE PRO_VALUE_TYPE_INT Specifiesthefeatureformand
shouldbeoftypePRO_NCSEQ_
VOL_MILL only.
PRO_E_MFG_OPER_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
operationfeatureselection.
PRO_E_NCSEQ_CSYS PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumcoordinate systemthatwill
beusedasthecoordinate systemfor
theCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. Forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatumcoordinate systemthatwill
beusedasthecoordinate systemfor
theCreoNCsequence.
PRO_E_RETR_SURF Compound Mandatory compound element.
Specifiesretractdefinition. For
moreinformation, refertothe
sectionRetractElementsonpage
1644.
PRO_E_MFG_SUB_SPINDLE_
OPTPRO_VALUE_TYPE_INT OptionalElement.Specifiesthe
typeofspindleassignedtothe
sequence.Thedefaultvalueforthis
elementisPRO_MFG_MAIN_
SPINDLE.The validvaluesforthis
elementaredefinedbythe
enumerated type
ProSubSpindleOpt. Formore
information onthevaluesof
ProSubSpindleOpt, refertothe
sectionSpindleTypesonpage1661
PRO_E_MFG_TOOL_REF_
COMPOUNDCompound Mandatory compound element.
Specifiestoolreferencedefinition.
Formoreinformation, refertothe
sectionToolReference onpage
1647.
PRO_E_MFG_TOOL_ADAPTER_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthetool
adaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxadaptermodelname.
PRO_E_MFG_PARAM_SITE_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameofthesitefilewithdefault
valuesformanufacturing
parameters.
Note
Thesitefilenamewillbe
ignoredifthesitedoesnot
existinthemanufacturing
model.
1630 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_PARAM_ARR Array Mandatory element.Definesan
arrayofmanufacturing parameters.
Formoreinformation, refertothe
sectionManufacturing Parameters
onpage1648.
PRO_E_MFG_WIN_VOL_REF_
COMPOUNDCompound Mandatory element.Specifiesthe
machining referencecompound
specification.
PRO_E_MFG_WIN_VOL_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
selectionofmillwindowormill
volumefeature.
PRO_E_MFG_CMP_CLOSED_
LOOPSCompound Optionalelement.Specifiesthe
closedloopcompound
specification.
PRO_E_MFG_CLOSED_LOOP_
ARRArray Optionalelement.Specifiesanarray
ofclosedloopspecifications.
PRO_E_MFG_CLOSED_LOOP_
REF_ITEMCompound Optionalelement.Specifiesthe
closedloopspecification.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_CLOSED_LOOP_
ARRArray Optionalelement.Specifiesanarray
ofclosedloopspecifications.
PRO_E_MFG_CLOSED_LOOP_
REF_ITEMCompound Optionalelement.Specifiesthe
closedloopspecification.
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Optionalelement.Specifiesan
excludedsurfacescompound
specification forchaincollection.
PRO_E_MFG_WIN_VOL_EXCL_
SURF_COMPCompound
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Optionalelement.Specifiessurface
collection forthecreationofthe
volumemillingsequence.
PRO_E_MFG_APPR_WALLS_
SURF_COMPCompound Optionalelement.Specifiesthe
approachwallssurfacescompound
specification. Usethiselementonly
ifmillvolumeisselectedasa
machining reference.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Optionalelement.Specifiessurface
collection forthecreationofthe
volumemillingsequence.
PRO_E_MFG_APPR_WALLS_
CHAIN_COMPCompound Optionalelement.Specifiesthe
approachwallschaincompound
specification. Usethiselementonly
ifmillvolumeisselectedasa
machining reference.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvolumemillingsequence.
PRO_E_MFG_APPR_WALLS_
CHAIN_COMPCompound Optionalelement.Specifiesthe
approachwallschaincompound
specification. Usethiselementonly
ifmillvolumeisselectedasa
machining reference.
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Optionalelement.Specifiesthe
chaincollection forthecreationof
thevolumemillingsequence.
PRO_E_MFG_MILL_VOL_TOP_
SURF_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofthetopsurface.Usethis
elementonlyifmillvolumeis
selectedasamachining reference.
PRO_E_SCALLOP_SURF_COLL Compound Optionalelement.Specifiesthe
scallopsurfacescompound
definition.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Optionalelement.Specifiesthe
collection ofthescallopsurfaces.
Production Applications: CreoNCSequences, Operations andWorkCenters 1631ElementID DataType Description
PRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
checksurfacescompound
definition. Theelementtreeforthe
CheckingSurfacesisdefinedinthe
headerfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_CHECK_SURF_COLL PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
checksurfacescompound
definition. Theelementtreeforthe
CheckingSurfacesisdefinedinthe
headerfile
ProMfgElemCheckSurf.h. For
moreinformation, refertothe
sectionCheckingSurfacesonpage
1658formoreinformation onthe
elementtree.
PRO_E_TOOL_MTN_ARR Array Mandatory element.Specifiesan
arrayoftoolmotions.
PRO_E_TOOL_MTN Compound •PRO_TM_TYPE_VOLUME_
MILLING. Formore
information, refertothesection
ToolMotion—VolumeMill
Cutonpage1752.
•PRO_TM_TYPE_FOLLOW_
CUT.Formoreinformation,
refertothesectionToolMotion
—FollowCutonpage1741.
•PRO_TM_TYPE_FOLLOW_
CURVE.Formoreinformation,
refertothesectionToolMotion
—FollowCurveonpage1665.
•PRO_TM_TYPE_GOTO_
POINT.Formoreinformation,
refertothesectionToolMotion
—GoToPointonpage1667.
•PRO_TM_TYPE_GO_DELTA.
Formoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
•PRO_TM_TYPE_GOHOME. For
moreinformation, refertothe
sectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_PLUNGE. ForxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFormoreinformation, referto
thesectionToolMotion—Go
Deltaonpage1671.
•PRO_TM_TYPE_GOHOME. For
moreinformation, refertothe
sectionToolMotion—Go
Homeonpage1675.
•PRO_TM_TYPE_PLUNGE. For
moreinformation, refertothe
sectionToolMotion—Plunge
onpage1743.
•PRO_TM_TYPE_GO_
RETRACT. Formore
information, refertothesection
ToolMotion—GoRetracton
page1679.
•PRO_TM_TYPE_TANGENT_
APPROACH. Formore
information, refertothesection
ToolMotion—Tangent
Approach onpage1697.
1632 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_TM_TYPE_TANGENT_
EXIT.Formoreinformation,
refertothesectionToolMotion
—TangentExitonpage1699.
•PRO_TM_TYPE_NORMAL_
APPROACH. Formore
information, refertothesection
ToolMotion—Normal
Approach onpage1681.
•PRO_TM_TYPE_NORMAL_
EXIT.Formoreinformation,
refertothesectionToolMotion
—NormalExitonpage1684.
•PRO_TM_TYPE_LEAD_IN.
Formoreinformation, referto
thesectionToolMotion—Lead
Inonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—Leadxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx—NormalExitonpage1684.
•PRO_TM_TYPE_LEAD_IN.
Formoreinformation, referto
thesectionToolMotion—Lead
Inonpage1677.
•PRO_TM_TYPE_LEAD_OUT.
Formoreinformation, referto
thesectionToolMotion—Lead
Outonpage1686.
•PRO_TM_TYPE_HELICAL_
APPROACH. Formore
information, refertothesection
ToolMotion—Helical
Approach onpage1688.
•PRO_TM_TYPE_HELICAL_
EXITFormoreinformation,
refertothesectionToolMotion
—HelicalExitonpage1691.
•PRO_TM_TYPE_CL_
COMMAND. Formore
information, refertothesection
ToolMotion—CLCommand
onpage1738.
PRO_E_MFG_START_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
startthemachining atthespecified
position.
PRO_E_MFG_END_PNT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
datumpointselection.Itallowsto
endthemachining atthespecified
position.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxposition.
PRO_E_MFG_PREREQUISITE_
ARRArray Optionalelement.Thisarray
specifiestheIdsoftheprerequisite
sequences. Formoreinformation,
refertothesectionSequence
Prerequisites onpage1653.
PRO_E_MFG_PROCESS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
referenceselections suchaspart,
feature,curve,surface,datumplane,
Production Applications: CreoNCSequences, Operations andWorkCenters 1633ElementID DataType Description
axis,point,anddatumcoordinate. It
allowsyoutocreateadditional
geometric references tobeused
onlyinspecialprocessapplication.
Thiselementsupportsmultiple
selections.
PRO_E_MFG_FEAT_VIEW_
NAMEPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
nameoftheview.Thiselement
allowsyoutoassociateaspecific
viewwiththemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecialprocessapplication.
PRO_E_MFG_SIMP_REP_NAME PRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
simplified representation name.
Thiselementallowsyouto
associatethespecificsimplified
representation withthemachining
step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthetime
estimatedforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthecost
estimateforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_TIME_ACTUAL PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
actualtimeforthemachining step.
Note
Thiselementisusedonlyin
specialprocessapplication.
PRO_E_MFG_COMMENTS PRO_VALUE_TYPE_WSTRING Specifiesthesequencecomments.
1634 Creo®Parametric TOOLKIT User’sGuideElementTrees:SkirtFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforaSkirtxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1634 Creo®Parametric TOOLKIT User’sGuideElementTrees:SkirtFeature
ThissectiondescribeshowtoconstructandaccesstheelementtreeforaSkirt
SurfaceExtension feature.Italsodescribeshowtocreate,redefine,andaccessthe
properties ofthesefeatures.
SkirtSurfaceExtensionFeatureElementTree
Theelementtreefortheskirtsurfaceextensionfeatureisdocumented inthe
headerfileProMoldSkirtExt.h, andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1635ElementTreeforSkirtSurfaceExtensionfeature
ThefollowingtabledescribestheelementsintheelementtreefortheSkirt
Extension feature.
1636 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthefeature.
Thevalidvalueforthiselementis
PRO_FEAT_DATUM_SURF.
PRO_E_FEATURE_FORM PRO_VALUE_TYPE_INT Specifiesthefeatureformand
shouldbeoftypePRO_SKIRT_
EXTonly.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthedefaultnameforthe
feature.ThedefaultvalueforthisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxshouldbeoftypePRO_SKIRT_
EXTonly.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthedefaultnameforthe
feature.Thedefaultvalueforthis
elementisSkirt_Extension_
1
PRO_E_SKIRT_REF_MODEL PRO_VALUE_TYPE_
SELECTIONMandatory element.Selectthe
referencemodelusedforcreating
thepartingextensionsurface.The
validreferenceforthiselementis
asinglePRO_PART.
PRO_E_SKIRT_BOUNDARY_
REFPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifythe
boundaryreferencefortrimming
theouterlimitsoftheskirtsurface.
Thevalidreferenceforthis
elementiseitherasingle PRO_
PARTorasingle PRO_QUILT.
PRO_E_SKIRT_PULL_DIR_
COMPOUNDCompound Specifiesthereferenceforthe
viewdirection.Thevalidreference
forthiselementisPRO_E_
DIRECTION_COMPOUND. This
elementisoptional,ifthedefault
pulldirectionexists.Thedefault
pulldirectionisusedasa
referencefortheviewdirection.
PRO_E_SKIRT_EXT_SET_ARR Array Mandatory element.Specifiesan
arrayelementwhichcontainaset
ofPRO_E_SKIRT_EXT_SET_
COMPOUND elements.
PRO_E_SKIRT_EXT_SET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferencefortheviewdirection.
PRO_E_SKIRT_EXT_SET_ARR Array Mandatory element.Specifiesan
arrayelementwhichcontainaset
ofPRO_E_SKIRT_EXT_SET_
COMPOUND elements.
PRO_E_SKIRT_EXT_SET_
COMPOUNDCompound Mandatory element.Specifyone
elementofthistypeforeach
compound setPRO_E_SKIRT_
EXT_SET_COMPOUND contained
inPRO_E_SKIRT_EXT_SET_
ARR.Eachsetprovides
information abouttheskirt
extensionset.
PRO_E_SKIRT_EXT_SET_
REF_IDXPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
referenceindex,whichisunique
foreachcompound setPRO_E_
SKIRT_EXT_SET_COMPOUND.
PRO_E_SKIRT_EXT_SET_
TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofextensionusedfortheskirt
featurecreation.Thiselement
definesthedirectionofthe
extension. Thevalidvaluesforthis
elementaredefinedbythe
enumerated type
ProSkirtExtType andareas
Production Applications: CreoNCSequences, Operations andWorkCenters 1637ElementID DataType Description
follows:
•PRO_SKIRT_EXT_TYPE_
NORMAL—Specifies thatthe
skirtsurfaceextensionwillbexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1637ElementID DataType Description
follows:
•PRO_SKIRT_EXT_TYPE_
NORMAL—Specifies thatthe
skirtsurfaceextensionwillbe
creatednormaltothepull
directionandwillendina
directionnormaltothecurve.
Theextensioniscreated
betweentheedgeandthe
boundaryreference.
•PRO_SKIRT_EXT_TYPE_
PARALLEL—Specifies that
theskirtsurfaceextensionwill
becreatedparalleltothepull
direction.
•PRO_SKIRT_EXT_TYPE_
TANGENT—Specifies thatthe
skirtextensioniscreated
tangenttothemodelsurfaceof
theselectedreferencemodel.
•PRO_SKIRT_EXT_TYPE_
USER—Specifies thattheskirt
surfaceextensioniscreatedin
theuser-defineddirection.
•PRO_SKIRT_EXT_TYPE_
NORMAL_TO_BNDRY—
Specifiesthattheskirt
extensioniscreatednormalto
thepulldirectionandwillend
inadirectionnormaltothe
boundary.
PRO_E_SKIRT_EXT_SET_
CURVE_COMPCompound Mandatory element.Thiselement
specifiesthecollection of
extensioncurves.
PRO_E_STD_CURVE_
COLLECTION_APPLPRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinadirectionnormaltothe
boundary.
PRO_E_SKIRT_EXT_SET_
CURVE_COMPCompound Mandatory element.Thiselement
specifiesthecollection of
extensioncurves.
PRO_E_STD_CURVE_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofthe
curvesfortheskirtsurface
extension.
PRO_E_SKIRT_EXT_SET_
DIR_COMPOUNDCompound Specifiesthedirectionreference
forbuildingthegeometryofthe
extension. Thiselementis
mandatory ,onlyiftheelement
PRO_E_SKIRT_EXT_SET_
TYPEissettothevalue PRO_
SKIRT_EXT_TYPE_USER.
PRO_E_DIRECTION_
COMPOUNDCompound Specifiesthedirectionreference
fortheextensionofsurfaces.The
validreferences forthiselement
are:
•StraightEdge
•StraightCurve
•PlanarSurface
•DatumPlane
1638 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•Datumaxis
•DatumCoordinate System
Axis
PRO_E_SKIRT_EXT_SET_
NEXT_DIR_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesan
optiontoswitchbetweenthe
tangentorparallelextension
solutions.Intangentextensions,
thiselementenablesyoutoswitchxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAxis
PRO_E_SKIRT_EXT_SET_
NEXT_DIR_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesan
optiontoswitchbetweenthe
tangentorparallelextension
solutions.Intangentextensions,
thiselementenablesyoutoswitch
betweenthetwoavailabletangent
extensionsolutions,whereasin
parallelextensions, thiselement
flipsthedirectionoftheextension.
Thevalidvaluesforthiselement
aredefinedbytheenumerated
type
ProSkirtExtNextDirOpt
andareasfollows:
•PRO_SKIRT_EXT_NEXT_
DIR_DEFAULT—This isthe
defaultvaluefortangentand
parallelextensions. Tangent
extensions, usethedefault
basegeometrywhereas
parallelextensions, extend
alongtheviewdirection.
•PRO_SKIRT_EXT_NEXT_
DIR_ALTERNATE—In case
oftangentextension, theother
basegeometryisusedtocreate
theextension. Forparallel
extensions, theextensionis
oppositetotheviewdirection.
PRO_E_SKIRT_SHUTOFF_
EXT_COMPOUNDCompound Mandatory element.Thiselement
providesinformation aboutthe
shut-offextensionoptions.
PRO_E_SKIRT_SHUTOFF_
EXT_TYPEPRO_VALUE_TYPE_INT Mandatory element.SpecifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEXT_COMPOUNDCompound Mandatory element.Thiselement
providesinformation aboutthe
shut-offextensionoptions.
PRO_E_SKIRT_SHUTOFF_
EXT_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoftheextensionshut-offused
duringtheskirtfeaturecreation.
Thevalidvaluesforthiselement
aredefinedbytheenumerated
type
ProSkirtShutoffExtType
andareasfollows:
•PRO_SKIRT_EXT_
SHUTOFF_BY_DIST—
Definestheshut-offextension
byaspecifieddistance.
•PRO_SKIRT_EXT_
SHUTOFF_BY_BOUND—
Definestheshut-offextension
tilltheselectedboundary.
PRO_E_SKIRT_SHUTOFF_
EXT_DISTPRO_VALUE_TYPE_DOUBLE Specifiestheshut-offextension
distance.Thiselementis
Production Applications: CreoNCSequences, Operations andWorkCenters 1639ElementID DataType Description
mandatory onlyiftheelement
PRO_E_SKIRT_SHUTOFF_
EXT_TYPE issettothevalue
PRO_SKIRT_EXT_SHUTOFF_
BY_DIST.
PRO_E_SKIRT_SHUTOFF_
CURVE_COMPCompound Specifiestheselectedboundaryfor
theshut-offextension. This
elementismandatory onlyifthe
element PRO_E_SKIRT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_SKIRT_EXT_SHUTOFF_
BY_DIST.
PRO_E_SKIRT_SHUTOFF_
CURVE_COMPCompound Specifiestheselectedboundaryfor
theshut-offextension. This
elementismandatory onlyifthe
element PRO_E_SKIRT_
SHUTOFF_EXT_TYPE issetto
thevalue PRO_SKIRT_EXT_
SHUTOFF_BY_BOUND.
PRO_E_SKIRT_DRAFT_ANGLE PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
draftangletodefinetheshut-off
extension. Thedefaultvaluefor
thiselementiszerodegrees.
PRO_E_SKIRT_SHUTOFF_
PLANE_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesapartingplaneonwhich
theshut-offsurfaceextensionisto
becreated.Itdefineshowfarthe
draftedsurfacewillbeextended.
Thiselementismandatory onlyif
theelement PRO_E_SKIRT_
SHUTOFF_EXT_TYPE issetto
thevalue PRO_SKIRT_EXT_
SHUTOFF_BY_BOUND
PRO_E_SKIRT_CREATE_
TRANS_OPTPRO_VALUE_TYPE_INT Optionalelement.Specifyavalue
tocreatetransitions across
differentsetsofskirtextensions.
SkirtFillFeature
Theelementtreefortheskirtfillfeatureisdocumented intheheaderfile
ProMoldSkirtFill.h, andisasshowninthefollowingfigure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtocreatetransitions across
differentsetsofskirtextensions.
SkirtFillFeature
Theelementtreefortheskirtfillfeatureisdocumented intheheaderfile
ProMoldSkirtFill.h, andisasshowninthefollowingfigure:
1640 Creo®Parametric TOOLKIT User’sGuideElementTreeforSkirtFillfeature
ThefollowingtabledescribestheelementsintheelementtreefortheSkirtFill
feature.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthefeature.
Thevalidvalueforthiselementis
PRO_FEAT_DATUM_SURF.
PRO_E_FEATURE_FORM PRO_VALUE_TYPE_INT Specifiesthefeatureformand
shouldbeoftypePRO_SKIRT_
FILLonly.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthedefaultnameofthe
feature.Thedefaultvalueforthis
elementisSkirt_Fill_1
PRO_E_SKIRT_REF_MODEL PRO_VALUE_TYPE_ Mandatory element.Selectthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1641ElementID DataType Description
SELECTION referencemodelusedforcreating
theskirtsurfacefillfeature.The
validreferenceforthiselementisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTION referencemodelusedforcreating
theskirtsurfacefillfeature.The
validreferenceforthiselementis
asinglePRO_PART
PRO_E_SKIRT_PULL_DIR_
COMPOUNDCompound Specifiesthereferenceforthe
viewdirection.Thevalidreference
forthiselementisPRO_E_
DIRECTION_COMPOUND. This
elementisoptional,ifthedefault
pulldirectionexists.Thedefault
pulldirectionisusedasa
referencefortheviewdirection.
PRO_E_DIRECTION_
COMPOUNDCompound Specifiesthedirectionreference
fortheskirtsurface.Thevalid
references forthiselementare:
•StraightEdge
•StraightCurve
•PlanarSurface
•DatumPlane
•Datumaxis
•DatumCoordinate System
Axis
PRO_E_SKIRT_FILL_SET_
ARRArray Mandatory element.Specifiesan
arrayelementwhichcontainsaset
ofPRO_E_SKIRT_FILL_SET_
COMPOUND elements.
PRO_E_SKIRT_FILL_SET_
COMPOUNDCompound Mandatory element.Specifyone
elementofthistypeforeach
compound setPRO_E_SKIRT_
FILL_SET_COMPOUND
containedinPRO_E_SKIRT_
FILL_SET_ARR. Eachsetgives
providesinformation aboutthe
skirtfillset.
PRO_E_SKIRT_FILL_SET_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementofthistypeforeach
compound setPRO_E_SKIRT_
FILL_SET_COMPOUND
containedinPRO_E_SKIRT_
FILL_SET_ARR. Eachsetgives
providesinformation aboutthe
skirtfillset.
PRO_E_SKIRT_FILL_SET_
REF_IDXPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
referenceindex,whichisaunique
valueforeachcompound set
PRO_E_SKIRT_FILL_SET_
COMPOUND.
PRO_E_SKIRT_FILL_
CURVES_COMPOUNDCompound Mandatory element.Specifiesthe
collection ofskirtfillclosure
curves.
PRO_E_STD_CURVE_
COLLECTION_APPLCompound Specifiestheselectionofthe
curvesfortheskirtsurfacefill
feature.
PRO_E_SKIRT_FILL_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifythe
typeofclosuretobeusedfor
closinginnerloopsorholesina
skirtpartingsurface.Thevalid
valuesforthiselementaredefined
bytheenumerated type
ProSkirtFillType andareas
1642 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
follows:
•PRO_SKIRT_FILL_
STANDARD—This isthe
defaultclosuretype.
•PRO_SKIRT_FILL_MID_
PLANE—Specifies theclosure
fromthemiddleplane.
•PRO_SKIRT_FILL_MID_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollows:
•PRO_SKIRT_FILL_
STANDARD—This isthe
defaultclosuretype.
•PRO_SKIRT_FILL_MID_
PLANE—Specifies theclosure
fromthemiddleplane.
•PRO_SKIRT_FILL_MID_
SURF—Specifies theclosure
fromthemiddlesurface.
•PRO_SKIRT_FILL_CAP_
PLANE—Specifies theclosure
fromthecappingplane.
•PRO_SKIRT_FILL_CAP_
SURF—Specifies theclosure
fromthecappingsurface.
•PRO_SKIRT_FILL_
NEAREST_PLANE—Specifies
theclosurefromthenearest
plane.
PRO_E_SKIRT_FILL_PLANE PRO_VALUE_TYPE_
SELECTIONSelectaplanarsurface.This
elementismandatory ,ifthe
element PRO_E_SKIRT_FILL_
TYPEissettothevalue PRO_
SKIRT_FILL_MID_PLANE and
PRO_SKIRT_FILL_CAP_
PLANE.
PRO_E_SKIRT_FILL_SURF_
COMPOUNDCompound Selectanysurface.Youcanselect
allthesurfacesexceptthe
referencemodelgeometry.This
elementismandatory ,ifthe
element PRO_E_SKIRT_FILL_
TYPEissettothevalue PRO_
SKIRT_FILL_MID_SURF and
PRO_SKIRT_FILL_CAP_SURF.
PRO_E_SKIRT_FILL
_LOOP_OFFSETPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
loopoffset.Thiselementisused
onlywhentheelement PRO_E_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSKIRT_FILL_MID_SURF and
PRO_SKIRT_FILL_CAP_SURF.
PRO_E_SKIRT_FILL
_LOOP_OFFSETPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
loopoffset.Thiselementisused
onlywhentheelement PRO_E_
SKIRT_FILL_TYPE issettothe
value PRO_SKIRT_FILL_MID_
PLANEorPRO_SKIRT_FILL_
CAP_PLANE.
Sub-Element Trees:CreoNCSteps
Thissectiondescribeshowtoconstructandaccessthesub-element treesthatare
usedinthecreationofCreoNCfeatures.
Production Applications: CreoNCSequences, Operations andWorkCenters 1643RetractElements
Theelement PRO_E_RETR_SURF isdocumented intheheaderfile
ProMfgElemRetract.h, andisasshowninthefollowingfigure.
ElementtreeforPRO_E_RETR_SURF element
ThefollowingtableliststhecontentsofPRO_E_RETR_SURF element.
1644 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_RETR_SURF_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofretractsurface.Thevalid
valuesforthiselementare:
•PRO_RETR_SURF_
UNDEFINED—Specifies that
theretractsurfacetypeisnot
defined.Thisvalueisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofretractsurface.Thevalid
valuesforthiselementare:
•PRO_RETR_SURF_
UNDEFINED—Specifies that
theretractsurfacetypeisnot
defined.Thisvalueis
applicable onlyfor
manufacturing operations.
•PRO_RETR_SURF_PLANE—
Specifiesthattheretract
surfacedefinedisaplanar
surface.
•PRO_RETR_SURF_
CYLINDER—Specifies that
theretractsurfacedefinedisa
cylindrical surface.
•PRO_RETR_SURF_
SPHERE—Specifies thatthe
retractsurfacedefinedisa
sphericalsurface.
•PRO_RETR_SURF_
REVOLVED—Specifies that
theretractsurfacedefinedisa
revolvedsurface.
Note
Thevalues PRO_RETR_
SURF_CYLINDER, PRO_
RETR_SURF_SPHERE, and
PRO_RETR_SURF_
REVOLVED arenot
applicable for3-axis
sequences andoperations
with3-axisworkcell.
PRO_E_RETR_SURF_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
selectionofretractsurface.The
typeofreferencedependson
valuesspecifiedfortheelement
PRO_E_RETR_SURF_TYPE.
Thevalidvaluesforthiselement
are:
•Planeretract:Planarretract
includesdatumplane,planar
surface,planarquiltand
coordinate system.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvaluesspecifiedfortheelement
PRO_E_RETR_SURF_TYPE.
Thevalidvaluesforthiselement
are:
•Planeretract:Planarretract
includesdatumplane,planar
surface,planarquiltand
coordinate system.
Production Applications: CreoNCSequences, Operations andWorkCenters 1645ElementID DataType Description
Note
For3-axissequence
(operation):
○Planarsurfacemust
benormaltoZaxisof
thesequence
(operation) coordinate
system.
○Zaxisofselected
datumcoordinate
systemmustbe
allignedwithZaxis
ofsequence
(operation) coordinate
system.
•Cylinderretract:Cylinder
retractincludesdatumaxisand
coordinate system.
•Sphereretract:Itincludes
datumpointandcoordinate
system.
•Revolvedsurfaceretract:It
includesrevolvedquilts.
PRO_E_RETR_SURF_ORIENT PRO_VALUE_TYPE_INT Specifiestheorientation ofthe
axisfortheretractcylinderif
coordinate systemisselectedas
retractreference
Thevalidvaluesforthiselement
are:
•PRO_RETR_SURF_X_DIR
•PRO_RETR_SURF_Y_DIR
•PRO_RETR_SURF_Z_DIR
Note
Thiselementismandatory if
coordinate systemisselectedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxretractreference
Thevalidvaluesforthiselement
are:
•PRO_RETR_SURF_X_DIR
•PRO_RETR_SURF_Y_DIR
•PRO_RETR_SURF_Z_DIR
Note
Thiselementismandatory if
coordinate systemisselected
forcylindrical retract
referenceandisignoredinall
othercases.
1646 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_RETR_SURF_VALUE PRO_VALUE_TYPE_DOUBLE Mandatory element.Specifiesthe
offsetvaluefortheplanarretract.
Forcylindrical andspherical
retracts,thiselementspecifiesthe
valueoftheradius.
ToolReference
Theelement PRO_E_MFG_TOOL_REF_COMPOUND isdocumented intheheader
fileProMfgElemToolRef.h, andisasshowninthefollowingfigure.
ElementtreeforPRO_E_MFG_TOOL_REF_COMPOUND element
ThefollowingtableliststhecontentsofPRO_E_MFG_TOOL_REF_COMPOUND
element.
Production Applications: CreoNCSequences, Operations andWorkCenters 1647ElementID DataType Description
PRO_E_MFG_TOOL_REF_
HEAD_NUMPRO_VALUE_TYPE_INT Mandatory element.Head(turret)
number.Thevalidvaluesforthis
elementare:
•PRO_MFG_TOOL_HEAD_1—xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_TOOL_REF_
HEAD_NUMPRO_VALUE_TYPE_INT Mandatory element.Head(turret)
number.Thevalidvaluesforthis
elementare:
•PRO_MFG_TOOL_HEAD_1—
Specifiesthatthetoolisplaced
inthehead1.
•PRO_MFG_TOOL_HEAD_2—
Specifiesthatthetoolisplaced
inthehead2.
•PRO_MFG_TOOL_HEAD_3—
Specifiesthatthetoolisplaced
inthehead3.
•PRO_MFG_TOOL_HEAD_4
—Specifies thatthetoolis
placedinthehead4.
Note
Youcanspecifythetoolsin
head1foralltypesof
workcells. Toolsinhead2
canbespecifiedforlatheand
mill-turnworkcellsandtools
inheads3and4canbe
specifiedformill-turn
workcells.
PRO_E_MFG_TOOL_REF_
POCKETPRO_VALUE_TYPE_INT Mandatory element.Thiselement
definesthepositionofthetoolin
theturrethead.
PRO_E_MFG_TOOL_REF_ID PRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesthe
toolId.
Manufacturing Parameters
Theelement PRO_E_MFG_PARAM_ARR isdocumented intheheaderfile
ProMfgElemParam.h, andisasshowninthefollowingfigure.
1648 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_MFG_PARAM_ARR elementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelement PRO_E_MFG_PARAM_ARR isdocumented intheheaderfile
ProMfgElemParam.h, andisasshowninthefollowingfigure.
1648 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_MFG_PARAM_ARR element
Theelement PRO_E_MFG_PARAM_ARR containsthecompound element PRO_
E_MFG_PARAM_COMPOUND thatdefinesthename,attribute,andvalueofthe
parameter.Youmustdefinethiselementforparameters, suchas,CUT_FEED and
SPINDLE_SPEED, whichdonothaveadefaultvalue.RefertotheCreoNC
Manufacturing Helpformoreinformation onCreoNCParameters.
ThefollowingtableliststhecontentsofPRO_E_MFG_PARAM_ARR element.
ElementID DataType Description
PRO_E_MFG_PRM_NAME PRO_VALUE_TYPE_WSTRING Specifiestheuntranslated
parameter namefromthelist
predefined names.
Note
Thiselementisamandatory
childofPRO_E_MFG_
PARAM_COMPOUND
element.
PRO_E_MFG_PRM_ATTR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
optiontodefinelogicfor
parameter valueassignment. The
valuesforthiselementaredefined
byProMfgParamAttr. The
validvaluesforthiselementare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoptiontodefinelogicfor
parameter valueassignment. The
valuesforthiselementaredefined
byProMfgParamAttr. The
validvaluesforthiselementare:
•PRO_MFG_PRM_ATTR_
DEFAULT—The valuefrom
PRO_E_MFG_PRM_VAL_
DBLorPRO_E_MFG_PRM_
VAL_STR isgoingtobe
assignedtothecorresponding
manufacturing parameter.
•PRO_MFG_PRM_ATTR_
AUTOMATIC—Default value
Production Applications: CreoNCSequences, Operations andWorkCenters 1649ElementID DataType Description
(suppliedbyCreoNC)is
goingtobeassignedtothe
corresponding manufacturing
parameter.UsePRO_MFG_
PRM_ATTR_DEFAULT toset
paramvaluetodash(if
applicable). ValuefromPRO_
E_MFG_PRM_VAL_DBL or
PRO_E_MFG_PRM_VAL_
STRisignored.
•PRO_MFG_PRM_ATTR_
MODIFIED—V aluefromsite
orparentsequence(fortool
motionparameters) isgoingto
beassignedtothe
corresponding manufacturing
parameter.ValuefromPRO_
E_MFG_PRM_VAL_DBL or
PRO_E_MFG_PRM_VAL_
STRisgoingtobeusedonlyif
sitewithcorresponding name
doesnotexistin
manufacturing model(Thesite
nameisspecifiedbyPRO_E_
MFG_PARAM_SITE_NAMExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxE_MFG_PRM_VAL_DBL or
PRO_E_MFG_PRM_VAL_
STRisgoingtobeusedonlyif
sitewithcorresponding name
doesnotexistin
manufacturing model(Thesite
nameisspecifiedbyPRO_E_
MFG_PARAM_SITE_NAME
elementinsequenceelem
tree).
•PRO_MFG_PRM_ATTR_
INHERITED—V aluewillbe
assignedautomatically: either
fromsite(ifexists),orfrom
systemdefaults.TheValue
fromPRO_E_MFG_PRM_
VAL_DBL orPRO_E_MFG_
PRM_VAL_STR isignored.
Note
Thiselementisamandatory
childofPRO_E_MFG_
PARAM_COMPOUND
element.
PRO_E_MFG_PRM_VAL_DBL PRO_VALUE_TYPE_DOUBLE Specifiesthevalueoftypedouble.
Note
ThiselementisMandatory
forDoubledatatype
parameters withattributeset
toPRO_MFG_PRM_ATTR_
MODIFIED. Ignoredfor
otherdatatypes.
1650 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_PRM_VAL_STR PRO_VALUE_TYPE_WSTRING Specifiesthevalueoftypestring.
Note
Mandatory forStringdata
typeparameters withattribute
settoPRO_MFG_PRM_
ATTR_MODIFIED. Ignored
forotherdatatypes.
SurfaceCollectionwithMillWindowxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Mandatory forStringdata
typeparameters withattribute
settoPRO_MFG_PRM_
ATTR_MODIFIED. Ignored
forotherdatatypes.
SurfaceCollectionwithMillWindow
Theelement PRO_E_MFG_CMP_MILL_WIND isdocumented intheheaderfile
ProMfgElemMachWindow.h, andisasshowninthefollowingfigure.
ElementtreeforPRO_E_MFG_CMP_MILL_WIND element
ThefollowingtableliststhecontentsofPRO_E_MFG_CMP_MILL_WIND
element
ElementID DataType Description
PRO_E_MFG_MILL_WIND PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
selectionofmillwindowfeature.
PRO_E_MFG_CMP_CLOSED_
LOOPSCompound Optionalelement.Specifiesclosed
loopcompound specification.
PRO_E_MFG_EXCL_SRF_COLL Compound
:DOptionalelement.Definesthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1651ElementID DataType Description
excludedsurfaces.
Note
Specifyavalueforthis
elementonlyforfinishing
andcornerfinishing
sequences.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
surfacecollection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Specifyavalueforthis
elementonlyforfinishing
andcornerfinishing
sequences.
PRO_E_STD_SURF_
COLLECTION_APPLPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
surfacecollection.
PRO_E_MFG_SURF_SIDE_
COMPOUNDCompound Optionalelement.Specifiesthe
surfacesidecompound
specification. Thiselementisused
asasubelementofPRO_E_MFG_
CMP_MILL_WIND onlywhenyou
clickAdjustgeometry
collectionwithinwindow
andselectQuiltduringtheMill
Windowfeaturedefinitioninthe
CreoParametric userinterface.
PRO_E_MFG_SURF_SIDE_
TOLERANCEPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
toleranceusedforthegroupingof
quilts.
PRO_E_MFG_SURF_SIDE_
FLIP_QUILTSPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofquiltswithchanged
normal.Thiselementsupports
multipleselections.
PRO_E_MFG_CMP_CLOSED_LOOPS Element
Theelementsunderthecompound element PRO_E_MFG_CMP_CLOSED_LOOPS
aredescribedinthissection.
ElementtreeforPRO_E_MFG_CMP_CLOSED_LOOPS elementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmultipleselections.
PRO_E_MFG_CMP_CLOSED_LOOPS Element
Theelementsunderthecompound element PRO_E_MFG_CMP_CLOSED_LOOPS
aredescribedinthissection.
ElementtreeforPRO_E_MFG_CMP_CLOSED_LOOPS element
1652 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_CLOSED_LOOP_
ARRArray Optionalelement.Specifiesan
arrayofclosedloopspecifications.
PRO_E_MFG_CLOSED_LOOP_
REF_ITEMCompound Optionalelement.Specifiesthe
closedloopspecification.
PRO_E_STD_CURVE_
COLLECTION_APPLPRO_VALUE_TYPE_POINTER Specifiesthechaincollection.
Note
Thiselementisamandatory
childofPRO_E_MFG_
CLOSED_LOOP_REF_ITEM
compound element.
SequencePrerequisites
Theelement PRO_E_MFG_PREREQUISITE_ARR isdocumented intheheader
fileProMfgElemPrerequisite.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_MFG_PREREQUISITE_ARR element
ThefollowingtableliststhecontentsofPRO_E_MFG_PREREQUISITE_ARR
element.
ElementID DataType Description
PRO_E_MFG_PREREQUISITE_
COMPOUNDCompound Compound element.AcompoundxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingtableliststhecontentsofPRO_E_MFG_PREREQUISITE_ARR
element.
ElementID DataType Description
PRO_E_MFG_PREREQUISITE_
COMPOUNDCompound Compound element.Acompound
elementwhichdefinesthe
prerequisites forthestep.
PRO_E_MFG_PREREQUISITE_
IDPRO_VALUE_TYPE_INT Mandatory childofPRO_E_MFG_
PREREQUISITE_COMPOUND
element.SpecifiestheIdofthe
prerequisite sequence.
Production Applications: CreoNCSequences, Operations andWorkCenters 1653ElementTrees:ToolSetup
TheToolSetupFeatureElementTree:
Theelementtreeforthemillingroughingsequenceisdocumented intheheader
fileProMfgElemToolSetup.h, andisasshowninthefollowingfigure:
ElementTreeforToolSetupfeature
1654 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_WCELL_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
toolsetuparray.
PRO_E_MFG_WCELL_TOOL_
SETUPCompound Optionalelement.Specifiesthe
toolsetupcompound
specification.
PRO_E_MFG_WCELL_TOOL_
POCKET_NUMPRO_VALUE_TYPE_INT Mandatory element.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolsetuparray.
PRO_E_MFG_WCELL_TOOL_
SETUPCompound Optionalelement.Specifiesthe
toolsetupcompound
specification.
PRO_E_MFG_WCELL_TOOL_
POCKET_NUMPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolpositioninhead(turret).
PRO_E_MFG_WCELL_TOOL_ID PRO_VALUE_TYPE_WSTRING Mandatory feature.Specifiesthe
toolID.
Note
ToolwithsuchIDshould
existinmanufacturing
model.
PRO_E_MFG_WCELL_TOOL
_OUTPUT_TIPPRO_VALUE_TYPE_INT Optionalelement,ifnotdefinedor
ifthevalueissetto1.Specifies
thetipnumber.
Note
Thetooltipnumbershould
notbegreaterthanthe
numberofchildreninPRO_
E_MFG_TOOL_TIP_ARR.
PRO_E_MFG_TOOL_TIP_ARR Array Optionalelement.Specifiesan
arrayoftips.
PRO_E_MFG_TOOL_TIP_
COMPOUNDCompound Optionalelement.Thiscompound
elementdefinesthetip
specification.
PRO_E_MFG_TOOL_TIP_
REGISTERPRO_VALUE_TYPE_INT Optionalelement.Specifiesthetip
registernumber.
PRO_E_MFG_TOOL_TIP_
COMMENTPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthetip
comment.
PRO_E_MFG_TOOL_TIP_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxREGISTERPRO_VALUE_TYPE_INT Optionalelement.Specifiesthetip
registernumber.
PRO_E_MFG_TOOL_TIP_
COMMENTPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthetip
comment.
PRO_E_MFG_TOOL_TIP_
OFFSET_ZPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetvalueforthetooltipinthe
Z-direction.
PRO_E_MFG_TOOL_TIP_
OFFSET_XPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetvalueforthetooltipinthe
X-direction.
PRO_E_MFG_TOOL_TIP_
OFFSET_ANGLEPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthetip
angleoffsetvalue.
PRO_E_MFG_TOOL_TIP_
FLASH_OPTPRO_VALUE_TYPE_INT Optionalelement,iftheelementis
notdefinedorthevalueofthe
elementissettoPRO_B_FALSE.
Specifiestheenabling/disabling of
theflashoptionofthetooltip.
Thevalidvaluesforthiselement
are:
•PRO_B_TRUE—Enables
flashingcapability.
Production Applications: CreoNCSequences, Operations andWorkCenters 1655ElementID DataType Description
•PRO_B_FALSE—Disables
flashingcapability.
PRO_E_MFG_TOOL_TIP_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxflashingcapability.
Production Applications: CreoNCSequences, Operations andWorkCenters 1655ElementID DataType Description
•PRO_B_FALSE—Disables
flashingcapability.
PRO_E_MFG_TOOL_TIP_
FLSH_REGISTERPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
registernumberforalternatetip
fortheflashtool.
Note
Thiselementisignoredifthe
element PRO_E_MFG_
TOOL_TIP_FLASH_OPT is
settoPRO_B_FALSE.
PRO_E_MFG_TOOL_TIP_
FLSH_COMMENTPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
flashtoolalternatetipcomments.
Note
Thiselementisignoredifthe
element PRO_E_MFG_
TOOL_TIP_FLASH_OPT is
settoPRO_B_FALSE
PRO_E_MFG_TOOL_TIP_
FLSH_OFFSET_ZPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
flashtoolalternatetipZoffset.
Note
Thiselementisignoredifthe
element PRO_E_MFG_
TOOL_TIP_FLASH_OPT is
settoPRO_B_FALSE
PRO_E_MFG_TOOL_TIP_
FLSH_OFFSET_XPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
flashtoolalternatetipXoffset.
Note
Thiselementisignoredifthe
element PRO_E_MFG_
TOOL_TIP_FLASH_OPT is
settoPRO_B_FALSExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFLSH_OFFSET_XPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
flashtoolalternatetipXoffset.
Note
Thiselementisignoredifthe
element PRO_E_MFG_
TOOL_TIP_FLASH_OPT is
settoPRO_B_FALSE
1656 Creo®Parametric TOOLKIT User’sGuideElementTrees:CMMProbeSetup
TheCMMprobeSetupElementTree:
TheelementtreefortheCMMprobesetupisdocumented intheheaderfile
ProMfgElemToolSetupCmm.h, andisasshowninthefollowingfigure:
ElementTreeforCMMProbeSetup
ThefollowingtabledescribestheelementsintheelementtreefortheCMMprobe
setupfeature.
ElementID DataType Description
PRO_E_MFG_CMM_TOOL_
SETUP_ARRArray Optionalelement.Specifiesthe
CMMprobessetuparray.
PRO_E_MFG_CMM_TOOL_
SETUPCompound Optionalelement.Thiscompound
elementdefinestheprobesetup
compound specification.
PRO_E_MFG_CMM_TOOL_
POCKET_NUMPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
probepositionintoolmagazine.
PRO_E_MFG_CMM_TOOL_
TOOL_IDPRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesthe
ProbeID.
Note
ToolwithsuchIDshould
existinmanufacturing
model.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprobepositionintoolmagazine.
PRO_E_MFG_CMM_TOOL_
TOOL_IDPRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesthe
ProbeID.
Note
ToolwithsuchIDshould
existinmanufacturing
model.
PRO_E_MFG_CMM_TOOL_TIP_
NUMPRO_VALUE_TYPE_INT Optionalelement,ifnotdefinedor
ifthevalueissetto1.Specifies
thetipnumberbyidentifying it
fromthearray.
Production Applications: CreoNCSequences, Operations andWorkCenters 1657ElementID DataType Description
PRO_E_MFG_CMM_TOOL_
REGISTERPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
registernumber.
PRO_E_MFG_CMM_TOOL_
COMMENTPRO_VALUE_TYPE_WSTRING Optionalelement.Specifiesthe
probecomments.
PRO_E_MFG_CMM_TOOL_
PITCH_ANGLEPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
pitchanglevalue.
PRO_E_MFG_CMM_TOOL_
ROLL_ANGLEPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
rollanglevalue.
CheckingSurfaces
Theelement PRO_E_CHECK_SURF_COLL isdocumented intheheaderfile
ProMfgElemCheckSurf.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_CHECK_SURF_COLL elementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrollanglevalue.
CheckingSurfaces
Theelement PRO_E_CHECK_SURF_COLL isdocumented intheheaderfile
ProMfgElemCheckSurf.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_CHECK_SURF_COLL element
ThefollowingtableliststhecontentsofPRO_E_CHECK_SURF_COLL element.
1658 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_ADD_REF_PARTS PRO_VALUE_TYPE_INTEGER Optionalelement.Thiselementis
usedtocheckthereferenceparts
forcollisions. Thevalidvaluesfor
thiselementare:
•TRUE—All referenceparts
surfaceswillbecheckedfor
collisions.
•FALSE—Reference parts
surfaceswillnotbeaddedfor
collisionchecking.
Note
TheFALSEvaluewillbe
usedifelementdoesnot
exist.
PRO_E_USE_MILL_STK PRO_VALUE_TYPE_INTEGER Optionalelement.Thiselementis
usedtoapplythestockallowance
parameters ofmillsurfacetothe
surfacesbeingchecked.Thevalid
valuesforthiselementare:
•TRUE—Millsurfacestock
allowance parameter willbe
appliedtochecksurfaces.
Valueofstockallowance is
definedbysequence
manufacturing parameter.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfacesbeingchecked.Thevalid
valuesforthiselementare:
•TRUE—Millsurfacestock
allowance parameter willbe
appliedtochecksurfaces.
Valueofstockallowance is
definedbysequence
manufacturing parameter.
•FALSE—Mill surfacestock
allowance parameter willnot
beapplied.
Note
TheFALSEvaluewillbe
usedifelementdoesnot
exist.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Optionalelement.Specifiesthe
collection ofselectedsurfacesto
becheckedforcollisions.
Production Applications: CreoNCSequences, Operations andWorkCenters 1659ApproachandExit
Theelementtreefortheapproachandexitparameters isdefinedintheheaderfile
ProMfgElemApproachExit.h, andisasshowninthefollowingfigure:
ElementtreeforPRO_E_MFG_CMP_APPROACH_EXIT element
ThefollowingtableliststhecontentsofPRO_E_MFG_CMP_APPROACH_EXIT
element.
ElementID DataType Description
PRO_E_MFG_CMP_APPROACH Compound Optionalelement.Thiscompound
elementspecifiesapproach
compound. Itcombinesapproach
axisandfirstsliceonly.
PRO_E_MFG_APPROACH_AXIS PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_CMP_APPROACH Compound Optionalelement.Thiscompound
elementspecifiesapproach
compound. Itcombinesapproach
axisandfirstsliceonly.
PRO_E_MFG_APPROACH_AXIS PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaverticaldatumaxis.
PRO_E_MFG_FIRST_SLICE_
ONLYPRO_VALUE_TYPE_INT Specifiestheflagvalueforthe
approachmotion.Thevalidvalues
forthiselementare:
•True
•False
Note
Thiselementismandatory if
theelement PRO_E_MFG_
APPROACH_AXIS isset.It
isnotusedotherwise.
PRO_E_MFG_CMP_EXIT Compound Thiscompound elementspecifies
anexitcompound. Itcombines
exitaxisandlastsliceonly.
1660 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_EXIT_AXIS PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaverticaldatumaxis.
PRO_E_MFG_LAST_SLICE_
ONLYPRO_VALUE_TYPE_INT Specifiestheflagvaluefortheexit
motion.Thevalidvaluesforthis
elementare:
•True
•False
Note
Thiselementismandatory if
theelement PRO_E_MFG_
EXIT_AXIS isset.Itisnot
usedotherwise.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxONLYPRO_VALUE_TYPE_INT Specifiestheflagvaluefortheexit
motion.Thevalidvaluesforthis
elementare:
•True
•False
Note
Thiselementismandatory if
theelement PRO_E_MFG_
EXIT_AXIS isset.Itisnot
usedotherwise.
SpindleTypes
Thissectiondescribesthetypesofspindles,whichcanbeusedwhilecreatinga
sequencefeature.Thetypesofspindlesaredefinedbytheenumerated type
ProSubSpindleOpt andareasfollows:
•PRO_MFG_MAIN_SPINDLE—Specifies thatthesequencefeatureiscreated
forthepartinthemainspindle.
•PRO_MFG_SUB_SPINDLE—Specifies thatthesequencefeatureiscreated
forthepartinthesub–spindle.
Twopartscanbemachinedduringthesameoperationusingthemainspindleand
thesubspindle.
ToolMotions
Thissectiondescribeshowtoconstructandaccessthesub-element treesfor
variousToolMotiontypesthatareusedinthecreationofCreoNCfeatures.
ApproachAlongToolAxis
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnAlongAxisAppr.h, andisasshowninthefollowing
figure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxApproachAlongToolAxis
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnAlongAxisAppr.h, andisasshowninthefollowing
figure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1661Thefollowingtabledescribestheelementsintheelementtreefortheapproach
alongtoolaxisfeature.
1662 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_ALONG_AXIS_
APPROACH.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.
Plungefeedspecifiestherate
atwhichthetoolapproaches
andplungesintothe
workpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
ExitAlongToolAxis
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnAlongAxisExit.h, andisasshowninthefollowing
figure:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExitAlongToolAxis
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnAlongAxisExit.h, andisasshowninthefollowing
figure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1663Thefollowingtabledescribestheelementsintheelementtreefortheapproach
alongtoolaxisfeature.
1664 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_ALONG_AXIS_EXIT.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
ToolMotion—FollowCurve
Theelement PRO_E_TOOL_MTN isacompound elementthatallowsyouto
specifythetoolmotionparameters.
ThiselementisamemberofPRO_E_TOOL_MTN_ARR arrayandisdocumented
intheheaderfileProMfgElemToolMtnFollowCrv.h, andisshowninthe
followingfigure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifythetoolmotionparameters.
ThiselementisamemberofPRO_E_TOOL_MTN_ARR arrayandisdocumented
intheheaderfileProMfgElemToolMtnFollowCrv.h, andisshowninthe
followingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1665ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_FOLLOW_CURVE.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approachxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnon-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
1666 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
whichthetoolleavesthe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_CRV_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
selectionofthecurvefeature.
PRO_E_TOOL_MTN_CRV_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionoftheworkingforthe
curvefeature.Thedirectionis
definedbytheenumerated data
typeProMfgCrvDir inxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_TOOL_MTN_CRV_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionoftheworkingforthe
curvefeature.Thedirectionis
definedbytheenumerated data
typeProMfgCrvDir in
ProMfgOptions.h.
Thevalidvaluesforthiselement
are:
•PRO_MFG_DIR_OPPOSITE
•PRO_MFG_DIR_SAME
ToolMotion—GoToPoint
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnGotoPnt.h,
andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1667ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_GOTO_POINT. Thevalue
forthiselementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforthiselementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
1668 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.
Plungefeedspecifiestherate
atwhichthetoolapproaches
andplungesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapproachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
•PRO_TM_FEED_THREAD—
Specifiesathreadfeedtype.
Threadfeedspecifiesthefeed
rateforthetappingstep.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_PNT_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
datumpointreference.
Production Applications: CreoNCSequences, Operations andWorkCenters 1669ElementID DataType Description
PRO_E_TOOL_MTN_OFFSET Compound Optionalelement.Thiscompound
elementspecifiesthedefinitionfor
thevarioustoolmotionoffset
parameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_TOOL_MTN_OFFSET Compound Optionalelement.Thiscompound
elementspecifiesthedefinitionfor
thevarioustoolmotionoffset
parameters.
PRO_E_TOOL_MTN_X_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongX-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Y_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongY-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Z_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongZ-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE
PRO_E_TOOL_MTN_AXIS_
MOVESPRO_VALUE_TYPE_INT Mandatory iftheelement PRO_E_
TOOL_MTN_OFFSET isdefined.
Specifiestheattributesfortheaxis
moves.
PRO_E_MFG_TM_TOOL_AXIS_
COMPOUNDCompound Optionalelement.ThiscompoundxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMOVESPRO_VALUE_TYPE_INT Mandatory iftheelement PRO_E_
TOOL_MTN_OFFSET isdefined.
Specifiestheattributesfortheaxis
moves.
PRO_E_MFG_TM_TOOL_AXIS_
COMPOUNDCompound Optionalelement.Thiscompound
elementspecifiesthetoolaxis.
PRO_E_MFG_TM_TOOL_AXIS_
OPTPRO_VALUE_TYPE_INT Optionalelement.Thiselement
specifiesthetoolaxisoptions
usingtheenumerated type
ProTmToolAxisOpt. Thevalid
valuesforthiselementare:
•PRO_TM_ALONG_Z
•PRO_TM_USE_PREV
•PRO_TM_AXIS_SEL
1670 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_TM_TOOL_AXIS_
REFPRO_VALUE_TYPE_
SELECTIONThiselementspecifiestheaxis
selection.
Note
Thiselementismandatory if
theelement PRO_E_MFG_
TM_TOOL_AXIS_OPT isset
toPRO_TM_AXIS_SEL.
PRO_E_MFG_TM_TOOL_AXIS_
FLIP_OPTPRO_VALUE_TYPE_INT Specifiestheflipoptions.The
validvaluesforthiselementare:
•TRUE
•FALSE
Note
Thiselementismandatory if
theelement PRO_E_MFG_
TM_TOOL_AXIS_OPT isset
toPRO_TM_AXIS_SEL.
ToolMotion—GoDelta
ThePRO_E_TOOL_MTN elementisamemberofPRO_E_TOOL_MTN_ARRxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•TRUE
•FALSE
Note
Thiselementismandatory if
theelement PRO_E_MFG_
TM_TOOL_AXIS_OPT isset
toPRO_TM_AXIS_SEL.
ToolMotion—GoDelta
ThePRO_E_TOOL_MTN elementisamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnGoDelta.h,
andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1671ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
Toolmotiontype.Thevalidvalue
forthiselementisTPRO_TM_
TYPE_GO_DELTA. Thevaluefor
thiselementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
1672 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.
Plungefeedspecifiestherate
atwhichthetoolapproaches
andplungesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
•PRO_TM_FEED_THREAD—
Specifiesathreadfeedtype.
Threadfeedspecifiesthefeed
rateforthetappingstep.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhichthetoolleavesthe
workpiece.
•PRO_TM_FEED_THREAD—
Specifiesathreadfeedtype.
Threadfeedspecifiesthefeed
rateforthetappingstep.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_OFFSET Compound Optionalelement.Thiscompound
Production Applications: CreoNCSequences, Operations andWorkCenters 1673ElementID DataType Description
elementspecifiestheoffsetvalue.
Note
Atleastoneofelements
belowmusthaveanonzero
value.
•PRO_E_TOOL_MTN_X_
OFFSET
•PRO_E_TOOL_MTN_Y_
OFFSET
•PRO_E_TOOL_MTN_Z_
OFFSET
PRO_E_TOOL_MTN_X_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongX-axis.Thiselement
canrangefromnegativeto
positivevalues.ThevalidrangexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOFFSET
•PRO_E_TOOL_MTN_Z_
OFFSET
PRO_E_TOOL_MTN_X_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongX-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Y_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongY-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Z_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongZ-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE
PRO_E_MFG_TM_TOOL_AXIS_
COMPOUNDCompound Optionalelement.Thiscompound
elementspecifiesthetoolaxis.
PRO_E_MFG_TM_TOOL_AXIS_
OPTPRO_VALUE_TYPE_INT Optionalelement.Thiselement
specifiesthetoolaxisoptions.The
validvaluesforthiselementare:
•PRO_TM_ALONG_Z
•PRO_TM_USE_PREV
•PRO_TM_AXIS_SELxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_TM_TOOL_AXIS_
OPTPRO_VALUE_TYPE_INT Optionalelement.Thiselement
specifiesthetoolaxisoptions.The
validvaluesforthiselementare:
•PRO_TM_ALONG_Z
•PRO_TM_USE_PREV
•PRO_TM_AXIS_SEL
1674 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_TM_TOOL_AXIS_
REFPRO_VALUE_TYPE_
SELECTIONThiselementspecifiestheaxis
selection.
Note
Thiselementismandatory if
theelement PRO_E_MFG_
TM_TOOL_AXIS_OPT isset
toPRO_TM_AXIS_SEL.
PRO_E_MFG_TM_TOOL_AXIS_
FLIP_OPTPRO_VALUE_TYPE_INT Specifiestheflipoptions.The
validvaluesforthiselementare:
•TRUE
•FALSE
Note
Thiselementismandatory if
theelement PRO_E_MFG_
TM_TOOL_AXIS_OPT isset
toPRO_TM_AXIS_SEL.
ToolMotion—GoHome
ThePRO_E_TOOL_MTN elementisamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnGoHome.h,
andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayandisdocumented intheheaderfileProMfgElemToolMtnGoHome.h,
andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
Production Applications: CreoNCSequences, Operations andWorkCenters 1675ElementID DataType Description
PRO_E_TOOL_MTN Compound Compound element.Thiselement
specifiesthetoolmotion
definition.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxworkpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_GOHOME. Thevaluefor
thiselementisdefinedby
ProTmType.
1676 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONSpecifiestheaxisselection.This
elementisoptionalfor5-axisCreo
NCsequences.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONSpecifiestheaxisselection.This
elementisoptionalfor5-axisCreo
NCsequences.
Note
Bydefault,Z-axisoftheCreo
NCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences, youcanselectan
alternative axis.
ToolMotion—LeadIn
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnLeadIn.h,
andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1677ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN Compound Compound element.Thiselement
specifiesthetoolmotion
definition.
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_LEAD_IN. Thevaluefor
thiselementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_LEAD_IN. Thevaluefor
thiselementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
1678 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
thetoolapproaches the
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Thevalueswhichare
usedtodefinethiselementare:
•ENTRY_ANGLE
•TANGENT_LEAD_STEP
•NORMAL_LEAD_STEP
•LEAD_RADIUS
Theelementtreeforthe
manufacturing parameter isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayofmanufacturing
parameters. Thevalueswhichare
usedtodefinethiselementare:
•ENTRY_ANGLE
•TANGENT_LEAD_STEP
•NORMAL_LEAD_STEP
•LEAD_RADIUS
Theelementtreeforthe
manufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionforthenormalapproach
typeoftoolexit.Thedirectionis
definedbytheenumerated data
typeProTmSideDirin
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
Note
Thiselementisoptionalfor
5-axisCreoNCsequences.
BydefaultZ-axisoftheCreo
NCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences ausercanselectan
alternative axis.
ToolMotion—GoRetract
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARRxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences ausercanselectan
alternative axis.
ToolMotion—GoRetract
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnGoRetr.h,
andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1679ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN Compound Compound element.Thiselement
specifiesToolmotiondefinition.
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
Toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_GO_RETRACT. Thevalue
forthiselementisdefinedby
ProTmType.
1680 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
ToolMotion—NormalApproach
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnNormAppr.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1681ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN Compound Compound element.Thiselement
specifiesthetoolmotion
definition.
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_NORMAL_APPROACH.
Thevalueforthiselementis
definedbyProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforthiselementisPRO_TM_
TYPE_NORMAL_APPROACH.
Thevalueforthiselementis
definedbyProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
1682 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theelement
APPROACH_DIST isusedto
specifytheapproachdistance.
Theelementtreeforthe
manufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameters. Theelement
APPROACH_DIST isusedto
specifytheapproachdistance.
Theelementtreeforthe
manufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formoreinformation
ontheelementtree.
PRO_E_TOOL_MTN_OFFSET Compound Optionalelement.Thiscompound
elementspecifiestheoffsetvalue.
PRO_E_TOOL_MTN_X_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongX-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Y_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongY-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Z_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongZ-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefromxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDIM_VALUE.
PRO_E_TOOL_MTN_Z_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongZ-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE
Production Applications: CreoNCSequences, Operations andWorkCenters 1683ElementID DataType Description
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionforthenormalapproach
typeoftoolexit.Thedirectionis
definedbytheenumerated data
typeProTmSideDir in
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
Note
Thiselementisoptionalfor
5-axisCreoNCsequences.
BydefaultZ-axisoftheCreo
NCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences ausercanselectan
alternative axis.
ToolMotion—NormalExit
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARRxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences ausercanselectan
alternative axis.
ToolMotion—NormalExit
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnNormExit.h, andisshowninthefollowingfigure.
1684 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN Compound Compound element.Thiselement
specifiestheToolmotion
definition.
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Toolmotion
type.Thevalidvalueforthis
elementisPRO_TM_TYPE_
NORMAL_EXIT. Thevaluefor
thiselementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
Production Applications: CreoNCSequences, Operations andWorkCenters 1685ElementID DataType Description
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theelement EXIT_
DISTANCE isusedtospecifythe
exitdistance.
Theelementtreeforthe
manufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmoreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionoforientation forthe
approachorexittoolmotion.The
directionoftheorientation is
definedbytheenumerated data
typeProTmSideDir in
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
Note
Thiselementisoptionalfor
5-axisCreoNCsequences.
BydefaultZ-axisoftheCreo
NCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences ausercanselectan
alternative axis.
ToolMotion—LeadOut
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnLeadOut.h,
andisshowninthefollowingfigure.
1686 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandisshowninthefollowingfigure.
1686 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_LEAD_OUT. Thevaluefor
thiselementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxworkpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
Production Applications: CreoNCSequences, Operations andWorkCenters 1687ElementID DataType Description
parameters. Thefollowing
parameters areusedtodefinethe
LeadOutMotion:
•EXIT_ANGLE
•TANGENT_LEAD_STEP
•NORMAL_LEAD_STEP
•LEAD_RADIUS
Theelementtreeforthe
manufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionoforientation for
approach/exit toolmotion.The
directionoforientation isdefined
bytheenumerated datatype
ProTmSideDir in
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbytheenumerated datatype
ProTmSideDir in
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
Note
Thiselementisoptionalfor
5-axisCreoNCsequences.
BydefaultZ-axisoftheCreo
NCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences ausercanselectan
alternative axis.
ToolMotion—HelicalApproach
Theelement PRO_E_TOOL_MTN isdocumented intheheaderfile
ProMfgElemToolMtnHelAppr.h, andisshowninthefollowingfigure.
1688 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
typeofthetoolmotionusedfor
theCreoNCsequence.Thevalid
valueforthiselementisPRO_
TM_TYPE_HELICAL_
APPROACH. Thevalueforthis
elementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeofthetoolmotionusedfor
theCreoNCsequence.Thevalid
valueforthiselementisPRO_
TM_TYPE_HELICAL_
APPROACH. Thevalueforthis
elementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.
Plungefeedspecifiestherate
atwhichthetoolapproaches
andplungesintothe
Production Applications: CreoNCSequences, Operations andWorkCenters 1689ElementID DataType Description
workpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxworkpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Thefollowing
parameters areusedtodefinethe
helicalapproachmotion:
•ENTRY_ANGLE
•CLEAR_DIST
•NORMAL_LEAD_STEP
•LEAD_RADIUS
Theelementtreeforthe
manufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionoforientation for
approachorexittoolmotion.The
directionoforientation isdefined
bytheenumerated datatype
ProTmSideDir in
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
Note
Thiselementisoptionalfor
5-axisCreoNCsequences.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
Note
Thiselementisoptionalfor
5-axisCreoNCsequences.
BydefaultZ-axisoftheCreo
NCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences ausercanselectan
alternative axis.
1690 Creo®Parametric TOOLKIT User’sGuideToolMotion—HelicalExit
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnHelExit.h,
andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTNelement.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_HELICAL_EXIT. The
valueforthiselementisdefined
byProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPE_HELICAL_EXIT. The
valueforthiselementisdefined
byProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Production Applications: CreoNCSequences, Operations andWorkCenters 1691ElementID DataType Description
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Thefollowing
parameters areusedtodefinethe
helicalapproachmotion:
•EXIT_ANGLE
•PULLOUT_DISTxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxworkpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Thefollowing
parameters areusedtodefinethe
helicalapproachmotion:
•EXIT_ANGLE
•PULLOUT_DIST
•NORMAL_LEAD_STEP
•LEAD_RADIUS
Theelementtreeforthe
manufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
1692 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionoforientation for
approachorexittoolmotion.The
directionoforientation isdefined
bytheenumerated datatype
ProTmSideDir in
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
Note
Thiselementisoptionalfor
5-axisCreoNCsequences.
BydefaultZ-axisoftheCreo
NCsequenceisusedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
Note
Thiselementisoptionalfor
5-axisCreoNCsequences.
BydefaultZ-axisoftheCreo
NCsequenceisusedto
definetheconstraint plane.
For5-axisCreoNC
sequences ausercanselectan
alternative axis.
ToolMotion—GoToSurface
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnGotoSrf.h,
andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
Production Applications: CreoNCSequences, Operations andWorkCenters 1693ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_GOTO_SURFACE. The
valueforthiselementisdefined
byProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueforthiselementisdefined
byProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.
Plungefeedspecifiestherate
atwhichthetoolapproaches
andplungesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapproachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
1694 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_SRF_REF PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
selectionofasurface.
ToolMotion—GoToAxis
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnGotoAxis.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayandisdocumented intheheaderfile
ProMfgElemToolMtnGotoAxis.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_GOTO_AXIS. Thevalue
forthiselementisdefinedby
ProTmType.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
Production Applications: CreoNCSequences, Operations andWorkCenters 1695ElementID DataType Description
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtransverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.
Plungefeedspecifiestherate
atwhichthetoolapproaches
andplungesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_GOTO_
AXIS_REFPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
axisselection.
1696 Creo®Parametric TOOLKIT User’sGuideToolMotion—TangentApproach
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnTanAppr.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_TANGENT_APPROACH.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
Production Applications: CreoNCSequences, Operations andWorkCenters 1697ElementID DataType Description
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theparameter
APPROACH_DIST specifiesthe
approachdistance.Theelement
treeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_OFFSET Compound Optionalelement.Thiscompound
elementspecifiesthetoolmotion
offset.
PRO_E_TOOL_MTN_X_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetvaluealongtheX-axis.This
elementcanrangefromnegative
topositivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Y_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetvaluealongtheY-axis.This
elementcanrangefromnegative
topositivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
1698 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_TOOL_MTN_Z_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetvaluealongtheZ-axis.This
elementcanrangefromnegative
topositivevalues.ThevalidrangexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_TOOL_MTN_Z_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetvaluealongtheZ-axis.This
elementcanrangefromnegative
topositivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONSpecifiestheaxisselection.
Note
•Thiselementisoptional
for5-axisCreoNC
sequences
•Z-axisoftheCreoNC
sequenceisusedtodefine
theconstraint plane.This
isthedefaultvalue.
•For5-axisCreoNC
sequences youcanselect
analternative axis
ToolMotion—TangentExit
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnTanExit.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
Production Applications: CreoNCSequences, Operations andWorkCenters 1699ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.ThevalidvaluexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: CreoNCSequences, Operations andWorkCenters 1699ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_TANGENT_EXIT.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
1700 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theparameter
APPROACH_DIST specifiesthe
approachdistance.TheelementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theparameter
APPROACH_DIST specifiesthe
approachdistance.Theelement
treeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONSpecifiestheaxisselection.
Note
•Thiselementisoptional
for5-axisCreoNC
sequences.
•Z-axisoftheCreoNC
sequenceisusedtodefine
theconstraint plane.This
isthedefaultvalue.
•For5-axisCreoNC
sequences youcanselect
analternative axis.
Production Applications: CreoNCSequences, Operations andWorkCenters 1701ToolMotion—AreaandGrooveTurning
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnAreaTurn.h and
ProMfgElemToolMtnGrooveTurn.h respectively ,andisasshowninthe
followingfigure:
ElementtreeforPRO_E_TOOL_MTNelement:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayandisdocumented intheheaderfile
ProMfgElemToolMtnAreaTurn.h and
ProMfgElemToolMtnGrooveTurn.h respectively ,andisasshowninthe
followingfigure:
ElementtreeforPRO_E_TOOL_MTNelement:
1702 Creo®Parametric TOOLKIT User’sGuideThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
Toolmotiontype.Thevalidvalue
forthiselementis
•PRO_TM_TYPE_AREA
_TURNING—For areaturning.
•PRO_TM_TYPE_GROOVE
_TURNING—For groove
turning.
.Thevalueforthiselementis
definedbyProTmType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_TURN_
PROFCompound Thiscompound elementspecifiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_TURN_
PROFCompound Thiscompound elementspecifies
theturningprofiledefinition.
PRO_E_TOOL_MTN_TURN_
PROF_REFPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
turningprofilereference.
PRO_E_TOOL_MTN_TURN_
PROF_S_VALPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
startpointoffset.Thiselementcan
rangefromnegativetopositive
values.Thevalidrangevaluesfor
thiselementarefrom-MAX_
DIM_VALUE toMAX_DIM_
VALUE.
PRO_E_TOOL_MTN_TURN_
PROF_E_VALPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
endpointoffset.Thiselementcan
rangefromnegativetopositive
values.Thevalidrangevaluesfor
thiselementarefrom-MAX_
DIM_VALUE toMAX_DIM_
VALUE.
PRO_E_TOOL_MTN_TURN_
PROF_S_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
startpointadjustment reference.
PRO_E_TOOL_MTN_TURN_ PRO_VALUE_TYPE_ Optionalelement.SpecifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVALUE.
PRO_E_TOOL_MTN_TURN_
PROF_S_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
startpointadjustment reference.
PRO_E_TOOL_MTN_TURN_ PRO_VALUE_TYPE_ Optionalelement.Specifiesthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1703ElementID DataType Description
PROF_E_REF SELECTION endpointadjustment reference.
PRO_E_TOOL_MTN_TURN_
PROF_S_ORIENTPRO_VALUE_TYPE_INT Specifiestheorientation ofthe
axiswhencoordinate systemis
selectedasthestartpoint
adjustment. Thevalidvaluesfor
thiselementare:
•PRO_TM_TURN_CSYS_X
•PRO_TM_TURN_CSYS_Y
•PRO_TM_TURN_CSYS_Z
Note
Thiselementismandatory if
coordinate systemisselected
forcylindrical retract
referenceandisignoredinall
othercases.
PRO_E_TOOL_MTN_TURN
_PROF_E_ORIENTPRO_VALUE_TYPE_INT Specifiestheorientation ofthe
axiswhencoordinate systemis
selectedastheendingpoint.The
validvaluesforthiselementare:
•PRO_TM_TURN_CSYS_X
•PRO_TM_TURN_CSYS_Y
•PRO_TM_TURN_CSYS_Z
Note
Thiselementismandatory if
coordinate systemisselectedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectedastheendingpoint.The
validvaluesforthiselementare:
•PRO_TM_TURN_CSYS_X
•PRO_TM_TURN_CSYS_Y
•PRO_TM_TURN_CSYS_Z
Note
Thiselementismandatory if
coordinate systemisselected
forcylindrical retract
referenceandisignoredinall
othercases.
PRO_E_TOOL_MTN_TURN
_DFLT_CORNER_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
defaultcornertype.Thevalid
valuesforthiselementare:
•PRO_TM_TURN_CORNER_
TYPE_SHARP
•PRO_TM_TURN_CORNER_
TYPE_FILLET
•PRO_TM_TURN_CORNER_
TYPE_CHAMFER
PRO_E_TOOL_MTN_TURN_
CORNER_ARRArray Optionalelement.Specifiesthe
cornerconditions array.
PRO_E_TOOL_MTN_TURN_ Compound Thiscompound elementdefines
1704 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
CORNER theelementsrelatedtothecorner
PRO_E_TOOL_MTN_TURN_
CORNER_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
cornertype.Thevalidvaluesfor
thiselementare:
•PRO_TM_TURN_CORNER_
TYPE_SHARP
•PRO_TM_TURN_CORNER_
TYPE_FILLET
•PRO_TM_TURN_CORNER_
TYPE_CHAMFER
PRO_E_TOOL_MTN_TURN_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcornertype.Thevalidvaluesfor
thiselementare:
•PRO_TM_TURN_CORNER_
TYPE_SHARP
•PRO_TM_TURN_CORNER_
TYPE_FILLET
•PRO_TM_TURN_CORNER_
TYPE_CHAMFER
PRO_E_TOOL_MTN_TURN_
PREV_ENT_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
previousentityid.
PRO_E_TOOL_MTN_TURN_
NEXT_ENT_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
nextentityid.
PRO_E_TOOL_MTN_TURN_
CORNER_VALPRO_VALUE_TYPE_DOUBLE Specifiesthefilletradiusor
chamferdimension. Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE
Note
Thiselementismandatory if
cornertypeisPRO_TM_
TURN_CORNER_TYPE_
FILLETorPRO_TM_
TURN_CORNER_TYPE_
CHAMFER.
PRO_E_TURN_STK_ALLW_
PROF_ARRArray Specifiesanarrayforprofilestock
allowance.
PRO_E_TURN_STK_ALLW_
ROUGH_ARRArray Specifiesanarrayforroughstock
allowance.
PRO_E_TURN_STK_
ALLOWANCECompound Specifiesthecompound element
forstockallowance. Formore
information, refertothesection
Specifying theStockAllowance
onpage1706.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallowance.
PRO_E_TURN_STK_
ALLOWANCECompound Specifiesthecompound element
forstockallowance. Formore
information, refertothesection
Specifying theStockAllowance
onpage1706.
PRO_E_TOOL_MTN_TURN_
STK_BND_REFPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifies
referencetotheworkpiece or
stockboundary.
PRO_E_TOOL_MTN_TURN_EXT Compound Mandatory element.This
compound elementspecifies
extensions.
Production Applications: CreoNCSequences, Operations andWorkCenters 1705ElementID DataType Description
PRO_E_TOOL_MTN_TURN_S_
EXTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
startextension. Thevalidvalues
forthiselementare:
•EXT_POS_Z
•EXT_NEG_Z
•EXT_POS_Y
•EXT_NEG_Y
•EXT_NONE
PRO_E_TOOL_MTN_TURN_E_
EXTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
endextension. Thevalidvaluesfor
thiselementare:
•EXT_POS_Z
•EXT_NEG_Z
•EXT_POS_Y
•EXT_NEG_Y
•EXT_NONE
SpecifyingtheStockAllowance
Theelement PRO_E_TURN_STK_ALLOWANCE isusedtospecifythestock
allowance andisdocumented intheheaderfilesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthiselementare:
•EXT_POS_Z
•EXT_NEG_Z
•EXT_POS_Y
•EXT_NEG_Y
•EXT_NONE
SpecifyingtheStockAllowance
Theelement PRO_E_TURN_STK_ALLOWANCE isusedtospecifythestock
allowance andisdocumented intheheaderfiles
ProMfgElemToolMtnAreaTurn.h,
ProMfgElemToolMtnGrooveTurn.h and
ProMfgElemToolMtnProfTurn.h.
Thefollowingfigureshowstheelement PRO_E_TURN_STK_ALLOWANCE:
ThefollowingtableliststhecontentsofPRO_E_TURN_STK_ALLOWANCE
element.
ElementID DataType Description
PRO_E_TURN_STK_
ALLOWANCECompound Specifiesthecompound element
forstockallowance.
PRO_E_TURN_STK_ALLW_ PRO_VALUE_TYPE_INT SpecifiestheIDofthefirstentity
1706 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
FIRST_ENT_ID oftheturnprofilesegmentwith
stockallowance.
PRO_E_TURN_STK_ALLW_
LAST_ENT_IDPRO_VALUE_TYPE_INT SpecifiestheIDofthelastentity
oftheturnprofilesegmentwith
stockallowance.
PRO_E_TURN_STK_
ALLOWANCE_VALPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofthestock
allowance.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLAST_ENT_IDPRO_VALUE_TYPE_INT SpecifiestheIDofthelastentity
oftheturnprofilesegmentwith
stockallowance.
PRO_E_TURN_STK_
ALLOWANCE_VALPRO_VALUE_TYPE_DOUBLE Specifiesthevalueofthestock
allowance.
Production Applications: CreoNCSequences, Operations andWorkCenters 1707ToolMotion—ProfileTurning
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnProfTurn.h, andisasshowninthefollowingfigure:
ElementtreeforPRO_E_TOOL_MTNelement:
1708 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
Toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_PROF_TURNING. The
valueforthiselementisdefined
byProTmType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. Forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayofmanufacturing
parameters. SeetheCreoNC
onlinehelpformoreinformation
onmanufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_TURN_
PROFCompound Thiscompound elementspecifies
theturningprofiledefinition.
PRO_E_TOOL_MTN_TURN_
PROF_REFPRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
turningprofilereference.
PRO_E_TOOL_MTN_TURN_
PROF_S_VALPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
startpointoffset.Thiselementcan
rangefromnegativetopositive
values.Thevalidrangevaluesfor
thiselementarefrom-MAX_
DIM_VALUE toMAX_DIM_
VALUE.
PRO_E_TOOL_MTN_TURN_
PROF_E_VALPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
endpointoffset.Thiselementcan
rangefromnegativetopositive
values.Thevalidrangevaluesfor
thiselementarefrom-MAX_
DIM_VALUE toMAX_DIM_
VALUE.
PRO_E_TOOL_MTN_TURN_
PROF_S_REFPRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxendpointoffset.Thiselementcan
rangefromnegativetopositive
values.Thevalidrangevaluesfor
thiselementarefrom-MAX_
DIM_VALUE toMAX_DIM_
VALUE.
PRO_E_TOOL_MTN_TURN_
PROF_S_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
startpointadjustment reference.
PRO_E_TOOL_MTN_TURN_
PROF_E_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
endpointadjustment reference.
PRO_E_TOOL_MTN_TURN_
PROF_S_ORIENTPRO_VALUE_TYPE_INT Specifiestheorientation ofthe
axiswhencoordinate systemis
selectedasthestartpoint
adjustment. Thevalidvaluesfor
thiselementare:
•PRO_TM_TURN_CSYS_X
•PRO_TM_TURN_CSYS_Y
Production Applications: CreoNCSequences, Operations andWorkCenters 1709ElementID DataType Description
•PRO_TM_TURN_CSYS_Z
Note
Thiselementismandatory if
coordinate systemisselected
forcylindrical retract
referenceandisignoredinall
othercases.
PRO_E_TOOL_MTN_TURN_
PROF_E_ORIENTPRO_VALUE_TYPE_INT Specifiestheorientation ofthe
axiswhencoordinate systemis
selectedastheendingpoint.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferenceandisignoredinall
othercases.
PRO_E_TOOL_MTN_TURN_
PROF_E_ORIENTPRO_VALUE_TYPE_INT Specifiestheorientation ofthe
axiswhencoordinate systemis
selectedastheendingpoint.The
validvaluesforthiselementare:
•PRO_TM_TURN_CSYS_X
•PRO_TM_TURN_CSYS_Y
•PRO_TM_TURN_CSYS_Z
Note
Thiselementismandatory if
coordinate systemisselected
forcylindrical retract
referenceandisignoredinall
othercases.
PRO_E_TOOL_MTN_TURN_
PROF_OFFSET_CUTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
offsetfromturnprofilebythetool
radius.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE
•PRO_B_FALSE
PRO_E_TOOL_MTN_TURN_
DFLT_CORNER_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
cornertype.Thevalidvaluesfor
thiselementare:
•PRO_TM_TURN_CORNER_
TYPE_SHARP
•PRO_TM_TURN_CORNER_
TYPE_FILLET
•PRO_TM_TURN_CORNER_
TYPE_CHAMFER
PRO_E_TOOL_MTN_TURN_
CORNER_ARRArray Optionalelement.Specifiesthe
cornerconditions array.
PRO_E_TOOL_MTN_TURN_
CORNERCompound Thiscompound elementdefines
theelementsrelatedtothecorner.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPE_CHAMFER
PRO_E_TOOL_MTN_TURN_
CORNER_ARRArray Optionalelement.Specifiesthe
cornerconditions array.
PRO_E_TOOL_MTN_TURN_
CORNERCompound Thiscompound elementdefines
theelementsrelatedtothecorner.
PRO_E_TOOL_MTN_TURN_
CORNER_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
cornertype.Thevalidvaluesfor
thiselementare:
•PRO_TM_TURN_CORNER_
TYPE_SHARP
•PRO_TM_TURN_CORNER_
1710 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
TYPE_FILLET
•PRO_TM_TURN_CORNER_
TYPE_CHAMFER
PRO_E_TOOL_MTN_TURN_
PREV_ENT_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
previousentityid.
PRO_E_TOOL_MTN_TURN_
NEXT_ENT_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
nextentityid.
PRO_E_TOOL_MTN_TURN_
CORNER_VALPRO_VALUE_TYPE_DOUBLE Specifiesthefilletradiusor
chamferdimension. Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE
Note
Thiselementismandatory if
cornertypeisPRO_TM_
TURN_CORNER_TYPE_
FILLETorPRO_TM_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcanrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE
Note
Thiselementismandatory if
cornertypeisPRO_TM_
TURN_CORNER_TYPE_
FILLETorPRO_TM_
TURN_CORNER_TYPE_
CHAMFER.
PRO_E_TURN_STK_ALLW_
PROF_ARRArray Specifiesanarrayforprofilestock
allowance.
PRO_E_TURN_STK_ALLW_
ROUGH_ARRArray Specifiesanarrayforroughstock
allowance.
PRO_E_TURN_STK_
ALLOWANCECompound Specifiesthecompound element
forstockallowance. Formore
information, refertothesection
Specifying theStockAllowance
onpage1706.
ToolMotion—CurveTrajectory
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnCrvTraj.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1711ElementtreeforPRO_E_TOOL_MTNelement
1712 Creo®Parametric TOOLKIT User’sGuideThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1712 Creo®Parametric TOOLKIT User’sGuideThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_CURVE_TRAJECTORY.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing parameters.
SeetheCreoNChelpformore
information onmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formoreinformation
ontheelementtree.
PRO_E_MFG_TRAJ_CRV Compound Mandatory element.Specifiesthe
machining curvescompound
definition.
PRO_E_STD_CURVE_
COLLECTION_APPLCurve Collection Mandatory element.Specifiesthe
curvecollection.
PRO_E_NCD_CURVE_POINT Compound Optionalelement.Specifiesthe
compound StartPointdefinition.
Note
Thiselementisapplicable for
closedloopsonly.
PRO_E_NCD_CURVE_POINT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurvecollection.
PRO_E_NCD_CURVE_POINT Compound Optionalelement.Specifiesthe
compound StartPointdefinition.
Note
Thiselementisapplicable for
closedloopsonly.
PRO_E_NCD_CURVE_POINT_
REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
startpointvertexdefinitionto
offsetfrom.
PRO_E_NCD_CURVE_POINT_
OFFSET_TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
startpointoffsettypedefinition.
Thevalidvaluesforthiselement
are:
•PRO_CURVE_POINT_
OFFSET_TYPE_RATIO—
Specifiestheoffsetby
parameter.
•PRO_CURVE_POINT_
OFFSET_TYPE_REAL—
Specifiestheoffsetbylength.
PRO_E_NCD_CURVE_POINT_
OFFSETPRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
startpointoffsetdefinition.
PRO_E_MFG_HELICAL_CUT_
OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
helicalcutoption.Thevalidvalues
forthiselementare:
•PRO_B_TRUE—Specifies that
helicaloptionandparameters
willbeapplied.
Production Applications: CreoNCSequences, Operations andWorkCenters 1713ElementID DataType Description
•PRO_B_FALSE—Specifiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_B_TRUE—Specifies that
helicaloptionandparameters
willbeapplied.
Production Applications: CreoNCSequences, Operations andWorkCenters 1713ElementID DataType Description
•PRO_B_FALSE—Specifies
thathelicaloptionand
parameters willnotbeapplied.
PRO_E_MFG_START_HEIGHT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofstartheightsurface.
PRO_E_MFG_HEIGHT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
multipleselections ofheight
surfaces.
PRO_E_MFG_OFFSET Compound Optionalelement.Specifiesthe
offsetcompound definition.
PRO_E_MFG_OFFSET_CUT PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
offsetcut.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE—T ooloffset
willbeapplied.
•PRO_B_FALSE—T ooloffset
willnotbeapplied.
PRO_E_MFG_MAT_TO_RMV PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
materialside.Thevaluesforthis
elementaredefinedbythe
enumerated value
ProMaterialRmvSide inthe
headerfileProMfgOptions.h.
Thevalidvaluesforthiselement
are:
•PRO_MAT_RMV_LEFTxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmaterialside.Thevaluesforthis
elementaredefinedbythe
enumerated value
ProMaterialRmvSide inthe
headerfileProMfgOptions.h.
Thevalidvaluesforthiselement
are:
•PRO_MAT_RMV_LEFT
—Specifies acutonleftfrom
thecurve.
•PRO_MAT_RMV_RIGHT
—Specifies acutonrightfrom
thecurve.
PRO_E_MFG_DRV_SRF_DIR PRO_VALUE_TYPE_INT Optionalelement.Specifiestheflip
drivesurfacedirection.Thevalid
valuesforthiselementare:
•PRO_B_FALSE—The default
directiononthedrivesurface
willbeused.
•PRO_B_TRUE—The opposite
directiononthedrivesurface
willbeused.
PRO_E_CHECK_SURF_COLL Compound Specifiesthechecksurfaces
compound definition. Theelement
treefortheCheckingSurfacesis
definedintheheaderfile
ProMfgElemCheckSurf.h.
Formoreinformation, refertothe
sectionCheckingSurfacesonpage
1658formoreinformation onthe
elementtree.
PRO_E_MFG_AXIS_DEF_COMP Compound Optionalelement.Specifiesthe
compound elementfortheaxis
definition.
1714 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_TRAJ_CORNER_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_AXIS_DEF_COMP Compound Optionalelement.Specifiesthe
compound elementfortheaxis
definition.
1714 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_TRAJ_CORNER_
CONDCompound Optionalelement.Specifiesthe
compound elementforthecorner
condition.
PRO_E_MFG_TRAJ_CORNER_
DFLT_TYPEPRO_VALUE_TYPE_INT Specifiesthedefaultcornertype.
Thevalidvaluesforthiselement
aredefinedintheenumerated type
ProTmTrajCornerType and
areasfollows:
•PRO_TM_TRAJ_CORNER_
TYPE_SHARP
•PRO_TM_TRAJ_CORNER_
TYPE_FILLET
•PRO_TM_TRAJ_CORNER_
TYPE_CHAMFER
•PRO_TM_TRAJ_CORNER_
TYPE_LOOP
•PRO_TM_TRAJ_CORNER_
TYPE_STRAIGHT
PRO_E_MFG_TRAJ_CORNER_
ARRArray Optionalelement.Specifiesan
arrayforthecornercondition.
PRO_E_MFG_TRAJ_CORNER Compound Optionalelement.Specifiesthe
cornerconditionitem.
PRO_E_MFG_TRAJ_CORNER_
TYPEPRO_VALUE_TYPE_INT Specifiesthedefaultcornertype.
Thevalidvaluesforthiselement
aredefinedintheenumerated type
ProTmTrajCornerType and
areasfollows:
•PRO_TM_TRAJ_CORNER_
TYPE_SHARPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPEPRO_VALUE_TYPE_INT Specifiesthedefaultcornertype.
Thevalidvaluesforthiselement
aredefinedintheenumerated type
ProTmTrajCornerType and
areasfollows:
•PRO_TM_TRAJ_CORNER_
TYPE_SHARP
•PRO_TM_TRAJ_CORNER_
TYPE_FILLET
•PRO_TM_TRAJ_CORNER_
TYPE_CHAMFER
•PRO_TM_TRAJ_CORNER_
TYPE_LOOP
•PRO_TM_TRAJ_CORNER_
TYPE_STRAIGHT
PRO_E_MFG_TRAJ_CORNER_
PREV_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
previousIdforthecorner.
Production Applications: CreoNCSequences, Operations andWorkCenters 1715ElementID DataType Description
PRO_E_MFG_TRAJ_CORNER_
NEXT_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
nextIdforthecorner.
PRO_E_MFG_TRAJ_CORNER_
VALPRO_VALUE_TYPE_DOUBLE Specifiesthefilletradiusorthe
chamferdimension. Thevalid
rangeforthiselementisfrom0to
MAX_DIM_VALUE.
Note
Thiselementismandatory if
thecornertypeissettoPRO_
TM_TRAJ_CORNER_TYPE_
FILLETorPRO_TM_TRAJ_
CORNER_TYPE_CHAMFER.
1716 Creo®Parametric TOOLKIT User’sGuideElementTreeforPRO_E_MFG_AXIS_DEF_COMPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Thiselementismandatory if
thecornertypeissettoPRO_
TM_TRAJ_CORNER_TYPE_
FILLETorPRO_TM_TRAJ_
CORNER_TYPE_CHAMFER.
1716 Creo®Parametric TOOLKIT User’sGuideElementTreeforPRO_E_MFG_AXIS_DEF_COMP
TheelementtreeforPRO_E_MFG_AXIS_DEF_COMP isasshowninthefigure
below:
ElementtreeforPRO_E_MFG_AXIS_DEF_COMP element
Production Applications: CreoNCSequences, Operations andWorkCenters 1717ThefollowingtableliststhecontentsofPRO_E_MFG_AXIS_DEF_COMP
element.
ElementID DataType Description
PRO_E_MFG_AXIS_DEF_COMP Compound Optionalelement.Specifiesthe
compound elementfortheaxis
definition.
PRO_E_MFG_AXIS_DEF_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoftheaxisdefinition. The
validvaluesforthiselementare
definedintheenumerated type
ProAxisDefType andareas
follows:
•PRO_AXIS_DEF_TYPE_
UNDEF
•PRO_AXIS_DEF_BY
_PIVOT_REF
•PRO_AXIS_DEF_BY
_LOCATIONS
•PRO_AXIS_DEF_BY
_TWO_CONTOURS
•PRO_AXIS_DEF_BY_
NORM_SURF
PRO_E_MFG_AXIS_DEF_
PIVOT_REFPRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollows:
•PRO_AXIS_DEF_TYPE_
UNDEF
•PRO_AXIS_DEF_BY
_PIVOT_REF
•PRO_AXIS_DEF_BY
_LOCATIONS
•PRO_AXIS_DEF_BY
_TWO_CONTOURS
•PRO_AXIS_DEF_BY_
NORM_SURF
PRO_E_MFG_AXIS_DEF_
PIVOT_REFPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofthesingle
reference. Youcanselecteithera
pointoranaxis.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_
PIVOT_REF. Thiselementis
ignoredinallothercases.
PRO_E_MFG_AXIS_DEF_
NORM_SRF_COMPCompound Specifiesthenormalsurface
1718 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
compound element.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_
NORM_SURF. Thiselementis
ignoredinallothercases.
PRO_E_MFG_AXIS_DEF_
NORM_SRFPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofmultiple
references. Youcanselectsurface,
quiltorfeature.
Note
Thequiltorfeaturemust
representaMillsurface,if
selected.
Thiselementismandatory ,
onlyiftheelement PRO_E_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONSpecifiestheselectionofmultiple
references. Youcanselectsurface,
quiltorfeature.
Note
Thequiltorfeaturemust
representaMillsurface,if
selected.
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_
NORM_SURF. Thiselementis
ignoredinallothercases.
PRO_E_MFG_AXDEF_NORM_
SURF_DIRPRO_VALUE_TYPE_INT Specifiesthenormalsurface
direction.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE—Specifies that
thedirectionoppositetothe
normaltothesurfaceis
selectedfortheelement PRO_
E_MFG_AXIS_
DEF_NORM_SRF.
•PRO_B_FALSE—Specifies
thatsamedirectionasthe
normaltothesurfaceis
selectedfortheelement PRO_
E_MFG_AXIS_
Production Applications: CreoNCSequences, Operations andWorkCenters 1719ElementID DataType Description
DEF_NORM_SRF.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_
NORM_SURF. Thiselementis
ignoredinallothercases.
PRO_E_MFG_AXIS_DEF_
LOCATION_ARRArray Specifiesanarrayoflocations.
Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_
NORM_SURF. Thiselementis
ignoredinallothercases.
PRO_E_MFG_AXIS_DEF_
LOCATION_ARRArray Specifiesanarrayoflocations.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_LOCATIONS. This
elementisignoredinallother
cases.
PRO_E_MFG_AXIS_DEF_
LOCATIONCompound Mandatory element.Specifiesthe
compound elementforthelocation
axisdefinition.
PRO_E_MFG_AXIS_DEF_
ORIGIN_REFPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofthesingle
reference. Youcaneitherselecta
pointonacurveoranedge.
PRO_E_MFG_AXIS_DEF_
ORIENT_COMPCompound Mandatory element.Specifiesthe
orientation compound element.
PRO_E_MFG_AXIS_DEF_
ORIENT_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthesinglereference
selection.Youcanselecteithera
pointoranaxis.
Note
Thiselementismandatory ,if
theelements PRO_E_MFG_
AXES_DEF_ANGLE_X and
PRO_E_MFG_AXES_DEF_
ANGLE_Y arenotdefined.
PRO_E_MFG_AXES_DEF_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselection.Youcanselecteithera
pointoranaxis.
Note
Thiselementismandatory ,if
theelements PRO_E_MFG_
AXES_DEF_ANGLE_X and
PRO_E_MFG_AXES_DEF_
ANGLE_Y arenotdefined.
PRO_E_MFG_AXES_DEF_
ANGLE_XPRO_VALUE_TYPE_DOUBLE Specifiestheleadangle.Thevalid
rangeforthiselementisfrom—90
1720 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
to+90.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_ORIENT_REF
isnotdefined.
PRO_E_MFG_AXES_DEF_
ANGLE_YPRO_VALUE_TYPE_DOUBLE Specifiesthetiltangle.Thevalid
rangeforthiselementisfrom—90
to+90.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_ORIENT_REF
isnotdefined.
PRO_E_MFG_AXIS_DEF_LOC_
FLIP_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
flipdirectionatalocation.The
validvaluesforthiselementare:
•PRO_B_TRUE—Specifies that
thedirectionwillbereversed.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
PRO_E_MFG_AXIS_DEF_LOC_
ALIGN_ZPRO_VALUE_TYPE_INT Mandatory element.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_B_TRUE—Specifies that
thedirectionwillbereversed.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
PRO_E_MFG_AXIS_DEF_LOC_
ALIGN_ZPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
alignment ofthetoolaxiswiththe
Zaxisofthestepcoordinate
system.Specifythevalue PRO_B_
TRUEtothiselement.
PRO_E_MFG_AXIS_DEF_
CURVE_COMPCompound Specifiesthecompound element
forthepivotcurve.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_TYPE issetto
thevalue PRO_AXIS_DEF_
BY_TWO_CONTOURS. This
elementisignoredinallother
cases.
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Mandatory element.Specifiesa
generalcompound elementfor
chaincollection.
PRO_E_MFG_AXIS_DEF_ Array Optionalelement.Specifiesthe
Production Applications: CreoNCSequences, Operations andWorkCenters 1721ElementID DataType Description
SYNC_ARR synchronization array.
PRO_E_MFG_AXIS_DEF_
SYNC_COMPCompound Optionalelement.Specifiesthe
synchronization compound
element.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_1PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSYNC_ARR synchronization array.
PRO_E_MFG_AXIS_DEF_
SYNC_COMPCompound Optionalelement.Specifiesthe
synchronization compound
element.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_1PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
singlereferenceselection.Selecta
pointonthetrajectorycurve.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_2PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
singlereferenceselection.Selecta
pointonthepivotcurve.
PRO_E_MFG_AXIS_DEF_
SYNC_FLIP_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
flipdirection.The validvaluesfor
thiselementare:
•PRO_B_TRUE—Specifies that
thetoolmotionisflippedinthe
reversedirection.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
PRO_E_MFG_AXIS_DEF_
FLIP_OPTPRO_VALUE_TYPE_INT Specifiestheflipdirection.The
validvaluesforthiselementare:
•PRO_B_TRUE—Specifies that
thedirectionwillbereversed.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
ToolMotion—SurfaceTrajectory
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_B_TRUE—Specifies that
thedirectionwillbereversed.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
ToolMotion—SurfaceTrajectory
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnSrfTraj.h, andisshowninthefollowingfigure.
1722 Creo®Parametric TOOLKIT User’sGuideElementtreeforPRO_E_TOOL_MTNelement
Production Applications: CreoNCSequences, Operations andWorkCenters 1723ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_SURF_TRAJECTORY.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parametersxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxformoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_TRAJ_SRFS Compound Specifiesthedrivesurfaces
compound definition.
PRO_E_STD_SURF_
COLLECTION_APPLSurface Collection Mandatory element.Specifiesthe
drivesurfacescollection.
PRO_E_MFG_CUT_START_
PNT_REFPRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofadatumpointora
pointonthebottomedgesofthe
machining surfaces.Itallowsthe
machining tostartatthelocation
whichisnearesttotheselected
point.
Note
Thiselementisapplicable
onlywhenthemachining
surfacesformaclosedloop.
PRO_E_MFG_HELICAL_CUT_
OPTPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
helicalcutoption.Thevalidvalues
forthiselementare:
•PRO_B_TRUE—Specifies that
helicaloptionandparameters
willbeapplied.
•PRO_B_FALSE—Specifies
thathelicaloptionandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhelicalcutoption.Thevalidvalues
forthiselementare:
•PRO_B_TRUE—Specifies that
helicaloptionandparameters
willbeapplied.
•PRO_B_FALSE—Specifies
thathelicaloptionand
parameters willnotbeapplied.
PRO_E_MFG_START_HEIGHT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofstartheightsurface.
PRO_E_MFG_HEIGHT PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
multipleselections ofheight
surfaces.
PRO_E_MFG_OFFSET Compound Optionalelement.Specifiesthe
offsetcompound definition.
PRO_E_MFG_OFFSET_CUT PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
1724 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
offsetcut.Thevalidvaluesforthis
elementare:
•PRO_B_TRUE—T ooloffset
willbeapplied.
•PRO_B_FALSE—T ooloffset
willnotbeapplied.
PRO_E_MFG_MAT_TO_RMV PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
materialside.Thevalidvaluesfor
thiselementare:
•PRO_MFG_DIR_SAME—
Defaultsidewillbeused.
•PRO_MFG_DIR_
OPPOSITE—The defaultside
willbeflipped.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmaterialside.Thevalidvaluesfor
thiselementare:
•PRO_MFG_DIR_SAME—
Defaultsidewillbeused.
•PRO_MFG_DIR_
OPPOSITE—The defaultside
willbeflipped.
PRO_E_MFG_DRV_SRF_DIR PRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
flipdriveSurfacedirection.The
validvaluesforthiselementare:
•PRO_B_FALSE—The default
directiononthedrivesurface
willbeused.
•PRO_B_TRUE—The opposite
directiononthedrivesurface
willbeused.
PRO_E_CHECK_SURF_COLL Compound Optionalelement.Specifiesthe
checksurfacescompound
definition. Theelementtreeforthe
CheckingSurfacesisdefinedin
theheaderfile
ProMfgElemCheckSurf.h.
Formoreinformation, refertothe
sectionCheckingSurfacesonpage
1658formoreinformation onthe
elementtree.
PRO_E_MFG_AXIS_DEF_COMP Compound Optionalelement.Specifiesthe
compound elementfortheaxis
definition.
PRO_E_MFG_AXIS_DEF_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeoftheaxisdefinition. The
validvaluesforthiselementare
definedintheenumerated type
ProAxisDefType andareas
follows:
•PRO_AXIS_DEF_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeoftheaxisdefinition. The
validvaluesforthiselementare
definedintheenumerated type
ProAxisDefType andareas
follows:
•PRO_AXIS_DEF_TYPE_
UNDEF
•PRO_AXIS_DEF_BY_
PIVOT_REF
•PRO_AXIS_DEF_BY_
LOCATIONS
•PRO_AXIS_DEF_BY_TWO_
CONTOURS
•PRO_AXIS_DEF_BY_
Production Applications: CreoNCSequences, Operations andWorkCenters 1725ElementID DataType Description
NORM_SURF
PRO_E_MFG_AXIS_DEF_
PIVOT_REFPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofthe
singlereference. Youcanselect
eitherapointoranaxis.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_PIVOT_REF. This
elementisignoredinallother
cases.
PRO_E_MFG_AXIS_DEF_
NORM_SRFCompound Specifiesthenormalsurface
compound element.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_
NORM_SURF. Thiselementis
ignoredinallothercases.
PRO_E_MFG_AXIS_DEF_
LOCATION_ARRArray Specifiesanarrayoflocations.
Note
Thiselementismandatory ,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_
NORM_SURF. Thiselementis
ignoredinallothercases.
PRO_E_MFG_AXIS_DEF_
LOCATION_ARRArray Specifiesanarrayoflocations.
Note
Thiselementismandatory ,
onlyiftheelement PRO_E_
MFG_AXIS_DEF_TYPE is
settothevalue PRO_AXIS_
DEF_BY_LOCATIONS. This
elementisignoredinallother
cases.
PRO_E_MFG_AXIS_DEF_
LOCATIONCompound Mandatory element.Specifiesthe
compound elementforthelocation
axisdefinition.
PRO_E_MFG_AXIS_DEF_
ORIGIN_REFPRO_VALUE_TYPE_
SELECTIONSpecifiestheselectionofthe
singlereference. Youcaneither
selectapointonacurveoran
edge.
PRO_E_MFG_AXIS_DEF_
ORIENT_COMPCompound Mandatory element.Specifiesthe
orientation compound element.
PRO_E_MFG_AXIS_DEF_
ORIENT_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthesinglereference
selection.Youcanselecteithera
1726 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
pointoranaxis.
Note
Thiselementismandatory ,if
theelements PRO_E_MFG_
AXES_DEF_ANGLE_X and
PRO_E_MFG_AXES_DEF_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1726 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
pointoranaxis.
Note
Thiselementismandatory ,if
theelements PRO_E_MFG_
AXES_DEF_ANGLE_X and
PRO_E_MFG_AXES_DEF_
ANGLE_Y arenotdefined.
PRO_E_MFG_AXES_DEF_
ANGLE_XPRO_VALUE_TYPE_DOUBLE Specifiestheleadangle.Thevalid
rangeforthiselementisfrom—
90to+90.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_ORIENT_REF
isnotdefined.
PRO_E_MFG_AXES_DEF_
ANGLE_YPRO_VALUE_TYPE_DOUBLE Specifiesthetiltangle.Thevalid
rangeforthiselementisfrom—
90to+90.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_ORIENT_REF
isnotdefined.
PRO_E_MFG_AXIS_DEF_LOC_
FLIP_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
flipdirectionatalocation.The
validvaluesforthiselementare:
•PRO_B_TRUE—Specifies that
thedirectionwillbereversed.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
PRO_E_MFG_AXIS_DEF_
CURVE_COMPCompound Specifiesthecompound element
forthepivotcurve.
Note
Thiselementismandatory ,ifxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
PRO_E_MFG_AXIS_DEF_
CURVE_COMPCompound Specifiesthecompound element
forthepivotcurve.
Note
Thiselementismandatory ,if
theelement PRO_E_MFG_
AXIS_DEF_TYPE issetto
thevalue PRO_AXIS_DEF_
BY_TWO_CONTOURS. This
elementisignoredinallother
cases.
Production Applications: CreoNCSequences, Operations andWorkCenters 1727ElementID DataType Description
PRO_E_STD_CURVE_
COLLECTION_APPLChain Collection Mandatory element.Specifiesa
generalcompound elementfor
chaincollection.
PRO_E_MFG_AXIS_DEF_
SYNC_ARRArray Optionalelement.Specifiesthe
synchronization array.
PRO_E_MFG_AXIS_DEF_
SYNC_COMPCompound Optionalelement.Specifiesthe
synchronization compound
element.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_1PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
singlereferenceselection.Selecta
pointonthetrajectorycurve.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_2PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
singlereferenceselection.Selecta
pointonthepivotcurve.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsinglereferenceselection.Selecta
pointonthetrajectorycurve.
PRO_E_MFG_AXIS_DEF_
SYNC_PNT_2PRO_VALUE_TYPE_
SELECTIONMandatory element.Specifiesthe
singlereferenceselection.Selecta
pointonthepivotcurve.
PRO_E_MFG_AXIS_DEF_
FLIP_OPTPRO_VALUE_TYPE_INT Specifiestheflipdirection.The
validvaluesforthiselementare:
•PRO_B_TRUE—Specifies that
thedirectionwillbereversed.
•PRO_B_FALSE—Specifies
thatthedirectionwillremain
thesame.
PRO_E_MFG_TRAJ_CORNER_
CONDCompound Optionalelement.Specifiesthe
compound elementforthecorner
condition.
PRO_E_MFG_TRAJ_CORNER_
DFLT_TYPEPRO_VALUE_TYPE_INT Specifiesthedefaultcornertype.
Thevalidvaluesforthiselement
aredefinedintheenumerated type
ProTmTrajCornerType and
areasfollows:
•PRO_TM_TRAJ_CORNER_
TYPE_SHARP
•PRO_TM_TRAJ_CORNER_
TYPE_FILLET
•PRO_TM_TRAJ_CORNER_
TYPE_CHAMFER
•PRO_TM_TRAJ_CORNER_
TYPE_LOOP
•PRO_TM_TRAJ_CORNER_
TYPE_STRAIGHT
PRO_E_MFG_TRAJ_CORNER_
ARRArray Optionalelement.Specifiesan
arrayforthecornercondition.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPE_FILLET
•PRO_TM_TRAJ_CORNER_
TYPE_CHAMFER
•PRO_TM_TRAJ_CORNER_
TYPE_LOOP
•PRO_TM_TRAJ_CORNER_
TYPE_STRAIGHT
PRO_E_MFG_TRAJ_CORNER_
ARRArray Optionalelement.Specifiesan
arrayforthecornercondition.
PRO_E_MFG_TRAJ_CORNER Compound Optionalelement.Specifiesthe
cornerconditionitem.
PRO_E_MFG_TRAJ_CORNER_
TYPEPRO_VALUE_TYPE_INT Specifiesthedefaultcornertype.
Thevalidvaluesforthiselement
aredefinedintheenumerated type
ProTmTrajCornerType and
areasfollows:
•PRO_TM_TRAJ_CORNER_
TYPE_SHARP
1728 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_TM_TRAJ_CORNER_
TYPE_FILLET
•PRO_TM_TRAJ_CORNER_
TYPE_CHAMFER
•PRO_TM_TRAJ_CORNER_
TYPE_LOOP
•PRO_TM_TRAJ_CORNER_
TYPE_STRAIGHT
PRO_E_MFG_TRAJ_CORNER_
PREV_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
previousIdforthecorner.
PRO_E_MFG_TRAJ_CORNER_
NEXT_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
nextIdforthecorner.
PRO_E_MFG_TRAJ_CORNER_
VALPRO_VALUE_TYPE_DOUBLE Specifiesthefilletradiusorthe
chamferdimension. ThevalidxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNEXT_IDPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
nextIdforthecorner.
PRO_E_MFG_TRAJ_CORNER_
VALPRO_VALUE_TYPE_DOUBLE Specifiesthefilletradiusorthe
chamferdimension. Thevalid
rangeforthiselementisfrom0to
MAX_DIM_VALUE.
Note
Thiselementismandatory if
thecornertypeissettoPRO_
TM_TRAJ_CORNER_TYPE_
FILLETorPRO_TM_
TRAJ_CORNER_TYPE_
CHAMFER.
ToolMotion—RampApproach
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnRampAppr.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1729ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_RAMP_APPROACH.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_RAMP_APPROACH.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.
Plungefeedspecifiestherate
atwhichthetoolapproaches
andplungesintothe
workpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
1730 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Elementsthatdefine
therampexitmotionare:
•EXIT_DIST
•EXIT_ANGLE
•RAMP_ANGLExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Elementsthatdefine
therampexitmotionare:
•EXIT_DIST
•EXIT_ANGLE
•RAMP_ANGLE
SeetheCreoNChelpformore
information onmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionfortherampapproach
typeoftoolexit.Thedirectionis
definedbytheenumerated data
typeProTmSideDir in
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
ToolMotion—RampExit
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnRampExit.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1731ElementtreeforPRO_E_TOOL_MTNelementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMfgElemToolMtnRampExit.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1731ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_RAMP_EXIT.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthetoolmovesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
1732 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Elementsthatdefine
therampexitmotionare:
•EXIT_ANGLE
•TANGENT_LEAD_STEP
•NORMAL_LEAD_STEP
•LEAD_RADIUS
SeetheCreoNChelpformore
information onmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_APPR_EXIT_DIR PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionfortherampapproach
typeoftoolexit.Thedirectionis
definedbytheenumerated data
typeProTmSideDirin
ProMfgOptions.h. Thevalidxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdirectionfortherampapproach
typeoftoolexit.Thedirectionis
definedbytheenumerated data
typeProTmSideDirin
ProMfgOptions.h. Thevalid
valuesforthiselementare:
•PRO_TM_DIR_RIGHT_
SIDE
•PRO_TM_DIR_LEFT_SIDE
ToolMotion—Connect
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnConnect.h, andisshowninthefollowingfigure.
Production Applications: CreoNCSequences, Operations andWorkCenters 1733ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontypeusedfortheCreo
NCsequence.Thevalidvaluefor
thiselementisPRO_TM_TYPE_
CONNECT.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_RETRACT—
Specifiesaretractfeedtype.
Retractfeedspecifiestherate
atwhichthetoolmovesaway
fromtheworkpiece.
•PRO_TM_FEED_
APPROACH—Specifies an
approachfeedtype.Approach
feedspecifiestherateatwhich
thetoolapproaches the
workpiece.
1734 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
•PRO_TM_FEED_EXIT—
Specifiesanexitfeedtype.
Exitfeedspecifiestherateat
whichthetoolleavesthe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheaderxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_AXIS_
MOVESPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
axismoveattributes.
ToolMotion—ProfileMillCut
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayisdocumented intheheaderfile
ProMfgElemToolMtnProfileMillCut.h, andisshowninthefollowing
figure.
ElementtreeforPRO_E_TOOL_MTNelement
Production Applications: CreoNCSequences, Operations andWorkCenters 1735ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_PROFILE_MILL_CUT.
PRO_E_TOOL_MTN_PROFILE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_PROFILE_MILL_CUT.
PRO_E_TOOL_MTN_PROFILE_
TYPEPRO_VALUE_TYPE_INT Specifiesthetypeofthetool
motionprofile.Thevaluesforthis
elementaredefinedbyPro_
MillProfCutType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_MFG_CMP_APPROACH_
EXITCompound Optionalelement.Specifies
approachandexitcompound
definition. Formoreinformation,
refertothesectionApproach and
Exitonpage1660formore
information ontheelementtree.
1736 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_START_HEIGHT PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrefertothesectionApproach and
Exitonpage1660formore
information ontheelementtree.
1736 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MFG_START_HEIGHT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
startingheightandselectionofa
horizontal surface.
Note
Thiselementismandatory if
theelement PRO_E_TOOL_
MTN_PROFILE_TYPE isset
toPRO_E_MILL_CUT_
FROM_TO. Thiselementis
ignoredotherwise.
PRO_E_MFG_HEIGHT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
heightandenablessinglesurface
selection.
Note
Thiselementismandatory if
theelement PRO_E_TOOL_
MTN_PROFILE_TYPE isset
toPRO_E_MILL_CUT_
FROM_TO,PRO_E_MILL_
CUT_UPTO andPRO_E_
MILL_CUT_ONE_SLICE.
Thiselementisignored
otherwise.
ToolMotion—AutoCut
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnAutoCut.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnAutoCut.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
Production Applications: CreoNCSequences, Operations andWorkCenters 1737ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_AUTOMATIC_CUT.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
ToolMotion—CLCommand
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnClCmd.h, andisshowninthefollowingfigure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxToolMotion—CLCommand
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnClCmd.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
1738 Creo®Parametric TOOLKIT User’sGuideThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_CL_COMMAND.
PRO_E_TOOL_MTN_CL_CMD Compound Thiscompound elementdefines
elementsrelatedtoCLcommand.
PRO_E_TOOL_MTN_CL_
CMD_LOC_TYPEPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
CLcommand locationtypes.The
validvaluesforthiselementare:
•PRO_CL_CMD_LOC_TYPE_
SEL—Specifies thattheCL
command positionisontool
path.
Note
Thevaluefortheelement
PRO_E_TOOL_MTN_
CL_CMD_PARAM must
beassigned.
•PRO_CL_CMD_LOC_TYPE_
BEGIN—Specifies thattheCL
command positionisatthe
beginning oftoolpath.
•PRO_CL_CMD_LOC_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpath.
Note
Thevaluefortheelement
PRO_E_TOOL_MTN_
CL_CMD_PARAM must
beassigned.
•PRO_CL_CMD_LOC_TYPE_
BEGIN—Specifies thattheCL
command positionisatthe
beginning oftoolpath.
•PRO_CL_CMD_LOC_TYPE_
CURR—Specifies thattheCL
command positionisatthelast
pointofthepreviousmotion.
•PRO_CL_CMD_LOC_TYPE_
DTM_PNT—Specifies thatthe
CLcommand positionisatthe
projection ofgivenpointon
toolpath.
Note
Theelement NCL_CMD_
LOC_
TYPE_DTM_PNT must
bedefined.
•PRO_CL_CMD_LOC_TYPE_
ON_SURFACE— Specifies
thattheCLcommand positions
areatintersection sofgiven
Production Applications: CreoNCSequences, Operations andWorkCenters 1739ElementID DataType Description
surfaceandtoolpath.
Note
Theelement PRO_CL_
CMD_LOC_TYPE_ON_
SURFACE mustbe
defined
PRO_E_TOOL_MTN_CL_CMD_
STRPRO_VALUE_TYPE_WSTRING Mandatory element.Specifiesa
userspecifiedstring.
PRO_E_TOOL_MTN_CL_CMD_
PARAMPRO_VALUE_TYPE_DOUBLE SpecifiestherangefortheCL
command parameter.Thevalid
valuesforthiselementare0or1.
Note
Thiselementismandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxuserspecifiedstring.
PRO_E_TOOL_MTN_CL_CMD_
PARAMPRO_VALUE_TYPE_DOUBLE SpecifiestherangefortheCL
command parameter.Thevalid
valuesforthiselementare0or1.
Note
Thiselementismandatory
forPRO_CL_CMD_LOC_
TYPE_SEL locationtype.
PRO_E_TOOL_MTN_CL_CMD_
GEOM_REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthereferenceforadatum
pointorasurface.
Note
Thiselementismandatory
forNCL_CMD_LOC_TYPE_
DTM_PNT andPRO_CL_
CMD_LOC_TYPE_ON_
SURFACE locationtypes.
PRO_E_TOOL_MTN_CL_CMD_
SRF_OPTPRO_VALUE_TYPE_INT SpecifiestheCLcommand surface
options.Thevalidvaluesforthis
elementare:
•PRO_CL_COMMAND_ON_
FIRST_PASS—Specifies that
onlythefirstpassis
considered forsurface/tool
pathintersection .
•PRO_CL_COMMAND_ON_
LAST_PASS—Specifies that
onlythelastpassisconsidered
forsurface/tool path
intersection .
•PRO_CL_COMMAND_ON_
ALL_PASSES—Specifies that
allpassesareconsidered for
1740 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
surface/tool pathintersection .
Note
ThiselementismandatoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxALL_PASSES—Specifies that
allpassesareconsidered for
1740 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
surface/tool pathintersection .
Note
Thiselementismandatory
fortheelement NCL_CMD_
LOC_TYPE_ON_SURFACE.
PRO_E_TOOL_MTN_CL_CMD_
ON_EXIST_PNTPRO_VALUE_TYPE_INT Thevalidvaluesforthiselement
are:
•PRO_B_TRUE—It placesthe
CLcommand atthenearest
existingpointofthetoolpath;
•PRO_B_FALSE—Adds new
pointtothetoolpath.
Note
Thiselementismandatory
forPRO_CL_CMD_LOC_
TYPE_DTM_PNT.
PRO_E_TOOL_MTN_PARENT_
REF_IDPRO_VALUE_TYPE_INT Specifiesthetoolmotionidofthe
toolmotionreferredbythecl
command toolmotion.
Note
Thiselementismandatory
forPRO_CL_CMD_LOC_
TYPE_SEL.
ToolMotion—FollowCut
Thecompound element PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_
MTN_ARR arrayandisdocumented intheheaderfile
ProMfgElemToolMtnFollowCut.h. TheFollowCuttoolMotionfollows
thefollowingtypesoftoolmotionsinanarray:
•PRO_TM_TYPE_CURVE_TRAJECTORY
•PRO_TM_TYPE_AREA_TURNING
•PRO_TM_TYPE_GROOVE_TURNINGxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMfgElemToolMtnFollowCut.h. TheFollowCuttoolMotionfollows
thefollowingtypesoftoolmotionsinanarray:
•PRO_TM_TYPE_CURVE_TRAJECTORY
•PRO_TM_TYPE_AREA_TURNING
•PRO_TM_TYPE_GROOVE_TURNING
•PRO_TM_TYPE_PROF_TURNING
•PRO_TM_TYPE_SURF_TRAJECTORY
•PRO_TM_TYPE_EDGE_TRAJECTORY
Production Applications: CreoNCSequences, Operations andWorkCenters 1741ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_TRIM. Thevalueforthis
elementisdefinedby
ProTmType.
PRO_E_MFG_PARAM_ARR Array Specifiesanarrayof
manufacturing parameters. Seethe
CreoNChelpformore
information onmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthemanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_TRIM_
VAL_OPTPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
valueoptions.Thevalidvaluesfor
thiselementare:
•PRO_TM_TRIM_VAL_
PARAM—The inputvalueisa
ratioparameter.
•PRO_TM_TRIM_VAL_
1742 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
DIST—The inputvalueisa
distance.
PRO_E_TOOL_MTN_TRIM_
START_VALPRO_VALUE_TYPE_DOUBLE Mandatory element.Specifiesthe
startparameter ontoolpath.The
rangespecifiesbythiselementis
from[0.,1.].
PRO_E_TOOL_MTN_TRIM_
END_VALPRO_VALUE_TYPE_DOUBLE Mandatory element.Specifiesthe
endparameter ontoolpath.The
rangespecifiesbythiselementis
from[0.,1.].
Note
Thevaluefortheelement
PRO_E_TOOL_MTN_TRIM_
END_VAL mustbegreater
thanPRO_E_TOOL_MTN_
TRIM_START_VAL
PRO_E_TOOL_MTN_TRIM_
FLIP_DIRPRO_VALUE_TYPE_INT Mandatory element.Specifiesthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfrom[0.,1.].
Note
Thevaluefortheelement
PRO_E_TOOL_MTN_TRIM_
END_VAL mustbegreater
thanPRO_E_TOOL_MTN_
TRIM_START_VAL
PRO_E_TOOL_MTN_TRIM_
FLIP_DIRPRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
directionofthetoolmotion.The
validvaluesforthiselementare:
•PRO_B_TRUE—Specifies
reverseddirection.
•PRO_B_FALSE—Specifies
samedirection.
ToolMotion—Plunge
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfileProMfgElemToolMtnPlunge.h,
andisasshowninthefollowingfigure:
Production Applications: CreoNCSequences, Operations andWorkCenters 1743Thefollowingtabledescribestheelementsintheelementtreefortheapproach
alongtoolaxisfeature.
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Speciesthe
toolmotiontype.Thevalidvalue
forthiselementisTool Motion
—Plunge onpage 1743.
PRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_TOOL_MTN_FEED_
TYPEPRO_VALUE_TYPE_INT Optionalelement.Specifiesthe
typeoffeedforthetoolmotion
usingtheenumerated datatype
ProToolMtnFeedType. The
validvalueforthiselementare:
•PRO_TM_FEED_FREE—
Specifiesafreefeedtype.Free
feedspecifiestherateatwhich
thetoolmovesinthe
transverse motion,thatis,the
non-cutting motion.
•PRO_TM_FEED_CUT—
Specifiesacutfeedtype.Cut
feedspecifiestherateatwhich
thetoolmovesintothe
workpiece.
•PRO_TM_FEED_PLUNGE—
Specifiesaplungefeedtype.
Plungefeedspecifiestherate
1744 Creo®Parametric TOOLKIT User’sGuideatwhichthetoolapproaches
andplungesintothe
workpiece.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. Theelementtreefor
themanufacturing parameter is
definedintheheaderfile
ProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_OFFSET Compound Optionalelement.Thiscompound
elementspecifiestheoffsetvalue.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmoreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
PRO_E_TOOL_MTN_OFFSET Compound Optionalelement.Thiscompound
elementspecifiestheoffsetvalue.
PRO_E_TOOL_MTN_X_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongX-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Y_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongY-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE.
PRO_E_TOOL_MTN_Z_OFFSET PRO_VALUE_TYPE_DOUBLE Optionalelement.Specifiesthe
offsetalongZ-axis.Thiselement
canrangefromnegativeto
positivevalues.Thevalidrange
valuesforthiselementarefrom
-MAX_DIM_VALUE toMAX_
DIM_VALUE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
axisselection.
Note
BydefaultZ-axisoftheCreo
NCsequenceisusedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-MAX_DIM_VALUE toMAX_
DIM_VALUE
PRO_E_TOOL_MTN_AXIS_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
axisselection.
Note
BydefaultZ-axisoftheCreo
NCsequenceisusedto
definetheconstraint plane.
Production Applications: CreoNCSequences, Operations andWorkCenters 1745ToolMotion—ChamferMilling
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnChamferMill.h, andisshowninthefollowing
figure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TO OL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_CHAMFER_MILLING.
Thevalueforthiselementis
definedbyProTmType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheaderxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
1746 Creo®Parametric TOOLKIT User’sGuideToolMotion—CutlineMilling
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnCutlineMill.h, andisshowninthefollowing
figure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TO OL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_CUTLINE_MILLING.
Thevalueforthiselementis
definedbyProTmType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. ThexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedbyProTmType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
Production Applications: CreoNCSequences, Operations andWorkCenters 1747ToolMotion—FaceMilling
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnFaceMill.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TO OL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_FACE_MILLING. The
valueforthiselementisdefined
byProTmType.
PRO_E_MFG_PARAM_ARR Array Optionalelement.Specifiesanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_FACE_MILLING. The
valueforthiselementisdefined
byProTmType.
PRO_E_MFG_PARAM_ARR Array Optionalelement.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
Note
Thiselementisinherited
fromCreoNCSequenceif
notspecified.
PRO_E_MFG_CMP_APPROACH_
EXITCompound Optionalelement.Specifiesthe
approachandexitcompound
definition. Formoreinformation,
refertothesectionApproach and
Exitonpage1660.
1748 Creo®Parametric TOOLKIT User’sGuideToolMotion—GrooveMilling
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnGrooveMill.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnGrooveMill.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TO OL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_GROOVE_MILLING. The
valueforthiselementisdefined
byProTmType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
Production Applications: CreoNCSequences, Operations andWorkCenters 1749ToolMotion—RoundMilling
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARRxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonpage1648formore
information ontheelementtree.
Production Applications: CreoNCSequences, Operations andWorkCenters 1749ToolMotion—RoundMilling
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnRoundMill.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TO OL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_ROUND_MILLING. The
valueforthiselementisdefined
byProTmType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
1750 Creo®Parametric TOOLKIT User’sGuideToolMotion—ThreadMilling
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnThreadMill.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TO OL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
toolmotiontype.Thevalidvalue
forthiselementisPRO_TM_
TYPE_THREAD_MILLING. The
valueforthiselementisdefined
byProTmType.
PRO_E_MFG_PARAM_ARR Array Mandatory element.Specifiesan
arrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. Forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayofmanufacturing
parameters. SeetheCreoNChelp
formoreinformation on
manufacturing parameters. The
elementtreeforthemanufacturing
parameter isdefinedintheheader
fileProMfgElemParam.h. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648formore
information ontheelementtree.
Production Applications: CreoNCSequences, Operations andWorkCenters 1751ToolMotion—VolumeMillCut
Theelement PRO_E_TOOL_MTN isamemberofPRO_E_TOOL_MTN_ARR
arrayandisdocumented intheheaderfile
ProMfgElemToolMtnVolMillCut.h, andisshowninthefollowingfigure.
ElementtreeforPRO_E_TOOL_MTNelement
ThefollowingtableliststhecontentsofPRO_E_TOOL_MTN element.
ElementID DataType Description
PRO_E_TOOL_MTN_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifythe
toolmotiontypeasPRO_TM_
TYPE_VOLUME_MILLING. The
valueforthiselementisdefined
bytheenumerated
typeProTmType.
PRO_E_TOOL_MTN_PROFILE_
TYPEPRO_VALUE_TYPE_INT Specifiesthetoolmotionprofile
type.Theenumerated type
ProMillProfCutType definesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueforthiselementisdefined
bytheenumerated
typeProTmType.
PRO_E_TOOL_MTN_PROFILE_
TYPEPRO_VALUE_TYPE_INT Specifiesthetoolmotionprofile
type.Theenumerated type
ProMillProfCutType defines
thevalidvaluesforthiselement
1752 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
whichareasfollows:
•PRO_E_MILL_CUT_FULL_
DEPTH— Specifiesthatthe
entiredepthofthemillcutis
machined.
•PRO_E_MILL_CUT_FROM_
TO—Specifiesthatthe
machining depthislimitedby
thespecifiedstartandtheend
references.
•PRO_E_MILL_CUT_UPTO—
Specifiesthatthemachining
depthislimitedbythe
specifiedendreference.
•PRO_E_MILL_CUT_ONE_
SLICE— Specifiesthe
machining ofasingleslicecut.
PRO_E_MFG_PARAM_ARR Array Optionalelement.Definesanarray
ofmanufacturing parameters. For
moreinformation, refertothe
sectionManufacturing Parameters
onpage1648.Thiselementis
inheritedfromtheCreoNC
Sequence, ifnotspecified.
PRO_E_MFG_CMP_APPROACH_
EXITCompound Specifiestheapproachandexit
motions.Thisoptionalelementis
definedintheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonpage1648.Thiselementis
inheritedfromtheCreoNC
Sequence, ifnotspecified.
PRO_E_MFG_CMP_APPROACH_
EXITCompound Specifiestheapproachandexit
motions.Thisoptionalelementis
definedintheheaderfile
ProMfgElemApproachEx
it.h.Formoreinformation, refer
tothesectionApproach andExit
onpage1660.
PRO_E_MFG_START_HEIGHT PRO_VALUE_TYPE_
SELECTIONOptionalelement.Selectthe
horizontal surfacefromwhere
machining willbegin.
Note
Thiselementismandatory
onlyiftheelement PRO_E_
TOOL_MTN_PROFILE_
TYPEissettoPRO_E_
MILL_CUT_FROM_TO.
PRO_E_MFG_HEIGHT PRO_VALUE_TYPE_
SELECTIONSelectasinglesurfacewherethe
Production Applications: CreoNCSequences, Operations andWorkCenters 1753ElementID DataType Description
machining willbegin.
Note
Thiselementismandatory
onlyiftheelement PRO_E_
TOOL_MTN_PROFILE_
TYPEissettoPRO_E_
MILL_CUT_FROM_TO, or
PRO_E_MILL_CUT_UPTO,
orPRO_E_MILL_CUT_
ONE_SLICE.
PRO_E_VOL_MILL_REGION_
ARRArray Optionalelement.Specifiesan
arrayofregionspecifications.
DefinethiselementtooverwritexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMILL_CUT_FROM_TO, or
PRO_E_MILL_CUT_UPTO,
orPRO_E_MILL_CUT_
ONE_SLICE.
PRO_E_VOL_MILL_REGION_
ARRArray Optionalelement.Specifiesan
arrayofregionspecifications.
Definethiselementtooverwrite
thedefaultorderofmachining of
differentareas
PRO_E_VOL_MILL_REGION Compound Specifiesacompound elementthat
definesthevolumemillingregion.
PRO_E_VOL_MILL_REGION_
SKIP_OPTPRO_VALUE_TYPE_INT Specifiestheskippingoptionfor
theregion.Thevalidvaluesfor
thiselementare:
•PRO_B_TRUE—Specifies that
theregionwillbeskipped
whilemachining.
•PRO_B_FALSE—Specifies
thattheregionwillnotbe
skippedwhilemachining.
PRO_E_VOL_MILL_AP_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaverticaldatumaxis,
oradatumpoint.Thiselement
definesalocationfortheregionto
makeanapproachmove.
PRO_E_VOL_MILL_EX_REF PRO_VALUE_TYPE_
SELECTIONOptionalelement.Specifiesthe
selectionofaverticaldatumaxis,
oradatumpoint.Thiselement
definesalocationfortheregionto
makeanexitmove.
1754 Creo®Parametric TOOLKIT User’sGuide64xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSELECTIONOptionalelement.Specifiesthe
selectionofaverticaldatumaxis,
oradatumpoint.Thiselement
definesalocationfortheregionto
makeanexitmove.
1754 Creo®Parametric TOOLKIT User’sGuide64
Production Applications: Process
Planning
ProcessStepObjects............................................................................................1756
VisitingProcessSteps...........................................................................................1756
ProcessStepAccess.............................................................................................1756
CreatingProcessSteps.........................................................................................1757
ThischapterdescribeshowtousetheCreoParametric TOOLKITfunctionsfor
assemblyprocessoperations. Itassumesthatyouarefamiliarwiththe
functionality ofManufacturing ProcessPlanningforASSEMBLIES.
1755ProcessStepObjects
FunctionIntroduced:
•ProPro cstepInit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxassemblyprocessoperations. Itassumesthatyouarefamiliarwiththe
functionality ofManufacturing ProcessPlanningforASSEMBLIES.
1755ProcessStepObjects
FunctionIntroduced:
•ProPro cstepInit()
Processstepsarerepresented bytheobject ProProcstep, whichisaninstance
ofProModelitem. Theobject ProProcstep describesthecontentsand
ownership ofaassemblyprocessstep.
Thedeclaration isasfollows:
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProProcstep;
Tocreateanewprocessstephandle,usethefunction ProProcstepInit().
VisitingProcessSteps
FunctionIntroduced:
•ProPro cstepV isit()
Thefunction ProProcstepVisit() enablesyoutovisitalltheprocesssteps
inthespecifiedsolid.Foradetailedexplanation ofvisitingfunctions, seethe
sectionVisitFunctions onpage62intheFundamentals onpage22chapter.
ProcessStepAccess
Functions Introduced:
•ProPro cstepActiveGet()
•ProPro cstepActiveSet()
•ProPro cstepNumberGet()
Thesefunctionsaccesstheprocessstepobjects.
Thefunctions ProProcstepActiveGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProcessStepAccess
Functions Introduced:
•ProPro cstepActiveGet()
•ProPro cstepActiveSet()
•ProPro cstepNumberGet()
Thesefunctionsaccesstheprocessstepobjects.
Thefunctions ProProcstepActiveGet() and
ProProcstepActiveSet() enableyoutogetandsetthecurrentactive
processstep.
Thefunction ProProcstepNumberGet() retrievestheprocessstepnumber
forthespecifiedsolidandprocessstep.
1756 Creo®Parametric TOOLKIT User’sGuideCreatingProcessSteps
Tocreateanassemblyprocessstep,usethefunction ProFeatureCreate().
Aswithanyothertypeoffeature,youusetheelementtreetocreateaprocessstep
feature.
Thischapterdescribesthebasicprinciples ofprogrammatic processstepcreation.
ThechapterElementTrees:Principles ofFeatureCreationonpage749isa
necessarybackground forthistopic;therefore,youshouldreadthatchapterfirst.
Theelementtreeforaprocessstepfeatureisdocumented intheheaderfile
ProProcstep.h andhasafairlysimplestructure,asshowninthefollowing
figure.YoucanalsocreateacopyofthefeatureelementtreeofanexistingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheelementtreeforaprocessstepfeatureisdocumented intheheaderfile
ProProcstep.h andhasafairlysimplestructure,asshowninthefollowing
figure.Youcanalsocreateacopyofthefeatureelementtreeofanexisting
processstepfeaturebycallingthefunction
ProFeatureElemtreeExtract() withaninputfeatureoftype
ProProcstep.
Thefollowingfigureshowstheelementtreeofaprocessstepfeature.
ElementTreeofProcessStepFeature
Production Applications: ProcessPlanning 1757FeatureElements
Thefollowingtabledescribesthetreeelementsinmoredetail.
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT PRO_FEAT_PROCESS_STEP
PRO_E_PROCESS_STEP_TYPE PRO_VALUE_TYPE_INT SeeTypesofProcessSteponpage
1758
PRO_E_COMPONENTS PRO_VALUE_TYPE_
SELECTIONStepcomponents
PRO_E_DESCRIPTION PRO_VALUE_TYPE_WSTRING Stepdescription
PRO_E_POSITION PRO_VALUE_TYPE_
TRANSFORMPositiontransformation
PRO_E_GEN_STEP_TYPE PRO_VALUE_TYPE_WSTRING Generalsteptype
PRO_E_GEN_STEP_REFS PRO_VALUE_
TYPESELECTION_GeneralstepreferencesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_POSITION PRO_VALUE_TYPE_
TRANSFORMPositiontransformation
PRO_E_GEN_STEP_TYPE PRO_VALUE_TYPE_WSTRING Generalsteptype
PRO_E_GEN_STEP_REFS PRO_VALUE_
TYPESELECTION_Generalstepreferences
PRO_E_SIMPLFD_REP PRO_VALUE_TYPE_INT Simplified representation identifier
PRO_E_EXPLODE_STATE PRO_VALUE_TYPE_INT Explodestateidentifier
PRO_E_TIME_ESTIMATE PRO_VALUE_TYPE_DOUBLE Timeestimate(greaterthan0.0)
PRO_E_COST_ESTIMATE PRO_VALUE_TYPE_DOUBLE Costestimate(anyvalue)
TypesofProcessStep
Thetypesofprocessstepareasfollows:
•PRO_PROCSTEP_ASSEMBLE—Step toassemblecomponents
•PRO_PROCSTEP_DISASSEMBLE—Step todisassemble components
•PRO_PROCSTEP_REASSEMBLE—Step toreassemble components
•PRO_PROCSTEP_REPOSITION—Step toreposition components
•PRO_PROCSTEP_GENERAL—General step(defaultoruser-definedtypes)
OptionalElements
Thefollowingelementsinthetreeareoptionalforalltypesofprocessstep:
•PRO_E_DESCRIPTION
•PRO_E_SIMPLFD_REP
•PRO_E_EXPLODE_STATE
•PRO_E_TIME_ESTIMATE
•PRO_E_COST_ESTIMATExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOptionalElements
Thefollowingelementsinthetreeareoptionalforalltypesofprocessstep:
•PRO_E_DESCRIPTION
•PRO_E_SIMPLFD_REP
•PRO_E_EXPLODE_STATE
•PRO_E_TIME_ESTIMATE
•PRO_E_COST_ESTIMATE
Foradetailedexplanation ofexplodestatesandrelatedfunctions, seethesection
ExplodedAssemblies onpage1122intheAssembly: BasicAssembly Accesson
page1112chapter.
1758 Creo®Parametric TOOLKIT User’sGuideGeneralProcessSteps
Thefollowingtwoelementsareusedforgeneralprocesssteps(type PRO_
PROCSTEP_GENERAL) only:
•PRO_E_GEN_STEP_TYPE—Default types,aswellasuser-definedtypes
•PRO_E_GEN_STEP_REFS—The followingarevalidreferencetypes:
○PRO_PART
○PRO_FEATURE
○PRO_SURFACE
○PRO_EDGE
○PRO_CURVE
○PRO_AXIS
○PRO_CSYS
○PRO_POINT
RepositionProcessSteps
Theelement PRO_E_POSITION isusedforreposition processsteps.Itdefines
thetransformation oftherepositioned components.
Production Applications: ProcessPlanning 175965
Production Applications: NC
ProcessManagerxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthetransformation oftherepositioned components.
Production Applications: ProcessPlanning 175965
Production Applications: NC
ProcessManager
Overview..............................................................................................................1761
AccessingtheProcessManager.............................................................................1761
Manufacturing ProcessItems.................................................................................1763
Parameters...........................................................................................................1767
Manufacturing Features.........................................................................................1770
ImportandExportofProcessTableContents..........................................................1770
Notification............................................................................................................1771
1760 Creo®Parametric TOOLKIT User’sGuideOverviewxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNotification............................................................................................................1771
1760 Creo®Parametric TOOLKIT User’sGuideOverview
TheProcessManagerfunctionality isbasedontheProcessTable,whichlistsall
themanufacturing processobjects,suchasworkcells, operations, fixturesetups,
tooling,andNCsequences.
TheProcessTableletsyoucreatenewmanufacturing objectsandmodify
properties ofexistingones.YoucancreatenewHolemaking andsomemilling
stepsdirectlyintheProcessTable.Stepsofothertypes,thatis,NCSequences
createdoutsidetheProcessManager,arealsolistedintheProcessTable.Youcan
manipulate theNCSequences likeanyothersteps,forexample,reorderor
duplicatethem.However,customizations donetothetoolpathoutsidetheProcess
Tablewillbelostasaresultofmanipulation.
Youcanalsodefinemanufacturing templatesbasedonexistingMillingand
Holemaking steps,andusethesetemplatestocreatemanufacturing stepsina
differentmodel.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTablewillbelostasaresultofmanipulation.
Youcanalsodefinemanufacturing templatesbasedonexistingMillingand
Holemaking steps,andusethesetemplatestocreatemanufacturing stepsina
differentmodel.
Youcanaddmanufacturing templatesasannotations tothereferencepart.This
way,whenyoubringareferencepartintoamanufacturing model,theannotation
canbeautomatically extractedintothemanufacturing processtocreatethe
necessarysteps,completewithtooling,parameters, andgeometric references.
AccessingtheProcessManager
YoucanaccesstheProcessManagerinCreoParametric intheManufacturing
ModeviaCreoParametric TOOLKITasfollows:
•Whentheprocessmanagerdialogboxisnotactive.
•Whentheprocessmanagerdialogboxisactive.
AccessingtheProcessManagerwhentheDialog
BoxisnotActive
Youcanaccessandmodifythecontentsoftheprocessmanagerwithoutopening
theProcessManagerUserInterfaceorwhileeditingamanufacturing modelin
CreoParametric.
Functions Introduced:
•ProMfgPr octableEnable()
•ProMfgPr octableDisable()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheProcessManagerUserInterfaceorwhileeditingamanufacturing modelin
CreoParametric.
Functions Introduced:
•ProMfgPr octableEnable()
•ProMfgPr octableDisable()
Thefunction ProMfgProctableEnable() ensuresthattheprocessmanager
databaseispreparedforaccessormodification byCreoParametric TOOLKIT
functions. Theapplication mustcallthefunction
ProMfgProctableEnable() beforeusingtheprocessmanagerAPIs
discussedinthefollowingsections.
Production Applications: NCProcessManager 1761Thefunction ProMfgProctableDisable() enablesCreoParametric to
performcleanupofdatathatwasloadedwhilecallingthefunction
ProMfgProctableEnable().
AccessingtheProcessManagerUserInterface
YoucanaddnewitemstotheProcessManagerUserInterfaceusingaCreo
Parametric TOOLKITapplication. TheCreoParametric TOOLKITapplication
shouldregisterthenewuserinterfaceitemsinCreoParametric beforeyouopen
theProcessManagerdialogbox.Oncethedialogboxisopened,CreoParametric
automatically addstheregistered menubuttonsandmenustothedialogbox.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheProcessManagerdialogbox.Oncethedialogboxisopened,CreoParametric
automatically addstheregistered menubuttonsandmenustothedialogbox.
Functions Introduced:
•ProMfgpr octableMenuAdd()
•ProMfgpr octablePushbuttonAdd()
•ProMfgpr octableItemAccessFunction
•ProMfgpr octableItemActionFunction
•ProMfgpr octableSelecteditemsGet()
•ProMfgpr octableSelecteditemsSet()
•ProMfgpr octableDisplayUpdate()
Thefunction ProMfgproctableMenuAdd() addsanewmenuorsubmenuto
anexistingmenuintheprocessmanageruserinterface.
Thefunction ProMfgproctablePushbuttonAdd() addsanewbuttonat
theendoftheexistingmenuintheProcessManageruserinterface.Whenadding
anewmenubutton,youmustsupplytwocallbackfunctionswhosesignature
matches ProMfgproctableItemAccessFunction and
ProMfgproctableItemActionFunction respectively .
Thefunctionwhosesignaturematches
ProMfgproctableItemAccessFunction setstheaccessstateforthe
buttonintheprocessmanagerdialogbox.ThefunctionwhosesignatureissimilarxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionwhosesignaturematches
ProMfgproctableItemAccessFunction setstheaccessstateforthe
buttonintheprocessmanagerdialogbox.Thefunctionwhosesignatureissimilar
toProMfgproctableItemActionFunction providestheimplementation
forthenewmenubutton.
Usethefunctions ProMfgproctableSelecteditemsGet() and
ProMfgproctableSelecteditemsSet() inthecontextofmenubuttons
addedtotheProcessManager.Thesefunctionsprovideaccesstothesteps,
operations andworkcellsthatarecurrentlyselectedbytheuserintheProcess
Managerdialogbox.Thisinformation canguidetheapplication astowhichitems
itshouldmodify.Selecttheappropriate typeoftablefortheselecteditemtobe
abletodetermine thesubtypeoftheprocessitem.
ThesefunctionscanbeusedoutofcontextofthemenuadditionAPIsaswell.
1762 Creo®Parametric TOOLKIT User’sGuideThefunction ProMfgproctableDisplayUpdate() refreshestheProcess
Managerdialogbox.Itallowstheapplication toupdatethecontentsoftheprocess
tableaftersomechangeshavebeenmadeduringacustommenubuttonaction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxManagerdialogbox.Itallowstheapplication toupdatethecontentsoftheprocess
tableaftersomechangeshavebeenmadeduringacustommenubuttonaction.
Manufacturing ProcessItems
Thissectiongivesyoumoreinformation onthehandlesthatareprovidedto
enableaccesstoprocessitemdata.
Steps,Operations andWorkcells
AnNCsequenceisanassemblyfeaturethatrepresents asingletoolpath.NC
sequences listedintheProcessTablearecalledsteps.
AnoperationisaseriesofNCsequences performed inaparticularworkcelland
usingaparticularcoordinate systemforoutputofCutterLocationdata.
Aworkcellisamachinetooldefinitionandisstoredintheassembly.
Theobject ProMfgprocItem willbeusedforallfunctionsthatoperateon
steps,operations, andworkcells. Thisitemisaderivative ofProModelitem
andisdefinedas
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProMfgprocItem;
Forallthreeitemtypes,theProType fieldshouldbePRO_NC_PROCESS_
ITEM.
StepModels
TheStepModelobjectrepresents thedefaultproperties ofstepsintheprocessxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProType type;
int id;
ProMdl owner;
}ProMfgprocItem;
Forallthreeitemtypes,theProType fieldshouldbePRO_NC_PROCESS_
ITEM.
StepModels
TheStepModelobjectrepresents thedefaultproperties ofstepsintheprocess
managerandisaderivative oftheProModelitem andisdefinedastypedef
struct pro_model_item.
{
ProType type;
int id;
ProMdl owner;
}ProMfgprocItem;
Stepobjectshaveastep id,theMfgowner,andtheProType fieldasPRO_
NC_PROCESS_MODEL.
Production Applications: NCProcessManager 1763Determining theSubtypeofaProcessItem
FunctionIntroduced:
•ProMfgpr ocitemSubtypeGet()
Thefunction ProMfgprocitemSubtypeGet() returnsthesubtypeofa
manufacturing processitem.Itcouldbeoneofthefollowing:
•PRO_MFGPROCITEM_STEP—Specifies ifthesubtypeisastep.
•PRO_MFGPROCITEM_OPERATION—Specifies ifthesubtypeisan
operation.
•PRO_MFGPROCITEM_WORKCELL—Specifies ifthesubtypeisaworkcell.
AccessingDetailsofProcessItems
AlthoughaProMfgprocItem isnotafeature,itsharesmanyproperties withxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoperation.
•PRO_MFGPROCITEM_WORKCELL—Specifies ifthesubtypeisaworkcell.
AccessingDetailsofProcessItems
AlthoughaProMfgprocItem isnotafeature,itsharesmanyproperties with
CreoParametric TOOLKITfeatures.Infact,processitemsgenerallymapone-to-
onewithaspecifiedmanufacturing feature.Becauseofthis,manyoftheprocess
item’sproperties canbeaccessedviathecorresponding manufacturing feature
elementtree.Also,newitemsmaybecreatedbypopulating theelementtreefor
thenewstep,operationorworkcell.
VisitingSteps,Operations andWorkcells
Functions Introduced:
•ProMfgPr octableV isit()
•ProMfgpr ocitemV isitAction()
•ProMfgpr ocitemFilterAction()
Thefunction ProMfgProctableVisit() enablesyoutovisitthesteps,
workcells, andoperations inaprocesstable.AswithotherCreoParametric
TOOLKITvisitfunctions, specifythevisitactionandvisitfilterfunctions. For
moreinformation onVisitFunctions, refertothechapterFundamentals onpage
22.
CreatingSteps,Operations, andWorkcells
Functions Introduced:
•ProMfgpr ocitemCre ate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmoreinformation onVisitFunctions, refertothechapterFundamentals onpage
22.
CreatingSteps,Operations, andWorkcells
Functions Introduced:
•ProMfgpr ocitemCre ate()
•ProMfgpr ocitemFr omT emplateCr eate()
Usethefunction ProMfgprocitemCreate() tocreateanewstep,operation,
orworkcellintheprocesstable.Theinputargumentsofthisfunctionare:
1764 Creo®Parametric TOOLKIT User’sGuide•model—Specifies themanufacturing modelinwhichtocreatethenewitem.
•table_type—Specifies thetypeoftablewheretheitemwillreside.Thevalid
valuesare:
○PRO_MFGPROCTABLE_PROCESS—Specifies theprocesstable.
○PRO_MFGPROCTABLE_WORKCELLS—Specifies theworkcelltable.
•elem_tr ee—Specifies themanufacturing featureelementtreeusedto
enumerate theproperties ofthenewmanufacturing item.Tocreateastepyou
mustfilloneofthefollowingelementtrees:
○MillingandDrilling—The elementtreedocumented inheaderfile
ProNcseq.h.
○Fixture—The elementtreedocumented inheaderfileProFixture.h.
○Assembly setupstep—The elementtreedocumented inheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○MillingandDrilling—The elementtreedocumented inheaderfile
ProNcseq.h.
○Fixture—The elementtreedocumented inheaderfileProFixture.h.
○Assembly setupstep—The elementtreedocumented inheaderfile
ProFixture.h.
TocreateanOperation youmustfillouttheelementtreedocumented in
headerfileProMfgoper.h.
TocreateaWorkcellyoumustfilltheelementtreedocumented inheaderfile
ProWcell.h.
•predecessor—Specifies thesteporoperationimmediately beforethenew
manufacturing itemintheprocesstable.Whencreatingworkcells, thiscanbe
NULL.
Thefunction ProMfgprocitemCreate() returnsthenewmanufacturing
item.
Usethefunction ProMfgprocitemFromTemplateCreate() tocreatea
newmanufacturing steporworkcellfromapredefined template.Atemplateisan
XMLfilecontaining information necessarytocreatethemanufacturing stepor
workcell,suchas:
•Resources, thatis,workcells, tools,andfixtures
•Orderedoperations
•Orderedstepsandtheirreferenceinformation suchasmanufacturing templates
andmanufacturing criteria.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxworkcell,suchas:
•Resources, thatis,workcells, tools,andfixtures
•Orderedoperations
•Orderedstepsandtheirreferenceinformation suchasmanufacturing templates
andmanufacturing criteria.
•Retractplaneforasteporanoperation, asadistancecalculated fromthestep
coordinate system.
AccessingthePropertiesofManufacturing Process
Items
Thefunctionsdescribedbelowenableyoutoaccesstheproperties ofprocess
items.
Production Applications: NCProcessManager 1765Functions Introduced:
•ProMfgpr ocitemFeatur eGet()
•ProMfgpr ocitemElemtr eeGet()
•ProMfgpr ocitemElemtr eeFr ee()
•ProMfgpr ocitemAnnotationGet()
•ProMfgpr ocitemReorderlimitsGet()
•ProMfgpr ocitemNextitemGet()
•ProMfgpr ocitemPr eviousitemGet()
•ProMfgpr ocitemHolesetdepthGet()
•ProMfgpr ocitemHolesetdepthtypeGet()
•ProMfgpr ocitemHolesetdepthSet()
•ProMfgpr ocitemDefaultfixtur esetupstepGet()
Thefunction ProMfgprocitemFeatureGet() returnsthefeaturereferenced
bytheprocessitem.Iftheitemisrelatedtoanactualmanufacturing feature,somexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMfgpr ocitemDefaultfixtur esetupstepGet()
Thefunction ProMfgprocitemFeatureGet() returnsthefeaturereferenced
bytheprocessitem.Iftheitemisrelatedtoanactualmanufacturing feature,some
oftheaccessfunctionsthatfollowwillnotbesupported. Theproperties ofthe
itemcanbeobtainedbyreadingthefeature’sproperties andelementtree.
Thefunction ProMfgprocitemElemtreeGet() obtainstheelementtreefor
amanufacturing item.Thistreeshouldbefreedusing
ProMfgprocitemElemtreeFree().
Thefunction ProMfgprocitemAnnotationGet() returnstheannotation
elementthatcreatedtheprocessitem.
Thefunction ProMfgprocitemReorderlimitsGet() identifiesthelimits
wherethespecifiedprocessitemmaybemovedintheprocesstable.Thetoplimit
represents thefirstprocessitemafterwhichyoucaninsertthestep.Thelower
limit,ifany,represents thefirstprocessitemthatmustcomeafterthestepinthe
processsequence.
Thelimitsofreorderarebasedonstepdependencies andpriorityandprerequisite
rules.Theinputargument optionsspecifiesthecheckstodetermine thepositionofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprocesssequence.
Thelimitsofreorderarebasedonstepdependencies andpriorityandprerequisite
rules.Theinputargument optionsspecifiesthecheckstodetermine thepositionof
reordering theprocessitemelements.Thevalidvaluesare:
•PRO_MFGPROCREORDER_CHECK_PARENT_CHILD
•PRO_MFGPROCREORDER_CHECK_PREREQUISITES
•PRO_MFGPROCREORDER_CHECK_PRIORITIES
Thefunction ProMfgprocitemNextitemGet() returnstheprocessitem
followingthespecifieditemintheprocesstable.
Thefunction ProMfgprocitemPreviousitemGet() returnstheprocess
itempreceding thespecifiedprocessitemintheprocesstable.
1766 Creo®Parametric TOOLKIT User’sGuideThefunction ProMfgprocitemHolesetdepthtypeGet() returnsthetype
ofholesetandholesetendreferencecontainedinthemanufacturing processstep.
Theoutputargument end_typecanhavethefollowingvalues:
•PRO_MFGSTEP_HOLESETEND_REFERENCE—Specifies theendreference
surfacefortheholedepth.
•PRO_MFGSTEP_HOLESETEND_ALONG_AXIS—Specifies theendreference
byenteringadepthvaluealongtheholeaxis.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MFGSTEP_HOLESETEND_REFERENCE—Specifies theendreference
surfacefortheholedepth.
•PRO_MFGSTEP_HOLESETEND_ALONG_AXIS—Specifies theendreference
byenteringadepthvaluealongtheholeaxis.
Thefunction ProMfgprocitemHolesetdepthGet() returnstheprocess
itemholesetdepthforaholesetoftypeBLINDandendreferencetypeofALONG
AXIS.
Thefunction ProMfgprocitemHolesetdepthSet() setstheholesetdepth
forastep.Thisfunctionsupportsstepswithonlyoneholeset.Theholesettype
mustbeBLINDandtheendreferencetypewillbechangedtoALONG AXISafter
usingthisfunction.
Thefunction ProMfgprocitemDefaultfixturesetupstepGet()
returnsthefixturesetupdefinedforthespecifiedoperation.
ModifyingProcessItems
Functions Introduced:
•ProMfgpr ocitemRedefine()
•ProMfgpr ocitemDelete()
•ProMfgpr ocitemReorder()
Usethefunction ProMfgprocitemRedefine() toredefinethe
manufacturing itemcreatedusinganelementtree.
Thefunction ProMfgprocitemDelete() deletesthespecifiedstep,
operation, orworkcellfromthemanufacturing table.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmanufacturing itemcreatedusinganelementtree.
Thefunction ProMfgprocitemDelete() deletesthespecifiedstep,
operation, orworkcellfromthemanufacturing table.
Thefunction ProMfgprocitemReorder() reordersasteporoperation
withintheprocesstable.
Parameters
Severalcategories ofparameters areaccessible foritemsintheprocessmanager
table:
•Manufacturing parameters
•AEparameters
•Stepparameters
•Templateparameters
Production Applications: NCProcessManager 1767•Specialparameters
•GlobalParameters
Manufacturing Parameters
Youcanaccessthemanufacturing parameters byreadingorwritingthe
manufacturing featureorstepelementtree.
Annotation ElementParameters
Youcanaccesstheannotation elementparameters bygettingtheparent
Annotation ElementviaProMfgprocitemAnnotationGet() andreading
parameters fromthatobject.RefertothechapterParameters fordetailsonhowto
readparameters fromitemssuchasannotation elements.
StepParameters andRelations
StepParameters areparameters assignedtothestepobject.Youcandefinexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreadparameters fromitemssuchasannotation elements.
StepParameters andRelations
StepParameters areparameters assignedtothestepobject.Youcandefine
parameters andrelationstoaparticularstepintheprocesstable.
Youcanaccesstheseparameters byreadingthemdirectlyfromthestepobject
usingthestandardparameter functions.
RefertothechapterParameters fordetailsonhowtoreadparameters fromitems.
TemplateParameters
Templateparameters areinheritedfromthestep’sprocesstemplate.
FunctionIntroduced:
•ProMfgpr ocitemT emplateparamGet()
Thefunction ProMfgprocitemTemplateparamGet() obtainsatemplate
parameter valuefortheprocessitem.
SpecialParameters
Otherspecialparameters areproperties ofstepsandcanincludetheextractstatus,
machining time,thetemplatename,andsoon.Someoftheseproperties maybe
alsoaccessible viathestepelementtree.
Functions Introduced:
•ProMfgpr ocitemPr opertyGet()
•ProMfgpr ocitemPr opertySet()
1768 Creo®Parametric TOOLKIT User’sGuideThefunction ProMfgprocitemPropertyGet() returnsthevalueofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProMfgpr ocitemPr opertyGet()
•ProMfgpr ocitemPr opertySet()
1768 Creo®Parametric TOOLKIT User’sGuideThefunction ProMfgprocitemPropertyGet() returnsthevalueofthe
specialpropertyoftheprocessmanagersteporoperation. Thespecialproperty
canbeasfollows:
•PRO_MFGPROP_EXTRACT_STATUS—Specifies theextraction priorityof
thestep.
•PRO_MFGPROP_ACTUAL_MACHINING_TIME—Specifies themachining
timeofastep.
•PRO_MFGPROP_ACTUAL_MACHINING_LENGTH— Specifiesthe
machining distanceofastep.
•PRO_MFGPROP_TEMPLATE_NAME—Specifies thenameofthe
manufacturing templateused.
•PRO_MFGPROP_GROUP_LEVEL_1—Specifies amergegroupcreatedby
mergingseveralHolemaking stepstogether,tooptimizethetoolpath.
•PRO_MFGPROP_GROUP_LEVEL_2—Specifies amergegroupcreatedby
mergingPRO_MFGPROP_GROUP_LEVEL_1 typemergegroupstogether.
ProMfgprocitemPropertyGet()returns stringvaluesforPRO_
MFGPROP_GROUP_LEVEL_1 andPRO_MFGPROP_GROUP_LEVEL_2
depending onthelocationoftheprocessmanagerstepinthemergedgroup.ThexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMfgprocitemPropertyGet()returns stringvaluesforPRO_
MFGPROP_GROUP_LEVEL_1 andPRO_MFGPROP_GROUP_LEVEL_2
depending onthelocationoftheprocessmanagerstepinthemergedgroup.The
followingtablelistsallthepossiblevaluestakenbythespecialproperties.
StepLocation Valuereturnedfor Valuereturnedfor
Ifthestepisamergeleader,but
notamergemember.“*leader” Emptystring
Ifthestepisbothamergeleader
andmergemember.Nameoftheparentmergeleader“*leader”
Ifthestepismergemember,butnotamergeleader.
Case1:Itisatwolevelmerge.For
example,theparentitselfisa
mergemember.Nameofthetopmergeleader Nameoftheparentmergeleader
Case2:Itisaonelevelmerge NameoftheparentmergeleaderEmptystring
Ifthestepisneithermergeleader
noramergemember.Emptystring Emptystring
Thefunction ProMfgprocitemPropertySet() setsthevalueofthespecial
propertyoftheprocessmanagersteporoperation.
GlobalParameters andRelations
FunctionIntroduced:
•ProMfgPr octablemodelGet()
Thefunction ProMfgProctablemodelGet() obtainstheprocessmodelthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpropertyoftheprocessmanagersteporoperation.
GlobalParameters andRelations
FunctionIntroduced:
•ProMfgPr octablemodelGet()
Thefunction ProMfgProctablemodelGet() obtainstheprocessmodelthat
providesaccesstothemanufacturing globalparameters.
Production Applications: NCProcessManager 1769Youcanusethisfunctiontospecifyparameters andrelationstoallorselected
stepsintheprocesstable.Themodelitem handlereturnedbythisfunctioncan
beusedtoaccesstheGlobalparameters oftheprocesstable.
Manufacturing Features
Functions Introduced:
•ProMfgpr octableFeatur esCr eate()
•ProMfgpr octableFeatur esDelete()
Thefunction ProMfgproctableFeaturesCreate() createsfeaturesfor
itemsintheprocessmanufacturing table.
Thefunction ProMfgproctableFeaturesDelete() deletesallexisting
manufacturing featuresfromtheCreoParametric modelwhilekeepingeverything
intheprocessmanagerunchanged.
ImportandExportofProcessTable
Contents
Functions Introduced:
•ProMfgPr octableW rite()
•ProMfgPr octableSynchro nize()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintheprocessmanagerunchanged.
ImportandExportofProcessTable
Contents
Functions Introduced:
•ProMfgPr octableW rite()
•ProMfgPr octableSynchro nize()
Thefunction ProMfgProctableWrite() exportsthecontentsofthe
manufacturing processtabletoCSVformat.Theinputargumentsofthefunction
are:
•mfg—Specifies themanufacturing model.
•table_type—Specifies thetypeoftabletobegeneratedasoutput.Thevalid
valuesare:
○PRO_MFGPROCTABLE_PROCESS
○PRO_MFGPROCTABLE_WORKCELLS
•view_name—Specifies theviewnameinthesetupfile;passNULLtousethe
currentview.
•output_file—Specifies thefullpathandnameoftheoutputfile.
Thefunction ProMfgProctableSynchronize() synchronizes the
manufacturing tablewiththeinputCSVfile.
1770 Creo®Parametric TOOLKIT User’sGuideNotification
FunctionIntroduced:
•ProMfgpr octableExtractionPostAction
Thenotification ProMfgproctableExtractionPostAction identifies
whentheuserhasextractedtheprocesstableinordertoformmanufacturing
features.Itprovidesthepathtotheextraction logfile,whichcanbeexaminedbyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThenotification ProMfgproctableExtractionPostAction identifies
whentheuserhasextractedtheprocesstableinordertoformmanufacturing
features.Itprovidesthepathtotheextraction logfile,whichcanbeexaminedby
theapplication forfurtherinformation.
Example1:ToAddMenuButtontoThe
Manufacturing ProcessTable
ThisexampleenablesyoutoaddtheHighlightPrereqandtheUpdateSpeedand
Feedoptionsrespectively ,totheToolsmenuintheManufacturing ProcessTable.
/*===============================================================-
=====*\
FUNCTION :user_initialize()
PURPOSE :
\*===============================================================-
=====*/
int user_initialize(
int argc,
char *argv[],
char *version,
char *build,
wchar_t errbuf[80])
{
uiCmdCmdId cmd_id;
PTUtilInitCounters();
status =ProMfgproctablePushbuttonAdd ("Tools","Highlight
Prereq",
L"Highlight Prereq",
L"button_helptext",NULL,
PTMfgProctableItemActionPreReq,
"Callback onthe new submenu added in
existing menu");xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatus =ProMfgproctablePushbuttonAdd ("Tools","Highlight
Prereq",
L"Highlight Prereq",
L"button_helptext",NULL,
PTMfgProctableItemActionPreReq,
"Callback onthe new submenu added in
existing menu");
PT_TEST_LOG_SUCC("ProMfgproctablePushbuttonAdd");
status =ProMfgproctablePushbuttonAdd ("Tools","Update Feed &
Speed",
L"Update Feed &Speed",
L"button_helptext",NULL,
PTMfgProctableItemFeedSpeed,
"Callback onthe new submenu added in
Production Applications: NCProcessManager 1771existing menu");
PT_TEST_LOG_SUCC("ProMfgproctablePushbuttonAdd");
return (PRO_TK_NO_ERROR);
}
TheimageabovedisplaystheHighlightPrereqandUpdateFeed&Speedmenu
buttonsaddedtotheToolsmenuintheManufacturing ProcessTable.Whenyou
clicktheHighlightPrereqoptionthefunction
PTMfgProctableItemActionPreReq isinvoked.Thefollowingexample
dealswiththisfunctionindetail.
Example2:ToHighlightthePre-requisites forthe
SelectedStepinTheManufacturing ProcessTable
Thisexampleenablesyoutohighlightthepre-requisites fortheselectedstepinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdealswiththisfunctionindetail.
Example2:ToHighlightthePre-requisites forthe
SelectedStepinTheManufacturing ProcessTable
Thisexampleenablesyoutohighlightthepre-requisites fortheselectedstepin
theManufacturing ProcessTable.
/*===============================================================-
=====*\
FUNCTION :PTMfgProctableItemActionPreReq
PURPOSE :Execute Highlighting ofPre-Requisite steps
1772 Creo®Parametric TOOLKIT User’sGuide\*===============================================================-
=====*/
ProError PTMfgProctableItemActionPreReq (ProMfg mfg, char* button_
name,
ProAppData appdata)
{
ProElement elem_tree;
status =PTMfgProcitemElemtreeGet(&elem_tree);
PT_TEST_LOG_SUCC("PTMfgProcitemElemtreeGet");
if(status ==PRO_TK_NO_ERROR)
{
status =ProElemtreeWrite (elem_tree, PRO_ELEMTREE_XML,
L"selecteditem_prereq.inf");
PT_TEST_LOG_SUCC ("ProElemtreeWrite ");
if(status ==PRO_TK_NO_ERROR )
{
status =ProElemtreeElementVisit( elem_tree, (ProElempath
)NULL ,
(ProElemtreeVisitFilter) NULL,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxL"selecteditem_prereq.inf");
PT_TEST_LOG_SUCC ("ProElemtreeWrite ");
if(status ==PRO_TK_NO_ERROR )
{
status =ProElemtreeElementVisit( elem_tree, (ProElempath
)NULL ,
(ProElemtreeVisitFilter) NULL,
(ProElemtreeVisitAction)
PTMfgElemtreePreReqAction,
NULL );
PT_TEST_LOG_SUCC ("ProElemtreeElementVisit ");
}
}
return PRO_TK_NO_ERROR;
}
Production Applications: NCProcessManager 1773Example3:ToUpdateFeedandSpindleSpeed
WhenyouclicktheUpdateSpeedandFeedoptionsintheToolsmenuinthe
Manufacturing ProcessTable,thefunction
PTMfgProctableItemFeedSpeed isinvoked.Thissamplecodeenablesyou
tochangethecutfeedandthespindlespeedforthespecifiedtool.
/*===============================================================-
=====*\
FUNCTION :PTMfgProctableItemFeedSpeed()
PURPOSE :Execute Feed/Speed
\*===============================================================-
=====*/
ProError PTMfgProctableItemFeedSpeed (ProMfg mfg, char* button_
name
,ProAppData appdata)
{
ProAssembly r_solid_obj;
ProMdl mfg_mdl_under_test;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=====*/
ProError PTMfgProctableItemFeedSpeed (ProMfg mfg, char* button_
name
,ProAppData appdata)
{
ProAssembly r_solid_obj;
ProMdl mfg_mdl_under_test;
ProElempath epath;
ProElement params_element;
ProElempathItem p_items[3];
ProElemId elem_id;
ProValueDataType value_type =-1;
ProValue value =(ProValue)NULL;
ProValueData value_data;
1774 Creo®Parametric TOOLKIT User’sGuidestatus =ProMdlCurrentGet(&mfg_mdl_under_test);
PT_TEST_LOG_SUCC("ProMdlCurrentGet");
status =PTMfgProcitemElemtreeGet(&complete_tree);
PT_TEST_LOG_SUCC("PTMfgProcitemElemtreeGet");
if(status ==PRO_TK_NO_ERROR)
PTMfgProcitemToolNameGet(complete_tree);
if (status ==PRO_TK_NO_ERROR)
{
status =ProElempathAlloc(&epath);
PT_TEST_LOG_SUCC ("ProElempathAlloc ()");
p_items[0].type =PRO_ELEM_PATH_ITEM_TYPE_ID;
p_items[0].path_item.elem_id =PRO_E_MFG_PARAMS ;
status =ProElempathDataSet(epath, p_items, 1);
PT_TEST_LOG_SUCC ("ProElempathDataSet()");
status= ProElemtreeElementGet(complete_tree, epath,
&params_element);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatus =ProElempathDataSet(epath, p_items, 1);
PT_TEST_LOG_SUCC ("ProElempathDataSet()");
status= ProElemtreeElementGet(complete_tree, epath,
&params_element);
PT_TEST_LOG_SUCC ("ProElemtreeElementGet()");
if(status ==PRO_TK_NO_ERROR )
{
status =ProElemtreeElementVisit( params_element,NULL,
(ProElemtreeVisitFilter) NULL,
(ProElemtreeVisitAction)
PTMfgElemtreeWalkthroughAction,
NULL );
PT_TEST_LOG_SUCC ("ProElemtreeElementVisit ");
}
ProElempathFree(&epath); }
status =ProMfgAssemGet(mfg_mdl_under_test,&r_solid_obj);
PT_TEST_LOG_SUCC ("ProMfgAssemGet");
status =ProSolidFeatVisit ((ProSolid)r_solid_obj,
(ProFeatureVisitAction)
PTMfgMaterialGet,
NULL,
NULL);
PT_TEST_LOG_SUCC
("ProSolidFeatureVisit()");
status =PTMfgDialogCreate(params_element);
PTUtilInitCounters();
return PRO_TK_NO_ERROR;
}
Production Applications: NCProcessManager 1775Thesectionbelowdescribestheactionfunctionsfortheeachofthepreceding
samplecode.
/***********************ACTION FUNCTIONS*************************/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
Production Applications: NCProcessManager 1775Thesectionbelowdescribestheactionfunctionsfortheeachofthepreceding
samplecode.
/***********************ACTION FUNCTIONS*************************/
/*--------------------------------------------------------*\
FUNCTION :PTMfgElemtreeWalkthroughAction()
PURPOSE :Action function for PTUtilElemtreeWalkthroug
\*--------------------------------------------------------*/
ProError PTMfgElemtreeWalkthroughAction (ProElement params_
element,
ProElement element, ProElempath
elem_path,
ProAppData app_data )
{ ProElempathItem p_items[3];
ProValueDataType value_type =-1;
ProElemId elem_id,p_elem_id; char *actual_value;
ProValue value =(ProValue)NULL;
ProValueData value_data; Data_Input *my_data;
ProElempath epath; my_data =(Data_Input*) app_data;
status =ProElementIdGet( element, &elem_id);
PT_TEST_LOG_SUCC("ProElementIdGet");
if(elem_id ==PRO_E_MFG_PARAM_NAME )
{ status =ProElementValuetypeGet (element, &value_type
);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatus =ProElementIdGet( element, &elem_id);
PT_TEST_LOG_SUCC("ProElementIdGet");
if(elem_id ==PRO_E_MFG_PARAM_NAME )
{ status =ProElementValuetypeGet (element, &value_type
);
PT_TEST_LOG(" ProElementValuetypeGet ",status,
status !=PRO_TK_NO_ERROR &&status !=PRO_TK_
INVALID_TYPE &&
status !=PRO_TK_EMPTY );
if(value_type ==PRO_VALUE_TYPE_STRING)
{ status =ProElementStringGet( element,(
ProElementStringOptions)
NULL,
&actual_value);
PT_TEST_LOG_SUCC ("ProElementStringGet ");
if((strcmp ("CUT_FEED",actual_value) ==
0)
||( strcmp ("SPINDLE_SPEED",actual_value) ==0))
1776 Creo®Parametric TOOLKIT User’sGuide{
status =ProElempathAlloc(&epath);
PT_TEST_LOG_SUCC ("ProElempathAlloc ()");
p_items[0].type =PRO_ELEM_PATH_ITEM_TYPE_
INDEX;
p_items[0].path_item.elem_index =count;
p_items[1].type =PRO_ELEM_PATH_ITEM_TYPE_ID;
p_items[1].path_item.elem_id =PRO_E_MFG_PARAMVAL;
status =ProElempathDataSet(epath, p_
items, 2);
PT_TEST_LOG_SUCC ("ProElempathDataSet()");xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxp_items[1].type =PRO_ELEM_PATH_ITEM_TYPE_ID;
p_items[1].path_item.elem_id =PRO_E_MFG_PARAMVAL;
status =ProElempathDataSet(epath, p_
items, 2);
PT_TEST_LOG_SUCC ("ProElempathDataSet()");
status= ProElemtreeElementGet(params_element, epath,
&p_element);
PT_TEST_LOG_SUCC ("ProElemtreeElementGet()");
status =ProElementIdGet( p_element, &p_
elem_id);
PT_TEST_LOG_SUCC ("ProElementIdGet ");
if(p_elem_id ==PRO_E_MFG_PARAMVAL)
{
status =ProElementValueGet (p_element, &value);
PT_TEST_LOG_SUCC("ProElementValueGet");
status =ProValueDataGet (value,
&value_data);
PT_TEST_LOG("ProValueDataGet()", status,
(status !=PRO_TK_NO_ERROR));
if(strcmp ("CUT_FEED",actual_
value) ==0)
{ cut_feed =value_data.v.d;
if(FLAG ==1)
{ value_data.v.d =my_data-
cut_feed;
status =ProValueDataSet (value, &value_data);
PT_TEST_LOG("ProValueDataSet()", status,
(status !=PRO_TK_NO_ERROR));
status =ProElementValueSet (p_element,
value);
PT_TEST_LOG_SUCC("ProElementValueGet");
}
}
if(strcmp ("SPINDLE_SPEED",actual_value) ==0)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(status !=PRO_TK_NO_ERROR));
status =ProElementValueSet (p_element,
value);
PT_TEST_LOG_SUCC("ProElementValueGet");
}
}
if(strcmp ("SPINDLE_SPEED",actual_value) ==0)
{ spindle_speed =value_data.v.d;
if(FLAG ==1)
{ value_data.v.d =my_data-
spindle_speed;
status =ProValueDataSet (value, &value_data);
PT_TEST_LOG("ProValueDataSet()", status,
(status !=PRO_TK_NO_ERROR));
status =
ProElementValueSet
(p_element, value);
PT_TEST_LOG_SUCC("ProElementValueGet");
Production Applications: NCProcessManager 1777}
} count++;
}
ProElempathFree(&epath);
}
}
status =ProMfgproctableDisplayUpdate ();
PT_TEST_LOG_SUCC ("ProMfgproctableDisplayUpdate");
}
return PRO_TK_NO_ERROR;
}
/*--------------------------------------------------------*\
FUNCTION :PTMfgUsrUpdateAction
PURPOSE :Action function for the File Selection
\*--------------------------------------------------------*/
void PTMfgUsrUpdateAction(char *dialog, char *component,
ProAppData data)
{ProElement params_element;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\*--------------------------------------------------------*/
void PTMfgUsrUpdateAction(char *dialog, char *component,
ProAppData data)
{ProElement params_element;
ProCharName str; ProCharName str2;
double cut_feed_value; double spindle_speed_value;
Data_Input data1; wchar_t* wstr;
wchar_t* wstr2; ProErrorlist p_errors;
params_element =(ProElement) data;
ProUIInputpanelValueGet(DIALOG_NAME,"cut_feed",&wstr);
ProWstringToString(str, wstr);
cut_feed_value= atof(str);
ProUIInputpanelValueGet(DIALOG_NAME,"spindle_speed",&wstr2);
ProWstringToString(str2, wstr2);
spindle_speed_value= atof(str2);
data1.cut_feed =cut_feed_value;
data1.spindle_speed =spindle_speed_value;
count =0; FLAG =1;
status =ProElemtreeWrite (params_element, PRO_ELEMTREE_XML,
L"before_redef.inf");
PT_TEST_LOG_SUCC ("ProElemtreeWrite ");
status =ProElemtreeElementVisit( params_element, (
ProElempath )NULL ,
(ProElemtreeVisitFilter) NULL,
(ProElemtreeVisitAction)
PTMfgElemtreeWalkthroughAction,
(ProAppData)&data1 );xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatus =ProElemtreeElementVisit( params_element, (
ProElempath )NULL ,
(ProElemtreeVisitFilter) NULL,
(ProElemtreeVisitAction)
PTMfgElemtreeWalkthroughAction,
(ProAppData)&data1 );
PT_TEST_LOG_SUCC ("ProElemtreeElementVisit ");
status =ProMfgprocitemRedefine (sel_items,complete_tree,&p_
errors);
PT_TEST_LOG_SUCC ("ProMfgprocitemRedefine");
status =ProMfgproctableDisplayUpdate ();
PT_TEST_LOG_SUCC ("ProMfgproctableDisplayUpdate");
PTUtilInitCounters();
status =ProUIDialogExit(DIALOG_NAME, 0);
PT_TEST_LOG_SUCC("ProUIDialogExit");
}
1778 Creo®Parametric TOOLKIT User’sGuide/*--------------------------------------------------------*\
FUNCTION :PTMfgUsrCancelAction
PURPOSE :Action function for the Directory Selection
\*--------------------------------------------------------*/
void PTMfgUsrCancelAction(char *dialog, char *component,
ProAppData data)
{ProError status;
PTUtilInitCounters();
status =ProUIDialogExit(DIALOG_NAME, 0);
PT_TEST_LOG_SUCC("ProUIDialogExit");
}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvoid PTMfgUsrCancelAction(char *dialog, char *component,
ProAppData data)
{ProError status;
PTUtilInitCounters();
status =ProUIDialogExit(DIALOG_NAME, 0);
PT_TEST_LOG_SUCC("ProUIDialogExit");
}
/*--------------------------------------------------------*\
FUNCTION :PTMfgElemtreePreReqAction()
PURPOSE :Get the material
\*--------------------------------------------------------*/
ProError PTMfgMaterialGet (ProFeature* feat, ProAppData data)
{ProAsmcompType f_type;
ProMaterial p_material; ProFeattype feat_type;
ProSolid part; ProMdl p_mdl_handle;
ProCharName c_name; ProMdl mfg_mdl_under_test;
status =ProMdlCurrentGet(&mfg_mdl_under_test);
PT_TEST_LOG_SUCC("ProMdlCurrentGet");
status =ProFeatureTypeGet(feat,&feat_type);
PT_TEST_LOG_SUCC("ProFeatureTypeGet");
if(feat_type==PRO_FEAT_COMPONENT)
{ status =ProAsmcompTypeGet ((ProAsmcomp*)feat,feat-owner,
&f_type);
PT_TEST_LOG_SUCC("ProAsmcompTypeGet");
if(f_type == PRO_ASM_COMP_TYPE_REF_MODEL)
{ status =ProAsmcompMdlGet ((ProAsmcomp*)feat,&p_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx{ status =ProAsmcompTypeGet ((ProAsmcomp*)feat,feat-owner,
&f_type);
PT_TEST_LOG_SUCC("ProAsmcompTypeGet");
if(f_type == PRO_ASM_COMP_TYPE_REF_MODEL)
{ status =ProAsmcompMdlGet ((ProAsmcomp*)feat,&p_
mdl_handle);
PT_TEST_LOG_SUCC("ProAsmcompMdlGet");
status =ProMaterialCurrentGet
((ProSolid)p_mdl_handle,&p_material);
PT_TEST_LOG_SUCC("ProMaterialCurrentGet");
ProWstringToString (c_name, p_material.matl_name);
ProWstringCopy(p_material.matl_name,material_name,
PRO_VALUE_UNUSED);
}
}
return PRO_TK_NO_ERROR;}
/*--------------------------------------------------------*\
FUNCTION :PTMfgElemtreePreReqAction()
PURPOSE :Action function for PTUtilElemtreeWalkthroug
\*--------------------------------------------------------*/
ProError PTMfgElemtreePreReqAction (ProElement elem_tree,
ProElement element, ProElempath
elem_path,
ProAppData app_data )
{ProElemId elem_id;
ProValueData value_data; int ii, counter =0;
Production Applications: NCProcessManager 1779ProValue *values =(ProValue *)NULL;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelem_path,
ProAppData app_data )
{ProElemId elem_id;
ProValueData value_data; int ii, counter =0;
Production Applications: NCProcessManager 1779ProValue *values =(ProValue *)NULL;
ProMfgprocItem *item_array; ProMfgprocItem item;
ProAssembly r_solid_obj; ProElement elem_tree_p;
ProMdl mfg_mdl_under_test;
status =ProMdlCurrentGet(&mfg_mdl_under_test);
PT_TEST_LOG_SUCC("ProMdlCurrentGet");
status =ProMfgAssemGet(mfg_mdl_under_test,&r_solid_obj);
PT_TEST_LOG_SUCC ("ProMfgAssemGet");
status =ProElementIdGet( element, &elem_id);
PT_TEST_LOG_SUCC("ProElementIdGet");
if(elem_id ==PRO_E_NCSEQ_PREREQUISITE_ARR)
{ status =ProArrayAlloc( 0,sizeof(ProValue), 1,
(ProArray *)&values );
PT_TEST_LOG_SUCC("ProArrayAlloc");
status =ProArrayAlloc( 0,sizeof(ProMfgprocItem),
1,(ProArray *)
&item_array );
PT_TEST_LOG_SUCC("ProArrayAlloc(");
status =ProElementValuesGet(element, &values );
PT_TEST_LOG_SUCC("ProArrayAlloc");
if( status ==PRO_TK_NO_ERROR )
status =ProArraySizeGet( (ProArray)values, &counter );xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatus =ProElementValuesGet(element, &values );
PT_TEST_LOG_SUCC("ProArrayAlloc");
if( status ==PRO_TK_NO_ERROR )
status =ProArraySizeGet( (ProArray)values, &counter );
for( ii=0;ii<counter; ii++ )
{
if( (ProValueDataGet( values[ii], &value_data )==PRO_
TK_NO_ERROR )
&&(value_data.type ==PRO_VALUE_TYPE_INT ))
{ item.type =PRO_NC_STEP_OBJECT;
item.id =value_data.v.i;
item.owner =r_solid_obj; }
status =ProArrayObjectAdd((ProArray*)&item_array,-
1,1,&item);
PT_TEST_LOG_SUCC("ProArrayObjectAdd");
}
status =ProMfgproctableSelecteditemsSet (PRO_MFGPROCTABLE_
PROCESS,item_array);
PT_TEST_LOG_SUCC ("ProMfgproctableSelecteditemsSet");
status =ProMfgproctableDisplayUpdate ();
PT_TEST_LOG_SUCC ("ProMfgproctableDisplayUpdate");
ProArrayFree ((ProArray *)&values );
ProArrayFree ((ProArray *)&item_array );
} return PRO_TK_NO_ERROR;
}/*--------------------------------------------------------*\
FUNCTION :PTMfgDialogCreate
PURPOSE :Creates the dialogxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProArrayFree ((ProArray *)&item_array );
} return PRO_TK_NO_ERROR;
}/*--------------------------------------------------------*\
FUNCTION :PTMfgDialogCreate
PURPOSE :Creates the dialog
\*--------------------------------------------------------*/
ProError PTMfgDialogCreate(ProElement params_element)
{ int choice;
ProCharName str; ProName wstr;
status =ProUIDialogCreate(DIALOG_NAME,DIALOG_NAME);
PT_TEST_LOG_SUCC("ProUIPTMfgDialogCreate");
1780 Creo®Parametric TOOLKIT User’sGuidestatus =ProUIDialogWidthSet(DIALOG_NAME,300);
PT_TEST_LOG_SUCC("ProUIPTMfgDialogCreate");
status =ProUIDialogHeightSet(DIALOG_NAME,160);
PT_TEST_LOG_SUCC("ProUIPTMfgDialogCreate");
status =ProUIDialogTitleSet (DIALOG_NAME,L"Feed/Speed
database access");
PT_TEST_LOG_SUCC ("ProUIDialogTitleSet()");
status =ProUILabelTextSet (DIALOG_NAME, "tool_id_val", tool_
id);
PT_TEST_LOG_SUCC ("ProUILabelTextSet()");
status =ProUILabelTextSet (DIALOG_NAME, "material_val",
material_name);
PT_TEST_LOG_SUCC ("ProUILabelTextSet()");xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxid);
PT_TEST_LOG_SUCC ("ProUILabelTextSet()");
status =ProUILabelTextSet (DIALOG_NAME, "material_val",
material_name);
PT_TEST_LOG_SUCC ("ProUILabelTextSet()");
sprintf(str,"%f",cut_feed); ProStringToWstring(wstr, str);
ProUIInputpanelValueSet(DIALOG_NAME,"cut_feed",wstr);
PT_TEST_LOG_SUCC("ProUIInputpanelValueSet");
sprintf(str,"%f",spindle_speed);
ProStringToWstring(wstr, str);
ProUIInputpanelValueSet(DIALOG_NAME,"spindle_speed",wstr);
PT_TEST_LOG_SUCC("ProUIInputpanelValueSet");
status =ProUIPushbuttonActivateActionSet
(DIALOG_NAME, UPDATE, PTMfgUsrUpdateAction, params_element);
PT_TEST_LOG_SUCC("ProUIPushbuttonActivateActionSet");
status =ProUIPushbuttonActivateActionSet
(DIALOG_NAME, CANCEL, PTMfgUsrCancelAction, NULL);
PT_TEST_LOG_SUCC("ProUIPushbuttonActivateActionSet");
status =ProUIDialogActivate(DIALOG_NAME, &choice);
PT_TEST_LOG_SUCC("ProUIDialogActivate");
status =ProUIDialogDestroy(DIALOG_NAME);
PT_TEST_LOG_SUCC("ProUIDialogDestroy");
}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatus =ProUIDialogActivate(DIALOG_NAME, &choice);
PT_TEST_LOG_SUCC("ProUIDialogActivate");
status =ProUIDialogDestroy(DIALOG_NAME);
PT_TEST_LOG_SUCC("ProUIDialogDestroy");
}
/*--------------------------------------------------------*\
FUNCTION :PTMfgProcitemElemtreeGet
PURPOSE :Gets the elem tree ofselected item
\*--------------------------------------------------------*/
ProError PTMfgProcitemElemtreeGet(ProElement *elem_tree)
{ status =ProMfgproctableSelecteditemsGet
(PRO_MFGPROCTABLE_PROCESS,&sel_items);
PT_TEST_LOG_SUCC ("ProMfgproctableSelecteditemsGet");
/*TBD :Currently one one (fitst item ischecked here...
Tobeupdated with multiple selections ofitems inui..*/
status =ProMfgprocitemElemtreeGet (&sel_items[0], elem_
tree);
PT_TEST_LOG_SUCC("ProMfgprocitsmElemtreeGet");
return status;
}
/*--------------------------------------------------------*\
FUNCTION :PTTestMfgProcItemVisit
PURPOSE :Action function for ProMfgProctableVisitxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreturn status;
}
/*--------------------------------------------------------*\
FUNCTION :PTTestMfgProcItemVisit
PURPOSE :Action function for ProMfgProctableVisit
\*--------------------------------------------------------*/
ProError PTTestMfgProcItemVisit
Production Applications: NCProcessManager 1781(ProMfgprocItem* item, ProError error,
ProAppData app_data)
{ProAnnotation annotation;
ProMfgstepHolesetEndType end_type;
ProDrillDepthType depth_type;
status =ProMfgprocitemAnnotationGet (item, &annotation);
PT_TEST_LOG_SUCC ("ProMfgprocitemAnnotationGet");
if(status ==PRO_TK_NO_ERROR)
{ status =ProParameterVisit (&annotation,NULL,
PTMfgParameterVisit,"HOLE_ADJUST");
PT_TEST_LOG_SUCC("ProParameterVisit");
} if(found ==PRO_B_TRUE)
{
status =ProParameterVisit (&annotation,NULL,
PTMfgParameterVisit,
"HOLE_DEP_1");
PT_TEST_LOG_SUCC("ProParameterVisit");
status =ProParameterVisit (&annotation,NULL,
PTMfgParameterVisit,
"HOLE_DEP_2");
PT_TEST_LOG_SUCC("ProParameterVisit");
}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPTMfgParameterVisit,
"HOLE_DEP_1");
PT_TEST_LOG_SUCC("ProParameterVisit");
status =ProParameterVisit (&annotation,NULL,
PTMfgParameterVisit,
"HOLE_DEP_2");
PT_TEST_LOG_SUCC("ProParameterVisit");
}
status =ProMfgprocitemHolesetdepthtypeGet (item,&depth_type,
&end_type);
PT_TEST_LOG_SUCC("ProMfgprocitemHolesetdepthtypeGet");
if((end_type ==PRO_MFGSTEP_HOLESETEND_ALONG_AXIS) &&
(depth_type ==PRO_DRILL_BLIND))
{
status =ProMfgprocitemHolesetdepthSet (item ,hole_
dep_1);
PT_TEST_LOG_SUCC ("ProMfgprocitemHolesetdepthSet");
} if(end_type ==PRO_MFGSTEP_HOLESETEND_REFERENCE)
{ status =ProMfgprocitemHolesetdepthSet (item ,hole_
dep_2);
PT_TEST_LOG_SUCC ("ProMfgprocitemHolesetdepthSet");
}
return PRO_TK_NO_ERROR;
}/*--------------------------------------------------------*\
FUNCTION :PTMfgParameterVisit
PURPOSE :Visit the param.
\*--------------------------------------------------------*/
ProError PTMfgParameterVisit(ProParameter* param, ProError status,
ProAppData data)
{ProCharName str;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPURPOSE :Visit the param.
\*--------------------------------------------------------*/
ProError PTMfgParameterVisit(ProParameter* param, ProError status,
ProAppData data)
{ProCharName str;
ProParamvalue value; ProParamvalueType type;
short l_val;
ProWstringToString(str,param-id);
if(strcmp (str, data) ==0)
{ status =ProParameterValueGet (param, &value);
PT_TEST_LOG_SUCC ("ProParameterValueGet()");
status =ProParamvalueTypeGet (&value, &type);
1782 Creo®Parametric TOOLKIT User’sGuidePT_TEST_LOG_SUCC ("ProParamvalueTypeGet()");
if(type == PRO_PARAM_BOOLEAN)
{ status =ProParamvalueValueGet (&value, type, (void
*)&l_val);
PT_TEST_LOG_SUCC ("ProParamvalueValueGet()");
if(l_val ==1)
found =PRO_B_TRUE;
}
if(type == PRO_PARAM_DOUBLE) {
if(strcmp (str,"HOLE_DEP_1") ==0)
{ status =ProParamvalueValueGet
(&value, type, (void *)&hole_dep_1);
PT_TEST_LOG_SUCC ("ProParamvalueValueGet()");
}
if(strcmp (str,"HOLE_DEP_2") ==0)
{ status =ProParamvalueValueGet
(&value, type, (void *)&hole_dep_2);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(&value, type, (void *)&hole_dep_1);
PT_TEST_LOG_SUCC ("ProParamvalueValueGet()");
}
if(strcmp (str,"HOLE_DEP_2") ==0)
{ status =ProParamvalueValueGet
(&value, type, (void *)&hole_dep_2);
PT_TEST_LOG_SUCC ("ProParamvalueValueGet()");
}
} }
return PRO_TK_NO_ERROR;
}/*--------------------------------------------------------*\
FUNCTION :PTMfgProcitemToolNameGet
PURPOSE :Get the tool name from elem tree.
\*--------------------------------------------------------*/
ProError PTMfgProcitemToolNameGet(ProElement elem)
{ProElempath epath;
ProElement tool_element; ProElempathItem p_items[3];
ProElemId elem_id; ProValueDataType value_type =-1;
ProValue value =(ProValue)NULL;
ProValueData value_data; char toolname[100];
status =ProElemtreeWrite (elem, PRO_ELEMTREE_XML,
L"selecteditem_feed.inf");
PT_TEST_LOG_SUCC ("ProElemtreeWrite ");
status =ProElempathAlloc(&epath);
PT_TEST_LOG_SUCC ("ProElempathAlloc ()");
p_items[0].type =PRO_ELEM_PATH_ITEM_TYPE_ID;
p_items[0].path_item.elem_id =PRO_E_TOOL ;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstatus =ProElempathAlloc(&epath);
PT_TEST_LOG_SUCC ("ProElempathAlloc ()");
p_items[0].type =PRO_ELEM_PATH_ITEM_TYPE_ID;
p_items[0].path_item.elem_id =PRO_E_TOOL ;
status =ProElempathDataSet(epath, p_items, 1);
PT_TEST_LOG_SUCC ("ProElempathDataSet()");
status= ProElemtreeElementGet(complete_tree, epath, &tool_
element);
PT_TEST_LOG_SUCC ("ProElemtreeElementGet()");
status =ProElementIdGet( tool_element, &elem_id);
PT_TEST_LOG_SUCC("ProElementIdGet");
if(elem_id ==PRO_E_TOOL ) {
status =ProElementValueGet (tool_element, &value);
PT_TEST_LOG_SUCC("ProElementValueGet");
status =ProValueDataGet (value, &value_data);
PT_TEST_LOG_SUCC("ProValueDataGet()");
if(value_data.v.w ==NULL)
Production Applications: NCProcessManager 1783ProStringToWstring(tool_id,"TOOL_NOT_SET");
else ProWstringCopy(value_data.v.w,tool_id,PRO_
VALUE_UNUSED);
}ProElempathFree(&epath);
return PRO_TK_NO_ERROR;}
/*===============================================================-
=====*\
FUNCTION :user_terminate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVALUE_UNUSED);
}ProElempathFree(&epath);
return PRO_TK_NO_ERROR;}
/*===============================================================-
=====*\
FUNCTION :user_terminate()
PURPOSE :Tohandle any termination actions
\*===============================================================-
=====*/
void user_terminate(){
}
Example4:ToAddaSubmenutotheManufacturing
ProcessTable
Thefollowingexampleenablesyoutoaddamenuandsubmenutoanexisting
menuoptionintheManufacturing ProcessTable.
#include <ProMenuBar.h>
#include <ProMfgproctable.h>
#include <ProMfg.h>
#include <ProMdl.h>
#include <ProMessage.h>
#include <ProUtil.h>
ProName submenulabel;
ProName help;
ProName submenubutton;
ProError APITestCommand (ProMfg mfg, char* button_name,
ProAppData appdata);
ProStringToWstring (submenulabel, "MyNewSubmenu");
ProStringToWstring (submenubutton, "SubmenuButton");
ProStringToWstring (help, "SubmenuHelp");
status =ProMfgproctableMenuAdd ("APITestMenu",
submenulabel, "Insert" );xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProStringToWstring (submenubutton, "SubmenuButton");
ProStringToWstring (help, "SubmenuHelp");
status =ProMfgproctableMenuAdd ("APITestMenu",
submenulabel, "Insert" );
PT_TEST_LOG_SUCC("ProMfgproctableMenuAdd")
status =ProMfgproctablePushbuttonAdd ("APITestMenu",
"APITestMain",
submenubutton,
help, NULL, APITestCommand, NULL );
PT_TEST_LOG_SUCC("ProMfgproctablePushbuttonAdd");
ProError APITestCommand (ProMfg mfg, char* button_name,
ProAppData appdata) {
printf("Just some output\n");
return PRO_TK_NO_ERROR;
}
1784 Creo®Parametric TOOLKIT User’sGuideProduction Applications: NCProcessManager 178566
Production Applications: Cabling
Cabling.................................................................................................................1787
ThischapterdescribestheCreoParametric TOOLKITcablingfunctions.
1786 Creo®Parametric TOOLKIT User’sGuideCabling
ThissectiondescribesthefunctionsinCreoParametric TOOLKITthataccessthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThischapterdescribestheCreoParametric TOOLKITcablingfunctions.
1786 Creo®Parametric TOOLKIT User’sGuideCabling
ThissectiondescribesthefunctionsinCreoParametric TOOLKITthataccessthe
contentsofacablingharnesscreatedusingthecablingmoduleinCreoParametric.
Theexplanations inthissectionassumeaknowledge ofcablingandthe
fundamental conceptsofCreoParametric TOOLKIT, especially assemblies.
Becarefulwiththeterminology ofcabling.Youcanroutethreekindsofobjectsto
makeelectricalconnections withinaharness:wires,cables,andbundles.The
genericwordforallthreeiscable.Unlessotherwisespecified,theexplanations in
thefollowingsectionsusethewordcable,initsgenericsense,toincludewires,
cables,andbundles.
CreoParametric TOOLKITusestheobjecttypeProCable torefertoanytype
ofcableobject.ThedataobjecthasthesamestructureasProModelitem.
Typedef struct pro_model_item {
ProMdl owner;
int id;
protype type;
)ProCable;
CreatingaHarness
FunctionIntroduced:
•ProHarnessCr eate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofcableobject.ThedataobjecthasthesamestructureasProModelitem.
Typedef struct pro_model_item {
ProMdl owner;
int id;
protype type;
)ProCable;
CreatingaHarness
FunctionIntroduced:
•ProHarnessCr eate()
ProCable operatesonaCreoParametric assembly.Cablescanbelongtooneor
moreharness.AharnessisaspecialCreoParametric partdesignedtocontain
cables.
AharnesscannotberetrievedintoCreoParametric Partmode.Itappearsinthe
cablingassemblyasanassemblycomponent. AharnessisidentifiedbytheCreo
Parametric objecthandle ProHarness.
Thefunction ProHarnessCreate() createsanewharnessinthespecified
assembly.
FindingaHarness
FunctionIntroduced:
•ProAssemblyHarnessesCollect()
•ProAssemblyHarnessesT opCollect()
•ProAsmcompIsHarness()
•ProCablingIsHarness()
•ProHarnessSubharnessesCollect()
Production Applications: Cabling 1787Thefunction ProAssemblyHarnessesCollect() returnsanarrayof
handlestoanyharnessthatispartofaspecifiedassemblyanditssub-assemblies.
Thefunction ProAssemblyHarnessesTopCollect() returnsanarrayofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhandlestoanyharnessthatispartofaspecifiedassemblyanditssub-assemblies.
Thefunction ProAssemblyHarnessesTopCollect() returnsanarrayof
handlestotheharnessespresentinthespecifiedtoplevelassembly.
Usethefunction ProAsmcompIsHarness() toidentifyifthespecified
component isaharnesspart.Thisfunctionreturnsthevalue TRUE,ifthe
component isaharness.Thefunction ProCablingIsHarness() identifiesif
thespecifiedmodelisaharnesspart.
Usethefunction ProHarnessSubharnessesCollect() tocollectallthe
subharnessesinthespecifiedinputharnesspart.
FindingtheCablesinaHarness
Functions Introduced:
•ProHarnessCablesCollect()
•ProCableHarnessesGet()
•ProInputFileRead()
Thefunction ProHarnessCablesCollect() providesanarrayofnamesof
cablesthatexistinthespecifiedharness.Theoutputofthefunctionincludes
cablesthathavenotyetbeenrouted.
Eachcablecanbecreatedin,androutedthough,severalharnesses. Thefunction
ProCableHarnessesGet() providesanarrayofthehandlestotheharnessesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcablesthathavenotyetbeenrouted.
Eachcablecanbecreatedin,androutedthough,severalharnesses. Thefunction
ProCableHarnessesGet() providesanarrayofthehandlestotheharnesses
belowthecurrentassemblythatcontainacablewiththespecifiedname.
Usefunction ProInputFileRead() withargument PRO_WIRELIST_TYPE
toreadfilesinMentorGraphicsLCABLEformat.Thisfunctiondoesnotcreate
wires,butprovidesparameters fromawirelistforusewhencreatinginaharness
assemblyawirewiththesamenameasthatintheLCABLEfile.
HarnessParameters
Functions Introduced:
•ProCablelocationAttachT oHarnessComponentGet()
•ProCablelocationIsAttachT oHarness()
Usethefunction
ProCablelocationAttachToHarnessComponentGet() togetthe
component onwhichtheattachtoharnesslocationisdependent.
Usethefunction ProCablelocationIsAttachToHarness() toidentifyif
thespecifiedlocationisacablingattachtoharnesslocation.
1788 Creo®Parametric TOOLKIT User’sGuideImportingNeutralWireListFiles
ThePTCneutralwireformatcontainslogicalinformation forcabling.Itcontainsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedlocationisacablingattachtoharnesslocation.
1788 Creo®Parametric TOOLKIT User’sGuideImportingNeutralWireListFiles
ThePTCneutralwireformatcontainslogicalinformation forcabling.Itcontains
information aboutthereferencedesignator,pin-to-pin connection, andparameter
valuesofconnectors, pins,spools,wires,andcables.
Functions Introduced:
•ProCablingNeutralwire listImport()
Thefunction ProCablingNeutralwirelistImport() allowsyouto
importandloadthePTCneutralwirelistfile(.nwf)inthecurrentsession.
Specifythenameofthefilealongwithitsextensionandfullpathastheinput
argument filename.
ManagingSpools
Functions Introduced:
•ProAssemblySpoolsCollect()
•ProSpoolCr eate()
•ProInputFileRead()
•ProOutputFileMdlnameW rite()
Function ProAssemblySpoolsCollect() returnsalistofallspoolsdefined
inthespecifiedassembly.
Usefunction ProSpoolCreate() tocreateanewspoolofagivencableand
sheathtypeinthespecifiedassembly.
Usefunction ProInputFileRead() withargument PRO_SPOOL_FILE toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthespecifiedassembly.
Usefunction ProSpoolCreate() tocreateanewspoolofagivencableand
sheathtypeinthespecifiedassembly.
Usefunction ProInputFileRead() withargument PRO_SPOOL_FILE to
createnewspoolsorupdateexistingones.Function
ProOutputFileMdlnameWrite() withthesameargumenttoexportaspool
file.
SpoolParameters
Functions Introduced:
•ProSpoolParameterGet()
•ProSpoolParametersCollect()
•ProSpoolParameterDelete()
•ProSpoolParametersSet()
•ProSpoolsFro mLogicalGet()
•ProSpoolsFro mLogicalCr eate()
•ProSpoolCablesLengthGet()
Production Applications: Cabling 1789•ProSubharnessCablesCollect()
Function ProSpoolParameterGet() retrievesasingleparameter forthe
specifiedspool.Thisfunctionsupportsonlysingle-valued parameters. Ifyou
specifyamultivalued parameter,thefunctionreturns PRO_TK_E_NOT_FOUND.
Function ProSpoolParameterCollect() retrievesallparameters ofthe
specifiedspool,bothsingle-andmulti-valued parameters.
UseProSpoolParameterDelete() toremoveasingleparameter fromthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunction ProSpoolParameterCollect() retrievesallparameters ofthe
specifiedspool,bothsingle-andmulti-valued parameters.
UseProSpoolParameterDelete() toremoveasingleparameter fromthe
specifiedspool.Thisfunctiondeletesbothsingle-andmulti-valued parameters.
Function ProSpoolParametersSet() setsallparameters ofthespecified
spool,bothsingle-andmulti-valued parameters. Thisfunctionoverwrites existing
parameter valueswithvaluesintheinputparameter array.
Function ProSpoolsFromLogicalGet() returnsalistofspoolnamesinthe
specifiedassemblyforwhichdatahasbeenimportedfromalogicalreferencebut
whichhavenotyetbeencreated.Usefunction
ProSpoolsFromLogicalCreate() tocreateinstancesofspoolsforwhich
logicaldataexists.RefertotheCreoParametric CablingHelpandCreo
Parametric HarnessHelpformoreinformation onlogicalreferences.
Usethefunction ProSpoolCablesLengthGet() togetthetotallengthofall
thecablespresentinthespecifiedinputharness,usingthespecifiedspool.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric HarnessHelpformoreinformation onlogicalreferences.
Usethefunction ProSpoolCablesLengthGet() togetthetotallengthofall
thecablespresentinthespecifiedinputharness,usingthespecifiedspool.
Usethefunction ProSubharnessCablesCollect() toretrieveanarrayof
allthecablespresentinthespecifiedsubharness.
FindingHarnessConnectors
Functions Introduced:
•ProAssemblyConnectorsGet()
•ProConnectorsFr omLogicalGet()
•ProAsmcompIsConnector()
Eachconnector inacablingassemblyisaCreoParametric partthatisa
component ofthatassembly.Aconnector canbeatanylevelintheassembly
hierarchy.Eachconnector isidentifiedbyitsassemblycomponent path
(ProAsmcomppath).
Thefunction ProAssemblyConnectorGet() providesanarrayofmember
identifiertablesidentifying theconnectors inthespecifiedassembly.Thefunction
allocatesthememoryforthesetables.
Function ProConnectorsFromLogicalGet() returnsalistofconnector
namesinthespecifiedassemblyforwhichdatahasbeenimportedfromalogicalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallocatesthememoryforthesetables.
Function ProConnectorsFromLogicalGet() returnsalistofconnector
namesinthespecifiedassemblyforwhichdatahasbeenimportedfromalogical
referencebutwhichhavenotyetbeencreated.RefertotheCreoParametric
CablingHelpandCreoParametric HarnessHelpformoreinformation onlogical
references.
1790 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProAsmcompIsConnector() toidentifyifthespecified
component isacablingconnector.Thisfunctionreturnsthevalue TRUE,ifthe
component isacablingconnector.
Connectors Parameters
Functions Introduced:
•ProConnectorEntryPortsGet()
•ProConnectorParamsCollect()
•ProConnectorDesignate()
•ProConnectorW ithAllParamsDesignate()
•ProConnectorUndesignate()
•ProConnectorParamGet()
•ProConnectorParamDelete()
•ProConnectorParamsSet()
•ProConnectorsFr omLogicalGet()
•ProOutputFileMdlnameW rite()
•ProInputFileRead()
Eachconnector containsasetofentryportstowhichcablescanbeconnected.
Eachentryportismodeledbyacoordinate systemdatumthatbelongstothepartxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProOutputFileMdlnameW rite()
•ProInputFileRead()
Eachconnector containsasetofentryportstowhichcablescanbeconnected.
Eachentryportismodeledbyacoordinate systemdatumthatbelongstothepart
thatmodelstheconnector.Thefunction ProConnectorEntryPortsGet()
returnsaProArray ofdatumcoordinate systemsrepresenting theentryportsin
thespecifiedconnector.Theconnector isidentifiedbyitscomponent path(its
memb_id_tab).
Thefunction ProConnectorParamsCollect() providesanarrayofthe
userparameters fortheconnector.However,thisarraycontainsonlysingle-valued
parameters thatrefertotheconnector itself,nottheparameters thatdescribethe
entryports.
Toaccessparameters ontheconnector entryports,youmustcallthefunction
ProOutputFileMdlnameWrite() withtheoption PRO_CONNECTOR_
PARAMS_FILE. Thiswritesatextfiletodisk,whichisthesameformatasthe
fileyoueditwhenusingtheProCablecommandConnector,ModifyParameters ,
ModParam.
Thefollowingexampleshowsasampleconnector parameters file.RefertothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfileyoueditwhenusingtheProCablecommandConnector,ModifyParameters ,
ModParam.
Thefollowingexampleshowsasampleconnector parameters file.Refertothe
CreoParametric CablingHelpontheparameters.
ConnectorParameters File
!Enter ormodify parameters for the connector. You may use the
help
Production Applications: Cabling 1791!functionality ofPro/TABLE toenter pre-defined parameters.
!Ref DescrREF_DES MOTOR
!Conn ModelMODEL_NAME MOTOR
!Num OfPinsNUM_OF_PINS 2
!TypeTYPE CONNECTOR
!Entry Port
! TYPE INT_LENGTH
ENTRY_PORT ENTRY1 ROUND 0.2
ENTRY_PORT ENTRY2 ROUND 0.2 !
Signal!
PIN_ID SIGNAL_NAME SIGNAL_VALUE ENTRY_PORT
SIGNAL 1 ENTRY1
SIGNAL 2
!Pin
! PIN_ID CABLE_NAME COND_ID
PIN_ASSIGN 2 WIRE_1
PIN_ASSIGN 1 WIRE_2
!Enter ormodify parameters for the connector. You may use the
help
!functionality ofPro/TABLE toenter pre-defined parameters.
!Ref Descr REF_DES MOTOR
!Conn Model MODEL_NAME MOTOR
!Num OfPins NUM_OF_PINS 2
!Type TYPE CONNECTOR
!Entry Port
! TYPE INT_LENGTH
ENTRY_PORT ENTRY1 ROUND 0.2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx!Ref Descr REF_DES MOTOR
!Conn Model MODEL_NAME MOTOR
!Num OfPins NUM_OF_PINS 2
!Type TYPE CONNECTOR
!Entry Port
! TYPE INT_LENGTH
ENTRY_PORT ENTRY1 ROUND 0.2
ENTRY_PORT ENTRY2 ROUND 0.2
!Signal
! PIN_ID SIGNAL_NAME SIGNAL_VALUE ENTRY_PORT
SIGNAL 1 ENTRY1
SIGNAL 2
!Pin
! PIN_ID CABLE_NAME COND_ID
PIN_ASSIGN 2 WIRE_1
PIN_ASSIGN 1 WIRE_2
Notethatthisfileisnotfree-format. Eachparameter nameandvalueisfollowed
byatabcharacter,andeachemptyvalueisrepresented byatabcharacter.
Therefore, thelineintheexamplethatassignsthefirstparameter,SIGNAL,
containsthreetabcharacters betweenthevalueofthePIN_IDandthevalueof
ENTRY_PORT:thefirsttabbelongstothePIN_IDvalue,andnexttwotabs
providenullvaluesforSIGNAL_NAME andSIGNAL_V ALUE.
Thefunction ProInputFileRead() importsafileinthisformat,soyoucan
useitinconjunction withProOutputFileMdlnameWrite() toeditthe
parameters onconnectors andtheirentryports.Toidentifytheconnector,both
functionsusethefollowingarguments:
•arg1—Represents thememb_id_tabxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxuseitinconjunction withProOutputFileMdlnameWrite() toeditthe
parameters onconnectors andtheirentryports.Toidentifytheconnector,both
functionsusethefollowingarguments:
•arg1—Represents thememb_id_tab
1792 Creo®Parametric TOOLKIT User’sGuide•arg2—Represents thememb_num
Thefunction ProConnectorDesignate() designates acomponent inthe
assemblyasacablingconnector.Ittakesasinputthecomponent paththat
identifiesthepartinthecablingassembly,andanoptionalnamethatwillbethe
referencedescriptor (REF_DES) oftheconnector.
Whenanewconnector hasbeendesignated, ithasonlythetwoparameters REF_
DESandMODEL_NAME. TheMODEL_NAME issettobethenameofthepart
designated, andtheREF_DES issettothevalueprovidedasinputtothefunction
ProConnectorDesignate(), ifany,ortotheMODEL_NAME otherwise.
Afteryoudesignateaconnector,youmustcall
ProOutputFileMdlnameWrite() andProInputFileRead() tosetup
thenecessaryparameters.
Thefunction ProConnectorWithAllParamsDesignate() designates axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAfteryoudesignateaconnector,youmustcall
ProOutputFileMdlnameWrite() andProInputFileRead() tosetup
thenecessaryparameters.
Thefunction ProConnectorWithAllParamsDesignate() designates a
component intheassemblyasacablingconnector usingallthelogicalparameters.
Theinputargumentsare:
•p_connector—Specifies thecomponent paththatidentifiesthepartinthe
cablingassembly.
•name—Specifies thereferencedescriptor (REF_DES) oftheconnector.The
argumentcanbeNULLwhenthedesignation isnotfromalogicalreference.
•from_logical—Specifies ifthecomponent mustbedesignated usinglogical
references.
Toundesignate aconnector,callthefunction
ProConnectorUndesignate().
Function ProConnectorParamGet() retrievesasingleparameter forthe
specifiedconnector.Thisfunctionsupportsonlysingle-valued parameters. Ifyou
specifyamultivalued parameter,thefunctionreturns PRO_TK_E_NOT_FOUND.
Usefunction ProConnectorParamDelete() toremoveasingleparameter
fromthespecifiedconnector.Thisfunctiondeletesbothsingle-andmulti-valued
parameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsefunction ProConnectorParamDelete() toremoveasingleparameter
fromthespecifiedconnector.Thisfunctiondeletesbothsingle-andmulti-valued
parameters.
Function ProConnectorParamsCollect() retrievesallparameters ofthe
specifiedconnector.Thisfunctionsupportsbothsingle-andmulti-valued
parameters.
Function ProConnectorParamsSet() setsallparameters ofthespecified
connector.Thisfunctionoverwrites allexistingparameter valueswiththevalues
intheinputparameter array.Thisfunctionsupportsbothsingle-andmulti-valued
parameters.
Function ProConnectorsFromLogicalGet() returnsalistofconnector
namesinthespecifiedassemblyforwhichdatahasbeenimportedfromalogical
referencebutwhichhavenotyetbeencreated.RefertotheCreoParametric
CablingHelpandCreoParametric HarnessHelpformoreinformation onlogical
references.
Production Applications: Cabling 1793ManagingCablesandBundles
Functions Introduced:
•ProCableCr eate()
•ProCableAndConductorsCre ate()
•ProBundleCre ate()
•ProBundleCablesCollect()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferences.
Production Applications: Cabling 1793ManagingCablesandBundles
Functions Introduced:
•ProCableCr eate()
•ProCableAndConductorsCre ate()
•ProBundleCre ate()
•ProBundleCablesCollect()
•ProCablesegmentInfoIsInBundle()
Usethefunctions ProCableCreate() and
ProCableAndConductorsCreate() tocreateanewcableorwireina
specifiedharness.Thetypeofcablecreatedcorresponds tothespooltype.This
functioncreatesallrequiredparameters withdefaultvalues.Ifthecableorwire
namehasalreadybeenimportedfromawirelist,thenparameters fromthat
referenceareusedinsteadofdefaultvalues.
Note
Thefunction ProCableAndConductorsCreate() alsocreates
conductors ifneeded.Passthevalueoftheinputargument create_conductors
asPRO_B_TRUE tocreateconductors.
Usefunction ProBundleCreate() tocreateanewbundleinaspecified
harness.Thetypeofbundlecorresponds withthespooltype.Thisfunctioncreates
allrequiredparameters withdefaultvalues.
Usethefunction ProCablesegmentInfoIsInBundle() toidentifyifthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxharness.Thetypeofbundlecorresponds withthespooltype.Thisfunctioncreates
allrequiredparameters withdefaultvalues.
Usethefunction ProCablesegmentInfoIsInBundle() toidentifyifthe
specifiedcablesegmentrunsintoabundle.Thisfunctionreturnsthenameofthe
bundleonlyifthespecifiedcablesegmentrunsintoabundle.
CableParameters
Functions Introduced:
•ProCableParameterGet()
•ProCableParameterDelete()
•ProCableParametersCollect()
•ProCableParametersSet()
•ProCableparammemberFre e()
•ProCableparampro arrayFree ()
•ProCablesFr omLogicalGet()
•ProCablesFr omLogicalCr eate()
1794 Creo®Parametric TOOLKIT User’sGuide•ProCablesFr omLogicalAllCr eate()
•ProCableLocationsOnSegEndGet()
•ProOutputFileMdlnameW rite()
•ProInputFileRead()
•ProCableT essellationGet()
•ProCablesegmentInfoIsNew()
•ProCablesegmentInfoPointsGet()
•ProCablesegmentInfosGet()
Function ProCableParameterGet() retrievesasingleparameter forthe
specifiedcable.Thisfunctionsupportsonlysingle-valued parameters. Ifyouxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProCablesegmentInfoPointsGet()
•ProCablesegmentInfosGet()
Function ProCableParameterGet() retrievesasingleparameter forthe
specifiedcable.Thisfunctionsupportsonlysingle-valued parameters. Ifyou
specifyamultivalued parameter,thefunctionreturns PRO_TK_E_NOT_FOUND.
UseProCableParameterDelete() toremoveasingleparameter fromthe
specifiedcable.Thisfunctiondeletesbothsingle-andmulti-valued parameters.
Function ProCableParametersCollect() retrievesallparameters ofthe
specifiedcable.Thisfunctionsupportsbothsingle-andmulti-valued parameters.
Function ProCableParametersSet() setsallparameters ofthespecified
cable.Thisfunctionoverwrites allexistingparameter valueswiththevaluesinthe
inputparameter array.Thisfunctionsupportsbothsingle-andmulti-valued
parameters.
Function ProCableparammemberFree() releasesthememoryassignedto
theProCableparam object.Function ProCableparamproarrayFree()
releasesthememoryassignedtothearrayofProCableparam objects.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameters.
Function ProCableparammemberFree() releasesthememoryassignedto
theProCableparam object.Function ProCableparamproarrayFree()
releasesthememoryassignedtothearrayofProCableparam objects.The
ProCableparam objectstoresthenamesandvaluesofcableparameters.
Function ProCablesFromLogicalGet() returnsalistofcablenamesinthe
specifiedassemblyforwhichdatahasbeenimportedfromalogicalreferencebut
whichhavenotyetbeencreated.
Usefunction ProCablesFromLogicalCreate() tocreateinstancesof
cablesforwhichlogicaldataexists.
Thefunction ProCablesFromLogicalAllCreate() createscablesand
conductors fromlogicalreferences. Cablesarecreatedusingthespoolfeatures.If
acablealreadyhasaspoolfeaturedefinedforit,thensuchcablesarecreated
usingtheexistingspoolsinthemodel.Ifthespoolfeatureisnotdefinedfora
cable,thenthisfunctionalsocreatesspoolsforsuchcables.
RefertotheCreoParametric CablingHelpandCreoParametric HarnessHelpfor
moreinformation onlogicalreferences.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcable,thenthisfunctionalsocreatesspoolsforsuchcables.
RefertotheCreoParametric CablingHelpandCreoParametric HarnessHelpfor
moreinformation onlogicalreferences.
Thefunction ProCableLocationsOnSegEndGet() returnsthestartand
endlocationofeachsegmentforthespecifiedcable.Thelocationsarereturnedas
aProArray.
Production Applications: Cabling 1795Thefunctions ProOutputFileMdlnameWrite() and
ProInputFileRead() canbeusedwiththeoption PRO_CABLE_PARAMS_
FILEtoexportandimport(andthereforeedit)parameters onthespecifiedcable.
Usethefunction ProCableTessellationGet() togetthetessellation for
thespecifiedinputcable.Specifythefollowingparameters asinputargumentsto
createthesurfacetessellation:
•cable—Specify theinputcableonwhichthetessellation istobecreated.
•input_data—Specify theinputdatausedforthetessellation suchas
AngleControl, ChordHeight, StepSize andsoon.Youcanchoose
theoptionstousewhengenerating atessellation fortheinputcable.
Note
Youmustsettheconfiguration option display_thick_cables toyesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAngleControl, ChordHeight, StepSize andsoon.Youcanchoose
theoptionstousewhengenerating atessellation fortheinputcable.
Note
Youmustsettheconfiguration option display_thick_cables toyes
beforeusingthisAPI.
Usethefunction ProCablesegmentInfoIsNew() toidentifyifthespecified
cablesegmentwithlocationinformation isconnected totheprevioussegment.
Usethefunction ProCablesegmentInfoPointsGet() togetanarrayof
points,tangentsandlocationIdsforthespecifiedcablesegment.
Usethefunction ProCablesegmentInfosGet() tocollectcablesegments
withlocationIdsofthecablesegmentspresentwithinthespecifiedcable.
Thefollowingexampleshowsasamplecableparameters file.Likethefilefor
connector parameters, theparameter namesandvaluesareseparatedbytab
characters.
CableParameters File
!Enter ormodify parameters for the cable.
!You can use the help functionality ofPro/TABLE
!toenter pre-defined parameters.
!Cable Name
NAME WIRE_2
!Spool Name
SPOOL 24Y
!Modify the "DIRECTION" parameter for the end type ofthis cable.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx!You can use the help functionality ofPro/TABLE
!toenter pre-defined parameters.
!Cable Name
NAME WIRE_2
!Spool Name
SPOOL 24Y
!Modify the "DIRECTION" parameter for the end type ofthis cable.
! REF_DES ENTRY_PORT DIRECTION
END_TYPE MOTOR ENTRY1 FROM
END_TYPE XCONN2 ENTRY1 TO
CableIdentifiersandTypes
Functions Introduced:
1796 Creo®Parametric TOOLKIT User’sGuide•ProCableByNameGet()
•ProCableNameGet()
•ProCableT ypeGet()
Thefunctions ProCableByNameGet() andProCableNameGet() provide
thehandleofacablegivenitsname.Thefunctionsalsoreturnthecablename
whensuppliedwiththehandle.
Thefunction ProCableTypeGet() providesthetypeofanamedcable.The
possibletypesareasfollows:
•Awire—Asingleconductor
•Acable—Withseveralconductors
•Abundle—A collection ofotherwires,cables,andbundles
CableCosmeticFeatures
Functions Introduced:
•ProCableCosmeticFeatur eCreate()
•ProCableCosmeticFeatur eTypeGet()
•ProCableCosmeticDistanceGet()
•ProCablelocationMaxDiameterGet()
•ProCablelocationHeightDimensionGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProCableCosmeticFeatur eCreate()
•ProCableCosmeticFeatur eTypeGet()
•ProCableCosmeticDistanceGet()
•ProCablelocationMaxDiameterGet()
•ProCablelocationHeightDimensionGet()
•ProCableT apeW indsGet()
•ProCableT apeW indsSet()
•ProCableT apeFeatSpoolGet()
•ProFeatur eIsCableCosmetic()
•ProCableCosmeticfeatur eEntityGet()
•ProCableCosmeticfeatur eThicknessGet()
•ProCableCosmeticfeatur eReferenc ethicknessGet()
Thefunction ProCableCosmeticFeatureCreate() createsacabling
cosmeticfeature.Thetypesofcablingcosmeticfeaturesaretiewraps,markers,
andtape.Theselectedcablelocationorcablesegmentpointtouseforthefeature
creation.Ifcreatingatapefeature,thismustcontainacablelocation.Ifcreatinga
marker,thismustcontainapointonthecablesegment.Ifcreatingatiewrap,this
couldbeacablelocationorapointonacablesegment.
Usethefunction ProCableCosmeticFeatureTypeGet() toretrievethe
typeofthespecifiedcosmeticfeature.Theenumerated datatypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcouldbeacablelocationorapointonacablesegment.
Usethefunction ProCableCosmeticFeatureTypeGet() toretrievethe
typeofthespecifiedcosmeticfeature.Theenumerated datatype
ProCableCosmeticType isusedtodefinethetypesofcosmeticfeatures.
Production Applications: Cabling 1797Thefunction ProCableCosmeticDistanceGet() retrievesthepositionof
acosmeticfeaturerelativetothestartorendofacablesegment.Theoutput
argumentsarelistedbelow:
•p_offset—Distance ofthecosmeticfeaturefromthestartorendofasegment.
•p_start—Boolean valuewhichindicatesifthedistanceismeasuredfromthe
startpositionofasegment.
Usethefunction ProCablelocationMaxDiameterGet() toretrievethe
maximum diameterofthelocationforthespecifiedharness.
Usethefunction ProCablelocationHeightDimensionGet() toretrieve
theheightdimension forthespecifiedcablelocation.Thefunctionreturnsthe
errorPRO_TK_BAD_CONTEXT ifthespecifiedlocationdoesnothaveaheight
dimension.
Thefunctions ProCableTapeWindsGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheheightdimension forthespecifiedcablelocation.Thefunctionreturnsthe
errorPRO_TK_BAD_CONTEXT ifthespecifiedlocationdoesnothaveaheight
dimension.
Thefunctions ProCableTapeWindsGet() and
ProCableTapeWindsSet() provideaccesstothenumberofwindsinatape
cosmeticfeature.
Thefunction ProCableTapeFeatSpoolGet() returnsthespoolforthe
specifiedtapefeature.
Usethefunction ProFeatureIsCableCosmetic() tocheckifthespecified
featureisacablingcosmeticfeature.Cablingcosmeticfeaturecomprises oftie
wraps,markers,andtape.Formoreinformation oncablingcosmeticfeature,refer
totheCreoParametric Help.
Usethefunction ProCableCosmeticfeatureEntityGet() togetthe
entityforthecablingcosmeticfeature.Thisfunctionreturnsalineentityforthe
tiewrapperandtapetypesofcosmeticfeatures,andsplineentityisreturnedifthe
cosmeticfeatureisoftheamarkertype.
Usethefunction ProCableCosmeticfeatureThicknessGet() togetthe
thicknessofthespecifiedinputcablecosmeticfeature.
Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcosmeticfeatureisoftheamarkertype.
Usethefunction ProCableCosmeticfeatureThicknessGet() togetthe
thicknessofthespecifiedinputcablecosmeticfeature.
Usethefunction
ProCableCosmeticfeatureReferencethicknessGet() toobtainthe
thicknessofthereferencecablewhichiswrappedbytheinputcablecosmetic
feature.
CableConnectivity
FunctionIntroduced:
•ProCableLogicalEndsGet()
Thefunction ProCableLogicalEndsGet() identifiestheentryportsand
theirowningconnectors towhichthespecifiedcableshouldbeconnected. This
functiondependsontheconnector parameters SIGNALandPIN_ASSIGN. A
1798 Creo®Parametric TOOLKIT User’sGuidecableconnectslogicallytoanentryportiftheconnector hasaPIN_ASSIGN
parameter thatrelatesaPIN_IDvaluetothatCABLE_NAME, andaSIGNAL
parameter thatrelatesthesamePIN_IDvaluetothatENTRY_PORTname.
Inthesampleconnector parameters file,thecableWIRE_2connectstoconnector
MOTOR,entryportENTRY1.
Acablecanhavelogicalends,evenifithasnotyetbeenrouted.
Theoutputofthefunction ProCableLogicalEndsGet() isintheformofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMOTOR,entryportENTRY1.
Acablecanhavelogicalends,evenifithasnotyetbeenrouted.
Theoutputofthefunction ProCableLogicalEndsGet() isintheformof
twoPro/Selection structuresforthecoordinate systemdatumsthatrepresent
theentryports.
CableRoutingLocations
Functions Introduced:
•ProCableLocationsCollect()
•ProHarnessLocationsCollect()
•ProCablelocationT ypeGet()
•ProCablelocationPointGet()
•ProCablelocationCablesGet()
Thelocationsthoughwhichacableisroutedareidentifiedby
ProCableLocation structures, whichareofthesamestructureas
ProModelItem. TheProCableLocationsCollect()function provides
anarrayofthestructuresforthelocationsthroughwhichthespecifiedcableis
routed.Thefunction ProHarnessLocationsCollect() providesanarray
ofthestructuresforthelocationsinaspecifiedharness.
Thefunction ProCablelocationTypeGet() givesthetypeofaspecified
location.Thefollowingtableliststhevalidlocationtypes.
LocationType EquivalentCommandintheCBLROUTE
Menu
PRO_LOC_CONNECTOR Connector
PRO_LOC_POINT Pnt/Vertexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocation.Thefollowingtableliststhevalidlocationtypes.
LocationType EquivalentCommandintheCBLROUTE
Menu
PRO_LOC_CONNECTOR Connector
PRO_LOC_POINT Pnt/Vertex
PRO_LOC_FREE Free
PRO_LOC_DEPENDENT Dependent
PRO_LOC_AXIS AlongAxis
PRO_LOC_USE_DIR UseDir
PRO_LOC_OFFSET Offset
PRO_LOC_SPLICE Splice
PRO_LOC_LOC Location
PRO_LOC_OFFSET_CSYS Coordinate Offset
PRO_LOC_OFFSET_AXIS AxisOffset
Production Applications: Cabling 1799Thefunction ProCablelocationPointGet() providestheXYZ
coordinates ofthelocationinthecoordinate systemoftheharness.
Thefunction ProCablelocationCablesGet()provides anarrayofthe
namesofcablesroutedthroughthespecifiedlocation.
CableGeometry
Functions Introduced:
•ProCableLengthGet()
•ProCableSegmentsGet()
•ProCablesegmentPointsGet()
•ProCablesegmentIsInBundle()
•ProCablesegmentIsNew()
Thefunction ProCableLengthGet() providesthelengthofthespecified
wirewithinaspecifiedharness.
Thefunctions ProCableSegmentsGet() and
ProCablesegmentPointsGet() providethegeometryofanamedwire,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProCableLengthGet() providesthelengthofthespecified
wirewithinaspecifiedharness.
Thefunctions ProCableSegmentsGet() and
ProCablesegmentPointsGet() providethegeometryofanamedwire,
bundle,orcablewithinaspecifiedharnesspart.Thegeometryofawireorcableis
dividedintoanumberofsegments, eachofwhichrepresents aregionwherethe
wireorcableisbundledwithotherwiresandcables.Thegeometryofeachsuch
segmentisdescribedbyaseriesofthree-dimensional locationsandtangent
vectors.
Thefunction ProCablesegmentIsInBundle() determines whetheracable
segmentrunsintoabundle.
Thefunction ProCablesegmentIsNew() determines whetherthecable
segmentisconnected toapreviouscablesegment.
MeasuringHarnessClearance
FunctionIntroduced:
•ProCableClearanceCompute()
Thefunction ProCableClearanceCompute() determines theminimum
distancebetweentwoitemsinaharness.Theitemscanbeofanyofthefollowing
types,inanycombination:
•Part
•Surface
•Cable
•CablelocationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProCableClearanceCompute() determines theminimum
distancebetweentwoitemsinaharness.Theitemscanbeofanyofthefollowing
types,inanycombination:
•Part
•Surface
•Cable
•Cablelocation
1800 Creo®Parametric TOOLKIT User’sGuideTheinputsidentifythetwoitemsintermsofProSelection structures. The
functionoutputsaflagtoshowwhetherthetwoitemsinterfere,and,iftheydonot
interfere,thefunctionalsoreturnsthethree-dimensional locationsofthetwo
nearestpoints.
CableRouting
Functions Introduced:
•ProCableRoutingStart()
•ProCableThruLocationRoute()
•ProCableRoutingEnd()
•ProCablelocationre fAlloc()
•ProCablelocationre fFree()
ToRouteaGroupofCablesThroughaSequenceofLocations:
1.CallProCableRoutingStart() toidentifythecablestoberouted.
2.CallProCablelocationrefAlloc() tocreatearoutingreference
locationstructure.
3.CallProCableThruLocationRoute() foreachlocationthroughwhich
toroutethecables.
4.CallProCablelocationrefFree() tofreethelocationreference.
5.CallProCableRoutingEnd() tocompletetherouting.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3.CallProCableThruLocationRoute() foreachlocationthroughwhich
toroutethecables.
4.CallProCablelocationrefFree() tofreethelocationreference.
5.CallProCableRoutingEnd() tocompletetherouting.
6.CallProSolidRegenerate() tomakeCreoParametric calculatethe
resultingcablegeometryandcreatethenecessarycablefeatures.
Note
Youmustalsocallthefunction ProWindowRepaint() toseethenew
cables.
AfterthecalltoProCableRoutingStart(), theinformation aboutthe
routinginprogressiscontainedinanopaquedatastructure ProRouting that
ProCableRoutingStart() provides.Thispointeristhengivenasaninput
tothefunctions ProCableThruLocationRoute() and
ProCableRoutingEnd().
TheinputstoProCableRoutingStart() arethecablingassemblyand
harnesshandles,andanarrayofcables.
Production Applications: Cabling 1801TheinputtoProCableThruLocationRoute() isastructureoftype
ProCablelocationref, whichcontainsallthenecessaryinformation about
thelocationthroughwhichtoroutethecables.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProCablelocationref, whichcontainsallthenecessaryinformation about
thelocationthroughwhichtoroutethecables.
Thefollowingtableshowsthepossiblevaluesofthetypefield,andthevalues
thatotherfieldsneedforeachtype.
type refs axis_flip offsets
PROLOC_CONNECTOR Thecoordinate system
datumfortheentryport— —
PROLOC_POINT Thedatumpoint — —
PROLOC_AXIS Theaxis 0or1toshowtherouting
direction-—
PROLOC_OFFSET Thecoordinate system
datumtodefinetheoffset
directions— Offsetdistancesfromthe
previouslocation
PROLOC_LOC Anexistingrouting
location— —
Thefunction ProCableThruLocationRoute() alsooutputsanarrayofthe
structuresforthelocationscreatedasaresultofthecall.(Thefunctionusually
createsasinglelocation,butcreatestwointhecaseofroutingthroughanaxis.)
Asinput,theProCableRoutingEnd() functiontakesonlythevoid*forthe
routingdata.
DeletingCableSections
FunctionIntroduced:
•ProCableSectionsDelete()
Thefunction ProCableSectionsDelete() deletesthesectionofcablesthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxroutingdata.
DeletingCableSections
FunctionIntroduced:
•ProCableSectionsDelete()
Thefunction ProCableSectionsDelete() deletesthesectionofcablesthat
liesbetweendesignated locations. ProCableSectionsDelete() doesnot
deleteloombundlecablesections.
1802 Creo®Parametric TOOLKIT User’sGuide67
Production Applications: Piping
PipingTerminology................................................................................................1804
LinestockManagement Functions..........................................................................1804
PipelineFeatures..................................................................................................1807
PipelineConnectivity Analysis................................................................................1810
Thischaptercontainsinformation aboutthePipingAPIfunctions. Thefunctions
inthissectionallowaCreoParametric TOOLKITapplication tocreate,read,and
writepipelinestockinformation. TheseAPIsalsosupportanalysisofpipelinexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinthissectionallowaCreoParametric TOOLKITapplication tocreate,read,and
writepipelinestockinformation. TheseAPIsalsosupportanalysisofpipeline
connectivity asbuiltwiththeCreoParametric modulePiping.
1803PipingTerminology
CreoParametric TOOLKITsupportsPiping.Pipingusesspecificterminology .
Thissectiondefinesthisterminology .
Apipeline issetofinterconnecting pipesandfitments.Apipelineconsistsof
anextensionwhichterminates atopenends(thatis,endswithnofurtherpipeline
itemsareattached),non-openends(thatis,endswithequipment suchasnozzles
orotherpipelines), orjunctions.Apipelinealsocontainsextensions thatbranch
fromextensions whichbranchfromit,thenotherswhichbranchfromthose,and
soon.
Apipelineextensionisanon-branching sequenceofpipelineitems.
Apipeline feature isafeaturewhichnamesthepipelinetoshowits
grouping.Allotherfeaturesinthepipelinerefertothisfeature.Apipelinefeature
doesnotcontainanygeometryofitsown.
Atabranch(orjunction), pipesaregroupedintoextensions suchthatthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgrouping.Allotherfeaturesinthepipelinerefertothisfeature.Apipelinefeature
doesnotcontainanygeometryofitsown.
Atabranch(orjunction), pipesaregroupedintoextensions suchthatthe
extensionwhichcontinuesacrossthebranchhasacontinuous directionofflow,
and,ifthatcriterionleavesachoice,hasthesmallestchangeofdirectionpossible
forthatbranch.Otherpipeswhichjointhatbranchthenformtheendpointsof
otherextensions.
Amemberofanextensionisaterminator,aseries,orajunction.
Aterminator istheopenornon-openendsofthepipeline.
Aseriesisanon-branching sequenceofpipelineobjects.
Ajunction isanassemblycomponent oradatumpointwhichrepresents apart
whichjoinsthreeormorepipesegments.
Astubinisadatumpointwhichjointsthreeormoreseries.
Asegment isasectionofpipe,eitherstraightorarced.Ifarced,thesegmentis
manufactured bytakingastraightsectionoftubeandbendingit.
Afitting isacomponent thatconnectstwopipesegments, forexample,to
formacornerwherespacedoesnotallowabentpipesegment,ortorepresentan
itemsuchasavalvexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAfitting isacomponent thatconnectstwopipesegments, forexample,to
formacornerwherespacedoesnotallowabentpipesegment,ortorepresentan
itemsuchasavalve
Apipeline objectisasegment,afitting,orastubin.
Apipeline network isadatastructurewhichcontainsreferences topipeline
objects.Theobjectsarestructured toshowtheirconnectivity andsequencein
relationtotheflow.
LinestockManagement Functions
Thissectionpresentsfunctionsformanagement oflinestock.
1804 Creo®Parametric TOOLKIT User’sGuideLinestocks
Functions introduced:
•ProAssemblyLnstksCollect()
•ProPipelineLnstkGet()
•ProPipelineLnstkSet()
•ProLnstkCre ate()
typedef struct pro_lnstk
{
ProName name;
ProAssembly owner;
}ProLnstk;
Thefunction ProAssemblyLnstksCollect() findsallthelinestocks
definedforaspecifiedassembly.
Thefunctions ProPipelineLnstkGet() andProPipelineLnstkSet()
getandsetthedefaultlinestockforaspecifiedpipelinefeature.
Thefunction ProLnstkCreate() createsanewlinestockinthespecified
assembly.
LinestockParameters
Functions introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgetandsetthedefaultlinestockforaspecifiedpipelinefeature.
Thefunction ProLnstkCreate() createsanewlinestockinthespecified
assembly.
LinestockParameters
Functions introduced:
•ProLnstkParametersCollect()
•ProLnstkParametersSet()
•ProLnstkParameterAdd()
•ProLnstkParameterDelete()
Theparameters ofalinestockdifferfromregularCreoParametric parameters in
thattheymaybeorganizedhierarchically .Thedatastructure ProLnstkParam
containsthedescription ofalinestockparameter anditsmemberparameters, if
any.Itsdeclaration follows,alongwiththoseofitsmembertypes.
typedef enum
{
PROLNSTKPRM_SINGLE,
PROLNSTKPRM_MULTIPLE
}ProLnstkParamType;
typedef struct _pro_lnstk_param_memb_
{
ProName name;
ProParamvalue value;
}ProLnstkParamMemb;
typedef struct _pro_lnstk_param_
{
ProName name;
Production Applications: Piping 1805ProLnstkParamType param_type;
union {
ProParamvalue value;
ProLnstkParamMemb *members;
}lnstk_param_value;
}ProLnstkParam;
Thefunction ProLnstkParametersCollect() findsalltheparameters forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxunion {
ProParamvalue value;
ProLnstkParamMemb *members;
}lnstk_param_value;
}ProLnstkParam;
Thefunction ProLnstkParametersCollect() findsalltheparameters for
aspecifiedlinestock.
Thefunction ProLnstkParametersSet() setstheparameters onaspecified
linestocktoaspecificlist.
Thefunction ProLnstkParameterAdd() addsanewparameter tothelistof
parameters onaspecifiedlinestock.
Thefunction ProLnstkParameterDelete() deletesanamedparameter
fromalinestock.
Thelinestockparameters canbesetusingthefollowingenumerated types:
•ProLnstkPipeSection—Specifies thetypeofthepipesectionasHollow
orSolid.
•ProLnstkPipeShape—Specifies thetypeofthepipeshapeasFlexibleor
Straight.
•ProLnstkPipeCrnrType—Specifies thetypeofthepipecornerasBend,
Fitting,orMiterCut.Cornersarenotsetforflexiblepipes.
•ProLnstkPipeXSection—Specifies thecrosssectionofthepipeas
CircularorRectangular .
ForroundpipesthevalueofProLnstkPipeXSection issetto
PROLNSTKPIPEXSECT_CIRCULAR. Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProLnstkPipeXSection—Specifies thecrosssectionofthepipeas
CircularorRectangular .
ForroundpipesthevalueofProLnstkPipeXSection issetto
PROLNSTKPIPEXSECT_CIRCULAR. Usethefunction
ProLnstkParametersCollect() toaccessthevaluesofthefollowingpipe
sectionparameters:
•OD—Outer diameterofthepipe.
•WALL_THICKNESS—W allthicknessofthepipe.
Forrectangular pipesthevalueofProLnstkPipeXSection issetto
PROLNSTKPIPEXSECT_RECTANGULAR. Usethefunction
ProLnstkParametersCollect() toaccessthevaluesofthefollowingpipe
sectionparameters:
•RECTANGULAR_HEIGHT—Height oftherectangular pipe.
•RECTANGULAR_WIDTH—W idthoftherectangular pipe
•RECTANGULAR_ANGLE—Rotate angleofthepipesolidpartaroundits
referenceentity.Theangleisrelevantonlyinsquarepipes.
•WALL_THICKNESS—W allthicknessofthepipe.
1806 Creo®Parametric TOOLKIT User’sGuidePipelineFeatures
Thefunctionsinthissectionareusedtocreateandworkwithpipelinefeatures.
ThesefunctionsalsoallowaCreoParametric TOOLKITapplication tocreate,
read,andwritelinestockinformation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionsinthissectionareusedtocreateandworkwithpipelinefeatures.
ThesefunctionsalsoallowaCreoParametric TOOLKITapplication tocreate,
read,andwritelinestockinformation.
Functions introduced:
•ProPipelineSpecDrivenCr eate()
•ProPipelineCr eateFromXML()
•ProPipelineCr eate()
•ProPipelineParametersCollect()
•ProPipelineParametersSet()
•ProPipelineParameterAdd()
•ProPipelineParameterDelete()
Thefunction ProPipelineSpecDrivenCreate() createslinestockand
pipelinefeaturesaccording tothespecification parameters definedinthestructure
ProPipingSpecParams. Thepipelinefeatureiscreatedusingthenewly
createdlinestockfeature.Thenameofthelinestockfeatureisgeneratedbasedon
thespecification parameters. Thenameofthepipelinefeatureisgeneratedbased
onthespecification parameter andtheconfiguration option pipeline_label_
format.
Theinputargumentsare:
•model—Specifies themodelwherethepipelinefeaturemustbecreated.The
modelmustbeSpecfication-Driven, ortheconfiguration option piping_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxformat.
Theinputargumentsare:
•model—Specifies themodelwherethepipelinefeaturemustbecreated.The
modelmustbeSpecfication-Driven, ortheconfiguration option piping_
design_method mustbesettospec_driven.
Theconfiguration option piping_design_method enablesyoutosetthe
designmodeforthepipingproject.ToactivatetheSpec-Driven designmode
setthevalueoftheconfiguration optiontospec_driven. Inthismode,the
pipingsystemsarecreatedusingthespecifiedspecifications. ForNonSpec-
Drivenmode,setthevaluetonon_spec_driven. Inthismode,thepiping
systemsarecreatedmanuallywithoutusingproject-specific data.Toworkin
theUser-Drivenmode,setthevaluetouser_driven. Thismodeenables
youtoswitchbetweenSpec-Driven andNonSpec-Driven pipingdesign
modes.Youcanconvertexistingassemblies torequireddesignmodeatany
timeinthedesignprocess.
•spec_params—Specifies thespecification parameters. Theseparameters are
definedinthestructure ProPipingSpecParams. Usermustsetthe
parameter valuesinthestructurebasedonthevaluesdefinedintheauto-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•spec_params—Specifies thespecification parameters. Theseparameters are
definedinthestructure ProPipingSpecParams. Usermustsetthe
parameter valuesinthestructurebasedonthevaluesdefinedintheauto-
selectionfile.RefertotheCreoParametric PipingHelpformoreinformation
ontheauto-selection files.
Production Applications: Piping 1807•Mnemonic—Specifies thefluidorpipingsystem.Ifthevalueisspecifiedas
NULL,thenthedefaultmnemonic definedintheSpecification Directoryfileis
used.ThepathandnameoftheSpecification Directoryfilearesetinthe
configuration option piping_spec_dir_file. Ifyoupassanempty
string,thennomnemonic valueisassignedtothepipelinefeature.
•number—Specifies anumberwhichuniquelyidentifiesthepipeline.Ifthe
valueisspecifiedasNULLoranemptystring,thennonumberisassignedto
thepipelinefeature.
•insulation—Specifics theinsulation forthepipeline.Ifthevalueisspecifiedas
NULL,thenthedefaultinsulation definedintheSpecification Directoryfileisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthepipelinefeature.
•insulation—Specifics theinsulation forthepipeline.Ifthevalueisspecifiedas
NULL,thenthedefaultinsulation definedintheSpecification Directoryfileis
used.ThepathandnameoftheSpecification Directoryfilearesetinthe
configuration option piping_spec_dir_file. Ifyoupassanempty
string,thenthepipelinefeatureiscreatedwithoutinsulation.
•CreateSubAsm—Specifies ifthepipelinemustbecreatedasanew
subassembly .Thepipelinesubassembly iscreatedusingthetemplatemodel
definedintheconfiguration option pipeline_start_assembly_name.
•SubAsmName—Specifies thenameofthepipelinesubassembly .Ifyoupass
thevalueoftheargumentasNULLoranemptystring,thenthenameofthe
pipelinesubassembly isgeneratedbasedontheconfiguration option
pipeline_assembly_name_format.
•csys_r eference—Specifies acoordinate systemfortheplacement ofthe
pipelinesubassembly .IfthevalueisspecifiedasNULL,thenthecoordinate
systemofthemodelisusedtoplacethesubassembly .
Thefunction ProPipelineCreateFromXML() createslinestockandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpipelinesubassembly .IfthevalueisspecifiedasNULL,thenthecoordinate
systemofthemodelisusedtoplacethesubassembly .
Thefunction ProPipelineCreateFromXML() createslinestockand
pipelinefeaturesaccording totheschematic information definedintheXMLfile
forthespecifiedpipelinelabel.Thenameofthelinestockfeatureisgenerated
basedonthespecification parameters. Thenameofthepipelinefeatureis
generatedbasedonthespecification parameter andtheconfiguration option
pipeline_label_format.
Theinputargumentsare:
•model—Specifies themodelwherethepipelinefeaturemustbecreated.The
modelmustbeSpecfication-Driven, ortheconfiguration option piping_
design_method mustbesettospec_driven. Themodelmustbeenabled
forschematic-driven modeling. Theconfiguration option piping_
schematic_driven mustbesettoyes.
Theconfiguration option piping_schematic_driven enablesor
disablestheschematic-driven modelingmodeforapipingproject.Thevalid
valuesareyesandno.
•xml_file—Specifies thepathtotheXMLfilewhichcontainsschematicxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisablestheschematic-driven modelingmodeforapipingproject.Thevalid
valuesareyesandno.
•xml_file—Specifies thepathtotheXMLfilewhichcontainsschematic
information forpipelines.
1808 Creo®Parametric TOOLKIT User’sGuide•pipeline_label—Specifies thepipelinelabelfortheXMLfile.Theproperties
SPEC, SIZE, SCHEDULE, MNEMONIC, NUMBER,andINSULATION
associated withapipelinelabelareupdatedfromtheXMLfile.Theproperty
GRADE,thatis,thematerialcodeisupdatedbasedontheotherspecification
parameters. Theproperty CATEGORY hasitsvaluesetasPIPE.
•insulation—Specifics ifthepipelinemustbecreatedwithinsulation. Ifthe
valueisspecifiedasTRUE,thenthepipelineiscreatedwithinsulation based
ontheparameter INSULATION definedintheXMLfile.
•CreateSubAsm—Specifies ifthepipelinemustbecreatedasanew
subassembly .Thepipelinesubassembly iscreatedusingthetemplatemodel
definedintheconfiguration option pipeline_start_assembly_name.
•SubAsmName—Specifies thenameofthepipelinesubassembly .Ifyoupassxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsubassembly .Thepipelinesubassembly iscreatedusingthetemplatemodel
definedintheconfiguration option pipeline_start_assembly_name.
•SubAsmName—Specifies thenameofthepipelinesubassembly .Ifyoupass
thevalueoftheargumentasNULLoranemptystring,thenthenameofthe
pipelinesubassembly isgeneratedbasedontheconfiguration option
pipeline_assembly_name_format.
•csys_r eference—Specifies acoordinate systemfortheplacement ofthe
pipelinesubassembly .IfthevalueisspecifiedasNULL,thenthecoordinate
systemofthemodelisusedtoplacethesubassembly .
Thefunction ProPipelineCreate() createsaNonSpecification-Driven
pipelinefeature.Thepipelineiscreatedunderthespecifiedmodel.Theinput
argumentsare:
•model—Specifies themodelwherethepipelinefeaturemustbecreated.The
modelmustbeNonSpecfication-Driven.
•lnstk—Specifies thelinestockfeature.Thelinestockfeaturemusthavethe
specifiedmodelasitsparent.
•pipeline_name—Specifies thenameofthepipelinefeature.
Thefunction ProPipelineParametersCollect() retrievesallthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedmodelasitsparent.
•pipeline_name—Specifies thenameofthepipelinefeature.
Thefunction ProPipelineParametersCollect() retrievesallthe
parameters ofthespecifiedpipelineasaProArray. Usethefunction
ProArrayFree toreleasethememoryassignedtotheProArray of
parameters.
Usethefunction ProPipelineParametersSet() tosettheparameters in
thespecifiedpipeline.
Thefunction ProPipelineParameterAdd() addstheparameter inthe
specifiedpipeline.
Thefunction ProPipelineParameterDelete() deletestheparameter in
thespecifiedpipeline.
Inthissection,wehaveexplainedonlytheconfiguration optionswhichare
requiredtoworkwiththepipingAPIs.RefertotheCreoParametric PipingHelp
forthecompletelistofpipingconfiguration optionsandtheirdetailed
descriptions.
Production Applications: Piping 1809PipelineConnectivity Analysis
Thefunctionsinthesectionsupportanalysisofpipelineconnectivity .
Networks
Functions introduced:
•ProPipelineNetworkEval()
•ProPnetworkFr ee()
•ProPnetworkLabelGet()
•ProPnetworkSizeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionsinthesectionsupportanalysisofpipelineconnectivity .
Networks
Functions introduced:
•ProPipelineNetworkEval()
•ProPnetworkFr ee()
•ProPnetworkLabelGet()
•ProPnetworkSizeGet()
•ProPnetworkSpecGet()
Apipelineisacollection ofCreoParametric pipingfeaturesandcomponents that
areconnected together.Apipelinefeatureisasinglefeaturethatunitesallthe
featuresandcomponents inapipeline.Allthefeaturesandcomponents that
belongtoonepipelinereferencethepipelinefeature.
Anetworkisatemporary datastructurewhichistheresultofanalyzingthe
connectivity andtopologyofthefeaturesandcomponents inapipeline.The
functionsinthissectionallowaCreoParametric TOOLKITapplication tocreate
andanalyzethenetworkforapipeline,whichwouldbethefirststepin,for
example,ananalysisofthefluidflowdownthepipeline.
Thenetworkisahierarchical datastructurewhosebranchesdescribethevarious
logicalsubdivisions intowhichthefeaturesandcomponents ofapipelinedivide
themselves according totheirconnectivity .xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThenetworkisahierarchical datastructurewhosebranchesdescribethevarious
logicalsubdivisions intowhichthefeaturesandcomponents ofapipelinedivide
themselves according totheirconnectivity .
AnetworkisdescribedbytheopaquepointerProPnetwork. Thefunction
ProPipelineNetworkEval() analyzesthefeaturesandcomponents that
belongtoapipeline(specified byitspipelinefeature)andbuildsanetworkdata
structure.
Afterthestructurehasbeenanalyzeditshouldbefreedusing
ProPnetworkFree().
Thefunctions ProPnetworkLabelGet(), ProPnetworkSizeGet(), and
ProPnetworkSpecGet() getinformation aboutthepipelinedescribedbya
specifiednetwork.
Extensions
Functions introduced
•ProPnetworkExtensionV isit()
•ProPextensionFlowGet()
1810 Creo®Parametric TOOLKIT User’sGuideAnetworkcontainsalistofextensions. Anextensionisanonbranching sequence
ofconnected pipelineitems.Atabranchinapipelineoneextensioniscontinuous
acrossthebranchandotherextensions terminateatthebranch.Todecidewhichxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofconnected pipelineitems.Atabranchinapipelineoneextensioniscontinuous
acrossthebranchandotherextensions terminateatthebranch.Todecidewhich
extensioniscontinuous acrossthebranch,theanalysisperformed by
ProPipelineNetworkEval() usesthefollowingrules:
•Theextensionmusthaveacontinuous directionofflowacrossthebranch.
•Ofallsuchpossibleextensions, theonechosenistheonethatgivesthe
smallestchangeofdirectionacrossthebranch.
Anextensionisrepresented bytheopaquepointerProPextension. Thefunction
ProPnetworkExtensionVisit() visitsalltheextensions inanetwork.
Thefunction ProPextensionFlowGet() tellsyoutheflowdirectionin
relationtothesequenceofmembersintheextension.
Members
Functions introduced:
•ProPextensionMemberV isit()
•ProPmemberT ypeGet()
Anextensionisconceptually dividedintoobjectscalledmembers,describedby
theopaqueobject ProPmember. Themembersinanextensiondivideitatthe
pipelinebrancheswhichtheextensioncrosses.
Therearethreetypesofmember:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheopaqueobject ProPmember. Themembersinanextensiondivideitatthe
pipelinebrancheswhichtheextensioncrosses.
Therearethreetypesofmember:
•Terminator—The endofapipeline,whereiteitheropensorconnectstoan
itemoutsidethepipeline,describedbytheopaqueobject
ProPterminator.
•Junction—The itemthatdescribeshowthepipelinebranches,describedbythe
opaqueobject ProPjunction.
•Series—A nonbranching sequenceofpipelineobjects,describedbythe
opaqueobject ProPseries.
Thefunction ProPextensionMemberVisit() visitsallthemembersinan
extension, andthefunction ProPmemberTypeGet() reportswhichofthethree
typesthememberrepresents. Eachofthreetypesofmemberisinturncomposed
ofoneormoreobjects.
Thefollowingsectionsdescribetheanalysisofthethreetypesofmembers.
Terminators
Functions introduced:
•ProPmemberT erminatorGet()
Production Applications: Piping 1811•ProPterminatorT ypeGet()
Thefunction ProPmemberTerminatorGet() outputsthePterminator
object,whichrepresents theterminator inthespecifiedmember.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProduction Applications: Piping 1811•ProPterminatorT ypeGet()
Thefunction ProPmemberTerminatorGet() outputsthePterminator
object,whichrepresents theterminator inthespecifiedmember.
Thefunction ProPterminatorTypeGet() tellsyouwhetheraterminator is
aninputoranoutput.
Junctions
Functions introduced:
•ProPmemberJunctionGet()
Thefunction ProPmemberJunctionGet() outputsthePjunction object
whichrepresents thejunctioninthespecifiedmember.
Series
Functions introduced:
•ProPmemberSeriesGet()
•ProPseriesIdGet()
Thefunction ProPmemberSeriesGet() outputsthePseries objectwhich
represents theseriesinthespecifiedmember.
Thefunction ProPseriesIdGet() yieldstheintegeridofthespecifiedseries.
Objects
Functions introduced:
•ProPterminatorObjectGet()
•ProPjunctionObjectGet()
•ProPseriesObjectV isit()
•ProPobjectT ypeGet()
•ProSelectionPipelineGet(
•ProPobjectSegmentGet()
•ProPobjectFittingGet()
•ProPfittingAsmcompGet()
•ProPobjectStubinGet()
•ProPstubinPointGet()
•ProPobjectSelectionGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProPobjectT ypeGet()
•ProSelectionPipelineGet(
•ProPobjectSegmentGet()
•ProPobjectFittingGet()
•ProPfittingAsmcompGet()
•ProPobjectStubinGet()
•ProPstubinPointGet()
•ProPobjectSelectionGet()
•ProPselectionSelectionGet()
1812 Creo®Parametric TOOLKIT User’sGuideAPipingObjectdescribesasingleiteminapipelineandisrepresented bythe
opaquepointer Pobject.
Thefunctions ProPterminatorObjectGet() and
ProPjunctionObjectGet() outputthesingleobjectusedtorepresenta
terminator orajunction.Thefunction ProPseriesObjectVisit() visitsall
theobjectsthatrepresentthecontentsofaseries.
Thefunction ProPobjectTypeGet() yieldsoneofthefollowingtypes:
•Segment—A singlepipesegment,eitherbentorstraight.Canonlybelongtoa
series.
•Fitting—An assemblycomponent thatconnectstwoormorepipeline
segments. CanbelongtoaSeries(ifitconnectstwosegments) oraJunction
(ifitconnectsmorethantwosegments).
•Stubin—A datumpointthatdefinesthelocationwheretwoormorepipeline
segmentsconnectdirectlywithoutafitting.CanonlybelongtoaJunction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(ifitconnectsmorethantwosegments).
•Stubin—A datumpointthatdefinesthelocationwheretwoormorepipeline
segmentsconnectdirectlywithoutafitting.CanonlybelongtoaJunction.
•Selection—An objectthatcontainsaProSelection describing theitema
pipelineterminator connectsto.CanonlybelongtoaTerminator.
Thefunction ProSelectionPipelineGet() outputsthepipelinefeatureto
whichthespecifiedpipelineselectionbelongs.
Thefunction ProPobjectSegmentGet() outputstheSegmentcontainedby
anObjectoftheappropriate type.TheSegmentisdescribedinthenextsection.
Thefunction ProPobjectFittingGet() outputsthefittingcontainedbyan
objectoftheappropriate type.Thefittingisrepresented bytheopaqueobject
ProPfitting. Theassemblycomponent thatrepresents thefittingcanbefound
usingthefunction ProPfittingAsmcompGet().
Thefunction ProPobjectStubinGet() outputsthestubincontainedbyan
objectoftheappropriate type.Thestubinisrepresented bytheopaquepointer
ProPstubin. Thefunction ProPstubinPointGet() yieldsthe3-D
locationofthestubin.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxobjectoftheappropriate type.Thestubinisrepresented bytheopaquepointer
ProPstubin. Thefunction ProPstubinPointGet() yieldsthe3-D
locationofthestubin.
Thefunction ProPobjectSelectionGet() outputstheselectioncontained
byanobjectoftypeterminator.Thefunction
ProPselectionSelectionGet() providestheProSelection object
thattheselectioncontainsandidentifiestheitemoutsidethepipelinetowhichthe
terminator connects.
Segments
Functions introduced:
•ProPsegmentT ypeGet()
•ProPsegmentLinestockGet()
Production Applications: Piping 1813•ProPsegmentLengthGet()
•ProPsegmentCurvesGet()
Asegmentisrepresented bytheopaquepointer ProPsegment.
Thefunction ProPsegmentTypeGet() tellsyouwhetherthesegmentis
straightorbent.
Thefunction ProPsegmentLinestockGet() outputswhichlinestockwas
usedforthissegment.Notethatbecausethepipelinemaycontainfittingswhich
causeachangeindiameter,somesegmentsinthepipelinemayyieldadifferent
linestockfromthatprovidedbyProPipelineLnstkGet() forthepipeline
itself.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcauseachangeindiameter,somesegmentsinthepipelinemayyieldadifferent
linestockfromthatprovidedbyProPipelineLnstkGet() forthepipeline
itself.
Thefunction ProPsegmentLengthGet() outputsthephysicallengthofthe
segment.
Thefunction ProPsegmentCurvesGet() outputsanarrayofProCurve
objectsthatdescribesthegeometryofthecenterline ofthesegment.Thecurves
arealwayslistedinthedirectionofflow.
Connecting PipelineSegments
Youcanconnectdisconnected segmentsofthesamepipelineorentryportsusing
thepipeconnectfeature.
Theelementtreeforthepipeconnectfeatureisdocumented intheheaderfile
ProPipConnect.h andisshowninthefollowingfigure:
1814 Creo®Parametric TOOLKIT User’sGuideElementTreeforPipeConnectFeature
Thefollowingtabledescribestheelementsintheelementtreeforthepipeconnect
feature:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
PIPE_JOIN.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeature:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Mandatory element.Specifiesthe
typeofthefeature.Thevalidvalue
forthiselementisPRO_FEAT_
PIPE_JOIN.
PRO_E_STD_PIPE_LINE_ENV PRO_ELEM_TYPE_COMPOUND Thiscompound elementdefines
thepipeoptions.
PRO_E_STD_PIPE_LINE_ID PRO_ELEM_TYPE_INT Thiselementismandatory ,except
thepiperouteenvironment.
Production Applications: Piping 1815ElementID DataType Description
SpecifiestheIDofthepipeline.
PRO_E_STD_PIPE_LINE_
LNSTKPRO_ELEM_TYPE_INT Optionalelement.Specifiesthe
linestock.Thedefaultlinestockis
takenfromtherelatedpipeline.
PRO_E_STD_PIPE_LINE_
CORNER_TYPEPRO_ELEM_TYPE_OPTION Optionalelement.Specifiesthe
typeofcornerfortheconnect
feature.Thesegmentsinthe
connectfeaturearejoinedusing
corners.Thetypesofcornerare
setinthelinestock.Thedefault
typeofcorneristakenfromthe
relatedpipeline.
Thevalidvaluesfortypesof
cornerare:
•PRO_PIPE_CORNER_
TYPE_FITTING—Creates
sharpcorners.Youcanlater
addcornerfittings.Fittedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsetinthelinestock.Thedefault
typeofcorneristakenfromthe
relatedpipeline.
Thevalidvaluesfortypesof
cornerare:
•PRO_PIPE_CORNER_
TYPE_FITTING—Creates
sharpcorners.Youcanlater
addcornerfittings.Fitted
cornerscreatebreaksina
pipeline.
•PRO_PIPE_CORNER_
TYPE_MITER—Creates a
cornerbyaddingamitercut.
•PRO_PIPE_CORNER_
TYPE_BEND—Creates each
cornerbybendingthepipe.
PRO_E_STD_PIPE_LINE_
BEND_RADPRO_ELEM_TYPE_DOUBLE Optionalelement.Thiselementis
relevantwhenthecornertypeis
settoPRO_PIPE_CORNER_
TYPE_BEND. Specifiestheradius
ofthebend.Thedefaultbend
radiusistakenfromtherelated
pipeline.
ForSpecification-Driven
pipelines,thevalueofbendradius
isdefinedinthelinestock,which
isrelatedtothepipeline.
PRO_E_STD_PIPE_LINE_
MITER_NUMPRO_ELEM_TYPE_INT Optionalelement.Thiselementis
relevantwhenthecornertypeis
settoPRO_PIPE_CORNER_
TYPE_MITER. Specifiesthe
numberofmitercuts.Thedefault
numberofcutsistakenfromthe
relatedpipeline.
1816 Creo®Parametric TOOLKIT User’sGuideElementID DataType DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsettoPRO_PIPE_CORNER_
TYPE_MITER. Specifiesthe
numberofmitercuts.Thedefault
numberofcutsistakenfromthe
relatedpipeline.
1816 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
ForSpecification-Driven
pipelines,thenumberofmitercuts
isdefinedinthelinestock,which
isrelatedtothepipeline.
PRO_E_STD_PIPE_LINE_
MITER_LENPRO_ELEM_TYPE_DOUBLE Optionalelement.Thiselementis
relevantwhenthecornertypeis
settoPRO_PIPE_CORNER_
TYPE_MITER. Specifiesthe
lengthofthemitercut.Thedefault
lengthistakenfromtherelated
pipeline.
ForSpecification-Driven
pipelines,thelengthofthemiter
cutisdefinedinthelinestock,
whichisrelatedtothepipeline.
PRO_E_PIPE_CONNECT_
FROM_MAIN_REFPRO_ELEM_TYPE_SELECT Mandatory element.Specifiesthe
firstendoftheconnectfeature.
PRO_E_PIPE_CONNECT_TO_
MAIN_REFPRO_ELEM_TYPE_SELECT Mandatory element.Specifiesthe
secondendoftheconnectfeature.
Production Applications: Piping 1817ElementID DataType Description
PRO_E_PIPE_CONNECT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_PIPE_CONNECT_TO_
MAIN_REFPRO_ELEM_TYPE_SELECT Mandatory element.Specifiesthe
secondendoftheconnectfeature.
Production Applications: Piping 1817ElementID DataType Description
PRO_E_PIPE_CONNECT_
DIMS_SCHEMEPRO_ELEM_TYPE_OPTION Optionalelement.Specifiesthe
dimensioning schemetobeusedto
connectthetwoends.Thevalid
valuesare:
•PRO_PIPE_DIM_SCHEME_
L1_L2—Sets anoffsetfrom
bothendsoftheconnect.This
isthedefaultoption.
•PRO_PIPE_DIM_SCHEME_
L1_A1—Sets anoffsetfrom
thefirstendoftheconnectand
theanglebetweenthefirst
segmentandmiddlesegment
oftheconnect.
•PRO_PIPE_DIM_SCHEME_
L1_A2—Sets anoffsetfrom
thefirstselectedendofthe
connect,andtheanglebetween
themiddlesegmentandthe
secondend.
•PRO_PIPE_DIM_SCHEME_
L2_A1—Sets anoffsetfrom
thesecondselectedendofthe
connect,andtheanglebetween
thefirstsegmentandmiddle
segmentoftheconnect.
•PRO_PIPE_DIM_SCHEME_
L2_A2—Sets anoffsetfrom
thesecondselectedendofthe
connect,andtheanglebetween
themiddlesegmentandthe
secondend.
•PRO_PIPE_DIM_SCHEME_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthefirstsegmentandmiddle
segmentoftheconnect.
•PRO_PIPE_DIM_SCHEME_
L2_A2—Sets anoffsetfrom
thesecondselectedendofthe
connect,andtheanglebetween
themiddlesegmentandthe
secondend.
•PRO_PIPE_DIM_SCHEME_
A1_A2—Sets theangles
betweentheendsegmentsand
themiddlesegmentofthe
connect.
Note
Iflengthismissing,thenits
valueisconsidered as0.If
angleismissing,thenthe
defaultdimensioning scheme
PRO_PIPE_DIM_SCHEME_
L1_L2isused.Hereagain,if
lengthismissing,thenits
valueisconsidered as0.
1818 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
RefertotheCreoParametric
Pipinghelpformoreinformation
onthesegmentsandangles
createdbytheconnectfeature.
PRO_E_PIPE_ROUTE_ENDS PRO_ELEM_TYPE_COMPOUND Thiscompound elementdefines
theoffsetandanglevaluesforthe
endsintheconnectfeature.
ThetwomainelementsofPRO_E_PIPE_ROUTE_ENDS are:
•PRO_E_PIPE_ROUTE_END_FIRST—This compound elementspecifiesthe
valuesforthefirstendoftheconnectfeature.
•PRO_E_PIPE_ROUTE_END_SECOND—This compound elementspecifiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_PIPE_ROUTE_END_FIRST—This compound elementspecifiesthe
valuesforthefirstendoftheconnectfeature.
•PRO_E_PIPE_ROUTE_END_SECOND—This compound elementspecifies
thevaluesforthesecondendoftheconnectfeature.
Thefollowingelementsarecommontotheboththecompound elements:
Production Applications: Piping 1819ElementID DataType Description
PRO_E_PIPE_ROUTE_END_
OPTPRO_ELEM_TYPE_OPTION Optionalelement.Specifiesthe
typeofoffset.Thevalidvalues
are:
•PRO_PIPE_OFFSET_
REFERENCE—Specifies that
theoffsetisdefinedfroman
referenceobject.Thereference
objectcanbeadatumplaneor
coordinate system,whichis
perpendicular totheendaxis
orcoordinate axis.
•PRO_PIPE_OFFSET_END—
Specifiesthattheoffsetis
definedfromtheselectedend.
PRO_E_PIPE_ROUTE_END_
LENGTHPRO_ELEM_TYPE_DOUBLE Optionalelement.Specifiesthe
valueforoffsetlengths.
Depending onthedimensioning
scheme,specifythevalue
length_1 forL1andlength_
2forL2.Thedefaultvalueis0.0.
PRO_E_PIPE_ROUTE_END_
REFPRO_ELEM_TYPE_SELECT Thiselementismandatory ifthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDepending onthedimensioning
scheme,specifythevalue
length_1 forL1andlength_
2forL2.Thedefaultvalueis0.0.
PRO_E_PIPE_ROUTE_END_
REFPRO_ELEM_TYPE_SELECT Thiselementismandatory ifthe
typeofoffsetissettoPRO_
PIPE_OFFSET_REFERENCE.
Specifiesthereferenceobject.
PRO_E_PIPE_CONNECT_END_
ANGLEPRO_ELEM_TYPE_DOUBLE Optionalelement.Specifiesthe
valueforthesegmentangles.
Depending onthedimensioning
scheme,specify angle_1 forA1
andangle_2 forA2.Thedefault
valueis0.0.
Note
Iftheangleismissing,then
thedimensioning scheme
PRO_E_PIPE_CONNECT_
DIMS_SCHEME ischanged
toPRO_PIPE_DIM_
SCHEME_L1_L2. The
defaultvaluesofL1andL2
are0.0.
1820 Creo®Parametric TOOLKIT User’sGuide68
Production Applications: Welding
ReadAccesstoWeldFeatures...............................................................................1822
Customizing WeldDrawingSymbols.......................................................................1823
WeldingisanoptionalCreoParametric modulethatallowsyoutomodelweldsinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCustomizing WeldDrawingSymbols.......................................................................1823
WeldingisanoptionalCreoParametric modulethatallowsyoutomodelweldsin
assemblies. Inaddition,youcangeneratereporttablesaboutweldparameters and
showweldingsymbolsinassemblydrawings.Thischapterprovidesabrief
overviewofweldfeatures.Formoreinformation, refertothe“WeldingDesign”
moduleintheCreoParametric OnlineHelp.
1821ReadAccesstoWeldFeatures
Thefunctionslistedinthissectionprovideaccesstobasicinformation about
existingweldfeatures.
Functions introduced:
•ProWeldTypeGet()
•ProWeldInfoGet()
•ProWeldIntermittenceGet()
•ProWeldSequenceIdGet()
•ProMdlIsSolidW eld()
•ProWeldGeomT ypeGet()
•ProWeldRodGet()
•ProWeldRodNameGet()
•ProWeldCompoundGet()
•ProWeldFilletdataGet()
•ProWeldGr oovedataGet()
•ProWeldPlugdataGet()
•ProWeldSlotdataGet()
•ProWeldSpotdataGet()
Usefunction ProWeldTypeGet() tooutputthetypeandsubtypeofthe
specifiedweld.Function ProWeldInfoGet() outputstheinformation yougetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProWeldPlugdataGet()
•ProWeldSlotdataGet()
•ProWeldSpotdataGet()
Usefunction ProWeldTypeGet() tooutputthetypeandsubtypeofthe
specifiedweld.Function ProWeldInfoGet() outputstheinformation youget
byusingtheCreoParametric commandInfo,intheWeldgroup,underthewelding
tab.
Function ProWeldIntermittenceGet() outputsinformation aboutan
intermittent weld,describing thesize,number,andlocationoftheweldsthatform
it.
Usefunction ProWeldSequenceIdGet() toobtainthesequenceIDofaweld
feature.
InCreoSimulate,youcanaddtheweldscreatedinCreoParametric Welding
application tomodels.Duringmeshing,solidelementsarecreatedforsolidweld
objectswhilesurfaceweldobjectsarecompressed toshells.Thefunction
ProMdlIsSolidWeld() checksifthespecifiedsolidhasbeencreatedfroma
solidweld.
1822 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProWeldGeomTypeGet() togetthetypeofgeometry
representation forthespecifiedweld.Thetypesofgeometryrepresentations are
definedintheenumerated datatypeProWeldGeomType. Thevalidvaluesare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrepresentation forthespecifiedweld.Thetypesofgeometryrepresentations are
definedintheenumerated datatypeProWeldGeomType. Thevalidvaluesare:
•PRO_WELD_LIGHT—Light weldsreferenceexistingcurvesoredgesbut
havenogeometryoftheirown.Theweldsarerepresented bytheedgeor
surfacegeometryitreferences.
•PRO_WELD_SURFACE—Surface weldscreatesandshowsthesurface
geometry.Itisrepresented bysurfacegeometry.
•PRO_WELD_SOLID—Solid weldsandedgepreparations aregeometric
modelsthatoffermassproperties suchasvolumeandsurfacearea.
RefertotheCreoParametric Weldingformoreinformation.
Usefunction ProWeldRodGet() toprovidethefeaturehandleoftherodfor
thespecifiedweldfeature.Function ProWeldRodNameGet() getsthenameof
thespecifiedweldrodfeature.
ProWeldCompoundGet() outputsthelistofweldsinacompound weld.
Usefunctions ProWeldFilletdataGet(), ProWeldGroovedataGet(),
ProWeldPlugdataGet(), ProWeldSlotdataGet(), and
ProWeldSpotdataGet() tooutputdataonaspecificfillet,groove,plug,slot,
orspotweldrespectively .xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProWeldPlugdataGet(), ProWeldSlotdataGet(), and
ProWeldSpotdataGet() tooutputdataonaspecificfillet,groove,plug,slot,
orspotweldrespectively .
Customizing WeldDrawingSymbols
Functions introduced:
•ProDrawingW eldSympathGetAction()
•ProDrawingW eldGr oupsGetAction()
•ProDrawingW eldSymtextGetAction()
Thissectiondescribesthreenotification functionsinvokedbyCreoParametric
whentheuserinstantiates aweldsymbolthatdocuments aweldindrawingmode.
Yourcallbackfunctionscanoutputinformation whichisusedtomodifytheweld
symbolthatappearsonthedrawing.Theeffectistoallowmuchgreater
customization oftheappearance oftheweldsymbolthanispossiblewithoutCreo
Parametric TOOLKIT.
Production Applications: Welding 1823Note
FromPro/ENGINEER Wildfire5.0onward,youcanalsocreateweldsymbols
inweldfeaturesas3DSymbolAnnotation Elements. CreoParametric
TOOLKITallowsyoutoaccesstheWeldSymbolAnnotation Elementsusing
exisitng ProAnnotation*() functions. Formoreinformation onthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinweldfeaturesas3DSymbolAnnotation Elements. CreoParametric
TOOLKITallowsyoutoaccesstheWeldSymbolAnnotation Elementsusing
exisitng ProAnnotation*() functions. Formoreinformation onthe
functions, refertheAnnotations: Annotation FeaturesandAnnotations onpage
533chapter.
Eachcallbackhasinputargumentswhichidentifythedrawing,theweldassembly,
theweldfeaturebeingannotated, andthepathtothedrawingsymbolbeingused.
Thefunctionsforread-access towelds,describedintheprevioussection,would
beusedinsidethecallbackstofindoutabouttheweldbeingannotated.
RefertotheEvent-driven Programming: Notifications onpage1982chapterfor
moredataonhowtosetanotification.
Weldsymbolnotification typesare:
•PRO_DRAWING_WELD_SYMPATH_GET—allows thecallbackfunctionto
overridetheentireweldsymbolbyspecifying thepathandfilenameofa
substitutesymbol.
•PRO_DRAWING_WELD_GROUPIDS_GET—allows thecallbacktoselectively
includeorexcludesymbolgroupscontainedinthesymbol.Additional inputsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsubstitutesymbol.
•PRO_DRAWING_WELD_GROUPIDS_GET—allows thecallbacktoselectively
includeorexcludesymbolgroupscontainedinthesymbol.Additional inputs
tothecallbackareaflagtoshowwhichwaythesymbolwillpoint(leftor
right)andanarrayofthenamesofthegroupsinthesymbol;theoutputisan
arrayofbooleanswhichselectthegroupstobeincluded.
•PRO_DRAWING_WELD_SYMTEXT_GET—allows thecallbacktosubstitute
forvariabletextinthesymbol.
Allthreenotifications canbesetatthesametime,allowingyoutouseyourown
setofgenericsymbolswhicharedesignedtobecustomized according totheweld
typeandproperties.
Example1:WeldCallbackNotification
ThesamplecodeinUgWeld.c locatedat<creo_toolkit_loadpoint>/
protk_appls/pt_userguide/ptu_weld showshowtouseweldcallback
notification functions.
1824 Creo®Parametric TOOLKIT User’sGuide69
CreoSimulate:Items
EnteringtheCreoSimulateEnvironment .................................................................1827xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnotification functions.
1824 Creo®Parametric TOOLKIT User’sGuide69
CreoSimulate:Items
EnteringtheCreoSimulateEnvironment .................................................................1827
EnteringtheCreoSimulateEnvironment withFailedFeatures..................................1828
SelectionofCreoSimulateItems............................................................................1828
AccessingCreoSimulateItems..............................................................................1829
CreoSimulateObjectReferences...........................................................................1830
GeometricReferences...........................................................................................1831
Y-directions...........................................................................................................1834
Functions..............................................................................................................1835xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions..............................................................................................................1835
CreoSimulateExpressions ....................................................................................1838
AccessingthePropertiesusedforLoadsandConstraints.........................................1839
CreoSimulateLoads.............................................................................................1843
CreoSimulateLoadSets.......................................................................................1855
CreoSimulateConstraints.....................................................................................1856
CreoSimulateConstraintSets................................................................................1866
CreoSimulateMatrixFunctions..............................................................................1867
CreoSimulateVectorFunctions.............................................................................1867xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulateVectorFunctions.............................................................................1867
CreoSimulateBeams............................................................................................1868
CreoSimulateBeams:Sections,SketchedSections,andGeneralSections..............1871
CreoSimulateBeamSections................................................................................1877
SketchedBeamSection.........................................................................................1881
GeneralBeamSection...........................................................................................1882
BeamOrientations.................................................................................................1884
BeamReleases.....................................................................................................1887
CreoSimulateSpringItems....................................................................................1888xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulateSpringItems....................................................................................1888
CreoSimulateSpringPropertyItems......................................................................1890
CreoSimulateMassItems.....................................................................................1892
CreoSimulateMassProperties..............................................................................1895
CreoSimulateMaterialAssignment........................................................................1897
MaterialOrientations .............................................................................................1898
CreoSimulateShells.............................................................................................1902
ShellProperties.....................................................................................................1904xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxShellProperties.....................................................................................................1904
1825ShellPairs............................................................................................................1910
Interfaces.............................................................................................................1913
Gaps....................................................................................................................1920
MeshControl........................................................................................................1922
Welds...................................................................................................................1935
CreoSimulateFeatures.........................................................................................1939
ValidatingNewandModifiedSimulationObjects......................................................1939xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxValidatingNewandModifiedSimulationObjects......................................................1939
Thischapterdescribeshowtoaccesstheproperties ofCreoSimulateitems.The
functionsdescribedinthischapterevaluatethemodel'sstructuralcharacteristics
andthermalprofileandprovidepowerfultoolsforexamining mechanism
performance.
1826 Creo®Parametric TOOLKIT User’sGuideEnteringtheCreoSimulateEnvironment
YoucanaccesstheCreoSimulatefunctionsinoneofthefollowingsituations:
•WhentheCreoParametric sessionisintheCreoSimulateuserinterfacefora
givenmodel.
•Whentheapplication initializestheCreoSimulateenvironment foragiven
model.
Functions Introduced:
•ProMechanicaEnter()
•ProMechanicaLeave()
•ProMechanicaIsActive()
Thefunction ProMechanicaEnter() allowsyoutoentertheCreoSimulate
environment toaccessinformation abouttheCreoSimulateitemsinaspecified
model.Themodelmustbedisplayedinthewindow.
Note
•Youcannotcallthefunction ProMechanicaEnter() fromuser_
initialize().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxenvironment toaccessinformation abouttheCreoSimulateitemsinaspecified
model.Themodelmustbedisplayedinthewindow.
Note
•Youcannotcallthefunction ProMechanicaEnter() fromuser_
initialize().
•ModelscreatedinCreoSimulateLitemode,inbothStructureandThermal,
arenotsupported bytheCreoParametric TOOLKITfunctions. Ifyouaccessa
CreoSimulateLitemodelintheCreoSimulateenvironment, thefunction
ProMechanicaEnter() returnsanerrorPRO_TK_CANT_ACCESS.
Thefunction ProMechanicaLeave() exitstheCreoSimulateenvironment
enteredusingthepreviousfunction.
Thefunction ProMechanicaIsActive() identifieswhethertheCreo
Simulateenvironment iscurrentlyactive.Theenvironment mightbeactiveifthe
userhasenteredtheCreoSimulateenvironment interactively ,orifthefunction
ProMechanicaEnter() hasbeencalled.
Note
OnlyfunctionsrelatedtotheCreoSimulatedatabasemustbecalledbetween
thecallstothefunctions ProMechanicaEnter() and
ProMechanicaLeave(). ProMechanicaEnter() mustnotbeusedto
initializetheCreoSimulateUserInterface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthecallstothefunctions ProMechanicaEnter() and
ProMechanicaLeave(). ProMechanicaEnter() mustnotbeusedto
initializetheCreoSimulateUserInterface.
CreoSimulate:Items 1827EnteringtheCreoSimulateEnvironment
withFailedFeatures
YoucanopenamodelcreatedinCreoParametric withfeaturesthatfailedto
regenerate intheCreoSimulateenvironment. Thefailedfeaturesappearonthe
ModelTreeforthepart.
Youcanusethefunctionsdescribedinthischaptertoenterandrunapplications in
CreoSimulateenvironment onamodelwithfailedfeaturesorcomponents. You
canalsocreatesimulation objectsongeometryfromfailedfeaturesorcomponents
andregenerate themodel.
SelectionofCreoSimulateItems
CreoParametric TOOLKITsupportsselectionofcertainCreoSimulateitems.
RefertothechapterUserInterface:Selectiononpage495fordetailsabout
selectioninCreoParametric. Theseitemsareselectedusing ProSelect() or
areobtainedfromtheselectionbufferwhileCreoParametric isintheCreo
SimulateEnvironment. Thefollowingtableliststheselectable itemsandtheirxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxareobtainedfromtheselectionbufferwhileCreoParametric isintheCreo
SimulateEnvironment. Thefollowingtableliststheselectable itemsandtheir
ProSelect() filterstrings:
ItemType ProSelect() FilterString ModelItemType
Load sim_load* PRO_SIMULATION_LOAD
Constraint sim_load* PRO_SIMULATION_
CONSTRAINT
Beam sim_beam PRO_SIMULATION_BEAM
Spring sim_spring PRO_SIMULATION_SPRING
Gap sim_gap PRO_SIMULATION_GAP
Mass sim_mass PRO_SIMULATION_MASS
Shell sim_shell PRO_SIMULATION_SHELL
Shellpair sim_shlpair PRO_SIMULATION_SHELL_
PAIR
Weld sim_weld PRO_SIMULATION_WELD
Interface sim_connect PRO_SIMULATION_
INTERFACE
*Interactive selectionusingthisfilterwillbydefaultallowtheusertoselectboth
loadsandconstraints. UsetheProSelect() filtersifyoudesiretoonlyallow
selectionofoneofthesetypes.
1828 Creo®Parametric TOOLKIT User’sGuideExample1:Interactively SelectingandDeletinga
CreoSimulateItem
ThesamplecodeinthefilePTMechExDelete.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_mech_examples/pt_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulateItem
ThesamplecodeinthefilePTMechExDelete.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_mech_examples/pt_
mech_ex_src showshowtoselectaCreoSimulateiteminteractively and
deleteit.
AccessingCreoSimulateItems
ThefunctionsdescribedinthissectionallowaccesstoCreoSimulateitemsin
CreoParametric.
Functions Introduced:
•ProSolidMechitemV isit()
•ProMechitemNameGet()
•ProMechitemStatusGet()
•ProMechitemFilterAction()
•ProMechitemV isitAction()
TheCreoSimulateitemisaderivative ofthestructure ProModelitem andis
definedas
typedef struct pro_model_item
{
ProType type;
int id;
ProMdl owner;
}ProMechItem;
Thefunction ProSolidMechitemVisit() traversestheCreoSimulateitems
inaspecifiedmodel.Thisfunctionallowsyoutospecifythetypeofitemtobe
located,oroptionally allitemtypescanbevisited.
Thefunction ProMechitemNameGet() returnsthenameoftheCreoSimulate
item.
Thefunction ProMechitemStatusGet() returnsthevisibilitystatusofthe
iteminthecurrentCreoSimulateenvironment.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechitemNameGet() returnsthenameoftheCreoSimulate
item.
Thefunction ProMechitemStatusGet() returnsthevisibilitystatusofthe
iteminthecurrentCreoSimulateenvironment.
Thefunction ProMechitemFilterAction() isusedtofilterCreoSimulate
itemsforvisitingthem.
Thefunction ProMechitemVisitAction() isusedtovisitaCreoSimulate
item.
CreoSimulate:Items 1829CreoSimulateObjectReferences
References tospecificCreoSimulateitemsarecontainedwithintheCreo
Simulateobjectreferences structure.Thisstructureisrepresented inCreo
Parametric TOOLKITbytheopaquehandle, ProMechObjectref.
Functions Introduced:
•ProMechobjectre fAlloc()
•ProMechobjectre fTypeGet()
•ProMechobjectre fTypeSet()
•ProMechobjectre fIdGet()
•ProMechobjectre fIdSet()
•ProMechobjectre fPathGet()
•ProMechobjectre fPathSet()
•ProMechobjectre fFree()
•ProMechobjectre fPro arrayFree ()
Thefunction ProMechobjectrefAlloc() allocatesmemoryfortheCreo
Simulateobjectreferences handle.
Thefunction ProMechobjectrefTypeGet() returnsthetypeofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechobjectre fPro arrayFree ()
Thefunction ProMechobjectrefAlloc() allocatesmemoryfortheCreo
Simulateobjectreferences handle.
Thefunction ProMechobjectrefTypeGet() returnsthetypeofthe
specifiedCreoSimulateobject.Theoutputargument typeisoneofthePRO_
SIMULATION* types.
Thefunction ProMechobjectrefTypeSet() setsthetypeoftheCreo
Simulateobject.
Thefunction ProMechobjectrefIdGet() obtainstheIDofthespecified
CreoSimulateobject.
Thefunction ProMechobjectrefIdSet() setstheIDofthespecifiedCreo
Simulateobject.
Thefunction ProMechobjectrefPathGet() returnsthecompletepathof
theCreoSimulateobjectreferencefromtherootassemblytothepartorassembly
thatownsthespecifiedCreoSimulateobject.
Thefunction ProMechobjectrefPathSet() setsthecompletepathforthe
CreoSimulateobjectreference.
Usethefunction ProMechobjectrefFree() toreleasethememoryassigned
totheCreoSimulateobjectreferencehandle.
Usethefunction ProMechobjectrefProarrayFree() toreleasethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulateobjectreference.
Usethefunction ProMechobjectrefFree() toreleasethememoryassigned
totheCreoSimulateobjectreferencehandle.
Usethefunction ProMechobjectrefProarrayFree() toreleasethe
memoryassignedtoaProArray ofCreoSimulateobjectreferencehandles.
1830 Creo®Parametric TOOLKIT User’sGuideGeometricReferences
CreoSimulateitemsuseageometric referencestructuretocontainreferences to
CreoParametric geometryitems.Thisstructureisrepresented inCreoParametric
TOOLKITbytheopaquehandle ProMechGeomref.
Functions Introduced:
•ProMechgeomre fAlloc()
•ProMechgeomre fTypeGet()
•ProMechgeomre fSubtypeGet()
•ProMechgeomre fIdGet()
•ProMechgeomre fPathGet()
•ProMechgeomre fFree()
•ProMechgeomre fPro arrayFre e()
•ProMechgeomre fTypeSet()
•ProMechgeomre fSubtypeSet()
•ProMechgeomre fIdSet()
•ProMechgeomre fPathSet()
Thefunction ProMechgeomrefAlloc() allocatesmemoryforthegeometric
entity.Thefunctionreturnsahandletothegeometric entity.
Thefunction ProMechgeomrefTypeGet() returnsthetypeforthespecifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechgeomrefAlloc() allocatesmemoryforthegeometric
entity.Thefunctionreturnsahandletothegeometric entity.
Thefunction ProMechgeomrefTypeGet() returnsthetypeforthespecified
geometric entity.Theoutputargument typecanhaveoneofthefollowingvalues:
•PRO_MECH_POINT—Specifies apoint.
•PRO_MECH_EDGE—Specifies anedge.
•PRO_MECH_SURFACE—Specifies asurface.
•PRO_MECH_VERTEX—Specifies avertex.
•PRO_MECH_QUILT—Specifies aquilt.
•PRO_MECH_BOUNDARY—Specifies aboundary.Thistypeisvalidforall
surfaces.
•PRO_MECH_CURVE—Specifies acurve.
•PRO_MECH_MODEL—Specifies amodel.Thistypeisvalidforallpartsand
assemblies.
•PRO_MECH_AXIS—Specifies theaxis.
•PRO_MECH_COORD_SYSTEM—Specifies thecoordinate system.
•PRO_MECH_LAYER—Specifies alayer.
CreoSimulate:Items 1831•PRO_MECH_VOLUME—Specifies asetofassociated surfacesthatvisually
represents anentitywithvolume.
•PRO_MECH_INT*—Specifies thedatumreferencefeaturesthatstorethe
designintentobjects.Intentobjectsarefamiliesofassociated points,curves,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrepresents anentitywithvolume.
•PRO_MECH_INT*—Specifies thedatumreferencefeaturesthatstorethe
designintentobjects.Intentobjectsarefamiliesofassociated points,curves,
edges,orsurfacesthatlogicallydefineboundaries ofgeometrycreatedor
modifiedbyafeature.Thetypesofdatumreferencefeaturesavailableare:
○PRO_MECH_INT_PNT—Specifies intentdatumpointreferences.
○PRO_MECH_INT_CURVE—Specifies intentcurvereferences.
○PRO_MECH_INT_EDGE—Specifies intentedgereferences.
○PRO_MECH_INT_SURFACE—Specifies intentsurfacereferences.
•PRO_MECH_FEAT—Specifies thereferences toaWeldFeature.Theweld
featureshouldbeoftype:
○GrooveorFillet
○Asurfaceweld
•PRO_MECH_COSMETIC—Specifies acosmeticentitythatiscreatedasa
containerforlatticebeamsorwalls.Thecosmeticentitiesarecreatedby
simplified latticefeatures,andalsobyfeaturesthatintersectorcopythe
lattices,suchasextrudeandmirrorfeatures.
•PRO_MECH_BODY—Specifies abody.
Thefunction ProMechgeomrefTypeSet() setsthetypeofthegeometric
entity.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlattices,suchasextrudeandmirrorfeatures.
•PRO_MECH_BODY—Specifies abody.
Thefunction ProMechgeomrefTypeSet() setsthetypeofthegeometric
entity.
Thefunction ProMechgeomrefSubtypeGet() returnsthesubtypesofthe
specifiedgeometric entity.Onlycertaintypesofgeometric entitiesrequire
subtypes.Thegeometric entitytypesandtheirrespective subtypesareasfollows:
•PRO_MECH_POINT
○PRO_MECH_POINT_SINGLE—Specifies theplacement ofapointatany
location.
○PRO_MECH_POINT_FEATURE—Specifies theplacement ofapoint
alongasurface.
○PRO_MECH_POINT_PATTERN—Specifies theplacement ofapoint
alongacurve.
•PRO_MECH_VERTEX
○PRO_MECH_VERTEX_EDGE_START—Specifies thestartpointofthe
referenced edge.
○PRO_MECH_VERTEX_EDGE_END—Specifies theendpointofthe
referenced edge.
1832 Creo®Parametric TOOLKIT User’sGuide•PRO_MECH_COORD_SYSTEM
○PRO_MECH_CSYS_CARTESIAN—Specifies aCartesiancoordinate
system.
○PRO_MECH_CSYS_CYLINDRICAL—Specifies acylindrical coordinate
system.
○PRO_MECH_CSYS_SPHERICAL—Specifies asphericalcoordinate
system.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_MECH_CSYS_CARTESIAN—Specifies aCartesiancoordinate
system.
○PRO_MECH_CSYS_CYLINDRICAL—Specifies acylindrical coordinate
system.
○PRO_MECH_CSYS_SPHERICAL—Specifies asphericalcoordinate
system.
•PRO_MECH_SURFACE
○PRO_MECH_SURFACE_NORMAL—Specifies thatthesurfacereference
usesthestandardnormaldirection.
○PRO_MECH_SURFACE_REVERSED—Specifies thatthesurfacereference
usesthestandardnormaldirection.
•PRO_MECH_CURVE
○PRO_MECH_CURVE_NORMAL—Specifies thatthecurveproceedsinthe
defaultdirection(fromt=0tot=1).
○PRO_MECH_CURVE_REVERSED—Specifies thatthecurvereferenceuses
thereversedirectionofthecurve.
•PRO_MECH_EDGE
○PRO_MECH_EDGE_SURF_0
○PRO_MECH_EDGE_SURF_1
•PRO_MECH_FEAT
○PRO_MECH_FEAT_3D_LATT—Specifies a3Dlattice.
○PRO_MECH_FEAT_2P5D_LATT—Specifies a2.5Dlattice.
Thefunction ProMechgeomrefSubtypeSet() setsthesubtypesforthe
specifiedgeometric entity.
Thefunction ProMechgeomrefIdGet() returnstheIDofthespecifiedentity.
Thefunction ProMechgeomrefIdSet() setstheIDofthespecifiedentity.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedgeometric entity.
Thefunction ProMechgeomrefIdGet() returnstheIDofthespecifiedentity.
Thefunction ProMechgeomrefIdSet() setstheIDofthespecifiedentity.
Thefunction ProMechgeomrefPathGet()returns thecompletepathofthe
assembly-component references fromtherootassemblytothepartorassembly
thatownsthespecifiedgeometric referenceentity.
Thefunction ProMechgeomrefPathSet()sets thecompletepathofthe
assembly-component references.
Usethefunction ProMechgeomrefFree()o freethegeometric reference
entityfromthememory.
Usethefunction ProMechgeomrefProarrayFree()to freethearrayof
geometric entitiesfromthememory.
CreoSimulate:Items 1833Y-directions
SeveraltypesofCreoSimulateitemsrequireaY-direction(indicating adirection
governing theproperties oftheitem).InCreoParametric TOOLKIT,Y-directions
arerepresented usingtheopaquehandle ProMechYDirection. Thefunctions
describedinthissectionprovideaccesstothey-direction handle.
Functions Introduced:
•ProMechydire ctionAlloc()
•ProMechydire ctionT ypeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdescribedinthissectionprovideaccesstothey-direction handle.
Functions Introduced:
•ProMechydire ctionAlloc()
•ProMechydire ctionT ypeGet()
•ProMechydire ctionCsysGet()
•ProMechydire ctionCsysSet()
•ProMechydire ctionRefere nceGet()
•ProMechydire ctionRefere nceSet()
•ProMechydire ctionV ectorGet()
•ProMechydire ctionV ectorSet()
•ProMechydire ctionFre e()
Thefunction ProMechydirectionAlloc() allocatesmemoryforthey-
directionhandle.
Thefunction ProMechydirectionTypeGet() returnsthetypeofthey-
direction.Passthey-direction handleastheinputtothisfunction.Theoutput
value typecanhavethefollowingvalues:
•PRO_MECH_YDIR_VECTOR—Specifies adirectionvector.
•PRO_MECH_YDIR_REF—Specifies areferenced coordinate system.
•PRO_MECH_YDIR_CSYS—Specifies aworldcoordinate system.
Thefunction ProMechydirectionCsysGet() returnsthecoordinate system
ifthespecifiedy-direction handleisoftypePRO_MECH_YDIR_CSYS.
Thefunction ProMechydirectionCsysSet() setsthecoordinate systemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechydirectionCsysGet() returnsthecoordinate system
ifthespecifiedy-direction handleisoftypePRO_MECH_YDIR_CSYS.
Thefunction ProMechydirectionCsysSet() setsthecoordinate system
forthespecifiedy-direction handle.CallingthisfunctionchangestheY-direction
typetotheappropriate typeanddiscardsanydatarelatedtoitsprevioustype.
Thefunction ProMechydirectionReferenceGet() returnsthereference
entityifthespecifiedy-direction handleisoftypePRO_MECH_YDIR_REF.
Thefunction ProMechydirectionReferenceSet() setsthereference
entityforthespecifiedy-direction handle.CallingthisfunctionchangestheY-
directiontypetotheappropriate typeanddiscardsanydatarelatedtoitsprevious
type.
Thefunction ProMechydirectionVectorGet() returnsthevector
directionifthespecifiedy-direction handleisoftypePRO_MECH_YDIR_
VECTOR.
1834 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechydirectionVectorSet() setsthevectorforthe
specifiedy-direction handle.CallingthisfunctionchangestheY-directiontypetoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVECTOR.
1834 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechydirectionVectorSet() setsthevectorforthe
specifiedy-direction handle.CallingthisfunctionchangestheY-directiontypeto
theappropriate typeanddiscardsanydatarelatedtoitsprevioustype.
Usethefunction ProMechydirectionFree() tofreethey-direction handle.
Functions
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
CreoSimulatefunctionitems.
FunctionitemsusetheProType fieldintheProMechitem structureasPRO_
SIMULATION_FUNCTION.
Functions Introduced:
•ProMechfuncCsysGet()
•ProMechfuncCsysSet()
•ProMechfuncDataGet()
•ProMechfuncDataSet()
•ProMechfuncDescriptionGet()
•ProMechfuncDescriptionSet()
•ProMechfuncV artypeGet()
•ProMechfuncV artypeSet()
•ProMechfuncdataT ypeGet()
•ProMechfuncdataT ypeSet()
•ProMechfuncdataExpre ssionGet()
•ProMechfuncdataExpre ssionSet()
•ProMechfuncdataFuncvalueinterpGet()
•ProMechfuncdataFuncvalueinterpSet()
•ProMechfuncdataIndependentvarGet()
•ProMechfuncdataIndepvarinterpGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechfuncdataExpre ssionSet()
•ProMechfuncdataFuncvalueinterpGet()
•ProMechfuncdataFuncvalueinterpSet()
•ProMechfuncdataIndependentvarGet()
•ProMechfuncdataIndepvarinterpGet()
•ProMechfuncdataIndepvarinterpSet()
•ProMechfuncdataMirr ordeflectionflagGet()
•ProMechfuncdataMirr ordeflectionflagSet()
•ProMechfuncdataFunctableGet()
•ProMechfuncdataFunctableSet()
•ProMechtablentryFunctionvalueGet()
•ProMechtablentryFunctionvalueSet()
CreoSimulate:Items 1835•ProMechtablentryIndependentvarGet()
•ProMechtablentryIndependentvarSet()
•ProMechfuncdataAlloc()
•ProMechtablentryAlloc()
•ProMechtablentryFr ee()
•ProMechtablentryPr oarrayFr ee()
•ProMechfuncdataFr ee()
Thefunction ProMechfuncCsysGet() getsthereferenceco-ordinate system
forthespecifiedCreoSimulatefunctionitem.Usethefunction
ProMechfuncCsysSet() tosetthereferenceco-ordinate systemforthe
specifiedCreoSimulatefunctionitem.
Thefunction ProMechfuncDataGet() returnsthehandletothefunctiondataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechfuncCsysSet() tosetthereferenceco-ordinate systemforthe
specifiedCreoSimulatefunctionitem.
Thefunction ProMechfuncDataGet() returnsthehandletothefunctiondata
oftheCreoSimulateitem.Usethefunction ProMechfuncDataSet() toset
thevalueofthefunctiondatafromtheCreoSimulatefunctionitem
Thefunction ProMechfuncDescriptionGet() returnsthedescription of
theCreoSimulatefunctionitem.Usethefunction
ProMechfuncDescriptionSet() tosetthefunctiondescription oftheCreo
Simulateitem
Thefunction ProMechfuncdataVartypeGet() getsthefunctionvariation
typeoftheCreoSimulateitem.Usethefunction
ProMechfuncdataVartypeSet() tosetthefunctionvariationtypeforthe
CreoSimulateitem.
Thefunctionvariationtypesaredefinedbytheenumerated type
ProMechfuncVarType, whichhasthefollowingvalues:
•PRO_MECH_FUNC_UNIVERSAL—Specifies thedefaultfunctiontypeforthe
load.
•PRO_MECH_FUNC_COORD—Specifies theloadasafunctionofthecurrent
coordinate system.
•PRO_MECH_FUNC_TIME—Specifies theloadasafunctionoftime.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxload.
•PRO_MECH_FUNC_COORD—Specifies theloadasafunctionofthecurrent
coordinate system.
•PRO_MECH_FUNC_TIME—Specifies theloadasafunctionoftime.
•PRO_MECH_FUNC_TEMPERATURE—Specifies theloadasafunctionof
temperature.
•PRO_MECH_FUNC_DEFLECTION—Specifies theloadasafunctionof
deflection.
•PRO_MECH_FUNC_ARCLENGTH—Specifies theloadasafunctionofarc
length.
•PRO_MECH_FUNC_COORDS_TIME—Specifies theloadasacombination of
spatial(functionofcurrentcoordinate system)andtemporal(functionoftime)
functions.
1836 Creo®Parametric TOOLKIT User’sGuide•PRO_MECH_FUNC_ARCLENGTH_TIME—Specifies theloadasa
combination ofspatial(functionofarclength)andtemporal(functionoftime)
functions.
Thefunction ProMechfuncdataTypeGet() determines thetypeofthe
functionusedtocreatetheCreoSimulateitem.Specifythehandletothefunction
dataastheinputforthisfunction.
Theoutputargument valuespecifiesthetypeofthefunctionandcanhavethe
followingvalues:
•PRO_MECH_FUNCTION_SYMBOLIC—Specifies asymbolicexpression fora
function.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdataastheinputforthisfunction.
Theoutputargument valuespecifiesthetypeofthefunctionandcanhavethe
followingvalues:
•PRO_MECH_FUNCTION_SYMBOLIC—Specifies asymbolicexpression fora
function.
•PRO_MECH_FUNCTION_TABLE—Specifies afunctioncreatedusingdata
fromaninterpolation table.
Usethefunction ProMechfuncdataTypeSet() tosetthefunctiontypetobe
usedtocreatetheCreoSimulateitem.
Thefunction ProMechfuncdataExpressionGet() returnsthesymbolic
expression forthespecifiedsymbolicfunction.Usethefunction
ProMechfuncdataExpressionSet() tosetthesymbolicexpression for
thespecifiedsymbolicfunction.
Thefunction ProMechfuncdataFuncvalueinterpGet() specifiesthe
interpolation methodusedforthefunctionvalueofthetabularfunction.The
outputargument valuecanhavethefollowingvalues:
•PRO_MECH_TABLE_LINEAR—This methodlinearlyinterpolates the
variablebetweenthevalues.
•PRO_MECH_TABLE_LOGARITHMIC—This methodlinearlyinterpolates the
logofthevariablebetweenvalues.
Usethefunction ProMechfuncdataFuncvalueinterpSet() tosetthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvariablebetweenthevalues.
•PRO_MECH_TABLE_LOGARITHMIC—This methodlinearlyinterpolates the
logofthevariablebetweenvalues.
Usethefunction ProMechfuncdataFuncvalueinterpSet() tosetthe
interpolation methodforthefunctionvalueofthetabularfunction.
Thefunction ProMechfuncdataIndependentvarGet() returnsthetype
oftheindependent variableforthespecifiedtabularfunction.Theindependent
variablecorresponds tothecoordinate systemaxesandhasthefollowingvalues:
•PRO_MECH_INDEP_VAR_X—Specifies thevalueoftheX-axisinthe
Cartesiancoordinate system.
•PRO_MECH_INDEP_VAR_Y—Specifies thevalueoftheY-axisinCartesian
coordinate system
•PRO_MECH_INDEP_VAR_Z—Specifies thevalueoftheZ-axisinthe
Cartesianorcylindrical coordinate system.
•PRO_MECH_INDEP_VAR_R—Specifies thevalueoftheradiusina
cylindrical orsphericalcoordinate system.
CreoSimulate:Items 1837•PRO_MECH_INDEP_VAR_THETA—Specifies thevalueoftheangleina
cylindrical orsphericalcoordinate system.
•PRO_MECH_INDEP_VAR_PHI—Specifies thevalueofthesecondangleinaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulate:Items 1837•PRO_MECH_INDEP_VAR_THETA—Specifies thevalueoftheangleina
cylindrical orsphericalcoordinate system.
•PRO_MECH_INDEP_VAR_PHI—Specifies thevalueofthesecondangleina
sphericalcoordinate system.
•PRO_MECH_INDEP_VAR_TIME—Specifies thevalueofthetimevariable
(foratime-dependent function).
Usethefunction ProMechfuncdataIndependentvarSet() tosetthe
independent variabletypeforthespecifiedtabularfunction.
Thefunction ProMechfuncdataIndepvarinterpGet() specifiesthe
interpolation methodusedfortheindependent variableofthetabularfunction.
Usethefunction ProMechfuncdataIndepvarinterpSet() tosetthe
interpolation methodtobeusedfortheindependent variableofthetabular
function.
Thefunction ProMechfuncdataMirrordeflectionflagGet() getsthe
valueofthemirrorflagfornegativedeflections fromthefunctiondata.
Usethefunction ProMechfuncdataMirrordeflectionflagSet() to
setthevalueofthemirrorflagforthenegativedeflections inthefunctiondataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueofthemirrorflagfornegativedeflections fromthefunctiondata.
Usethefunction ProMechfuncdataMirrordeflectionflagSet() to
setthevalueofthemirrorflagforthenegativedeflections inthefunctiondata
Thefunction ProMechfuncdataFunctableGet() returnsanarrayoftable
entriesforthespecifiedtabularfunction.Freethearrayoftableentriesusingthe
function ProMechtablentryProarrayFree(). Usethefunction
ProMechfuncdataFunctableSet() tosetanarrayoftableentriesforthe
specifiedtabularfunction.
Thefunction ProMechtablentryFunctionvalueGet() returnsthevalue
ofthespecifiedfunctioninthetableentry.Usethefunction
ProMechtablentryFunctionvalueSet() tosetthevalueofthespecified
functioninthetableentry.
Thefunction ProMechtablentryIndepedentvarGet() returnsthevalue
forthespecifiedindependent variableinthetableentry.Usethefunction
ProMechtablentryIndependentvarSet() tosetthevalueforthe
specifiedindependent variableinthetableentry.
Usethefunction ProMechfuncdataFree() tofreethearraycontaining the
functiondata.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechtablentryIndependentvarSet() tosetthevalueforthe
specifiedindependent variableinthetableentry.
Usethefunction ProMechfuncdataFree() tofreethearraycontaining the
functiondata.
CreoSimulateExpressions
MostoftheProMech*Get() functionsdescribedinthefollowingsections
returnmathematical expressions ofthetypeProMechExpression. This
mathematical expression specifiesanumericorrelationalvalue,whichis
expressed andstoredasastring.Usethefunction
ProMathExpressionEvaluate() toevaluatesuchamathematical
1838 Creo®Parametric TOOLKIT User’sGuideexpression. RefertotheEvaluating Mathematical Expressions foraSolidonpage
104sectionintheCore:Solids,Parts,andMaterialsonpage91chapterformore
information onthisfunction.
AccessingthePropertiesusedforLoads
andConstraints
Loadsandconstraints usecomplicated structurestomirrorthenumberandtypeof
properties availableintheuserinterface.Severalstructuresrecurindifferenttypes
ofloadsandconstraints, andaredescribedbythefollowingtable:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxproperties availableintheuserinterface.Severalstructuresrecurindifferenttypes
ofloadsandconstraints, andaredescribedbythefollowingtable:
Property CreoParametric TOOLKITOpaqueHandle
Vectoredvalue—Specifies avalueappliedina
specifieddirection.ProMechvectoredvalue
Directionvector—Represents adefineddirection. ProMechdirvector
Value—Specifies ascalarvaluepotentially affected
byadefinedvariation.ProMechvalue
Variation—Specifies thecomponents ofadefined
variation(eitherbyfunctionorbyinterpolation).ProMechvariation
Interpolation point—Specifies anindividual
interpolation pointusedtodefineavariation.ProMechinterpolationpnt
Thetypesspecifiedinthepreceding tableandthefunctionsrequiredtoaccess
thesetypesaredefinedintheheaderfileProMechValue.h and
ProMechValueSet.h.
Functions Introduced:
•ProMechvectore dvalueAlloc
•ProMechvectore dvalueDir ectiontypeGet()
•ProMechvectore dvalueDir ectiontypeSet()
•ProMechvectore dvalueDir ectionvectorGet()
•ProMechvectore dvalueDir ectionvectorSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechvectore dvalueAlloc
•ProMechvectore dvalueDir ectiontypeGet()
•ProMechvectore dvalueDir ectiontypeSet()
•ProMechvectore dvalueDir ectionvectorGet()
•ProMechvectore dvalueDir ectionvectorSet()
•ProMechvectore dvalueMagnitudeGet()
•ProMechvectore dvalueMagnitudeSet()
•ProMechvectore dvaluePointsGet()
•ProMechvectore dvaluePointsSet()
•ProMechvectore dvalueFr ee()
•ProMechdirvectorAlloc()
•ProMechdirvectorComponentsGet()
•ProMechdirvectorComponentsSet()
•ProMechdirvectorCsysGet()
CreoSimulate:Items 1839•ProMechdirvectorCsysSet()
•ProMechdirvectorV ariationGet()
•ProMechdirvectorV ariationSet()
•ProMechdirvectorFre e()
•ProMechvalueAlloc()
•ProMechvalueV alueGet()
•ProMechvalueV alueSet()
•ProMechvalueV ariationGet()
•ProMechvalueV ariationSet()
•ProMechvalueFre e()
•ProMechvaluePro arrayFre e()
•ProMechvariationAlloc()
•ProMechvariationT ypeGet()
•ProMechvariationFunctionidGet()
•ProMechvariationFunctionidSet()
•ProMechvariationInterpolationGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechvaluePro arrayFre e()
•ProMechvariationAlloc()
•ProMechvariationT ypeGet()
•ProMechvariationFunctionidGet()
•ProMechvariationFunctionidSet()
•ProMechvariationInterpolationGet()
•ProMechvariationInterpolationSet()
•ProMechvariationFr ee()
•ProMechinterpolationpntAlloc()
•ProMechinterpolationpntPointGet()
•ProMechinterpolationpntPointSet()
•ProMechinterpolationpntMagnitudeGet()
•ProMechinterpolationpntMagnitudeSet()
•ProMechinterpolationpntPro arrayFre e()
•ProMechinterpolationpntFre e()
•ProMechexternalfielddataAlloc()
•ProMechexternalfielddataCsysGet()
•ProMechexternalfielddataCsysSet()
•ProMechexternalfielddataFileGet()
•ProMechexternalfielddataFileSet()
•ProMechexternalfielddataFre e()
•ProMechvariationExternalfielddataGet()
•ProMechvariationExternalfielddataSet()
1840 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechvectoredvalueAlloc() allocatesmemoryforthe
directedvalue.
Thefunction ProMechvectoredvalueDirectiontypeGet() returnsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1840 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechvectoredvalueAlloc() allocatesmemoryforthe
directedvalue.
Thefunction ProMechvectoredvalueDirectiontypeGet() returnsthe
methodusedtospecifythedirectionforthevectoredvalue.Theoutputargument
typecanhaveoneofthefollowingvalues:
•PRO_MECH_DIRECTION_BY_VECTOR—The vectorisdefinedby
specifying adirection.
•PRO_MECH_DIRECTION_BY_2_POINTS—The directionofthevectoris
specifiedusingtwopoints.
Thefunction ProMechvectoredvalueDirectiontypeSet() setsthe
directionforthevectoredvalue.
Thefunction ProMechvectoredvalueDirectionvectorGet() returns
thedirectionofvectorforthevectoredloadoftypePRO_MECH_DIRECTION_
BY_VECTOR.
Thefunction ProMechvectoredvalueDirectionvectorSet()sets the
directionvector.
Thefunction ProMechvectoredvalueMagnitudeGet() specifiesthe
magnitude ofthevectoredload.Ifthevalueofthemagnitude ispositive,theload
actsinthesamedirectionasthevectorandifthevalueofthemagnitude isxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechvectoredvalueMagnitudeGet() specifiesthe
magnitude ofthevectoredload.Ifthevalueofthemagnitude ispositive,theload
actsinthesamedirectionasthevectorandifthevalueofthemagnitude is
negative,theloadactsinthedirectionoppositetothatofthevector.
Thefunction ProMechvectoredvalueMagnitudeSet() setsthe
magnitude ofthevectoredload.
Thefunction ProMechvectoredvaluePointsGet() returnsanarrayof
pointsthatdefinethedirectionofthevectoriftypeofthevectorisPRO_MECH_
DIRECTION_BY_2_POINTS. Usethefunction
ProMechvectoredvaluePointsSet() tosetthearrayofpoints.
Usethefunction ProMechvectoredvalueFree() tofreethememory
containing thedirectedvalue.
Thefunction ProMechdirvectorComponentsGet() returnsthe
components ofthevectorforeachcoordinate direction.Usethefunction
ProMechdirvectorComponentsSet() tosetthecomponent valuesofthe
vector.
Thefunction ProMechdirvectorCsysGet() returnsthecoordinate system
usedtocalculatethevector.Usethefunction
ProMechdirvectorCsysSet() tosetthecoordinate system.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvector.
Thefunction ProMechdirvectorCsysGet() returnsthecoordinate system
usedtocalculatethevector.Usethefunction
ProMechdirvectorCsysSet() tosetthecoordinate system.
Thefunction ProMechdirvectorVariationGet() specifiesthespatialor
time-based variationappliedtothedirectionvector.Usethefunction
ProMechdirvectorVariationSet() tosetthespatialvariationtothe
directionvector.
CreoSimulate:Items 1841Thefunction ProMechvalueValueGet() returnstheexpression usedto
specifytheloadorconstraint value.Usethefunction
ProMechvalueValueSet() tosettheloadorconstraint value.
Thefunction ProMechvalueVariationGet() returnsthespatialortime-
basedvariationassignedtothespecifiedvalue.Usethefunction
ProMechvalueVariationSet() tosetthespatialvariation.
Thefunction ProMechvariationTypeGet() returnsthevariationtypefor
thespecifiedvariationhandle.Theoutputargument typecanhaveoneofthe
followingvalues:
•PRO_MECH_VARIATION_UNIFORM—Specifies thatthevariationofthe
loadisuniformovertheentity.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedvariationhandle.Theoutputargument typecanhaveoneofthe
followingvalues:
•PRO_MECH_VARIATION_UNIFORM—Specifies thatthevariationofthe
loadisuniformovertheentity.
•PRO_MECH_VARIATION_INTERPOLATION—Specifies thattheload
variesalongtheentityasdefinedbytheinterpolation points.
•PRO_MECH_VARIATION_FUNCTION—Indicates thatthevariationis
definedbyspecifying afunctionthatisusedtovarytheproperty.
Thefunction ProMechvariationFunctionidGet() returnsthefunctionid
forthespecifiedvariationhandleifthevariationisoftypePRO_MECH_
VARIATION_FUNCTION. Thefunctionidisalwaysextractedfromthesame
modelfromwherethevariedvaluewasobtained.Usethefunction
ProMechvariationFunctionidSet() tosetthefunctionidforthe
variation.
Thefunction ProMechvariationInterpolationGet() returnsanarray
ofinterpolation pointsforthespecifiedvariationhandleifthevariationisoftype
PRO_MECH_VARIATION_INTERPOLATION. Usethefunction
ProMechvariationInterpolationSet() tosettheinterpolation points
forthespecifiedvariation.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_MECH_VARIATION_INTERPOLATION. Usethefunction
ProMechvariationInterpolationSet() tosettheinterpolation points
forthespecifiedvariation.
Thefunction ProMechinterpolationpntAlloc() allocatesmemoryfor
theinterpolation points.
Thefunction ProMechinterpolationpntPointGet() specifiesthe
geometric entityassociated withthespecifiedinterpolation point.Usethefunction
ProMechinterpolationpntPointSet() tosetthegeometric entity.
Thefunction ProMechinterpolationpntMagnitudeGet() returnsthe
magnitude oftheloadatthespecifiedinterpolation point.Usethefunction
ProMechinterpolationpntMagnitudeSet() tosetthemagnitude ofthe
load.
Usethefunction ProMechinterpolationpntFree() tofreethememory
containing theinterpolation point.Use
ProMechinterpolationpntProarrayFree() asashortcuttofreean
entirearrayofinterpolation points.
Thefunction ProMechexternalfielddataAlloc() allocatesmemoryfor
theexternaldatastructure.
1842 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechexternalfielddataCsysGet() returnsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechexternalfielddataAlloc() allocatesmemoryfor
theexternaldatastructure.
1842 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechexternalfielddataCsysGet() returnsthe
referencecoordinate systemfortheexternalfielddata.Usethefunction
ProMechexternalfielddataCsysSet() tosetthereferencecoordinate
systemfortheexternalfielddata.
Thefunction ProMechexternalfielddataFileGet() returnsthe
information relatedtotheexternal(FEMNeutralFormat)FNFfiletobeimported
fortheexternalfield.Usethefunction
ProMechexternalfielddataFileSet() tosetthepathtothefnffile.
Thefunction ProMechvariationExternalfielddataGet() returnsthe
externalfieldassignedforvariationofavalue.
Usethefunction ProMechvariationExternalfielddataSet tosetthe
externalfieldassignedforvariationofavalue.
CreoSimulateLoads
Loadsareusedtosimulateforcesthatactonthemodelintherealworld.Once
youcreatetheloads,youcanexaminetheresponseofthemechanism totheloads.
AccessingCreoSimulateLoadsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulateLoads
Loadsareusedtosimulateforcesthatactonthemodelintherealworld.Once
youcreatetheloads,youcanexaminetheresponseofthemechanism totheloads.
AccessingCreoSimulateLoads
Thefunctionsdescribedinthissectionprovideahandletothetothedifferent
typesofCreoSimulateloads.LoadsusetheProType fieldintheProMechitem
structureasPRO_SIMULATION_LOAD.
Functions Introduced:
•ProMechloadT ypeGet()
•ProMechloadFor cedataGet()
•ProMechloadPr essur edataGet()
•ProMechloadBearingdataGet()
•ProMechloadCentrifugaldataGet()
•ProMechloadGravitydataGet()
•ProMechloadStructtempdataGet()
•ProMechloadMecttempdataGet()
•ProMechloadHeatdataGet()
•ProMechloadRefere ncesGet()
•ProMechloadLoadsetsGet()
Thefunction ProMechLoadTypeGet() returnsthetypeofloadcontainedin
thestructure ProModelItem.
Theoutputargument valuecanhaveoneofthefollowingvalues:
CreoSimulate:Items 1843•PRO_MECH_LOAD_FORCE—Specifies aforceload.Usethefunction
ProMechloadForcedataGet() toaccessthedataandcontentsofthe
forceloadstructure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulate:Items 1843•PRO_MECH_LOAD_FORCE—Specifies aforceload.Usethefunction
ProMechloadForcedataGet() toaccessthedataandcontentsofthe
forceloadstructure.
•PRO_MECH_LOAD_PRESSURE—Specifies apressureload.Usethefunction
ProMechloadPressuredataGet() toaccessthedataandcontentsof
thepressureloadstructure.
•PRO_MECH_LOAD_BEARING—Specifies abearingload.Usethefunction
ProMechloadBearingdataGet() toaccessthedataandcontentsofthe
bearingloadstructure.
•PRO_MECH_LOAD_CENTRIFUGAL—Specifies acentrifugal load.Usethe
function ProMechloadCentrifugaldataGet() toaccessthedataand
contentsofthecentrifugal loadstructure.
•PRO_MECH_LOAD_GRAVITY—Specifies agravityload.Usethefunction
ProMechloadGravitydataGet() toaccessthedataandcontentsofthe
gravityloadstructure.
•PRO_MECH_LOAD_STRUCTURAL_TEMPERATURE—Specifies a
temperature load.Usethefunction
ProMechloadStructtempdataGet() toaccessthedataandcontentsof
thetemperature load.
•PRO_MECH_LOAD_MECT_TEMPERATURE—Specifies aMechanicalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtemperature load.Usethefunction
ProMechloadStructtempdataGet() toaccessthedataandcontentsof
thetemperature load.
•PRO_MECH_LOAD_MECT_TEMPERATURE—Specifies aMechanical
temperature load.Usethefunction ProMechloadMecttempdataGet()
toaccessthedataandcontentsofthemechanical temperature load.
•PRO_MECH_LOAD_HEAT—Specifies aheatload.Usethefunction
ProMechloadHeatdataGet() toaccessthedataandcontentsoftheheat
load.
Note
FromCreoParametric onward,theloadtypes PRO_MECH_LOAD_GLOBAL_
TEMPERATURE andPRO_MECH_LOAD_EXTERNAL_TEMPERATURE have
beendeprecated. Thefunctions ProMechloadGlobaltempdataGet()
andProMechloadExttempdataGet() havealsobeendeprecated. The
globaltemperature loadsandexternaltemperature areconverted toequivalent
structuraltemperature loads.Usethefunction
ProMechloadStructtempdataGet() insteadtoaccessthedataand
contentsofthetemperature load.
Thefunction ProMechloadReferencesGet() returnsthegeometric
references. Itspecifiesthegeometric references usedtodefinetheload.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontentsofthetemperature load.
Thefunction ProMechloadReferencesGet() returnsthegeometric
references. Itspecifiesthegeometric references usedtodefinetheload.
1844 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechloadLoadsetsGet() returnstheloadset(s)that
containthegivenload.(Currently,CreoSimulateallowsaloadtobeassignedto
onlyoneset).
ModifyingtheCreoSimulateLoads
Thefunctionsinthissectionassignloaddatatoaloadinthemodel.Theload
shouldhavebeencreatedalreadyusing ProMechitemCreate(). Changes
madeviathesefunctionswillnotbereflectedintheuserinterfaceuntilyoucall
thefunction ProMechitemUpdateComplete().
Note
Oncealoadhasbeencreatedandupdatedsuccessfully ,itsloadtypecannotbe
changed.
Thefollowingistheprocedure tocreateanewuser-visibleload:
1.Createtheloadusing ProMechitemCreate()
2.Settheloadreferences using ProMechloadReferencesSet().
3.Settheloadtype-specific datausingoneoftheProMechload*dataSet()
functions.
4.Assigntheloadtoaloadsetusing ProMechloadLoadsetAssign().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2.Settheloadreferences using ProMechloadReferencesSet().
3.Settheloadtype-specific datausingoneoftheProMechload*dataSet()
functions.
4.Assigntheloadtoaloadsetusing ProMechloadLoadsetAssign().
5.Checkthestatusoftheloadusing ProMechitemStatusGet().
6.Completetheloadsetusing ProMechitemUpdateComplete().
Functions Introduced:
•ProMechloadFor cedataSet()
•ProMechloadPr essur edataSet()
•ProMechloadBearingdataSet()
•ProMechloadCentrifugaldataSet()
•ProMechloadGravitydataSet()
•ProMechloadStructtempdataSet()
•ProMechloadMecttempdataSet()
•ProMechloadHeatdataSet()
•ProMechloadRefere ncesSet()
•ProMechloadLoadsetAssign()
UsethefunctionProMechloadForcedataSet() tosetthedataandthe
contentsoftheforceloadstructure.
CreoSimulate:Items 1845Usethefunction ProMechloadPressuredataSet() tosetthedataand
contentsofthepressureloadstructure.
Usethefunction ProMechloadBearingdataSet() tosetthedataand
contentsofthepressureloadstructure.
Usethefunction ProMechloadCentrifugaldataSet() tosetthedataandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontentsofthepressureloadstructure.
Usethefunction ProMechloadBearingdataSet() tosetthedataand
contentsofthepressureloadstructure.
Usethefunction ProMechloadCentrifugaldataSet() tosetthedataand
contentsofthecentrifugal loadstructure.
Usethefunction ProMechloadGravitydataSet() tosetthedataforthe
gravityloadstructure.
Usethefunction ProMechloadStructtempdataSet() tosetthedataof
thetemperature load.
Usethefunction ProMechloadMecttempdataSet() tosetthedataofthe
mechanical temperature load.
Usethefunction ProMechloadHeatdataSet() tosetthedataandcontents
oftheheatload.
Usethefunction ProMechloadReferencesSet() tosetthegeometric
references fortheload.Thismustbeavalidsetofreferences fortheloadtype.
Usethefunction ProMechloadLoadsetAssign() toassignaloadtoa
particularloadset.
Note
Thefunctions ProMechloadGlobaltempdataSet() and
ProMechloadExttempdataSet() havebeendeprecated. FromCreo
Parametric onward,theglobaltemperature loadsandexternaltemperature arexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparticularloadset.
Note
Thefunctions ProMechloadGlobaltempdataSet() and
ProMechloadExttempdataSet() havebeendeprecated. FromCreo
Parametric onward,theglobaltemperature loadsandexternaltemperature are
converted toequivalent structuraltemperature loads.Usethefunction
ProMechloadStructtempdataSet() insteadtosetthedataforthe
temperature load.
Example2:ModifyingMagnitudeofForceorPressureLoad
ThesamplecodeinthefilePTMechExMagChange.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_mech_examples/pt_
mech_ex_src showshowtomodifythemagnitude ofaforceorpressureload.
ForceandMomentLoads
Thefunctionsdescribedinthissectionprovidereadaccesstothedataand
contentsofCreoSimulateforceloads.
Functions Introduced:
1846 Creo®Parametric TOOLKIT User’sGuide•ProMechfor cedataAlloc()
•ProMechfor cedataT ypeGet()
•ProMechfor cedataT ypeSet()
•ProMechfor cedataFor ceGet()
•ProMechfor cedataAxialForc eIgnor eflagGet()
•ProMechfor cedataAxialForc eIgnor eflagSet()
•ProMechfor cedataFor ceSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechfor cedataT ypeSet()
•ProMechfor cedataFor ceGet()
•ProMechfor cedataAxialForc eIgnor eflagGet()
•ProMechfor cedataAxialForc eIgnor eflagSet()
•ProMechfor cedataFor ceSet()
•ProMechfor cedataMomentGet()
•ProMechfor cedataAxialMomentIgnore flagGet()
•ProMechfor cedataAxialMomentIgnore flagSet()
•ProMechfor cedataMomentSet()
•ProMechfor cedataRefpntGet()
•ProMechfor cedataRefpntSet()
•ProMechfor cedataFre e()
Thefunction ProMechforcedataAlloc() allocatesmemoryfortheCreo
Simulateforceloaddata.
Thefunction ProMechforcedataTypeGet() specifiesthedistribution ofthe
loadovertheselectedentity.Theoutputargument valuecanhaveoneofthe
followingvalues:
•PRO_MECH_FORCE_AT_POINT—Specifies atotalloadappliedtoasingle
point.
•PRO_MECH_FORCE_TOTAL—Specifies aloaddistributed alongthelength
orareaoftheentitysuchthattheintegraloftheloadovertheselectedentity
equalsthetotalprescribed value.
•PRO_MECH_FORCE_TOTAL_AT_POINT—Specifies aTotalLoadAtPoint
(TLAP)load.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorareaoftheentitysuchthattheintegraloftheloadovertheselectedentity
equalsthetotalprescribed value.
•PRO_MECH_FORCE_TOTAL_AT_POINT—Specifies aTotalLoadAtPoint
(TLAP)load.
•PRO_MECH_FORCE_PER_UNIT—Specifies aloadappliedtoeachunitthat
makesuptheselectedentity.
•PRO_MECH_FORCE_TLAP_UNASSOCIATED—Specifies thattheTotal
LoadAtPoint(TLAP)loadsareun-associated fromtheselectedentitiesinthe
model.
•PRO_MECH_FORCE_TBLAP—Specifies aTotalBearingLoadAtPoint
(TBLAP)forcylindrical surfacesorcurves.
Usefunction ProMechforcedataTypeSet() tosetthetypeoftheforce
load.
CreoSimulate:Items 1847Thefunction ProMechforcedataForceGet() returnsthemagnitude and
directionoftheforceappliedtoageometric entity.
Thefunction ProMechforcedataAxialForceIgnoreflagGet() returns
abooleanflagindicating whethertheaxialforceisignoredincaseofaTotal
BearingLoadAtPoint(TBLAP).
ProMechforcedataAxialForceIgnoreflagSet() setsabooleanflag
indicating whethertheaxialforceistobeappliedincaseofaTotalBearingLoad
AtPoint(TBLAP).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBearingLoadAtPoint(TBLAP).
ProMechforcedataAxialForceIgnoreflagSet() setsabooleanflag
indicating whethertheaxialforceistobeappliedincaseofaTotalBearingLoad
AtPoint(TBLAP).
Thefunction ProMechforcedataForceSet() setstheforcecomponent for
theloaddata.
Thefunction ProMechforcedataMomentGet() returnsthemagnitude and
directionofthemomentappliedtoageometric entity.
ProMechforcedataAxialMomentIgnoreflagGet() returnsaboolean
flagindicating whethertheaxialmomentappliedisignoredincaseofaTotal
BearingLoadAtPoint(TBLAP).
ProMechforcedataAxialMomentIgnoreflagSet() setsabooleanflag
indicating whethertheaxialmomentistobeappliedincaseofaTotalBearing
LoadAtPoint(TBLAP).
Thefunction ProMechforcedataMomentSet() setsthemomentcomponent
fortheloaddata.
Thefunction ProMechforcedataRefpntGet() returnsthereferencepoint
forthespecifiedloadiftheloadwasappliedatagivenpoint.Usethefunction
ProMechforcedataRefpntSet() tosetthereferencepoint.
Thefunction ProMechforcedataFree() freesthememoryoftheforceload
datahandle.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforthespecifiedloadiftheloadwasappliedatagivenpoint.Usethefunction
ProMechforcedataRefpntSet() tosetthereferencepoint.
Thefunction ProMechforcedataFree() freesthememoryoftheforceload
datahandle.
Pressure,Gravity,andBearingLoads
Thefunctionsdescribedinthissectionprovidereadaccesstothedataand
contentsoftheCreoSimulatepressure,gravity,andbearingloads.
Functions Introduced:
•ProMechpre ssuredataAlloc()
•ProMechpre ssuredataV alueGet()
•ProMechpre ssuredataV alueSet()
•ProMechpre ssuredataFr ee()
•ProMechbearingdataV alueGet()
•ProMechbearingdataV alueSet()
•ProMechbearingdataFre e()
•ProMechgravitydataAlloc()
1848 Creo®Parametric TOOLKIT User’sGuide•ProMechgravitydataV alueGet()
•ProMechgravitydataV alueSet()
•ProMechgravitydataFre e()
Thefunction ProMechpressuredataAlloc() allocatesmemoryforthe
CreoSimulatepressureloaddata.
Thefunction ProMechpressuredataValueGet() returnsthevalueofthe
pressureload.
Thefunction ProMechpressuredataValueSet() setsthevalueofthe
pressureload.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulatepressureloaddata.
Thefunction ProMechpressuredataValueGet() returnsthevalueofthe
pressureload.
Thefunction ProMechpressuredataValueSet() setsthevalueofthe
pressureload.
Thefunction ProMechpressuredataFree() freesthememoryofthe
pressureloaddatahandle.
Thefunction ProMechbearingdataValueGet() returnsthevalueofthe
bearingload.
Thefunction ProMechbearingdataValueSet() setsthevalueofthe
bearingload.
Thefunction ProMechbearingdataFree() freesthememoryofthebearing
loaddatahandle.
Thefunction ProMechgravitydataAlloc() allocatesmemoryfortheCreo
Simulategravityloaddata.
Thefunction ProMechgravitydataValueGet() returnsthevalueofthe
gravityload.
Thefunction ProMechgravitydataValueSet() setsthevalueofthe
gravityload.
Thefunction ProMechgravitydataFree() freesthememoryofthegravity
loaddatahandle.
Centrifugal Loads
Acentrifugal loadresultsduetotherigidbodyrotationofthemodelandis
appliedontheentiremodel.Thefunctionsdescribedinthissectionprovidereadxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloaddatahandle.
Centrifugal Loads
Acentrifugal loadresultsduetotherigidbodyrotationofthemodelandis
appliedontheentiremodel.Thefunctionsdescribedinthissectionprovideread
accesstothedataandstructureoftheCreoSimulatecentrifugal loads.
Functions Introduced:
•ProMechcentrifugaldataAlloc()
•ProMechcentrifugaldataV elocityGet()
•ProMechcentrifugaldataV elocitySet()
•ProMechcentrifugaldataAccelerationGet()
•ProMechcentrifugaldataAccelerationSet()
CreoSimulate:Items 1849•ProMechcentrifugaldataFr ee()
Thefunction ProMechcentrifugaldataAlloc() allocatesmemoryforthe
centrifugal loaddata.
Thefunction ProMechcentrifugaldataVelocityGet() returnsthe
magnitude anddirectionoftheangularvelocityofthecentrifugal load.
Thefunction ProMechcentrifugaldataVelocitySet() setsthevalueof
theangularvelocityofthecentrifugal load.
Thefunction ProMechcentrifugaldataAccelerationGet() returns
theacceleration vectorforthecentrifugal load.Theacceleration vectoristheratexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheangularvelocityofthecentrifugal load.
Thefunction ProMechcentrifugaldataAccelerationGet() returns
theacceleration vectorforthecentrifugal load.Theacceleration vectoristherate
ofchangeoftheangularvelocityvector,andrepresents achangeinmagnitude or
directionoftheangularvelocity.
Thefunction ProMechcentrifugaldataAccelerationSet() setsthe
acceleration vectorforthecentrifugal load.
Thefunction ProMechcentrifugaldataFree() releasesthememory
assignedtothecentrifugal loaddata.
Temperature Loads
Temperature loadsenableyoutosimulateatemperature changeoveryourmodel.
Temperature loadsprovidevaluableinformation onhowthestructureofyour
modeldeformsduetoaparticulartemperature change.
CreoSimulateTemperature Loads
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
CreoSimulatetemperature loads.
Functions Introduced:
•ProMechtemperatur edataAlloc()
•ProMechtemperatur edataV alueGet()
•ProMechtemperatur edataV alueSet()
•ProMechtemperatur edataFr ee()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulatetemperature loads.
Functions Introduced:
•ProMechtemperatur edataAlloc()
•ProMechtemperatur edataV alueGet()
•ProMechtemperatur edataV alueSet()
•ProMechtemperatur edataFr ee()
Thefunction ProMechtemperaturedataAlloc() allocatesmemoryforthe
temperature loaddata.
Thefunction ProMechtemperaturedataValueGet() returnsastructure
thatcontainsthevalueofthetemperature andthespatialvariationoftheload.
Thefunction ProMechtemperaturedataValueSet() setsthevalueofthe
temperature andthespatialvariationoftheload.
Thefunction ProMechtemperaturedataFree() releasesthememory
assignedtothetemperature loaddata.
1850 Creo®Parametric TOOLKIT User’sGuideStructuralTemperature Loads
Structural temperature loadsarethermalloadsresultingfromatemperature
changeoverageometric entityorasetofgeometric entities.Thisloadisapplied
tocurvesorsurfaces.Ifthemodelisanassembly,thestructuralloadcanbe
appliedtospecificassemblycomponents.
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtocurvesorsurfaces.Ifthemodelisanassembly,thestructuralloadcanbe
appliedtospecificassemblycomponents.
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
theCreoSimulatestructuraltemperature loads.
Functions Introduced:
•ProMechstructtempdataAlloc()
•ProMechstructtempdataV alueGet()
•ProMechstructtempdataV alueSet()
•ProMechstructtempdataReftempGet()
•ProMechstructtempdataReftempSet()
•ProMechstructtempdataFr ee()
Thefunction ProMechstructtempdataAlloc() allocatesmemoryforthe
structuraltemperature loaddata.
Thefunction ProMechstructtempdataValueGet() returnsastructure
containing thetemperature appliedtotheloadandthevariationoftheload.
Thefunction ProMechstructtempdataValueSet() setsthevalueofthe
structuraltemperature data.
Thefunction ProMechstructtempdataReftempGet() returnsthe
referencetemperature ofthestructuraltemperature object.Thereference
temperature isthestress-free temperature forthemodel.
Thefunction ProMechstructtempdataReftempSet() setsthereferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferencetemperature ofthestructuraltemperature object.Thereference
temperature isthestress-free temperature forthemodel.
Thefunction ProMechstructtempdataReftempSet() setsthereference
temperature ofthestructuraltemperature data.
Thefunction ProMechstructtempdataFree() releasesthememory
assignedtostructuraltemperature loaddata.
Note
FromCreoParametric onward,theglobalandexternaltemperature loadsare
converted toequivalent structuraltemperature loads.Thefunctionspreviously
availabletoaccessCreoSimulateglobalandexternaltemperature loadshave
beendeprecated. Thestructuraltemperature loadfunctionssupersede the
globalandexternaltemperature loadfunctions.
CreoSimulate:Items 1851GlobalTemperature Loads
Aglobaltemperature loadspecifiesathermalloadresultingfromatemperature
changeovertheentiremodel.
FromCreoParametric onward,theglobaltemperature loadsareconverted to
equivalent structuraltemperature loads.Thedatastructure
ProMechglobaltempdata forglobaltemperature loadsinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxchangeovertheentiremodel.
FromCreoParametric onward,theglobaltemperature loadsareconverted to
equivalent structuraltemperature loads.Thedatastructure
ProMechglobaltempdata forglobaltemperature loadsin
ProMechLoad.h hasbeendeprecated. Functions previously availabletoaccess
CreoSimulateglobaltemperature loadhavealsobeendeprecated. Usethe
structuraltemperature loaddatastructure ProMechstructtempdata andthe
functionsthataccessthisdatastructureinstead.For moreinformation onstructural
loadfunctions, seethesectionStructural Temperature Loadsonpage1851.
Thefolowingfunctionshavebeendeprecated:
•ProMechglobaltempdataAlloc()
•ProMechglobaltempdataReftempGet()
•ProMechglobaltempdataReftempSet()
•ProMechglobaltempdataV alueGet()
•ProMechglobaltempdataV alueSet()
•ProMechglobaltempdataFree()
MEC/TTemperature Loads
TheMEC/Ttemperature loadappliesatemperature loadacrosstheentiremodel
basedonatemperature fielddeveloped fromtheresultsofasteadystateorxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechglobaltempdataFree()
MEC/TTemperature Loads
TheMEC/Ttemperature loadappliesatemperature loadacrosstheentiremodel
basedonatemperature fielddeveloped fromtheresultsofasteadystateor
transientthermalanalysis.Thefunctionsdescribedinthissectionprovidereadand
writeaccesstothedataandcontentsoftheMEC/Ttemperature loads.
Functions Introduced:
•ProMechmecttempdataAlloc()
•ProMechmecttempdataAnalysisidGet()
•ProMechmecttempdataAnalysisidSet()
•ProMechmecttempdataLoadsetidGet()
•ProMechmecttempdataLoadsetidSet()
•ProMechmecttempdataLoadsetSet()
•ProMechmecttempdataLoadsetGet()
•ProMechmecttempdataReftempGet()
•ProMechmecttempdataReftempSet()
•ProMechmecttempdataTi mestepGet()
•ProMechmecttempdataTi mestepSet()
1852 Creo®Parametric TOOLKIT User’sGuide•ProMechmecttempdataDesignstudySet()
•ProMechmecttempdataDesignstudyGet()
•ProMechmecttempdataFr ee()
Thefunction ProMechmecttempdataAlloc() allocatesmemoryforthe
MEC/Ttemperature datastructure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmecttempdataDesignstudyGet()
•ProMechmecttempdataFr ee()
Thefunction ProMechmecttempdataAlloc() allocatesmemoryforthe
MEC/Ttemperature datastructure.
Thefunction ProMechmecttempdataAnalysisidGet() returnstheIDof
thethermalanalysisdefinedforthemodel.
Thefunction ProMechmecttempdataAnalysisidSet() setstheIDofthe
thermalanalysis.
Thefunction ProMechmecttempdataLoadsetidGet() returnstheIDof
theloadset.Theloadsetisapplicable onlyiftheMEC/Ttemperature loadis
comingfromasteadystatethermalanalysis.
Thefunction ProMechmecttempdataLoadsetidSet() setstheIDofthe
loadset.
Thefunction ProMechmecttempdataLoadsetGet() returnstheloadsetin
theformoftheProMechObjectref objectfortheMEC/Ttemperature data.
Thefunction ProMechmecttempdataLoadsetSet() assignstheloadset.
Thefunction ProMechmecttempdataReftempGet() returnsthereference
temperature fortheMEC/Ttemperature data.
Thefunction ProMechmecttempdataReftempSet() setsthereference
temperature.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechmecttempdataReftempGet() returnsthereference
temperature fortheMEC/Ttemperature data.
Thefunction ProMechmecttempdataReftempSet() setsthereference
temperature.
Thefunction ProMechmecttempdataTimestepGet() returnsthetimestep
valueiftheMEC/Ttemperature loadiscomingfromatransientthermalanalysis.
Thefunction ProMechmecttempdataTimestepSet() setsthetimestep
value.
Thefunction ProMechmecttempdataDesignstudyGet() returnsthe
nameofthedesignstudyfortheMEC/Ttemperature load.
Thefunction ProMechmecttempdataDesignstudySet() assignsthe
designstudynamefortheMEC/Ttemperature load.
Thefunction ProMechmecttempdataFree() releasesthememoryassigned
totheMEC/Ttemperature datastructure.
ExternalTemperature Loads
Anexternaltemperature loadinvolvesimporting anexternally calculated or
measuredtemperature fieldasatemperature load.Theexternaltemperature field
mustcontainconnectivity ofalinearsolidelementmesh,nodelocations,and
temperature valuesatthenodes.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmeasuredtemperature fieldasatemperature load.Theexternaltemperature field
mustcontainconnectivity ofalinearsolidelementmesh,nodelocations,and
temperature valuesatthenodes.
CreoSimulate:Items 1853FromCreoParametric onward,theexternaltemperature loadsareconverted to
equivalent structuraltemperature loads.Thedatastructure
ProMechexttempdata forexternaltemperature loadsinProMechLoad.h
hasbeendeprecated. Functions previously availabletoaccessCreoSimulate
externaltemperature loadhavealsobeendeprecated. Usethestructural
temperature loaddatastructure ProMechstructtempdata andthefunctions
thataccessthisdatastructureinstead.Formoreinformation onstructuralload
functions, seethesectionStructural Temperature Loadsonpage1851
Thefollowingfunctionsaredeprecated:
•ProMechexttempdataAlloc()
•ProMechexttempdataReftempGet()
•ProMechexttempdataReftempSet()
•ProMechexttempdataFemneutralfileGet()
•ProMechexttempdataFemneutralfileSet()
•ProMechexttempdataFree()
HeatLoadsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechexttempdataReftempGet()
•ProMechexttempdataReftempSet()
•ProMechexttempdataFemneutralfileGet()
•ProMechexttempdataFemneutralfileSet()
•ProMechexttempdataFree()
HeatLoads
Heatloadsareentityloadsandcanbeplacedononeormorepoints,edgescurves,
surfaces,components, orvolumes.Heatloadsprovidelocalheatsourcesandsinks
forthemodelandcanbeusedtomodelinternalheatgeneration orflux.
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
theCreoSimulateheatloads.
Functions Introduced:
•ProMechheatdataAlloc()
•ProMechheatdataT ypeGet()
•ProMechheatdataT ypeSet()
•ProMechheatdataV alueGet()
•ProMechheatdataV alueSet()
•ProMechheatdataT emporalvariationGet()
•ProMechheatdataT emporalvariationSet()
•ProMechheatdataFr ee()
Functions Superseded:
•ProMechheatdataTimefunctionidGet()
•ProMechheatdataTimefunctionidSet()
Thefunction ProMechheatdataAlloc() allocatesmemoryfortheheatload
data.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechheatdataFr ee()
Functions Superseded:
•ProMechheatdataTimefunctionidGet()
•ProMechheatdataTimefunctionidSet()
Thefunction ProMechheatdataAlloc() allocatesmemoryfortheheatload
data.
1854 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechheatdataTypeGet() returnsthetypeofdistribution
fortheheatloadacrossthegeometric entities.Theoutputargument typecanhave
oneofthefollowingvalues:
•PRO_MECH_HEAT_TOTAL—Specifies thattheheatloadisdistributed along
thelengthorareaoftheentitysuchthattheintegraloftheloadoverthe
selectedentityequalsthetotalprescribed value.
•PRO_MECH_HEAT_PER_UNIT—Specifies thattheheatloadisappliedto
eachunitthatmakesuptheselectedload.
•PRO_MECH_HEAT_AT_POINT—Specifies thattheheatloadisappliedtoa
singlepoint,afeature,orapatternofpoints.
•PRO_MECH_HEAT_TOTAL_GEN—Specifies thattheheatloadisappliedto
topandsublevelassemblies orcomponents.
•PRO_MECH_HEAT_NONE—No heatloadtypeisassigned.
Thefunction ProMechheatdataTypeSet() setsthetypeofheatload.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtopandsublevelassemblies orcomponents.
•PRO_MECH_HEAT_NONE—No heatloadtypeisassigned.
Thefunction ProMechheatdataTypeSet() setsthetypeofheatload.
Thefunction ProMechheatdataValueGet() returnsthetotalordistributed
heattransferrate,depending onthedistribution optionspecifiedfortheentities.
Thefunction ProMechheatdataValueSet()sets thevalueoftheheatload.
Thefunction ProMechheatdataTemporalvariationGet() returnsthe
timevariationforthespecifiedheatload.
ProMechheatdataTemporalvariationSet() setsthetimevariationfor
thespecifiedheatload.
Thefunctions ProMechheatdataTimefunctionidGet() and
ProMechheatdataTimefunctionidSet() havebeendeprecated. Usethe
functions ProMechheatdataTemporalvariationGet() and
ProMechheatdataTemporalvariationSet() instead.
Thefunction ProMechheatdataFree() releasesthememoryassignedtothe
heatloaddata.
CreoSimulateLoadSets
Aloadsetisacollection ofloadsthatacttogetheronthemodel.Thefunctions
describedinthissectionprovideaccesstodataandcontentsoftheCreoSimulatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxheatloaddata.
CreoSimulateLoadSets
Aloadsetisacollection ofloadsthatacttogetheronthemodel.Thefunctions
describedinthissectionprovideaccesstodataandcontentsoftheCreoSimulate
loadsetitems.LoadsetsusetheProType fieldintheProMechitem structure
asPRO_SIMULATION_LOAD_SET.
Functions Introduced:
•ProMechloadsetDescriptionGet()
•ProMechloadsetDescriptionSet()
•ProMechloadsetLoadsGet()
CreoSimulate:Items 1855•ProMechloadsetT ypeGet()
•ProMechloadLoadsetAssign()
Thefunction ProMechloadsetDescriptionGet() returnsthenameand
thedescription ofthespecifiedloadset.
Thefunction ProMechloadsetDescriptionSet() setsthedescription of
thespecifiedloadset.
Thefunction ProMechloadsetLoadsGet() returnsanarraycontaining the
differentloadsthatareincludedinthespecifiedloadset.
Thefunction ProMechloadsetTypeGet() returnsthetypeofthespecified
loadset.Thetypecanbeasfollows:
•PRO_MECH_LOADSET_STRUCTURAL—Specifies astructuralloadset.
•PRO_MECH_LOADSET_THERMAL—Specifies athermalloadset.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxloadset.Thetypecanbeasfollows:
•PRO_MECH_LOADSET_STRUCTURAL—Specifies astructuralloadset.
•PRO_MECH_LOADSET_THERMAL—Specifies athermalloadset.
Usethefunction ProMechloadLoadsetAssign() toassignaloadtoa
particularloadset.
CreoSimulateConstraints
Toperformanalysesonthemodelsyouneedtoapplyconstraints toatleastone
areaofthemodel.Theconstraints areassociated withthemodelgeometryandcan
beappliedtoasinglegeometric entityortomultipleentities.
AccessingtheCreoSimulateConstraints
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
theCreoSimulateconstraints item.Constraints usetheProType fieldinthe
ProMechitem structureasPRO_SIMULATION_CONSTRAINTS.
Functions Introduced:
•ProMechconstrT ypeGet()
•ProMechconstrConvectiondataGet()
•ProMechconstrRadiationdataGet()
•ProMechconstrRadiationdataSet()
•ProMechconstrDisplacementdataGet()
•ProMechconstrSymmetrydataGet()
•ProMechconstrT emperatur edataGet()
•ProMechconstrThermalsymmetrydataGet()
•ProMechconstrRefer encesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechconstrDisplacementdataGet()
•ProMechconstrSymmetrydataGet()
•ProMechconstrT emperatur edataGet()
•ProMechconstrThermalsymmetrydataGet()
•ProMechconstrRefer encesGet()
•ProMechconstrConstrsetsGet()
1856 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechconstrTypeGet() returnsthetypeofconstraint
containedinthestructure ProModelItem. Theoutputcanhaveoneofthe
followingvalues:
•PRO_MECH_CONSTR_CONVECTION—Specifies alinearconvective heat
exchangeconditionforoneormoregeometric ormodelentitiesforthermal
mode.Usethefunction ProMechconstrConvectiondataGet() to
accessthedataandcontentsofthisconstraint type.
•PRO_MECH_CONSTR_DISPLACEMENT—Specifies adisplacement
constraint forstructuralmode.Usethefunction
ProMechconstrDisplacementdataGet() toaccessthedataand
contentsofthisconstraint type.
•PRO_MECH_CONSTR_SYMMETRY—Specifies cyclicsymmetry forstructural
mode.Usethefunction ProMechconstrSymmetrydataGet() toaccess
thedataandcontentsofthisconstraint type.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontentsofthisconstraint type.
•PRO_MECH_CONSTR_SYMMETRY—Specifies cyclicsymmetry forstructural
mode.Usethefunction ProMechconstrSymmetrydataGet() toaccess
thedataandcontentsofthisconstraint type.
•PRO_MECH_CONSTR_RADIATION—Specifies athermalradiationexchange
betweenthemodelsurfaceandthesurroundings. Usethefunction
ProMechconstrRadiationdataGet() toaccessthedataandcontents
ofradiationconstraint typefromtheCreoSimulateitem.Thefunction
ProMechconstrRadiationdataSet() setsthehandletothedataand
contentsofradiationconstraint typefromtheCreoSimulateitem.
•PRO_MECH_CONSTR_TEMPERATURE—Specifies atemperature boundary
conditionforoneormoregeometric ormodelentitiesforthermalmode.Use
thefunction to()toaccessthedataandcontentsofthisconstraint type.
•PRO_MECH_CONSTR_SYMMETRY_THERM—Specifies acyclicsymmetry
thermalconstraint forthermalmode.Usethefunction
ProMechconstrThermalsymmetrydataGet() toaccessthedataand
contentsofthisconstraint type.
•PRO_MECH_CONSTR_INIT_TEMP—Specifies theinitialtemperaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthermalconstraint forthermalmode.Usethefunction
ProMechconstrThermalsymmetrydataGet() toaccessthedataand
contentsofthisconstraint type.
•PRO_MECH_CONSTR_INIT_TEMP—Specifies theinitialtemperature
boundaryconditionforoneormoregeometric entitiesforthermalmode.
Thefunction ProMechconstrReferencesGet() returnsthegeometric
references. Itspecifiesthegeometric references usedtodefinetheconstraint.
Thefunction ProMechconstrConstrsetsGet() returnstheconstraint set
(s)thatcontainthegivenconstraint. Currently,CreoSimulateallowsaconstraint
tobeassignedtoonlyoneset.
CreoSimulate:Items 1857ModifyingtheCreoSimulateConstraints
Thefunctionsinthissectionassignloaddatatoaconstraint inthemodel.The
loadshouldhavebeenalreadycreatedusing ProMechitemCreate(). The
changesmadeusingthesefunctionswillnotbereflectedintheuserinterfaceuntil
youcallProMechitemUpdateComplete().
Note
Onceaconstraint hasbeencreatedandupdatedsuccessfully ,itsconstraint
typecannotbechanged.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyoucallProMechitemUpdateComplete().
Note
Onceaconstraint hasbeencreatedandupdatedsuccessfully ,itsconstraint
typecannotbechanged.
Thefollowingistheprocedure tocreateanewuser-visibleconstraint:
1.Createtheloadusing ProMechitemCreate().
2.Settheconstraint references using ProMechconstrReferencesSet().
3.Settheconstraint type-specific datausingoneofthe
ProMechconstr*dataSet() functions.
4.Assigntheconstraint toaconstraint setusing
ProMechconstrConstrsetAssign().
5.Checkthestatusoftheconstraint using ProMechitemStatusGet().
6.Completetheconstraint using ProMechitemUpdateComplete().
Functions Introduced:
•ProMechconstrConvectiondataSet()
•ProMechconstrDisplacementdataSet()
•ProMechconstrSymmetrydataSet()
•ProMechconstrT emperatur edataSet()
•ProMechconstrThermalsymmetrydataSet()
•ProMechconstrRefer encesSet()
•ProMechconstrConstrsetAssign()
Thefunction ProMechconstrConvectiondataSet() setstheconvection
constraint data.
Thefunction ProMechconstrDisplacementdataSet() setsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechconstrRefer encesSet()
•ProMechconstrConstrsetAssign()
Thefunction ProMechconstrConvectiondataSet() setstheconvection
constraint data.
Thefunction ProMechconstrDisplacementdataSet() setsthe
displacement constraint data.
Thefunction ProMechconstrRadiationdataSet() setsthevalueforthe
radiationconstraint data.
Thefunction ProMechconstrSymmetrydataSet() setsthevalueofthe
symmetry constraint data.
1858 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechconstrTemperaturedataSet() setsthevalueof
thetemperature constraint data.
Thefunction ProMechconstrThermalsymmetrydataSet() setsthe
valueofthethermalsymmetry constraint data.
Thefunction ProMechconstrReferencesSet() setsthevalueofthe
constraint geometric references. Thismustbeavalidsetofreferences forthe
constraint type.
Usethefunction ProMechconstrConstrsetAssign() toassigna
constraint toaconstraint set.
Convection Constraints
Convection constraints specifyaboundaryconditionontheconvective heatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconstraint type.
Usethefunction ProMechconstrConstrsetAssign() toassigna
constraint toaconstraint set.
Convection Constraints
Convection constraints specifyaboundaryconditionontheconvective heat
exchangebetweenamovingfluidandgeometric entitiesand/orelemententities
withinyourmodel.
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
theCreoSimulateconvection constraints. Youcandefinethevalueofthe
convection constraint asafunctionoftemperature.
Functions Introduced:
•ProMechconvectiondataAlloc()
•ProMechconvectiondataBulktempGet()
•ProMechconvectiondataBulktempSet()
•ProMechconvectiondataBulktempUnset()
•ProMechconvectiondataFilmcoefficientGet()
•ProMechconvectiondataFilmcoefficientSet()
•ProMechconvectiondataT emperatur edependenceGet()
•ProMechconvectiondataT emperatur edependenceSet()
•ProMechconvectiondataT emporalvariationGet()
•ProMechconvectiondataT emporalvariationSet()
•ProMechconvectiondataFr ee()
Thefunction ProMechconvectiondataAlloc() allocatesmemoryforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechconvectiondataT emporalvariationGet()
•ProMechconvectiondataT emporalvariationSet()
•ProMechconvectiondataFr ee()
Thefunction ProMechconvectiondataAlloc() allocatesmemoryforthe
convection loaddata.
Thefunction ProMechconvectiondataBulktempGet() returnsthevalue
ofthebulktemperature. Thebulktemperature specifiesthetemperature ofthe
fluidincontactwiththesurface,duringconvective heattransferthroughasurface.
Thefunction ProMechconvectiondataBulktempSet() setsthevalueof
thebulktemperature.
CreoSimulate:Items 1859Thefunction ProMechconvectiondataFilmcoefficientGet() returns
thevalueofthefilmcoefficient.Thefilmcoefficientspecifiestheconstantof
proportionality betweenthefluxthroughthesurfaceandthedifferencebetween
thesurfacetemperature andthebulktemperature, inconvective heattransfer
throughasurface.
Usethefunction ProMechconvectiondataFilmcoefficientSet() to
setthevalueofthefilmcoefficient.
Thefunction
ProMechconvectiondataTemperaturedependenceGet() returnsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthroughasurface.
Usethefunction ProMechconvectiondataFilmcoefficientSet() to
setthevalueofthefilmcoefficient.
Thefunction
ProMechconvectiondataTemperaturedependenceGet() returnsthe
temperature variationoftheconvection constraint. Theconvection constraint is
specifiedasafunctionoftemperature. Usethefunction
ProMechconvectiondataTemperaturedependenceSet() tosetthe
temperature variationfortheconvection constraint.
Thefunction ProMechconvectiondataTemporalvariationGet()
returnsthetemporalvariationfortheconvection constraint. Usethefunction
ProMechconvectiondataTemporalvariationSet() tosetthe
temporalvariationoftheconvection constraint. Thetemporalvariationspecifies
whethertheconvection conditionisinsteadystateorafunctionoftime
Note
Thefunction ProMechconvectiondataTimefunctionidGet() and
ProMechconvectiondataTimefunctionidSet() havebeen
deprecated. Usethefunctions
ProMechconvectiondataTemporalvariationGet() and
ProMechconvectiondataTemporalvariationSet() insteadxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechconvectiondataTimefunctionidSet() havebeen
deprecated. Usethefunctions
ProMechconvectiondataTemporalvariationGet() and
ProMechconvectiondataTemporalvariationSet() instead
Thefunction ProMechconvectiondataFree() releasesthememory
assignedtotheconvection loaddata.
RadiationConstraints
Athermalradiationexchanges heatbetweenthemodelsurfaceandthe
surroundings. Radiationdoesnottakeplacebetweenthemodelsurfaces.Youcan
definethevalueoftheradiationconstraint asafunctionoftemperature.
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
theCreoSimulateradiationconstraints.
Functions Introduced:
•ProMechradiationdataAlloc()
•ProMechradiationdataAmbienttempExprGet()
1860 Creo®Parametric TOOLKIT User’sGuide•ProMechradiationdataAmbienttempExprSet()
•ProMechradiationdataEmissivityGet()
•ProMechradiationdataEmissivitySet()
•ProMechradiationdataT emperatur edependenceGet()
•ProMechradiationdataT emperatur edependenceSet()
•ProMechradiationdataFr ee()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechradiationdataEmissivitySet()
•ProMechradiationdataT emperatur edependenceGet()
•ProMechradiationdataT emperatur edependenceSet()
•ProMechradiationdataFr ee()
Thefunction ProMechradiationdataAlloc() allocatesmemoryforthe
radiationloaddata.
Themodelemitsandabsorbsenergyfromthesurroundings atafixedambient
temperature. Usethefunction
ProMechradiationdataAmbienttempExprGet() togetthevalueofthe
ambienttemperature fortheradiationconstraint data.Usethefunction
ProMechradiationdataAmbienttempExprSet() tosetthevalueofthe
ambienttemperature fortheradiationconstraint data.
Thefunction ProMechradiationdataEmissivityGet() getsthe
emissivity value.Usethefunction
ProMechradiationdataEmissivitySet() tosettheemissivity value.
Thefunction ProMechradiationdataTemperaturedependenceGet()
returnsthetemperature variationoftheradiationconstraint. Usethefunction
ProMechradiationdataTemperaturedependenceSet() tosetthe
temperature variationoftheradiationconstraint.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreturnsthetemperature variationoftheradiationconstraint. Usethefunction
ProMechradiationdataTemperaturedependenceSet() tosetthe
temperature variationoftheradiationconstraint.
Thefunction ProMechradiationdataFree() releasesthememory
assignedtotheradiationloaddata.
Displacement Constraints
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
theCreoSimulatedisplacement constraints.
Functions Introduced:
•ProMechdisplacementdataAlloc()
•ProMechdisplacementdataT ypeGet()
•ProMechdisplacementdataT ypeSet()
•ProMechdisplacementdataCsysGet()
•ProMechdisplacementdataCsysSet()
•ProMechdisplacementdataRotationconstrsGet()
•ProMechdisplacementdataRotationconstrsSet()
•ProMechdisplacementdataT ranslationconstrsGet()
CreoSimulate:Items 1861•ProMechdisplacementdataT ranslationconstrsSet()
•ProMechdisplacementdataFre e()
•ProMechdisplacementre gular constrAlloc()
•ProMechdisplacementre gular constrT ypeSet()
•ProMechdisplacementre gular constrT ypeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechdisplacementdataFre e()
•ProMechdisplacementre gular constrAlloc()
•ProMechdisplacementre gular constrT ypeSet()
•ProMechdisplacementre gular constrT ypeGet()
•ProMechdisplacementre gular constrV alueSet()
•ProMechdisplacementre gular constrV alueGet()
•ProMechdisplacementdataT ranslationinterpr etinradiansflagGet()
•ProMechdisplacementdataT ranslationinterpr etinradiansflagSet()
•ProMechdisplacementre gular constrFre e()
•ProMechdisplacementre gular constrPro arrayFre e()
•ProMechdisplacementdataPinconstrSet()
•ProMechdisplacementdataPinconstrGet()
•ProMechdisplacementpinconstrAlloc()
•ProMechdisplacementdataPinangular constrT ypeSet()
•ProMechdisplacementdataPinangular constrT ypeGet()
•ProMechdisplacementdataPinaxialconstrT ypeSet()
•ProMechdisplacementdataPinaxialconstrT ypeGet()
•ProMechdisplacementpinconstrFre e()
Thefunction ProMechdisplacementdataAlloc() allocatesthememory
forthedisplacement constraint datahandle.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechdisplacementdataPinaxialconstrT ypeGet()
•ProMechdisplacementpinconstrFre e()
Thefunction ProMechdisplacementdataAlloc() allocatesthememory
forthedisplacement constraint datahandle.
Thefunction ProMechdisplacementdataTypeGet() returnsthetypeof
displacement constraint data.Thetypesofdisplacement constraints are:
•PRO_MECH_DISPLACEMENT_REGULAR—Specifies anexternallimitonthe
movement ofaportionofthemodel.
•PRO_MECH_DISPLACEMENT_PLANE—This constraint typeallowsfull
planarmovement, butconstrains anyoff-planedisplacement.
•PRO_MECH_DISPLACEMENT_PIN— Createsaconstraint alonga
cylindrical surfacefor3Dmodels.
•PRO_MECH_DISPLACEMENT_BALL— Createsaconstraint alonga
sphericalsurfacefor3Dmodels.
Usethefunction ProMechdisplacementdataTypeSet() tosetthe
displacement constraint data.
1862 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechdisplacementdataCsysGet() returnsthereference
coordinate systemforthedisplacement constraint. Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplacement constraint data.
1862 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechdisplacementdataCsysGet() returnsthereference
coordinate systemforthedisplacement constraint. Usethefunction
ProMechdisplacementdataCsysSet() tosetthereferencecoordinate
systemforthedisplacement constraint.
Thefunction ProMechdisplacementdataRotationconstrsGet()
returnstherotationalcomponent ofthedisplacement abouttheX,Y,andZaxis.
Usethefunction ProMechdisplacementdataRotationconstrsSet()
tosettherotationalcomponent ofdisplacement.
Thefunction ProMechdisplacementdataTranslationconstrsGet()
returnsthetranslational component ofthedisplacement abouttheX,Y,andZ
directions. Usethefunction
ProMechdisplacementdataTranslationconstrsSet() tosetthe
translational component ofdisplacement.
Thefunction ProMechdisplacementregularconstrAlloc() allocates
memoryfortheregulardisplacement constraint datastructure.
Themethod ProMechdisplacementregularconstrTypeGet() returnsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechdisplacementregularconstrAlloc() allocates
memoryfortheregulardisplacement constraint datastructure.
Themethod ProMechdisplacementregularconstrTypeGet() returns
thetypeofsettingforthedisplacement constraint. Validvaluesare:
•PRO_MECH_DISPLACEMENT_FREE—Allows freedomofmovement inthe
specifieddirection.
•PRO_MECH_DISPLACEMENT_FIXED—Constrains theentity,preventing
movement inthespecifieddirection.
•PRO_MECH_DISPLACEMENT_ENFORCED—Specifies anenforced
displacement orrotationinthespecifieddirection.
Thefunction ProMechdisplacementregularconstrTypeSet() sets
thetypeofthedisplacement constraint.
Thefunction ProMechdisplacementregularconstrValueGet()
returnsthevariationsettingsofthedisplacement ifthetypeofdisplacement
constraint isPRO_MECH_DISPLACEMENT_ENFORCED. Thevariationsettings
areasfollows:
•Anenforceddisplacement valueinlengthunitsforthetranslational
component
•Anenforcedrotationinradiansfortherotationalcomponentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxareasfollows:
•Anenforceddisplacement valueinlengthunitsforthetranslational
component
•Anenforcedrotationinradiansfortherotationalcomponent
Usethefunction ProMechdisplacementregularconstrValueSet() to
setthevariationsettingsofthedisplacement.
Thefunction
ProMechdisplacementdataTranslationinterpretinradians
flagGet() returnsthevalue trueiftheangulartranslations areinterpreted in
radians.Thisisapplicable onlyifthedisplacement isoftypePRO_MECH_
DISPLACEMENT_REGULAR andifcylindrical orsphericalcoordinate systemis
CreoSimulate:Items 1863selectedforthetranslations. Usethefunction
ProMechdisplacementdataTranslationinterpretinradians
flagSet() tosetthevalueoftheflaginterpretangulartranslations inradians.
Thefunction ProMechdisplacementregularconstrFree() releasesthe
memoryassignedtotheregulardisplacement constraint datahandle.
Thefunction ProMechdisplacementregularconstrProarrayFree()
releasesthememoryassignedtoanarrayofregulardisplacement contraints.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmemoryassignedtotheregulardisplacement constraint datahandle.
Thefunction ProMechdisplacementregularconstrProarrayFree()
releasesthememoryassignedtoanarrayofregulardisplacement contraints.
Thefunction ProMechdisplacementpinconstrAlloc() allocates
memoryforthepinconstraint datastructure.
Thefunction ProMechdisplacementdataPinconstrGet() returnsthe
pinconstraint datastructure.Thepinconstraint canhavethefollowingproperties:
•Angular—Allows youtocontroltherotationabouttheaxisoftheselected
cylindrical surface.
•Axial—Allows youtocontroltranslation alongtheaxisoftheselected
cylindrical surface.
Thefunction ProMechdisplacementdataPinconstrSet() setsthe
valueforthepinconstraint datastructure.
Thefunction
ProMechdisplacementdataPinangularconstrTypeGet() returns
theangularconstraint typeforthepinconstraint. Usethefunction
ProMechdisplacementdataPinangularconstrTypeSet() tosetthe
angularconstraint type.Validvaluesare:
•PRO_MECH_DISPLACEMENT_FREE—Allows freedomofmovement inthe
specifieddirection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechdisplacementdataPinangularconstrTypeSet() tosetthe
angularconstraint type.Validvaluesare:
•PRO_MECH_DISPLACEMENT_FREE—Allows freedomofmovement inthe
specifieddirection.
•PRO_MECH_DISPLACEMENT_FIXED—Constrains theentity,preventing
movement inthespecifieddirection.
Note
Theangularconstraint cannotbeoftypePRO_MECH_DISPLACEMENT_
ENFORCED.
Thefunction ProMechdisplacementdataPinaxialconstrTypeGet()
returnstheaxialconstraint typeforthepinconstraint.
Usethemethod
ProMechdisplacementdataPinaxialconstrTypeSet() tosetthe
axialconstraint forthepinconstraint. Validvaluesare:
•PRO_MECH_DISPLACEMENT_FREE—Allows freedomofmovement inthe
specifieddirection.
1864 Creo®Parametric TOOLKIT User’sGuide•PRO_MECH_DISPLACEMENT_FIXED—Constrains theentity,preventing
movement inthespecifieddirection.
Note
Theaxialconstraint cannotbeoftypePRO_MECH_DISPLACEMENT_
ENFORCED.
Usethefunction ProMechdisplacementpinconstrFree() tofreethe
memorycontaining thepinconstraint datastructure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Theaxialconstraint cannotbeoftypePRO_MECH_DISPLACEMENT_
ENFORCED.
Usethefunction ProMechdisplacementpinconstrFree() tofreethe
memorycontaining thepinconstraint datastructure.
Example3:CopyingandAssigningaDisplacement
ConstrainttoaNewReference
ThesamplecodeinthefilePTMechExCopy.c locatedat<creo_toolkit_
loadpoint>/protk_appls/pt_mech_examples
/pt_mech_ex_src showshowtocopyadisplacement constraint andassignit
toanewreference.
SymmetryConstraints
Asymmetry constraint allowsyoutoanalyzeasectionofasymmetric modelthat
simulatesthebehaviorofthewholepartorassemblytowhichitbelongs.
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulatesymmetry constraints.
Functions Introduced:
•ProMechsymmetrydataAlloc()
•ProMechsymmetrydataT ypeGet()
•ProMechsymmetrydataT ypeSet()
•ProMechsymmetrydataAxisGet()
•ProMechsymmetrydataAxisSet()
•ProMechsymmetrydataSide1Get()
•ProMechsymmetrydataSide1Set()
•ProMechsymmetrydataSide2Get()
•ProMechsymmetrydataSide2Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechsymmetrydataAxisGet()
•ProMechsymmetrydataAxisSet()
•ProMechsymmetrydataSide1Get()
•ProMechsymmetrydataSide1Set()
•ProMechsymmetrydataSide2Get()
•ProMechsymmetrydataSide2Set()
•ProMechsymmetrydataFr ee()
Thefunction ProMechsymmetrydataAlloc() allocatesthememoryforthe
symmetry constraint datahandle.
CreoSimulate:Items 1865Thefunction ProMechsymmetrydataTypeGet() returnsthetypeof
symmetry constraint. Theargument typecanhavethefollowingvalues:
•PRO_MECH_SYMMETRY_CYCLIC—Specifies acyclicsymmetry
•PRO_MECH_SYMMETRY_MIRROR—Specifies amirrorsymmetry
Usethefunction ProMechsymmetrydataTypeSet() tosetthetypeof
symmetry constraint.
Thefunction ProMechsymmetrydataAxisGet() returnstheaxisof
symmetry ofthesection.Usethefunction
ProMechsymmetrydataAxisSet() tosettheaxisofsymmetry.
Thefunction ProMechsymmetrydataSide1Get() returnsthefirstsideof
thecutsection.Usethefunction ProMechsymmetrydataSide1Set() toset
thegeometric references ofthefirstside.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechsymmetrydataSide1Get() returnsthefirstsideof
thecutsection.Usethefunction ProMechsymmetrydataSide1Set() toset
thegeometric references ofthefirstside.
Thefunction ProMechsymmetrydataSide2Get() returnsthesecondside
ofthecutsection.Usethefunction ProMechsymmetrydataSide2Set() to
setthegeometric references ofthesecondside.
Thefunction ProMechsymmetrydataFree() releasesthememoryassigned
tothesymmetry constraint datahandle.
CreoSimulateConstraintSets
Aconstraint setisacollection ofconstraints thatacttogether,andatthesame
time,onthemodel.Constraint setsdonotcontainloads.
ThefunctionsreferringtotheCreoSimulateconstraint setsusethestructure
ProModelItem. Constraint setsusetheProType fieldintheProMechitem
structureasPRO_SIMULATION_CONSTR_SET.
Functions Introduced:
•ProMechconstrsetT ypeGet()
•ProMechconstrsetDescriptionGet()
•ProMechconstrsetDescriptionSet()
•ProMechconstrsetConstrsGet()
•ProMechconstrConstrsetAssign()
Thefunction ProMechconstrsetTypeGet() returnsthetypeofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechconstrsetDescriptionGet()
•ProMechconstrsetDescriptionSet()
•ProMechconstrsetConstrsGet()
•ProMechconstrConstrsetAssign()
Thefunction ProMechconstrsetTypeGet() returnsthetypeofthe
constraint setsthatareappliedtothemodel.Thetypesareasfollows:
•PRO_MECH_LOADSET_STRUCTURAL—Specifies astructuralconstraint set.
•PRO_MECH_LOADSET_THERMAL—Specifies athermalconstraint set.
1866 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechconstrsetDescriptionGet() returnsthe
description oftheconstraint set.Thefunction
ProMechconstrsetDescriptionSet() enablesyoutochangethe
description oftheconstraint set.
Thefunction ProMechconstrsetConstrsGet() returnstheconstraints
specifiedintheconstraint set.
Usethefunction ProMechconstrConstrsetAssign() toassigna
constraint toaconstraint set.
CreoSimulateMatrixFunctions
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothematrix
dataoftheCreoSimulatemassproperties, springproperties, beamorientation,
andbeamsectionitems.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionsdescribedinthissectionprovidereadandwriteaccesstothematrix
dataoftheCreoSimulatemassproperties, springproperties, beamorientation,
andbeamsectionitems.
Functions Introduced:
•ProMechMatrixAlloc()
•ProMechMatrixComponentGet()
•ProMechMatrixComponentSet()
•ProMechMatrixFre e()
Thefunction ProMechMatrixAlloc() allocatesmemoryfortheCreo
Simulatematrixhandle.
Thefunction ProMechMatrixComponentGet() getstheindividual matrix
component valueatthegivenindexvalues.Thefunction
ProMathExpressionEvaluate() isusedtoevaluatetheexpression.
Thefunction ProMechMatrixComponentSet() setstheindividual matrix
component valueatthegivenindexvalues.Youcanalsosetanexpression inthe
specifiedindexvalue.
Thefunction ProMechMatrixFree() releasesthememoryassignedforthe
CreoSimulatematrixhandle.
CreoSimulateVectorFunctions
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothevector
dataoftheCreoSimulateamassproperties, springproperties, beamorientation,
andbeamsectionitems.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulateVectorFunctions
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothevector
dataoftheCreoSimulateamassproperties, springproperties, beamorientation,
andbeamsectionitems.
Functions Introduced:
•ProMechV ectorAlloc()
•ProMechV ectorComponentGet()
CreoSimulate:Items 1867•ProMechV ectorComponentSet()
•ProMechV ectorFr ee()
Thefunction ProMechVectorAlloc() allocatesmemoryfortheCreo
Simulatevectorhandle.
Thefunction ProMechVectorComponentGet() getstheindividual vector
component valueatthegivenindexvalues.Thefunction
ProMathExpressionEvaluate() isusedtoevaluatetheexpression.
Thefunction ProMechVectorComponentSet() setstheindividual vector
component valueatthegivenindexvalues.Youcanalsosetanexpression inthe
specifiedindexvalue.
Thefunction ProMechVectorFree() releasesthememoryassignedforthe
CreoSimulatevectorhandle.
CreoSimulateBeams
Abeamisaone-dimensional idealization that,inthreedimensions, represents a
structurewhoselengthismuchgreaterthanitsothertwodimensions.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulatevectorhandle.
CreoSimulateBeams
Abeamisaone-dimensional idealization that,inthreedimensions, represents a
structurewhoselengthismuchgreaterthanitsothertwodimensions.
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsofCreoSimulatebeamitems.BeamsusetheProType fieldinthe
ProMechitem structureasPRO_SIMULATION_BEAM.
Functions Introduced:
•ProMechbeamdataAlloc()
•ProMechbeamT ypeGet()
•ProMechbeamMaterialIdGet()
•ProMechbeamMaterialIdSet()
•ProMechbeamRefer encesGet()
•ProMechbeamRefer encesSet()
•ProMechbeamBeamdataGet()
•ProMechbeamBeamdataSet()
•ProMechbeamT russdataGet()
•ProMechbeamT russdataSet()
•ProMechbeamsideAlloc()
•ProMechbeamdataCompcrvr elGet()
•ProMechbeamdataCompcrvr elSet()
•ProMechbeamdataSidesGet()
•ProMechbeamdataSidesSet()
1868 Creo®Parametric TOOLKIT User’sGuide•ProMechbeamsideOrientGet()
•ProMechbeamsideOrientSet()
•ProMechbeamsideReleaseGet()
•ProMechbeamsideReleaseSet()
•ProMechbeamsideSectionGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1868 Creo®Parametric TOOLKIT User’sGuide•ProMechbeamsideOrientGet()
•ProMechbeamsideOrientSet()
•ProMechbeamsideReleaseGet()
•ProMechbeamsideReleaseSet()
•ProMechbeamsideSectionGet()
•ProMechbeamsideSectionSet()
•ProMechbeamsideFre e()
•ProMechbeamsidePro arrayFre e()
•ProMechbeamdataStr essrecoveryGet()
•ProMechbeamdataStr essrecoverySet()
•ProMechbeamdataXyshearGet()
•ProMechbeamdataXyshearSet()
•ProMechbeamdataXzshearGet()
•ProMechbeamdataXzshearSet()
•ProMechbeamdataYdir ectionGet()
•ProMechbeamdataYdir ectionSet()
•ProMechbeamdataFre e()
•ProMechtrussdataAlloc()
•ProMechtrussdataSectionGet()
•ProMechtrussdataSectionSet()
•ProMechtrussdataFre e()
Thefunction ProMechbeamdataAlloc() allocatesthememoryforthebeam
datahandle.
Thefunction ProMechbeamTypeGet() returnsthetypesofbeams.
Thedifferenttypesofbeamsareasfollows:
•PRO_MECH_BEAM_BEAM—Specifies abeam.Usethefunction
ProMechbeamBeamdataGet() toaccessthedatastructureforthebeam.
Usethefunction ProMechbeamBeamdataSet() tomodifythebeam.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MECH_BEAM_BEAM—Specifies abeam.Usethefunction
ProMechbeamBeamdataGet() toaccessthedatastructureforthebeam.
Usethefunction ProMechbeamBeamdataSet() tomodifythebeam.
•PROMECH_BEAM_TRUSS—Specifies atruss.Usethefunction
ProMechbeamTrussdataGet() toaccessthedatastructureforthetruss.
Usethefunction ProMechbeamTrussdataSet() tomodifythetruss.
Thefunction ProMechbeamMaterialIdGet() returnstheIDoftheCreo
Parametric materialusedtocreatethebeam.Usethefunction
ProMechbeamMaterialIdSet() tosetthematerialIDforthebeam.
CreoSimulate:Items 1869Thefunction ProMechbeamReferencesGet() returnsthestartandend
pointsofthebeamoracurveorsurfaceofthebeam.Usethefunction
ProMechbeamReferencesSet() tosetthebeamreferences.
Thefunction ProMechbeamsideAlloc() allocatesthememoryforthebeam
sidedatahandle.
Thefunction ProMechbeamdataCompcrvrelGet() returnsabooleanthat
indicateswhetherthebeamreleasesareappliedonlytotheendsoftheselected
composite curveortotheendsoftheindividual curves.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechbeamdataCompcrvrelGet() returnsabooleanthat
indicateswhetherthebeamreleasesareappliedonlytotheendsoftheselected
composite curveortotheendsoftheindividual curves.Usethefunction
ProMechbeamdataCompcrvrelSet() tosetwhetherthebeamreleasesare
tobeappliedonlytotheendsoftheselectedcomposite curveortotheendsofthe
individual curves.
Thefunction ProMechbeamdataSidesGet() returnsastructurecontaining
thecrosssectionproperties forbeamelements,theorientation properties forangle
andoffsets,andthedegreesoffreedomateachbeamend.Usethefunction
ProMechbeamdataSidesSet() tosetthecrosssectionproperties and
orientation properties ofthebeamdata.
Thefunction ProMechbeamsideOrientGet() returnstheorientation IDfor
thespecifiedbeamelements.Usethefunction
ProMechbeamsideOrientSet() tosettheorientation ID.
Thefunction ProMechbeamsideReleaseGet() returnsthebeamreleaseID
forthespecifiedbeamelements.Usethefunction
ProMechbeamsideReleaseSet() tosetthebeamreleaseID.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechbeamsideReleaseGet() returnsthebeamreleaseID
forthespecifiedbeamelements.Usethefunction
ProMechbeamsideReleaseSet() tosetthebeamreleaseID.
Thefunction ProMechbeamsideSectionGet() returnsthecrosssectionID
forthespecifiedbeamelements.Usethefunction
ProMechbeamsideSectionSet() tosetthecrosssectionID.
Thefunction ProMechbeamsideFree() releasesthememoryassignedtothe
beamsidehandle.
Thefunction ProMechbeamsideProarrayFree() releasesthememory
assignedtoaProArray ofbeamsidehandles.
Thefunction ProMechbeamdataStressrecoveryGet() returnsaboolean
thatindicateswhetherstressrecoveryisincludedwhilecreatingthebeam.Ifthis
optionisspecifiedastrue,youcanaccessthebeamstressataspecificlocation
onthebeamsection.Usethefunction
ProMechbeamdataStressrecoverySet() tosetthevalueoftheboolean.
Thefunction ProMechbeamdataXyshearGet() returnstheshearrelief
coefficientduetotaperfortheXYplanes.Usethefunction
ProMechbeamdataXyshearSet() tosettheshearreliefcoefficientrelative
totheXYplane.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechbeamdataXyshearGet() returnstheshearrelief
coefficientduetotaperfortheXYplanes.Usethefunction
ProMechbeamdataXyshearSet() tosettheshearreliefcoefficientrelative
totheXYplane.
1870 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechbeamdataXzshearGet() returnstheshearrelief
coefficientduetotaperfortheXZplanes.Usethefunction
ProMechbeamdataXzshearSet() tosettheshearreliefcoefficientrelative
totheXZplane.
Thefunction ProMechbeamdataYdirectionGet() returnstheorientation
oftheXYplaneofabeambydefiningitsY-direction. Usethefunction
ProMechbeamdataYdirectionSet() tosettheY-directionofthebeam.
Thefunction ProMechbeamdataFree() releasesthememoryassignedtothe
beamdatahandle.
Thefunction ProMechtrussdataAlloc() allocatesthememoryforthetruss
datahandle.
Thefunction ProMechtrussdataSectionGet() returnsthecrosssection
IDforthespecifiedtrusselements.Usethefunction
ProMechtrussdataSectionSet() tosetthebeamsectionIDforthetruss
data.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatahandle.
Thefunction ProMechtrussdataSectionGet() returnsthecrosssection
IDforthespecifiedtrusselements.Usethefunction
ProMechtrussdataSectionSet() tosetthebeamsectionIDforthetruss
data.
Thefunction ProMechtrussdataFree() releasesthememoryassignedto
thetrussdatahandle.
CreoSimulateBeams:Sections,
SketchedSections,andGeneralSections
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulatebeamsections,sketchedbeamsections,and
generalbeamsectionsitems.
Functions Introduced:
•ProMechBeamsectionT ypeGet()
•ProMechBeamsectionT ypeSet()
•ProMechBeamsectionIntegerGet()
•ProMechBeamsectionIntegerSet()
•ProMechBeamsectionExpr essionGet()
•ProMechBeamsectionExpr essionSet()
•ProMechBeamsectionMatrixGet()
•ProMechBeamsectionMatrixSet()
•ProMechBeamsectionV ectorGet()
•ProMechBeamsectionV ectorSet()
Thesefunctionsusetheenumerated type
ProMechBeamsectionPropertyType todefinethebeamsectionproperty
type.
CreoSimulate:Items 1871typedef enum
{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechBeamsectionV ectorSet()
Thesefunctionsusetheenumerated type
ProMechBeamsectionPropertyType todefinethebeamsectionproperty
type.
CreoSimulate:Items 1871typedef enum
{
PRO_MECH_BEAMSECTION_SKETCHED_FEATURE_ID =0,
/*int */
PRO_MECH_BEAMSECTION_SKETCHED_SHEARCENTER =1,
/*ProMechVector (2) [Dy, Dz] */
PRO_MECH_BEAMSECTION_SKETCHED_ORIENTTYPE =2,
/*ProMechSketchedSectionOrient (int) */
PRO_MECH_BEAMSECTION_SQUARE_DIMENSION =3,
/*ProMechExpression [a] */
PRO_MECH_BEAMSECTION_RECTANGLE_DIMENSION =4,
/*ProMechVector (2) [b, d]*/
PRO_MECH_BEAMSECTION_HOLLOWRECTANGLE_DIMENSION =5,
/*ProMechVector (4) [b, d,bi, di] */
PRO_MECH_BEAMSECTION_CHANNEL_DIMENSION =6,
/*ProMechVector (4) [b, t,di, tw] */
PRO_MECH_BEAMSECTION_CHANNEL_SHEARFACTOR =7,
/*ProMechVector (2) [Fy, Fz] */
PRO_MECH_BEAMSECTION_IBEAM_DIMENSION =8,
/*ProMechVector (4) [b, t,di, tw] */
PRO_MECH_BEAMSECTION_LSECTION_DIMENSION =9,
/*ProMechVector (4) [b, t,di, tw] */
PRO_MECH_BEAMSECTION_LSECTION_SHEARFACTOR =10,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/*ProMechVector (4) [b, t,di, tw] */
PRO_MECH_BEAMSECTION_LSECTION_DIMENSION =9,
/*ProMechVector (4) [b, t,di, tw] */
PRO_MECH_BEAMSECTION_LSECTION_SHEARFACTOR =10,
/*ProMechVector (2) [Fy, Fz] */
PRO_MECH_BEAMSECTION_DIAMOND_DIMENSION =11,
/*ProMechVector (2) [b, d]*/
PRO_MECH_BEAMSECTION_SOLIDCIRCLE_DIMENSION =12,
/*ProMechExpression [R] */
PRO_MECH_BEAMSECTION_HOLLOWCIRCLE_DIMENSION =13,
/*ProMechVector (2) [R, Ri] */
PRO_MECH_BEAMSECTION_SOLIDELLIPSE_DIMENSION =14,
/*ProMechVector (2) [a, b]*/
PRO_MECH_BEAMSECTION_HOLLOWELLIPSE_DIMENSION =15,
/*ProMechVector (3) [a, b,ai] */
PRO_MECH_BEAMSECTION_HOLLOWELLIPSE_SHEARFACTOR =16,
/*ProMechVector (2) [Fy, Fz] */
PRO_MECH_BEAMSECTION_GENERAL_AREA =17,
/*ProMechExpression [Area] */
PRO_MECH_BEAMSECTION_GENERAL_INERTIA =18,
1872 Creo®Parametric TOOLKIT User’sGuide/*ProMechMatrix (2x2, symmetrical)
[Ixx
Ixy ]
[
Iyy ]
*/
PRO_MECH_BEAMSECTION_GENERAL_TORSIONSTIFFNESS =19,
/*ProMechExpression [j] */xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1872 Creo®Parametric TOOLKIT User’sGuide/*ProMechMatrix (2x2, symmetrical)
[Ixx
Ixy ]
[
Iyy ]
*/
PRO_MECH_BEAMSECTION_GENERAL_TORSIONSTIFFNESS =19,
/*ProMechExpression [j] */
PRO_MECH_BEAMSECTION_GENERAL_SHEARFACTOR =20,
/*ProMechVector (2) [Fy, Fz] */
PRO_MECH_BEAMSECTION_GENERAL_SHEARCENTER =21,
/*ProMechVector (2) [Dy, Dz] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_1 =22,
/*ProMechVector (2) [y1, z1] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_2 =23,
/*ProMechVector (2) [y2, z2] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_3 =24,
/*ProMechVector (2) [y3, z3] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_4 =25,
/*ProMechVector (2) [y4, z4] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_5 =26,
/*ProMechVector (2) [y5, z5] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_6 =27,
/*ProMechVector (2) [y6, z6] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_7 =28,
/*ProMechVector (2) [y7, z7] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_8 =29,
/*ProMechVector (2) [y8, z8] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_9 =30,
/*ProMechVector (2) [y9, z9] */xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/*ProMechVector (2) [y7, z7] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_8 =29,
/*ProMechVector (2) [y8, z8] */
PRO_MECH_BEAMSECTION_GENERAL_POINT_9 =30,
/*ProMechVector (2) [y9, z9] */
PRO_MECH_BEAMSECTION_WARPCOEFFICIENT =31,
/*ProMechExpression
[Warp Coefficient] */
PRO_MECH_BEAMSECTION_NONSTRUCTMASS =32,
/*ProMechExpression [Non-Str Mass] */
PRO_MECH_BEAMSECTION_NONSTRUCTMASSMOMENT =33,
/*ProMechExpression [Non-Str Mass Moment] */
PRO_MECH_BEAMSECTION_CENTERGRAVITY =34
/*ProMechVector (2) [cg:y, cg:z] */
}
ProMechBeamsectionPropertyType;
Thefunction ProMechBeamsectionTypeGet() returnsthetypeofbeam
section.Usethefunction ProMechBeamsectionTypeSet() tosetthetype
ofbeamsection.
Thetypesofbeamsectionsareasfollows:
•PRO_MECH_BEAM_SECTION_SKETCHED—Specifies acrosssection
createdusingeitherthesketchsolidbeamorsketchthinbeamtype.Usethe
CreoSimulate:Items 1873enumerated typeProMechBeamsectionPropertyType togetandset
theproperties ofthesketchedbeamsection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreatedusingeitherthesketchsolidbeamorsketchthinbeamtype.Usethe
CreoSimulate:Items 1873enumerated typeProMechBeamsectionPropertyType togetandset
theproperties ofthesketchedbeamsection.
•PRO_MECH_BEAM_SECTION_SQUARE—Specifies asquarebeamsection
type.Thecrosssectiondimension isspecifiedbythelengthofthesidesofthe
square.Usethefunction ProMechBeamsectionExpressionGet() to
getthesquarebeamsectiondata.Usethefunction
ProMechBeamsectionExpressionSet() tosettheproperties ofthe
squarebeamsection.
•PRO_MECH_BEAM_SECTION_RECTANGLE—Specifies arectangular beam
sectiontype.Thecrosssectiondimension isspecifiedbytheheightandwidth
oftherectangle.Usethefunction ProMechBeamsectionVectorGet()
togettherectangular beamsectiondata.Usethefunction
ProMechBeamsectionVectorSet() tosettheproperties ofthe
rectangular beamsection
•PRO_MECH_BEAM_SECTION_HOLLOW_RECTANGLE—Specifies ahollow
rectangular beamsectiontype.Thecrosssectiondimension forthisbeamtypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrectangular beamsection
•PRO_MECH_BEAM_SECTION_HOLLOW_RECTANGLE—Specifies ahollow
rectangular beamsectiontype.Thecrosssectiondimension forthisbeamtype
isspecifiedbytheOuterheightandwidth,andtheinnerheightandwidthof
therectangle.Usethefunction ProMechBeamsectionVectorGet() to
getthehollowbeamsectiondata.Usethefunction
ProMechBeamsectionVectorSet() tosettheproperties ofthehollow
beamsection.
•PRO_MECH_BEAM_SECTION_CHANNEL—Specifies achannelbeamsection
type.Thecrosssectiondimension isspecifiedbytheflangewidth,flange
thickness, webheight,andwebthickness. Usethefunction
ProMechBeamsectionVectorGet() togetthechannelsectiondata.
Usethefunction ProMechBeamsectionVectorSet() tosetthe
properties ofthechannelbeamsection.
•PRO_MECH_BEAM_SECTION_I_BEAM—Specifies anL-sectionbeam
sectiontype.Thecrosssectiondimension forthisbeamtypeisspecifiedby
theoverallflangewidth,flangethickness, webheight,andwebthickness. Use
thefunction ProMechBeamsectionVectorGet() togettheL-sectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectiontype.Thecrosssectiondimension forthisbeamtypeisspecifiedby
theoverallflangewidth,flangethickness, webheight,andwebthickness. Use
thefunction ProMechBeamsectionVectorGet() togettheL-section
data.Usethefunction ProMechBeamsectionVectorSet() tosetthe
properties oftheL-sectionbeamtype.
•PRO_MECH_BEAM_SECTION_L_SECTION—Specifies anL-sectionbeam
sectiontype.Thecrosssectiondimension forthisbeamtypeisspecifiedby
theoverallflangewidth,flangethickness, webheight,andwebthickness. Use
thefunction ProMechBeamsectionVectorGet() togettheL-section
data.Usethefunction ProMechBeamsectionVectorSet() tosetthe
properties oftheL-sectionbeamtype.
1874 Creo®Parametric TOOLKIT User’sGuide•PRO_MECH_BEAM_SECTION_DIAMOND—Specifies adiamondbeam
sectiontype.Thecrosssectiondimension isspecifiedbythewidthandheight
ofthesides.Usethefunction ProMechBeamsectionVectorGet() to
getthediamondbeamsectiondata.Usethefunction
ProMechBeamsectionVectorSet() tosettheproperties ofthe
diamondbeamsection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthesides.Usethefunction ProMechBeamsectionVectorGet() to
getthediamondbeamsectiondata.Usethefunction
ProMechBeamsectionVectorSet() tosettheproperties ofthe
diamondbeamsection.
•PRO_MECH_BEAM_SECTION_SOLID_CIRCLE—Specifies asolidcircle
beamsectiontype.Thecrosssectiondimension forthisbeamtypeisspecified
bytheradiusofthecircularbeamcross-section. Usethefunction
ProMechsectiondataCirclesectdataGet() toaccessthesolid
circlebeamsectiondatastructure.Usethefunction
ProMechsectiondataCirclesectdataSet() tomodifythesolid
circlebeamsectiondatastructure.
•PRO_MECH_BEAM_SECTION_HOLLOW_CIRCLE—Specifies ahollow
circlebeamsectiontype.Thecrosssectiondimension forthisbeamtypeis
specifiedbytheoutsideradiusandtheinsideradiusofthehollowbeamcross-
section.Usethefunction ProMechBeamsectionVectorGet() togetthe
hollowcirclebeamsectiondata.Usethe
ProMechBeamsectionVectorSet() tosettheproperties ofthehollow
circlebeamsection.
•PRO_MECH_BEAM_SECTION_SOLID_ELLIPSE—Specifies asolidellipsexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhollowcirclebeamsectiondata.Usethe
ProMechBeamsectionVectorSet() tosettheproperties ofthehollow
circlebeamsection.
•PRO_MECH_BEAM_SECTION_SOLID_ELLIPSE—Specifies asolidellipse
beamsectiontype.Thecrosssectiondimension forthisbeamtypeisspecified
bythelengthofthemajoraxisandthelengthoftheminoraxis.Usethe
function ProMechBeamsectionVectorGet() togetthesolidellipse
beamdata.Usethefunction ProMechBeamsectionVectorSet() toset
theproperties ofthesolidellipsebeamsection.
•PRO_MECH_BEAM_SECTION_HOLLOW_ELLIPSE—Specifies ahollow
ellipsebeamsectiontype.Thecrosssectiondimension forthisbeamtypeis
specifiedbythelengthofthemajoraxis,lengthoftheminoraxis,andthe
insidemajoraxis.Usethefunction ProMechBeamsectionVectorGet()
togetthehollowellipsebeamdata.Usethefunction
ProMechBeamsectionVectorSet() tosettheproperties ofthehollow
ellipsebeamsection
•PRO_MECH_BEAM_SECTION_GENERAL—Specifies ageneralbeamsection
type.Ageneralbeamsectiontypedoesnothaveapredefined shape.Usethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxellipsebeamsection
•PRO_MECH_BEAM_SECTION_GENERAL—Specifies ageneralbeamsection
type.Ageneralbeamsectiontypedoesnothaveapredefined shape.Usethe
enumerated typeProMechBeamsectionPropertyType togetandset
theproperties ofthegeneralbeamdata.
CreoSimulate:Items 1875Thefunction ProMechBeamsectionIntegerGet() returnstheinteger
valueofthespecifiedbeamtypeproperty.Usethefunction
ProMechBeamsectionIntegerSet() tosetanintegervalueforthe
specifiedbeamtype.Forexample,youcangetandsetthebeamsketchfeatureid,
thetypeoforientation usedforthesketchedbeamsection,andsoon.
Thefunction ProMechBeamsectionExpressionGet() returnsthe
expression oftypeProMechExpression forthespecifiedbeamsectiontype.
Toevaluatetheexpression usethefunction
ProMathExpressionEvaluate(). Thefunction
ProMechBeamsectionExpressionSet() setstheexpression oftype
ProMechExpression forthespecifiedbeamsectiontype.Forexample,you
cangetandsetthesectionarea,torsionstiffness(Jparameter) ofthebeamsection,
andsoon.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechExpression forthespecifiedbeamsectiontype.Forexample,you
cangetandsetthesectionarea,torsionstiffness(Jparameter) ofthebeamsection,
andsoon.
Thefunction ProMechBeamsectionExpressionGet() returnsthe
expression oftypeProMechExpression forthespecifiedbeamsectiontype.
Toevaluatetheexpression usethefunction
ProMathExpressionEvaluate(). Thefunction
ProMechBeamsectionExpressionSet() setstheexpression oftype
ProMechExpression forthespecifiedbeamsectiontype.Forexample,you
cangetandsetthesectionarea,torsionstiffness(Jparameter) ofthebeamsection,
andsoon.
Thefunction ProMechBeamsectionMatrixGet() returnstheCreo
Simulatematrixhandle ProMechMatrix. Usethefunction
ProMechBeamsectionMatrixSet() tosetthehandleto
ProMechMatrix. Thefunctions ProMechMatrixComponentGet/Set
providereadandwriteaccesstotheindividual matrixcomponents ofthespecified
beamsectionpropertytype.Forexample,youcanget/setthevaluesformoments
ofintertiaIxx,Ixy,andIzz.SeethesectionCreoSimulateMatrixFunctions onxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeamsectionpropertytype.Forexample,youcanget/setthevaluesformoments
ofintertiaIxx,Ixy,andIzz.SeethesectionCreoSimulateMatrixFunctions on
page1867,formoreinformation onhandlingmatrixcomponents.
Thefunction ProMechBeamsectionMatrixGet() automatically allocates
memoryfortheCreoParametric CreoSimulatematrixhandle.Usethefunction
ProMechMatrixFree() tofreetheassignedmemory.
Thefunction ProMechBeamsectionVectorGet() returnstheCreo
Simulatevectorhandle ProMechVector. Usethefunction
ProMechBeamsectionVectorSet() tosetthehandleto
ProMechVector. Thefunctions ProMechVectorComponentGet/Set
providereadandwriteaccesstotheindividual vectorcomponents ofthespecified
beamsectionpropertytype.Forexample,youcanget/setthevaluesforcircular,
square,channel,I-beamsections,andsoon.SeethesectionCreoSimulateVector
Functions onpage1867,formoreinformation onhandlingvectorcomponents.
Thefunction ProMechBeamsectionVectorGet() automatically allocates
thememoryfortheCreoSimulatevectorhandle.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions onpage1867,formoreinformation onhandlingvectorcomponents.
Thefunction ProMechBeamsectionVectorGet() automatically allocates
thememoryfortheCreoSimulatevectorhandle.Usethefunction
ProMechVectorFree() tofreethememory.
1876 Creo®Parametric TOOLKIT User’sGuideCreoSimulateBeamSections
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulatebeamsectionitems.Beamsectionsusethe
ProType fieldintheProMechitem structureasPRO_SIMULATION_BEAM_
SECTION.
Functions Introduced:
•ProMechsectiondataAlloc()
•ProMechbeamsectionDataGet()
•ProMechbeamsectionDataSet()
•ProMechbeamsectionDescriptionGet()
•ProMechbeamsectionDescriptionSet()
•ProMechsectiondataFr ee()
ThebeamsectionfunctionslistedunderFunctions Superseded havebeen
deprecated. UsethefunctionsdescribedinthesectionCreoSimulateBeams:
Sections,SketchedSections,andGeneralSectionsonpage1871instead.
Functions Superseded:
•ProMechsectiondataSectiontypeGet()
•ProMechsectiondataNonstructcogGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSections,SketchedSections,andGeneralSectionsonpage1871instead.
Functions Superseded:
•ProMechsectiondataSectiontypeGet()
•ProMechsectiondataNonstructcogGet()
•ProMechsectiondataNonstructcogSet()
•ProMechsectiondataNonstructmassGet()
•ProMechsectiondataNonstructmassSet()
•ProMechsectiondataNonstructmomentGet()
•ProMechsectiondataNonstructmomentSet()
•ProMechsectiondataW arpcoeffGet()
•ProMechsectiondataW arpcoeffSet()
•ProMechsectiondataChannelsectdataGet()
•ProMechsectiondataChannelsectdataSet()
•ProMechsectiondataCir clesectdataGet()
•ProMechsectiondataCir clesectdataSet()
•ProMechsectiondataDiamondsectdataGet()
•ProMechsectiondataDiamondsectdataSet()
•ProMechsectiondataEllipsesectdataGet()
•ProMechsectiondataEllipsesectdataSet()
•ProMechsectiondataGeneralsectdataGet()
CreoSimulate:Items 1877•ProMechsectiondataGeneralsectdataSet()
•ProMechsectiondataHollowcir clesectdataGet()
•ProMechsectiondataHollowcir clesectdataSet()
•ProMechsectiondataHollowellipsesectdataGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulate:Items 1877•ProMechsectiondataGeneralsectdataSet()
•ProMechsectiondataHollowcir clesectdataGet()
•ProMechsectiondataHollowcir clesectdataSet()
•ProMechsectiondataHollowellipsesectdataGet()
•ProMechsectiondataHollowellipsesectdataSet()
•ProMechsectiondataHollowr ectsectdataGet()
•ProMechsectiondataHollowr ectsectdataSet()
•ProMechsectiondataIbeamsectdataGet()
•ProMechsectiondataIbeamsectdataSet()
•ProMechsectiondataLsectionsectdataGet()
•ProMechsectiondataLsectionsectdataSet()
•ProMechsectiondataRectanglesectdataGet()
•ProMechsectiondataRectanglesectdataSet()
•ProMechsectiondataSketchedsectdataGet()
•ProMechsectiondataSketchedsectdataSet()
•ProMechsectiondataSquare sectdataGet()
•ProMechsectiondataSquare sectdataSet()
Thefunction ProMechsectiondataAlloc() allocatesthememoryforthe
beamsectiondatahandle.
Thefunction ProMechbeamsectionDataGet() providesaccesstothedata
structurecontaining theproperties ofthebeamsectiondata.Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeamsectiondatahandle.
Thefunction ProMechbeamsectionDataGet() providesaccesstothedata
structurecontaining theproperties ofthebeamsectiondata.Usethefunction
ProMechbeamsectionDataSet() tosettheproperties ofthebeamsection
data.
Thefunction ProMechsectiondataSectiontypeGet() returnsthetypes
ofbeamsections.
Thetypesofbeamsectionsareasfollows:
•PRO_MECH_BEAM_SECTION_SKETCHED—Specifies acrosssection
createdusingeitherthesketchsolidbeamorsketchthinbeamtype.Usethe
function ProMechsectiondataSketchedsectdataGet() toaccess
thesketchedbeamdatastructure.Usethefunction
ProMechsectiondataSketchedsectdataSet() tosettheproperties
ofthesketchedbeamdatastructure.
•PRO_MECH_BEAM_SECTION_SQUARE—Specifies asquarebeamsection
type.Thecrosssectiondimension isspecifiedbythelengthofthesidesofthe
square.Usethefunction
ProMechsectiondataSquaresectdataGet() toaccessthesquare
1878 Creo®Parametric TOOLKIT User’sGuidesectiondatastructure.Usethefunction
ProMechsectiondataSquaresectdataSet() tosettheproperties ofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechsectiondataSquaresectdataGet() toaccessthesquare
1878 Creo®Parametric TOOLKIT User’sGuidesectiondatastructure.Usethefunction
ProMechsectiondataSquaresectdataSet() tosettheproperties of
thesquaresectiondatastructure.
•PRO_MECH_BEAM_SECTION_RECTANGLE—Specifies arectangular beam
sectiontype.Thecrosssectiondimension isspecifiedbytheheightandwidth
oftherectangle.Usethefunction
ProMechsectiondataRectanglesectdataGet() toaccessthe
rectangular sectiondatastructure.Usethefunction
ProMechsectiondataRectanglesectdataSet() toaccessthe
rectangular sectiondatastructure.
•PRO_MECH_BEAM_SECTION_HOLLOW_RECTANGLE— Specifiesahollow
rectangular beamsectiontype.Thecrosssectiondimension forthisbeamtype
isspecifiedbytheOuterheightandwidth,andtheinnerheightandwidthof
therectangle.Usethefunction
ProMechsectiondataHollowrectsectdataGet() toaccessthe
hollowsectiondatastructure.Usethefunction
ProMechsectiondataHollowrectsectdataSet() toaccessthe
hollowsectiondatastructure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechsectiondataHollowrectsectdataGet() toaccessthe
hollowsectiondatastructure.Usethefunction
ProMechsectiondataHollowrectsectdataSet() toaccessthe
hollowsectiondatastructure.
•PRO_MECH_BEAM_SECTION_CHANNEL—Specifies achannelbeamsection
type.Thecrosssectiondimension isspecifiedbytheflangewidth,flange
thickness, webheight,andwebthickness. Usethefunction
ProMechsectiondataChannelsectdataGet() toaccessthechannel
sectiondatastructure.Usethefunction
ProMechsectiondataChannelsectdataSet() toaccessthechannel
sectiondatastructure.
•PRO_MECH_BEAM_SECTION_I_BEAM—Specifies anI-beamsectiontype.
Thecrosssectiondimension forthisbeamtypeisspecifiedbytheflange
width,flangethickness, webheight,andwebthickness. Usethefunction
ProMechsectiondataIbeamsectdataGet() toaccesstheI-beam
sectiondatastructure.Usethefunction
ProMechsectiondataIbeamsectdataSet() toaccesstheI-beam
sectiondatastructure.
•PRO_MECH_BEAM_SECTION_L_SECTION—Specifies anL-sectionbeamxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectiondatastructure.Usethefunction
ProMechsectiondataIbeamsectdataSet() toaccesstheI-beam
sectiondatastructure.
•PRO_MECH_BEAM_SECTION_L_SECTION—Specifies anL-sectionbeam
sectiontype.Thecrosssectiondimension forthisbeamtypeisspecifiedby
theoverallflangewidth,flangethickness, webheight,andwebthickness. Use
thefunction ProMechsectiondataLsectionsectdataGet() to
accesstheL-sectiondatastructure.Usethefunction
ProMechsectiondataLsectionsectdataSet() toaccesstheL-
sectiondatastructure.
•PRO_MECH_BEAM_SECTION_DIAMOND—Specifies adiamondbeam
sectiontype.Thecrosssectiondimension isspecifiedbythewidthandheight
CreoSimulate:Items 1879ofthesides.Usethefunction
ProMechsectiondataDiamondsectdataGet() toaccessthe
diamondbeamsectiondatastructure.Usethefunction
ProMechsectiondataDiamondsectdataSet() tomodifythe
diamondbeamsectiondatastructure.
•PRO_MECH_BEAM_SECTION_SOLID_CIRCLE—Specifies asolidcircle
beamsectiontype.Thecrosssectiondimension forthisbeamtypeisspecifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdiamondbeamsectiondatastructure.
•PRO_MECH_BEAM_SECTION_SOLID_CIRCLE—Specifies asolidcircle
beamsectiontype.Thecrosssectiondimension forthisbeamtypeisspecified
bytheradiusofthecircularbeamcross-section. Usethefunction
ProMechsectiondataCirclesectdataGet() toaccessthesolid
circlebeamsectiondatastructure.Usethefunction
ProMechsectiondataCirclesectdataSet() tomodifythesolid
circlebeamsectiondatastructure.
•PRO_MECH_BEAM_SECTION_HOLLOW_CIRCLE—Specifies ahollow
circlebeamsectiontype.Thecrosssectiondimension forthisbeamtypeis
specifiedbytheoutsideradiusandtheinsideradiusofthehollowbeamcross-
section.Usethefunction
ProMechsectiondataHollowcirclesectdataGet() toaccessthe
hollowcirclebeamsectiondatastructure.Usethefunction
ProMechsectiondataHollowcirclesectdataSet() tomodifythe
hollowcirclebeamsectiondatastructure.
•PRO_MECH_BEAM_SECTION_SOLID_ELLIPSE—Specifies asolidellipse
beamsectiontype.Thecrosssectiondimension forthisbeamtypeisspecifiedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhollowcirclebeamsectiondatastructure.
•PRO_MECH_BEAM_SECTION_SOLID_ELLIPSE—Specifies asolidellipse
beamsectiontype.Thecrosssectiondimension forthisbeamtypeisspecified
bythelengthofthemajoraxisandthelengthoftheminoraxis.Usethe
function ProMechsectiondataEllipsesectdataGet() toaccess
thesolidellipsebeamdatastructure.Usethefunction
ProMechsectiondataEllipsesectdataSet() tomodifythesolid
ellipsebeamdatastructure.
•PRO_MECH_BEAM_SECTION_HOLLOW_ELLIPSE—Specifies ahollow
ellipsebeamsectiontype.Thecrosssectiondimension forthisbeamtypeis
specifiedbythelengthofthemajoraxis,lengthoftheminoraxis,andthe
insidemajoraxis.Usethefunction
ProMechsectiondataHollowellipsesectdataGet() toaccess
thehollowellipsebeamdatastructure.Usethefunction
ProMechsectiondataHollowellipsesectdataSet() toaccess
thehollowellipsebeamdatastructure.
•PRO_MECH_BEAM_SECTION_GENERAL—Specifies ageneralbeamsection
type.Ageneralbeamsectiontypedoesnothaveapredefined shape.Usethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthehollowellipsebeamdatastructure.
•PRO_MECH_BEAM_SECTION_GENERAL—Specifies ageneralbeamsection
type.Ageneralbeamsectiontypedoesnothaveapredefined shape.Usethe
function ProMechsectiondataGeneralsectdataGet() toaccess
thegeneralbeamdatastructure.Usethefunction
ProMechsectiondataGeneralsectdataSet() toaccessthegeneral
beamdatastructure.
1880 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechbeamsectionDescriptionGet() returnsthe
description forthespecifiedbeamsection.Usethefunction
ProMechbeamsectionDescriptionSet() tosetthedescription ofthe
specifiedbeamsection.
Thefunction ProMechsectiondataNonstructcogGet() returnstheY
andZcoordinates ofthenon-structural masscenterofgravity.Anon-structural
massisamassthatrespondstogravity,butdoesnotstrengthen thestructure.Non-
structuralmassescanhavedifferentmomentsofinertiaandgravitational centers
thanthespecifiedbeam.Thefunction
ProMechsectiondataNonstructcogSet() setstheYandZcoordinates
ofthenon-structural masscenterofgravity.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthanthespecifiedbeam.Thefunction
ProMechsectiondataNonstructcogSet() setstheYandZcoordinates
ofthenon-structural masscenterofgravity.
Thefunction ProMechsectiondataNonstructmassGet() returnsthe
non-structural massperunitlength.Usethefunction
ProMechsectiondataNonstructmassSet() tosetthenon-structural
massperunitlengththebeamsection.
Thefunction ProMechsectiondataNonstructmomentGet() returnsthe
non-structural massmomentofinertiaperunitlength.Usethefunction
ProMechsectiondataNonstructmomentSet() tosetthenon-structural
massmomentofinertiaperunitlengthofthebeamsection.
Thefunction ProMechsectiondataWarpcoeffGet() returnsthewarp
coefficientofthebeamsection.Usethefunction
ProMechsectiondataWarpcoeffSet() tosetthewarpcoefficientofthe
beamsection.
Thefunction ProMechsectiondataFree() releasesthememoryassignedto
thebeamsectiondata.
SketchedBeamSection
Thesketchedbeamsectionfunctionsdescribedbelowhavebeendeprecated. Use
thefunctionsdescribedinthesectionCreoSimulateBeams:Sections,Sketchedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthebeamsectiondata.
SketchedBeamSection
Thesketchedbeamsectionfunctionsdescribedbelowhavebeendeprecated. Use
thefunctionsdescribedinthesectionCreoSimulateBeams:Sections,Sketched
Sections,andGeneralSectionsonpage1871instead.
Functions Superseded:
•ProMechsketchedsctndataAlloc()
•ProMechsketchedsctndataFeatur eidGet()
•ProMechsketchedsctndataOrienttypeGet()
•ProMechsketchedsctndataOrienttypeSet()
•ProMechsketchedsctndataShear centerGet()
•ProMechsketchedsctndataShear centerSet()
•ProMechsketchedsctndataFre e()
CreoSimulate:Items 1881Thefunction ProMechsketchedsctndataAlloc()allocates thememory
forthesketchedbeamsectiondatahandle.
Thefunction ProMechsketchedsctndataFeatureidGet() returnsthe
sketchfeatureidofthesketchedbeamsection.
Thefunction ProMechsketchedsctndataOrienttypeGet() returnsthe
typeoforientation forthesketchedbeamsection.Thebeamorientation defines
theYdirectionofthebeam,thatis,howitrotatesontheXYplane.Thetypesof
orientation isasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypeoforientation forthesketchedbeamsection.Thebeamorientation defines
theYdirectionofthebeam,thatis,howitrotatesontheXYplane.Thetypesof
orientation isasfollows:
•PRO_MECH_BEAM_SECTION_SKET_XY_AS_YZ—The beamsectionX
andYcoordinates correspond tothebeamYandZdirections, respectively .
•PRO_MECH_BEAM_SECTION_SKET_XY_AS_ZY—The beamsectionX
andYcoordinates correspond tothebeamZandYdirections, respectively .
Usethefunction ProMechsketchedsctndataOrienttypeSet() toset
thetypeoforientation forthesketchedbeamsection.
Thefunction ProMechsketchedsctndataShearcenterGet() returns
theshearcenterofthebeamsection.Theshearcenteristhepointonabeam
sectionaboutwhichthesectionrotatesunderdeflection. Thefunction
ProMechsketchedsctndataShearcenterSet() setstheshearcenterof
thebeamsection.
Thefunction ProMechsketchedsctndataFree() releasesthememory
assignedtosketchedbeamsectiondata.
GeneralBeamSection
Thegeneralbeamsectionfunctionsdescribedbelowhavebeendeprecated. Usexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthebeamsection.
Thefunction ProMechsketchedsctndataFree() releasesthememory
assignedtosketchedbeamsectiondata.
GeneralBeamSection
Thegeneralbeamsectionfunctionsdescribedbelowhavebeendeprecated. Use
thefunctionsdescribedinthesectionCreoSimulateBeams:Sections,Sketched
Sections,andGeneralSectionsonpage1871instead.
Functions Superseded:
•ProMechgeneralsctndataAlloc()
•ProMechgeneralsctndataAre aGet()
•ProMechgeneralsctndataAre aSet()
•ProMechgeneralsctndataAre aproductGet()
•ProMechgeneralsctndataAre aproductSet()
•ProMechgeneralsctndataMomentsGet()
•ProMechgeneralsctndataMomentsSet()
•ProMechgeneralsctndataShear centerGet()
•ProMechgeneralsctndataShear centerSet()
•ProMechgeneralsctndataShearfactorGet()
1882 Creo®Parametric TOOLKIT User’sGuide•ProMechgeneralsctndataShearfactorSet()
•ProMechgeneralsctndataT orsionstiffnessGet()
•ProMechgeneralsctndataT orsionstiffnessSet()
•ProMechgeneralsctndataStr essrecoverypntsGet()
•ProMechgeneralsctndataStr essrecoverypntsSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechgeneralsctndataT orsionstiffnessGet()
•ProMechgeneralsctndataT orsionstiffnessSet()
•ProMechgeneralsctndataStr essrecoverypntsGet()
•ProMechgeneralsctndataStr essrecoverypntsSet()
•ProMechgeneralsctndataFr ee()
Thefunction ProMechgeneralsctndataAlloc() allocatesthememoryfor
thegeneralbeamsectiondatahandle.
Thefunction ProMechgeneralsctndataAreaGet() returnsthecross-
sectionalareaforeachbeamsection.Usethefunction
ProMechgeneralsctndataAreaSet() tosetthecross-sectional areafor
thebeamsection.
Thefunction ProMechgeneralsctndataAreaproductGet() returnsthe
areaproductofthemomentsofinertia.Usethefunction
ProMechgeneralsctndataAreaproductSet() tosettheareaproductof
inertia.
Thefunction ProMechgeneralsctndataMomentsGet() returnsthe
secondmomentsofareaforeachbeamsection.Theseproperties describethe
stiffnessinbendingaboutabeam'sprincipleYandZaxes.Usethefunction
ProMechgeneralsctndataMomentsSet() tosetthesecondmomentsof
areaforeachbeamsection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstiffnessinbendingaboutabeam'sprincipleYandZaxes.Usethefunction
ProMechgeneralsctndataMomentsSet() tosetthesecondmomentsof
areaforeachbeamsection.
Thefunction ProMechgeneralsctndataShearcenterGet() returnsthe
ShearDYandShearDZvalues.Thesevaluesspecifythedistancebetweenshear
center(thepointonabeamsectionaboutwhichthesectionrotatesunder
deflection) andthecentroidofthebeamsection,withrespecttotheprincipalaxes.
Usethefunction ProMechgeneralsctndataShearcenterSet() toset
theShearDYandShearDZvalues.
Thefunction ProMechgeneralsctndataShearfactorGet() returnsthe
ShearFYandShearFZvaluesforthebeamsection.Thesevaluesrepresentthe
ratioofabeam'seffective"sheararea"toitstruecross-sectional areaforshearin
theprincipalYandZdirections. Usethefunction
ProMechgeneralsctndataShearfactorSet() tosettheShearFYand
ShearFZvaluesforthebeamsection.
Thefunction ProMechgeneralsctndataTorsionstiffnessGet()
returnsthesecondpolarmomentofareaforeachbeamsection.Thisproperty
describesthestiffnessintorsion.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxShearFZvaluesforthebeamsection.
Thefunction ProMechgeneralsctndataTorsionstiffnessGet()
returnsthesecondpolarmomentofareaforeachbeamsection.Thisproperty
describesthestiffnessintorsion.Usethefunction
ProMechgeneralsctndataTorsionstiffnessSet() tosetthetorsion
stiffnessforeachbeamsection.
CreoSimulate:Items 1883Thefunction ProMechgeneralsctndataStressrecoverypntsGet()
returnsthestressrecoverypointsofthebeamsection.Usethe
ProMechgeneralsctndataStressrecoverypntsSet() tosetthe
stressrecoverypointsofthebeamsection.
Thefunction ProMechgeneralsctndataFree() releasesthememory
assignedtothesketchedbeamsectiondata.
BeamOrientations
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulatebeamorientations datastructure.Beam
orientations usetheProType fieldintheProMechitem structureasPRO_
SIMULATION_BEAM_ORIENT.
Functions Introduced:
•ProMechbeamorientDescriptionGet()
•ProMechbeamorientDescriptionSet()
•ProMechBeamorientExpre ssionGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSIMULATION_BEAM_ORIENT.
Functions Introduced:
•ProMechbeamorientDescriptionGet()
•ProMechbeamorientDescriptionSet()
•ProMechBeamorientExpre ssionGet()
•ProMechBeamorientExpre ssionSet()
•ProMechBeamorientIntegerGet()
•ProMechBeamorientIntegerSet()
•ProMechBeamorientV ectorGet()
•ProMechBeamorientV ectorSet()
Functions Superseded:
•ProMechbeamorientDataGet()
•ProMechbeamorientDataSet()
•ProMechbeamorientdataT ypeGet()
•ProMechbeamorientdataT ypeSet()
•ProMechbeamorientdataAngleGet()
•ProMechbeamorientdataAngleSet()
•ProMechbeamorientdataV ectorGet()
•ProMechbeamorientdataV ectorSet()
•ProMechbeamorientdataFr ee()
Thefunction ProMechbeamorientDataGet() providesaccesstothedata
structurecontaining theproperties ofthebeamorientation. Usethefunction
ProMechbeamorientDataSet() tosettheproperties ofthebeam
orientation data.Thefunctions ProMechbeamorientDataGet() and
1884 Creo®Parametric TOOLKIT User’sGuideProMechbeamorientDataSet() havebeendeprecated. Usethefunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorientation data.Thefunctions ProMechbeamorientDataGet() and
1884 Creo®Parametric TOOLKIT User’sGuideProMechbeamorientDataSet() havebeendeprecated. Usethefunctions
ProMechBeamorientIntegerGet() and
ProMechBeamorientIntegerSet() instead.
Thefunction ProMechbeamorientDescriptionGet() returnsthe
description ofthebeamorientation. Usethefunction
ProMechbeamorientDescriptionSet() tosetthedescription ofthe
beamorientation.
Thefunctions ProMechBeamorientExpressionGet/Set,
ProMechBeamorientIntegerGet/Set, and
ProMechBeamorientVectorGet/Set usetheenumerated type
ProMechBeamorientPropertyType todefinethebeamorientation
propertytype.
Thevaluesareasfollows:
typedef enum
{
PRO_MECH_BEAM_ORIENT_OFFSET_TYPE =0, /*ProMechBeamOrientType (int)
*/
PRO_MECH_BEAM_ORIENT_ANGLE =1, /*ProMechExpression */
PRO_MECH_BEAM_ORIENT_OFFSET =2 /*ProMechVector (3)
[DxDyDz]
*/
}
ProMechBeamorientPropertyType;
Thefunction ProMechBeamorientExpressionGet() getsthevalueforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_MECH_BEAM_ORIENT_OFFSET =2 /*ProMechVector (3)
[DxDyDz]
*/
}
ProMechBeamorientPropertyType;
Thefunction ProMechBeamorientExpressionGet() getsthevaluefor
thedefinedbeamorientation propertytype.Ifanexpression isdefined,theoutput
valueiscalculated using ProMathExpressionEvaluate(). Usethe
function ProMechBeamorientExpressionSet() tosetthevalueforthe
beamorientation propertytype.Forthefunctions
ProMechBeamorientExpressionGet/Set, theonlyenumerated value
allowedisPRO_MECH_BEAM_ORIENT_ANGLE. Youcangetandsettheangle
ofthebeamorientation.
ThefunctionProMechBeamorientIntegerGet() getstheintegerofthespecified
beamorientation propertytype.UsethefunctionProMechBeamorientIntegerSet()
tosetanintegervalueforthespecifiedbeamorientation propertytype.Forthe
functions ProMechBeamorientIntegerGet/Set, theonlyenumerated
valueallowedisPRO_MECH_BEAM_ORIENT_OFFSET_TYPE.
PRO_MECH_BEAM_ORIENT_OFFSET_TYPE returnsthehandleto
ProMechBeamOrientType. Youcanspecifythetypeoforientation usingthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueallowedisPRO_MECH_BEAM_ORIENT_OFFSET_TYPE.
PRO_MECH_BEAM_ORIENT_OFFSET_TYPE returnsthehandleto
ProMechBeamOrientType. Youcanspecifythetypeoforientation usingthe
enumerated typeProMechBeamOrientType.
Thetypesoforientations areasfollows:
CreoSimulate:Items 1885•PRO_MECH_BEAM_ORIENT_OFFSET_SHAPE_ORIGIN— Specifiesthe
pointoforiginofthebeamshapecoordinate system.
•PRO_MECH_BEAM_ORIENT_OFFSET_CENTROID— Specifiestheorigin
oftheprincipalcoordinate systemwhichisatthecentroidofthesection.For
generalsectionsandallstandardsections,itiscoincident withPRO_MECH_
BEAM_ORIENT_OFFSET_SHAPE_ORIGIN.
•PRO_MECH_BEAM_ORIENT_OFFSET_SHEAR_CENTER— Specifiesthe
pointonabeamsectionaboutwhichthesectionrotatesunderdeflection.
Thefunction ProMechBeamorientVectorGet() returnstheCreoSimulate
vectorhandle ProMechVector. Usethefunction
ProMechBeamorientVectorSet() tosetthehandletoProMechVector.
Thefunctions ProMechVectorComponentGet/Set providereadandwritexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvectorhandle ProMechVector. Usethefunction
ProMechBeamorientVectorSet() tosetthehandletoProMechVector.
Thefunctions ProMechVectorComponentGet/Set providereadandwrite
accesstotheindividual vectorcomponents ofthespecifiedbeamorientation
propertytype.Formoreinformation abouthandlingvectorcomponents, seeCreo
SimulateVectorFunctions onpage1867.
Forthefunctions ProMechBeamorientVectorGet/Set, theonly
enumerated valueallowedisPRO_MECH_BEAM_ORIENT_OFFSET. For
example,youcanget/setthedirectionofthebeamvector.
Thefunction ProMechBeamorientVectorGet() automatically allocatesthe
memoryfortheCreoSimulatevectorhandle.Usethefunction
ProMechVectorFree() tofreethememory.
Thefunction ProMechbeamorientdataTypeGet() returnsthetypeofthe
orientation specifiedfortheCreoSimulatebeamorientation item.Usethe
function ProMechbeamorientdataTypeSet() tosetthetypeoforientation
Thefunctions ProMechbeamorientdataTypeGet() and
ProMechbeamorientdataTypeSet() havebeendeprecated. Usethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction ProMechbeamorientdataTypeSet() tosetthetypeoforientation
Thefunctions ProMechbeamorientdataTypeGet() and
ProMechbeamorientdataTypeSet() havebeendeprecated. Usethe
enumerated typeProMechBeamOrientType instead.
Thefunction ProMechbeamorientdataAngleGet() returnstheangleof
thebeamorientation. Usethefunction
ProMechbeamorientdataAngleSet() tosettheangleofthebeam
orientation. Thefunctions ProMechbeamorientdataAngleGet() and
ProMechbeamorientdataAngleSet() havebeendeprecated. Usethe
functions ProMechBeamorientExpressionGet() and
ProMechBeamorientExpressionSet() instead.
Thefunction ProMechbeamorientdataVectorGet() returnsthedirection
ofthebeamvector.Usethefunction
ProMechbeamorientdataVectorSet() tosetthedirectionofthebeam
vector.Thefunctions ProMechbeamorientdataVectorGet() and
ProMechbeamorientdataVectorSet() havebeendeprecated. Usethe
functions ProMechBeamorientVectorGet() and
ProMechBeamorientVectorSet() instead.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvector.Thefunctions ProMechbeamorientdataVectorGet() and
ProMechbeamorientdataVectorSet() havebeendeprecated. Usethe
functions ProMechBeamorientVectorGet() and
ProMechBeamorientVectorSet() instead.
1886 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProMechbeamorientdataFree() tofreethememory
allocatedtothebeamorientation datastructure.Thefunction
ProMechbeamorientdataFree() hasbeendeprecated.
BeamReleases
Thebeamreleasesspecifythedegreesoffreedomyouwanttoreleaseforabeam
endorbeamends.Beamreleasesdetermine thedegreesoffreedomthatdonot
participate inaconnection attheendofabeam.Youcanspecifybeamreleasesfor
bothstraightandcurvedbeams.
Thebeamreleasesdatastructurecontainsacombination ofthesixdegreesof
freedomrelativetothebeam'slocalaxes,thatis,translation inX,Y,andZand
rotationinX,Y,andZ.
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulatebeamreleasesdatastructure.Beamreleasesuse
theProType fieldintheProMechitem structureasPRO_SIMULATION_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulatebeamreleasesdatastructure.Beamreleasesuse
theProType fieldintheProMechitem structureasPRO_SIMULATION_
BEAM_RELEASE.
Functions Introduced:
•ProMechbeamr eleasedataAlloc()
•ProMechbeamr eleaseDataGet()
•ProMechbeamr eleaseDataSet()
•ProMechbeamr eleaseDescriptionGet()
•ProMechbeamr eleaseDescriptionSet()
•ProMechbeamr eleasedataRotationflagsGet()
•ProMechbeamr eleasedataRotationflagsSet()
•ProMechbeamr eleasedataT ranslationflagsGet()
•ProMechbeamr eleasedataT ranslationflagsSet()
•ProMechbeamr eleasedataFre e()
Thefunction ProMechbeamreleasedataAlloc() allocatesthememoryfor
thebeamreleasedatahandle.
Thefunction ProMechbeamreleaseDataGet() providesaccesstothedata
structurecontaining theproperties ofthebeamreleaseitem.
Thetranslation androtationflagscorrespond totranslation orrotationabouttheX,
Y,andZdirections. SetthevalueofeachflagtoPRO_B_TRUE, toindicatethatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructurecontaining theproperties ofthebeamreleaseitem.
Thetranslation androtationflagscorrespond totranslation orrotationabouttheX,
Y,andZdirections. SetthevalueofeachflagtoPRO_B_TRUE, toindicatethat
thebeamisnotconstrained inthespecifieddirection.SetthevaluetoPRO_B_
FALSEtoindicatethatthebeamisconstrained inthespecifieddirection.
Thefunction ProMechbeamreleasedataFree() releasesthememory
assignedtothebeamreleasedatahandle.
CreoSimulate:Items 1887CreoSimulateSpringItems
Aspringconnectstwopointsorapointtothegroundinthespecifiedmodel.It
providesthestiffnessthatyouspecifyatthelocationonthemodelwhereyou
placeit.Thestiffnesscanbetranslational (forceperunitlength)ortorsional
(torque).Theforcegeneratedbythespringisproportional totheamountof
displacement thatoccurs.Thefunctionsdescribedinthissectionenableyouto
accessthedataandcontentsoftheCreoSimulatespringitems.Springsusethe
ProType fieldintheProMechitem structureasPRO_SIMULATION_
SPRING.
Functions Introduced:
•ProMechspringRefer encesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaccessthedataandcontentsoftheCreoSimulatespringitems.Springsusethe
ProType fieldintheProMechitem structureasPRO_SIMULATION_
SPRING.
Functions Introduced:
•ProMechspringRefer encesGet()
•ProMechspringRefer encesSet()
•ProMechspringT ypeGet()
•ProMechspringAdvanceddataGet()
•ProMechspringAdvanceddataSet()
•ProMechspringGro unddataGet()
•ProMechspringGro unddataSet()
•ProMechspringSimpledataGet()
•ProMechspringSimpledataSet()
•ProMechsimplespringdataAlloc()
•ProMechsimplespringdataT orsionalstiffnessGet()
•ProMechsimplespringdataT orsionalstiffnessSet()
•ProMechsimplespringdataExtensionalstiffnessV alueGet()
•ProMechsimplespringdataExtensionalstiffnessV alueSet()
•ProMechsimplespringdataFre e()
•ProMechadvancedspringdataAlloc()
•ProMechadvancedspringdataPr opertiesGet()
•ProMechadvancedspringdataPr opertiesSet()
•ProMechadvancedspringdataRotationGet()
•ProMechadvancedspringdataRotationSet()
•ProMechadvancedspringdataYdire ctionGet()
•ProMechadvancedspringdataYdire ctionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechadvancedspringdataRotationGet()
•ProMechadvancedspringdataRotationSet()
•ProMechadvancedspringdataYdire ctionGet()
•ProMechadvancedspringdataYdire ctionSet()
•ProMechadvancedspringdataFr ee()
•ProMechgro undspringdataAlloc()
•ProMechgro undspringdataCsysGet()
1888 Creo®Parametric TOOLKIT User’sGuide•ProMechgro undspringdataCsysSet()
•ProMechgro undspringdataPro pertiesGet()
•ProMechgro undspringdataPro pertiesSet()
•ProMechgro undspringdataFree ()
Thefunction ProMechspringReferencesGet() returnsthegeometrical
references specifiedwhilemodelingthespring.Thereferences definethelocation
ofthespringonthemodel.Usethefunction
ProMechspringReferencesSet() tosetthegeometrical references forthe
spring.
Thefunction ProMechspringTypeGet() returnsthetypeofthespecified
spring.Theoutputargument Typehasoneofthefollowingvalues:
•PRO_MECH_SPRING_SIMPLE—Specifies asimplespring.Thistypeof
springconnectstwopoints,twovertices,apointtoanedge,apointtoaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspring.Theoutputargument Typehasoneofthefollowingvalues:
•PRO_MECH_SPRING_SIMPLE—Specifies asimplespring.Thistypeof
springconnectstwopoints,twovertices,apointtoanedge,apointtoa
surface,apointtoapatternofpoints,apointtoasinglepointfeature.The
extensional andtorsionalstiffnessproperties willbedefinedforthisspring.
Usethefunction ProMechspringSimpledataGet() toprovideaccess
tothedatastructurecontaining thesimplespringdata.Usethefunction
ProMechspringSimpledataSet() tomodifythedatastructure
containing thesimplespringdata.
•PRO_MECH_SPRING_GROUND—Specifies aToGroundspring.Thistypeof
stringconnectsapoint,asinglepointfeature,orasinglepatternofpointsto
ground.Thespringstiffnessproperties andtheorientation aredefinedforthis
spring.
Aseparateproperties objectcanbedefinedforthistypeofspring.
Usethefunction ProMechspringGrounddataGet() toprovideaccess
tothedatastructurecontaining thegroundspringdata.Usethefunction
ProMechspringGrounddataSet() tomodifythedatastructurexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProMechspringGrounddataGet() toprovideaccess
tothedatastructurecontaining thegroundspringdata.Usethefunction
ProMechspringGrounddataSet() tomodifythedatastructure
containing thegroundspringdata.
•PRO_MECH_SPRING_ADVANCED—Specifies anAdvanced spring.Thistype
ofspringconnectstwopoints,apointtoanedge,apointtoasurface,apoint
toapatternofpoints,orapointtoasinglepointfeature.Thestiffness
properties, orientation properties, andanadditional rotationaredefinedfor
thisspring.Usethefunction ProMechspringAdvanceddataGet() to
provideaccesstothedatastructurecontaining theadvancedspringdata.Use
thefunction ProMechspringAdvanceddataSet() tomodifythedata
structurecontaining theadvancedspringdata.
Extensional stiffnessofaspringresiststhestretching orcompression ofthe
spring.Theextensional stiffnessofthespringisofconstantstiffnessorisdefined
byaforce-deflection curve.Thefunction
CreoSimulate:Items 1889ProMechsimplespringdataExtensionalstiffnessValueGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspring.Theextensional stiffnessofthespringisofconstantstiffnessorisdefined
byaforce-deflection curve.Thefunction
CreoSimulate:Items 1889ProMechsimplespringdataExtensionalstiffnessValueGet()
returnstheextensional stiffnessofthespring.Usethefunction
ProMechsimplespringdataExtensionalstiffnessValueSet() to
settheextensional stiffnessforthespring.
Note
Note:Thefunctions
ProMechsimplespringdataExtensionalstiffnessGet() and
ProMechsimplespringdataExtensionalstiffnessSet() have
beendeprecated. Usethefunctions
ProMechsimplespringdataExtensionalstiffnessValue
Get()and
ProMechsimplespringdataExtensionalstiffnessValue
Set()instead.
CreoSimulateSpringPropertyItems
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
theCreoSimulatespringpropertyitems.Springproperties usetheProType field
intheProMechitem structureasPRO_SIMULATION_SPRING_PROPS.
Functions Introduced:
•ProMechspringpr opsDescriptionGet()
•ProMechspringpr opsDescriptionSet()
•ProMechSpringpr opsBooleanGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintheProMechitem structureasPRO_SIMULATION_SPRING_PROPS.
Functions Introduced:
•ProMechspringpr opsDescriptionGet()
•ProMechspringpr opsDescriptionSet()
•ProMechSpringpr opsBooleanGet()
•ProMechSpringpr opsBooleanSet()
•ProMechSpringpr opsMatrixGet()
•ProMechSpringpr opsMatrixSet()
•ProMechSpringpr opsV ectorGet()
•ProMechSpringpr opsV ectorSet()
Functions Superseded:
•ProMechspringpr opsdataAlloc()
•ProMechspringpr opsDataGet()
•ProMechspringpr opsDataSet()
•ProMechspringpr opsdataDampingcoefficientsGet()
•ProMechspringpr opsdataDampingcoefficientsSet()
1890 Creo®Parametric TOOLKIT User’sGuide•ProMechspringpr opsdataExtensionalcoefficientsGet()
•ProMechspringpr opsdataExtensionalcoefficientsSet()
•ProMechspringpr opsdataT orsionalcoefficientsGet()
•ProMechspringpr opsdataT orsionalcoefficientsSet()
•ProMechspringpr opsdataCouplingcoefficientsGet()
•ProMechspringpr opsdataCouplingcoefficientsSet()
•ProMechspringpr opsdataAutocouplingGet()
•ProMechspringpr opsdataAutocouplingSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechspringpr opsdataCouplingcoefficientsGet()
•ProMechspringpr opsdataCouplingcoefficientsSet()
•ProMechspringpr opsdataAutocouplingGet()
•ProMechspringpr opsdataAutocouplingSet()
•ProMechspringpr opsdataFr ee()
Thefunction ProMechspringpropsDataGet() providesaccesstothedata
structurecontaining theSpringProperties data.Thefunction
ProMechspringpropsDataGet() hasbeendeprecated. Useeither
ProMechspringpropsMatrixGet() or
ProMechspringpropsVectorGet() instead.
Thefunctionslistedaboveprovidereadandwriteaccesstothedefinitionofthe
springproperties. Youcanaccessthename,description, extensional, torsionaland
couplingstiffness,andthedampingcoefficientsforthespringproperties.
Thefunction ProMechspringpropsDescriptionGet() returnsthe
description forthespringproperty.Usethefunction
ProMechspringpropsDescriptionSet() tosetthedescription forthe
springproperty.
Thefunctions ProMechSpringpropsBooleanGet/Set,
ProMechSpringpropsMatrixGet/Set, and
ProMechSpringpropsVectorGet/Set usetheenumerated typexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspringproperty.
Thefunctions ProMechSpringpropsBooleanGet/Set,
ProMechSpringpropsMatrixGet/Set, and
ProMechSpringpropsVectorGet/Set usetheenumerated type
ProMechSpringpropsPropertyType todefinethespringpropertytype.
Theenumerated typeProMechSpringpropsPropertyType hasthe
followingvalues:
•PRO_MECH_SPRINGPROPS_EXTENSIONAL
•PRO_MECH_SPRINGPROPS_TORSIONAL
•PRO_MECH_SPRINGPROPS_COUPLING
•PRO_MECH_SPRINGPROPS_DAMPING
•PRO_MECH_SPRINGPROPS_AUTOCOUPLING
Thefunction ProMechSpringpropsBooleanGet() getstheBooleanvalue
fortheautocoupling option.Usethefunction
ProMechSpringpropsBooleanSet() tosettheBooleanvalueforthe
autocoupling option.
CreoSimulate:Items 1891Thefunction ProMechSpringpropsMatrixGet() returnstheCreo
Simulatematrixhandle ProMechMatrix. Usethefunction
ProMechSpringpropsMatrixSet() tosetthehandleto
ProMechMatrix. Thefunctions ProMechMatrixComponentGet/Set
providereadandwriteaccesstotheindividual matrixcomponents. FormorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechSpringpropsMatrixSet() tosetthehandleto
ProMechMatrix. Thefunctions ProMechMatrixComponentGet/Set
providereadandwriteaccesstotheindividual matrixcomponents. Formore
information abouthandlingmatrixcomponents, seeCreoSimulateMatrix
Functions onpage1867.
Theoutputmatrixgetsthefollowingvaluesdepending onthespringproperty
type:
•Extensional coefficients(Kxx,Kyy,Kzz,Kxy,Kxz,Kyz)
•Torsionalcoefficients(Txx,Tyy,Tzz,Txy,Txz,Tyz)
•Couplingcoefficients(KTxx,KTxy,KTxz,KTyx,KTyy,KTyz,KTzx,KTzy,
KTzz)
Thefunction ProMechSpringpropsMatrixGet() automatically allocates
memoryfortheCreoSimulatematrixhandle.Usethefunction
ProMechMatrixFree() tofreetheassignedmemory.
Thefunction ProMechSpringpropsVectorGet() returnstheCreo
Simulatevectorhandle ProMechVector. Usethefunction
ProMechSpringpropsVectorSet() tosetthehandleto
ProMechVector. Thefunctions ProMechVectorComponentGet/Set
providereadandwriteaccesstotheindividual vectorcomponents. FormorexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechSpringpropsVectorSet() tosetthehandleto
ProMechVector. Thefunctions ProMechVectorComponentGet/Set
providereadandwriteaccesstotheindividual vectorcomponents. Formore
information abouthandlingvectorcomponents, seeCreoSimulateVector
Functions onpage1867..Thevectorreturnsthedampingcoefficients(Cxx,Cyy,
Czz)asoutput.Thefunction ProMechSpringpropsVectorGet()
automatically allocatesthememoryfortheCreoSimulatevectorhandle.Usethe
function ProMechVectorFree() tofreethememory.
CreoSimulateMassItems
Amassisanidealization thatyoucanusetorepresentaconcentrated mass
withoutaspecifiedshape.Themassofanobjectdetermines howthatobject
resiststranslation androtation.Youcanalsoaddmassthatisdistributed over
featuressuchascurves,edges,orsurfaces.
Thefunctionsdescribedinthissectionprovideaccesstothedataandcontentsof
theCreoSimulatemassitems.MassesusetheProType fieldinthe
ProMechitem structureasPRO_SIMULATION_MASS.
Functions Introduced:
•ProMechmassDistributionGet()
•ProMechmassDistributionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheCreoSimulatemassitems.MassesusetheProType fieldinthe
ProMechitem structureasPRO_SIMULATION_MASS.
Functions Introduced:
•ProMechmassDistributionGet()
•ProMechmassDistributionSet()
•ProMechmassRefer encesGet()
1892 Creo®Parametric TOOLKIT User’sGuide•ProMechmassRefer encesSet()
•ProMechmassT ypeGet()
•ProMechmassSimpledataGet()
•ProMechmassSimpledataSet()
•ProMechmassAdvanceddataGet()
•ProMechmassAdvanceddataSet()
•ProMechmassComponentdataGet()
•ProMechmassComponentpointdataSet()
•ProMechmassComponentdistributeddataSet()
•ProMechsimplemassdataAlloc()
•ProMechsimplemassdataMassGet()
•ProMechsimplemassdataMassSet()
•ProMechsimplemassdataFre e()
•ProMechadvancedmassdataAlloc()
•ProMechadvancedmassdataCsysGet()
•ProMechadvancedmassdataCsysSet()
•ProMechadvancedmassdataPr opertiesGet()
•ProMechadvancedmassdataPr opertiesSet()
•ProMechadvancedmassdataFr ee()
•ProMechcomponentmassdataAlloc()
•ProMechcomponentmassdataComponentGet()
•ProMechcomponentmassdataComponentSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechadvancedmassdataPr opertiesSet()
•ProMechadvancedmassdataFr ee()
•ProMechcomponentmassdataAlloc()
•ProMechcomponentmassdataComponentGet()
•ProMechcomponentmassdataComponentSet()
•ProMechcomponentmassdataFre e()
Thefunction ProMechmassDistributionGet() returnsthetypesof
massesthatcanbeappliedtocurves,surfaces,andedgesinFEMMode.
Theoutputargument typecanhavethefollowingvalues:
•PRO_MECH_MASS_DISTR_AT_POINT—Specifies thatthemassisaddedto
apoint,vertex,multiplesinglepoints,pointfeatures,andpointpatterns.
•PRO_MECH_MASS_DISTR_TOTAL—Specifies thetotaldistribution ofmass
alongasurfaceorcurve.
•PRO_MECH_MASS_DISTR_PER_UNIT—Specifies thedistribution ofmass
alongacurveorsurfaceperunitlengthorperunitarearespectively .
Usethefunction ProMechmassDistributionSet() tosetthetypesof
massesthatcanbeappliedtocurves,surfaces,andedgesinFEMMode.
CreoSimulate:Items 1893Thefunction ProMechmassReferencesGet() returnsthemassreferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmassesthatcanbeappliedtocurves,surfaces,andedgesinFEMMode.
CreoSimulate:Items 1893Thefunction ProMechmassReferencesGet() returnsthemassreference
objects.Thereferences canbeeithercurves,edges,orsurfaces.Usethefunction
ProMechmassReferencesSet() tosetthemassreferenceobjects.
Thefunction ProMechmassTypeGet() returnsthetypesofmassesdefinedfor
apointorvertex.Theoutputargument typecanhaveoneofthefollowingvalues:
•PRO_MECH_MASS_SIMPLE—Specifies asimplemasstype.Specifyan
integerasthemassvalueandpoints,singlepoint,multiplesinglepoints,point
features,pointpatterns,edges,curves,orsurfacesasthereferenceforthe
simplemasstype.Usethefunction ProMechmassSimpledataGet() to
accessthesimplemassdatastructure.Usethefunction
ProMechmassSimpledataSet() tomodifythesimplemassdata
structure.
•PRO_MECH_MASS_ADVANCED—Specifies theadvancedmasstype.Specify
thecoordinate systemandthemasspropertyobjectforasinglepoint,multiple
singlepoints,pointfeatures,andpointpatterns.Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructure.
•PRO_MECH_MASS_ADVANCED—Specifies theadvancedmasstype.Specify
thecoordinate systemandthemasspropertyobjectforasinglepoint,multiple
singlepoints,pointfeatures,andpointpatterns.Usethefunction
ProMechmassAdvanceddataGet() toaccesstheadvancedmassdata
structure.Usethefunction ProMechmassAdvanceddataSet() to
modifytheadvancedmassdatastructure.
•PRO_MECH_MASS_COMP_AT_POINT—Specifies thecomponent massdata
forapartorsubassembly ofanassembly.Forthistypeofmass,themass
definitionisspecifiedusingthecomponent's mass,momentofinertia,and
centerofgravity.Thismasstypecanbecreatedusingpoints,edgesorcurves,
orSurfacesasthereference. Usethefunction
ProMechmassComponentdataGet() toaccessthecomponent massdata
structure.Usethefunction ProMechmassComponentpointdataSet()
tomodifythecomponent atpointmassdatastructure.
•Thismasstypeisapplicable onlyfortheassemblymode.
•PRO_MECH_MASS_COMP_DISTRIBUTED—Specifies thecomponent
distributed massdataforapartorsubassembly ofanassembly.Forthistypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Thismasstypeisapplicable onlyfortheassemblymode.
•PRO_MECH_MASS_COMP_DISTRIBUTED—Specifies thecomponent
distributed massdataforapartorsubassembly ofanassembly.Forthistype
ofmass,onlythecomponent’ smassisusedtospecifythemassdefinition.
Thismasstypecanbecreatedusingpoints,edgesorcurves,orsurfacesasthe
reference. Usethefunction ProMechmassComponentdataGet() to
accessthecomponent massdatastructure.Usethefunction
ProMechmassComponentdistributeddataSet() tomodifythe
component distributed massdatastructure.
•Thismasstypeisapplicable onlyfortheassemblymode.
Thefunction ProMechsimplemassdataAlloc() allocatesmemoryfora
simplemassdatastructure.
1894 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechsimplemassdataMassGet() returnsthevalueofthe
massforasimplemassdataandthefunction
ProMechsimplemassdataMassSet() setsthevalueofthemassfora
simplemassdata.
Thefunction ProMechadvancedmassdataAlloc() allocatesmemoryfor
theadvancedmassdatastructure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechsimplemassdataMassSet() setsthevalueofthemassfora
simplemassdata.
Thefunction ProMechadvancedmassdataAlloc() allocatesmemoryfor
theadvancedmassdatastructure.
Thefunction ProMechadvancedmassdataCsysGet() returnsthereference
co-ordinate systemfortheadvancedmassdataandthefunction
ProMechadvancedmassdataCsysSet() setsthereferenceco-ordinate
systemfortheadvancedmassdata.
Thefunction ProMechadvancedmassdataPropertiesGet() returnsthe
masspropertyfortheadvancedmassdata.
Thefunction ProMechadvancedmassdataPropertiesSet() setsthe
masspropertyfortheadvancedmassdata.
Thefunction ProMechcomponentmassdataAlloc() allocatesmemoryfor
thecomponent massdatastructure.
Thefunction ProMechcomponentmassdataComponentGet() specifiesa
referenceforthecomponent massdata.Youcanspecifyonlyonedatumpointor
vertexasreferenceforthemasstypePRO_MECH_MASS_COMP_AT_POINT.
Youcanspecifypoints,edges,curves,orsurfacesasreferenceforthemasstype
PRO_MECH_MASS_COMP_DISTRIBUTED.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvertexasreferenceforthemasstypePRO_MECH_MASS_COMP_AT_POINT.
Youcanspecifypoints,edges,curves,orsurfacesasreferenceforthemasstype
PRO_MECH_MASS_COMP_DISTRIBUTED.
Thefunction ProMechcomponentmassdataComponentSet() setsthe
referencetypeforthecomponent massdata.
CreoSimulateMassProperties
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulatepropertyitems.Massproperties usethe
ProType fieldintheProMechitem structureasPRO_SIMULATION_MASS_
PROPS.
Functions Introduced:
•ProMechmasspr opsDescriptionGet()
•ProMechmasspr opsDescriptionSet()
•ProMechMasspr opsExpre ssionGet()
•ProMechMasspr opsExpre ssionSet()
•ProMechMasspr opsMatrixGet()
•ProMechMasspr opsMatrixSet()
Functions Superseded:
CreoSimulate:Items 1895•ProMechmasspr opsMassGet()
•ProMechmasspr opsMassSet()
•ProMechmasspr opsMomentsGet()
•ProMechmasspr opsMomentsSet()
Thefunction ProMechmasspropsDescriptionGet() returnsthe
description forthemassproperty.Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmasspr opsMassSet()
•ProMechmasspr opsMomentsGet()
•ProMechmasspr opsMomentsSet()
Thefunction ProMechmasspropsDescriptionGet() returnsthe
description forthemassproperty.Usethefunction
ProMechmasspropsmassSet() tosetthedescription forthemassproperty.
Thefunction ProMechmasspropsMassGet() returnsthevalueofthemass
specifiedforthemassproperties object.Usethefunction
ProMechmasspropsMassSet() tosetthevalueofthemass.Thefunctions
ProMechmasspropsMassGet() andProMechmasspropsMassSet()
havebeendeprecated. Usethefunctions
ProMechMasspropsExpressionGet() and
ProMechMasspropsExpressionSet() instead.
Thefunction ProMechmasspropsMomentsGet() returnsthemomentof
inertiaabouteachmasselement’scenterofgravitywithrespecttotheaxesand
principalplanesoftheWCS.Themomentofinertiaisreturnedintheformofa
matrix.Usethefunction ProMechmasspropsMomentsSet() tosetthe
momentofinertiamatrix.Thefunctions ProMechmasspropsMomentsGet()
andProMechmasspropsMomentsSet() havebeendeprecated. Usethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmatrix.Usethefunction ProMechmasspropsMomentsSet() tosetthe
momentofinertiamatrix.Thefunctions ProMechmasspropsMomentsGet()
andProMechmasspropsMomentsSet() havebeendeprecated. Usethe
functions ProMechMasspropsMatrixGet() and
ProMechMasspropsMatrixSet() instead
Thefunctions ProMechMasspropsExpressionGet() and
ProMechMasspropsExpressionSet() usetheenumerated type
ProMechMasspropsPropertyType. Thevaluesare:
•PRO_MECH_MASSPROPS_MASS
•PRO_MECH_MASSPROPS_MOMENTS
Thefunction ProMechMasspropsExpressionGet() getsthevalueofthe
definedmasspropertyobject.Ifanexpression isdefined,theoutputvaluecanbe
calculated using ProMathExpressionEvaluate(). Usethefunction
ProMechMasspropsExpressionSet() tosetthevalueforthemass
propertyobject.
Thefunction ProMechMasspropsMatrixGet() returnstheCreoSimulate
matrixhandle ProMechMatrix. Usethefunction
ProMechMasspropsMatrixSet() tosetthehandletoProMechMatrix.
Thefunctions ProMechMatrixComponentGet/Set providereadandwritexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmatrixhandle ProMechMatrix. Usethefunction
ProMechMasspropsMatrixSet() tosetthehandletoProMechMatrix.
Thefunctions ProMechMatrixComponentGet/Set providereadandwrite
accesstotheindividual matrixcomponents. Formoreinformation abouthandling
matrixcomponents, seeCreoSimulateMatrixFunctions onpage1867.
1896 Creo®Parametric TOOLKIT User’sGuideCreoSimulateMaterialAssignment
Thefunctionsdescribedinthissectionallowyoutoassignmaterialstothe2Dand
3Dmodels.Materialassignment usestheProType fieldintheProMechitem
structureasPRO_SIMULATION_MATL_ASSIGN.
Functions referringtothematerialassignment elementsusethestructure
ProMechMatlAssignData whichisdefinedas:
typedef struct pro_matlassign_data
{
int matl_id;
int matl_orient_id;
}
ProMatlassignData;
AccessingProMechmatlassign
Functions Introduced:
•ProMechmatlassignRefer encesGet()
•ProMechmatlassignRefer encesSet()
•ProMechmatlassignDataGet()
•ProMechmatlassignDataSet()
Thefunction ProMechmatlassignReferencesGet() returnsthemodelxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmatlassignRefer encesGet()
•ProMechmatlassignRefer encesSet()
•ProMechmatlassignDataGet()
•ProMechmatlassignDataSet()
Thefunction ProMechmatlassignReferencesGet() returnsthemodel
references formaterialassignment. Usethefunction
ProMechmatlassignReferencesSet() tosetthemodelreferences for
materialassignment.
Thefunction ProMechmatlassignDataGet() providesaccesstothedata
structurecontaining theproperties ofthematerialassignment item.Usethe
function ProMechmatlassignDataSet() tosetthedatastructure
containing theproperties ofthematerialassignment item.
MaterialAssignment Data
Functions Introduced:
•ProMechmecttempdataAlloc()
•ProMechmatlassigndataFr ee()
•ProMechmatlassigndataMaterialidGet()
•ProMechmatlassigndataMaterialidSet()
•ProMechmatlassigndataMaterialorientidGet()
•ProMechmatlassigndataMaterialorientidSet()
CreoSimulate:Items 1897Thefunction ProMechmecttempdataAlloc() allocatesthememoryfora
CreoSimulatematerialassignment datahandle.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmatlassigndataMaterialorientidSet()
CreoSimulate:Items 1897Thefunction ProMechmecttempdataAlloc() allocatesthememoryfora
CreoSimulatematerialassignment datahandle.
Thefunction ProMechmatlassigndataFree() releasesthememory
assignedtotheCreoSimulatematerialassignment datahandle.
Thefunction ProMechmatlassigndataMaterialidGet() returnsthe
materialiddefinedforthemodelreferences. Usethefunction
ProMechmatlassigndataMaterialidSet() tosetthematerialidforthe
modelreferences.
Thefunction ProMechmatlassigndataMaterialorientidGet()
returnsthematerialorientation idofthemodelreferences. Usethefunction
ProMechmatlassigndataMaterialorientidSet() tosetthematerial
orientation idforthemodelreferences.
MaterialOrientations
Thefunctionsdescribedinthissectionspecifymaterialorientation forsurfaces,
volumes,shells,solids,2Dsolids,and2Dplates.Thesefunctionsprovideread
andwriteaccesstothedataandcontentsofCreoSimulatematerialorientation
objects.Materialorientations usetheProType fieldintheProMechitemxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandwriteaccesstothedataandcontentsofCreoSimulatematerialorientation
objects.Materialorientations usetheProType fieldintheProMechitem
structureasPRO_SIMULATION_MATL_ORIENT.
Functions Introduced:
•ProMechmaterialorientdataAlloc()
•ProMechmaterialorientDataGet()
•ProMechmaterialorientDataSet()
•ProMechmaterialorientDescriptionGet()
•ProMechmaterialorientDescriptionSet()
•ProMechmaterialorientdataObjecttypeGet()
•ProMechmaterialorientdataObjecttypeSet()
•ProMechmaterialorientdataCsysdataGet()
•ProMechmaterialorientdataCsysdataSet()
•ProMechmaterialorientdataPr ojectiondataGet()
•ProMechmaterialorientdataPr ojectiondataSet()
•ProMechmaterialorientdataRotationGet()
•ProMechmaterialorientdataRotationSet()
•ProMechmaterialorientdataSurfacero tationGet()
•ProMechmaterialorientdataSurfacero tationSet()
•ProMechmaterialorientdataT ypeGet()
1898 Creo®Parametric TOOLKIT User’sGuide•ProMechmaterialorientdataSurfacero tationUnset()
•ProMechmaterialorientdataFirstdire ctionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmaterialorientdataT ypeGet()
1898 Creo®Parametric TOOLKIT User’sGuide•ProMechmaterialorientdataSurfacero tationUnset()
•ProMechmaterialorientdataFirstdire ctionSet()
•ProMechmaterialorientdataSeconddir ectionSet()
•ProMechmaterialorientdataFr ee()
•ProMechmaterialorientcsysAlloc()
•ProMechmaterialorientcsysCsysGet()
•ProMechmaterialorientcsysCsysSet()
•ProMechmaterialorientcsysPr ojectiontypeGet()
•ProMechmaterialorientcsysPr ojectiontypeSet()
•ProMechmaterialorientcsysXaxisGet()
•ProMechmaterialorientcsysXaxisSet()
•ProMechmaterialorientcsysY axisGet()
•ProMechmaterialorientcsysY axisSet()
•ProMechmaterialorientcsysZaxisGet()
•ProMechmaterialorientcsysZaxisSet()
•ProMechmaterialorientcsysFr ee()
•ProMechmaterialorientpro jAlloc()
•ProMechmaterialorientpro jPointsGet()
•ProMechmaterialorientpro jPointsSet()
•ProMechmaterialorientpro jTypeGet()
•ProMechmaterialorientpro jXyzvectorGet()
•ProMechmaterialorientpro jXyzvectorSet()
•ProMechmaterialorientpro jFree()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmaterialorientpro jPointsSet()
•ProMechmaterialorientpro jTypeGet()
•ProMechmaterialorientpro jXyzvectorGet()
•ProMechmaterialorientpro jXyzvectorSet()
•ProMechmaterialorientpro jFree()
Thefunction ProMechMaterialorientDataGet() providesaccesstothe
datastructurecontaining theproperties ofthematerialorientation item.Usethe
function ProMechmaterialorientDataSet() tosetthedatastructure
containing theproperties ofthematerialorientation item.
Thefunction ProMechmaterialorientDescriptionGet() returnsthe
description ofthematerialorientation. Usethefunction
ProMechmaterialorientDescriptionSet() tosetthedescription of
thematerialorientation.
Thefunction ProMechmaterialorientdataObjecttypeGet() returns
thetypeofobjecttowhichthematerialorientation isapplied.Thetypesofobject
are:
•PRO_MECH_MATLORI_MODEL—Specifies amodel.
CreoSimulate:Items 1899•PRO_MECH_MATLORI_SURFACE—Specifies asurface.
Usethefunction ProMechmaterialorientdataObjecttypeSet() to
setthetypeofobject.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxare:
•PRO_MECH_MATLORI_MODEL—Specifies amodel.
CreoSimulate:Items 1899•PRO_MECH_MATLORI_SURFACE—Specifies asurface.
Usethefunction ProMechmaterialorientdataObjecttypeSet() to
setthetypeofobject.
Thefunction ProMechmaterialorientReferencesGet() returnsthe
geometric references specifiedforthematerialorientation object.
Thefunction ProMechmaterialorientdataCsysdataGet() returnsa
handletothedatastructurecontaining thecoordinate systemdataforthematerial
orientation. Usethefunction
ProMechmaterialorientdataCsysdataSet() tosetthecoordinate
systemdataforthematerialorientation.
Thefunction ProMechmaterialorientdataTypeGet() returnsthetype
ofthematerialdirection.Thetypesareasfollows:
•PRO_MECH_MATLORI_COORD_SYSTEM—Specifies thatthematerial
orientation directionisdetermined bythereferencecoordinate system.
•PRO_MECH_MATLORI_1_DIR—Specifies thatthematerialorientation
directionisdetermined bythefirstparametric directionofthematerial.Use
thefunction ProMechmaterialorientdataFirstdirectionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MECH_MATLORI_1_DIR—Specifies thatthematerialorientation
directionisdetermined bythefirstparametric directionofthematerial.Use
thefunction ProMechmaterialorientdataFirstdirectionSet()
tosetthefirstdirectionofthematerialastheorientation type.
•PRO_MECH_MATLORI_2_DIR—Specifies thatthematerialorientation
directionisdetermined bythesecondparametric directionofthematerial.Use
thefunction
ProMechmaterialorientdataSeconddirectionSet() tosetthe
seconddirectionofthematerialastheorientation type.
•PRO_MECH_MATLORI_PROJ_VECTOR—Specifies thatthematerial
orientation directionisdetermined bytheprojection vector.
Thefunction ProMechmaterialorientdataProjectiondataGet()
returnsthestructurecontaining theprojection dataforthematerialorientation.
Usethefunction
ProMechmaterialorientdataProjectiondataSet() tosetthe
projection dataforthematerialorientation.
Thefunction ProMechmaterialorientdataRotationGet() returns
additional rotationsaboutoneormorematerialdirections onlyifthematerialxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprojection dataforthematerialorientation.
Thefunction ProMechmaterialorientdataRotationGet() returns
additional rotationsaboutoneormorematerialdirections onlyifthematerial
orientation typeisPRO_MECH_MATLORI_MODEL. Usethefunction
ProMechmaterialorientdataRotationSet() tosettheadditional
rotationsaboutoneormorematerialdirections onlyifthematerialorientation
typeisPRO_MECH_MATLORI_MODEL.
Thefunction ProMechmaterialorientdataSurfacerotationGet()
returnstherotationangleforthematerialorientation iftheorientation typeis
PRO_MECH_MATLORI_SURFACE.
1900 Creo®Parametric TOOLKIT User’sGuideUsethefunction
ProMechmaterialorientdataSurfacerotationSet() tosetthe
rotationangleforthematerialorientation iftheorientation typeisPRO_MECH_
MATLORI_SURFACE.
Usethefunction
ProMechmaterialorientdataSurfacerotationUnset() removes
therotationangleforthematerialorientation iftheorientation typeisPRO_
MECH_MATLORI_SURFACE.
Thefunction ProMechmaterialorientprojTypeGet() returnsthetypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtherotationangleforthematerialorientation iftheorientation typeisPRO_
MECH_MATLORI_SURFACE.
Thefunction ProMechmaterialorientprojTypeGet() returnsthetype
ofprojection assignedtothematerialorientation. Thetypesofmaterialsare:
•PRO_MECH_MATLORI_PROJ_XYZ—Specifies thevaluesfortheX,Y,and
Zcomponents todefinetheprojection vectorforthematerialorientation. Use
thefunction ProMechmaterialorientprojXyzvectorGet() to
accesstheprojection vector.Usethefunction
ProMechmaterialorientprojXyzvectorSet() tosettheprojection
vectorforthematerialorientation.
•PRO_MECH_MATLORI_PROJ_POINTS—Specifies thetwopointsusedto
definetheprojection vectorforthematerialorientation. Usethefunction
ProMechmaterialorientprojPointsGet() toaccessthetwopoints.
Usethefunction ProMechmaterialorientprojPointsSet() toset
thetwopointsusedforprojection.
Thefunction ProMechmaterialorientcsysCsysGet() returnsthe
coordinate systemusedtospecifythematerialdirections. Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthetwopointsusedforprojection.
Thefunction ProMechmaterialorientcsysCsysGet() returnsthe
coordinate systemusedtospecifythematerialdirections. Usethefunction
ProMechmaterialorientcsysCsysSet() tosetthecoordinate system
forthematerialdirections.
Thefunction ProMechmaterialorientcsysProjectiontypeGet()
returnstheprojection vectorforthematerialorientation object.Thevalid
projection typesareasfollows:
•PRO_MECH_MATLORI_CSYS_PROJ_CLOSEST—Specifies thematerial
Direction1throughaseriesofcalculations.
•PRO_MECH_MATLORI_CSYS_PROJ_X—Specifies thatthematerial
direction1isalongthedirectionoftheXaxisofthereferenced coordinate
systemprojectedontothesurface.
Usethefunction
ProMechmaterialorientcsysProjectiontypeSet() tosetthe
projection typeforthematerialorientation data.
Thefunction ProMechmaterialorientcsysXaxisGet() returnsthe
materialdirectiontowhichthex-axisofthecoordinate systemismapped.Usethe
function ProMechmaterialorientcsysXaxisSet() tosetthematerialxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechmaterialorientcsysXaxisGet() returnsthe
materialdirectiontowhichthex-axisofthecoordinate systemismapped.Usethe
function ProMechmaterialorientcsysXaxisSet() tosetthematerial
directiontowhichthex-axisofthecoordinate systemismapped.
CreoSimulate:Items 1901Thefunction ProMechmaterialorientcsysYaxisGet() returnsthe
materialdirectiontowhichthey-axisofthecoordinate systemismapped.Usethe
function ProMechmaterialorientcsysYaxisSet() tosetthematerial
directiontowhichthey-axisofthecoordinate systemismapped.
Thefunction ProMechmaterialorientcsysZaxisGet() returnsthe
materialdirectiontowhichthez-axisofthecoordinate systemismapped.Usethe
function ProMechmaterialorientcsysZaxisSet() tosetthematerial
directiontowhichthez-axisofthecoordinate systemismapped.
Example4:CreatingMaterialOrientations
Referencing aSelectedCoordinate System
ThesamplecodeinthefilePTMechExMatOrient.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_mech_examples/pt_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxExample4:CreatingMaterialOrientations
Referencing aSelectedCoordinate System
ThesamplecodeinthefilePTMechExMatOrient.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_mech_examples/pt_
mech_ex_src showshowtocreateanewmaterialorientation iteminthe
currentmodel,referencing aselectedcoordinate system.
CreoSimulateShells
Shellsareusedtomodelathinlayerofadefinedthicknessforaspecifiedpart.If
thepartisrelativelythincompared toitslengthandwidth,useofshellmodeling
ismoreefficient.
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulateshellobjects.ShellsusetheProType fieldin
theProMechitem structureasPRO_SIMULATION_SHELL.
Functions Introduced:
•ProMechshellT ypeGet()
•ProMechshellMaterialGet()
•ProMechshellMaterialIdGet()
•ProMechshellMaterialIdSet()
•ProMechshellRefer encesGet()
•ProMechshellRefer encesSet()
•ProMechshellSimpledataGet()
•ProMechshellSimpledataSet()
•ProMechshellAdvanceddataGet()
•ProMechshellAdvanceddataSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechshellRefer encesGet()
•ProMechshellRefer encesSet()
•ProMechshellSimpledataGet()
•ProMechshellSimpledataSet()
•ProMechshellAdvanceddataGet()
•ProMechshellAdvanceddataSet()
•ProMechshellsimpleAlloc()
•ProMechshellsimpleThicknessGet()
1902 Creo®Parametric TOOLKIT User’sGuide•ProMechshellsimpleThicknessSet()
•ProMechshellsimpleFr ee()
•ProMechshelladvancedAlloc()
•ProMechshelladvancedMaterialorientGet()
•ProMechshelladvancedMaterialorientSet()
•ProMechshelladvancedShellpr opsGet()
•ProMechshelladvancedShellpr opsSet()
•ProMechshelladvancedFre e()
Thefunction ProMechshellTypeGet() returnstheshelltypes.Youcan
definethefollowingtypesofshells:
•PRO_MECH_SHELL_SIMPLE—Specifies asimpleshellofuniform
thickness. Usethefunction ProMechshellSimpledataGet() toaccess
thedatastructureforthesimpleshell.Usethefunction
ProMechshellSimpledataSet() tomodifythedatastructureforthe
simpleshell.
•PRO_MECH_SHELL_ADVANCED—Specifies anadvancedshellthatuses
specifiedshellproperties. UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechshellSimpledataSet() tomodifythedatastructureforthe
simpleshell.
•PRO_MECH_SHELL_ADVANCED—Specifies anadvancedshellthatuses
specifiedshellproperties. Usethefunction
ProMechshellAdvanceddataGet() toaccessthedatastructureforthe
advancedshells.Usethefunction ProMechshellAdvanceddataSet()
tomodifythedatastructurefortheadvancedshell.
Thefunction ProMechshellMaterialGet() returnsthematerialdefinedfor
theshell.
Usethefunction ProMechshellMaterialIdSet() tosetthematerialidfor
theshell.
Thefunction ProMechshellReferencesGet() returnsthesurfaces
associated withtheshell.Usethefunction
ProMechshellReferencesSet() tosetthereferences fortheshell.
Thefunction ProMechshellsimpleThicknessGet() returnsthevalueof
thethicknessfortheshell.Usethefunction
ProMechshellsimpleThicknessSet() tosetvalueofthethicknessofthe
shell.
Thefunction ProMechshelladvancedMaterialorientGet() returns
thematerialorientations assignedtotheadvancedshell.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechshellsimpleThicknessSet() tosetvalueofthethicknessofthe
shell.
Thefunction ProMechshelladvancedMaterialorientGet() returns
thematerialorientations assignedtotheadvancedshell.Usethefunction
ProMechshelladvancedMaterialorientSet() tosetthematerial
orientation fortheadvancedshell.
Thefunction ProMechshelladvancedShellpropsGet() returnstheshell
properties associated withthemodel.Usethefunction
ProMechshelladvancedShellpropsSet() tosettheshellproperties
associated withthemodel.
CreoSimulate:Items 1903ShellProperties
Shellproperties areusedtocreateshellsthatarenothomogeneous, ortocreate
shellsthatarecomprised ofseverallayers.Ashellpropertycanbeassignedtoa
face,region,ordatumsurface.
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstodataand
contentsoftheCreoSimulateshellpropertyobjects.Shellproperties usethe
ProType fieldintheProMechitem structureasPRO_SIMULATION_
SHELL_PROPS.
Functions Introduced:
•ProMechshellpro psTypeGet()
•ProMechshellpro psDescriptionGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProType fieldintheProMechitem structureasPRO_SIMULATION_
SHELL_PROPS.
Functions Introduced:
•ProMechshellpro psTypeGet()
•ProMechshellpro psDescriptionGet()
•ProMechshellpro psDescriptionSet()
•ProMechshellpro psHomogeneousdataGet()
•ProMechshellpro psHomogeneousdataSet()
•ProMechshellpro psLaminatelayupdataGet()
•ProMechshellpro psLaminatelayupdataSet()
•ProMechshellpro psLaminatestiffdataGet()
•ProMechshellpro psLaminatestiffdataSet()
•ProMechshlpro phomogeneousAlloc()
•ProMechshlpro phomogeneousThicknessGet()
•ProMechshlpro phomogeneousThicknessSet()
•ProMechshlpro phomogeneousFr ee()
•ProMechshlpro plaminatestiffAlloc()
•ProMechshlpro plaminatestiffAppliedstr essGet()
•ProMechshlpro plaminatestiffAppliedstr essSet()
•ProMechshlpro plaminatestiffBendingstiffnessGet()
•ProMechshlpro plaminatestiffBendingstiffnessSet()
•ProMechshlpro plaminatestiffCouplingstiffnessGet()
•ProMechshlpro plaminatestiffCouplingstiffnessSet()
•ProMechshlpro plaminatestiffExtensionalstiffnessGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechshlpro plaminatestiffCouplingstiffnessGet()
•ProMechshlpro plaminatestiffCouplingstiffnessSet()
•ProMechshlpro plaminatestiffExtensionalstiffnessGet()
•ProMechshlpro plaminatestiffExtensionalstiffnessSet()
•ProMechshlpro plaminatestiffIntertiaperunitar eaGet()
•ProMechshlpro plaminatestiffIntertiaperunitar eaSet()
•ProMechshlpro plaminatestiffMassperunitare aGet()
1904 Creo®Parametric TOOLKIT User’sGuide•ProMechshlpro plaminatestiffMassperunitare aSet()
•ProMechshlpro plaminatestiffT ansverseshearGet()
•ProMechshlpro plaminatestiffT ansverseshearSet()
•ProMechshlpro plaminatestiffThermalre sforceGet()
•ProMechshlpro plaminatestiffThermalre sforceSet()
•ProMechshlpro plaminatestiffThermalre smomentGet()
•ProMechshlpro plaminatestiffThermalre smomentSet()
•ProMechshlpro plaminatestiffFre e()
•ProMechstre sscalcdataAlloc()
•ProMechstre sscalcdataCzGet()
•ProMechstre sscalcdataCzSet()
•ProMechstre sscalcdataMaterialIdGet()
•ProMechstre sscalcdataMaterialIdSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechstre sscalcdataAlloc()
•ProMechstre sscalcdataCzGet()
•ProMechstre sscalcdataCzSet()
•ProMechstre sscalcdataMaterialIdGet()
•ProMechstre sscalcdataMaterialIdSet()
•ProMechstre sscalcdataPlyorientationGet()
•ProMechstre sscalcdataPlyorientationSet()
•ProMechstre sscalcdataFr ee()
•ProMechstre sscalcdataPr oarrayFr ee()
•ProMechstiffmatrixEntry1 1Get()
•ProMechstiffmatrixEntry1 1Set()
•ProMechstiffmatrixEntry12Get()
•ProMechstiffmatrixEntry12Set()
•ProMechstiffmatrixEntry16Get()
•ProMechstiffmatrixEntry16Set()
•ProMechstiffmatrixEntry22Get()
•ProMechstiffmatrixEntry22Set()
•ProMechstiffmatrixEntry26Get()
•ProMechstiffmatrixEntry26Set()
•ProMechstiffmatrixEntry66Get()
•ProMechstiffmatrixEntry66Set()
•ProMechstiffmatrixFr ee()
•ProMechtransverseshearEntry44Get()
•ProMechtransverseshearEntry44Set()
•ProMechtransverseshearEntry45Get()
CreoSimulate:Items 1905•ProMechtransverseshearEntry45Set()
•ProMechtransverseshearEntry55Get()
•ProMechtransverseshearEntry55Set()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechtransverseshearEntry45Get()
CreoSimulate:Items 1905•ProMechtransverseshearEntry45Set()
•ProMechtransverseshearEntry55Get()
•ProMechtransverseshearEntry55Set()
•ProMechtransverseshearFr ee()
•ProMechthermalre scoeffEntry1 1Get()
•ProMechthermalre scoeffEntry1 1Set()
•ProMechthermalre scoeffEntry12Get()
•ProMechthermalre scoeffEntry12Set()
•ProMechthermalre scoeffEntry22Get()
•ProMechthermalre scoeffEntry22Set()
•ProMechthermalre scoeffFre e()
•ProMechshlpro plaminatelayupAlloc()
•ProMechshlpro plaminatelayupLayersGet()
•ProMechshlpro plaminatelayupLayersSet()
•ProMechshlpro plaminatelayupT ypeGet()
•ProMechshlpro plaminatelayupT ypeSet()
•ProMechshlpro plaminatelayupFr ee()
•ProMechshlpro plamlayuplayerMaterialIdGet()
•ProMechshlpro plamlayuplayerMaterialIdSet()
•ProMechshlpro plamlayuplayerNumberGet()
•ProMechshlpro plamlayuplayerNumberSet()
•ProMechshlpro plamlayuplayerOrientationGet()
•ProMechshlpro plamlayuplayerOrientationSet()
•ProMechshlpro plamlayuplayerThicknessGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechshlpro plamlayuplayerNumberSet()
•ProMechshlpro plamlayuplayerOrientationGet()
•ProMechshlpro plamlayuplayerOrientationSet()
•ProMechshlpro plamlayuplayerThicknessGet()
•ProMechshlpro plamlayuplayerThicknessSet()
•ProMechshlpro plamlayuplayerShellpro psGet()
•ProMechshlpro plamlayuplayerShellpro psSet()
•ProMechshlpro plamlayuplayerFr ee()
•ProMechshlpro plamlayuplayerPr oarrayFr ee()
Thefunction ProMechshellpropsTypeGet() returnsthetypeofproperties
thathavebeendefinedfortheshell.Thetypesofshellproperties are:
•PRO_MECH_SHLPROP_HOMOGENEOUS—Assigned tohomogenous shells.
Ahomogeneous shellconsistsofasinglematerialwhoseproperties donot
varythroughthethicknessoftheshell.Usethefunction
1906 Creo®Parametric TOOLKIT User’sGuideProMechshellpropsHomogeneousdataGet() toaccessthedata
structureforhomogeneous shellproperty.Usethefunction
ProMechshellpropsHomogeneousdataSet() tosetthe
homogeneous shellproperty.
•PRO_MECH_SHLPROP_LAMINATE_STIFFNESS—Assigned tolaminatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructureforhomogeneous shellproperty.Usethefunction
ProMechshellpropsHomogeneousdataSet() tosetthe
homogeneous shellproperty.
•PRO_MECH_SHLPROP_LAMINATE_STIFFNESS—Assigned tolaminate
shellstospecifytheirdegreeofstiffness.Laminateshellsconsistsofoneor
morematerialswhoseproperties mayvarythroughthethicknessoftheshell.
Usethefunction ProMechshellpropsLaminatestiffdataGet() to
accessthedatastructureforthelaminatestiffnessshellproperty.Usethe
function ProMechshellpropsLaminatestiffdataSet() tosetthe
laminatestiffnessshellproperty.
•PRO_MECH_SHLPROP_LAMINATE_LAYUP—Assigned tolaminateshellsto
definethemaslayersofshells.Usethefunction
ProMechshellpropsLaminatelayupdataGet() toaccessthedata
structureforthelaminatelayupshellproperty.Usethefunction
ProMechshellpropsLaminatelayupdataSet() tosetthelaminate
layupshellproperty.
Thefunction ProMechshellpropsDescriptionGet() returnsthe
description fortheshellproperties. Usethefunction
ProMechshellpropsDescriptionSet() tomodifythedescription forthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlayupshellproperty.
Thefunction ProMechshellpropsDescriptionGet() returnsthe
description fortheshellproperties. Usethefunction
ProMechshellpropsDescriptionSet() tomodifythedescription forthe
shellproperties.
Thefunction ProMechshlprophomogeneousThicknessGet() returns
theshellthicknessdefinedforshells.Usethefunction
ProMechshlprophomogeneousThicknessSet() tosetthethicknessfor
theshellproperties.
Thefunction ProMechshlproplaminatestiffAppliedstressGet()
returnsthecalculation ofstressesandstrainsforthelaminatestiffnessshell
propertytype.Theresultantarraycontainstheshell"Top"locationandtheshell
"Bottom"location.Thevaluesspecifiedintheseareasareusedtocalculatethe
stressesandstrainsforthecorresponding areas.Usethefunction
ProMechshlproplaminatestiffAppliedstressSet()to setthevalue
ofthestressandstraininthecalculation array.
Thefunction ProMechstresscalcdataCzGet() returnsthedistancefrom
themidsurface oftheshellatwhichthestressesandstrainsforthelaminateshellxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofthestressandstraininthecalculation array.
Thefunction ProMechstresscalcdataCzGet() returnsthedistancefrom
themidsurface oftheshellatwhichthestressesandstrainsforthelaminateshell
iscalculated. TheCzisdefinedrelativetomaterialdirection3ofthematerial
orientation assignedtotheshell.Usethefunction
ProMechstresscalcdataCzSet() tosettheCzvalueusedtocalculatethe
stressandstrain.
Thefunction ProMechstresscalcdataMaterialIdGet() returnsthe
materialspecifiedattheCZlocation.Usethefunction
ProMechstresscalcdataMaterialIdSet() tosetthematerialid.
CreoSimulate:Items 1907Thefunction ProMechstresscalcdataPlyorientationGet() returns
theorientation oftheplymaterial.Theplyorientation angleismeasuredasa
counter-clockwise rotationfrommaterialdirection1aboutmaterialdirection3.
Usethefunction ProMechstresscalcdataPlyorientationSet()to set
theorientation oftheplymaterial.
Thefunction
ProMechshlproplaminatestiffBendingstiffnessGet() returns
theshellbendingstiffnessmatrix.Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheorientation oftheplymaterial.
Thefunction
ProMechshlproplaminatestiffBendingstiffnessGet() returns
theshellbendingstiffnessmatrix.Usethefunction
ProMechshlproplaminatestiffBendingstiffnessSet() tosetthe
shellbendingstiffnessmatrix.
Thefunction
ProMechshlproplaminatestiffCouplingstiffnessGet() returns
theshellcouplingstiffnessmatrix.Usethefunction
ProMechshlproplaminatestiffCouplingstiffnessSet()to setthe
shellcouplingstiffnessmatrix.
Thefunction
ProMechshlproplaminatestiffExtensionalstiffnessGet()
returnstheshellextensional stiffnessmatrix.Usethefunction
ProMechshlproplaminatestiffExtensionalstiffnessSet() to
settheshellextensional stiffnessmatrix.
Thefunctions ProMechstiffmatrixEntry11Get(),
ProMechstiffmatrixEntry12Get(),
ProMechstiffmatrixEntry16Get(),
ProMechstiffmatrixEntry22Get(),
ProMechstiffmatrixEntry26Get(), and
ProMechstiffmatrixEntry66Get() provideaccesstheelementsofthe
stiffnessmatrix.
Usethefunctions ProMechstiffmatrixEntry11Set(),
ProMechstiffmatrixEntry12Set(),xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechstiffmatrixEntry26Get(), and
ProMechstiffmatrixEntry66Get() provideaccesstheelementsofthe
stiffnessmatrix.
Usethefunctions ProMechstiffmatrixEntry11Set(),
ProMechstiffmatrixEntry12Set(),
ProMechstiffmatrixEntry16Set(),
ProMechstiffmatrixEntry22Set(),
ProMechstiffmatrixEntry26Set(), and
ProMechstiffmatrixEntry66Set() tomodifytheelementsofthe
stiffnessmatrix.
Thefunction
ProMechshlproplaminatestiffIntertiaperunitareaGet()
returnstherotaryinertiaperunitareaforthelaminatestiffnessproperties. Usethe
function
ProMechshlproplaminatestiffIntertiaperunitareaSet() toset
theinertiaperunitareaforthelaminatestiffnessproperties.
1908 Creo®Parametric TOOLKIT User’sGuideThefunction
ProMechshlproplaminatestiffMassperunitareaGet() returnsthe
massperunitareaforthelaminatestiffnessproperties. Usethefunction
ProMechshlproplaminatestiffMassperunitareaSet() tosetthe
massperunitareaforthelaminatestiffnessproperties.
Thefunction ProMechshlproplaminatestiffTansverseshearGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechshlproplaminatestiffMassperunitareaSet() tosetthe
massperunitareaforthelaminatestiffnessproperties.
Thefunction ProMechshlproplaminatestiffTansverseshearGet()
returnsthetransverse sheerstiffnessforthelaminateshell.Usethefunction
ProMechshlproplaminatestiffTansverseshearSet() tosetthe
transverse sheerstiffnessforthelaminateshell.
Thefunctions ProMechtransverseshearEntry44Get(),
ProMechtransverseshearEntry45Get(), and
ProMechtransverseshearEntry55Get() provideaccesstotheelements
44,45,and55ofthetransverse shearmatrix.Usethefunctions
ProMechtransverseshearEntry44Set(),
ProMechtransverseshearEntry45Set(), and
ProMechtransverseshearEntry55Set() tosettheelements44,45,and
55ofthetransverse shearmatrix.
Thefunctions
ProMechshlproplaminatestiffThermalresforceGet() and
ProMechshlproplaminatestiffThermalresmomentGet() returnthe
thermalresultantcoefficientsforthelaminateshell.Thethermalcoefficientsare
specifiedasForceandMoment.UsethefunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechshlproplaminatestiffThermalresmomentGet() returnthe
thermalresultantcoefficientsforthelaminateshell.Thethermalcoefficientsare
specifiedasForceandMoment.Usethefunctions
ProMechshlproplaminatestiffThermalresforceSet() and
ProMechshlproplaminatestiffThermalresmomentSet() tosetthe
thermalresultantcoefficientsforthelaminateshell.
Thefunctions ProMechthermalrescoeffEntry11Get(),
ProMechthermalrescoeffEntry12Get(), and,
ProMechthermalrescoeffEntry22Get() provideaccesstotheelements
11,12,and22ofthethermalresultantcoefficientmatrix.Usethefunctions
ProMechthermalrescoeffEntry11Set(),
ProMechthermalrescoeffEntry12Set(),
ProMechthermalrescoeffEntry22Set() tosettheelements11,12,and
22ofthethermalresultantcoefficientmatrix.
Thefunction ProMechshlproplaminatelayupLayersGet() returnsan
arrayoflayers,orplies,stackedoneachothertoformthelaminate.Usethe
function ProMechshlproplaminatelayupLayersSet() tosetthelayers
assignedtothelaminateshellproperties.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarrayoflayers,orplies,stackedoneachothertoformthelaminate.Usethe
function ProMechshlproplaminatelayupLayersSet() tosetthelayers
assignedtothelaminateshellproperties.
Thefunction ProMechshlproplaminatelayupTypeGet() returnsthe
layerrepetitionpatternforthelaminatelayuptypeshells.Thetypesofrepetition
patternsare:
•PRO_MECH_LAMLAYUP_SYMMETRIC—Specifies thatthelayersare
repeatedinreverseorder.
CreoSimulate:Items 1909•PRO_MECH_LAMLAYUP_ANTISYMMETRIC—Specifies thatthelayersare
repeatedinreverseorder,andtheorientation isalsochanged.
•PRO_MECH_LAMLAYUP_NEITHER—Specifies thatthelayersarenot
repeated.
Usethefunction ProMechshlproplaminatelayupTypeSet() tosetthe
typeoflaminatelayupshellproperties.
Thefunction ProMechshlproplamlayuplayerMaterialIdGet()
returnsthenameofthematerialassignedtothespecifiedlayerUsethefunction
ProMechshlproplamlayuplayerMaterialIdSet() tosettheidofthe
specifiedlaminatelayer.
Thefunction ProMechshlproplamlayuplayerNumberGet() returnsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechshlproplamlayuplayerMaterialIdSet() tosettheidofthe
specifiedlaminatelayer.
Thefunction ProMechshlproplamlayuplayerNumberGet() returnsthe
numberoftimesaparticularlayerisrepeatedforthelaminate.Usethefunction
ProMechshlproplamlayuplayerNumberSet() tosetthenumberforthe
laminatelayuplayer.
Thefunction ProMechshlproplamlayuplayerOrientationGet()
returnstheorientation ofthespecifiedlayerofthelaminate.Usethefunction
ProMechshlproplamlayuplayerOrientationSet() tosetthe
orientation ofthespecifiedlayerofthelaminate.
Thefunction ProMechshlproplamlayuplayerThicknessGet() returns
thethicknessofthespecifiedlayerofthelaminate.Usethefunction
ProMechshlproplamlayuplayerThicknessSet() tosetthethickness
ofthespecifiedlayerofthelaminate.
Thefunction ProMechshlproplamlayuplayerShellpropsGet()
returnstheshellproperties forthespecifiedlaminatelayer.Usethefunction
ProMechshlproplamlayuplayerShellpropsSet() tosettheshell
properties.
ShellPairsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreturnstheshellproperties forthespecifiedlaminatelayer.Usethefunction
ProMechshlproplamlayuplayerShellpropsSet() tosettheshell
properties.
ShellPairs
Theshellpairsarecreatedbasedonthesurfacesbelonging toapart.Theshell
pairsarecompressed toamidsurfaceorsetofmidsurfacesandshellelementsare
assignedtoit.
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothedata
andcontentsoftheCreoSimulateshellpairobjects.ShellpairsusetheProType
fieldintheProMechitem structureasPRO_SIMULATION_SHELL_PAIR.
Functions Introduced:
•ProMechshlpairr efsAlloc()
•ProMechshellpairMaterialIdGet()
•ProMechshellpairMaterialIdSet()
•ProMechshellpairMaterialOrientIdGet()
1910 Creo®Parametric TOOLKIT User’sGuide•ProMechshellpairMaterialOrientIdSet()
•ProMechshellpairRefer encesGet()
•ProMechshellpairRefer encesSet()
•ProMechshlpairr efsTypeGet()
•ProMechshlpairr efsTypeSet()
•ProMechshlpairr efsPlacementtypeGet()
•ProMechshlpairr efsPlacementtypeSet()
•ProMechshlpairr efsBottomr eferencesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechshlpairr efsTypeGet()
•ProMechshlpairr efsTypeSet()
•ProMechshlpairr efsPlacementtypeGet()
•ProMechshlpairr efsPlacementtypeSet()
•ProMechshlpairr efsBottomr eferencesGet()
•ProMechshlpairr efsBottomr eferencesSet()
•ProMechshlpairr efsTopreferencesGet()
•ProMechshlpairr efsTopreferencesSet()
•ProMechshlpairr efsSelectedplacementGet()
•ProMechshlpairr efsSelectedplacementSet()
•ProMechshlpairr efsExtendAdjacentSurfacesGet()
•ProMechshlpairr efsExtendAdjacentSurfacesSet()
•ProMechshlpairr efsFr ee()
Thefunction ProMechshellpairMaterialIdGet() returnsthematerial
usedtocreatetheshellpair.Usethefunction
ProMechshellpairMaterialIdSet() tosetthematerialidoftheshell
pair.
Thefunction ProMechshellpairReferencesGet() returnsthegeometric
references fortheshellpairitem.Usethefunction
ProMechshellpairReferencesSet() tosetthegeometric references for
theshellpairitem.
Thefunction ProMechshlpairrefsTypeGet() returnsthetypeofshellpair
references. Thetypesofshellpairsare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechshellpairReferencesSet() tosetthegeometric references for
theshellpairitem.
Thefunction ProMechshlpairrefsTypeGet() returnsthetypeofshellpair
references. Thetypesofshellpairsare:
•PRO_MECH_SHELL_PAIR_CONSTANT—Specifies ashellpairwith
constantthickness. Allopposingsurfacesparalleltoeachotherandequidistant
fromtheopposingsurfaceforaconstant-thickness shellpair.
•PRO_MECH_SHELL_PAIR_VARIABLE—Specifies avariablethickness
shellpair.Bothopposingsurfacesareneitherparallelnorconcentric fora
variablethicknessshellpair.
CreoSimulate:Items 1911Note
FromCreoParametric onwards,theshelltypePRO_MECH_SHELL_
PAIR_VARIABLE isalsosupported intheNativemodeofCreoSimulate
.
•PRO_MECH_SHELL_PAIR_MULTI_CONSTANT—Specifies ashellpair
withmultiplepairsofsurfaces.Forapairofsurfaces,eachsurfaceisparallel
toandequidistant fromtheopposingsurface.However,thedistancebetween
thesurfacesforeachofthemultiplepairsmayvary.
Note
FromCreoParametric onwards,thethicknesstypePRO_MECH_SHELL_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoandequidistant fromtheopposingsurface.However,thedistancebetween
thesurfacesforeachofthemultiplepairsmayvary.
Note
FromCreoParametric onwards,thethicknesstypePRO_MECH_SHELL_
PAIR_MULTI_CONSTANT hasbeendeprecated andthefunction
ProMechshlpairrefsTypeSet() willreturnanerrortypePRO_
TK_UNSUPPORTED.
Usethefunction ProMechshlpairrefsTypeSet() tosetthetypeofshell
pairreferences.
Thefunctions ProMechshlpairrefsTopreferencesGet() and
ProMechshlpairrefsBottomreferencesGet() provideaccesstothe
topandbottomreferences fortheshellpair.Thisshouldbedefinedforallshell
pairtypes.Usethefunctions
ProMechshlpairrefsBottomreferencesSet() and
ProMechshlpairrefsTopreferencesSet() tosetthetopandbottom
references fortheshellpair.
Thefunction ProMechshlpairrefsPlacementtypeGet() returnsthe
placement ofshellpair.Thetypesofplacement references areasfollows:
•PRO_MECH_SHELL_PAIR_PLACEMENT_TOP—Specifies thatthe
placement usesthetopsurfaceofthesurfacepair.
•PRO_MECH_SHELL_PAIR_PLACEMENT_BOTTOM— Specifiesthatthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MECH_SHELL_PAIR_PLACEMENT_TOP—Specifies thatthe
placement usesthetopsurfaceofthesurfacepair.
•PRO_MECH_SHELL_PAIR_PLACEMENT_BOTTOM— Specifiesthatthe
placement usesthebottomsurfaceofthesurfacepair.
•PRO_MECH_SHELL_PAIR_PLACEMENT_MIDDLE— Specifiesthatthe
placement usesthemidsurfaceofthesurfacepair.
•—Specifiesthattheplacement usesanarbitraryselectedsurface,whichcan
beadatumsurface.
Usethefunction ProMechshlpairrefsPlacementtypeSet() tosetthe
placement typeoftheshellpair.
1912 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProMechshlpairrefsSelectedplacementGet() to
accessthedatastructurecontaining theselectedsurface.Usethefunction
ProMechshlpairrefsSelectedplacementSet() tosetthesurfacefor
theplacement referenceoftypeSELECTED.
Usethefunction
ProMechshlpairrefsExtendAdjacentSurfacesGet() toretrievethe
valueoftheflagthatindicateswhethertheadjacentsurfacesinashellpairwillbe
extendedduringmeshingornot.Foramixedmodel,youcansetthisflagtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechshlpairrefsExtendAdjacentSurfacesGet() toretrievethe
valueoftheflagthatindicateswhethertheadjacentsurfacesinashellpairwillbe
extendedduringmeshingornot.Foramixedmodel,youcansetthisflagto
extendsurfacesadjacenttothetopandbottomsurfacesoftheshellpairbyusing
thefunction ProMechshlpairrefsExtendAdjacentSurfacesSet().
However,thisispossibleonlyiftheanglebetweentheshellpairsurfacesandtheir
adjacentsurfacesislessthanthevaluespecifiedbytheconfiguration option.
Note
Foramidsurface model,CreoSimulateextendstheadjacentsurfaces
regardless ofthevalueofsim_extend_surf_max_angle. Thedefault
valueofsim_extend_surf_max_angle is30degrees.
YoumustinitializetheCreoSimulateenvironment tousethesefunctions. For
shellpairsdefinedinPro/ENGINEER Mechanica 4.0andearlier,thisflagis
setto1bydefault.
Usethefunction ProMechshlpairrefsFree() tofreethesimpleshelldata
handleinCreoSimulate.
Interfaces
Interfaces, alsocalledconnections, areusedtoconnectsurfaces.Whenyoucreatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsetto1bydefault.
Usethefunction ProMechshlpairrefsFree() tofreethesimpleshelldata
handleinCreoSimulate.
Interfaces
Interfaces, alsocalledconnections, areusedtoconnectsurfaces.Whenyoucreate
aninterfaceinCreoSimulate,specifyhowCreoSimulatewilltreattheconnected
surfacesduringmeshingandanalysis.Interfaces usetheProType fieldinthe
ProMechitem structureasPRO_SIMULATION_INTERFACE.
Functions Introduced:
•ProMechinterfaceT ypeGet()
•ProMechinterfaceRefer encesGet()
•ProMechinterfaceRefer encesSet()
•ProMechinterfacebonddataAlloc()
•ProMechinterfaceBonddataGet()
•ProMechinterfaceBonddataSet()
•ProMechinterfacebonddataFr ee()
CreoSimulate:Items 1913•ProMechinterfacefre edataAlloc()
•ProMechinterfaceFr eedataGet()
•ProMechinterfaceFr eedataSet()
•ProMechinterfacefre edataFree()
•ProMechinterfacecontactdataAlloc()
•ProMechinterfaceContactdataGet()
•ProMechinterfaceContactdataSet()
•ProMechinterfacecontactdataFre e()
•ProMechinterfacethrre sistdataAlloc()
•ProMechinterfaceThrr esistdataGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechinterfaceContactdataGet()
•ProMechinterfaceContactdataSet()
•ProMechinterfacecontactdataFre e()
•ProMechinterfacethrre sistdataAlloc()
•ProMechinterfaceThrr esistdataGet()
•ProMechinterfaceThrr esistdataSet()
•ProMechinterfacethrre sistdataFre e()
Thefunction ProMechinterfaceTypeGet() returnsthetypeofinterface
usedtoconnectsurfaces.Thetypesofinterfacesare:
•Structural—Specifies thedefaultfortheinterfacescreatedbetweenthe
geometryinastructuralmodelformeshingandrunning.
○PRO_MECH_INTERFACE_BOND_STRUCT—Specifies thatthe
contacting surfacesasbonded.Thismeansthatmatchingnodeson
contacting surfacesmerge.
○PRO_MECH_INTERFACE_CONTACT_STRUCT—Specifies aninterface
betweencomponents whenyouwantthecomponents tohavethefreedom
toremainseparatefromeachother,andalsowhenyouwantthe
components totransferforcesbetweenthemwhentheytouch,orcomeinto
contactwitheachother.
○PRO_MECH_INTERFACE_FREE_STRUCT—Specifies twosurfacesas
contacting, butdoesnotmergethenodes.Meshesonthecontactingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponents totransferforcesbetweenthemwhentheytouch,orcomeinto
contactwitheachother.
○PRO_MECH_INTERFACE_FREE_STRUCT—Specifies twosurfacesas
contacting, butdoesnotmergethenodes.Meshesonthecontacting
surfacesareidentical,andmatchingnodesarecoincident.
•Thermal—Specifies thedefaultfortheinterfacescreatedbetweenthe
geometryinathermalmodelformeshingandrunning.
○PRO_MECH_INTERFACE_BOND_THERM—Specifies thatcoincident
geometryisbonded.
○PRO_MECH_INTERFACE_FREE_THERM—Specifies thatnogeometryin
theassemblyismerged.
○PRO_MECH_INTERFACE_RESIST_THERM—Specify thisinterfacetype
tocreateathermalresistance interfacesatrun-time.
1914 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechinterfaceReferencesGet() returnsthegeometric
entitiesselectedtocreatetheinterface.Usethefunction
ProMechinterfaceReferencesSet() tosetthegeometric entities
selectedtocreatetheinterface.
Thefunction ProMechinterfacebonddataAlloc() allocatesmemoryfor
theCreoSimulatebondedinterfacedata.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechinterfaceReferencesSet() tosetthegeometric entities
selectedtocreatetheinterface.
Thefunction ProMechinterfacebonddataAlloc() allocatesmemoryfor
theCreoSimulatebondedinterfacedata.
Thefunction ProMechinterfaceBonddataGet() providesaccesstothe
bondedinterfacedata.Thefunctionreturnswhetherthespecifiedbondedinterface
shoulduselinksbetweenpairsofnodes.
Usethefunction ProMechinterfaceBonddataSet() toassignthebonded
interfacedatatotheCreoSimulateitem.
Usethefunction ProMechinterfacebonddataFree() tofreethememory
ofthebondedinterfacedata.
Thefunction ProMechinterfacefreedataAlloc() allocatesmemoryfor
theCreoSimulatefreeinterfacedatastructure.
Thefunction ProMechinterfaceFreedataGet() providesaccesstothe
freeinterfacedata.Thefunctionreturnsaflagthatindicateswhetherthemeshes
generatedonthesurfacesoftheinterfacearecoincident ornot.Usethefunction
ProMechinterfaceFreedataSet() toassignthefreeinterfacedatatothe
CreoSimulateitem.
Thefunction ProMechinterfacecontactdataAlloc() allocatesmemoryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechinterfaceFreedataSet() toassignthefreeinterfacedatatothe
CreoSimulateitem.
Thefunction ProMechinterfacecontactdataAlloc() allocatesmemory
fortheCreoSimulatecontactinterfacedatastructure.
Thefunction ProMechinterfaceContactdataGet() providesaccessto
theproperties ofthecontactinterfacedata.Usethefunction
ProMechinterfaceContactdataSet() toassignthecontactinterface
datatotheCreoSimulateitem.
Thefunction ProMechinterfacethrresistdataAlloc() allocates
memoryfortheCreoSimulatethermalresistance interfacedatastructure.
Thefunction ProMechinterfaceThrresistdataGet() providesaccess
tothethermalresistance interfacedata.Usethefunction
ProMechinterfaceThrresistdataSet() toassignthethermal
resistance interfacedatatotheCreoSimulateitem.
BondedInterface
Functions Introduced:
•ProMechbondinterfacedataMergenodesGet()
•ProMechbondinterfacedataMergenodesSet()
CreoSimulate:Items 1915Thefunction ProMechbondinterfacedataMergenodesGet() specifiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProMechbondinterfacedataMergenodesGet()
•ProMechbondinterfacedataMergenodesSet()
CreoSimulate:Items 1915Thefunction ProMechbondinterfacedataMergenodesGet() specifies
ifcoincident nodesofcomponents orsurfacestouchingeachotheraremerged
duringmeshing.Usethefunction
ProMechbondinterfacedataMergenodesSet() tosetwhether
coincident nodesforbondedinterfaceshouldmerge.
ContactInterface
Functions Introduced:
•ProMechcontactinterfacedataSeparationdistanceExprGet()
•ProMechcontactinterfacedataSeparationdistanceExprSet()
•ProMechcontactinterfacedataAnglebetweensurfacesExprGet()
•ProMechcontactinterfacedataAnglebetweensurfacesExprSet()
•ProMechcontactinterfacedataCheckonlyplanarGet()
•ProMechcontactinterfacedataCheckonlyplanarSet()
•ProMechcontactinterfacedataSlippageGet()
•ProMechcontactinterfacedataSlippageSet()
•ProMechcontactinterfacedataCoefffrictionGet()
•ProMechcontactinterfacedataCoefffrictionSet()
•ProMechcontactinterfacedataSplitsurfacesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechcontactinterfacedataSlippageSet()
•ProMechcontactinterfacedataCoefffrictionGet()
•ProMechcontactinterfacedataCoefffrictionSet()
•ProMechcontactinterfacedataSplitsurfacesGet()
•ProMechcontactinterfacedataSplitsurfacesSet()
•ProMechcontactinterfacedataCompatiblemeshGet()
•ProMechcontactinterfacedataCompatiblemeshSet()
•ProMechcontactinterfacedataFrictionSet()
•ProMechcontactinterfacedataFrictionGet()
•ProMechcontactinterfacedataDynamicCoefffrictionSet()
•ProMechcontactinterfacedataDynamicCoefffrictionGet()
•ProMechcontactinterfacedataDynamicCoeffSameAsStaticSet()
•ProMechcontactinterfacedataDynamicCoeffSameAsStaticGet()
•ProMechcontactinterfacedataUseSelectionFilterT olSet()
•ProMechcontactinterfacedataUseSelectionFilterT olGet
Tocreateacontactinterfacebetweentwocomponents ofanassembly,withthe
referencetypeascomponent-component, specifytheselectionfiltertolerance
criteria.Youcanspecifytheselectionfiltertolerancecriteriausingthefollowing
functions.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreferencetypeascomponent-component, specifytheselectionfiltertolerance
criteria.Youcanspecifytheselectionfiltertolerancecriteriausingthefollowing
functions.
1916 Creo®Parametric TOOLKIT User’sGuideUsethefunction
roMechcontactinterfacedataSeparationdistanceExprGet()to
retrievetheseparation distance.Separation distanceisthedistancebetweenthe
surfacepairsthatyouwanttousetodefineacontactinterface.Thisseparation
distanceisthelimitbeyondwhichacontactinterfacecannotbecreated.Ifthe
distancebetweenthesurfacesoftwocomponents issmallerthantheseparation
distance,thesurfacesareusedforcreationofthecontactinterface.
Theseparation distanceisreturnedasanexpression oftype
ProMechExpression.
Note
Thefunction
ProMechcontactinterfacedataSeparationdistanceExpr
Get()supersedes thefunction
ProMechcontactinterfacedataSeparationdistanceGet().
Thefunction
ProMechcontactinterfacedataSeparationdistanceExprSet()
setstheseparation distance.Specifythisdistanceasanexpression oftype
ProMechExpression.
Note
ThefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction
ProMechcontactinterfacedataSeparationdistanceExprSet()
setstheseparation distance.Specifythisdistanceasanexpression oftype
ProMechExpression.
Note
Thefunction
ProMechcontactinterfacedataSeparationdistanceExpr
Set()supersedes thefunction
ProMechcontactinterfacedataSeparationdistanceSet().
Thefunction
ProMechcontactinterfacedataAnglebetweensurfacesExpr
Get()returnstheanglebetweenplanarsurfaceswhilecreatingcontactinterface.
Thisangleisreturnedasanexpression oftypeProMechExpression.
Note
Thefunction
ProMechcontactinterfacedataAnglebetweensurfacesExpr
Get()supersedes thefunction
ProMechcontactinterfacedataAnglebetweensurfacesGet().
CreoSimulate:Items 1917Thefunction
ProMechcontactinterfacedataAnglebetweensurfacesExpr
Set()setstheanglebetweensurfaceswhilecreatingcontactinterface.Specify
thisangleasanexpression oftypeProMechExpression.
Note
Thefunction
ProMechcontactinterfacedataAnglebetweensurfacesExpr
Set()supersedes thefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthisangleasanexpression oftypeProMechExpression.
Note
Thefunction
ProMechcontactinterfacedataAnglebetweensurfacesExpr
Set()supersedes thefunction
ProMechcontactinterfacedataAnglebetweensurfacesSet().
Thefunction
ProMechcontactinterfacedataCheckonlyplanarGet() returnsa
trueifthecontactiscreatedbetweenplanarsurfacesinacomponent-component
typeinterface.
Usethefunction
ProMechcontactinterfacedataCheckonlyplanarSet() tocreate
contactsonlybetweenplanarsurfaces.
Theproperties ofthecontactinterfaceareasfollows:
Usethefunction ProMechcontactinterfacedataFrictionSet() to
setthetypeofthefrictionatthecontactinterface,betweenthepairsofnodes,
usingtheenumerated typeProMechInterfaceFrictionType. Thevalid
valuesare:
•PRO_MECH_INTERFACE_FRICTION_INFINITE—Specifies thatinfinite
frictionexistsatthecontactinterfacethatis,thetwocomponents orsurfaces
cannotsliderelativetoeachother.
•PRO_MECH_INTERFACE_FRICTION_FINITE—Specifies thatfinite
frictionexistsatthecontactinterfacethatis,thatis,thetwocomponents orxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcannotsliderelativetoeachother.
•PRO_MECH_INTERFACE_FRICTION_FINITE—Specifies thatfinite
frictionexistsatthecontactinterfacethatis,thatis,thetwocomponents or
surfacesareabletosliderelativetoeachother.
Usethefunction ProMechcontactinterfacedataFrictionGet() to
obtainthetypeoffrictionpresentatthecontactinterface.
Thefunction ProMechcontactinterfacedataSlippageGet() returns
trueifslippagehasoccurredinthecontactregionduringtheanalysis.Usethe
function ProMechcontactinterfacedataSlippageSet() tocheckfor
slippageinthecontactareaduringanalysis.
Thefunction ProMechcontactinterfacedataCoefffrictionGet()
returnsthecoefficientoffrictionusedtocalculatetheslippageinthecontact
regionduringanalysis.Usethefunction
1918 Creo®Parametric TOOLKIT User’sGuideProMechcontactinterfacedataCoefffrictionSet() tosetthe
coefficientoffrictionforcomputing theslippage.Specifyapositivevalueasthe
coefficientoffriction.
Thefunction ProMechcontactinterfacedataSplitsurfacesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcoefficientoffrictionforcomputing theslippage.Specifyapositivevalueasthe
coefficientoffriction.
Thefunction ProMechcontactinterfacedataSplitsurfacesGet()
returnstrueifyousplitthesurfacesharedbythevolumesusedtodefinethe
interface.
Usethefunction
ProMechcontactinterfacedataSplitsurfacesSet() tospecify
whethertheinterfaceshouldsplitsurfaces.
Thefunction ProMechcontactinterfacedataCompatiblemeshGet()
specifiesifacompatible meshiscreatedwhencomponents intheassemblyare
touching.
Usethefunction
ProMechcontactinterfacedataCompatiblemeshSet() tocreate
geometrically-consistent nodelocationswhenthemeshforthesurfacesofyour
interfaceisgenerated.
Usethefunction
ProMechcontactinterfacedataDynamicCoefffrictionSet() to
setthedynamiccoefficientoffrictionforthecontactinterface.Thedynamic
coefficientoffrictionpreventstheaxissurfacesfrommovingfreelyagainsteach
otherwhichslowsdownthemotion.
Note
Setavaluelessthanorequaltothevalueofstaticcoefficientoffrictionfor
thisinterface.
Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxotherwhichslowsdownthemotion.
Note
Setavaluelessthanorequaltothevalueofstaticcoefficientoffrictionfor
thisinterface.
Usethefunction
ProMechcontactinterfacedataDynamicCoefffrictionGet() to
obtainthedynamiccoefficientoffrictionforthespecifiedcontactinterfacedata.
Usethefunction ProMathExpressionEvaluate() toevaluatethedynamic
coefficientoffriction.
Usethefunction
ProMechcontactinterfacedataDynamicCoeffSameAsStatic
Set()tosetthedynamiccoefficientoffrictionsameasthestaticcoefficientof
friction.Passthevalue PRO_B_TRUE tosetthedynamiccoefficientoffriction
sameasstaticcoefficientoffriction.
Usethefunction
ProMechcontactinterfacedataDynamicCoeffSameAsStatic
Get()toidentifywhetherthedynamiccoefficientoffrictionissameasthestatic
coefficientoffriction.Thisfunctionreturnsthevalue PRO_B_TRUE ifthe
dynamicandstaticcoefficientoffrictionpossessthesamevalue.
CreoSimulate:Items 1919Usethefunction
ProMechcontactinterfacedataUseSelectionFilterTolSet() toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdynamicandstaticcoefficientoffrictionpossessthesamevalue.
CreoSimulate:Items 1919Usethefunction
ProMechcontactinterfacedataUseSelectionFilterTolSet() to
settheselectionfiltertolerancebetweencontactsurfaces.Passthevalue PRO_B_
TRUEtoswitchontheselectionfiltertolerances.
Usethefunction
ProMechcontactinterfacedataUseSelectionFilterTolGet() to
identifywhetherthespecifiedcontactinterfaceusestheselectionfiltertolerances
betweenthecontactsurfaces.Thisfunctionreturnsthevalue PRO_B_TRUE ifthe
contactsurfacesusetheselectionfiltertolerances.
ThermalResistance Interface
Functions Introduced:
•ProMechthrr esistinterfacedataConductivityGet()
•ProMechthrr esistinterfacedataConductivitySet()
Thefunction ProMechthrresistinterfacedataConductivityGet()
returnstheheattransfercoefficientfortheinterface.Theheattransfercoefficient
istheheatthatpassesthroughtheinterfaceperunittimeperunitareawhenthe
temperature differencebetweenoppositeinterfacesurfacesisoneunit.
Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxistheheatthatpassesthroughtheinterfaceperunittimeperunitareawhenthe
temperature differencebetweenoppositeinterfacesurfacesisoneunit.
Usethefunction
ProMechthrresistinterfacedataConductivitySet() tosetthe
heattransfercoefficientfortheinterface.Specifyapositivenumberastheheat
transfercoefficient.
FreeInterface
Functions Introduced:
•ProMechfre einterfacedataSplitsurfacesGet()
•ProMechfre einterfacedataSplitsurfacesSet()
Thefunction ProMechfreeinterfacedataSplitsurfacesGet()
returnstrueifyousplitthesurfacesharedbythevolumesusedtodefinethefree
interface.
Thefunction ProMechfreeinterfacedataSplitsurfacesSet() to
specifywhetherthefreeinterfaceshouldsplitsurfaces.
Gaps
Agapisanonlinearelement,usedtomodelconnection betweenpoints,edgesand
curves,orsurfacesinyourmodelbyconnecting twonodesinseparated
geometries. GapsusetheProType fieldintheProMechitem structureas
PRO_SIMULATION_GAP.
1920 Creo®Parametric TOOLKIT User’sGuideFunctions Introduced:
•ProMechgapT ypeGet()
•ProMechgapRefer encesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometries. GapsusetheProType fieldintheProMechitem structureas
PRO_SIMULATION_GAP.
1920 Creo®Parametric TOOLKIT User’sGuideFunctions Introduced:
•ProMechgapT ypeGet()
•ProMechgapRefer encesGet()
•ProMechgapRefer encesSet()
•ProMechgapSimpledataGet()
•ProMechgapSimpledataSet()
•ProMechsimplegapdataAlloc()
•ProMechsimplegapdataFre e()
•ProMechsimplegapdataYdire ctionGet()
•ProMechsimplegapdataYdire ctionSet()
•ProMechsimplegapdataDistributiontypeGet()
•ProMechsimplegapdataDistributiontypeSet()
•ProMechsimplegapdataAxialstiffnessGet()
•ProMechsimplegapdataAxialstiffnessSet()
•ProMechsimplegapdataT ransversestiffnessGet()
•ProMechsimplegapdataT ransversestiffnessSet()
•ProMechsimplegapdataClearanceGet()
•ProMechsimplegapdataClearanceSet()
Thefunction ProMechgapTypeGet() returnsthetypeofgapforthespecified
CreoSimulateGap.
Thefunction ProMechgapReferencesGet() returnsthegeometric entities
ofthemodelthatareselectedtocreatethegap.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoSimulateGap.
Thefunction ProMechgapReferencesGet() returnsthegeometric entities
ofthemodelthatareselectedtocreatethegap.Usethefunction
ProMechgapReferencesSet() tosetthevalidgeometric references forthe
specifiedgap.
Thefunction ProMechgapSimpledataGet() returnsthedatastructurefor
theCreoSimulategapdata.TheCreoSimulategapdatastructuredefinesthey-
directionandthestiffnessproperties ofthegap.Usethefunction
ProMechgapSimpledataSet() tosettheCreoSimulategapdatastructure.
Thefunction ProMechsimplegapdataAlloc() allocatesmemoryforthe
CreoSimulategapdatastructure.
ProMechsimplegapdataYdirectionGet() returnstheorientation ofthe
XY-planeofthegap.Usethefunction
ProMechsimplegapdataYdirectionSet() tosettheY-directionofthe
gapdata.
Thefunction ProMechsimplegapdataDistributiontypeGet() returns
themethodusedtocalculatetheaxialandtransverse stiffnessesforthegapdata.
Thetypesofdistribution areasfollows:
CreoSimulate:Items 1921•PRO_MECH_GAP_DISTR_TOTAL—Specifies thesumofstiffnessofallthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthemethodusedtocalculatetheaxialandtransverse stiffnessesforthegapdata.
Thetypesofdistribution areasfollows:
CreoSimulate:Items 1921•PRO_MECH_GAP_DISTR_TOTAL—Specifies thesumofstiffnessofallthe
contactelements.
•PRO_MECH_GAP_DISTR_PER_UNIT—Specifies thatthestiffnessvalueis
calculated usingtheareaofthefirstselectedsurface.
Usethefunction ProMechsimplegapdataDistributiontypeSet() to
setthedistribution typeforthegapdata.
Thefunction ProMechsimplegapdataAxialstiffnessGet() returns
theaxialstiffnessforthegap.Theaxialstiffnessdefinesastiffnessorspring
factor.Usethefunction ProMechsimplegapdataAxialstiffnessSet()
tosettheaxialstiffnessforthegap.
Thefunction ProMechsimplegapdataTransversestiffnessGet()
returnsthetransverse stiffnessforthegap.Thetransverse stiffnessdefinesthe
elasticstiffnessofthematerial.Usethefunction
ProMechsimplegapdataTransversestiffnessSet() tosetthe
transverse stiffnessofthegap.
Thefunction ProMechsimplegapdataClearanceGet() returnsthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelasticstiffnessofthematerial.Usethefunction
ProMechsimplegapdataTransversestiffnessSet() tosetthe
transverse stiffnessofthegap.
Thefunction ProMechsimplegapdataClearanceGet() returnsthe
distancebetweentwonodesatwhichtheaxialandtransverse stiffnessesareactive
duetodisplacement duringanalysis.Usethefunction
ProMechsimplegapdataClearanceSet() tosettheclearanceforthegap
data.
MeshControl
Meshcontrolsdefinethecharacteristics ofamesh.Meshcontrolsspecifythe
minimumormaximum sizeoftheelements,thedistribution ofnodesalongedges,
hardpointsandhardcurves,meshIDnumbering, meshIDoffsets,andthe
displacement coordinate system.Thefunctionsdescribedinthissectionprovide
accesstothedataandcontentsoftheCreoSimulatemeshcontrolobjects.Mesh
controlsusetheProType fieldintheProMechitem structureasPRO_
SIMULATION_MESH_CNTRL.
Functions Introduced:
•ProMechmeshcntrlT ypeGet()
•ProMechmeshcntrlAutogemedgedistrdataGet()
•ProMechmeshcntrlAutogemedgedistrdataSet()
•ProMechmeshcntrlAutogemminedgedataGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSIMULATION_MESH_CNTRL.
Functions Introduced:
•ProMechmeshcntrlT ypeGet()
•ProMechmeshcntrlAutogemedgedistrdataGet()
•ProMechmeshcntrlAutogemedgedistrdataSet()
•ProMechmeshcntrlAutogemminedgedataGet()
•ProMechmeshcntrlAutogemminedgedataSet()
•ProMechmeshcntrlAutogemelemsizedataGet()
•ProMechmeshcntrlAutogemelemsizedataSet()
•ProMechmeshcntrlAutogemedgelencrvdataGet()
1922 Creo®Parametric TOOLKIT User’sGuide•ProMechmeshcntrlAutogemedgelencrvdataSet()
•ProMechmeshcntrlEdgedistrdataGet()
•ProMechmeshcntrlEdgedistrdataSet()
•ProMechmeshcntrlElemsizedataGet()
•ProMechmeshcntrlElemsizedataSet()
•ProMechmeshcntrlShellcsysGet()
•ProMechmeshcntrlShellcsysSet()
•ProMechmeshcntrlHardpointGet()
•ProMechmeshcntrlHardpointSet()
•ProMechmeshcntrlHardcurveSet()
•ProMechmeshcntrlIdsoffsetGet()
•ProMechmeshcntrlIdsoffsetSet()
•ProMechmeshcntrlNumberingGet()
•ProMechmeshcntrlNumberingSet()
•ProMechmeshcntrlSuppr essGet()
•ProMechmeshcntrlSuppr essSet()
•ProMechmcautogemsuppre ssTypeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmeshcntrlIdsoffsetSet()
•ProMechmeshcntrlNumberingGet()
•ProMechmeshcntrlNumberingSet()
•ProMechmeshcntrlSuppr essGet()
•ProMechmeshcntrlSuppr essSet()
•ProMechmcautogemsuppre ssTypeGet()
•ProMechmcautogemsuppre ssTypeSet()
•ProMechmeshcntrlAutogemsuppr essGet()
•ProMechmeshcntrlAutogemsuppr essSet()
•ProMechmeshcntrlAutogemisolateexcludedataGet()
•ProMechmeshcntrlAutogemisolateexcludedataSet()
•ProMechmeshcntrlRefer encesGet()
•ProMechmeshcntrlRefer encesSet()
•ProMechmcautogemHardpointSet()
•ProMechmcautogemHardcurveSet()
Thefunction ProMechmeshcntrlTypeGet() returnsthetypeofmesh
control.Thetypesofmeshcontrolsare:
•PRO_MECH_MC_AGEM_EDGE_DISTR—Specifies theedgedistribution data
forAutoGEM. Usethefunction
ProMechmeshcntrlAutogemedgedistrdataGet() toaccessthe
AutoGEM edgedistribution dataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlAutogemedgedistrdataSet() tomodifythe
AutoGEM edgedistribution dataforthemeshcontrolitem.
CreoSimulate:Items 1923NotexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAutoGEM edgedistribution dataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlAutogemedgedistrdataSet() tomodifythe
AutoGEM edgedistribution dataforthemeshcontrolitem.
CreoSimulate:Items 1923Note
Ifyouarecreatinganewmeshcontrolusingthistypeofdata,youshould
assignthemodelasareferenceusingthefunction
ProMechmeshcntrlReferencesSet().
•PRO_MECH_MC_AGEM_MIN_EDGE—Specifies theminimumedgeandface
anglesforAutoGEM. Usethefunction
ProMechmeshcntrlAutogemminedgedataGet() toaccessthe
AutoGEM minimumedgedataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlAutogemminedgedataSet() tomodifythe
AutoGEM minimumedgedataforthemeshcontrolitem.
Note
Ifyouarecreatinganewmeshcontrolusingthistypeofdata,youshould
assignthemodelasareferenceusingthefunction
ProMechmeshcntrlReferencesSet().
•PRO_MECH_MC_AGEM_MAX_ELEMENT_SIZE—Specifies themaximum
elementsizefortheAutoGEM mesh.Usethefunction
ProMechmeshcntrlAutogemelemsizedataGet() toaccessthe
AutoGEM maximum elementdataforthemeshcontrolitem.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementsizefortheAutoGEM mesh.Usethefunction
ProMechmeshcntrlAutogemelemsizedataGet() toaccessthe
AutoGEM maximum elementdataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlAutogemelemsizedataSet() tomodifythe
AutoGEM maximum elementdataforthemeshcontrolitem.
Note
Ifyouarecreatinganewmeshcontrolusingthistypeofdata,youshould
assignthemodelasareferenceusingthefunction
ProMechmeshcntrlReferencesSet().
•PRO_MECH_MC_AGEM_EDGE_LEN_CRV—Specifies theratioofedge
lengthsofmeshelementsadjacenttoconcavesurfacestotheradiusof
curvatureoftheconcavesurfaces.Usethefunction
ProMechmeshcntrlAutogemedgelencrvdataGet() toaccessthe
edgelengthbycurvaturedataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlAutogemedgelencrvdataSet() tosettheedge
lengthbycurvatureratio.
1924 Creo®Parametric TOOLKIT User’sGuide•PRO_MECH_MC_EDGE_DISTRIBUTION—Specifies thenumberofnodes
ononeormoreedgesofthecurvesinthemodel.Usethefunction
ProMechmeshcntrlEdgedistrdataGet() toaccesstheedgexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxononeormoreedgesofthecurvesinthemodel.Usethefunction
ProMechmeshcntrlEdgedistrdataGet() toaccesstheedge
distribution dataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlEdgedistrdataSet() tosettheedgedistribution
data.
Note
Ifyouarecreatinganewmeshcontrolusingthistypeofdata,youshould
assignthemodelasareferenceusingthefunction
ProMechmeshcntrlReferencesSet().
•PRO_MECH_MC_DISPL_CSYS—Specifies thedisplacement coordinate
systemusedfordisplaying resultsfornodesassociated withpoints,edges,
curves,orsurfaces.
•PRO_MECH_MC_MAX_ELEMENT_SIZE—Specifies themaximum element
sizeforthemesh.Usethefunction
ProMechmeshcntrlElemsizedataGet() toaccessthemaximum
elementsizedataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlElemsizedataSet() tosetthemaximum element
sizeforthemesh.
Note
Ifyouarecreatinganewmeshcontrolusingthistypeofdata,youshould
assignthemodelasareferenceusingthefunction
ProMechmeshcntrlReferencesSet().
•PRO_MECH_MC_MIN_ELEMENT_SIZE—Specifies theminimumelementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Ifyouarecreatinganewmeshcontrolusingthistypeofdata,youshould
assignthemodelasareferenceusingthefunction
ProMechmeshcntrlReferencesSet().
•PRO_MECH_MC_MIN_ELEMENT_SIZE—Specifies theminimumelement
sizeforthemesh.Usethefunction
ProMechmeshcntrlElemsizedataGet() toaccesstheminimum
elementsizedataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlElemsizedataSet() tosetthemaximum element
sizeforthemesh.
•PRO_MECH_MC_SHELL_CSYS—Specifies thecoordinate systemusedfor
displaying resultsfornodesassociated withshellorquiltsurfaces.Usethe
function ProMechmeshcntrlShellcsysGet() toaccesstheshell
coordinate systemforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlShellcsysSet() tosettheshellcoordinate system
forthemeshcontrolitem.
CreoSimulate:Items 1925•PRO_MECH_MC_HARD_POINT—Specifies adatumpointthatisdefinedasa
hardpoint.Usethefunction ProMechmeshcntrlHardpointGet() to
accessthehardpointdataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlHardpointSet() tosetthehardpointdataforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhardpoint.Usethefunction ProMechmeshcntrlHardpointGet() to
accessthehardpointdataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlHardpointSet() tosetthehardpointdataforthe
meshcontrolitem.
•PRO_MECH_MC_HARD_CURVE—Specifies adatumcurvethatisdefinedasa
hardcurve.Thistypehasnodata,onlyreferences. Usethefunction
ProMechmeshcntrlHardcurveSet() tosetthemeshcontrolitemtobe
ofthetypehardcurve.Thereferencefortheitemwillbeusedforthecontrol.
•PRO_MECH_MC_IDS_OFFSET—Specifies theoffsetforthenodeIDsand
elementIDsforacomponent. Usethefunction
ProMechmeshcntrlIdsoffsetGet() toaccesstheoffsetdataforthe
meshcontrolitem.Usethefunction
ProMechmeshcntrlIdsoffsetSet() tosettheoffsetdata.
•PRO_MECH_MC_MESH_NUMBERING—Specifies anodeandanelementID
rangeforacomponent. Usethefunction
ProMechmeshcntrlNumberingGet() toaccessthenumbering datafor
themeshcontrolitem.Usethefunction
ProMechmeshcntrlNumberingSet() tosetthenumbering dataforthe
meshcontrolitem.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechmeshcntrlNumberingGet() toaccessthenumbering datafor
themeshcontrolitem.Usethefunction
ProMechmeshcntrlNumberingSet() tosetthenumbering dataforthe
meshcontrolitem.
•PRO_MECH_MC_SUPPRESS—Specifies thecomponents thatmustbe
ignoredwhileapplyingthemeshcontroltotheassemblylevel.Usethe
function ProMechmeshcntrlSuppressGet() toaccessthesuppress
dataforthemeshcontrolitem.Usethefunction
ProMechmeshcntrlSuppressSet() tosetthesuppressdataforthe
meshcontrolitem.
•PRO_MECH_MC_AGEM_SUPPRESS—Specifies thetypeofAutoGEM
controlsthatyouwantthemeshgeneratortoignoreattheassemblylevel.Use
thefunction ProMechmcautogemsuppressTypeGet() toaccessthe
typesofAutoGEM controlsuppressed bythisAutoGEM controldata.Usethe
function ProMechmcautogemsuppressTypeSet() tosetthetypeof
AutoGEM controlsuppressed bythisAutoGEM controldata.
Thefunctions ProMechmeshcntrlAutogemsuppressGet() and
ProMechmeshcntrlAutogemsuppressSet() accessandsetthe
suppressdatafortheAutoGEM controlitems.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAutoGEM controlsuppressed bythisAutoGEM controldata.
Thefunctions ProMechmeshcntrlAutogemsuppressGet() and
ProMechmeshcntrlAutogemsuppressSet() accessandsetthe
suppressdatafortheAutoGEM controlitems.
ThesefunctionssupportonlythefollowingAGEMmeshcontroltypes:
○PRO_MECH_MC_AGEM_EDGE_DISTR
○PRO_MECH_MC_AGEM_MIN_EDGE
○PRO_MECH_MC_AGEM_ISOLATE_EXCLUDE
1926 Creo®Parametric TOOLKIT User’sGuide○PRO_MECH_MC_AGEM_MAX_ELEMENT_SIZE
○PRO_MECH_MC_AGEM_EDGE_LEN_CRV
○PRO_MECH_MC_AGEM_HARD_POINT
○PRO_MECH_MC_AGEM_HARD_CURVE
○PRO_MECH_MC_ALL
•PRO_MECH_MC_AGEM_ISOLATE_EXCLUDE—Specifies points,edges,
curves,andsurfacesfromthemodeltoisolateduringanalysis.Thefunction
ProMechmeshcntrlAutogemisolateexcludedataGet() returns
thelistofentitiesthatAutoGEM candetectandisolateusingmeshrefinement.
Usethefunction
ProMechmeshcntrlAutogemisolateexcludedataSet() tosetthe
entitiesforAutoGEM isolationusingmeshrefinement.
•PRO_MECH_MC_AGEM_HARD_POINT—Specifies points,pointfeatures,orxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction
ProMechmeshcntrlAutogemisolateexcludedataSet() tosetthe
entitiesforAutoGEM isolationusingmeshrefinement.
•PRO_MECH_MC_AGEM_HARD_POINT—Specifies points,pointfeatures,or
pointpatternsonthemodeltoguidetheAutoGEM meshcreationprocess.
Thiscontroltypehasonlyreferences andnodataassociated withit.Usethe
function ProMechmcautogemHardpointSet() tosettheAutoGEM
meshcontrolitemashardpoint.
•PRO_MECH_MC_AGEM_HARD_CURVE—Specifies thedatumcurvesonthe
modeltoguidetheAutoGEM meshcreationprocess.Thiscontroltypehas
onlyreferences andnodataassociated withit.Usethefunction
ProMechmcautogemHardcurveSet() tosettheAutoGEM mesh
controlitemashardcurve.
•PRO_MECH_MC_ALL—Specifies allthetypesofmeshcontrols.
Note
Ifyouarecreatinganewmeshcontrolusingthistypeofdata,youshould
assignthemodelasareferenceusingthefunction
ProMechmeshcntrlReferencesSet().
Thefunction ProMechmeshcntrlReferencesGet() returnsthereferences
foreachofthemeshcontroltype.Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxassignthemodelasareferenceusingthefunction
ProMechmeshcntrlReferencesSet().
Thefunction ProMechmeshcntrlReferencesGet() returnsthereferences
foreachofthemeshcontroltype.Usethefunction
ProMechmeshcntrlReferencesSet() tosetthereferences usedbythe
meshcontrolitem.
AccessingAutoGEMEdgeDistribution and
MinimumEdgeMeshControlData
Thefunctionsdescribedinthissectionprovideaccesstothedataforthe
AutoGEM edgedistribution MeshControl.
CreoSimulate:Items 1927Functions Introduced:
•ProMechmcautogemedgedistrAlloc()
•ProMechmcautogemedgedistrNodesGet()
•ProMechmcautogemedgedistrNodesSet()
•ProMechmcautogemedgedistrRatioGet()
•ProMechmcautogemedgedistrRatioSet()
•ProMechmcautogemedgedistrStrictGet()
•ProMechmcautogemedgedistrStrictSet()
•ProMechmcautogemedgedistrFr ee()
•ProMechmcautogemminedgeAlloc()
•ProMechmcautogemminedgeEdgesGet()
•ProMechmcautogemminedgeEdgesSet()
•ProMechmcautogemminedgeLengthGet()
•ProMechmcautogemminedgeLengthSet()
•ProMechmcautogemminedgeFr ee()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmcautogemminedgeEdgesGet()
•ProMechmcautogemminedgeEdgesSet()
•ProMechmcautogemminedgeLengthGet()
•ProMechmcautogemminedgeLengthSet()
•ProMechmcautogemminedgeFr ee()
Thefunction ProMechmcautogemedgedistrNodesGet() returnsthe
numberofnodesdistributed alongtheselectededge.Usethefunction
ProMechmcautogemedgedistrNodesSet() tosetthenumberofnodes.
Thefunction ProMechmcautogemedgedistrRatioGet() returnsthe
aspectratiodefinedwhilecreatingandeditingelements.Theaspectratiois
definedastheratioofalengthtothewidthofanysurfaceinthemodel.Usethe
function ProMechmcautogemedgedistrRatioSet() tosettheaspect
ratiofortheAutoGEM edgedistribution meshcontroldata.
Thefunction ProMechmcautogemedgedistrStrictGet() returnsthe
value true,iftheaspectratioiswithinthemaximum allowablerangewhile
creatingandeditingelements.Usethefunction
ProMechmcautogemedgedistrStrictSet() tosettheaspectratiowithin
themaximum allowablerange.
Usethefunction ProMechmcautogemedgedistrFree() tofreethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreatingandeditingelements.Usethefunction
ProMechmcautogemedgedistrStrictSet() tosettheaspectratiowithin
themaximum allowablerange.
Usethefunction ProMechmcautogemedgedistrFree() tofreethe
memorycontaining theAutoGEM edgedistribution datastructure.
Thefunction ProMechmcautogemminedgeEdgesGet() specifiesthe
numberofedgesinamodelfortheAutoGEM minimumedgedata.Usethe
function ProMechmcautogemminedgeEdgesSet() tosetthenumberof
edges.
Thefunction ProMechmcautogemminedgeLengthGet() specifiesthe
minimumlengthofanyedgeinthemodel.Usethefunction
ProMechmcautogemminedgeLengthSet() tospecifytheminimumlength
oftheedgefortheAutoGEM minedgemeshcontroldata.
1928 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProMechmcautogemminedgeFree() tofreethememory
containing theAutoGEM minimumedgedatastructure.
AccessingtheAutoGEMEdgeLengthbyCurvature
MeshControlData
Thefunctionsdescribedinthissectionenableyoutocreateadenserelementmesh
adjacenttoareassuchascurves,fillets,andholes,thatarelikelytohavehighxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingtheAutoGEMEdgeLengthbyCurvature
MeshControlData
Thefunctionsdescribedinthissectionenableyoutocreateadenserelementmesh
adjacenttoareassuchascurves,fillets,andholes,thatarelikelytohavehigh
stress,usingtheedgelengthbycurveratio.
•ProMechmcautogemedgelencrvAlloc()
•ProMechmcautogemedgelencrvRatioGet()
•ProMechmcautogemedgelencrvRatioSet()
•ProMechmcautogemedgelencrvIgnor eRadiusGet()
•ProMechmcautogemedgelencrvIgnor eRadiusSet()
•ProMechmcautogemedgelencrvMinradiusGet()
•ProMechmcautogemedgelencrvMinradiusSet()
•ProMechmcautogemedgelencrvFre e()
Thefunction ProMechmcautogemedgelencrvAlloc() allocatesmemory
fortheCreoSimulatemeshcontroledgelengthbycurvaturedatahandle.
Thefunction ProMechmcautogemedgelencrvRatioGet() returnsthe
ratiooftheexpectededgelengthsofmeshelementstotheradiusoftheconcave
surface.Usethefunction ProMechmcautogemedgelencrvRatioSet() to
setthisratio.Specifytheratioasapositiverealnumber.
Thefunction ProMechmcautogemedgelencrvMinradiusGet() returnsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurface.Usethefunction ProMechmcautogemedgelencrvRatioSet() to
setthisratio.Specifytheratioasapositiverealnumber.
Thefunction ProMechmcautogemedgelencrvMinradiusGet() returns
thecut-offvaluefortheradiusofcurvaturebelowwhichtheAutoGEM mesh
controldatawillnotbeapplied.Usethefunction
ProMechmcautogemedgelencrvMinradiusSet() tosetthecut-off
valuefortheradiusofcurvature. Thisvaluecanbespecifiedinthecurrentunitsof
themodelorasapercentage ofthemodelsize.
ProMechmcautogemedgelencrvIgnoreRadiusGet()returns true,ifthe
curveshavingaradiusofcurvaturelowerthanthecut-offvaluemustbeignored
bytheAutoGEM meshcontroldata.Usethefunction
ProMechmcautogemedgelencrvIgnoreRadiusSet() tospecify
whethertoignorecurveshavingaradiusofcurvaturelowerthanthecut-offvalue.
Usethefunction ProMechmcautogemedgelencrvFree() tofreethe
memorycontaining theedgelengthbycurvaturemeshcontroldatastructure.
CreoSimulate:Items 1929AccessingtheAutoGEMMaximumElementSize
MeshControlDataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmemorycontaining theedgelengthbycurvaturemeshcontroldatastructure.
CreoSimulate:Items 1929AccessingtheAutoGEMMaximumElementSize
MeshControlData
Thefunctionsdescribedinthissectionenableyoutocontrolthesizeofthe
elementscreatedbythemeshgeneratorforcomponents, volumes,surfaces,edges,
orcurves.
Functions Introduced:
•ProMechmcautogemelemsizeAlloc()
•ProMechmcautogemelemsizeSizeGet()
•ProMechmcautogemelemsizeSizeSet()
•ProMechmcautogemelemsizeFre e()
Thefunction ProMechmcautogemelemsizeAlloc() allocatesmemoryfor
theAutoGEM maximum elementsizemeshcontroldata.
Thefunction ProMechmcautogemelemsizeSizeGet() returnsthe
maximum elementsizeinthemesh.Usethefunction
ProMechmcautogemelemsizeSizeSet() tosettheelementsize.
Usethefunction ProMechmcautogemelemsizeFree() tofreethememory
containing themaximum elementsizemeshcontroldatastructure.
AccessingEdgeDistribution MeshControlData
Thefunctionsdescribedinthissectionprovideaccesstotheedgedistribution
meshcontroldata.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingEdgeDistribution MeshControlData
Thefunctionsdescribedinthissectionprovideaccesstotheedgedistribution
meshcontroldata.
Functions Introduced:
•ProMechmcedgedistrAlloc()
•ProMechmcedgedistrNodesGet()
•ProMechmcedgedistrNodesSet()
•ProMechmcedgedistrRatioGet()
•ProMechmcedgedistrRatioSet()
•ProMechmcedgedistrStrictGet()
•ProMechmcedgedistrStrictSet()
•ProMechmcedgedistrFr ee()
Thefunction ProMechmcedgedistrNodesGet() returnstheminimum
numberofnodesthataredistributed alongtheselectededgeorcurve.Usethe
function ProMechmcedgedistrNodesSet() tosetthenumberofnodesfor
themeshcontroldata.
1930 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechmcedgedistrRatioGet() returnstheratioofthe
firstintervalontheedgeorcurvetothelastintervalontheedgeorcurve.Usethe
function ProMechmcedgedistrRatioSet() tosettheratioforthemesh
controldata.
Thefunction ProMechmcedgedistrStrictGet() returnsabooleanflag
indicating whetherthenumberofnodesmustbeusedexactly.Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontroldata.
Thefunction ProMechmcedgedistrStrictGet() returnsabooleanflag
indicating whetherthenumberofnodesmustbeusedexactly.Usethefunction
ProMechmcedgedistrStrictSet() tosetthemaximum allowablenodes
forthemeshcontroldata.
AccessingAutoGEMIsolationData
ThefunctionsinthissectionprovideaccesstotheentitiesthatAutoGEM can
detectandisolateusingmeshrefinement.
Functions Introduced:
•ProMechmcautogemisolateexcludeAlloc()
•ProMechmcautogemisolateexcludeExcludeGet()
•ProMechmcautogemisolateexcludeExcludeSet()
•ProMechmcautogemisolateexcludeFre e()
•ProMechmcautogemisolateexcludeShellIsolMaxSizeGet()
•ProMechmcautogemisolateexcludeShellIsolT ypeGet()
•ProMechmcautogemisolateexcludeSolidIsolMaxSizeGet()
•ProMechmcautogemisolateexcludeSolidIsolT ypeGet()
•ProMechmcautogemisolateexcludeShellIsolMaxSizeSet()
•ProMechmcautogemisolateexcludeShellIsolT ypeSet()
•ProMechmcautogemisolateexcludeSolidIsolMaxSizeSet()
•ProMechmcautogemisolateexcludeSolidIsolT ypeSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmcautogemisolateexcludeShellIsolT ypeSet()
•ProMechmcautogemisolateexcludeSolidIsolMaxSizeSet()
•ProMechmcautogemisolateexcludeSolidIsolT ypeSet()
Thefunction ProMechmcautogemisolateexcludeExcludeGet()
returnsthevalueoftheexcludebooleanfortheAutoGEM isolationforexclusion
meshcontroldata.Usethefunction
ProMechmcautogemisolateexcludeExcludeSet() tosetthevalueof
theexcludebooleanfortheAutoGEM isolationforexclusionmeshcontroldata.
Thefunction
ProMechmcautogemisolateexcludeShellIsolMaxSizeGet()
returnsthevalueofmaximum elementsizeofisolationofshellsfortheAutoGEM
isolationforexclusionmeshcontroldata.Usethefunction
ProMechmcautogemisolateexcludeShellIsolMaxSizeSet() toset
thevalueofmaximum elementsizeofisolationofshellsfortheAutoGEM
isolation.
CreoSimulate:Items 1931Thefunction
ProMechmcautogemisolateexcludeShellIsolTypeGet() returns
thevalueofshellisolationtypefortheAutoGEM isolationforexclusionmesh
controldata.Usethefunction
ProMechmcautogemisolateexcludeShellIsolTypeSet() tosetthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthevalueofshellisolationtypefortheAutoGEM isolationforexclusionmesh
controldata.Usethefunction
ProMechmcautogemisolateexcludeShellIsolTypeSet() tosetthe
valueofshellisolationtypefortheAutoGEM isolationforexclusionmeshcontrol
data.
Thefunction
ProMechmcautogemisolateexcludeSolidIsolMaxSizeGet()
returnsthevalueofmaximum elementsizeofisolationofsolidsfortheAutoGEM
isolationforexclusionmeshcontroldata.Usethefunction
ProMechmcautogemisolateexcludeSolidIsolMaxSizeSet() toset
themaximum elementsizeofisolationofsolidsfortheAutoGEM isolation.
Thefunction
ProMechmcautogemisolateexcludeSolidIsolTypeGet() returns
thevalueofsolidisolationtypefortheAutoGEM isolationforexclusionmesh
controldata.Usethefunction
ProMechmcautogemisolateexcludeSolidIsolTypeSet() tosetthe
valueofthesolidisolationtypefortheAutoGEM isolation.
AccessingtheDisplacement Coordinate System
Data
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothe
displacement coordinate systemcontroldata.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingtheDisplacement Coordinate System
Data
Thefunctionsdescribedinthissectionprovidereadandwriteaccesstothe
displacement coordinate systemcontroldata.
Functions Introduced:
•ProMechmcdisplacementcsysAlloc()
•ProMechmcdisplacementcsysCsysGet()
•ProMechmcdisplacementcsysCsysSet()
•ProMechmcdisplacementcsysFre e()
Thefunction ProMechmcdisplacementcsysCsysGet() returnsthe
coordinate systemusedtodisplaytheresultsforthenodesassociated withpoints,
edges,curves,orsurfaces.
Thefunction ProMechmcdisplacementcsysCsysSet() setstheco-
ordinatesystemforthemeshcontroldata.
AccessingtheMeshControlElementSizeData
Functions Introduced:
•ProMechmcelemsizeSizeGet()
1932 Creo®Parametric TOOLKIT User’sGuide•ProMechmcelemsizeSizeSet()
•ProMechmcelemsizeFre e()
Thefunction ProMechmcelemsizeSizeGet() returnsthesizeofthe
elementsforthemeshcontroldata.Usethefunction
ProMechmcelemsizeSizeSet() tosetthesizeoftheelementsforthemesh
controldata.
AccessingtheMeshControlShellCoordinate
SystemDataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementsforthemeshcontroldata.Usethefunction
ProMechmcelemsizeSizeSet() tosetthesizeoftheelementsforthemesh
controldata.
AccessingtheMeshControlShellCoordinate
SystemData
Functions Introduced:
•ProMechmcshellcsysCsysGet()
•ProMechmcshellcsysCsysSet()
•ProMechmcshellcsysDire ctionGet()
•ProMechmcshellcsysDire ctionSet()
•ProMechmcshellcsysFre e()
Thefunction ProMechmcshellcsysCsysGet() returnsthecoordinate
systemspecifiedforthemeshcontroldata.Usethefunction
ProMechmcshellcsysCsysSet() tosetthecoordinate systemspecifiedfor
themeshcontroldata.
Thefunction ProMechmcshellcsysDirectionGet() returnsthepositive
directionalongthex,y,andzaxis.Usethefunction
ProMechmcshellcsysDirectionSet() tosetthepositivedirectionalong
thex,y,andzaxis.
AccessingtheMeshControlHardPointData
Functions Introduced:
•ProMechmchardpntNodeGet()
•ProMechmchardpntNodeSet()
•ProMechmchardpntFre e()
Thefunction ProMechmchardpntNodeGet() returnstheidofthenodethatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProMechmchardpntNodeGet()
•ProMechmchardpntNodeSet()
•ProMechmchardpntFre e()
Thefunction ProMechmchardpntNodeGet() returnstheidofthenodethat
isdefinedasahardpoint.Usethefunction ProMechmchardpntNodeSet()
tosettheidofthenodeforthemeshcontroldata.
AccessingtheMeshControlIDOffsetData
Functions Introduced:
•ProMechmcidsoffsetOffsetGet()
CreoSimulate:Items 1933•ProMechmcidsoffsetOffsetSet()
•ProMechmcidsoffsetFr ee()
Thefunction ProMechmcidoffsetOffsetGet() returnsapositiveinteger
valuetobeaddedtotheIDsofeachnode,element,andlocalmeshentity.Usethe
function ProMechmcidsoffsetOffsetSet() tosettheoffsetvalueforthe
meshcontroldata.
AccessingtheMeshControlNumbering Data
Functions Introduced:
•ProMechmcnumberingFirstGet()
•ProMechmcnumberingFirstSet()
•ProMechmcnumberingIncre mentGet()
•ProMechmcnumberingIncre mentSet()
•ProMechmcnumberingLastGet()
•ProMechmcnumberingLastSet()
•ProMechmcnumberingFr ee()
Thefunction ProMechmcnumberingFirstGet() returnsthefirstIDforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmcnumberingIncre mentSet()
•ProMechmcnumberingLastGet()
•ProMechmcnumberingLastSet()
•ProMechmcnumberingFr ee()
Thefunction ProMechmcnumberingFirstGet() returnsthefirstIDforthe
nodes,elements,andlocalmeshentities.Usethefunction
ProMechmcnumberingFirstSet() tosetthefirstvalueofthemeshcontrol
data.
Thefunction ProMechmcnumberingIncrementGet() returnsthe
increment idforthenodes,elements,andlocalmeshentities.Usethefunction
ProMechmcnumberingIncrementSet() tosettheincrement valueforthe
meshcontroldata.
Thefunction ProMechmcnumberingLastGet() returnsthelastIDforthe
nodes,elements,andlocalmeshentities.Usethefunction
ProMechmcnumberingLastSet() tosetthelastvalueforthemeshcontrol
data.
AccessingtheSuppressed MeshControlData
Functions Introduced:
•ProMechmcsuppre ssTypeGet()
•ProMechmcsuppre ssTypeSet()
•ProMechmcsuppre ssFree()
Thefunction ProMechmcsuppressTypeGet() returnsthetypeofmesh
controldatathatshouldbesuppressed. Usethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechmcsuppre ssTypeGet()
•ProMechmcsuppre ssTypeSet()
•ProMechmcsuppre ssFree()
Thefunction ProMechmcsuppressTypeGet() returnsthetypeofmesh
controldatathatshouldbesuppressed. Usethefunction
ProMechmcsuppressTypeSet() tosetthetypeofdatatobesuppressed.
1934 Creo®Parametric TOOLKIT User’sGuideWelds
Weldsareusedtobridgegapsthatareformedduringshellcompression between
platesthathavebeenmatedbecausetheytouchoroverlap.Weldsusethe
ProType fieldintheProMechitem structureasPRO_SIMULATION_WELD.
Functions Introduced:
•ProMechweldRefere ncesGet()
•ProMechweldRefere ncesSet()
•ProMechweldT ypeGet()
•ProMechweldperimeterAlloc()
•ProMechweldPerimeterdataGet()
•ProMechweldPerimeterdataSet()
•ProMechweldperimeterEdgesGet()
•ProMechweldperimeterEdgesSet()
•ProMechweldperimeterFre e()
•ProMechweldedgeAlloc()
•ProMechweldedgeEdgeGet()
•ProMechweldedgeEdgeSet()
•ProMechweldedgeThicknessGet()
•ProMechweldedgeThicknessSet()
•ProMechweldedgeMaterialidGet()
•ProMechweldedgeMaterialidSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechweldedgeEdgeGet()
•ProMechweldedgeEdgeSet()
•ProMechweldedgeThicknessGet()
•ProMechweldedgeThicknessSet()
•ProMechweldedgeMaterialidGet()
•ProMechweldedgeMaterialidSet()
•ProMechweldedgeFr ee()
•ProMechweldedgePr oarrayFr ee()
•ProMechweldspotAlloc()
•ProMechweldSpotdataGet()
•ProMechweldSpotdataSet()
•ProMechweldspotPointsGet()
•ProMechweldspotPntsSet()
•ProMechweldspotDiameterGet()
•ProMechweldspotDiameterSet()
•ProMechweldspotMaterialIdGet()
•ProMechweldspotMaterialIdSet()
•ProMechweldspotFr ee()
CreoSimulate:Items 1935•ProMechweldendSet()
•ProMechweldEnddataGet()
•ProMechweldEnddataSet()
•ProMechweldendAlloc()
•ProMechweldendT ypeGet()
•ProMechweldendT ypeSet()
•ProMechweldendExtendAdjacentSurfacesGet()
•ProMechweldendExtendAdjacentSurfacesSet()
•ProMechweldendFr ee()
•ProMechweldFeatur edataGet()
•ProMechweldFeatur edataSet()
•ProMechweldfeatur eAlloc()
•ProMechweldfeatur eMaterialidGet()
•ProMechweldfeatur eOverrideflagGet()
•ProMechweldfeatur eThicknessGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechweldFeatur edataGet()
•ProMechweldFeatur edataSet()
•ProMechweldfeatur eAlloc()
•ProMechweldfeatur eMaterialidGet()
•ProMechweldfeatur eOverrideflagGet()
•ProMechweldfeatur eThicknessGet()
•ProMechweldedgeMaterialidSet()
•ProMechweldfeatur eOverrideflagSet()
•ProMechweldfeatur eThicknessSet()
•ProMechweldfeatur eFree()
Thefunction ProMechweldReferencesGet() returnsthegeometric entities
selectedtocreatetheweld.Usethefunction
ProMechweldReferencesSet() tosetthereferences forthespecifiedweld.
Thefunction ProMechweldTypeGet() returnsthetypeofweldusedto
connectthegaps.Thetypesofweldare:
•PRO_MECH_WELD_PERIMETER—Specifies aperimeterweld.Perimeter
weldsareusedtoconnectparallelplatesalongtheperimeterofoneofthe
platesinanassemblymodel.
•PRO_MECH_WELD_END—Specifies anendweld.Endweldsareusedto
connectplatesinassemblymodels.
•PRO_MECH_WELD_SPOT—Specifies aspotweld.Spotweldsareusedto
connecttwoparallelsurfacesatthespecifieddatumpoint.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MECH_WELD_END—Specifies anendweld.Endweldsareusedto
connectplatesinassemblymodels.
•PRO_MECH_WELD_SPOT—Specifies aspotweld.Spotweldsareusedto
connecttwoparallelsurfacesatthespecifieddatumpoint.
•PRO_MECH_WELD_FEAT—Specifies aWeldFeature.Thisweldconnection
canbeusedtoselectFilletandGroovetypesofweldconnections forinclusion
inamid-surface compressed model.
1936 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechweldPerimeterdataGet() providesaccesstothe
perimeterwelddatastructure.Usethefunction
ProMechweldPerimeterdataSet() tosettheperimeterwelddata
structure.
Usethefunction ProMechweldperimeterFree() tofreethememory
containedintheperimeterwelddatastructure.
Thefunction ProMechweldperimeterEdgesGet() returnstheperimeter
edgesofthetopplatetobeconnected tothebaseplate.Usethefunction
ProMechweldperimeterEdgesSet() tosettheperimeteredgesinthe
perimeterwelddata.
Thefunction ProMechweldedgeEdgeGet() returnstheidoftheedge
selectedtocreatetheperimeterweld.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechweldperimeterEdgesSet() tosettheperimeteredgesinthe
perimeterwelddata.
Thefunction ProMechweldedgeEdgeGet() returnstheidoftheedge
selectedtocreatetheperimeterweld.Usethefunction
ProMechweldedgeEdgeSet() tosettheidoftheedge.
Thefunction ProMechweldedgeThicknessGet() returnsthethicknessof
theweldontheselectededgeintheperimeterweld.Usethefunction
ProMechweldedgeThicknessSet() tosetthethicknessoftheweldedge
data.
Thefunction ProMechweldedgeMaterialidGet() returnsthetypeof
materialusedinshellelementscreatedonthePerimeterWeldsurfaces.
Usethefunction ProMechweldedgeMaterialidSet() toselectthe
materialfortheshellelementscreatedonthePerimeterWeldsurfaces.Specifythe
materialIDastheinputparameter ofthisfunction.Inadditiontothematerials
alreadypresentinthemodel,theinputcanbethematerialIDofoneofthe
followingsurfaces:
•PRO_MECH_WELD_MTL_BASE—Specifies thebasesurfacetowhichthe
weldextends.
•PRO_MECH_WELD_MTL_DOUBLER—Specifies thedoublersurfaceonwhich
thePerimeterweldisplaced.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfollowingsurfaces:
•PRO_MECH_WELD_MTL_BASE—Specifies thebasesurfacetowhichthe
weldextends.
•PRO_MECH_WELD_MTL_DOUBLER—Specifies thedoublersurfaceonwhich
thePerimeterweldisplaced.
Thefunctions ProMechweldedgeFree() and
ProMechweldedgeProarrayFree() freethememorycontaining theedge
datastructure.
Thefunction ProMechweldperimeterFree() freesthememorycontaining
thedatastructurefortheperimeterweld.
Thefunction ProMechweldSpotdataGet() providesaccesstothespotweld
datastructure.Usethefunction ProMechweldSpotdataSet() toassigndata
tothespotwelddatastructure.
Thefunction ProMechweldspotPointsGet() returnsthedatumpointsat
whichthespotweldislocated.Usethefunction
ProMechweldspotPntsSet() tosetthepointsforthespotwelddata.
CreoSimulate:Items 1937Thefunction ProMechweldspotDiameterGet() returnsthediameterfor
thespotweld.Usethefunction ProMechweldspotDiameterSet() toset
thediameterforthespotwelddata.
Thefunction ProMechweldspotMaterialIdGet() returnsthematerialforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespotweld.Usethefunction ProMechweldspotDiameterSet() toset
thediameterforthespotwelddata.
Thefunction ProMechweldspotMaterialIdGet() returnsthematerialfor
thespotweld.Usethefunction ProMechweldspotMaterialIdSet() toset
thematerialforthespotweld.
Usethefunction ProMechweldspotFree() tofreethememorycontainedin
thespotwelddatastructure.
Usethefunction ProMechweldendSet() tosettheweldtobeanendweld.
Thefunction ProMechweldEnddataGet() returnstheendwelddata
structure.
Usethefunction ProMechweldendAlloc() toallocatememoryfortheend
welddatahandle.
Usethemethod ProMechweldEnddataSet() tosettheendwelddata
structure.
Thefunction ProMechweldendTypeGet() returnsthetypeofendweld
definedbetweendifferentsurfaces.Thevalidtypesofendweldsare:
•PRO_MECH_WELD_END_SINGLE_TO_SINGLE—Specifies awelddefined
betweenasidesurfaceandashellorshellpairedsurface.
•PRO_MECH_WELD_END_MANY_TO_SINGLE—Specifies awelddefined
fromasolidsurfacetoasolidsurface.
•PRO_MECH_WELD_END_SINGLE_TO_MANY—Specifies aweldsurfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbetweenasidesurfaceandashellorshellpairedsurface.
•PRO_MECH_WELD_END_MANY_TO_SINGLE—Specifies awelddefined
fromasolidsurfacetoasolidsurface.
•PRO_MECH_WELD_END_SINGLE_TO_MANY—Specifies aweldsurface
definedfromasolidsurfacetoashellsurface.
Usethefunction ProMechweldendTypeSet() tosetthetypeofendwelds.
Thefunction ProMechweldendExtendAdjacentSurfacesGet()
specifieswhetherornotsurfacesadjacenttotheselectedsourcesurfacewillbe
extendedtothetargetsurfacetocreatetheweld.Usethefunction
ProMechweldendExtendAdjacentSurfacesSet() tocontrolthe
placement oftheweldontheextensionoftheadjacentsurfaces.
Usethefunction ProMechweldendFree() tofreethememoryoftheend
welddatastructure.
Thefunction ProMechweldFeaturedataGet() returnstheWeldFeature
datastructure.
Usethefunction ProMechweldfeatureAlloc() toallocatememoryforthe
WeldFeaturedatastructure.
Usethefunction ProMechweldFeaturedataSet() tosettheWeldFeature
datastructure.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatastructure.
Usethefunction ProMechweldfeatureAlloc() toallocatememoryforthe
WeldFeaturedatastructure.
Usethefunction ProMechweldFeaturedataSet() tosettheWeldFeature
datastructure.
1938 Creo®Parametric TOOLKIT User’sGuideThefunction ProMechweldfeatureOverrideflagGet() specifiesifthe
materialandthicknessproperties thatwillbeappliedtotheshellidealizations
resultingfromthewelddefinitions areinheritedfromtheWeldFeatureornot.
Specifytheinputvalueofthefunction
ProMechweldfeatureOverrideflagSet() astruetospecifythe
properties fortheshellidealizations. Specifythevalueasfalsetoinheritthe
properties fromtheWeldFeature.
Youcanusethefollowingfunctionstoaccessandmodifythematerialproperty
andthicknessoftheWeldFeatureonlyifyouspecifytheinputvalueastruefor
thefunction ProMechweldfeatureOverrideflagSet() oryouselectthe
optionOverrideWeldFeatureSettingsfromtheCreoSimulateuserinterface.
Thefunction ProMechweldfeatureMaterialidGet() returnsthe
materialtypeusedfortheWeldFeature.UsethefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoptionOverrideWeldFeatureSettingsfromtheCreoSimulateuserinterface.
Thefunction ProMechweldfeatureMaterialidGet() returnsthe
materialtypeusedfortheWeldFeature.Usethefunction
ProMechweldfeatureMaterialidSet() tosetthematerialfortheshell
idealizations. SpecifythematerialIDastheinputparameter ofthisfunction.
Thefunction ProMechweldfeatureThicknessGet() returnsthethickness
oftheWeldFeature.Usethefunction
ProMechweldfeatureThicknessSet() tosetthethicknessoftheshell
idealizations.
Usethefunction ProMechweldfeatureFree() tofreethememory
containedintheWeldFeaturedatastructure.
CreoSimulateFeatures
Functions Introduced:
•ProMechFeature Promot e()
Thefunction ProMechFeaturePromote() promotesthespecifiedCreo
Simulatefeaturemakingitaccessible inCreoParametric. Thepromotedfeature
howevercannotbetransferred backtoCreoSimulate.
ValidatingNewandModifiedSimulation
Objects
Youcancheckthevalidityofsimulation objectsthatarecreatednewormodified.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhowevercannotbetransferred backtoCreoSimulate.
ValidatingNewandModifiedSimulation
Objects
Youcancheckthevalidityofsimulation objectsthatarecreatednewormodified.
Duringvalidation, anerrorobjectiscreatedorupdatedwitherror,warning,and
information messages.
Functions Introduced:
•ProMechitemV alidate()
•ProMecherro bjDataGet()
CreoSimulate:Items 1939•ProMecherro bjMessageGet()
Thefunction ProMechitemValidate() validatesthespecifiedCreoSimulate
itemandreturnsanerrorobjectthatcollectstheerror,warning,andinformation
messages. Thefunctionsetstheerrorcheckingmode,validatestheCreoSimulate
item,resetstheerrorcheckingmode,andreturnstheerrorobject.
Theerror,warningandinformation messagesaregivenbytheenumerated type
ProMechErrobjType, whichhasthefollowingvalues:
•PRO_MECH_ERROBJ_ERROR
•PRO_MECH_ERROBJ_WARNING
•PRO_MECH_ERROBJ_INFO
Thefunction ProMecherrobjDataGet() returnsthenumberofeventsofan
errorobjectforthegiven ProMechErrobjType. Togettheeventmessageataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MECH_ERROBJ_ERROR
•PRO_MECH_ERROBJ_WARNING
•PRO_MECH_ERROBJ_INFO
Thefunction ProMecherrobjDataGet() returnsthenumberofeventsofan
errorobjectforthegiven ProMechErrobjType. Togettheeventmessageata
givenindexinanerrorobject,youcanusethefunction
ProMecherrobjMessageGet().
1940 Creo®Parametric TOOLKIT User’sGuide70
CreoSimulate:Geometry
Introduction...........................................................................................................1942
ObtainingCreoSimulateGeometryfromCreoParametricTOOLKIT.........................1943
ToCreateaSurfaceRegionFeature.......................................................................1957
InCreoParametric, whenanalysisisperformed onamodel(ineitherFEMor
Native),thegeometrythatisseenonthescreenisprocessed tocreatetheCreo
SimulateGeometry.Thisspecialtemporary geometryismoresuitableforanalysis
thanthestandardCreoParametric geometry.
1941Introduction
CreoSimulateGeometry differsfromthatofstandardCreoParametric geometry
inseveralways.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthanthestandardCreoParametric geometry.
1941Introduction
CreoSimulateGeometry differsfromthatofstandardCreoParametric geometry
inseveralways.
•CreoSimulategeometryprovidesanon-manifold representation ofassembly
models.
Non-manifold geometry
Inassemblies, whentwopartsaremated,thereexisttwosurfaceswheretheparts
aremated,eachofwhichdoesnotknowtheexistenceoftheother.
Foranalysisapplications (particularly inmeshing), youwantthegeometrytohave
onlyonesurfaceinthismatedarea
•CreoSimulategeometryprovidesmid-surface geometryformodelswhich
haveshellsdefined.
Mid-surface geometry
•CreoSimulategeometryprovidesvolumeandsurfaceregioninformation.
1942 Creo®Parametric TOOLKIT User’sGuide“Tagged”region
WithoutaccesstotheCreoSimulategeometry,itisdifficulttousetheinformation
onvolumeandsurfaceregion.
TheCreoSimulategeometryidentifieswhichsurfacesare"duplicated" atthe
boundaries withinthesolid.Thismakesiteasyforexternalapplications tore-
createthenon-manifold solid.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonvolumeandsurfaceregion.
TheCreoSimulategeometryidentifieswhichsurfacesare"duplicated" atthe
boundaries withinthesolid.Thismakesiteasyforexternalapplications tore-
createthenon-manifold solid.
•CreoSimulateGeometry modelisdevoidoftheundesirable features(fromthe
pointofviewofanalysis)presentintheCreoParametric modelsuchas
○Small,localizedmisalignments inthegeometry
○Cusps
○Verysmallsliversurfaces
ObtainingCreoSimulateGeometryfrom
CreoParametric TOOLKIT
CreoParametric represents thetoplevelaccesstoCreoSimulategeometryasan
opaquehandlecalled ProMechModel. TheProMechModel handleis
generateduponrequestandcanbeaccesseduntilitisfreedbytheapplication.
Thereareseveralmodeswhichcanbeusedtogeneratethemodelandits
geometry:
•PRO_MECH_MODEL_SOLID signifiessolidsurfacesonly.Shellswillbe
ignored.
•PRO_MECH_MODEL_SHELL signifiesshell-compressed surfaces.Nonshell-
compressed surfaceswillnotbeincluded.
•PRO_MECH_MODEL_MIXED signifiesbothsolidandshell-compressed
surfaces.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxignored.
•PRO_MECH_MODEL_SHELL signifiesshell-compressed surfaces.Nonshell-
compressed surfaceswillnotbeincluded.
•PRO_MECH_MODEL_MIXED signifiesbothsolidandshell-compressed
surfaces.
CreoSimulate:Geometry 1943•PRO_MECH_MODEL_BOUNDARY signifiesshellsurfacesoccurringonthe
solidboundary.
•PRO_MECH_MODEL_QUILT signifiesshellsurfacesonquilts.Thisoption
requiresthatquiltsbespecifiedasadditional entitiestobeprocessed.
•PRO_MECH_MODEL_BAR signifiesbarsongivendatumcurves.Thisoption
requiresthatcurvesbespecifiedasadditional entitiestobeprocessed.
ItisnotalwaysnecessarytohaveaCreoSimulatelicensetogeneratetheCreo
Simulategeometry.However,somesituationsdorequirethelicense:
•Useoftheoptions PRO_MECH_MODEL_SHELL, PRO_MECH_MODEL_
MIXEDandPRO_MECH_MODEL_BOUNDARY isnotpermittedunlessCreo
Simulateisactive.Pleaseseethedescription for
ProMechanicaIsActive() inthechapterAccessing CreoSimulate
Itemsonpage1829.
•Ifanycomponent ofthemodelcontainssurfaceorvolumeregionfeature,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSimulateisactive.Pleaseseethedescription for
ProMechanicaIsActive() inthechapterAccessing CreoSimulate
Itemsonpage1829.
•Ifanycomponent ofthemodelcontainssurfaceorvolumeregionfeature,
CreoSimulatemustbeactivetoaccessthegeometryoftheseregions.
Functions Introduced:
•ProMechmodeldataAlloc()
•ProMechmodeldataT ypeSet()
•ProMechmodeldataEntitiesSet()
•ProMechmodeldataPr eserveidsSet()
•ProMechmodeldataMergeCoincSolidEdgesSet()
•ProMechmodelGet()
•ProMechmodelFre e()
•ProMechmodeldataFr ee()
Usethefunction ProMechmodeldataAlloc() toallocateaninputdata
structureforgeneration ofCreoSimulategeometry.
Usethefunction ProMechmodeldataTypeSet() toassignthetypeofmodel
tobegenerated.
Usethefunction ProMechmodeldataEntitiesSet() toassignthe
additional datumpoints,quilts,andcurvestobeincludedinthegeometric
processing.
Usethefunction ProMechmodeldataPreserveidsSet() tosetthe
preservation ofIDs.Intheeventofthe"PreserveIDs"flagbeingset,Creo
SimulatetriestopreservetheIDsofsurfacesandedgesinCreoSimulatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprocessing.
Usethefunction ProMechmodeldataPreserveidsSet() tosetthe
preservation ofIDs.Intheeventofthe"PreserveIDs"flagbeingset,Creo
SimulatetriestopreservetheIDsofsurfacesandedgesinCreoSimulate
geometrybetweendifferentcallstoProMechmodelGet(). Thishappenseven
iftheoriginalgeometryofthemodelhaschangedslightly,butthesuccessofthis
attempttopreservegeometryIDsisnotalwaysguaranteed.
1944 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProMechmodeldataMergeCoincSolidEdgesSet() to
settheflagthatdetermines whethercoincident solidedgeswillbemerged.By
default,theflagisPRO_B_FALSE, thatis,thesolidedgeswillnotbemerged.
Usethefunction ProMechmodelGet() toobtaintheroothandleofaCreo
Simulategeometrymodel.Theinputargumentsofthisfunctionare:
•solid—signifies therootsolidmodel(partorassembly).
•data—signifies theoptionsforthegeneration ofgeometry.
Theoutputargumentsareasfollows:
•mech_model signifiestheroothandleofthegeneratedgeometry.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•solid—signifies therootsolidmodel(partorassembly).
•data—signifies theoptionsforthegeneration ofgeometry.
Theoutputargumentsareasfollows:
•mech_model signifiestheroothandleofthegeneratedgeometry.
•statussignifiesthestatusofgeneration andcanhavethefollowingvalues:
○PRO_MECH_MODEL_SUCCESS signifiessuccess.
○PRO_MECH_MODEL_GENERAL_FAILURE signifiesgeneralfailure.
○PRO_MECH_MODEL_USER_INTERRUPT signifiesthattheuser
interrupted theprocessbeforeitcompleted.
○PRO_MECH_MODEL_SHELL_NO_PAIRS signifiesthatnoshellpairs
weredefined(foroptionsthatusedshellcompression).
○PRO_MECH_MODEL_SHELL_SOME_PAIRS signifiesthatsomepaired
andsomeunpairedsurfacesexist.(foroptionsthatusedshellcompression).
Usethefunction ProMechmodeldataFree() tofreeadatahandleusedfor
generation ofaCreoSimulategeometrymodel.Usethefunction
ProMechmodelFree() tofreeaCreoSimulatemodelhandle.Thisinvalidates
allgeometric entitiesobtainedfromthishandle.
AccessingtheProMechModel
Functions Introduced:
•ProMechmodelMdlGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechmodelFree() tofreeaCreoSimulatemodelhandle.Thisinvalidates
allgeometric entitiesobtainedfromthishandle.
AccessingtheProMechModel
Functions Introduced:
•ProMechmodelMdlGet()
•ProMechmodelSolidV isit()
•ProMechmodelPointV isit()
•ProMechmodelCurveV isit()
•ProMechmodelT oleranceGet()
Thefunction ProMechmodelMdlGet() canbeusedtoobtaintherootsolid
modelusedforgeneration ofthisCreoSimulatemodel.
Thefunction ProMechmodelSolidVisit() visitsthesolidvolumesthat
makeupaCreoSimulategeometrymodel.
Thefunction ProMechmodelPointVisit() visitsthedatumpointsthatare
includedinaCreoSimulategeometrymodel.
CreoSimulate:Geometry 1945Note
onlydatumpointsthathaveCreoSimulateitemsreferencing themwillbe
includedunlessyoupasstheadditional pointsasinputfrom
ProMechmodeldataEntitiesSet().
Thefunction ProMechmodelCurveVisit() visitsthecomposite curvesthat
areincludedinaCreoSimulategeometrymodel.
Note
onlydatumpointsthathaveCreoSimulateitemsreferencing themwillbexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProMechmodelCurveVisit() visitsthecomposite curvesthat
areincludedinaCreoSimulategeometrymodel.
Note
onlydatumpointsthathaveCreoSimulateitemsreferencing themwillbe
includedunlessyoupasstheadditional pointsasinputfrom
ProMechmodeldataEntitiesSet().
Usethefunction ProMechmodelToleranceGet() toobtaintheoverall
toleranceorepsilonvalueusedforthepreparation oftheCreoSimulategeometry.
AccessingtheProMechSolid
AnopaquehandlecalledaProMechSolid represents asolidvolumememberof
themodel(typically,anassemblymember).
Functions Introduced:
•ProMechsolidV isitAction()
•ProMechsolidFilterAction()
•ProMechsolidIdGet()
•ProMechsolidModelGet()
•ProMechsolidT ypeGet()
•ProMechsolidAsmcomppathGet()
•ProMechsolidSurfaceV isit()
•ProMechsolidEdgeV isit()
•ProMechsolidV ertexV isit()
Thefunctiontypes ProMechsolidVisitAction() and
ProMechsolidFilterAction() areusedasargumentstofunctionsthat
visitProMechSolid objects.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechsolidEdgeV isit()
•ProMechsolidV ertexV isit()
Thefunctiontypes ProMechsolidVisitAction() and
ProMechsolidFilterAction() areusedasargumentstofunctionsthat
visitProMechSolid objects.
1946 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProMechsolidIdGet() toobtaintheIDofthesolidvolume.
ThisIDisanindexinthearrayofgeneratedsolidvolumesandisnotpersistent
amongdifferentcallstoProMechmodelCreate().
Usethefunction ProMechsolidModelGet() toobtaintherootCreo
Simulategeometrymodelforthissolidmodel.
Usethefunction ProMechsolidTypeGet() toobtainthesolidvolumetype.
Usethefunction ProMechsolidAsmcomppathGet() toobtaintheassembly
component pathfromthetoplevelassemblytothissolid.
Usethefunction ProMechsolidSurfaceVisit() tovisitthesurfacesthat
areincludedinagivensolidvolume.
Usethefunction ProMechsolidEdgeVisit() tovisittheedgesthatare
includedinagivensolidvolume.
Usethefunction ProMechsolidVertexVisit() tovisittheverticesthatare
includedinagivensolidvolume.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProMechsolidEdgeVisit() tovisittheedgesthatare
includedinagivensolidvolume.
Usethefunction ProMechsolidVertexVisit() tovisittheverticesthatare
includedinagivensolidvolume.
AccessingCreoSimulateProMechSurface
AnopaquehandlecalledaProMechSurface represents aCreoSimulate
geometrysurface.Asurfacecanbeofthefollowingtypes:
•PRO_MECH_FACE_SOLID—A solidsurface
•PRO_MECH_FACE_SHELL—A shell(mid-plane) surface
•PRO_MECH_FACE_SIDE—A shellsidesurface
•PRO_MECH_FACE_SHELL_QLT—A quiltsurface
•PRO_MECH_FACE_BOUNDARY—A solidboundarysurface
•PRO_MECH_FACE_PERIM_WELD—A generatedsurfaceforaperimeter
weldobject
Functions Introduced:
•ProMechsurfaceV isitAction()
•ProMechsurfaceFilterAction()
•ProMechsurfaceIdGet()
•ProMechsurfaceOwnerGet()
•ProMechsurfaceT ypeGet()
•ProMechsurfaceContourV isit()
•ProMechsurfaceEdgeV isit()
•ProMechsurfaceV ertexV isit()
•ProMechsurfaceIncontactfacesGet()
CreoSimulate:Geometry 1947•ProMechsurfaceAncestorsGet()
Thefunctiontypes ProMechsurfaceVisitAction() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechsurfaceEdgeV isit()
•ProMechsurfaceV ertexV isit()
•ProMechsurfaceIncontactfacesGet()
CreoSimulate:Geometry 1947•ProMechsurfaceAncestorsGet()
Thefunctiontypes ProMechsurfaceVisitAction() and
ProMechsurfaceFilterAction() areusedasargumentstofunctionsthat
visitProMechSurface objects.
Usethefunction ProMechsurfaceIdGet() toobtainthesurfaceIDofthe
surface.
Note
ThisIDisnotpersistentandisnotrelatedtotheCreoParametric surfaceID.
Usethefunction ProMechsurfaceOwnerGet() toobtaintheowner
ProMechsolid ofthesurface.
Usethefunction ProMechsurfaceTypeGet() toobtainthetypeofsurface.
Usethefunction ProMechsurfaceContourVisit() tovisitthecontours
thatareincludedinagivensurface.
Usethefunction ProMechsurfaceEdgeVisit() tovisittheedgesthatare
includedinagivensurface.
Usethefunction ProMechsurfaceVertexVisit() tovisitverticesthatare
includedinagivensurface.
Usethefunction ProMechsurfaceAncestorsGet() toobtaintheancestor
surfacesforthegivensurface.ThesearetheactualCreoParametric geometryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxincludedinagivensurface.
Usethefunction ProMechsurfaceAncestorsGet() toobtaintheancestor
surfacesforthegivensurface.ThesearetheactualCreoParametric geometry
surfacesusedtoconstructthisCreoSimulatesurface.
GeometryEvaluationofProMechSurface
Forinformation abouthowCreoParametric TOOLKITrepresents surface
geometry,seethechapteronCore:3DGeometry onpage168andtheappendix,
ElementTrees:References onpage787.
Functions Introduced:
•ProMechsurfaceParamEval()
•ProMechsurfaceUvpntV erify()
•ProMechsurfaceT essellationGet()
•ProMechsurfaceDataGet()
•ProMechsurfaceT oNURBS()
•ProMechsurfaceT ransformGet()
•ProMechsurfaceThicknessEval()
1948 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProMechsurfaceParamEval() tofindthecorresponding
UVpointontheCreoSimulategeometrysurfaceonthebasisoftheXYZpoint.
Usethefunction ProMechsurfaceUvpntVerify() toverifywhetherthe
specifiedUVpointlieswithintheboundaries oftheCreoSimulatesurface.
Usethefunction ProMechsurfaceTessellationGet() tocalculatethexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProMechsurfaceUvpntVerify() toverifywhetherthe
specifiedUVpointlieswithintheboundaries oftheCreoSimulatesurface.
Usethefunction ProMechsurfaceTessellationGet() tocalculatethe
tessellation fortheprovidedCreoSimulatesurface.
Usethefunction ProMechsurfaceDataGet() toobtainthegeometric
representation ofthesurface.
Usethefunction ProMechsurfaceToNURBS() toobtaintheNURBS
representation oftheCreoSimulatesurface.
Usethefunction ProMechsurfaceTransformGet() toobtainUV
transformbetweenthetwosurfacesincontact.
Usethefunction ProMechsurfaceThicknessEval() toobtainthe
thicknessoftheshellCreoSimulatesurfaceatthegivenUVpoint.
AccessingProMechContour
AnopaquehandlecalledaProMechContour represents acontourmemberof
themodel.SeethechapteronCore:3DGeometry onpage168foradiscussion of
contours.
Functions Introduced:
•ProMechcontourV isitAction()
•ProMechcontourFilterAction()
•ProMechcontourIdGet()
•ProMechcontourSurfaceGet()
•ProMechcontourT raversalGet()
•ProMechcontourEdgeV isit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFunctions Introduced:
•ProMechcontourV isitAction()
•ProMechcontourFilterAction()
•ProMechcontourIdGet()
•ProMechcontourSurfaceGet()
•ProMechcontourT raversalGet()
•ProMechcontourEdgeV isit()
•ProMechcontourUvpntV erify()
•ProMechcontourAre aEval()
•ProMechcontourContainingContourGet()
Thefunctiontypes ProMechcontourVisitAction() and
ProMechcontourFilterAction() areusedasargumentstofunctionsthat
visitProMechContour objects.
Usethefunction ProMechcontourIdGet() toobtaintheIDforagiven
contour.ThisIDisuniquewithinthesurfacethatownsthecontour.
Usethefunction ProMechcontourSurfaceGet() toobtainthesurfacethat
containsthecontour.
CreoSimulate:Geometry 1949Usethefunction ProMechcontourTraversalGet() toobtainthecontour
traversal.
Usethefunction ProMechcontourEdgeVisit() tovisittheedgesthatmake
upacontour.
Usethefunction ProMechcontourUvpntVerify() toverifywhetherthe
specifiedUVpointlieswithinthegivenCreoSimulatecontour.
Usethefunction ProMechcontourAreaEval() tofindthesurfaceareaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxupacontour.
Usethefunction ProMechcontourUvpntVerify() toverifywhetherthe
specifiedUVpointlieswithinthegivenCreoSimulatecontour.
Usethefunction ProMechcontourAreaEval() tofindthesurfacearea
insidethegivenoutercontour,accounting forinternalvoids.
Thefunction ProMechcontourContainingContourGet() returnsthe
containing contourforaCreoSimulatecontourobject.
AccessingProMechEdge
AnopaquehandlecalledaProMechEdge represents anedgememberofthe
model.
Functions Introduced:
•ProMechedgeV isitAction()
•ProMechedgeFilterAction()
•ProMechedgeIdGet()
•ProMechedgeOwnerGet()
•ProMechedgeSurfaceV isit()
•ProMechedgeContourV isit()
•ProMechedgeEndpointsGet()
•ProMechedgeIncontactedgesGet()
•ProMechedgeAncestorsGet()
Thefunctiontypes ProMechedgeVisitAction() and
ProMechedgeFilterAction() areusedasargumentstofunctionsthatvisit
ProMechEdge objects.
Usethefunction ProMechedgeIdGet() toobtaintheIDofthegivenedge.
Note
ThisIDisnotpersistentandisnotrelatedtotheCreoParametric edgeID.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechEdge objects.
Usethefunction ProMechedgeIdGet() toobtaintheIDofthegivenedge.
Note
ThisIDisnotpersistentandisnotrelatedtotheCreoParametric edgeID.
Usethefunction ProMechedgeOwnerGet() toobtaintheowner
ProMechSolid ofthegivenedge.
1950 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProMechedgeSurfaceVisit() tovisitthesurfacesthat
sharethisedge.
Usethefunction ProMechedgeContourVisit() tovisitthecontoursthat
containthisedge.
Usethefunction ProMechedgeEndpointsGet() toobtaintheendpointsof
thegivenedge.
Usethefunction ProMechedgeIncontactedgesGet() toobtainthelistof
edgesthatareincontactwiththegivenedge.
Usethefunction ProMechedgeAncestorsGet() toobtaintheancestor
edgesforthegivenedge.ThesearetheactualCreoParametric geometryedges
usedtoconstructthisCreoSimulateedge.
GeometryEvaluationofProMechEdge
Forinformation abouthowCreoParametric TOOLKITrepresents edgegeometry,
seethechapteronCore:3DGeometry onpage168andtheappendix,Element
Trees:References onpage787.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxForinformation abouthowCreoParametric TOOLKITrepresents edgegeometry,
seethechapteronCore:3DGeometry onpage168andtheappendix,Element
Trees:References onpage787.
Functions Introduced:
•ProMechedgeUvdataEval()
•ProMechedgeXyzdataEval()
•ProMechedgeParamEval()
•ProMechedgeLengthEval()
•ProMechedgeLengthT1T2Eval()
•ProMechedgeParamByLengthEval()
•ProMechedgeT essellationGet()
•ProMechedgeDataGet()
•ProMechedgeT oNURBS()
•ProMechedgeDir ectionGet()
•ProMechedgeReldirGet()
Usethefunction ProMechedgeUvdataEval() toevaluatetheCreoSimulate
edgeintheUVspaceofthegivensurface.
Usethefunction ProMechedgeXyzdataEval() toevaluatetheCreo
Simulateedgeparameter pointinXYZspace.
Usethefunction ProMechedgeParamEval() tofindthecorresponding
normalized parameter ontheCreoSimulateedgebyXYZpoint.
Usethefunction ProMechedgeLengthEval() toobtainthelengthofthe
edge.
CreoSimulate:Geometry 1951Usethefunction ProMechedgeLengthT1T2Eval() tofindthelengthofthe
CreoSimulateedgebetweenthegivenparameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProMechedgeLengthEval() toobtainthelengthofthe
edge.
CreoSimulate:Geometry 1951Usethefunction ProMechedgeLengthT1T2Eval() tofindthelengthofthe
CreoSimulateedgebetweenthegivenparameters.
Usethefunction ProMechedgeParamByLengthEval() tofindthe
parameter ofthepointlocatedatthegivenlengthfromthegivenparameter.
Usethefunction ProMechedgeTessellationGet() togettheedge
tessellation fortheCreoSimulateedges.
Usethefunction ProMechedgeToNURBS() toobtaintheNURBs
representation oftheCreoSimulateedge.
Usethefunction ProMechedgeReldirGet() toobtaintherelativedirection
oftwoCreoSimulateedgesincontact.
Usethefunction ProMechedgeDataGet() toobtainthegeometric
representation oftheedge.
Usethefunction ProMechedgeDirectionGet() toobtaintheedgedirection
withrespecttothegivencontour.
AccessingProMechVertex
AnopaquehandlecalledaProMechVertex represents avertexmemberofthe
model.
Functions Introduced:
•ProMechvertexV isitAction()
•ProMechvertexFilterAction()
•ProMechvertexIdGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAccessingProMechVertex
AnopaquehandlecalledaProMechVertex represents avertexmemberofthe
model.
Functions Introduced:
•ProMechvertexV isitAction()
•ProMechvertexFilterAction()
•ProMechvertexIdGet()
•ProMechvertexOwnerGet()
•ProMechvertexPointGet()
•ProMechvertexSurfaceV isit()
•ProMechvertexEdgeV isit()
•ProMechvertexIncontactverticesGet()
Thefunctiontypes ProMechvertexVisitAction() and
ProMechvertexFilterAction() areusedasargumentstofunctionsthat
visitProMechVertex objects.
Usethefunction ProMechvertexIdGet() toobtaintheIDofthegiven
vertex.
Usethefunction ProMechvertexOwnerGet() toobtainthevolumethat
ownsthisvertex.
Usethefunction ProMechvertexPointGet() toobtainthecoordinate point
foragivenvertex.
1952 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProMechvertexSurfaceVisit() tovisitthesurfacesthat
includethisvertex.
Usethefunction ProMechvertexEdgeVisit() tovisittheedgesthat
containthisvertex.
Usethefunction ProMechvertexIncontactverticesGet() toobtainthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxincludethisvertex.
Usethefunction ProMechvertexEdgeVisit() tovisittheedgesthat
containthisvertex.
Usethefunction ProMechvertexIncontactverticesGet() toobtainthe
listofverticesthatareincontactwiththegivenvertex.
AccessingProMechPoint
AnopaquehandlecalledaProMechPoint represents adatumpointmemberof
themodel.Bydefault,theCreoSimulategeometrywillincludeonlythosepoints
whichhaveCreoSimulateloadsorotheritemsreferencing them;youcangenerate
additional pointsbyincludingthemasinputsto
ProMechmodeldataEntitiesSet().
Functions Introduced:
•ProMechpointV isitAction()
•ProMechpointFilterAction()
•ProMechpointIdGet()
•ProMechpointOwnerGet()
•ProMechpointPointGet()
•ProMechpointPlacementtypeGet()
•ProMechpointPlacementsurfaceGet()
•ProMechpointPlacementedgeGet()
•ProMechpointPlacementvertexGet()
•ProMechpointAncestorsGet()
Thefunctiontypes ProMechpointVisitAction() and
ProMechpointFilterAction() areusedasargumentstofunctionsthat
visitProMechPoint objects.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMechpointPlacementvertexGet()
•ProMechpointAncestorsGet()
Thefunctiontypes ProMechpointVisitAction() and
ProMechpointFilterAction() areusedasargumentstofunctionsthat
visitProMechPoint objects.
Usethefunction ProMechpointIdGet() toobtaintheIDofthepoint.
Note
ThisIDisnotpersistentandisnotrelatedtotheCreoParametric pointID.
Usethefunction ProMechpointOwnerGet() toobtaintheownermodelof
thegivenpoint.
Usethefunction ProMechpointPointGet() toobtainthecoordinates ofthe
point.
CreoSimulate:Geometry 1953Usethefunction ProMechpointPlacementtypeGet() toobtainthe
placement typeforthepoint.Following arelistofpossibleplacement types:
•PRO_MECH_PNT_FREE signifiesthatthepointisnotattachedtoasolidor
shell.
•PRO_MECH_PNT_FACE signifiesthatthepointliesona
ProMechSurface.
•PRO_MECH_PNT_EDGE signifiesthatthepointliesonaProMechEdge.
•PRO_MECH_PNT_VERTEX signifiesthatthepointliesona
ProMechVertex.
Usethefunction ProMechpointPlacementsurfaceGet() toobtainthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MECH_PNT_EDGE signifiesthatthepointliesonaProMechEdge.
•PRO_MECH_PNT_VERTEX signifiesthatthepointliesona
ProMechVertex.
Usethefunction ProMechpointPlacementsurfaceGet() toobtainthe
placement surface,iftheplacement typeisPRO_MECH_POINT_FACE.
Usethefunction ProMechpointPlacementedgeGet() toobtainthe
placement edge,ifplacement typeisPRO_MECH_POINT_EDGE.
Usethefunction ProMechpointPlacementvertexGet() toobtainthe
placement vertex,iftheplacement typeisPRO_MECH_POINT_VERTEX.
Usethefunction ProMechpointAncestorsGet() toobtaintheancestor
pointsforthegivenpoint.ThesearetheactualCreoParametric geometrypoints
usedtoconstructthisCreoSimulatepoint.
AccessingProMechCompositeCurve
AnopaquehandlecalledaProMechCompositeCurve represents acomposite
curvememberofthemodel.Bydefault,theCreoSimulategeometrywillinclude
onlythosecurveswhichhaveCreoSimulateloadsorotheritemsreferencing
them.Youcangenerateadditional curvesbyincludingthemasinputsto
ProMechmodeldataEntitiesSet().
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonlythosecurveswhichhaveCreoSimulateloadsorotheritemsreferencing
them.Youcangenerateadditional curvesbyincludingthemasinputsto
ProMechmodeldataEntitiesSet().
Functions Introduced:
•ProMechcompositecurveV isitAction()
•ProMechcompositecurveFilterAction()
•ProMechcompositecurveIdGet()
•ProMechcompositecurveOwnerGet()
•ProMechcompositecurveCurveV isit()
•ProMechcompositecurveAncestorsGet()
Thefunctiontypes ProMechcompositecurveVisitAction() and
ProMechcompositecurveFilterAction() areusedasargumentsto
functionsthatvisitProMechCompositeCurve objects.
Usethefunction ProMechcompositecurveIdGet() toobtaintheIDofthe
composite curve.
1954 Creo®Parametric TOOLKIT User’sGuideNote
ThisIDisnotpersistentandisnotrelatedtotheCreoParametric composite
curveID.
Usethefunction ProMechcompositecurveOwnerGet() toobtainthe
ownermodelofthecomposite curve.
Usethefunction ProMechcompositecurveCurveVisit() tovisitthe
curvesthatmakeupthiscomposite curve.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurveID.
Usethefunction ProMechcompositecurveOwnerGet() toobtainthe
ownermodelofthecomposite curve.
Usethefunction ProMechcompositecurveCurveVisit() tovisitthe
curvesthatmakeupthiscomposite curve.
Usethefunction ProMechcompositecurveAncestorsGet() toobtainthe
ancestorcurvesforthegivencurve.ThesearetheactualCreoParametric
geometrycurvesusedtoconstructthisCreoSimulatecurve.
AccessingProMechCurve
AnopaquehandlecalledaProMechCurve represents acurvememberofthe
model.Acurveisalwaysthechildofacomposite curve.
Functions Introduced:
•ProMechcurveV isitAction()
•ProMechcurveFilterAction()
•ProMechcurveT ypeGet()
•ProMechcurveEdgeGet()
•ProMechcurvePar entGet()
•ProMechcurveParamGet()
•ProMechcurveEndpointsGet()
•ProMechcurveAncestorsGet()
Thefunctiontypes ProMechcurveVisitAction() and
ProMechcurveFilterAction() areusedasargumentstofunctionsthat
visitProMechCurve objects.
Usethefunction ProMechcurveTypeGet() toobtainthecurve'stype.Curves
maybeofthefollowingtypes:
•PRO_MECH_SEGMENT_FREExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvisitProMechCurve objects.
Usethefunction ProMechcurveTypeGet() toobtainthecurve'stype.Curves
maybeofthefollowingtypes:
•PRO_MECH_SEGMENT_FREE
•PRO_MECH_SEGMENT_ON_EDGE
Usethefunction ProMechcurveEdgeGet() toobtaintheedge,ifthecurve
typeisPRO_MECH_CURVE_EDGE.
Usethefunction ProMechcurveParentGet() toobtaintheparentcomposite
curveforthiscurve.
CreoSimulate:Geometry 1955Usethefunction ProMechcurveParamGet() toobtaintheparameter along
theparentcomposite curveatwhichthiscurvebegins.
Usethefunction ProMechcurveEndpointsGet() toobtaintheendpointsof
thecurve.
Usethefunction ProMechcurveAncestorsGet() toobtaintheancestor
curvesforthespecifiedCreoSimulatecurve.Theancestorcurvesaretheactual
CreoParametric geometrycurvesusedtoconstructtheCreoSimulatecurve.
GeometryEvaluationofProMechCurves
Forinformation abouthowCreoParametric TOOLKITrepresents curve
geometry,seethechapteronCore:3DGeometry onpage168andtheappendix,
ElementTrees:References onpage787.
Functions Introduced:
•ProMechcurveXyzdataEval()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometry,seethechapteronCore:3DGeometry onpage168andtheappendix,
ElementTrees:References onpage787.
Functions Introduced:
•ProMechcurveXyzdataEval()
•ProMechcurveParamEval()
•ProMechcurveLengthEval()
•ProMechcurveLengthT1T2Eval()
•ProMechcurveParamByLengthEval()
•ProMechcurveDataGet()
•ProMechcurveT oNURBS()
Usethefunction ProMechcurveXyzdataEval() evaluatestheCreo
Simulatecurveparameter pointintheXYZpoint.
Usethefunction ProMechcurveParamEval() tofindthecorresponding
normalized parameter ontheCreoSimulatecurvebyXYZpoint.
Usethefunction ProMechcurveLengthEval() toobtainthelengthofthe
curve.
Usethefunction ProMechcurveLengthT1T2Eval() tofindthelengthof
theCreoSimulatecurvebetweenthegivenparameters.
Usethefunction ProMechcurveParamByLengthEval() tofindthe
parameter ofthepointlocatedatthegivenlengthfromthegivenparameter.
Usethefunction ProMechcurveDataGet() toobtainthegeometric
representation oftheedge.
Usethefunction ProMechcurveToNURBS() toobtaintheNURBSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsethefunction ProMechcurveDataGet() toobtainthegeometric
representation oftheedge.
Usethefunction ProMechcurveToNURBS() toobtaintheNURBS
representation oftheCreoSimulatecurve.
1956 Creo®Parametric TOOLKIT User’sGuideToCreateaSurfaceRegionFeature
ThissectiondescribestheusetheheaderfileProSurfReg.h tocreateasurface
regionfeatureprogrammatically .ThechapterElementTrees:Principles ofFeature
Creationonpage749providesthenecessarybackground forcreatingfeatures;we
recommend youreadthatmaterialfirst.
Note
TheSurfaceRegionfeatureisavailableandcanberegenerated onlyinthe
CreoSimulateenvironment.
ThefollowingfigureshowstheelementtreefortheSurfaceRegionfeature.
TheSurfaceRegionfeatureelementtreecontainsnonon-standard elementtypes.
Thefollowingtabledescribesspecialinformation abouttheelementsinthistree.
ElementID Value
PRO_E_FEATURE_TYPE PRO_FEAT_SPLIT_SURF
PRO_E_STD_FEATURE_NAME SpecifiesthenameoftheSurfaceRegionfeature.
Thedefaultvalueis“SurfaceRegion”.Thiselement
isoptional.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementID Value
PRO_E_FEATURE_TYPE PRO_FEAT_SPLIT_SURF
PRO_E_STD_FEATURE_NAME SpecifiesthenameoftheSurfaceRegionfeature.
Thedefaultvalueis“SurfaceRegion”.Thiselement
isoptional.
PRO_E_SURFREG_SPLITTING_OPTION Specifiesthemethodtodefinethesurfacecontour.
Validvaluesare:
PRO_SURFREG_SKETCH—Split thesurfaceusinga
sketch.
PRO_SURFREG_CHAIN—Split thesurfaceusinga
chain.
PRO_E_STD_SECTION Specifiesa2Dsectionorasketchedsection.Referto
thesectionCreatingFeaturesContaining Sectionson
page989fordetailsonhowtocreatefeaturesthat
containsketchedsections.
CreoSimulate:Geometry 1957ElementID Value
RefertothesectionCreatingSectionModelsonpage
972fordetailsoncreating2Dsections.
PRO_E_STD_CURVE_COLLECTION_APPL Specifiesacollection ofselectedcurvesoredgesor
bothtocopy.
PRO_E_STD_SURF_COLLECTION_APPL Specifiesacollection ofselectedsurfacestocopy.
1958 Creo®Parametric TOOLKIT User’sGuide71
CreoSimulate:FiniteElement
Modeling(FEM)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbothtocopy.
PRO_E_STD_SURF_COLLECTION_APPL Specifiesacollection ofselectedsurfacestocopy.
1958 Creo®Parametric TOOLKIT User’sGuide71
CreoSimulate:FiniteElement
Modeling(FEM)
Overview..............................................................................................................1960
ExportinganFEAMesh.........................................................................................1960
Thischaptercontainsdescriptions oftheCreoParametric TOOLKITfunctions
thatsupportCreoParametric FiniteElementModeling(FEM).
1959Overview
TheFiniteElementModeling(FEM)functionsinthischapteraredesignedtogive
youaccesstodatageneratedbythePro/MESH moduleofCreoParametric. You
candothefollowing:
•ExportaPro/MESH outputfiletodisk.
ExportinganFEAMesh
FunctionIntroduced:
•ProFemmeshExport()
Thefunction ProFemmeshExport() generatestheFiniteElementMeshbased
onthegivenparameters, andexportsittothespecifiedfile.
Thefunctionusesthedatastructure ProFemmeshData, whichisdefinedas
follows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProFemmeshExport() generatestheFiniteElementMeshbased
onthegivenparameters, andexportsittothespecifiedfile.
Thefunctionusesthedatastructure ProFemmeshData, whichisdefinedas
follows:
typedef struct pro_femmesh_data
{
ProFemmeshType mesh_type;
ProFemshellmeshType shell_type;
int num_quilts;
ProFemquiltref *pro_quilt_ref_arr;
ProFemanalysisType analysis;
ProFemelemshapeType elem_shape;
ProFemsolverType solver;
ProFemcsysref csys_ref;
int num_aux_csys;
ProFemcsysref *aux_csys_ref_arr;
}ProFemmeshData;
Thepro_femmesh_data fieldsareasfollows:
•mesh_type—The meshtype.Thepossiblevaluesareasfollows:
○PRO_FEM_SOLID_MESH—Mesh solidpartsusingtetrahedral solidmesh
elements.
○PRO_FEM_SHELL_MESH—Shell meshusingtriangularorquadrangular
meshelements.Thistypeisdesignedformeshingsurfaces.
○PRO_FEM_MIXED_MESH—Mesh modelswithamixtureofshelland
tetrahedral meshelements.
○PRO_FEM_QUILT_MESH—A meshforanysimpleoradvancedshell
idealizations createdforquiltsurfaces.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_FEM_MIXED_MESH—Mesh modelswithamixtureofshelland
tetrahedral meshelements.
○PRO_FEM_QUILT_MESH—A meshforanysimpleoradvancedshell
idealizations createdforquiltsurfaces.
○PRO_FEM_BOUNDARY_MESH—A shellmeshoftriangularor
quadrilateral elementsonthemodel'sexteriorsurfaces.
○PRO_FEM_BAR_MESH—A barmeshforonedimensional idealizations.
1960 Creo®Parametric TOOLKIT User’sGuide•shell_type—The typeofshellelement.Thisfieldisignoredforasolid
mesh.Thepossiblevaluesareasfollows:
○PRO_FEM_TRIANGLE
○PRO_FEM_QUADRANGLE
•num_quilts—The quiltidentifier.
•pro_quilt_ref_arr—An arrayofreferences ofquiltsurfacesinthe
assembly.
•analysis—The analysistype.Thepossiblevaluesareasfollows:
○PRO_FEM_ANALYSIS_STRUCTURAL—Structural analysis,including
stress,strain,thermalstress,anddisplacement.
○PRO_FEM_ANALYSIS_MODAL—Modal analysis,includingthe
constraint setsappliedtothemodel.
○PRO_FEM_ANALYSIS_THERMAL—Thermal analysis,including
temperature, heatflux,andheatgradient.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_FEM_ANALYSIS_MODAL—Modal analysis,includingthe
constraint setsappliedtothemodel.
○PRO_FEM_ANALYSIS_THERMAL—Thermal analysis,including
temperature, heatflux,andheatgradient.
•elem_shape—The typeofelementtobeusedforthesolver.
○PRO_FEM_MIDPNT_LINEAR—Linear elementsareusedforthe
analysis.Thisincludescornernodes,straightedges,andplanarfaces.
○PRO_FEM_MIDPNT_PARABOLIC—Parabolic elementsareusedforthe
analysis.
○PRO_FEM_MIDPNT_PARABOLIC_FIXED—The excessively curved
edgesofsolidandshellmeshparabolicelementsareslightlystraightened
andthenusedforanalysis.
Thenumberofnodesthatareasfollows:
Tetrahedron PRO_FEA_LINEAR: 4nodes
PRO_FEA_PARABOLIC: 10nodes
Triangle PRO_FEA_LINEAR: 3nodes
PRO_FEA_PARABOLIC: 6nodes
Quadrangle PRO_FEA_LINEAR: 4nodes
PRO_FEA_PARABOLIC: 8nodes
•solver—The typeofsolverusedforanalysis.Thepossiblevaluesare:
○PRO_FEM_FEAS_ANSYS—Specifies anANSYSsolver.
○PRO_FEM_FEAS_NASTRAN—Specifies aNASTRAN solver.
○PRO_FEM_FEAS_NEUTRAL—Specifies othersolversthatsupportthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_FEM_FEAS_ANSYS—Specifies anANSYSsolver.
○PRO_FEM_FEAS_NASTRAN—Specifies aNASTRAN solver.
○PRO_FEM_FEAS_NEUTRAL—Specifies othersolversthatsupportthe
FEMNeutralfileformatforanalysis.
•csys_ref—An arrayofgeometric references.
CreoSimulate:FiniteElementModeling(FEM) 1961•num_aux_csys—Additional coordinate systemtobeincludedinthe
analysis.
•aux_csys_ref_arr—An arrayofgeometric references fortheauxiliary
coordinate system.
Note
Priortocallingthisfunction,themodel(pro_solid) shouldbedisplayedin
thegraphicswindow.
Theinputargumentsofthisfunctionareasfollows:
•pro_solid— ThehandleofaCreoParametric model(partorassembly).
•p_mesh_data—The pointertothedatastructurecontaining themesh
generation parameters.
•file_name—The filenametoexportmeshto.
Thisfunctionsupersedes thefunction pro_export_fea_mesh()
1962 Creo®Parametric TOOLKIT User’sGuide72
Mechanism Design:Mechanism
Features
MechanismSpringFeature....................................................................................1964xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1962 Creo®Parametric TOOLKIT User’sGuide72
Mechanism Design:Mechanism
Features
MechanismSpringFeature....................................................................................1964
MechanismDamperFeature..................................................................................1966
MechanismBeltFeature........................................................................................1967
Mechanism3DContactFeature.............................................................................1970
MechanismMotorFeatures....................................................................................1974
Thischapterdescribestheprogrammatic creationofmechanism modelingentities
suchasspringsanddampersasCreoParametric features.
Thechapteralsoexplainsfortoaddmotorfeaturessuchas,servomotors,forces
motors,andsoon.
Werecommend youreadthesection,Overview ofFeatureCreationonpage750
inthechapter,ElementTrees:Principles ofFeatureCreationonpage749.Itxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmotors,andsoon.
Werecommend youreadthesection,Overview ofFeatureCreationonpage750
inthechapter,ElementTrees:Principles ofFeatureCreationonpage749.It
providesthenecessarybackground forcreatingfeaturesusingCreoParametric
TOOLKIT.
1963Mechanism SpringFeature
Aspringgeneratesatranslational orrotationalspringforceinamechanism. It
producesalinearspringforcewhenstretchedorcompressed, andatorsionforce
whenrotated.Themagnitude ofthespringforceisdirectlyproportional tothe
amountofdisplacement fromthepositionofequilibrium.
SpringsarecreatedasCreoParametric featuresandtheirvaluesarestoredasvalid
CreoParametric parameters.
FeatureElementTreefortheMechanism Spring
Feature
TheelementtreefortheMechanism Springfeatureisdocumented intheheader
file,ProDamperFeat.h. Thefollowingfiguredemonstrates thestructureofthe
featureelementtree.
FeatureElementTreeforMechanism Spring
Thefollowinglistdetailsspecialinformation abouttheelementsinthefeature
elementtree:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatureelementtree.
FeatureElementTreeforMechanism Spring
Thefollowinglistdetailsspecialinformation abouttheelementsinthefeature
elementtree:
•PRO_E_STD_FEAT_NAME—Specifies thenameofthemechanism spring
feature.
1964 Creo®Parametric TOOLKIT User’sGuide•PRO_E_SPRING_DAMPER_TYPE—Specifies themechanism springfeature
type.Itcanhavethefollowingvalues:
○PRO_SPRING_DAMPER_FORCE—Specifies anextensionor
compression spring.
○PRO_SPRING_DAMPER_TORQUE—Specifies atorsionspring.
•PRO_E_SPRING_DAMPER_REF—Specifies thespringplacement
references. Foranextensionspringorcompression spring,youcanselectthe
translational axisortwopointsontwodifferentbodiesastheplacement
references. Foratorsionspring,youcanselecttherotationalaxisasthe
placement reference.
•PRO_E_SPRING_K—Specifies thevalueforthestiffnesscoefficientofthe
spring.
•PRO_E_SPRING_U—Specifies thevaluefortheunstretched lengthofthe
spring.
•PRO_E_SPRING_DIAMETER—Specifies thevalueforthespringicon
diameterforanextensionspring.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspring.
•PRO_E_SPRING_U—Specifies thevaluefortheunstretched lengthofthe
spring.
•PRO_E_SPRING_DIAMETER—Specifies thevalueforthespringicon
diameterforanextensionspring.
•PRO_E_SPRING_USE_DIAMETER—Specifies theAdjustIconDiameter
option(available intheCreoParametric userinterface)thatallowsyouto
changethevalueofthespringicondiameter.Thiselementisnotavailableby
default.Ittakesthefollowingvalues:
○PRO_SPRING_USE_DIAMETER_NO
○PRO_SPRING_USE_DIAMETER_YES
•PRO_E_SPRING_ATTACH_POINTS—Specifies theattachment pointsfor
thetwoendsofatorsionspring.Theattachment pointscanbeofthefollowing
types:
○PRO_SPRING_USE_MOTION_AXIS_ZERO—Specifies theJAS(Joint
AxisSet)option,wheretheattachment references areautomatically
populated withtheselectedJASreferences.
○PRO_SPRING_CUSTOM_ATTACHMENT_POINTS—Specifies custom
attachment references whereyoucanspecifytwoattachment references
suchasdatumplanes,datumpoints,andvertices.Thevectorbetweeneach
attachment referenceandtheselectedrotationalaxisisautomaticallyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxattachment references whereyoucanspecifytwoattachment references
suchasdatumplanes,datumpoints,andvertices.Thevectorbetweeneach
attachment referenceandtheselectedrotationalaxisisautomatically
calculated. Bydefault,thegreatestanglebetweenthetwovectorsis
definedasthespringangle.Onselectingboththeattachment references,
theunstretched valueofthetorsionspringisautomatically updated
according tothecurrentanglebetweenthetwovectors.
Mechanism Design:Mechanism Features 1965•PRO_E_SPRING_ATTACH_REF—Specifies theactualattachment references
forthetorsionspringdepending upontheattachment typesetfortheelement
PRO_E_SPRING_ATTACH_POINTS.
•PRO_E_SPRING_FLIP_U_ANGLE—Specifies theoptiontoflipthe
directionofthecurrentanglebetweentheattachment references foratorsion
spring.
Mechanism DamperFeature
Adampergeneratesaforcethatremovesenergyfromamovingmechanism and
dampensitsmotion.Thedamperforceisalwaysproportional tothemagnitude of
velocityoftheentityonwhichyouareapplyingthedamper,andactsinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAdampergeneratesaforcethatremovesenergyfromamovingmechanism and
dampensitsmotion.Thedamperforceisalwaysproportional tothemagnitude of
velocityoftheentityonwhichyouareapplyingthedamper,andactsinthe
directionoppositetomovement.
DampersarecreatedasCreoParametric featuresandtheirvaluesarestoredas
validCreoParametric parameters.
FeatureElementTreefortheMechanism Damper
Feature
TheelementtreefortheMechanism Damperfeatureisdocumented intheheader
file,ProDamperFeat.h. Thefollowingfiguredemonstrates thestructureofthe
featureelementtree.
FeatureElementTreeforMechanism Damper
Thefollowinglistdetailsspecialinformation abouttheelementsinthefeature
elementtree:
•PRO_E_STD_FEAT_NAME—Specifies thenameofthemechanism damper
feature.
•PRO_E_SPRING_DAMPER_TYPE—Specifies themechanism damperfeature
type.Itcanhavethefollowingvalues:
1966 Creo®Parametric TOOLKIT User’sGuide○PRO_SPRING_DAMPER_FORCE—Specifies anextensiondamperor
compression damper.
○PRO_SPRING_DAMPER_TORQUE—Specifies atorsiondamper.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtype.Itcanhavethefollowingvalues:
1966 Creo®Parametric TOOLKIT User’sGuide○PRO_SPRING_DAMPER_FORCE—Specifies anextensiondamperor
compression damper.
○PRO_SPRING_DAMPER_TORQUE—Specifies atorsiondamper.
•PRO_E_SPRING_DAMPER_REF—Specifies thedamperplacement
references. Foranextensiondamperorcompression damper,youcanselect
thetranslational orslotaxis,ortwopointsontwodifferentbodiesasthe
placement references. Foratorsiondamper,youcanselecttherotationalaxis
astheplacement reference.
•PRO_E_DMP_CVAL—Specifies thevalueforthedampingcoefficient.
Mechanism BeltFeature
Abeltistreatedasaconnection connecting allthepulleybodies.Thebelt
providesthesameangularvelocitytoallpulleysconnected byit.
BeltsarecreatedasCreoParametric featuresandtheirvaluesarestoredasvalid
CreoParametric parameters.
FeatureElementTreefortheMechanism Belt
Feature
TheelementtreefortheMechanism Beltfeatureisdocumented intheheaderfile,
ProBeltFeat.h. Thefollowingfiguredemonstrates thestructureofthefeature
elementtree.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFeature
TheelementtreefortheMechanism Beltfeatureisdocumented intheheaderfile,
ProBeltFeat.h. Thefollowingfiguredemonstrates thestructureofthefeature
elementtree.
Mechanism Design:Mechanism Features 1967FeatureElementTreeforMechanism Belt
Thefollowinglistdetailsspecialinformation abouttheelementsinthefeature
elementtree:
•PRO_E_FEATURE_TYPE—Specifies thefeaturetype.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthemechanism belt
feature.
•PRO_E_BELT_PULLEYS—Specifies anarrayofpulleybodiesofthetype
PRO_E_BELT_PULLEY_RECORD whichconsistsofthefollowingelements:
○PRO_E_BELT_PULLEY_SEL—Specifies thegeometric reference
selectedasthepulleybody.Itcanbeacylindrical surface,acircularcurve
oredge,oraPINorCylinderconnection. Youmustdefineatleasttwo
pulleybodiesforthebelt.
CreoParametric automatically selectsboththesidesofthecylindrical
surfaceorthecircularcurveoredgesothatthepulleyiscomplete.Incase
ofacylindrical orcircularreference, thepulley’saxisofrotationisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoParametric automatically selectsboththesidesofthecylindrical
surfaceorthecircularcurveoredgesothatthepulleyiscomplete.Incase
ofacylindrical orcircularreference, thepulley’saxisofrotationis
automatically detectedbydetectingaPINorCylinderconnection aligned
tothetheoretical axisofthegeometric referenceandperpendicular tothe
beltplane.Ifsuchasaconnection doesnotexist,thereferenceis
considered invalid.Incaseofaconnection reference, therotationaxisof
theselectedconnection isusedasthepulleyaxis.
1968 Creo®Parametric TOOLKIT User’sGuide○PRO_E_BELT_PULLEY_WRAP_SIDE—Specifies thepulleywrapping
direction.Itcanbeleft(-1)orright(+1)andrelativetothepreviouspulley.
Youcanflipthebelttotheothercontactpointdetectedbetweenthebelt
andthepulley.
○PRO_E_BELT_PULLEY_DIAMETER—Specifies thepulleydiameter.A
cylindrical curvewiththespecifieddiameterisdisplayedaroundthe
selectedpulleyreferenceandonthebeltplane.Thepulleydiameteris
coincident withthepulleyreferencebydefault,exceptincaseof
connection references.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectedpulleyreferenceandonthebeltplane.Thepulleydiameteris
coincident withthepulleyreferencebydefault,exceptincaseof
connection references.
○PRO_E_BELT_PULLEY_DIAM_COINCIDENT—Indicates ifthepulley
diameteriscoincident withthepulleyreference. Thiselementissetto
PRO_B_TRUE, whichmeansthepulleydiameterissettothevalue
Coincident bydefaultfornon-connection references.
○PRO_E_BELT_PULLEY_CONN_NUM—Specifies thenumberofthePIN
orCylinderconnection selectedasthepulleyreferencefromtheavailable
validconnections. Oneofthebodiesthatdefinestheconnection is
considered thepulleybody,whiletheotherbodyconnected toitis
considered thecarrierbody.
○PRO_E_BELT_PULLEY_FLIP_CONN_BODIES—Specifies theoption
toflipbetweenthepulleyandcarrierbodies,incaseofconnection
references. Thisoptionisnotavailableincaseofgeometric references.
○PRO_E_BELT_PULLEY_NUM_WRAPS—Specifies thenumberoffull
wrapsaroundthecurrentlyselectedpulley.Thewrapsareconsidered as
notoverlapping andarenotdisplayedinthe3Diconforthebelt.Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx○PRO_E_BELT_PULLEY_NUM_WRAPS—Specifies thenumberoffull
wrapsaroundthecurrentlyselectedpulley.Thewrapsareconsidered as
notoverlapping andarenotdisplayedinthe3Diconforthebelt.The
numberofwrapsaffectsthebeltlength.Incaseofopenendedbelts,the
numberofwrapsinfluences themotionextentoftheconnected bodies.
•PRO_E_BELT_PLANE—Specifies theplanarsurfaceordatumplanethat
definesthebeltplane.Theplaneshouldbeperpendicular totherotationaxis
ofthefirstpulley.Thiselementisoptional.Ifthebeltplaneisnotspecified,it
isdetectedbasedontheselectedpulleyreferences asfollows:
○Cylindrical surfaces—If acylindrical surfaceisusedasthepulley
reference, theperpendicular planepositioned inthecenterofthe
cylindrical surface(forthefirstpulleyincaseofmultiplepulleys)isused
asthebeltplane
○Circularedgeorcurve—Ifacircularedgeorcurveisusedasthepulley
reference, theplaneforthecorresponding edgeorcurve(forthefirst
pulleyincaseofmultiplepulleys)isusedasthebeltplane.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasthebeltplane
○Circularedgeorcurve—Ifacircularedgeorcurveisusedasthepulley
reference, theplaneforthecorresponding edgeorcurve(forthefirst
pulleyincaseofmultiplepulleys)isusedasthebeltplane.
○PIN/Cylinder connections—In caseofconnection references, theinternal
orangebodyzeropoint(forthefirstpulleyincaseofmultiplepulleys)is
usedasthebeltplane.
Mechanism Design:Mechanism Features 1969•PRO_E_BELT_DEFINE_CUSTOM_U_LENGTH—Identifies ifthe
unstretched beltlengthcanbespecifiedbytheuser,orifitissystem-defined.
Thelengthissystem-defined bydefault.
•PRO_E_BELT_UNSTRETCHED_LENGTH—Specifies thevalueforthe
unstretched beltlength.Thesystem-defined lengthiscalculated basedonthe
pulleyreferences andtheirspecifieddiameters. Whentheuserentersadesired
beltlength,CreoParametric triestoreconnecttheassemblyaccording tothe
specifiedbeltlength.Ifthereconnectoperationfails,thebeltlengthrevertsto
thepreviously enteredvalue.
•PRO_E_BELT_STIFFNESS_COEFF—Specifies thebeltstiffnesscoefficient
value.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedbeltlength.Ifthereconnectoperationfails,thebeltlengthrevertsto
thepreviously enteredvalue.
•PRO_E_BELT_STIFFNESS_COEFF—Specifies thebeltstiffnesscoefficient
value.
Mechanism 3DContactFeature
3Dcontactsareconnections betweenagroupofsurfacesselectedfromtwoparts.
Theseconnections aresimilartocams,joints,gears,andbelts.Depending onthe
surfacesselected,3Dcontactscanbeofthefollowingtypes:
•SpheretoSphere(pointcontact)
•SpheretoPlanarsurface(pointcontact)
•CylindertoCylinder(linecontact)
•CylindertoPlanarsurface(linecontact)
•SpheretoCylinder(pointcontact)
•ToroidtoPlane(pointcontact)
3DContactsarecreatedasCreoParametric featuresandtheirvaluesarestoredas
CreoParametric featureparameters.
FeatureElementTreefortheMechanism 3DContact
Feature
TheelementtreefortheMechanism 3DContactfeatureisdocumented inthe
headerfile,ProContact3dFeat.h. Thefollowingfiguredemonstrates the
structureofthefeatureelementtree.
1970 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforMechanism 3DContactxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxheaderfile,ProContact3dFeat.h. Thefollowingfiguredemonstrates the
structureofthefeatureelementtree.
1970 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforMechanism 3DContact
Note
FromPro/ENGINEER Wildfire5.0onwards,thefeatureelementtreeforthe
3DContactfeaturehasbeenupdated.3DContactfeaturescreatedusingthe
oldtreearerepresented inthenewtreeformat.Youwillneedtorebuildyour
existingPro/TOOLK ITapplications according tothenewelementtree.
Thefollowinglistdetailsspecialinformation abouttheelementsinthefeature
elementtree:
Mechanism Design:Mechanism Features 1971•PRO_E_FEATURE_TYPE—Specifies thefeaturetype.
•PRO_E_STD_FEATURE_NAME—Specifies thenameofthemechanism 3D
contactfeature.
•PRO_E_C3D_MAT_OPTION1—Specifies thematerialtypeforthefirst
contactpart.Thematerialtypeisgivenbytheenumerated type
ProC3dMaterialType thattakesthefollowingvalues:
○PRO_C3D_MAT_DEFAULT—Specifies thematerialproperties ofthe
participating contactpart.Thisisthedefaulttype.Ifthistypeisset,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProC3dMaterialType thattakesthefollowingvalues:
○PRO_C3D_MAT_DEFAULT—Specifies thematerialproperties ofthe
participating contactpart.Thisisthedefaulttype.Ifthistypeisset,the
elements PRO_E_C3D_POISSON1, PRO_E_C3D_YOUNG1, andPRO_
E_C3D_DAMPING1 arenotavailableformodification andaresetby
default.
○PRO_C3D_MAT_SEL_MAT—Allows youtoselectamaterialtypefrom
thelistofmaterialsusedintheassemblyorfromthemateriallibrary
directory.Ifthistypeisset,theelements PRO_E_C3D_POISSON1,
PRO_E_C3D_YOUNG1, andPRO_E_C3D_DAMPING1 arenotavailable
formodification andaresetaspertheselectedmaterial.
○PRO_C3D_MAT_USE_VALS—Allows youtospecifythevaluesforthe
materialproperties. Theelements PRO_E_C3D_POISSON1, PRO_E_
C3D_YOUNG1, andPRO_E_C3D_DAMPING1 areavailableandcanbe
setasrequired.
•PRO_E_C3D_REF1_RECS—Specifies anarrayofselectedsurfacereferences
belonging tothefirstpartthatisusedinthe3Dcontact.Youcanselect
multiplesurfaceshavingacommoncenter,equaldiameterandacommonxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_C3D_REF1_RECS—Specifies anarrayofselectedsurfacereferences
belonging tothefirstpartthatisusedinthe3Dcontact.Youcanselect
multiplesurfaceshavingacommoncenter,equaldiameterandacommon
edge.ThesurfacereferenceisoftypePRO_E_C3D_REF_REC andconsists
ofthefollowingelements:
○PRO_E_C3D_REF—Specifies theselectedsurfacereference. The
referencecanbeaspherical,cylindrical, toroidal,orplanarsurface,ora
vertex.Ifyouselectavertexfromthefirstpartasoneofthereferences, a
sphereisdisplayedaroundthevertexandthevertexisconsidered asa
sphereinthe3Dcontact.Ifthefirstreferenceisavertex,specifythevalue
forthevertexradiususingtheelement PRO_E_C3D_VERT_RAD. The
firstsurfacedetermines thesecondpartthatcanbeselectedforthe
connection.
○PRO_E_C3D_REF_FULL_GEOM—Specifies whetheracompletesurface
orasegmentofthesurfaceisselected.Thisoptionisspecifiedbythe
enumerated typeProC3dFullGeomFlag andhasthefollowingvalues:
◆PRO_C3D_FULL_GEOM—Specifies thatacompletesurfacehasbeen
selectedforthe3Dcontact.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxenumerated typeProC3dFullGeomFlag andhasthefollowingvalues:
◆PRO_C3D_FULL_GEOM—Specifies thatacompletesurfacehasbeen
selectedforthe3Dcontact.
1972 Creo®Parametric TOOLKIT User’sGuide◆PRO_C3D_PARTIAL_GEOM—Specifies thatasegmentofacylinder,
sphere,ortoroidhasbeenselectedforthe3Dcontact.
○PRO_E_C3D_REF_FLIP—Specifies ifthedirectionforthe3Dcontactis
flipped.ThevalueforthiselementisPRO_B_FALSE bydefaultwhich
meansthecontactdirectionisnotflippedandthesurfacedirectionisused.
Thiselementisapplicable onlyifyouusequiltsurfacestocreatethe3D
contacts.
•PRO_E_C3D_MAT_NAME1—Specifies thenameofthematerialtypeselected
forthefirstcontactpart.Thiselementcanbesetonlyiftheelement PRO_E_
C3D_MAT_OPTION1 issettoPRO_C3D_MAT_SEL_MAT.
•PRO_E_C3D_POISSON1—Specifies thevalueforPoisson’sratioforthe
firstcontactpart.
•PRO_E_C3D_YOUNG1—Specifies thevalueforYoung’smodulusforthefirst
contactpart.
•PRO_E_C3D_DAMPING1—Specifies thevalueforthedampingcoefficient
forthefirstcontactpart.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfirstcontactpart.
•PRO_E_C3D_YOUNG1—Specifies thevalueforYoung’smodulusforthefirst
contactpart.
•PRO_E_C3D_DAMPING1—Specifies thevalueforthedampingcoefficient
forthefirstcontactpart.
•PRO_E_C3D_MAT_OPTION2—Specifies thematerialtypeforthesecond
contactpart.Refertothedescription oftheelement PRO_E_C3D_MAT_
OPTION1 forthematerialtypesthatyoucanselect.
•PRO_E_C3D_REF2_RECS—Specifies anarrayofselectedsurfacereferences
ofthetypePRO_E_C3D_REF_REC fromthesecondpartthatisusedinthe
3Dcontact.Refertothedescription oftheelement PRO_E_C3D_REF1_
RECSforinformation ontheoptionsthatcanbesetforeachsurfacereference.
Ifyouselectavertexfromthesecondpartasoneofthereferences, asphereis
displayedaroundthevertexandthevertexisconsidered asasphereinthe3D
contact.Ifthesecondreferenceisavertex,thePRO_E_C3D_VERT_RAD
elementbecomesavailableforyoutospecifythevalueforthevertexradius.
•PRO_E_C3D_MAT_NAME2—Specifies thenameofthematerialtypeselected
forthesecondcontactpart.Thiselementcanbesetonlyiftheelement PRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementbecomesavailableforyoutospecifythevalueforthevertexradius.
•PRO_E_C3D_MAT_NAME2—Specifies thenameofthematerialtypeselected
forthesecondcontactpart.Thiselementcanbesetonlyiftheelement PRO_
E_C3D_MAT_OPTION2 issettoPRO_C3D_MAT_SEL_MAT.
•PRO_E_C3D_POISSON2—Specifies thevalueforPoisson’sratioforthe
secondcontactpart.
•PRO_E_C3D_YOUNG2—Specifies thevalueforYoung’smodulusforthe
secondcontactpart.
•PRO_E_C3D_DAMPING2—Specifies thevalueforthedampingcoefficient
forthesecondcontactpart.
•PRO_E_C3D_VERT_RAD—Specifies thevalueforthevertexradiusifa
vertexisselectedasonethereferences.
Mechanism Design:Mechanism Features 1973•PRO_E_C3D_FRICTION—Identifies iffrictionwillbeusedinthecontact
calculation. ThiselementissettoPRO_B_FALSE bydefaultwhichmeansno
friction.
•PRO_E_C3D_STATIC_FRIC_COEF—Specifies thevalueforthestatic
frictioncoefficient.
•PRO_E_C3D_KINEM_FRIC_COEF—Specifies thevalueforthekinematic
frictioncoefficient.
Mechanism MotorFeaturesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfriction.
•PRO_E_C3D_STATIC_FRIC_COEF—Specifies thevalueforthestatic
frictioncoefficient.
•PRO_E_C3D_KINEM_FRIC_COEF—Specifies thevalueforthekinematic
frictioncoefficient.
Mechanism MotorFeatures
TheMechanism Motorelementtreeenablesyoutoaddservoandforcemotors.
Useservomotorstoimposeaparticularmotiononamechanism. Servomotors
causeaspecifictypeofmotiontooccurbetweentwobodiesinasingledegreeof
freedom.Addservomotorstoyourmodeltoprepareitforanalysis.
Useforcemotorstoimposeaparticularloadonamechanism. Aforcemotor
causesmotionbyapplyingaforceinasingledegreeoffreedomalonga
translational, rotational, orslotaxis.
FeatureElementTreefortheMechanism Motor
Feature
TheelementtreefortheMechanism Motorfeatureisdocumented intheheader
file,ProMotorFeat.h. Thefollowingfiguredemonstrates thestructureofthe
featureelementtree.
1974 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforMechanism Motor
ThefollowingtabledescribestheelementsintheelementtreefortheMechanism
Motorfeature:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatureelementtree.
1974 Creo®Parametric TOOLKIT User’sGuideFeatureElementTreeforMechanism Motor
ThefollowingtabledescribestheelementsintheelementtreefortheMechanism
Motorfeature:
ElementID DataType Description
PRO_E_FEATURE_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofthemotor
feature.
PRO_E_STD_FEATURE_NAME PRO_VALUE_TYPE_WSTRING Specifiesthenameofthe
mechanism motorfeature.
PRO_E_MOTOR_MOTION_TYPE PRO_VALUE_TYPE_INT Specifiesthemotiontypeof
motor.Themotiontypeis
specifiedusingtheenumerated
datatype
ProMotorMotionType. The
validvaluesare:
Mechanism Design:Mechanism Features 1975ElementID DataType Description
•PRO_MOTOR_
TRANSLATIONAL
•PRO_MOTOR_ROTATIONAL
•PRO_MOTOR_SLOT
PRO_E_MOTOR_DRIVEN_ENT_
REFPRO_VALUE_TYPE_
SELECTIONSpecifiesthereferencegeometry
fordrivenentity.Youcanselecta
axesofmotionorgeometrysuch
aspointorplane.
Note
Whenyouselectreferences
thatareapointoraplaneto
definetheservomotor,you
arecreatingageometric
servomotor.
PRO_E_MOTOR_ENT_REF PRO_VALUE_TYPE_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaxesofmotionorgeometrysuch
aspointorplane.
Note
Whenyouselectreferences
thatareapointoraplaneto
definetheservomotor,you
arecreatingageometric
servomotor.
PRO_E_MOTOR_ENT_REF PRO_VALUE_TYPE_
SELECTIONSpecifiesthereferencegeometry
forageometric servomotor.You
canselectapointorplane.
PRO_E_MOTOR_DIR_MODE PRO_VALUE_TYPE_INT Specifiesthetypeofmotion
directionformotors.Thevalid
valuesaredefinedinenumerated
datatype
ProMotorFMDirMode:
•PRO_MOTOR_FM_VEC_
DIR—The directionisdefined
byexplicitvectorina
coordinate system.
•PRO_MOTOR_FM_STD_
DIR—The directionisdefined
bystandarddirectionreference
suchas,straightedge,curve,
axis,andplanenormal.
•PRO_MOTOR_FM_P2P_
DIR—The directionisdefined
byapairofpointorvertex.
PRO_E_MOTOR_VEC_DIR_
DATAPRO_VALUE_TYPE_POINTER Thiselementisapplicable onlyfor
geometric forcemotors.
Specifiesacompound element
whichdefinestheoptionstoset
thedirectionusingexplicitvector.
PRO_E_MOTOR_VEC_DIR_
CSYSPRO_VALUE_TYPE_
SELECTIONSpecifiesthereferenceframeforxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometric forcemotors.
Specifiesacompound element
whichdefinestheoptionstoset
thedirectionusingexplicitvector.
PRO_E_MOTOR_VEC_DIR_
CSYSPRO_VALUE_TYPE_
SELECTIONSpecifiesthereferenceframefor
thevector.Ifthereferenceframeis
notspecified,thentheWorld
Coordinate Systemisused.
PRO_E_MOTOR_VEC_DIR_X
PRO_E_MOTOR_VEC_DIR_Y
PRO_E_MOTOR_VEC_DIR_ZPRO_VALUE_TYPE_DOUBLE SpecifiesthevalueforX,Y,andZ
vectors.
1976 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_DIRECTION_
COMPOUNDPRO_VALUE_TYPE_POINTER Thiselementisapplicable for
geometric servoandforcemotors.
Specifiesacompound element
whichdefinestheoptionstoset
thedirectionusingstandard
directionreference.
PRO_E_DIRECTION_
REFERENCEPRO_VALUE_TYPE_SELECT Specifiesamotionreference.
PRO_E_DIRECTION_FLIP PRO_VALUE_TYPE_INT Flipstoreversethedirectionofthe
forceorthetorque.
PRO_E_MOTOR_PT_TO_PT_
DIRPRO_VALUE_TYPE_SELECT Thiselementisapplicable onlyfor
geometric forcemotors.Specifies
theselectionofapairofpointstoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforceorthetorque.
PRO_E_MOTOR_PT_TO_PT_
DIRPRO_VALUE_TYPE_SELECT Thiselementisapplicable onlyfor
geometric forcemotors.Specifies
theselectionofapairofpointsto
setthedirectionforpoint-to-point
direction.
PRO_E_MOTOR_DIR_
RELATIVITYPRO_VALUE_TYPE_INT Thiselementisapplicable onlyfor
geometric forcemotors.Specifies
thedirectionofmotionrelativeto
groundordrivenbody.
PRO_E_MOTOR_FLIP_DIR PRO_VALUE_TYPE_INT Flipstoreversethedirectionofthe
motion.
Note
Itdefinesthedirectionwhen
connection axismotorsor
geometric motorsdonouse
theelement PRO_E_
DIRECTION_COMPOUND to
definethedirection.
PRO_E_MOTOR_PROFILE PRO_VALUE_TYPE_POINTER Specifiesacompound elementthat
definestheprofileoptionsfora
motor.
PRO_E_MOTOR_DRIVEN_
QUANTITYPRO_VALUE_TYPE_INT Specifiesthetypeofdriven
quantity.Thevalidvaluesare
definedintheenumerated data
type
ProMotorDrivenQuantity:
•PRO_MOTOR_POSITION—
Specifiesthemotionofservo
motorintermsoftheposition
oftheselectedentity.
•PRO_MOTOR_VELOCITY—
Specifiesthemotionofservoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedintheenumerated data
type
ProMotorDrivenQuantity:
•PRO_MOTOR_POSITION—
Specifiesthemotionofservo
motorintermsoftheposition
oftheselectedentity.
•PRO_MOTOR_VELOCITY—
Specifiesthemotionofservo
motorintermsofitsvelocity.
•PRO_MOTOR_
ACCELERATION—Specifies
themotionofservomotorin
termsofitsacceleration.
•PRO_MOTOR_FORCE—
Mechanism Design:Mechanism Features 1977ElementID DataType Description
Specifiesaforcemotor.
PRO_E_MOTOR_INIT_STATE_
DATAPRO_VALUE_TYPE_POINTER Specifiesacompound elementthat
definestheoptionsforinitial
positionofservomotorforPRO_
MOTOR_VELOCITY andPRO_
MOTOR_ACCELERATION typeof
motion.
PRO_E_MOTOR_USE_CURR_
POSPRO_VALUE_TYPE_INT Specifiesthatthecurrentposition
oftheservomotorisusedasthe
initialstartingposition.
PRO_E_MOTOR_INIT_POS PRO_VALUE_TYPE_DOUBLE Thiselementisapplicable only
when PRO_E_MOTOR_USE_
CURR_POS issettoNo.
Specifiesastartingpositionforthe
servomotor.
PRO_E_MOTOR_INIT_VEL PRO_VALUE_TYPE_DOUBLE Thiselementisapplicable onlyfor
PRO_MOTOR_ACCELERATIONxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhen PRO_E_MOTOR_USE_
CURR_POS issettoNo.
Specifiesastartingpositionforthe
servomotor.
PRO_E_MOTOR_INIT_VEL PRO_VALUE_TYPE_DOUBLE Thiselementisapplicable onlyfor
PRO_MOTOR_ACCELERATION
typeofmotion.
Specifiestheinitialvelocityofthe
drivenentity.
PRO_E_MOTOR_FUNC_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofmotionfor
themotorusingtheenumerated
datatypeProMotorFuncType.
Thevalidvaluesare:
•PRO_MOTOR_CONSTANT—
Createsaconstantprofile.
•PRO_MOTOR_RAMP—Creates
aprofilethatchangeslinearly
overtime.
•PRO_MOTOR_COSINE—
Assignsacosinewavevalueto
themotorprofile.
•PRO_MOTOR_SCCA—
Simulates acamprofileoutput.
Thisoptionisavailablefor
acceleration motorsonly.
•PRO_MOTOR_CYCLOIDAL—
Simulates acamprofileoutput.
•PRO_MOTOR_PARABOLIC—
Simulates atrajectoryfora
motor.
•PRO_MOTOR_
POLYNOMIAL—Defines third
degreepolynomial motor
profiles.
•PRO_MOTOR_TABLE—
Generates themotormotion
withvaluesfromafour-
columntable.Youcanusea
1978 Creo®Parametric TOOLKIT User’sGuideElementID DataType Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdegreepolynomial motor
profiles.
•PRO_MOTOR_TABLE—
Generates themotormotion
withvaluesfromafour-
columntable.Youcanusea
1978 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
tableofoutputmeasureresults.
•PRO_MOTOR_USER_
DEFINED—Specifies any
kindofcomplexprofile
definedbymultipleexpression
segments.
•PRO_MOTOR_CUSTOM_
LOAD—Applies acomplex,
externally-defined setofloads
toyourmodel.Thisoptionis
onlyavailablefortheforce
motordefinition.
PRO_E_MOTOR_FUNC_COEFF_
A
PRO_E_MOTOR_FUNC_COEFF_
B
PRO_E_MOTOR_FUNC_COEFF_
C
PRO_E_MOTOR_FUNC_COEFF_
D
PRO_E_MOTOR_FUNC_COEFF_
L
PRO_E_MOTOR_FUNC_COEFF_
H
PRO_E_MOTOR_FUNC_COEFF_
TPRO_VALUE_TYPE_DOUBLE Specifiesthevaluesforthe
functioncoefficients.
PRO_E_MOTOR_TABLE_DATA PRO_VALUE_TYPE_POINTER Specifiesacompound elementthat
definesalltheoptionsfortable
motortype.
PRO_E_MOTOR_TBL_
INTERPOL_TYPEPRO_VALUE_TYPE_INT Specifiestheinterpolation method
usingtheenumerated datatype
ProMotorTableInterpType.
Thevalidvaluesare:
•PRO_MOTOR_TBL_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmotortype.
PRO_E_MOTOR_TBL_
INTERPOL_TYPEPRO_VALUE_TYPE_INT Specifiestheinterpolation method
usingtheenumerated datatype
ProMotorTableInterpType.
Thevalidvaluesare:
•PRO_MOTOR_TBL_
LINEAR—Connects thetable
pointswithastraightline.
•PRO_MOTOR_TBL_
SPLINE—Fits acubicspline
toeachsetofpoints.
•PRO_MOTOR_TBL_
MONOTONIC—Produces a
monotonic trajectorywhenyou
usedefaultvelocityvaluesand
monotonic magnitude values.
PRO_E_MOTOR_TBL_ROWS PRO_VALUE_TYPE_POINTER Specifiesanarrayoftablerows.
PRO_E_MOTOR_TBL_ROW PRO_VALUE_TYPE_POINTER Specifiesacompound elementthat
Mechanism Design:Mechanism Features 1979ElementID DataType Description
definestheoptionsforeachtable
row.
PRO_E_MOTOR_TBL_VAR_VAL PRO_VALUE_TYPE_DOUBLE Specifiesthevaluefor
independent variablesinthefirst
columnofthetable.
PRO_E_MOTOR_TBL_FUNC_
VALPRO_VALUE_TYPE_DOUBLE Specifiesthevaluefordriven
quantityvariablesinthesecond
columnofthetable.
PRO_E_MOTOR_TBL_DERIV_
GIVENPRO_VALUE_TYPE_INT Thiselementisapplicable onlyifxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_E_MOTOR_TBL_FUNC_
VALPRO_VALUE_TYPE_DOUBLE Specifiesthevaluefordriven
quantityvariablesinthesecond
columnofthetable.
PRO_E_MOTOR_TBL_DERIV_
GIVENPRO_VALUE_TYPE_INT Thiselementisapplicable onlyif
interpolation typeissettoPRO_
MOTOR_TBL_MONOTONIC.
Aflagwhichchecksifderivative
valuehasbeenspecifiedbythe
user.
PRO_E_MOTOR_TBL_DERIV_
VALPRO_VALUE_TYPE_DOUBLE Thiselementisapplicable onlyif
interpolation typeissettoPRO_
MOTOR_TBL_MONOTONIC.
Specifiesthevalueforfunction
derivative inatablerow.
PRO_E_MOTOR_TBL_DEPEND_
ON_FILEPRO_VALUE_TYPE_INT Aflagwhichchecksifthetable
valuesaredependent onan
externalfile.
PRO_E_MOTOR_TBL_FILE_
NAMEPRO_VALUE_TYPE_WSTRING Specifiesthenameofthetable.
PRO_E_MOTOR_UD_PROFILE_
DATAPRO_VALUE_TYPE_POINTER Specifiesacompound elementthat
definesalltheoptionsforuser-
definedmotortype.
PRO_E_MOTOR_UD_EXPR_ARR PRO_VALUE_TYPE_POINTER Specifiesanarraythatdefinesthe
optionsforuser-defined
expressions.
PRO_E_MOTOR_UD_EXPR_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinesalltheoptionsforuser-
definedmotortype.
PRO_E_MOTOR_UD_EXPR_ARR PRO_VALUE_TYPE_POINTER Specifiesanarraythatdefinesthe
optionsforuser-defined
expressions.
PRO_E_MOTOR_UD_EXPR_
DATAPRO_VALUE_TYPE_POINTER Specifiesacompound thatdefines
theoptionsforeachuser-defined
expression.
PRO_E_MOTOR_UD_EXPR PRO_VALUE_TYPE_WSTRING Specifiesauser-defined
expression.
PRO_E_MOTOR_UD_DOM_TYPE PRO_VALUE_TYPE_INT Specifiesthetypeofdomainfor
theexpression usingthe
enumerated datatype
ProMotorUDExprDomain
Type.
PRO_E_MOTOR_UD_DOM_
LOWER_BOUNDPRO_VALUE_TYPE_DOUBLE Specifiesthevalueforlower
bound.
1980 Creo®Parametric TOOLKIT User’sGuideElementID DataType Description
PRO_E_MOTOR_UD_DOM_
UPPER_BOUNDPRO_VALUE_TYPE_DOUBLE Specifiesthevalueforupper
bound.
PRO_E_MOTOR_CUST_LOAD_
NAMEPRO_VALUE_TYPE_WSTRING Thiselementisapplicable onlyfor
forcemotorswhentheelement
PRO_E_MOTOR_FUNC_TYPE is
settoPRO_MOTOR_CUSTOM_
LOAD.
Specifiesthenameofthecustom
filethathaspre-defined custom
loads.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforcemotorswhentheelement
PRO_E_MOTOR_FUNC_TYPE is
settoPRO_MOTOR_CUSTOM_
LOAD.
Specifiesthenameofthecustom
filethathaspre-defined custom
loads.
Mechanism Design:Mechanism Features 198173
Event-driven Programming:
Notifications
UsingNotify..........................................................................................................1983
NotificationTypes..................................................................................................1983
Notifications allowyourCreoParametric TOOLKITapplication todetectcertain
typesofeventsinCreoParametric andprovidethatyourownfunctioniscalled
beforeoraftereachsuchevent.CreoParametric notifiesyourCreoParametric
TOOLKITapplication oftheseevents.
1982 Creo®Parametric TOOLKIT User’sGuideUsingNotify
Functions Introduced:
•ProNotificationSet()
•ProNotificationUnset()
Thefunction ProNotificationSet() setsupanotification byspecifying the
typeofeventandthepointertothecallbackfunction.Theeventisspecifiedasaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProNotificationSet()
•ProNotificationUnset()
Thefunction ProNotificationSet() setsupanotification byspecifying the
typeofeventandthepointertothecallbackfunction.Theeventisspecifiedasa
valueoftheenumerated typeProNotifyType. Theargumentforthecallback
functionhasthetypeProFunction; forconsistency ,eachcallbackfunction
returnsaProError status,evenincaseswherethestatusisignoredbyCreo
Parametric. Thecallbackfunctionshavedifferentarguments,soeachcallback
typehasitsowntypedefthatdefinesitsargumentsandtheirtypes.Whencalling
ProNotificationSet(), youmustcastthecallbackfunctionpointerto
ProFunction.
Note
•IfyoucallProNotificationSet() morethanoncewiththesameevent
type,theexistingcallbackisoverwritten withtheonesuppliedinthelatercall.
•Whennotifications aresetinCreoParametric TOOLKITapplications, every
timeaneventistriggered,notification messagesareaddedtothetrailfiles.
FromCreoParametric 2.0M210onward,anewenvironment variable
PROTK_LOG_DISABLE enablesyoutodisablethisbehavior.Whensettoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtimeaneventistriggered,notification messagesareaddedtothetrailfiles.
FromCreoParametric 2.0M210onward,anewenvironment variable
PROTK_LOG_DISABLE enablesyoutodisablethisbehavior.Whensetto
true,thenotifications messagesarenotaddedtothetrailfiles.
Tocancelanotification, callProNotificationUnset().
Notification Types
Thenotification eventsinCreoParametric fallintothefollowingclasses:
FileManagement Events
Notifications toallofthefilemanagement operations inCreoParametric, suchas
save,retrieve,copy,renameandsoon.
Event-driven Programming: Notifications 1983Note
FromCreoParametric 3.0onward,somecallbackfunctionsandeventsfor
notifications havebeendeprecated, andwillbeobsoleteinfuturereleases.
RefertotheheaderfilesProMdl.h andProNotify.h formore
information.
Thepossiblefilemanagement notifications fallintothefollowingsubclasses:
Pre-fileManagement Events
Yourcallbackfunctioniscalledbeforethefilemanagement event.Itiscalledonly
formodelsthataretheexplicitobjectsofthefilemanagement operation. ForxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPre-fileManagement Events
Yourcallbackfunctioniscalledbeforethefilemanagement event.Itiscalledonly
formodelsthataretheexplicitobjectsofthefilemanagement operation. For
example,itisnotcalledwhenapartissavedasaresultofsavingaparent
assembly.
IftheCreoParametric userinitiatedtheevent,thecallbackiscalledbeforethe
promptaskingtheuserforthenameoftheCreoParametric modelsonwhichto
act.
Thecallbackfunctioncanoptionally writeoutputargumentsthatdetermine the
CreoParametric modelsonwhichtheeventwilloperate.Inthiscase,Creo
Parametric willnotprompttheuser.
Thecallbackfunctioncan,byreturninganerrorstatus,cancelthefile
management eventaltogether.
Pre-fileManagement Events
Eventtype Callbacktypedef Includefile
PRO_FILE_OPEN_OK ProFileOpenOKAction ProNotify.h
PRO_MODEL_SAVE_PRE ProModelSavePreAction ProMdl.h
PRO_MODEL_COPY_PRE ProModelCopyPreAction ProMdl.h
PRO_MODEL_RENAME_PRE ProModelRenamePreAction ProMdl.h
PRO_MODEL_RETRIEVE_PRE ProModelRetrievePreAc
tionProMdl.hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_MODEL_COPY_PRE ProModelCopyPreAction ProMdl.h
PRO_MODEL_RENAME_PRE ProModelRenamePreAction ProMdl.h
PRO_MODEL_RETRIEVE_PRE ProModelRetrievePreAc
tionProMdl.h
PRO_MDL_ERASE_PRE ProMdlErasePreAction ProMdl.h
PRO_MDL_PURGE_PRE ProMdlPurgePreAction ProMdl.h
PRO_MDL_DELETE_PRE ProMdlDeletePreAction ProMdl.h
PRO_MDL_CREATE_PRE ProMdlCreatePreAction ProMdl.h
PRO_MDL_START ProMdlStartAction ProMdl.h
PRO_CHECKIN_UI_PRE ProCheckinUIPreAction ProNotify.h
PRO_MODEL_SAVE_PRE_ALL ProModelSavePreAllAc
tionProMdl.h
1984 Creo®Parametric TOOLKIT User’sGuideThecallbackfunction ProMdlRetrievePreAction getscalledonlywhen
youclickFile▶▶OpenbuttonintheCreoParametric userinterface.Retrievalofthe
modelsbydraggingorbydoubleclickinginbrowserwindowresultsinthenot
triggering thecallback.Onceset,thisnotification blockstheCreoParametric's
standardFile▶▶Openevent.Hence,youmustsubstitutetheblockedeventwith
yourowneventthroughthisfunction.
Pre-AllFileManagement EventsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstandardFile▶▶Openevent.Hence,youmustsubstitutetheblockedeventwith
yourowneventthroughthisfunction.
Pre-AllFileManagement Events
Yourcallbackfunctioniscalledbeforeallfilemanagement eventsonmodels,
evenifthosemodelswerenotexplicitlyspecifiedbytheuser.Forexample,ifyou
saveanassembly,thecallbackfunctionisalsocalledforanymodifiedpartsthat
willbesavedasaresultofthataction.
Eventtype Callbacktypedef Includefile
PRO_MODEL_SAVE_PRE_ALL ProModelSavePreAllAc
tionProMdl.h
Post-fileManagement Events
Yourcallbackfunctioniscalledafterthefilemanagement operation, andisgiven
inputargumentsthatshowwhichmodelswerethesubjectoftheoperation. Likea
pre-filemanagement callback,itiscalledonlyformodelsthataretheexplicit
objectsofthefilemanagement operation.
Post-fileManagement Events
Eventtype Callbacktypedef Includefile
PRO_MODEL_SAVE_POST ProModelSavePostAction ProMdl.h
PRO_MODEL_COPY_POST ProModelCopyPostAction ProMdl.h
PRO_MODEL_RENAME_POST ProModelRenamePostAc
tionProMdl.hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEventtype Callbacktypedef Includefile
PRO_MODEL_SAVE_POST ProModelSavePostAction ProMdl.h
PRO_MODEL_COPY_POST ProModelCopyPostAction ProMdl.h
PRO_MODEL_RENAME_POST ProModelRenamePostAc
tionProMdl.h
PRO_MODEL_ERASE_POST ProModelErasePostAction ProMdl.h
PRO_MODEL_RETRIEVE_POST ProModelRetrievePostAc
tionProMdl.h
PRO_MDL_PURGE_POST ProMdlPurgePostAction ProMdl.h
PRO_MDL_DELETE_POST ProMdlDeletePostAction ProMdl.h
PRO_MDL_CREATE_POST ProMdlCreatePostAction ProMdl.h
PRO_UDF_LIB_COMPLETE_
POSTProUdfLibraryComplete
PostActionProUdf.h
PostAllFileManagement Events
Yourthecallbackfunctioniscalledforallfilemanagement eventsonmodels,
evenifthosemodelswerenotexplicitlyspecifiedbytheuser.Forexample,ifyou
saveanassembly,thecallbackfunctionisalsocalledforanymodifiedpartsthat
aresavedasaresultofthataction.
Event-driven Programming: Notifications 1985PostAllFileManagement Events
Eventtype Callbacktypedef Includefile
PRO_MODEL_SAVE_POST_ALL ProModelSavePostAllAc
tionProMdl.hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaresavedasaresultofthataction.
Event-driven Programming: Notifications 1985PostAllFileManagement Events
Eventtype Callbacktypedef Includefile
PRO_MODEL_SAVE_POST_ALL ProModelSavePostAllAc
tionProMdl.h
PRO_MODEL_COPY_POST_ALL ProModelCopyPostAllAc
tionProMdl.h
PRO_MODEL_ERASE_POST_
ALLProModelErasePostAllAc
tionProMdl.h
PRO_MODEL_RETRIEVE_
POST_ALLProModelRetrievePostAl
lActionProMdl.h
PRO_MDL_DELETE_POST_ALL ProMdlDeletePostAllAc
tionProMdl.h
FileManagement FailureEvents
Yourcallbackfunctioniscalledafterafilemanagement operationthatfailed.The
functioniscalledwithargumentsthatshowthetypeoffilemanagement operation
thatfailed,themodelsitwasoperatingon,andthetypeoferrorencountered (in
theformofaProError value).
Note
FromCreoParametric 3.0onward,somecallbackfunctionsandeventsfor
notifications havebeendeprecated. RefertotheheaderfilesProMdl.h and
ProNotify.h formoreinformation.
FileManagement FailedEvents
Eventtype Callbacktypedef Includefile
PRO_MODEL_DBMS_FAILURE ProModelDbmsFailureAcxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProNotify.h formoreinformation.
FileManagement FailedEvents
Eventtype Callbacktypedef Includefile
PRO_MODEL_DBMS_FAILURE ProModelDbmsFailureAc
tionProMdl.h
PRO_MDL_CREATE_CANCEL ProMdlCreateCancelAc
tionProNotify.h
ModelandFeatureModification Events
Notifications thatsignalachangetothecontentofthemodel.Theyofteninclude
bothpre-andpost-notifications ofchangeeventsandincludeoperations on
features,solids,parameters anddimensions. SeethesectionNoteson
Regeneration Eventsonpage1987formoreinformation.
Usethenotification types PRO_FEATURE_REROUTE_PRE andPRO_
FEATURE_REROUTE_POST totrapthecommand FeatureRerouteinpartsor
assemblies. Usenotification types PRO_FEATURE_REPLACE_PRE andPRO_
1986 Creo®Parametric TOOLKIT User’sGuideFEATURE_REPLACE_POST totrapreplacement ofassemblycomponents
performed inassemblymodewiththecommand Component, AdvUtils,
Replace.
Thenotification types PRO_ASMCOMP_ACTIVATE_PRE andPRO_ASMCOMP_
ACTIVATE_POST arecalledbeforeandafteranassemblycomponent isactivatedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxperformed inassemblymodewiththecommand Component, AdvUtils,
Replace.
Thenotification types PRO_ASMCOMP_ACTIVATE_PRE andPRO_ASMCOMP_
ACTIVATE_POST arecalledbeforeandafteranassemblycomponent isactivated
withinthecontextofanassemblyinCreoParametric usingtherightmousebutton
Activate.Thenotification typesprovidethepathtothecurrentlyactive
component, allowingapplications tounderstand thecontextofanactioninthe
assembly.
NotesonRegeneration Events
Notifications whichtriggerbeforeorafterfeatureregeneration shouldbeused
carefully,becauseyourcallbackfunctionisbeingcalledwhiletheregeneration of
asolidisinprogress.Thissectiondescribessomeoftheimportantinformation
youshouldkeepinmindwhenusingnotification formodelevents.
Atthestartofmodelregeneration, CreoParametric discardsalldatastructures
thatdescribegeometry,althoughthegeometryitemsthemselves areretained(to
preservetheintegeridentifiers). Thismeansthatalthoughyoucanstilltraverse
thefeatures(using ProSolidFeatVisit()) andthegeometryitemsinaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpreservetheintegeridentifiers). Thismeansthatalthoughyoucanstilltraverse
thefeatures(using ProSolidFeatVisit()) andthegeometryitemsina
feature(using ProFeatureGeomitemVisit()), geometryitemsbelonging to
featuresnotyetregenerated willhavenocorresponding OHandles. Therefore,
functionssuchasProSurfaceInit() andProEdgeInit() willnotwork.
Ifyouanalyzethegeometryofthefeaturesalreadyregenerated, youwillseeitas
unmodified bythefeaturesstilltoberegenerated.
Itisdangerous toattemptmodifications tothemodelorfilemanagement
operations duringaregeneration notification function.
ModelModification Events
Eventtype Callbacktypedef Includefile
PRO_DIM_MODIFY_VALUE_
PREProDimModifyValuePreAc
tionProDimension.h
PRO_FEATURE_CREATE_PRE ProFeatureCreatePreAc
tionProFeature.h
PRO_FEATURE_CREATE_POST ProFeatureCreatePostAc
tionProFeature.h
PRO_FEATURE_COPY_POST ProFeatureCopyPostAc
tionProFeature.h
PRO_FEATURE_DELETE_PRE ProFeatureDeletePreAc
tionProFeature.h
PRO_FEATURE_DELETE_POST ProFeatureDeletePostAcxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtionProFeature.h
PRO_FEATURE_COPY_POST ProFeatureCopyPostAc
tionProFeature.h
PRO_FEATURE_DELETE_PRE ProFeatureDeletePreAc
tionProFeature.h
PRO_FEATURE_DELETE_POST ProFeatureDeletePostAc
tionProFeature.h
PRO_FEATURE_SUPPRESS_
PREProFeatureSuppressPreAc
tionProFeature.h
PRO_FEATURE_SUPPRESS_
POSTProFeatureSuppressPos
tActionProFeature.h
PRO_FEATURE_REDEFINE_ ProFeatureRedefinePreAc ProFeature.h
Event-driven Programming: Notifications 1987Eventtype Callbacktypedef Includefile
PRE tion
PRO_FEATURE_REDEFINE_
POSTProFeatureRedefinePos
tActionProFeature.h
PRO_FEATURE_REGEN_PRE ProFeatureRegenPreAc
tionProFeature.h
PRO_FEATURE_REGEN_POST ProFeatureRegenPostAc
tionProFeature.h
PRO_FEATURE_REGEN_
FAILUREProFeatureRegenFailure
ActionProFeature.h
PRO_FEATURE_NEEDS_
REGEN_GETProFeatureNeedsRegenGet ProFeature.h
PRO_FEATURE_REROUTE_PRE ProFeatureReroutePreAc
tionProFeature.h
PRO_FEATURE_REROUTE_
POSTProFeatureReroutePostAc
tionProFeature.h
PRO_FEATURE_REPLACE_PRE ProFeatureReplacePreAcxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_FEATURE_REROUTE_PRE ProFeatureReroutePreAc
tionProFeature.h
PRO_FEATURE_REROUTE_
POSTProFeatureReroutePostAc
tionProFeature.h
PRO_FEATURE_REPLACE_PRE ProFeatureReplacePreAc
tionProFeature.h
PRO_FEATURE_REPLACE_
POSTProFeatureReplacePostAc
tionProFeature.h
PRO_GROUP_UNGROUP_PRE ProGroupUngroupPreAc
tionProGroup.h
PRO_GROUP_UNGROUP_POST ProGroupUngroupPostAc
tionProGroup.h
PRO_PARAM_CREATE_PRE ProParameterCreatePreAc
tionProParameter.h
PRO_PARAM_CREATE_POST ProParameterCreatePos
tActionProParameter.h
PRO_PARAM_MODIFY_PRE ProParameterModifyPreAc
tionProParameter.h
PRO_PARAM_MODIFY_POST ProParameterModifyPos
tActionProParameter.h
PRO_PARAM_DELETE_PRE ProParameterDeletePreAc
tionProParameter.h
PRO_PARAM_DELETE_POST ProParameterDeletePos
tActionProParameter.h
PRO_SOLID_REGEN_PRE ProSolidRegeneratePreAc
tionProSolid.h
PRO_SOLID_REGEN_POST ProSolidRegeneratePos
tActionProSolid.h
PRO_SOLID_UNIT_CONVERT_
PREProSolidUnitConvertPre
ActionProNotify.h
PRO_SOLID_UNIT_CONVERT_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtionProSolid.h
PRO_SOLID_REGEN_POST ProSolidRegeneratePos
tActionProSolid.h
PRO_SOLID_UNIT_CONVERT_
PREProSolidUnitConvertPre
ActionProNotify.h
PRO_SOLID_UNIT_CONVERT_
POSTProSolidUnitConvertPos
tActionProNotify.h
PRO_SOLID_PRINC_SYS_
UNITS_RENAMED_POSTProSolidPrincSysUnitsRe
namedPostActionProNotify.h
PRO_DWGTABLE_ROW_
DELETE_PREProDwgtableRowDeletePre
ActionProNotify.h
PRO_DWGTABLE_ROW_DELETE
_POSTProDwgtableRowDeletePos
tActionProNotify.h
1988 Creo®Parametric TOOLKIT User’sGuideEventtype Callbacktypedef Includefile
PRO_DWGTABLE_DELETE_PRE ProDwgtableDeletePreAc
tionProNotify.h
PRO_DWGTABLE_DELETE_
POSTProDwgtableDeletePostAc
tionProNotify.h
ContextChangeEvents
Notifications calledaftereventsthatchangedetailsinthecurrentCreoParametric
context.Theyallowyourapplication toleveragethedetailsofthesechangesas
needed.
SessionContextEvents
Eventtype Callbacktypedef Includefile
PRO_DIRECTORY_CHANGE_
POSTProDirectoryChangePos
tActionProNotify.h
PRO_WINDOW_CHANGE_POST ProWindowChangePostAcxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxneeded.
SessionContextEvents
Eventtype Callbacktypedef Includefile
PRO_DIRECTORY_CHANGE_
POSTProDirectoryChangePos
tActionProNotify.h
PRO_WINDOW_CHANGE_POST ProWindowChangePostAc
tionProNotify.h
PRO_POPUPMENU_CREATE_
POSTProPopupmenuCreatePos
tActionProPopupmenu.h
PRO_POPUPMENU_DESTROY_
PREProPopupmenuDestroyPre
ActionProPopupmenu.h
PRO_WINDOW_VACATE_PRE ProWindowVacatePreAc
tionProWindows.h
PRO_WINDOW_OCCUPY_POST ProWindowOccupyPostAc
tionProWindows.h
PRO_WINDOW_OCCUPY_
MODEL_POSTProWindowOccupyModelPos
tActionProWindows.h
PRO_GLOBAL_INTERF_CALC_
POSTProGlobalInterfCalcPos
tActionProNotify.h
PRO_ASMCOMP_ACTIVATE_
PREProAsmcompActivatePreAc
tionProNotify.h
PRO_ASMCOMP_ACTIVATE_
POSTProAsmcompActivatePos
tActionProNotify.h
GraphicsEvents
Notifications beforeandaftertherepainting ofthecurrentCreoParametric
window.Thisenablesyoutooverlayyourowngraphicsoverthewindowand
ensurethattheygetrefreshedwhentheCreoParametric windowisrepainted, for
anyreason.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwindow.Thisenablesyoutooverlayyourowngraphicsoverthewindowand
ensurethattheygetrefreshedwhentheCreoParametric windowisrepainted, for
anyreason.
Event-driven Programming: Notifications 1989Note
Thesenotifications willbecalledmanytimes;forthisreason,yourcallback
routineshouldbeasoptimized aspossibletoavoidperformance penalties.For
othertechniques thatmaybeusedtodrawgraphics,whichwillrepaintwith
theCreoParametric window,refertothesectiononDisplayLists.Refertothe
UserInterface:BasicGraphicsonpage468chapterfordetails.
GraphicsEvents
Eventtype Callbacktypedef Includefile
PRO_MDL_DISPLAY_PRE ProMdlDisplayPreAction ProMdl.h
PRO_MDL_DISPLAY_POST ProMdlDisplayPostAction ProMdl.h
NCOutputEvents
Notification oftheoutputfromCreoNCofanoperationCLdatafile,oranCreo
NCsequenceCLdatafile.Thisenablesyoutoperformyourownpost-processing
onthesefiles.Thecallbackfunctionsarecalledwithargumentsthatprovidethe
nameofthefilecreated.
NCOutputEvents
Eventtype Callbacktypedef Includefilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxonthesefiles.Thecallbackfunctionsarecalledwithargumentsthatprovidethe
nameofthefilecreated.
NCOutputEvents
Eventtype Callbacktypedef Includefile
PRO_NCSEQ_CL_POST ProNcseqClPostAction ProNotify.h
PRO_OPER_CL_POST ProMfgoperClPostAction ProNotify.h
CLCommandEvents
Notifications thatgiveyoutheabilitytocreateauxiliaryNCsequences with
programmatically createdCLcommands.
CLCommandEvents
Eventtype Callbacktypedef Includefile
PRO_NCL_COMMAND_EXPAND ProClCommandExpandAc
tionProClCmd.h
PRO_NCL_COMMAND_GET_LOC ProClCommandGetLocAc
tionProClCmd.h
1990 Creo®Parametric TOOLKIT User’sGuideMoldLayoutEvents
Notifications thatareinvokedbeforeenteringacorresponding MoldLayout
dialog.
MoldLayoutUIEvents
Eventtype Callbacktypedef Includefile
PRO_RMDT_CREATE_IMM_PRE ProRmdtCreateImmPreAc
tionProRmdt.h
PRO_RMDT_BOUND_BOX_PRE ProRmdtBoundBoxPreAc
tionProRmdt.h
PRO_RMDT_CAV_LAYOUT_PRE ProRmdtCavLayoutPreAc
tionProRmdt.h
PRO_RMDT_CREATE_WP_PRE ProRmdtCreateWpPreAc
tionProRmdt.hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtionProRmdt.h
PRO_RMDT_BOUND_BOX_PRE ProRmdtBoundBoxPreAc
tionProRmdt.h
PRO_RMDT_CAV_LAYOUT_PRE ProRmdtCavLayoutPreAc
tionProRmdt.h
PRO_RMDT_CREATE_WP_PRE ProRmdtCreateWpPreAc
tionProRmdt.h
PRO_RMDT_MATERIAL_PRE ProRmdtMaterialPreAc
tionProRmdt.h
PRO_RMDT_MBASE_SELECT_
PREProRmdtMBaseSelectPreAc
tionProRmdt.h
WeldEvents
Notifications thatgiveyoutheabilitytocustomize theresultsgeneratedbyCreo
Parametric whengatheringinfoforweldoperations.
WeldEvents
Eventtype Callbacktypedef Includefile
PRO_DRAWING_WELD_
SYMPATH_GETProDrawingWeldSympathGe
tActionProNotify.h
PRO_DRAWING_WELD_
GROUPIDS_GETProDrawingWeldGroupids
GetActionProNotify.h
PRO_DRAWING_WELD_
SYMTEXT_GETProDrawingWeldSymtextGe
tActionProNotify.h
Event-driven Programming: Notifications 199174
Event-driven Programming:
ExternalObjects
SummaryofExternalObjects.................................................................................1993xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEvent-driven Programming: Notifications 199174
Event-driven Programming:
ExternalObjects
SummaryofExternalObjects.................................................................................1993
ExternalObjectsandObjectClasses......................................................................1993
ExternalObjectData.............................................................................................1996
ExternalObjectReferences...................................................................................2003
CallbacksforExternalObjects................................................................................2004
WarningMechanismforExternalObjects................................................................2006
Example1:CreatinganExternalObject..................................................................2008
ThischapterdescribestheCreoParametric TOOLKITfunctionsthatenableyouto
createandmanipulate externalobjects.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThischapterdescribestheCreoParametric TOOLKITfunctionsthatenableyouto
createandmanipulate externalobjects.
1992 Creo®Parametric TOOLKIT User’sGuideSummaryofExternalObjects
Externalobjectsareobjectscreatedbyanapplication thatisexternaltoCreo
Parametric. AlthoughtheseobjectscanbedisplayedandselectedwithinaCreo
Parametric session,theycannotbeindependently createdbyCreoParametric.
UsingCreoParametric TOOLKITfunctions, youcandefineandmanipulate
externalobjects,whicharethenstoredinamodeldatabase.
Note
Externalobjectsarelimitedtotextandwireframe entities.Inaddition,external
objectscanbecreatedforpartsandassemblies only.Thatis,externalobjects
canbestoredinapartorassemblydatabaseonly.
InaCreoParametric TOOLKITapplication, anexternalobjectisdefinedbya
ProExtobj object.ThisDHandleidentifiesanexternalobjectintheCreo
Parametric database,whichcontainsthefollowinginformation fortheobject:
•Objectclass—AclassofexternalobjectsisagroupthatcontainsobjectswithxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric database,whichcontainsthefollowinginformation fortheobject:
•Objectclass—Aclassofexternalobjectsisagroupthatcontainsobjectswith
similarcharacteristics. Allexternalobjectsmustbelongtoaclass.Objectclass
iscontainedintheProExtobjClass object.
•Objectdata—The objectdatacontainsinformation aboutthedisplayand
selectionofanexternalobject.Objectdataiscontainedinthe
ProWExtobjdata object.
•Objectparameters—External objectscanownparameters. Youcanusethe
ProParameter APItoget,set,andmodifyexternalobjectparameters.
•Objectreferences—External objectscanreferenceanyCreoParametric object.
Thisfunctionality isusefulwhenchangestoCreoParametric objectsneedto
instigatechangesintheexternalobjects.Thechangesarecommunicated back
toyourCreoParametric TOOLKITapplication viathecallbackfunctions.
•Callbackfunctions—Creo Parametric TOOLKITenablesyoutospecify
callbackfunctionsforaclassofexternalobjects.Thesefunctionsarecalled
whenevertheexternalobjectownerorreferenceisdeleted,suppressed, orxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Callbackfunctions—Creo Parametric TOOLKITenablesyoutospecify
callbackfunctionsforaclassofexternalobjects.Thesefunctionsarecalled
whenevertheexternalobjectownerorreferenceisdeleted,suppressed, or
modified.Inthismanner,theappearance andbehaviorofyourexternalobjects
candependontheobjectownerorreference.
ExternalObjectsandObjectClasses
ThissectiondescribestheCreoParametric TOOLKITfunctionsthatrelatetothe
creationandmanipulation ofexternalobjectsandobjectclasses.Notethatthis
description doesnotaddressthedisplayorselectionoftheexternalobject.For
moreinformation onthistopic,seeExternal ObjectDataonpage1996.
Event-driven Programming: ExternalObjects 1993CreatingExternalObjectClasses
Functions Introduced:
•ProExtobjClassCr eate()
•ProExtobjClassDelete()
Everyexternalobjectmustbelongtoaclass.Theconceptofa“class”enablesyou
togrouptogetherexternalobjectsthatexhibitsimilarcharacteristics. Inaddition,
classespermitmultipleapplications tocreateexternalobjectswithoutconflict.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtogrouptogetherexternalobjectsthatexhibitsimilarcharacteristics. Inaddition,
classespermitmultipleapplications tocreateexternalobjectswithoutconflict.
TheProExtobjClass objectcontainsthenameandtypeofanexternalobject
class.PTCrecommends thatyousupplyaclassnameuniquetoyourapplication.
Thetypeoftheclassisanintegerthatshouldvaryamongthedifferentclasses.
Toregisteranexternalobjectclass,passacompleted ProExtobjClass object
tothefunction ProExtobjClassCreate(). Tounregister aclass,callthe
function ProExtobjClassDelete().
CreatingExternalObjects
Functions Introduced:
•ProExtobjCr eate()
•ProExtobjDelete()
•ProExtobjClassGet()
Aftertheobjectclassisregistered, youcancreatetheexternalobjectbycalling
thefunction ProExtobjCreate(). Thisfunctionrequiresasinputtheobject
classandowneroftheexternalobject.(Currently,theowneroftheexternalobject
canbeapartoranassemblyonly.)Asoutput,thisfunctiongivesapointertothe
handleofthenewlycreatedexternalobject.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxclassandowneroftheexternalobject.(Currently,theowneroftheexternalobject
canbeapartoranassemblyonly.)Asoutput,thisfunctiongivesapointertothe
handleofthenewlycreatedexternalobject.
Whentheexternalobjectiscreated,itisassignedanintegeridentifierthatis
persistentfromsessiontosession.Theexternalobjectissavedaspartofthe
modeldatabaseandwillbeavailablewhenthemodelisretrievednext.
Todeleteanexternalobject,callthefunction ProExtobjDelete(). This
functionrequiresasinputboththeobjecttobedeletedandtheclasstowhichit
belongs.Todetermine theclassofanexternalobject,callthefunction
ProExtobjClassGet().
ExternalObjectOwners
Functions Introduced:
•ProExtobjOwner objGet()
•ProExtobjOwner objSet()
1994 Creo®Parametric TOOLKIT User’sGuideTheownerofanexternalobjectissetduringthecalltoProExtobjCreate().
Forexample,the“owner”wouldbethepartorassemblywheretheexternalobject
resides.
Todetermine theownerofanexternalobject,callthefunction
ProExtobjOwnerobjGet(). Tochangetheowner,callthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxForexample,the“owner”wouldbethepartorassemblywheretheexternalobject
resides.
Todetermine theownerofanexternalobject,callthefunction
ProExtobjOwnerobjGet(). Tochangetheowner,callthefunction
ProExtobjOwnerobjSet().
RecyclingExternalObjectIdentifiers
Functions Introduced:
•ProExtobjReusableSet()
•ProExtobjReusableGet()
•ProExtobjReusableClear()
Bydefault,theidentifierofanexternalobjectisnot“recycled.” Whenyoudelete
anexternalobject,itsidentifierisnotfreedforreusebyexternalobjectsthatare
subsequently created.
Youcanoverridethisdefaultbehaviorusingthefunction
ProExtobjReusableSet(). Thisfunctionenablesexternalobjectidentifiers
toberecycled.Todetermine whetherexternalobjectidentifiers aresettobe
recyclable, callthefunction ProExtobjReusableGet(). Toresettothe
defaultbehavior(norecycling), callthefunction
ProExtobjReusableClear().
ExternalObjectParameters
Aswithfeaturesandmodels,externalobjectscanalsohaveuser-defined
parameters. Althoughyoucanspecifyparameters foranexternalobject,thereisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProExtobjReusableClear().
ExternalObjectParameters
Aswithfeaturesandmodels,externalobjectscanalsohaveuser-defined
parameters. Althoughyoucanspecifyparameters foranexternalobject,thereis
nomethodtoretrievetheseparameters interactively inCreoParametric.
Therefore, externalobjectparameters areawaytostoreinformation intheCreo
Parametric modelthatisnotaccessible toend-users.
YoucanconvertaProExtobj objecttoaProModelitem objectbycasting.
Afterthisconversion, youcanusethefunction ProParameterCreate() to
createparameters fortheProModelitem object.SeetheCore:Parameters on
page208chapterformoreinformation.
ExternalTypesandIdentifiersforExternalObjects
Functions Introduced:
•ProExtobjExttypeSet()
•ProExtobjExttypeGet()
•ProExtobjExtidSet()
Event-driven Programming: ExternalObjects 1995•ProExtobjExtidGet()
ProExtobj isaDHandlethatcontainsthetype,identifier,andownerofan
externalobject.Thisinformation identifiestheexternalobjectintheCreo
Parametric database.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProExtobj isaDHandlethatcontainsthetype,identifier,andownerofan
externalobject.Thisinformation identifiestheexternalobjectintheCreo
Parametric database.
Someapplications mightrequireadditional typeandidentifierinformation tobe
assignedtoexternalobjects.Thatis,thetypeandidentifiermayneedtobe
independent ofthoseassignedwithinCreoParametric.
Thefunction ProExtobjExttypeSet() setsanexternaltypeforanexternal
object.ThisfunctioncallsProParameterCreate() internallyandcreatesa
parameter withthename EXTOBJ_EXTTYPE. Thefunction
ProExtobjExttypeGet() obtainstheexternaltypeforthespecifiedexternal
object.
Thefunction ProExtobjExtidSet() setsanexternalintegeridentifierforthe
specifiedexternalobject.ThisfunctioncallsProParameterCreate()
internallyandcreatesaparameter withnametheEXTOBJ_EXTID. Togetthe
externalidentifierforagivenexternalobject,callthefunction
ProExtobjExtidGet().
VisitingExternalObjects
FunctionIntroduced:
•ProExtobjV isit()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexternalidentifierforagivenexternalobject,callthefunction
ProExtobjExtidGet().
VisitingExternalObjects
FunctionIntroduced:
•ProExtobjV isit()
Usingthetraversalfunctionsforexternalobjects,youcanvisiteachexternal
objectinturn,andperformsomeactionorfiltrationonit.Thefunction
ProExtobjVisit() specifiesactionandfilterfunctionsoftype
ProExtobjVisitAction() andProExtobjFilterAction(),
respectively .
ExternalObjectData
Simplycreatinganexternalobjectdoesnotallowtheobjecttobedisplayedor
selectedinCreoParametric. Forthis,youmustsupplyexternalobjectdatathatis
used,stored,andretrievedbyCreoParametric. Thedataisremovedfromthe
modeldatabasewhentheexternalobjectisdeleted.
Externalobjectdataisdescribedbytheopaqueworkspace handle
ProWExtobjdata. Thefunctionsrequiredtoinitializeandmodifythisobject
arespecifictothetypeofdatabeingcreated.Thatis,creatingdisplaydata
requiresonesetoffunctions, whereascreatingselectiondatarequiresanother.
OnceyouhavecreatedaProWExtobjdata object,themanipulation ofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarespecifictothetypeofdatabeingcreated.Thatis,creatingdisplaydata
requiresonesetoffunctions, whereascreatingselectiondatarequiresanother.
OnceyouhavecreatedaProWExtobjdata object,themanipulation ofthe
externalobjectdataisindependent ofitscontents:thefunctionsrequiredtoaddor
removedataarethesameforbothdisplayandselectiondata.
1996 Creo®Parametric TOOLKIT User’sGuideThefollowingsectionsdescribetheCreoParametric TOOLKITfunctionsthat
relatetoexternalobjectdata.Thesectionsareasfollows:
•DisplayDataforExternalObjectsonpage1997
•SelectionDataforExternalObjectsonpage2000
•Manipulating ExternalObjectDataonpage2002
DisplayDataforExternalObjects
Displaydatagivesinformation toCreoParametric abouthowtheexternalobject
istoappearinthemodelwindow.Thisdatamustincludethecolor,scale,line
type,andtransformation oftheexternalobject.Inaddition,displaydatacan
includesettingsthatoverridetheuser’sabilitytozoomandspintheexternal
object.
Notethatsettingdisplaydatadoesnotresultintheexternalobjectbeingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxincludesettingsthatoverridetheuser’sabilitytozoomandspintheexternal
object.
Notethatsettingdisplaydatadoesnotresultintheexternalobjectbeing
displayed. Toseetheobject,youmustrepaintthemodelwindowusingthe
function ProWindowRepaint().
AllocatingDisplayData
FunctionIntroduced:
•ProDispdatAlloc()
Fordisplaydata,theworkspace handle ProWExtobjdata isallocatedusingthe
function ProDispdatAlloc(). BecausetheotherCreoParametric TOOLKIT
displaydatafunctionsrequire ProWExtobjdata asinput,youmustcall
ProDispdatAlloc() beforecallingtheotherfunctionsinthissection.
TheinputforProDispdatAlloc() istheaddressofaProWExtobjdata
objectthatyoudeclareinyourapplication. YoumustsetthisProWExtobjdata
objecttoNULLbeforepassingitsaddresstoProDispdatAlloc().
CreatingtheExternalObjectEntity
Functions Introduced:
•ProDispdatEntsSet()
•ProDispdatEntsGet()
•ProDispdatEntsWi thColorSet()
Externalobjectsarecurrentlylimitedtotextandwireframe entities.Youcan
specifytheentitiestobedisplayedbycreatinganarrayofProCurvedataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProDispdatEntsGet()
•ProDispdatEntsWi thColorSet()
Externalobjectsarecurrentlylimitedtotextandwireframe entities.Youcan
specifytheentitiestobedisplayedbycreatinganarrayofProCurvedata
objectsthatcontainthatnecessaryinformation. ProCurvedata isaunionof
specificentitystructures, suchasline,arrow,arc,circle,spline,andtext.Notethat
whenyouspecifytheentitiesintheProCurvedata array,thecoordinate system
usedisthedefaultmodelcoordinate system.
Event-driven Programming: ExternalObjects 1997AfteryouhavecreatedthearrayofProCurvedata objects,youcanaddentities
tothedisplaydatabycallingthefunction ProDispdatEntsSet(). Notethat
ProDispdatEntsSet() supportsonlyPRO_ENT_LINE andPRO_ENT_ARC
entities.However,youcandrawpolygonsasmultiplelines,andcirclesasarcsof
extent2pi.
Toobtaintheentitiesthatmakeupanexternalobject,callthefunction
ProDispdatEntsGet().
Thefunction ProDispdatEntsWithColorSet() setsthedisplaydatafora
listofentitiesandthecolorforeachentity.Theentitiesthataresupported are:
•PRO_ENT_LINExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDispdatEntsGet().
Thefunction ProDispdatEntsWithColorSet() setsthedisplaydatafora
listofentitiesandthecolorforeachentity.Theentitiesthataresupported are:
•PRO_ENT_LINE
•PRO_ENT_ARC
Theentitiesarespecifiedinthelocalcoordinates oftheexternalobject.Usethe
function ProDispdatTrfSet() totransformthelocalcoordinates tomodel
coordinates.
Example1:CreatinganExternalObjectonpage2008showshowtospecifyan
externalobjectthatiscomposed oflinesegments.
Transformation oftheExternalObject
Functions Introduced:
•ProDispdatT rfSet()
•ProDispdatT rfGet()
•ProExtobjScr eentrfGet()
Toaperformacoordinate transformation onanexternalobject,youmustsetthe
transformation matrixwithintheassociated displaydata.Todothis,callthe
function ProDispdatTrfSet() andpassthetransformation matrixasaninput
argument.Toobtainthetransformation matrixcontainedinaparticularsetof
displaydata,callthefunction ProDispdatTrfGet().
Example1:CreatinganExternalObjectonpage2008implements axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxargument.Toobtainthetransformation matrixcontainedinaparticularsetof
displaydata,callthefunction ProDispdatTrfGet().
Example1:CreatinganExternalObjectonpage2008implements a
transformation fromdefaultcoordinates toacoordinate systemthatisdependent
ontheorientation ofaselectedsurface.
Note
Evenifyoudonotwanttotransformyourexternalobjectfromthedefault
coordinate system,youmustspecifyatransformation matrix.Inthiscase,pass
theidentitymatrixtoProDispdatTrfSet(). Ifyouomitthisstep,your
externalobjectwillnotbedisplayed.
1998 Creo®Parametric TOOLKIT User’sGuideToobtainthecompletetransformation ofanobjectfromexternalobject
coordinates (defaultcoordinates) toscreencoordinates, callthefunction
ProExtobjScreentrfGet().
Note
Intheassemblymode, ProExtobjScreentrfGet() isapplicable for
externalobjectsownedonlybythetopassemblymodel.Usethefunction
ProDispdatTrfGet() toretrievethetransformation ofexternalobjectsin
sub-models intheassemblymode.Inthepartmode,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexternalobjectsownedonlybythetopassemblymodel.Usethefunction
ProDispdatTrfGet() toretrievethetransformation ofexternalobjectsin
sub-models intheassemblymode.Inthepartmode,
ProExtobjScreentrfGet() isapplicable forallobjects.
ExternalObjectDisplayProperties
Functions Introduced:
•ProDispdatPr opsSet()
•ProDispdatPr opsGet()
Bydefault,whenusersspinorzoominonamodel,externalobjectsaresubjected
tothesamespinandzoomscaleasthemodel.Inaddition,bydefaultexternal
objectsarealwaysdisplayed, eveniftheownerorreferenceobjectsare
suppressed. Settingexternalobjectdisplayproperties withindisplaydataenables
youtochangethesedefaultbehaviors.
TheProExtobjDispprops objectisanenumerated typethatcontainsthe
possiblesettingsfordisplayproperties. Tosetanyoftheseproperties within
displaydata,createaProExtobjDispprops arraythatcontainsyoursettings
andpassthisarraytothefunction ProDispdatPropsSet(). Todetermine the
displaysettingsforspecifieddisplaydata,callthefunction
ProDispdatPropsGet().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandpassthisarraytothefunction ProDispdatPropsSet(). Todetermine the
displaysettingsforspecifieddisplaydata,callthefunction
ProDispdatPropsGet().
ThesettingscontainedinProExtobjDispprops areasfollows:
•PRO_EXTOBJ_ZOOM_INVARIANT—Sets theexternalobjecttobeinvariant
withthezoomscaleormagnification ofthemodel.Theobjectappearsthe
samesizeatalltimes.
•PRO_EXTOBJ_SPIN_INVARIANT—Set theexternalobjecttobeinvariant
withthespinororientation ofthemodel.Theobjecthasthesameorientation
atalltimes.
•PRO_EXTOBJ_BLANKED—Blank thedisplayoftheexternalobject.This
settingisusefulifyouwantthesuppresstheexternalobjectwhenthe
referenceorownerobjectsaresuppressed.
Event-driven Programming: ExternalObjects 1999ExternalObjectColor
Functions Introduced:
•ProDispdatColorGet()
•ProDispdatColorSet()
Theenumerated typeProColortype specifiesthecolorsavailableforexternal
objects.Tosettheobjectcolorwithindisplaydata,callthefunction
ProDispdatColorSet(). Todetermine thecolorinthespecifieddisplayxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheenumerated typeProColortype specifiesthecolorsavailableforexternal
objects.Tosettheobjectcolorwithindisplaydata,callthefunction
ProDispdatColorSet(). Todetermine thecolorinthespecifieddisplay
data,useProDispdatColorGet().
LineStylesforExternalObjects
Functions Introduced:
•ProDispdatLinestyleSet()
•ProDispdatLinestyleGet()
Theenumerated typeProLinestyle specifiesthelinestylesavailablefor
externalobjects.Tosettheobjectlinestylewithinthedisplaydata,callthe
function ProDispdatLinestyleSet(). Todetermine thelinestyleinthe
specifieddisplaydata,useProDispdatLinestyleGet().
ExternalObjectScale
Functions Introduced:
•ProDispdatScaleSet()
•ProDispdatScaleGet()
Tovarythesizeofyourexternalobjectwithoutalteringtheentitiesthemselves,
youmustspecifyanobjectscalefactoraspartofthedisplaydata.Tosetthescale
factor,callthefunction ProDispdatScaleSet(). Todetermine thescale
factorinthespecifieddisplaydata,useProDispdatScaleGet().
Example1:CreatinganExternalObjectonpage2008showshowtosetthescalexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfactor,callthefunction ProDispdatScaleSet(). Todetermine thescale
factorinthespecifieddisplaydata,useProDispdatScaleGet().
Example1:CreatinganExternalObjectonpage2008showshowtosetthescale
ofanobjecttobedependent onthesizeoftheownerobject.
SelectionDataforExternalObjects
Functions Introduced:
•ProSeldatAlloc()
•ProSeldatSelboxesSet()
•ProSeldatSelboxesGet()
2000 Creo®Parametric TOOLKIT User’sGuideYoucanselectexternalobjectsusingtheCreoParametric TOOLKITselection
function ProSelect(), withtheselectionoption ext_obj. Forthisselection
tobepossible,however,youmustdesignateasetof“hotspots,”orselection
boxesfortheobject.Theseselectionboxesindicatelocationsinwhichmouse
selections willcausetheexternalobjecttobeselected.Selectionboxesare
specifiedaspartoftheexternalobjectselectiondata.
Thefunction ProSeldatAlloc() allocatesselectiondatainpreparation for
thespecification oftheselectionboxes.
AselectionboxisdefinedbythepairofpointscontainedinaProSelboxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProSeldatAlloc() allocatesselectiondatainpreparation for
thespecification oftheselectionboxes.
AselectionboxisdefinedbythepairofpointscontainedinaProSelbox
object.Thecoordinates ofthepointsarespecifiedintheexternalobject's
coordinate system(thedefaultcoordinates). Thelinebetweenthepointsformsthe
diagonaloftheselectionbox;theedgesoftheboxlieparalleltothecoordinate
axesoftheexternalobject.Tosettheselectionboxeswithintheselectiondata,
callthefunction ProSeldatSelboxesSet() andpassasinputapointertoa
listofProSelbox objects.Thisenablesyourexternalobjecttohavemorethan
oneassociated selectionbox.
Note
PTCrecommends thatthesizeandarrangement oftheselectionboxesbe
dependent onthesizeandshapeoftheexternalobject.Iftheexternalobjectis
compactanduniformly distributed inallcoordinate directions, oneselection
boxwillprobablysuffice.
However,iftheexternalobjectisdistributed nonuniformly ,orisinterfering
withotherobjects,youmustdesignatemorespecificlocationsatwhich
selectionshouldoccur.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxboxwillprobablysuffice.
However,iftheexternalobjectisdistributed nonuniformly ,orisinterfering
withotherobjects,youmustdesignatemorespecificlocationsatwhich
selectionshouldoccur.
Toobtainthelistofselectionboxesinagivenselectiondata,callthefunction
ProSeldatSelboxesGet().
TheProSelect() functionreturnsanarrayofProSelection objects.To
obtainaProExtobj objectfromaProSelection object,callthefunction
ProSelectionModelitemGet() andcasttheoutput ProModelitem
directlyintoProExtobj. (ProExtobj andProModelitem areDHandles
withidenticaldeclarations.)
SelectingtheNodefromtheExternalApplication
Tree
Thetreecreatedbyanexternalapplication (SPEOStree)issimilartotheCreo
Parametric modeltree.Eachnodeofthistreerepresents anexternalobjectthathas
beencreatedbytheapplication. Theexternalobjectscouldbedifferenttypesof
entities,suchas,lightsources,lightsensors,andsoon.
Event-driven Programming: ExternalObjects 2001Functions Introduced:
•ProSelectExternalhighlightRegister()
•ProSelectExternalselectionRecord()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentities,suchas,lightsources,lightsensors,andsoon.
Event-driven Programming: ExternalObjects 2001Functions Introduced:
•ProSelectExternalhighlightRegister()
•ProSelectExternalselectionRecord()
Thefunction ProSelectExternalhighlightRegister() registersthe
callbackfunctionswhenyouselectordeselectanodeintheusertreeoranobject
inthegraphicswindow.Thenotification function
ProSelectionStartNotify() iscalledwhenthefunction ProSelect()
isactivated.Itnotifiestheapplication aboutentering ProSelect(). Thecall
backfunction ProSelectionExtHighlightAct() iscalledwhenyou
selectordeselectanexternalobject.TheTOOLKITapplication willhighlightthe
externalobjectorremovethehighlightaccording totheselection.Onclickinga
treenode,theapplication createsaProSelection objectandusesthefunction
ProSelectExternalselectionRecord() topassittoProSelect().
Theinputargumentsofthisfunctionare:
•selection—Specifies theselectionobjectcreatedbyanexternalapplication.
•action—Specifes thetypeofselection.Thevalidvaluesare:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheinputargumentsofthisfunctionare:
•selection—Specifies theselectionobjectcreatedbyanexternalapplication.
•action—Specifes thetypeofselection.Thevalidvaluesare:
○PRO_SELECT_OVERRIDE—For unmodified selection
○PRO_SELECT_T OGGLE—For CTRLmodifiedselection.
Thefunction ProSelectionEndNotify() notifiestheapplication onexiting
thefunction ProSelect().
Manipulating ExternalObjectData
Functions Introduced:
•ProExtobjdataAdd()
•ProExtobjdataSet()
•ProExtobjdataGet()
•ProExtobjdataRemove()
•ProExtobjdataFr ee()
Theprevioustwosectionsdescribehowtocreateandmodifyexternalobjectdata.
Inthecaseofbothdisplayandselectiondata,thedatacreationprocessresultsin
theopaqueworkspace handle ProWExtobjdata. Thefunctionsinthissection
enableyoutomanipulate howtheexternalobjectdatarelatestotheobjectitself.
Toaddnewdatatoanexternalobject,passthedatahandle ProWExtobjdata
tothefunction ProExtobjdataAdd(). Tosetthecontentsofexistingobject
data,callthefunction ProExtobjdataSet().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxToaddnewdatatoanexternalobject,passthedatahandle ProWExtobjdata
tothefunction ProExtobjdataAdd(). Tosetthecontentsofexistingobject
data,callthefunction ProExtobjdataSet().
2002 Creo®Parametric TOOLKIT User’sGuideThefunction ProExtobjdataGet() obtainsthehandleforthedisplayor
selectiondataassociated withanexternalobject.Tospecifywhichtypeofdata
youwanttoretrieve,passtothisfunctiononeofthevaluesintheenumerated type
ProExtobjdataType. Thedeclaration isasfollows:
typedef enum
{
PRO_EXTOBJDAT_DISPLAY,
PRO_EXTOBJDAT_SELBOX
}ProExtobjdataType;
Toremovedatafromanexternalobject,usethefunction
ProExtobjdataRemove(). Tofreethememoryoccupiedbyexternalobject
data,callthefunction ProExtobjdataFree().
ExternalObjectReferences
Youcanuseexternalobjectreferences tomakeexternalobjectsdependent on
modelgeometry.Forexample,consideranexternalobjectthatismodeledasthe
outward-pointing normalofasurface.Definingthesurfaceasareferenceenables
theexternalobjecttobehaveappropriately whenthesurfaceismodified,deleted,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoutward-pointing normalofasurface.Definingthesurfaceasareferenceenables
theexternalobjecttobehaveappropriately whenthesurfaceismodified,deleted,
orsuppressed.
Ingeneral,anexternalobjectcanreferenceanyofthegeometrythatbelongstoits
owner.Inaddition,iftheownerbelongstoanassembly,theexternalobjectcan
alsoreferencethegeometryofotherassemblycomponents, providedthatyou
supplyavalidcomponent path.
Note
Settingupthereferences foranexternalobjectdoesnotfullydefinethe
dependency betweentheobjectandthereference. Youmustalsospecifythe
callbackfunctiontobecalledwhensomeactionistakenonthereference.
CreatingExternalObjectReferences
Functions Introduced:
•ProExtobjRefAlloc()
•ProExtobjRefFr ee()
•ProExtobjRefselectionSet()
•ProExtobjRefselectionGet()
•ProExtobjReftypeSet()
•ProExtobjReftypeGet()
Event-driven Programming: ExternalObjects 2003•ProExtobjRefAdd()
•ProExtobjRefRemove()
TheProWExtobjRef objectisanopaqueworkspace handlethatdefinesanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProExtobjReftypeSet()
•ProExtobjReftypeGet()
Event-driven Programming: ExternalObjects 2003•ProExtobjRefAdd()
•ProExtobjRefRemove()
TheProWExtobjRef objectisanopaqueworkspace handlethatdefinesan
externalobjectreference. Toallocatethememoryforanewexternalobject
reference, callthefunction ProExtobjRefAlloc(). Tofreethememory
occupiedbyanobjectreference, callthefunction ProExtobjRefFree().
IfyouhavetheProSelection objectthatcorresponds toyourintended
referencegeometry,youcansetthisProSelection tobethereferenceby
callingthefunction ProExtobjRefselectionSet(). Toobtainthe
ProSelection objectforaspecifiedreference, use
ProExtobjRefselectionGet().
Youmightneedtouse“reference types”todifferentiateamongthereferences of
anexternalobject.Tosetareferencetype,callthefunction
ProExtobjReftypeSet(). Toobtainthereferencetypeofthespecified
reference, callthefunction ProExtobjReftypeGet().
OnceyouhavesettheProSelection andthereferencetypeforanexternalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProExtobjReftypeSet(). Toobtainthereferencetypeofthespecified
reference, callthefunction ProExtobjReftypeGet().
OnceyouhavesettheProSelection andthereferencetypeforanexternal
objectreference, youmustaddthereferencetotheexternalobjectusingthe
function ProExtobjRefAdd(). Toremoveareferencefromanexternalobject,
useProExtobjRefRemove().
VisitingExternalObjectReferences
FunctionIntroduced:
•ProExtobjRefV isit()
Usingthetraversalfunctionsforexternalobjectreferences, youcanvisiteach
externalobjectreferenceinturn,andperformsomeactionorfiltrationonit.The
function ProExtobjRefVisit() specifiesactionandfilterfunctionsoftype
ProExtobjRefVisitAction() andProExtobjRefFilterAction(),
respectively .
CallbacksforExternalObjects
Functions Introduced:
•ProExtobjCBAct()
•ProExtobjCBEnable()
•ProExtobjCallbacksSet()
2004 Creo®Parametric TOOLKIT User’sGuideExternalobjectsareassociated withtheirownersandthereferences thatyou
specify.Currently,thecallbacksmechanism forexternalobjectsenablesyoutoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2004 Creo®Parametric TOOLKIT User’sGuideExternalobjectsareassociated withtheirownersandthereferences thatyou
specify.Currently,thecallbacksmechanism forexternalobjectsenablesyouto
receivenotification whenthereferenceisdeleted,modified,orsuppressed. Your
callbackfunctioncanrespondinamannerappropriate fortheactiontakenonthe
reference.
TheProExtobjCallbacks objectisastructurethatspecifiesthecallback
functionsforeachactionontheexternalobject'sownerorreference. Each
callbackfunctionisspecifiedbyafunctionpointeroftypeProExtobjCBAct.
Whenyoucreateanexternalobjectclass,youshouldalsofillina
ProExtobjCallbacks objectforthatclass.Tosetthecallbacksfortheclass,
calltheProExtobjCallbacksSet() function.
•Currently,theonlysupported callbacksforexternalobjectsarefordeletion,
modification, andsuppression.
•Youcannotuseacallbackforanexternalobjectthatreferences aCreo
Parametric feature(andnotsomegeometryofit).
TheProExtobjCallbacks datastructureisdefinedasfollows:
typedef struct
{
int enabled_cbs;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Youcannotuseacallbackforanexternalobjectthatreferences aCreo
Parametric feature(andnotsomegeometryofit).
TheProExtobjCallbacks datastructureisdefinedasfollows:
typedef struct
{
int enabled_cbs;
ProExtobjCBAct display_CB; /*not yet
implemented */
ProExtobjCBAct select_CB; /*not yet
implemented */
ProExtobjCBAct owner_modify_CB; /*not yet
implemented */
ProExtobjCBAct owner_suppress_CB; /*not yet
implemented */
ProExtobjCBAct owner_delete_CB; /*not yet
implemented */
ProExtobjCBAct ref_modify_CB;
ProExtobjCBAct ref_suppress_CB;
ProExtobjCBAct ref_delete_CB;
}ProExtobjCallbacks;
Thefirstfield, enabled_cbs, isaflagthatenablesanddisablesthecallback
functions. Seteachoftheotherfieldsinthestructuretothenameofthecallback
functionappropriate foreachaction.Toenableordisablethecallbackfunctions
foraparticularactionandobjectclass,callthefunction
ProExtobjCBEnable().
Asshowninthepreviousstructure,theexternalobjectscallbacksareimplementedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforaparticularactionandobjectclass,callthefunction
ProExtobjCBEnable().
Asshowninthepreviousstructure,theexternalobjectscallbacksareimplemented
onlyforcaseswherethereferenceismodified,suppressed, ordeleted.Forthis
reason,youmustexercisecautionwhenenablingcallbacksusing
ProExtobjCBEnable(). Oneoftheinputsofthefunctionisanaction
bitmaskthatspecifieswhichcallbackactionsaretobeenabled.Theaction
bitmaskiscomposed ofmembersoftheenumerated typeProExtobjAction.
Thevaluesoftheenumerated typeareasfollows:
Event-driven Programming: ExternalObjects 2005typedef enum
{
PRO_EO_ALT_DISPLAY =(1<<6),
/*alternate display --
not implemented */
PRO_EO_ALT_SELECT =(1<<7),
/*alternate selection --
not implemented */
PRO_EO_ACT_OWN_MODIF =(1<<9),
/*not implemented */
PRO_EO_ACT_OWN_SUPPR =(1<<10),
/*not implemented */
PRO_EO_ACT_OWN_DELETE =(1<<11),
/*not implemented */
PRO_EO_ACT_REF_MODIF =(1<<13),
PRO_EO_ACT_REF_SUPPR =(1<<14),
PRO_EO_ACT_REF_DELETE =(1<<15)
}ProExtobjAction;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/*not implemented */
PRO_EO_ACT_OWN_DELETE =(1<<11),
/*not implemented */
PRO_EO_ACT_REF_MODIF =(1<<13),
PRO_EO_ACT_REF_SUPPR =(1<<14),
PRO_EO_ACT_REF_DELETE =(1<<15)
}ProExtobjAction;
Theactionbitmaskmustnotcontainanycallbackactionsthatarenotsupported.
Giventhecomments intheProExtobjCallbacks structure,theonlyallowed
callbackactionsarePRO_EO_ACT_REF_MODIF, PRO_EO_ACT_REF_SUPPR,
andPRO_EO_ACT_REF_DELETE.
ThefollowingtabledescribestheactionsgivenintheProExtobjCallbacks
datastructure.
CallbackType WhenitisTriggered
display_CB Theexternalobjectisdisplayed. Currently,thisisnot
implemented.
select_CB Theexternalobjectisselected.Currently,thisisnot
implemented.
owner_modify_CB Theowneroftheexternalobjectismodified.
Currently,thisisnotimplemented.
owner_suppress_CB Theowneroftheexternalobjectissuppressed.
Currently,thisisnotimplemented.
owner_delete_CB Theowneroftheexternalobjectisdeleted.
Currently,thisisnotimplemented.
ref_modify_CB Thereferenceoftheexternalobjectismodified.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCurrently,thisisnotimplemented.
owner_delete_CB Theowneroftheexternalobjectisdeleted.
Currently,thisisnotimplemented.
ref_modify_CB Thereferenceoftheexternalobjectismodified.
ref_suppress_CB Thereferenceoftheexternalobjectissuppressed.
ref_delete_CB Thereferenceoftheexternalobjectisdeleted.
WarningMechanism forExternalObjects
Functions Introduced:
•ProExtobjClassW arningEnable()
•ProExtobjClassW arningDisable()
2006 Creo®Parametric TOOLKIT User’sGuide•ProExtobjW arningEnable()
•ProExtobjW arningDisable()
Whenusersperformsomeactiononthereferences ofanexternalobject,you
mightwanttodisplayawarningmessagetoaskuserstoconfirmtheaction.Creo
Parametric TOOLKITincludesfunctionsthatimplement suchwarnings,eitherfor
allexternalobjectsinaclassorforindividual externalobjects.Forexample,ifa
userattemptstodeleteafeaturewhosegeometryisreferenced byaclassof
externalobjects,theCreoParametric TOOLKITwarningmechanism, ifenabled,
wouldopenawarningwindowthatstatesthepotentialproblem.Theuserswouldxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexternalobjects,theCreoParametric TOOLKITwarningmechanism, ifenabled,
wouldopenawarningwindowthatstatesthepotentialproblem.Theuserswould
pickYestocontinuewiththedeletion,orNotoabortthedeletion.
Toenablethewarningsforaclassofexternalobjects,callthefunction
ProExtobjClassWarningEnable(). Notethatallexternalobjectsthat
belongtotheclasswillinherittheenabledwarningiftheyarecreatedsubsequent
tothecalltoProExtobjClassWarningEnable().
TheinputargumentstoProExtobjClassWarningEnable() aretheclass
object ProExtobjClass andanactionbitmaskcomposed ofmembersofthe
enumerated typeProExtobjAction (described inthesectionCallbacks for
ExternalObjectsonpage2004).Theactionbitmaskspecifiesforwhichactions
thewarningistobedisplayed. Currently,theonlysupported actionsarePRO_
EO_ACT_REF_SUPPR (suppression ofthereference) andPRO_EO_ACT_REF_
DELETE(deletionofthereference).
Tohavethewarningsdisplayedforbothreferencesuppression anddeletion,the
calltoProExtobjClassWarningEnable() wouldappearasfollows:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDELETE(deletionofthereference).
Tohavethewarningsdisplayedforbothreferencesuppression anddeletion,the
calltoProExtobjClassWarningEnable() wouldappearasfollows:
ProExtobjClassWarningEnable (&User_arrow_class,
PRO_EO_ACT_REF_SUPPR|PRO_EO_ACT_REF_DELETE);
Inthiscall,User_arrow_class isdeclaredasaProExtobjClass (an
externalobjectclass).
Todisablethewarningsforaclassofexternalobjects,call
ProExtobjClassWarningDisable(). Notethatallexternalobjectsthat
belongtotheclasswillinheritthedisabledwarningiftheyarecreatedsubsequent
tothecalltothefunction ProExtobjClassWarningDisable().
Toenablewarningsforasingleexternalobject(nottheentireclass),callthe
function ProExtobjWarningEnable(). Thisfunctionissimilarto
ProExtobjClassWarningEnable() exceptthefirstargumentfor
ProExtobjWarningEnable() isapointertoaProExtobj object.To
disablethewarningsforasingleexternalobject,callthefunction
ProExtobjWarningDisable().
Event-driven Programming: ExternalObjects 2007Example1:CreatinganExternalObjectxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisablethewarningsforasingleexternalobject,callthefunction
ProExtobjWarningDisable().
Event-driven Programming: ExternalObjects 2007Example1:CreatinganExternalObject
ThesamplecodeinthefileUgExtobjCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_extobj
showshowtocreateanexternalobjectatalocationspecifiedbytheuser.The
externalobjectisagreenarrowthatisalignedwiththenormaltoaselected
surface.
Note
Forthesakeofsimplicity,theexampledoesnotimplement selectiondata.
2008 Creo®Parametric TOOLKIT User’sGuide75
Event-driven Programming:
Toolkit-Based Analysis
Overview..............................................................................................................2010
InteractiveCreationofToolkit-Based Analysis..........................................................2010
InteractiveCreationofToolkit-Based AnalysisFeature.............................................2011
StorageofToolkit-Based AnalysisFeatureinCreoParametric..................................2011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxInteractiveCreationofToolkit-Based AnalysisFeature.............................................2011
StorageofToolkit-Based AnalysisFeatureinCreoParametric..................................2011
RegisteringaToolkit-Based AnalysiswithCreoParametric.......................................2012
AnalysisCallbacks................................................................................................2012
CreoParametricTOOLKITAnalysisInformation......................................................2015
ResultsData.........................................................................................................2015
AnalysisAttributes.................................................................................................2017
VisitingSavedToolkit-Based Analyses....................................................................2018
VisitingToolkit-Based AnalysesFeatures................................................................2018xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxVisitingToolkit-Based AnalysesFeatures................................................................2018
UsingtheModelwithoutCreoParametricTOOLKIT.................................................2018
Thischapterdescribesthefunctionsthatenableyoutocreateanalysisandanalysis
featureobjectsinaCreoParametric solid.
2009Overview
CreoBehavioral ModelingallowsthecreationoftwotypesofobjectsinaCreo
Parametric solid:
•Analysis
•AnalysisFeature
InCreoParametric youcancreateananalysisusingthecommands underthe
Analysistab.Analysesshowtheresultsofcertainstandardtypesofmeasurement
orcalculation, forexample,curvatureofanedgeorsurface,orthecenterof
gravityofasolid.Userscannameananalysisandstoreitinthesolid,alongwith
thereferences tothegeometryitemsitanalyses.Theanalysisisthenreevaluated
automatically uponeachmodelregeneration, andcanbequeriedatanytimeusing
theAnalysiscommand. Suchananalysisisstoredseparately fromthefeaturesand
geometryitemsinthesolid.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxautomatically uponeachmodelregeneration, andcanbequeriedatanytimeusing
theAnalysiscommand. Suchananalysisisstoredseparately fromthefeaturesand
geometryitemsinthesolid.
Ananalysisfeatureisafeaturethatusesananalysistodetermine thevaluesofits
featureparameters andtheshapeofitsgeometryitems.Ananalysisfeatureisa
varietyofdatumfeatureandiscreatedusingtheCreoParametric Datum
command. Anexampleoftheuseofananalysisfeatureisthecreationofa
coordinate systemdatumatthecenterofgravityofasolid,alignedwithitsaxesof
inertia.Anotherexampleisapairofdatumpointsattheclosestpointsoftwoparts
inanassembly.
CreoParametric TOOLKITanalysisfunctionsallowdefinitionofanalysesand
analysisfeatureswhosecomputations areperformed bycallbackfunctions
providedbytheCreoParametric TOOLKITapplication. ThismeansthatCreo
Parametric TOOLKITcanbeusedtomakeanalysiscomputations, anddetermine
featuregeometry,inwaysnotnativetoCreoParametric. Werefertotheanalyses
andanalysisfeaturesdefinedbyCreoParametric TOOLKITastoolkit-based; thisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturegeometry,inwaysnotnativetoCreoParametric. Werefertotheanalyses
andanalysisfeaturesdefinedbyCreoParametric TOOLKITastoolkit-based; this
stressesthefactthatthecomputations couldbeperformed byaseparateCreo
Parametric TOOLKITapplication.
CreoParametric TOOLKITusersshouldpracticeusingstandardCreoParametric
analysesandanalysisfeaturesbeforestudyingtoolkit-based analyses.
Thefunctionsanddatastructuresspecifictotoolkit-based analysisfeaturesare
declaredintheheaderfileProAnalysis.h.
InteractiveCreationofToolkit-Based
Analysis
IfaCreoParametric TOOLKITapplication registersaToolkit-Based Analysis
type,theAnalysismenuontheCreoParametric toolbarcontainsanextrabutton
labeledToolkit-Based .ClickthisbuttontoseetheToolkit-Based dialogbox.
2010 Creo®Parametric TOOLKIT User’sGuideTheselectoratthetopofthedialogboxshowsthetypesofexternalanalysis
registered bytheCreoParametric TOOLKITapplication.
Whenyouhavechosenthetype,clicktheAnalysisUIbutton;thiscallstheCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxregistered bytheCreoParametric TOOLKITapplication.
Whenyouhavechosenthetype,clicktheAnalysisUIbutton;thiscallstheCreo
Parametric TOOLKITcallback,whichpromptstheuserfortheinformation
neededbytheanalysis.Whenyouhaveansweredalltheprompts,clickCompute.
Computeperformstheanalysisanddisplaystheresultingtext,ifany,inthetext
areaofthedialogbox.Itmayalsodisplaysomegraphics.
WhenyouhaveclickedCompute,youmayalsoclickInfo,whichdisplaysthe
outputtextinaninformation window.
TheSavedAnalysesandClosebuttonsbehaveasforstandardanalyses.
InteractiveCreationofToolkit-Based
AnalysisFeature
InCreoParametric, undertheAnalysistab,intheManagegroup,selectthe
Analysiscommand. ThisdisplaystheCreoParametric ANALYSISdialogbox,
whichleadstheuserthroughthedefinitionoftheelementsoftheanalysisfeature.
IfaCreoParametric TOOLKITapplication isrunningandhasregistered atleast
onetypeoftoolkit-based analysis,therewillbeanadditional buttonlabeled
Toolkit-Based intheTypesection.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIfaCreoParametric TOOLKITapplication isrunningandhasregistered atleast
onetypeoftoolkit-based analysis,therewillbeanadditional buttonlabeled
Toolkit-Based intheTypesection.
Setthenameoftheanalysisfirst,setthetypetoToolkit-Based Analysis,and
continuetothenextstep,whichiscalled“Definition”. TheToolkit-Based dialog
boxappears.Thisbehavesexactlyasforanexternalanalysis,untilyouclickthe
Closebutton.ItthenreturnstotheANALYSISdialogbox,toallowyoutocontinue
specifying thefeatureelements.
Theremaining elementsareResultParamsandResultDatums.Thesebehave
exactlyasforstandardanalysisfeatures,exceptthattheparameters anddatums
aredefinedbytheCreoParametric TOOLKITapplication. Oneorothermaybe
absentifthetoolkit-based analysisdefinesnoparameters ornodatums.
StorageofToolkit-Based Analysis
FeatureinCreoParametric
Atoolkit-based analysisfeatureisstoredinCreoParametric inexactlythesame
wayasanyotherfeature.ItappearsinthemodeltreeasafeatureoftypeAnalysis,
andalltheregularFeaturecommands canbeusedonit.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAtoolkit-based analysisfeatureisstoredinCreoParametric inexactlythesame
wayasanyotherfeature.ItappearsinthemodeltreeasafeatureoftypeAnalysis,
andalltheregularFeaturecommands canbeusedonit.
Thereferences toexistinggeometrythatthefeatureneedstocalculateitsown
parameters andgeometryaregiventoCreoParametric bytheCreoParametric
TOOLKITapplication intheformofProSelection structures. Creo
Parametric storesthesereferences, usingthestandardmethodforstoringfeature
Event-driven Programming: Toolkit-Based Analysis 2011references. ThismeansthattheCreoParametric TOOLKITapplication doesnot
needtostorethisinformation, andthatthefeatureautomatically hasthecorrect
behaviorforthefollowingCreoParametric functions:
•FeatureRegeneration—Creo Parametric knowsfromthefeaturereferences
whatotherfeaturesitdependson,andthereforewhetherthefeaturesneedsto
beincludedinaparticularregeneration.
•Rerouting Features
•Patterning Features
TheCreoParametric TOOLKITapplication mayalsogiveCreoParametric thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeincludedinaparticularregeneration.
•Rerouting Features
•Patterning Features
TheCreoParametric TOOLKITapplication mayalsogiveCreoParametric the
valuesofanyvariablesthatcontrolthegeometry,andCreoParametric storesthem
asfeaturedimensions inthenewfeature.TheCreoParametric TOOLKIT
application canthenreadthecurrentdimension valueswhenrecomputing the
featuregeometry.Thismeansthefeaturecorrectlyrespondstodimension changes
asaresultof,forexample,beingdrivenbyarelation.
TheCreoParametric TOOLKITapplication muststoreasexternaldataany
information abouttoolkit-based analysisfeaturesthatisnotstoredaseither
geometryreferences ordimensions.
Registering aToolkit-Based Analysiswith
CreoParametric
FunctionIntroduced:
•ProAnalysisT ypeRegister()
Thefunction ProAnalysisTypeRegister() registersatoolkit-based
analysiswithCreoParametric byspecifying itstypenameandthesetofcallback
functionstobeusedwhencreatingitandperforming thecomputation. Callthis
functioninuser_initialize().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanalysiswithCreoParametric byspecifying itstypenameandthesetofcallback
functionstobeusedwhencreatingitandperforming thecomputation. Callthis
functioninuser_initialize().
Ifcalledcorrectly,boththeAnalysiscommand andtheANALYSISdialogboxused
increatingananalysisfeaturewillincludethebuttonToolkit-Based astheanalysis
type.RefertothesectionsInteractive CreationofToolkit-Based Analysisonpage
2010andInteractive CreationofToolkit-Based AnalysisFeatureonpage2011for
moreinformation oncreatingtheseobjects.
AnalysisCallbacks
Whenregistering aToolkit-Based Analysistype,callbacksmustbeprovidedfor
eachofthefollowing13types:
•ui
•dims
2012 Creo®Parametric TOOLKIT User’sGuide•infoalloc
•infofree
•compcheck
•compute
•display
•output
•savecheck
•infosave
•inforetrieve
•infocopy
•result
EachcallbackispassedanargumentoftheProAnalysis type,whichisan
opaquehandleandidentifiestheanalysisinformation storedbyCreoParametric.
Thefollowingtableexplainswhenthecallbacksarecalled,andhoweachone
shouldbeused.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxopaquehandleandidentifiestheanalysisinformation storedbyCreoParametric.
Thefollowingtableexplainswhenthecallbacksarecalled,andhoweachone
shouldbeused.
WhenCreoParametric createsatoolkit-based analysisoranalysisfeature:
Callback Description
infoalloc AllocatememoryfortheCreoParametric TOOLKIT
application information aboutthetoolkit-based
analysis.
ui CreoParametric TOOLKIT promptstheuserfor
inputsthatdefinetheanalysisfor example,selecta
surfacedatumpointonwhichtopositionacsys.
compcheck TellCreoParametric whetherthecomputation canbe
performed. IftheCreoParametric TOOLKIT
application cannotperformthecomputation (for
example,becauseinputdataisunavailable), it
returnsanerrorandtheregeneration fails.
compute Performtheanalysiscomputation andstorethe
resultsinmemory.
display Displaygraphicsshowingthecomputation result.
output PassasetoftextlinestoCreoParametric fordisplay
intheANALYSISdialogboxtoshowtheresultof
thecomputation.
infocopy Copytheapplication information fromanexistingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoutput PassasetoftextlinestoCreoParametric fordisplay
intheANALYSISdialogboxtoshowtheresultof
thecomputation.
infocopy Copytheapplication information fromanexisting
analysistoanewone.Callinfocopy during
creationbecauseofthewayinwhichCreo
Parametric handlesfeaturecreation.
Event-driven Programming: Toolkit-Based Analysis 2013Callback Description
dims CreoParametric TOOLKIT givesCreoParametric a
listofdoublevaluesneededtocalculatethe
geometry.CreoParametric storestheseasmodel
dimensions.
result CreoParametric TOOLKIT givesCreoParametric a
description ofthefeatureparameters andgeometry
itemsthatresultfromthecomputation ofthe
analysis.CreoParametric mayalsocallthiscallback
whenitneedstoknowonlythenumberandnamesof
parameters anddatums;anexampleiswhentheuser
selectsFeatureInfo.Formoredetails,refertothe
sectionResultsDataonpage2015.
WhentheCreoParametric usersavestheanalysistothesolid:
Callback Description
savecheck TellCreoParametric whetherthedescription ofthe
analysiscanbesaved.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsectionResultsDataonpage2015.
WhentheCreoParametric usersavestheanalysistothesolid:
Callback Description
savecheck TellCreoParametric whetherthedescription ofthe
analysiscanbesaved.
infosave GiveCreoParametric alistofgeometryitems
referenced bytheanalysis.CreoParametric stores
theseusingitsowninternalmechanism forstoring
references. Thereferences appearinthemodelas
featurereferences, andareusedtodetermine the
relationship ofthefeaturetootherfeatures,and
thereforewhenthefeatureneedstoberegenerated.
OR
Storeanyotherdataasexternaldata.
WhentheCreoParametric userretrievesasolidcontaining analyses:
Callback Description
inforetrieve CreoParametric providesanarrayof
ProSelection objectsrepresenting thegeometry
references itstoredwiththeanalysis.(Thismeans
thattheCreoParametric TOOLKITapplication does
notneedtosavethesereferences between
sessionsCreo Parametric usesitsownmechanism.)
WhentheCreoParametric userleavestheANALYSISdialogboxwithoutsavingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthattheCreoParametric TOOLKITapplication does
notneedtosavethesereferences between
sessionsCreo Parametric usesitsownmechanism.)
WhentheCreoParametric userleavestheANALYSISdialogboxwithoutsaving
thenewanalysis,orerasesasolidcontaining atoolkit-based analysis:
Callback Description
infofree TheCreoParametric TOOLKITapplication freesthe
memoryusedbyitsinternaldescription ofthe
analysis.
Manyofthecallbackswillbecalledduringothercommands inCreoParametric
wheneverthetoolkit-based analysisoranalysisfeatureisaffected.
2014 Creo®Parametric TOOLKIT User’sGuideCreoParametric TOOLKITAnalysis
Information
Functions Introduced:
•ProAnalysisInfoGet()
•ProAnalysisInfoSet()
•ProAnalysisT ypeGet()
TheCreoParametric TOOLKITapplication mustkeepitsowndescription ofthe
analysisinmemoryinordertoperformthecomputation. Thismemoryis
allocated,filled,andfreedinthecallbacksprovided,asdescribedinthesection
AnalysisCallbacks onpage2012.
Thecallback-calling sequencemayvarydepending uponexactlywhattheCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxallocated,filled,andfreedinthecallbacksprovided,asdescribedinthesection
AnalysisCallbacks onpage2012.
Thecallback-calling sequencemayvarydepending uponexactlywhattheCreo
Parametric userdoes.ThismeansCreoParametric TOOLKITapplications should
notuseglobalvariablestopassthe“current”analysisfromonecallbackto
another.
Insteadofsuchvariables,CreoParametric canstoreapointertotheCreo
Parametric TOOLKITdatastoredinsidetheProAnalysis object.Usefunction
ProAnalysisTypeGet() toreturnthetypeofaspecifiedanalysis.The
infoalloc callbackshouldendwithacalltoProAnalysisInfoSet(),
whichgivesCreoParametric thepointertothenewdescription. Everyother
callbackthatneedstousethisdatashouldcallProAnalysisInfoGet() to
getapointertotheapplication datafortheanalysisobject,ratherthanassumethis
bycontext.
CreoParametric cannotaccesstheuserdata,norcanitprovidegeneralstorageof
thisdataintheCreoParametric filewhenthesolidissaved.Asexplainedinthe
sectionAnalysisCallbacks onpage2012earlier,thecallbacksinfosaveandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthisdataintheCreoParametric filewhenthesolidissaved.Asexplainedinthe
sectionAnalysisCallbacks onpage2012earlier,thecallbacksinfosaveand
inforetrieve respectively givetoCreoParametric, andreturnafterretrieval,
geometryreferences containedintheinformation; doublevaluescanbestoredas
dimensions. Notethatanyotherinformation theapplication needstostoreshould
besavedandretrievedinsideinfosaveandinforetrieve usingCreoParametric
TOOLKITexternaldata.
ResultsData
ThissectiondescribesinmoredetailthedatagiventoCreoParametric bythe
CreoParametric TOOLKITapplication astheoutputfromtheresultscallback.
Theoutputconsistsoftwoarrays,oneforthefeatureparameters, theotherforthe
featuregeometry.EachoftheseisaProArray allocatedbyCreoParametric
beforecallingthecallback.
Thestructureforafeatureparameter is:
typedef struct analysis_param
Event-driven Programming: Toolkit-Based Analysis 2015{
ProName name;
ProBoolean create;
ProLine description;
ProParamvalue *values;
}ProAnalysisParameter;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypedef struct analysis_param
Event-driven Programming: Toolkit-Based Analysis 2015{
ProName name;
ProBoolean create;
ProLine description;
ProParamvalue *values;
}ProAnalysisParameter;
Thenameisthatofthefeatureparameter thatwillbecreated.Thecreateflag
showsthedefaultsettingoftheCreateoptionfortheparameter intheANALYSIS
dialogbox.Thedescription appearsalongsidetheparameter intheANALYSIS
dialogbox.Thearrayofvaluesshouldhaveonlyasingleiteminitinthecurrent
release.Thestructure ProParamvalue isthesameoneusedforaccessinguser
parameters throughthefunctionsinProParameter.h and
ProParamvalue.h. Thevaluetypemustbe“double”inthecurrentrelease.
Thestructureforageometryitemis:
typedef struct analysis_geom
{
ProName name;
ProBoolean create;
ProAnalysisEntityType type;
ProAnalysisEntity *shapes;
}ProAnalysisGeomitem;
Thenameisgiventotheresultingdatum(NOTtothefeature),butwitha
numerical suffixtoensurethatthenameisuniqueintheCreoParametric model.
Thecreateflagisexactlyasforparameters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}ProAnalysisGeomitem;
Thenameisgiventotheresultingdatum(NOTtothefeature),butwitha
numerical suffixtoensurethatthenameisuniqueintheCreoParametric model.
Thecreateflagisexactlyasforparameters.
TheentitytypeisanenumwhichisasubsetoftheobjecttypesinProType. The
typessupported bythisreleaseare:
PRO_ANALYSIS_CURVE Curve
PRO_ANALYSIS_CSYS Coordcsys
PRO_ANALYSIS_POINT Datumpoint
PRO_ANALYSIS_COMP_CRV Composite curve
PRO_ANALYSIS_SURFACE Surface
Array“shapes”containsanynumberofgeometric entitiesofthesametype.The
unionthatrepresents anentityshapeis:
typedef union
{
ProAnalysisSrfData *surface;
ProQuiltdata *quilt;
ProCurvedata *curve;
ProCsysdata csys;
}ProAnalysisEntity;
ThefieldsinthisunionallhavetypesthataregenericgeometrytypesinCreo
Parametric TOOLKIT, andaredeclaredintheappropriate headers:
ProSurfacedata.h, ProQuiltdata.h, ProCurvedata.h,
ProCsysdata.h, ProEdgedata.h. Thefirstthreefields,althoughtheyarexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKIT, andaredeclaredintheappropriate headers:
ProSurfacedata.h, ProQuiltdata.h, ProCurvedata.h,
ProCsysdata.h, ProEdgedata.h. Thefirstthreefields,althoughtheyare
2016 Creo®Parametric TOOLKIT User’sGuidepointers,arenotopaque:inspawnmodeorasynchronous modetheypointto
memoryintheCreoParametric TOOLKITprocess,notintheCreoParametric
process.Itisrecommended thatyoubuildthesestructuresusingthefunctionsin
thecorresponding headerfiles,forexample, ProCurvedataAlloc(),
ProLinedataInit(), andsoon.
ProAnalysisSrfData Structure
TheProAnalysisSrfData structureisusedtodefineadatumsurfacefroma
toolkit-based analysisfeature.Thisstructureconsistsof:
typedef struct ProAnalysisSrfData
{
ProEdgedata *edge_data;
ProSurfacedata *pro_surface;
}ProAnalysisSrfData;
TheProSurfacedata* structurecontainsthesurfaceshape,parameters, anda
populated ProContourdata structurereferencing theboundaryedges.The
ProEdgedata* membershouldbeaProArray ofedgegeometric datawhosexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheProSurfacedata* structurecontainsthesurfaceshape,parameters, anda
populated ProContourdata structurereferencing theboundaryedges.The
ProEdgedata* membershouldbeaProArray ofedgegeometric datawhose
idsarereferenced bythecontourdatainthesurfacedatastructure.
FunctionIntroduced:
•ProAnalysissrfdataAlloc()
Thefunction ProAnalysissrfdataAlloc() allocatesthe
ProAnalysisSrfData datastructure.
Example1:OffsetCoordinate SystemDatum
ThesamplecodeinthefileUgExtAnalysisSurfcsys.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_ext_
analysis showsaCreoParametric TOOLKITapplication thatdefinesatoolkit-
basedanalysisthatbuildsacoordinate systemdatumatanoffsetfromasurface
point.TheZaxiscanbeaninwardoranoutwardnormaltothesurface,theXand
YaxesarealignedwiththeUVmeshlinesinthesurface,andtheorigincanbe
offsetintheZdirection.Theoffsetvalueisstoredasafeaturedimension.
AnalysisAttributes
Functions Introduced:
•ProAnalysisAttrSet()
•ProAnalysisAttrIsSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoffsetintheZdirection.Theoffsetvalueisstoredasafeaturedimension.
AnalysisAttributes
Functions Introduced:
•ProAnalysisAttrSet()
•ProAnalysisAttrIsSet()
Thesefunctionsallowyoutogetandsetcertainattributesonatoolkit-based
analysis.TheonlyattributedefinedinthecurrentreleaseisPROANALYSIS_
COMPUTE_OFF. Ifthisisset,thecomputeandresultcallbackswillnotbecalled
Event-driven Programming: Toolkit-Based Analysis 2017duringregeneration ofthemodel.Ifthetoolkit-based analysisbelongstoafeature,
thegeometryofthefeaturewillbefrozenuntilthePROANALYSIS_COMPUTE_
OFFisunsetagain.Ifthefeaturegeometryincludesasurfacecurve,the3D
locationofthecurvewillberecalculated duringregeneration inaccordance with
theexistingUVcurvesdefinitionbutusingthenewgeometryofthesurface.This
meansthecurveremainsinthesurfaceevenifthesurfacemoveswhile
COMPUTE_OFF isTRUE.
UsethePROANALYSIS_COMPUTE_OFF attributetotemporarily turnoffthe
toolkit-based analysistosavetimewhenmakingotherchangestothemodel.
VisitingSavedToolkit-Based AnalysesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCOMPUTE_OFF isTRUE.
UsethePROANALYSIS_COMPUTE_OFF attributetotemporarily turnoffthe
toolkit-based analysistosavetimewhenmakingotherchangestothemodel.
VisitingSavedToolkit-Based Analyses
Functions Introduced:
•ProSolidAnalysisV isit()
•ProAnalysisNameGet()
Thefunction ProSolidAnalysisVisit() visitsasavedtoolkit-based
analysisinapartorassembly.Itdoesnotvisitstandardsavedanalyses,nor
toolkit-based analysesinfeatures.
Thefunction ProAnalysisNameGet() providesthenameunderwhicha
toolkit-based analysisissaved.
VisitingToolkit-Based AnalysesFeatures
Functions Introduced:
•ProFeatur eAnalysisGet()
Tovisitanalysesinanalysisfeatures,useProSolidFeatureVisit(), filter
forfeatureswhosetypeisPRO_FEAT_ANALYSIS, andcall
ProFeatureAnalysisGet() oneachfeature.
UsingtheModelwithoutCreoParametric
TOOLKIT
Ifamodelcontainsexternalanalysesorexternalanalysisfeaturesofatype
definedbyaCreoParametric TOOLKITapplication, andthatmodelisretrieved
intoCreoParametric whiletheCreoParametric TOOLKITapplication isnotxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedbyaCreoParametric TOOLKITapplication, andthatmodelisretrieved
intoCreoParametric whiletheCreoParametric TOOLKITapplication isnot
running,CreoParametric willnotattempttorecompute thoseanalysesduring
regeneration. Savedtoolkit-based analyseswillretaintheiroldvalues,andtoolkit-
basedanalysisfeatureswillhavetheirgeometryfrozen.
2018 Creo®Parametric TOOLKIT User’sGuideIfaCreoParametric TOOLKITapplication isterminated duringaCreo
Parametric session,anytoolkit-based analysistypesitregistered willbe
automatically deregistered, andanyanalysesthatusethosetypeswillbefrozen.
Event-driven Programming: Toolkit-Based Analysis 201976
Event-driven Programming:
ForeignDatumCurves
ForeignDatumCurves...........................................................................................2021
ThischapterdescribestheCreoParametric TOOLKITfunctionsthatenableyouto
createforeigndatumcurves.
2020 Creo®Parametric TOOLKIT User’sGuideForeignDatumCurvesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThischapterdescribestheCreoParametric TOOLKITfunctionsthatenableyouto
createforeigndatumcurves.
2020 Creo®Parametric TOOLKIT User’sGuideForeignDatumCurves
InCreoParametric TOOLKIT, youcreateforeigndatumcurvesusingthefeature
creationtechniques describedinthechapterElementTrees:Principles ofFeature
Creationonpage749.TheheaderfileProForeignCurve.h containsthe
elementtreestructureandatablethatmapseachelementtoanelementidentifier,
valuetype,andvalidvalues.
Thefollowingfigureshowstheelementtreestructureforforeigndatumcurve
creation.Notethatallelementsarerequired.
ElementTreeforForeignDatumCurve
Astheelementtreeimplies,foreigndatumcurvecreationrequiresthatyou
providethefeaturetype,curvetype,curveclass,referencecoordinate system,data
usedintheanalyticalrepresentation ofthecurve,andcurvecontinuity.Creo
Parametric usesthisinformation, togetherwithanevaluation function,tocreatean
internalrepresentation ofthecurve.
ProvidinganEvaluationFunction
FunctionIntroduced:
•ProFor eignCurveEvalFunction()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric usesthisinformation, togetherwithanevaluation function,tocreatean
internalrepresentation ofthecurve.
ProvidinganEvaluationFunction
FunctionIntroduced:
•ProFor eignCurveEvalFunction()
Inadditiontobuildingtheelementtreeforyourdatumcurvefeature,youmust
provideitsanalyticalrepresentation toCreoParametric. Thisrepresentation is
madeavailabletoCreoParametric inaspecialfunctioncalledanevaluator,or
evaluation function.
Event-driven Programming: ForeignDatumCurves 2021Theevaluation functionmustcontainparameterized equationsfortheX,Y,andZ
coordinates ofpointsthatdefinethecurve.IfC(X,Y,Z)isafunctionrepresenting
thecurveinthree-dimensional space,youcanrepresenttheparameterized
equationsforeachcoordinate asfollows:
X=f(t)
Y=g(t)
Z=h(t)
Intheseequations, theparameter trangesfrom0to1overtheextentofthecurve.
Forexample,aparametric representation ofacircleofradius RlyingintheXY-
plane,whosecentercoincideswiththeorigin,isasfollows:
X=R*cos(2*PI*t);
Y=R*sin(2*PI*t);
Z=0;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxForexample,aparametric representation ofacircleofradius RlyingintheXY-
plane,whosecentercoincideswiththeorigin,isasfollows:
X=R*cos(2*PI*t);
Y=R*sin(2*PI*t);
Z=0;
Intheseequations, PI=3.14159.
CreoParametric TOOLKITprovidestheprototypefortheevaluation function.
Thesyntaxisasfollows:
typedef ProError (*ProForeignCurveEvalFunction)
(
ProName class, /*input */
wchar_t *data_string, /*input */
ProSelection csys, /*input */
double curve_param, /*input */
ProVector xyz_point, /*output */
ProVector deriv1, /*output */
ProVector deriv2 /*output */
);
Thefunctionargumentsareasfollows:
•class—Identifies thetypeofcurvesgeneratedbytheevaluation function.
•data_string—The flagthatcontrolsspecificattributesofthecurve.
•csys—The referencecoordinate systemwithrespecttowhichthecurve
geometryisdefined.Passittotheevaluation functionasaProSelection
object.
•curve_param—The parameter valueatwhichtheX,Y,andZcoordinates, as
wellasthefirstandsecondderivatives, willbeevaluated.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometryisdefined.Passittotheevaluation functionasaProSelection
object.
•curve_param—The parameter valueatwhichtheX,Y,andZcoordinates, as
wellasthefirstandsecondderivatives, willbeevaluated.
•xyz_point—The X,Y,andZcoordinates atthevalueofcurve_param.
•deriv1—The valuesofthefirstderivatives ofX,Y,andZwithrespecttothe
parameter,atthevalueofcurve_param.
•deriv2—The valuesofthesecondderivatives ofX,Y,andZwithrespectto
theparameter,atthevalueofcurve_param.
Allargumentsarepassedtotheevaluation functionbyCreoParametric, basedon
thevaluesyouprovidefortheelementsintheelementtree.
2022 Creo®Parametric TOOLKIT User’sGuideAsingleevaluation functioncanbeusedtocreateanumberofcurvevariations
withinagivenclass.Theparameterized curveequationstypicallycontain
constantswhosevaluescontroltheshape,size,location,andorientation ofthe
curve.Youcanwritetheevaluation functionsuchthat,depending onthevalueof
thedata_string argument,differentvaluesofthoseconstantswillbeusedtoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurve.Youcanwritetheevaluation functionsuchthat,depending onthevalueof
thedata_string argument,differentvaluesofthoseconstantswillbeusedto
calculatethelocationofpointsonthecurve.
CurveContinuity
Curvecontinuity,inasense,definesthesmoothness ofintersections betweenthe
endsoftheforeigncurveandothergeometryinthemodel.Italsodefinesthe
continuity ofthree-dimensional geometrycreatedfromthecurve,suchasaswept
surface.First-order continuity impliesthatthefirstderivatives oftwoadjoining
curvesegmentsareequalatthepointatwhichthecurvesjoin.Second-order
continuity issimilarlydefined.Depending onthecurvecontinuity youwant,the
evaluatorfunctionneedstocontainfirstandsecondderivatives ofthe
parameterized curveequations.
Youspecifythecurvecontinuity usingthePRO_E_CURVE_CONTINUITY
elementintheelementtree.Thevalidvalues,containedintheenumerated type
ProForeignCrvCont, areasfollows:
•PRO_FOREIGN_CURVE_CALC_XYZ
•PRO_FOREIGN_CURVE_CALC_XYZ_1_DER
•PRO_FOREIGN_CURVE_CALC_XYZ_1_AND_2_DERxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProForeignCrvCont, areasfollows:
•PRO_FOREIGN_CURVE_CALC_XYZ
•PRO_FOREIGN_CURVE_CALC_XYZ_1_DER
•PRO_FOREIGN_CURVE_CALC_XYZ_1_AND_2_DER
Thesevaluescorrespond tozeroth-,first-,andsecond-order continuity,
respectively .Ifyouusethevalue PRO_FOREIGN_CURVE_CALC_XYZ, Creo
Parametric passes NULLforderiv1andderiv2totheevaluation function.
Similarly,ifyouusethevalue PRO_FOREIGN_CURVE_CALC_XYZ_1_DER,
CreoParametric passes NULLforderiv2totheevaluation function.Therefore,
youshouldcheckforNULLvaluesofderiv1andderiv2inyourevaluation
functionbeforetryingtoassignderivative valuestothem.
CreoParametric callsyourevaluation functionmultipletimesforaseriesof
valuesofthecurveparameter,rangingfrom0to1.Thefunctionoutputsthe
followinginformation:
•X,Y,andZcoordinates ofthecurveatthespecifiedparameter value
•Valuesofthefirstandsecondderivatives, asneededforthedesiredcurve
continuity
ThesevaluesarethenusedbyCreoParametric toconstructthecurve.
BindingtheEvaluationFunctiontoaClass
FunctionIntroduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Valuesofthefirstandsecondderivatives, asneededforthedesiredcurve
continuity
ThesevaluesarethenusedbyCreoParametric toconstructthecurve.
BindingtheEvaluationFunctiontoaClass
FunctionIntroduced:
Event-driven Programming: ForeignDatumCurves 2023•ProFor eignCurveClassEvalSet()
Theevaluation functionmustbeboundtoaclass.Thisisdonewithacalltothe
function ProForeignCurveClassEvalSet(). Thefunctiontakesas
argumentstheclassnameandapointertotheevaluation function.Ifyoucall
ProForeignCurveClassEvalSet() andpassNULLfortheevaluation
functionpointer,itunbindsapreviously boundevaluation functionfromtheclass.
2024 Creo®Parametric TOOLKIT User’sGuide77
TaskBasedApplication Libraries
ProArgument andArgumentManagement ..............................................................2026
CreatingCreoParametricTOOLKITDLLTaskLibraries...........................................2027
LaunchingSynchronous J-LinkApplications ............................................................2033xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreatingCreoParametricTOOLKITDLLTaskLibraries...........................................2027
LaunchingSynchronous J-LinkApplications ............................................................2033
Applications createdusingthedifferentCreoParametric APIproductsare
interoperable. TheseproductsuseCreoParametric asthemediumofinteractions,
eliminating thetaskofwritingnative-platformspecificinteractions between
differentprogramming languages.
2025ProArgument andArgumentManagement
Usethedatastructure ProArgument topassapplication datatoandfromtasks
inotherapplications. Thedeclaration forthisstructureis:
typedef struct pro_argument
{
ProName label;
ProValueData value;
}ProArgument;
TheProValueData structuresupportsthefollowingargumenttypes:
•Integer
•Double
•String(char*)
•String(wchar_t*)
•Boolean
•ProSelection
•ProMatrix
DonotusethevaluetypePRO_VALUE_TYPE_POINTER (providedwiththis
structureinordertosupportfeatureelementtreevalues)whenpassingarguments
betweenapplications.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Boolean
•ProSelection
•ProMatrix
DonotusethevaluetypePRO_VALUE_TYPE_POINTER (providedwiththis
structureinordertosupportfeatureelementtreevalues)whenpassingarguments
betweenapplications.
Functions Introduced:
•ProArgumentByLabelGet()
•ProValuedataStringSet()
•ProValuedataWstringSet()
•ProValuedataT ransformGet()
•ProValuedataT ransformSet()
•ProArgumentPr oarrayFr ee()
Usethefunction ProArgumentByLabelGet() tolocateanargumentwithina
ProArray ofProArgument structurespassedbetweenapplications.
Usethefunction ProValuedataStringSet() toallocateandcopymemory
intotheProValuedata structureforachar*argument.Usingthisfunction
ensuresthatProArgumentProarrayFree() releasesallmemoryinan
argumentsarray.
Usethefunction ProValuedataWstringSet() toallocateandcopymemory
intotheProValuedata structureforawchar_t*argument.Usethisfunction
toensurethatProArgumentProarrayFree() releasesallmemoryinan
argumentsarray.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintotheProValuedata structureforawchar_t*argument.Usethisfunction
toensurethatProArgumentProarrayFree() releasesallmemoryinan
argumentsarray.
2026 Creo®Parametric TOOLKIT User’sGuideUsethefunction ProValuedataTransformSet() toallocateandcopy
memoryintotheProValuedata structureforaProMatrix argument.Use
thisfunctiontoensurethatProArgumentProarrayFree() releasesall
memoryinanarguments array.
Usethefunction ProValuedataTransformGet() tocopyaProMatrix
valueintoalocalvariable.Thematrixdataisnotdirectlyaccessible fromthe
double** memberoftheProValuedata structure.
Usethefunction ProArgumentProarrayFree() tocompletely freeanarray
ofProArgument structures.
CreatingCreoParametric TOOLKITDLL
TaskLibraries
Functions thatareintendedtoactasCreoParametric TOOLKITtasklibrary
functionsmusthavethesamesignatureasProTkdllFunction():
typedef ProError (*ProTkdllFunction) (
ProArgument* inputs, ProArgument** outputs );
Usethepreprocessor macro PRO_TK_DLL_EXPORT withanyfunctionthatmustxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypedef ProError (*ProTkdllFunction) (
ProArgument* inputs, ProArgument** outputs );
Usethepreprocessor macro PRO_TK_DLL_EXPORT withanyfunctionthatmust
beaccessible toexternalapplications. Thismacroprovidesplatform-specific
instructions tothecompilertomakethefunctionvisibletootherexternal
applications. Thismacromustbeplacedinthefunctionprototype, ifitexists,and
inthefunctiondefinitioniftheprototypedoesnotexist.
Someplatformsrequireexternally visiblesymbolstobedeclaredonthe
application linkline.
MemoryManagement inTaskLibraryFunctions
Toavoidmemoryleaksoroverwrites, theDLLfunctionsmustusepropermemory
management. TheDLLfunctionmust:
•Ensurethatthecontentsoftheinput ProArgument arrayarenotfreed.This
istakencareofbythecallingapplication andtheCreoParametric TOOLKIT
communications code.
•UsetheProValuedata*Set() functionstoassignvaluestotheoutput
ProArgument array.Thisallowsthecallingapplication tofreetheoutput
arraywithProArgumentProarrayFree().
Example1:AnExportedToolkitTaskFunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProArgument array.Thisallowsthecallingapplication tofreetheoutput
arraywithProArgumentProarrayFree().
Example1:AnExportedToolkitTaskFunction
ThesamplecodeinthefileUgImportfeatCreate.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
featcreat, functiondemonstrates howyoucansetupandimplement aCreo
TaskBasedApplication Libraries 2027Parametric TOOLKITtaskfunctionaccessible fromotherCreoParametric
auxiliaryapplications. Itusestherequiredsignatureandmacrofortaskfunctions.
Itparsestheinputargumentarraytosearchforparameters requiredbythetask.
LaunchingCreoParametric TOOLKITDLL
Functions
Functions Introduced:
•ProToolkitDllLoad()
•ProToolkitT askExecute()
•ProToolkitDllUnload()
•ProToolkitDllIdGet()
•ProToolkitDllHandleGet()
Usethefunction ProToolkitDllLoad() toregisterandstartaCreo
Parametric TOOLKITDLL.Theinputparameters ofthisfunctionaresimilarto
thefieldsofaregistryfileandareasfollows:
•app_name—The nameoftheapplication toinitialize.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKITDLL.Theinputparameters ofthisfunctionaresimilarto
thefieldsofaregistryfileandareasfollows:
•app_name—The nameoftheapplication toinitialize.
•exec_file—The DLLfiletoload,includingitsfullpath.
•text_dir—The pathtotheapplication’ smessageandUItextfiles.
•user_display—Set thisparameter toPRO_B_TRUE ifyouwanttheinteractive
usertobeabletoseetheapplication registered intheCreoParametric User
Interfaceandtoseeerrormessagesiftheapplication fails.
ThefunctionoutputsahandletotheloadedDLLintheformofa
ProToolkitDllHandle. IfthefunctionfailstoloadtheDLL,thefunction
outputsinformation describing thefailureandtheapplication's user_
initialize() functioniscalled.
Usethefunction ProToolkitTaskExecute() tocallaproperlydesignated
functionoftheCreoParametric TOOLKITDLLlibrary.Youcanpassarbitrary
combinations ofinputargumentstothelibraryfunction.
Usethefunction ProToolkitDllUnload() toshutdownaCreoParametric
TOOLKITDLLpreviously loadedbyProToolkitDllLoad(). Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcombinations ofinputargumentstothelibraryfunction.
Usethefunction ProToolkitDllUnload() toshutdownaCreoParametric
TOOLKITDLLpreviously loadedbyProToolkitDllLoad(). The
application's user_terminate() functioniscalled.
Usethefunction ProToolkitDllIdGet() togetastringrepresentation ofthe
DLLapplication. Thestringrepresentation canbesenttootherapplications,
whichcanuseProToolkitDllHandleGet() toobtaintheCreoParametric
TOOLKITDLLhandleusingthisstringrepresentation. PassNULLtothefirst
argumentofProToolkitDllIdGet() togettheidentifierforthecalling
application.
2028 Creo®Parametric TOOLKIT User’sGuideCustomCreoParametric TOOLKITDLLTasksfor
CreoDistributed Batch
Youcancreateacustomized CreoDistributed BatchtaskbyprovidingaCreo
Parametric TOOLKITDLLtoberunbytheCreoDistributed Batchservice.The
stepsrequiredtocreateanddeployacustomDLLtaskforCreoDistributed Batch
areasfollows:
•ComposetheCreoParametric TOOLKITDLLcontaining afunctionthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstepsrequiredtocreateanddeployacustomDLLtaskforCreoDistributed Batch
areasfollows:
•ComposetheCreoParametric TOOLKITDLLcontaining afunctionthat
meetsthecriteriaforacustomDLLtaskfunction.RefertotheCreatingCreo
Parametric TOOLKITDLLTaskLibrariesonpage2027sectionforthe
functionsignature.UsethestandardCreoDistributed Batchargumentswhile
codingthefunction.RefertotheCodingaCustomDLLTaskFunctionon
page2029sectionformoreinformation onthearguments.
•CreateaDLLregistryfileforCreoDistributed Batch.RefertotheRegistry
FileforCustomDLLTasksonpage2031sectionformoreinformation.
•CreateaTTD(TaskTypeDefinition) filespecifying theCreoParametric
TOOLKITDLLandthecustomtaskfunctiontobeexecutedbythecustom
task.RefertotheTTDFileFormatforCustomDLLTasksonpage2032
sectionformoreinformation.
CodingaCustomDLLTaskFunction
CreoDistributed BatchprovidesthefollowinginputargumentstothecustomDLL
taskfunction:
Note
Alltheinputargumentsareofthewidestring datatype.
•DBS_WORKING_DIRECTORY—Specifies thefullpathoftheworkingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoDistributed BatchprovidesthefollowinginputargumentstothecustomDLL
taskfunction:
Note
Alltheinputargumentsareofthewidestring datatype.
•DBS_WORKING_DIRECTORY—Specifies thefullpathoftheworking
directoryfortheCreoDistributed Batchservice.Itstoresallthelog, inf,and
outputfilesgeneratedduringtheexecutionofacustomtask.
•DBS_CURRENT_OBJECT_NAME—Specifies thenameoftheobjectthatwill
acteduponbythecustomDLLtaskfunction.
•DBS_CURRENT_OBJECT_TYPE—Specifies thetypeoftheobjectsuchasa
3Dmodel,assembly,ordrawing.Thevalueofthisargumentwillbea
widestring containing anintegervalueofthetypethatmatcheswiththevalues
intheenumerated typeProMdlType.
TaskBasedApplication Libraries 2029CreoDistributed Batchsuppliesanyadditional inputargumentsandtheirvalues,
iftheyarelistedinaTTDfile,as<USER_DATA></USER_DATA> tagswithin
the<TKFUNC></TKFUNC> node.Eachuserdatatagissuppliedasan
independent argument.
ThecustomDLLtaskfunctioncaninfluencethestateofCreoDistributed Batchxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthe<TKFUNC></TKFUNC> node.Eachuserdatatagissuppliedasan
independent argument.
ThecustomDLLtaskfunctioncaninfluencethestateofCreoDistributed Batch
andthestatusofthetaskthroughoneofthefollowingoutputarguments.Ifan
argumentisnotsupplied,thecurrentordefaultvalueisused.
Note
Alltheoutputargumentsareofthewidestring datatype.
•DBS_CURRENT_OBJECT_NAME—Specifies thenameofthegenerated
object.ThisoutputinformsCreoDistributed Batchthatamodelwiththis
nameshouldbeusedforotherTTDentriesthatfollow.
•DBS_CURRENT_OBJECT_TYPE—Specifies thetypeofthegeneratedobject
suchasa3Dmodel,assembly,ordrawing.Thevalueofthisargumentwillbe
awidestring containing anintegervalueofthetypethatmatcheswiththe
valuesintheenumerated typeProMdlType. ThisoutputinformsCreo
Distributed BatchthatamodelofthistypeshouldbeusedforotherTTD
entriesthatfollow.
•DBS_IGNORE_FILE—By default,theCreoDistributed Batchservicereturns
anyfilegeneratedintheworkingdirectory,exceptforreporttypefilessuchasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentriesthatfollow.
•DBS_IGNORE_FILE—By default,theCreoDistributed Batchservicereturns
anyfilegeneratedintheworkingdirectory,exceptforreporttypefilessuchas
log, infandtxt.Thenamesofthefilesspecifiedbythisoutputargument
willnotbeincludedintheoutputreturnedtotheclient.Youcanreturnmore
thanoneargumentofthistype.
•DBS_OUTPUT_FILE—Some filetypessuchaslog, infandtxtarenot
transferred totheCreoDistributed Batchclientbydefault.Filenames
specifiedbythisoutputargumentindicatethataparticularfilesuchas
trail.txt shouldbepassedbacktotheclient.Thisfileisalwaysreturned
evenifCreoDistributed Batchignoresit.Thisargumentisnotrequiredfor
filesreturnedbydefault.Youcanreturnmorethanoneargumentofthistype.
•DBS_OUTPUT_DIRECTORY—Specifies theoutputdirectorycontaining all
filesexceptonessuchastrailfilesorlogfilesthatareignoredbyCreo
Distributed Batch.Thisoptionalargumentisrequiredonlyifthecontentsof
theoutputdirectoryaredifferentfromtheinputworkingdirectory.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfilesexceptonessuchastrailfilesorlogfilesthatareignoredbyCreo
Distributed Batch.Thisoptionalargumentisrequiredonlyifthecontentsof
theoutputdirectoryaredifferentfromtheinputworkingdirectory.
•DBS_MESSAGE—Specifies theuser-visiblemessagethatwillbeprintedinthe
logfilegeneratedbythecustomDLLtaskfunction.Thismessageisespecially
usefulifthefunctionreturnsanerror.
2030 Creo®Parametric TOOLKIT User’sGuideIncaseofchainedTTDtasks(described intheTTDFileFormatforCustomDLL
Tasksonpage2032section),theoutputargumentsgeneratedbythefirstTTD
containing thecustomDLLtaskfunctionaresuppliedasinputargumentstothe
secondTTDwithinthesamefile.
ThecustomDLLtaskfunctionshouldreturnoneofthefollowingtypesoferrors:
•PRO_TK_NO_ERROR—Specifies thatthetaskfunctionexecutedsuccessfully .
•PRO_TK_BAD_INPUTS—Specifies thatthetaskfunctionwascalledwith
incorrectinputarguments.
RegistryFileforCustomDLLTasks
Registering acustomCreoParametric TOOLKITDLLmeansprovidingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_TK_BAD_INPUTS—Specifies thatthetaskfunctionwascalledwith
incorrectinputarguments.
RegistryFileforCustomDLLTasks
Registering acustomCreoParametric TOOLKITDLLmeansproviding
information totheCreoDistributed Batchserviceaboutthefilesthatformthe
DLL.
Anexampleoftheregistryfileisasfollows:
name pt_userguide.dll
exec_file <creo_toolkit_loadpoint>/$<machine_type>/obj/pt_
userguide.dll
text_dir <creo_toolkit_loadpoint>/protk_appls/pt_userguide/text
where:
<creo_toolkit_loadpoint> refers tothe directory that forms the
loadpoint of
Creo Parametric TOOLKIT under the Creo Parametric installation.
<machine_type> refers tothe type ofmachine onwhich Creo
Parametric
isinstalled. For example x86e_win64.
Thefieldsoftheaboveregistryfilearedescribedbelow:
•name—Specifies thenameoftheCreoParametric TOOLKITDLLtobeused
asthedllname attributeintheTTDfile.
•exec_file—Specifies thefullpathtotheDLLbinaryfileontheservice
machine.
•text_dir—Specifies thedirectorycontaining language-specific directoriesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxasthedllname attributeintheTTDfile.
•exec_file—Specifies thefullpathtotheDLLbinaryfileontheservice
machine.
•text_dir—Specifies thedirectorycontaining language-specific directories
thatincludethemenuandmessagefilesusedbytheDLL.
Theregistryfilemustbenamed dbatchs.dat TheDLLregistryfilemustbe
visibletotheCreoDistributed Batchserviceontheservicemachine.Tomakeit
visible,placethedbatchs.dat fileinthesamelocationastheCreoDistributed
Batchserviceexecutable dbatchs.exe availableinthe<creo_loadpoint>\
<datecode>\Common Files\$<machine_type>\nms directory.Morethanone
customDLLcanbelistedinagiven dbatchs.dat file.
TaskBasedApplication Libraries 2031TTDFileFormatforCustomDLLTasks
TTDfilesserveastemplatesforallthecommontasksthatcanbeperformed using
CreoDistributed Batch.RefertotheCreoDistributed BatchHelpforcomplete
information aboutthenodesincludedinaTTDfile.
ForacustomDLLtask,specifythenameoftheCreoParametric TOOLKITDLL
asthedllname attributeandthefunction ProToolkitTaskExecute() thatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation aboutthenodesincludedinaTTDfile.
ForacustomDLLtask,specifythenameoftheCreoParametric TOOLKITDLL
asthedllname attributeandthefunction ProToolkitTaskExecute() that
causesCreoParametric toexecutethetaskfunctionasthefuncattributewithin
the<TKFUNC></TKFUNC> nodeinaTTDfile.Specifythenameofthecustom
DLLtaskfunctioninthe<DLL_FUNCTION></DLL_FUNCTION> tagwithin
the<TKFUNC></TKFUNC> node.Youcanalsoincludetherequired <USER_
DATA></USER_DATA> tagswithinthe<TKFUNC></TKFUNC> node.
Additionally ,youcanspecifyanexistingCreoParametric TOOLKITfunction
alongwithitsinputargumentsandenumerated typeswithina<TKFUNC></
TKFUNC> node.ATTDfilecontaining multiple <TKFUNC></TKFUNC> nodes
iscalledachainedTTD.
Example2:ChainedTTDTasktoconvertaCreoParametricmodelintoa
simplifiedrepresentation intheVRMLformat
Following isanexampleofaTTDfileforacustomDLLtaskfunction.
<TTD version="1.0" created_by="PTC">
<DESCRIPTION>Load and call external DLL tochange the
current model tosimprep</DESCRIPTION>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFollowing isanexampleofaTTDfileforacustomDLLtaskfunction.
<TTD version="1.0" created_by="PTC">
<DESCRIPTION>Load and call external DLL tochange the
current model tosimprep</DESCRIPTION>
<DETAILS>Load anexternal Creo Parametric TOOLKIT DLL into the
Creo Parametric session</DETAILS>
<SERVICE name="dbatchs"/>
<TKFUNC func="ProToolkitTaskExecute"
dllname="pt_userguide.dll">
<DLL_FUNCTION>TestSimprepActivateTask</DLL_FUNCTION>
<USER_DATA name="SIMP_REP">NO_B</USER_DATA>
</TKFUNC>
<!-- Export toVRML format -->
<TKFUNC func="ProExportVRML">
</TKFUNC>
</TTD>
Intheabove simprep.ttd file,thefunction ProToolkitTaskExecute()
executesthecustomtaskfunction TestSimrepActivateTask definedin
pt_userguide.dll. Thefunction TestSimrepActivateTask convertsa
CreoParametric modelintoasimplified representation. Thenameofthe
simplified representation tobecreatedmustbespecifiedinthe<USER_
DATA></USER_DATA> tag.
Theactivatedsimplified representation isconverted intotheVRMLformatbythexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsimplified representation tobecreatedmustbespecifiedinthe<USER_
DATA></USER_DATA> tag.
Theactivatedsimplified representation isconverted intotheVRMLformatbythe
second <TKFUNC></TKFUNC> nodeentryinthechainedTTDtask.Thispartof
theexecutionisdirectlyhandledbyCreoDistributed Batch.
2032 Creo®Parametric TOOLKIT User’sGuideTheClanguagecodeforthecustomtaskfunction
TestSimrepActivateTask usedinthesimprep.ttd fileispresentinthe
samplecodeinthefileUgInterfaceExport.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_
interface.
LaunchingSynchronous J-Link
Applications
ThefunctionsdescribedinthissectionallowCreoParametric TOOLKITAPI
userstolaunchasynchronous J-Linkapplication andcallmethodswithinitwith
user-specified arguments.
TheabilitytolaunchandcontrolaJ-Linkapplication byaCreoParametric
TOOLKITAPIenables:
•CodereusethroughtheabilitytocreateJ-Linklibrariesthatcanbecalledfrom
CreoParametric TOOLKITorotherAPIs.
•Creationofplatformindependent libraryroutines.
Functions Introduced:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKITAPIenables:
•CodereusethroughtheabilitytocreateJ-Linklibrariesthatcanbecalledfrom
CreoParametric TOOLKITorotherAPIs.
•Creationofplatformindependent libraryroutines.
Functions Introduced:
•ProJlinkApplicationStart()
•ProJlinkT askExecute()
•ProJlinkApplicationStop()
Usethefunction ProJlinkApplicationStart() toregisterandstartaJ-
Linkapplication. Theinputparameters ofthisfunctionaresimilartothefieldsof
aregistryfileandareasfollows:
•app_name—Assigns auniquenametothisJ-Linkapplication.
•java_app_class—Specifies thefullyqualifiedclassandpackagenameofthe
JavaclassthatcontainstheJ-Linkapplication’ sstartandstopmethod.
•java_app_start—Specifies thestartmethodoftheprogram.
•java_app_stop—Specifies thestopmethodoftheprogram.
•java_app_add_classpath—Specifies thelocationsofpackagesandclassesthat
canbeloadedwhenrunningaJavaprogram.CanbeNULL,ifnotneeded
•text_dir—Specifies theapplication textpathformenusandmessages. Canbe
NULLiftheapplication doesnotusemenusormessages.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcanbeloadedwhenrunningaJavaprogram.CanbeNULL,ifnotneeded
•text_dir—Specifies theapplication textpathformenusandmessages. Canbe
NULLiftheapplication doesnotusemenusormessages.
•user_display—Specifies whethertodisplaytheapplication intheAuxiliary
Applications dialogboxinCreoParametric.
ThefunctionprovidestheProJlinkAppHandle handletotheJ-Link
application. Ifthestartmethodthrowsanexception, thedescription ofthe
exceptionisstoredintheargument startup_exception.
TaskBasedApplication Libraries 2033Thefunction ProJlinkTaskExecute() callsaregistered taskinaJ-Link
application. Theinputparameters are:
•handle—Specifies thehandletotheJ-Linkapplication.
•task_id—Specifies thetasktobeexecuted.TheJ-Linkapplication should
registerthetaskusingtheJ-Linkmethod
pfcSession.BaseSession.RegisterTask(). RefertoJ-Link
documentation formoreinformation ontheRegisterTask()method.
•input_ar gs—Specifies theinputargumentstobepassedtothetask.
TheoutputofthisfunctionisanarrayofargumentsoftypeProArgument.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdocumentation formoreinformation ontheRegisterTask()method.
•input_ar gs—Specifies theinputargumentstobepassedtothetask.
TheoutputofthisfunctionisanarrayofargumentsoftypeProArgument.
TheseargumentsarereturnedbytheJ-Linktaskmethod.
Ifthemethodthrowsanexception, thedescription oftheexceptionisstoredinthe
outputargument exception.
Thefunction ProJlinkApplicationStop() stopstheJ-Linkapplication
specifiedbytheProJlinkAppHandle application handle.Thefunction
activatestheapplication’ sstopmethod.
Ifthestopmethodthrowsanexception, thedescription oftheexceptionisstored
intheoutputargument exception.
2034 Creo®Parametric TOOLKIT User’sGuide78
TechnicalSummaryofChanges
TechnicalSummaryofChangesforCreo4.0F000...................................................2036
TechnicalSummaryofChangesforCreo4.0M010..................................................2112
TechnicalSummaryofChangesforCreo4.0M020..................................................2114xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChangesforCreo4.0M010..................................................2112
TechnicalSummaryofChangesforCreo4.0M020..................................................2114
TechnicalSummaryofChangesforCreo4.0M030..................................................2117
TechnicalSummaryofChangesforCreo4.0M040..................................................2119
TechnicalSummaryofChangesforCreo4.0M050..................................................2120
TechnicalSummaryofChangesforCreo4.0M060..................................................2121
TechnicalSummaryofChangesforCreo4.0M070..................................................2122
TechnicalSummaryofChangesforCreo4.0M080..................................................2123
TechnicalSummaryofChangesforCreo4.0M090..................................................2125
TechnicalSummaryofChangesforCreo4.0M100..................................................2126xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChangesforCreo4.0M090..................................................2125
TechnicalSummaryofChangesforCreo4.0M100..................................................2126
TechnicalSummaryofChangesforCreo4.0M110..................................................2128
TechnicalSummaryofChangesforCreo4.0M110..................................................2129
TechnicalSummaryofChangesforCreo4.0M120..................................................2130
TechnicalSummaryofChangesforCreo4.0M130..................................................2130
TechnicalSummaryofChangesforCreo4.0M140..................................................2132
TechnicalSummaryofChangesforCreo5.0.0.0.....................................................2133
TechnicalSummaryofChangesforCreo5.0.1.0.....................................................2136
TechnicalSummaryofChangesforCreo5.0.2.0.....................................................2137xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChangesforCreo5.0.1.0.....................................................2136
TechnicalSummaryofChangesforCreo5.0.2.0.....................................................2137
TechnicalSummaryofChangesforCreo5.0.3.0.....................................................2138
TechnicalSummaryofChangesforCreo5.0.4.0.....................................................2140
TechnicalSummaryofChangesforCreo5.0.5.0.....................................................2141
TechnicalSummaryofChangesforCreo6.0.0.0.....................................................2142
TechnicalSummaryofChangesforCreo6.0.1.0.....................................................2145
TechnicalSummaryofChangesforCreo6.0.2.0.....................................................2145
TechnicalSummaryofChangesforCreo6.0.3.0.....................................................2148
TechnicalSummaryofChangesforCreo6.0.4.0.....................................................2149xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChangesforCreo6.0.3.0.....................................................2148
TechnicalSummaryofChangesforCreo6.0.4.0.....................................................2149
TechnicalSummaryofChangesforCreo6.0.5.0.....................................................2149
TechnicalSummaryofChangesforCreo7.0.0.0.....................................................2152
TechnicalSummaryofChangesforCreo7.0.1.0.....................................................2165
TechnicalSummaryofChangesforCreo7.0.2.0.....................................................2168
2035TechnicalSummaryofChangesforCreo
4.0F000
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0F000and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0F000andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0F000andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
Non-Applet BasedVersionoftheAPIWizard
Thenon-applet basedAPIWizardsupportsInternetExplorer9.0orhigher,
Firefox,andChromium browsers.
Toopenthenon-applet basedversionoftheCreoParametric TOOLKIT
APIWizard,pointyourbrowserto:
<creo_toolkit_loadpoint>\protkdoc\index.html
index.html containslinkstotheCreoParametric TOOLKITAPIWizardand
User’sGuide.CreoParametric TOOLKITAPIWizardhasasearchfieldwhich
allowsyoutosearchforAPIswithitsfullnameorbyusingthewildcharacter*.
SeetheCreoParametric TOOLKIT User’sGuideformoreinformation.
AppletBasedVersionoftheAPIWizard
FromCreoParametric 4.0F000,theAppletBasedAPIWizardisnolonger
supported. Usethenon-applet basedAPIWizardinstead.
Applyingthedefault_leader_arrow_style Optionwhile
CreatingAnnotationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 4.0F000,theAppletBasedAPIWizardisnolonger
supported. Usethenon-applet basedAPIWizardinstead.
Applyingthedefault_leader_arrow_style Optionwhile
CreatingAnnotations
Whilecreatingannotations withleaders,CreoParametric TOOLKITapplications
usedtoignorethesetting no_arrow, definedintheDetailconfiguration option
default_leader_arrow_style.
FromCreoParametric 2.0M090onward,CreoParametric TOOLKITapplications
usethesettingdefinedbytheoption default_leader_arrow_style
duringthecreationofannotations withleaders.Thisisapplicable forannotations,
suchasnotesorsymbolinstances.
2036 Creo®Parametric TOOLKIT User’sGuideBehaviorofProMdlnameRename() forGenericModels
Whenyoucallthefunction ProMdlnameRename() onaninstanceofgeneric
model,thestatusofthegenericmodelchangestomarkedforsave.Ifyoucallsave
action,thegenericmodelissaved,evenifnochangesweremadetothemodel.
ChangeinBehaviorofFrozenStateinAssemblies
FromCreoParametric 3.0onward,theCreoParametric TOOLKITapplicationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaction,thegenericmodelissaved,evenifnochangesweremadetothemodel.
ChangeinBehaviorofFrozenStateinAssemblies
FromCreoParametric 3.0onward,theCreoParametric TOOLKITapplications
ignorethebehavioroftheconfiguration option freeze_failed_assy_comp
andthefreezecommands ontheCreoParametric userinterfacearenotavailable.
Theapplications setthefrozenstatusoncomponents onlyduringtheregeneration
ofthemodel.
Usethenewconfiguration option allow_freeze_failed_assy_comp to
restorethebehavioroftheconfiguration option freeze_failed_assy_
comp.Whenyousetthisoption,thefreezecommands ontheCreoParametric
userinterfaceareavailable,whichallowyoutosetthecomponent statusas
frozen.
ChangeinBehaviorofCablingFunctions
FromCreoParametric 2.0M080onward,whenyouexecutethefollowing
functionstheactivepartswitchestotheharnesspartandthenbacktotheoriginal
part:
•ProCableCreate()
•ProBundleCreate()
•ProCablesFromLogicalCreate()
Thefunction ProCableRoutingStart() switchesthecurrentmodeltoaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpart:
•ProCableCreate()
•ProBundleCreate()
•ProCablesFromLogicalCreate()
Thefunction ProCableRoutingStart() switchesthecurrentmodeltoa
harnesspart.Callthefunction ProCableRoutingEnd() toswitchtheharness
partbacktoitsoriginalpart.
ChangeinBehaviorofProDtlnoteDataGet()
Thefunction ProDtlnoteDataGet() returnedthehardlinebreaksdata,
whichmustnotbeusedbytheapplications. FromCreoParametric 2.0M040
onward,thebehaviorofthefunctionhasbeenfixed,anditdoesnotreturnthis
data.
ChangeinBehaviorofProDtlnoteModify()
Whenthefunction ProDtlnoteModify() wascalledontheOnItemnote
typewhichwascreatedwiththeattachment typePRO_DTLATTACHTYPE_
UNIMPLEMENTED, thenotetypecouldchangetoFreenotetype.FromCreo
Parametric 2.0M190thishasbeenfixed.Thenotetypedoesnotchangewhenthe
function PrDtlnoteModify() iscalled.
TechnicalSummaryofChanges 2037ChangeinBehaviorofProDwgtableRowSizeGet(),
ProDrawingT ablesUpdate(), ProDtlnoteLineEnvelopeGet(),
andProNoteLineEnvelopeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction PrDtlnoteModify() iscalled.
TechnicalSummaryofChanges 2037ChangeinBehaviorofProDwgtableRowSizeGet(),
ProDrawingT ablesUpdate(), ProDtlnoteLineEnvelopeGet(),
andProNoteLineEnvelopeGet()
ThefollowingCreoParametric TOOLKITfunctionsprovidemoreaccurate
results:
•ProDwgtableRowSizeGet()
•ProDrawingTablesUpdate()
•ProDtlnoteLineEnvelopeGet()
•ProNoteLineEnvelopeGet()
Previously ,thesefunctionsreturnedresultsbasedoninappropriate charactersize
andtheseresultswereinconsistent underdifferentconditions.
ChangeinBehaviorofProFitClearanceCompute()
Thefunction ProFitClearanceCompute() usedtoincorrectly return PRO_
B_TRUEfortheargument is_interference_found, whentherewasno
interference andtheclerancevaluewaspostiveandnon-zero.FromCreo
Parametric 2.0M120onward,thisbehaviorhasbeenfixed.Thefunctioncorrectly
returns PRO_B_FALSE, forapositiveandnon-zeroclearancevalue,indicating no
interference.
ChangeinBehaviorofProGtolRightT extSet()and
ProGtolTopTextSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreturns PRO_B_FALSE, forapositiveandnon-zeroclearancevalue,indicating no
interference.
ChangeinBehaviorofProGtolRightT extSet()and
ProGtolTopTextSet()
Theheightoftextforgeometric tolerances wassettothedefaultheightbythe
functions ProGtolRightTextSet() andProGtolTopTextSet(). From
CreoParametric 2.0M060onward,thesefunctionssettheheightoftextforthe
specifiedgeometrical toleranceaccording tothemodelunits.
ChangeintheBehaviorofProGtolRightT extSet()
Thefunction ProGtolRightTextSet() didnotsettheorientation ofthetext
correctlyduetowhichacalltothefunction
ProGtolRightTextEnvelopeGet() usedtoreturnanerror.Thisbehavior
hasbeenfixedinCreoParametric 2.0M080.Allfunctioncallsto
ProGtolRightTextSet() followedby
ProGtolRightTextEnvelopeGet() arenowsuccessful.
ChangeinBehaviorofProReferenceOwnerGet()
Thefunction ProReferenceOwnerGet() usedtoreturn NULLforlocalcopy
referenceinamodel.Localcopyreferenceisalocalcopyoftheexternalreference
thatisbackedupinthemodel.FromCreoParametric 2.0M070onward,thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunction ProReferenceOwnerGet() usedtoreturn NULLforlocalcopy
referenceinamodel.Localcopyreferenceisalocalcopyoftheexternalreference
thatisbackedupinthemodel.FromCreoParametric 2.0M070onward,the
functionreturnsthelocalmodelforthespecifiedlocalcopyreference.
2038 Creo®Parametric TOOLKIT User’sGuideChangeinBehaviorofProServerObjectIsModified()
FromCreoParametric 2.0M040onward,thebehaviorofthefunction
ProServerObjectIsModified() hasbeenupdatedtofixforthevalue
returnedbytheargument checkout_status. Theargumentnowreturnsthe
value PRO_B_FALSE toindicateoneofthefollowingstatusesforthespecified
object:
•theobjectwasonlysaved,butneveruploaded
•theobjectwasonlyuploaded,butnevercheckedin
ChangeinBehaviorofProSolidExternParentsGet()
Thefunction ProSolidExternParentsGet() didnotcollectexternal
dependencies forpatterns.FromCreoParametric 2.0M110onward,thebehavior
ofthefunction ProSolidExternParentsGet() hasbeenfixed.The
functionnowcollectsexternalandlocalparentsofthespecifiedsolidforpatternxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdependencies forpatterns.FromCreoParametric 2.0M110onward,thebehavior
ofthefunction ProSolidExternParentsGet() hasbeenfixed.The
functionnowcollectsexternalandlocalparentsofthespecifiedsolidforpattern
typeofreference.
ChangeinBehaviorofUserDefinedFeatures
FromCreoParametric 3.0onward,forfeaturescreatedusingexternalreferences,
CreoParametric createsageometrybackuptosupportfeatureregeneration and
redefinition whentheexternalreferences areoutofcontextoroutofsession.This
allowsmissingreferences inthefeaturetobevisited,andadditional information
aboutthesereferences isreturnedwhenfunctionssuchas
ProFeatureAnnotationelemsVisit() arecalled.Ifyoudonotwantthe
functionstoreturnthisadditional information aboutreferences, youcandisable
thefunctionality bysettingtheconfiguration option backup_reference_
information tono.
ChangeinDirectoryStructureforCreoInstallation
FromCreo3.0onward,thedirectorystructureforCreoinstallation haschanged
from:
•<creo_loadpoint>\Parametric to<creo_loadpoint>\xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinformation tono.
ChangeinDirectoryStructureforCreoInstallation
FromCreo3.0onward,thedirectorystructureforCreoinstallation haschanged
from:
•<creo_loadpoint>\Parametric to<creo_loadpoint>\
<datecode>\Parametric.
•<creo_loadpoint>\Common Files\<datecode> to<creo_
loadpoint>\<datecode>\Common Files
TechnicalSummaryofChanges 2039ChangeinStringValuesforMaterialCondition
FromCreoParametric 3.0onward,thefunction
ProParameterScaledvalueGet() returnsthestrings Maximum
Material, Least Material, Regardless ofsize (with symbol)
andRegardless ofsize (nosymbol) insteadofMMC, LMC, RFC,and
Default-RFS respectively .
ColoroftheHatchPattern
Thestructure ProXsecXhatchPattern specifiesthecolorofthehatchpattern
asaProColor object.
Customized RibbonUserInterface
Customized RibbonUserInterfacecomponents builtinCreoParametric 1.0F000
orM010maynotworkcorrectlyincertainsituations. PTCrecommends thatyou
sendthesecustomized ribbonfilestoPTCforreviewandclean-upbeforeusingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorM010maynotworkcorrectlyincertainsituations. PTCrecommends thatyou
sendthesecustomized ribbonfilestoPTCforreviewandclean-upbeforeusing
theminCreoParametric 1.0M020andhigherreleases.Alternatively ,rebuild
theseribboncustomizations againusingCreoParametric 1.0M020andhigher
releases.
Ensurethatallnewribboncustomizations arecreatedinCreoParametric 1.0
M020orhigherreleasesonly.
DialogsNotSupportedWhileInvokingCreoParametric
TOOLKITApplication
WhenyouinvoketheCreoParametric TOOLKITapplication, ensurethatno
dialogsareopeninCreoParametric session.IfCreoParametric dialogisopen,the
resultsmaybeunpredictable.
DigitalRightsManagement Retired
FromCreoParametric 3.0onward,DigitalRightsManagement (DRM)isno
longersupported. CreoParametric TOOLKITapplications thatchecktheDRM
permissions willhavetobeupdated.
DisableNotification MessagesinTrailFiles
Whennotifications aresetinCreoParametric TOOLKITapplications, everytime
aneventistriggered,notification messagesareaddedtothetrailfiles.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDisableNotification MessagesinTrailFiles
Whennotifications aresetinCreoParametric TOOLKITapplications, everytime
aneventistriggered,notification messagesareaddedtothetrailfiles.
FromCreoParametric 2.0M210onward,anewenvironment variable PROTK_
LOG_DISABLE allowsyoutodisablethisbehavior.Whensettotrue,the
notifications messagesarenotaddedtothetrailfiles.
2040 Creo®Parametric TOOLKIT User’sGuideDrawingFunctionstoDisplayAnnotations andCreateBOM
Balloons
Thefollowingfunctionswillshowtheannotations orcreateBOMballoonsonlyif
thedrawingisdisplayedinthecurrentsession:
•ProAnnotationByViewShow()
•ProAnnotationByFeatureShow()
•ProAnnotationByComponentShow()
•ProDrawingDimensionsCleanup()
•ProDimensionAutoOrdinateCreate()
•ProBomballoonCreate()
•ProBomballoonAllCreate()
•ProBomballoonByComponentCreate()
•ProBomballoonByRecordCreate()
•ProBomballoonClean()
FromCreoParametric 2.0M060onward,youcanspecifytheviewinwhichthe
annotations mustbedisplayedforthefunctions
ProAnnotationByFeatureShow() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProBomballoonByRecordCreate()
•ProBomballoonClean()
FromCreoParametric 2.0M060onward,youcanspecifytheviewinwhichthe
annotations mustbedisplayedforthefunctions
ProAnnotationByFeatureShow() and
ProAnnotationByComponentShow().
Environment VariablestoInitiateApplications
FromCreoParametric 3.0onward,thefollowingenvironment variablesallowyou
toloadyourapplications withcallsfromuser_initialize() evenifthe
CreoPlatformAgenthasnotloaded:
•PROTK_DELAYINIT_NO_DELAY—Initiates theapplication directly,without
waitingforCreoPlatformAgenttoload.
•PROTK_DELAYINIT_ALWAYS_INIT—W aitsforPTCCreoPlatformAgent
toload.However,itinitiatestheapplication eveniftheCreoPlatformAgent
failstoloadortimesout.
FillPatterns
Anewvalue PRO_GRP_PATTERN_HEADER hasbeenaddedtotheenumerated
datatypeProGrppatternStatus definedintheheaderfile
ProFeature.h. Thisvaluespecifiesthatthefeatureistheheaderofagroup
pattern.
Anewvalue PRO_PATTERN_HEADER hasbeenaddedtotheenumerated dataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdatatypeProGrppatternStatus definedintheheaderfile
ProFeature.h. Thisvaluespecifiesthatthefeatureistheheaderofagroup
pattern.
Anewvalue PRO_PATTERN_HEADER hasbeenaddedtotheenumerated data
typeProPatternStatus definedintheheaderfileProFeature.h. This
valuespecifiesthatthefeatureistheheaderofapattern.
TechnicalSummaryofChanges 2041GeometricTolerances
FromCreoParametric 4.0F000onward,theobject Gtoldata hasbeen
deprecated. AlltheProGtolData* functionshavealsobeendeprecated. Use
thenewProGtolAttach objectandnewProGtol* functionsinstead.The
newfunctionsaredefinedintheheaderfilesProGtol.h and
ProGtolAttach.h.
Geometric tolerancefunctionsdeprecated inCreoParametric 4.0F000mustnot
beusedwiththenewgeometric tolerancefunctionsavailablefromCreo
Parametric 4.0F000inaCreoParametric TOOLKITapplication. Ifthefunctions
areusedtogetherinanapplication, theresultsmaybeunpredictable.
WhenthenewProGtol*Get() functions, except
ProGtolTopModelGet(), ProGtolValidate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxareusedtogetherinanapplication, theresultsmaybeunpredictable.
WhenthenewProGtol*Get() functions, except
ProGtolTopModelGet(), ProGtolValidate()
ProGtolReferencesGet(), andProGtolReferenceDelete(), are
calledongeometric tolerances createdinreleasespriortoCreoParametric 4.0
F000,theselegacygeometric tolerances areconverted tothenewCreoParametric
4.0geometric tolerances. Inthiscase,therevisionnumberofthemodelisalso
incremented.
InventorModelUnitsRetainedduringImportasAssembly
TheInventormodelunitswerenotretainedwhenanInventormodelwasimported
asanassemblyinCreoParametric. FromCreoParametric 2.0M110onward,this
behaviorhasbeenfixed.TheInventormodelunitsarenowretainedduringthe
importoftheInventormodelasanassembly.
LayoutModelType
FromCreoParametric 3.0onward,theenumerated typeProMdlType contains
anadditional value PRO_MDL_CE_SOLID thatrepresents modelsoftypeLayout.
CreoParametric TOOLKITfunctionswillonlybeabletoreadmodelsoftypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanadditional value PRO_MDL_CE_SOLID thatrepresents modelsoftypeLayout.
CreoParametric TOOLKITfunctionswillonlybeabletoreadmodelsoftype
Layout,butwillnotbeabletopassLayoutmodelsasinputtootherfunctions. To
workwithLayoutmodels,youmustrebuildyourexistingCreoParametric
TOOLKITapplications.
LicenseINTF_for_JT RequiredtoImportandExportJTFiles
FromCreoParametric 2.0M200onward,thefollowingfunctionsrequirethe
license INTF_for_JT toimportandexportaJTfiletoCreoParametric. Ifthe
licenseisnotavailablethefunctionsreturntheerrorPRO_TK_NO_LICENSE.
•ProIntf3DFileWrite()
•ProIntfimportModelCreate()
•ProIntfimportModelWithOptionsCreate()
•ProIntfimportModelWithProfileCreate()
2042 Creo®Parametric TOOLKIT User’sGuide•ProImportfeatCreate()
•ProImportfeatWithProfileCreate()
•ProDatumcurveFromfileCreate()
FromCreoParametric 3.0M080onward,thefunction
ProIntfimportModelWithOptionsMdlnameCreate() requiresthe
license INTF_for_JT toimportaJTfiletoCreoParametric.
Manufacturing SubtypePRO_MFGTYPE_MACH_P ARTxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 3.0M080onward,thefunction
ProIntfimportModelWithOptionsMdlnameCreate() requiresthe
license INTF_for_JT toimportaJTfiletoCreoParametric.
Manufacturing SubtypePRO_MFGTYPE_MACH_P ART
FromCreoParametric 3.0onward,themanufacturing subtype PRO_MFGTYPE_
MACH_PART forpartmachining isnolongersupported.
MaterialTypeandMaterialSurfaceFinishTypesforFatigue
Analysis
FromCreoParametric 3.0onward,twonewmaterialtypes PRO_MATERIAL_
FATIGUE_MAT_TYPE_FERROUS andPRO_MATERIAL_FATIGUE_MAT_
TYPE_OTHER havebeenaddedforfatigueanalysis.Thematerialtypes PRO_
MATERIAL_FATIGUE_MAT_TYPE_UNALLOYED_STEELS andPRO_
MATERIAL_FATIGUE_MAT_TYPE_LOW_ALLOY_STEELS areobsolete.You
mustrebuildyourexistingCreoParametric TOOLKITapplications toworkwith
thenewmaterialtypes.
MigratingCreoParametric TOOLKITApplications toPTC
ObjectTOOLKITC++
FromCreoParametric 3.0M010onward,anewperlscript mark_
otkmethod.pl facilitatesmigrationofCreoParametric TOOLKITapplications
toCreoObjectTOOLKITC++.
MigratingToolsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxObjectTOOLKITC++
FromCreoParametric 3.0M010onward,anewperlscript mark_
otkmethod.pl facilitatesmigrationofCreoParametric TOOLKITapplications
toCreoObjectTOOLKITC++.
MigratingTools
FromCreoParametric 3.0onward,themigrationtoolptk_revtool hasbeen
retired,andwillnotbesupported infuturereleases.
Anewperlscript mark_deprecated.pl allowsyoutoupdateapplications
fromolderversionstocurrentreleaseofCreoParametric TOOLKIT.
ModelTypeforaManufacturing Assembly
Foramanufacturing assembly,specifythetypeofmodel ProMdlType aseither
PRO_MDL_ASSEMBLY orPRO_MDL_MFG. Toworkwithanassemblyhandle,
specifythemodeltypeasPRO_MDL_ASSEMBLY andtoworkwitha
manufacturing handle,specifythemodeltypeasPRO_MDL_MFG.
TechnicalSummaryofChanges 2043Iftheassemblytypeisnotknown,initializethemodeltypeasPRO_MDL_
ASSEMBLY. Checktheassemblysubtypeusingthefunction
ProMdlSubtypeGet(). Ifthefunctionreturnsthesubtypeas
PROMDLSTYPE_MFG_NCASM, thentheassemblyisamanufacturing assembly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxASSEMBLY. Checktheassemblysubtypeusingthefunction
ProMdlSubtypeGet(). Ifthefunctionreturnsthesubtypeas
PROMDLSTYPE_MFG_NCASM, thentheassemblyisamanufacturing assembly.
YoucantheninitializethemodeltypeasPRO_MDL_MFG toworkwith
manufacturing data.
Modifications toSketchedDatumPoint
Thesketcheddatumpointisobsolete.Theelementtreeforsketchdatumpoint
definedintheheaderfileProDtmPnt.h isnolongersupported. Tocreatenew
sketcheddatumpoints,youmustusetheelementtreeforsketcheddatumcurves
definedintheheaderfileProDtmCrv.h.
Multithreading inCreoParametric TOOLKITApplications
FromCreoParametric 3.0onward,thefunction
ProEngineerMultithreadModeEnable() hasbeendeprecated.
Multithreading isnowalwayssupported inCreoParametric TOOLKIT
applications. Thereisnoneed,tocallthemultithreading function,whenthe
application createsadditional threadsforprocessing.
NewFieldtoSpecifyRibbonFileinRegistryFile
FromCreoParametric 3.0onward,anewfieldrbn_path hasbeenaddedinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplication createsadditional threadsforprocessing.
NewFieldtoSpecifyRibbonFileinRegistryFile
FromCreoParametric 3.0onward,anewfieldrbn_path hasbeenaddedinthe
registryfilecreotk.dat. Itallowsyoutospecifythenameandpathofthe
ribbonfile,whichmustbeloadedwhenyouopenCreoParametric.
NoSupportforBoundaryBoxTypeofSimplified
Representation
FromCreoParametric 3.0onward,theboundaryboxtypeofrepresentation
specifiedbythevalue PRO_SIMPREP_BOUNDBOX_REP intheheaderfile
ProSimprep.h isnolongersupported.
NoSupportforDeletingItemsWhileVisitingThem
Whileusingthevisitfunctionality ,PTCrecommends thatyoumustnotdeletethe
items,whichthefunctionwillvisit.Ifyoudeletetheitemsthatwillbevisited,the
resultsmaybeunpredictable.
NoSupportforPro/Develop Functions
FromCreoParametric 3.0onward,thePro/Develop headerfilesandrelated
supportfileswillnotbeshippedwithCreoParametric. ThePro/Develop functions
arenotsupported. Allsupported functionsareprototyped inheadersfilesunderxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsupportfileswillnotbeshippedwithCreoParametric. ThePro/Develop functions
arenotsupported. Allsupported functionsareprototyped inheadersfilesunder
2044 Creo®Parametric TOOLKIT User’sGuide<creo_toolkit_loadpoint>/includes. PTCrecommends thatyou
updateapplications thatusePro/Develop functionstouseequivalent Creo
Parametric TOOLKITfunctionsorCreoObjectTOOLKITC++methods.
NoSupportforPRO_LWG_SIMPREP_LEVEL_SELECTED
Thevalue PRO_LWG_SIMPREP_LEVEL_SELECTED inenumerated datatype
ProLightweightGraphicsSimprepLevel isnotsupported, andis
reservedforfutureuse.
Performance Improvement inSolidInterference and
Clearance
Theperformance offunctionsdetectingsolidinterference orclearancehasbeen
improved.
ProAsmcomppathDispQuiltV isit()
InCreoParametric 2.0,therewasachangeinthebehaviorofthefunction
ProAsmcomppathDispQuiltVisit(). Afterchangeinbehavior,the
functionvisitedallthequilts,includingdisplayedandun-displayed quiltsinthe
solid.ThisbehaviorhasbeenfixedinCreoParametric 2.0M030.ItnowvisitsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAsmcomppathDispQuiltVisit(). Afterchangeinbehavior,the
functionvisitedallthequilts,includingdisplayedandun-displayed quiltsinthe
solid.ThisbehaviorhasbeenfixedinCreoParametric 2.0M030.Itnowvisits
onlydisplayedquilts.
ProCableLogicalEndsGet()
Thefunction ProCableLogicalEndsGet() didnotworkcorrectlyfor
conductors. Thisissuehasnowbeenfixed.FromCreo3.0M020onward,youcan
alsousethefunction ProCableLogicalEndsGet() toretrievethelogical
endsofaconductor.
ProDimensionV alueSet()
FromCreoParametric 3.0onward,thefunction ProDimensionValueSet()
checksifthevaluebeingsetisvalidforthespecifieddimension orfeaturetype.If
thevalueisnotvalidforthespecifieddimension orfeature,thefunctionreturns
theerrorPRO_TK_GENERAL_ERROR. Forexample,youcannotsetnegative
valueforthediameterofahole.However,youcanseteitherpositiveornegative
valueforanoffsetinadatumplane.
TechnicalSummaryofChanges 2045ProDtlattachArrowtypeGet()
Thefunction ProDtlattachArrowtypeGet() usedtoreturn PRO_TK_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalueforanoffsetinadatumplane.
TechnicalSummaryofChanges 2045ProDtlattachArrowtypeGet()
Thefunction ProDtlattachArrowtypeGet() usedtoreturn PRO_TK_
BAD_INPUTS errorinsteadofreturningthetypeofarrowhead foraleader
attachedtoafreepoint.FromCreoParametric 3.0onward,thisbehaviorhasbeen
fixedandthefunctionnowreturnsthecorrecttypeofarrowhead fortheleader
attachedtoafreepoint.
ProNoteElbowlengthGet()
Inpreviousreleasesforcertainscenarios, thefunction
ProNoteElbowlengthGet() usedtoreturnincorrectlengthandsignfor3D
notesandasaresultwouldchangethepositionofthe3Dnote.FromCreo
Parametric 2.0M070onward,thisbehaviorhasbeenfixedandthefunction
returnsthecorrectvaluesfor3Dnotes.
ProSetdatumtagAttachmentSet()
FromCreoParametric 2.0M090onward,youcanplacethedatumtagonits
datumaxisatthedefaultposition,oronitsdatumplane.Tospecifythedatumaxis
ordatumplaneastheattachment option,passtheinputargument attachment
asNULLforthefunction ProSetdatumtagAttachmentSet().
ProNoteTextStyleGet() andProNoteTextStyleSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxordatumplaneastheattachment option,passtheinputargument attachment
asNULLforthefunction ProSetdatumtagAttachmentSet().
ProNoteTextStyleGet() andProNoteTextStyleSet()
Thefunctions ProNoteTextStyleGet()and ProNoteTextStyleSet()
weredeprecated inCreoParametric 1.0.
FromCreoParametric 3.0M020onward,thefunctions
ProNoteTextStyleGet()and ProNoteTextStyleSet() arenow
supported.
CreoParametric TOOLKITSupportforCreoApplications
CreoParametric TOOLKITapplications insynchronous andasynchronous modes
aresupported onlywiththeCreoParametric application. Theyarenotsupported
withtheotherCreoapplications, suchas,CreoDirect,CreoLayout,Creo
Simulate,andsoon.InfuturetheseCreoapplications willbesupported byCreo
ObjectTOOLKIT.InCreo3.0,CreoObjectTOOLKITsupportsCreoParametric
andCreoDirect.
Thefunctions ProEngineerConnect() andProEngineerStart()
returnanerrorwhentheCreoParametric TOOLKITapplication attemptsto
connecttoaCreoapplication otherthanCreoParametric. RefertothesectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctions ProEngineerConnect() andProEngineerStart()
returnanerrorwhentheCreoParametric TOOLKITapplication attemptsto
connecttoaCreoapplication otherthanCreoParametric. Refertothesection
CreoParametric TOOLKITSupportforCreoApplications inCreoParametric
TOOLKIT 3.0User’sGuide.
2046 Creo®Parametric TOOLKIT User’sGuideRetrievingSolidsinaCreoParametric sessionLinkedto
Windchill
YoumustretrievesolidmodelsinaCreoParametric session,whichislinkedto
Windchill,onlyafteryoucreateanewworkspace. Ifyouretrievethemodels
beforecreatingtheworkspace, themodelswouldbeerasedfromtheCreo
Parametric session.
SpreadAngleSetUsingProLightSourcesSet()
Thefunction ProLightSourcesSet() usedtosetthespreadangleasdouble
ofthespecifiedangleforspotlights.Thefunctiontreatedthespecifiedangleas
halfangle.ThisissuehasbeenfixedinCreoParametric 2.0M030.
Thefunctionnowtreatsthespecifiedangleasthefullspreadangleofthespot
lightandsetsitcorrectlytothespecifiedvalue.Thespreadangleofthespotlightxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhalfangle.ThisissuehasbeenfixedinCreoParametric 2.0M030.
Thefunctionnowtreatsthespecifiedangleasthefullspreadangleofthespot
lightandsetsitcorrectlytothespecifiedvalue.Thespreadangleofthespotlight
isthetotalangleencompassed bythelight.
StructuralTemperature LoadonPointReferences
FromCreoParametric 2.0M120onward,youcannotcreatestructuraltemperature
loadsonpointreferences usingCreoParametric TOOLKITapplications. This
functionality hasbeendeprecated inCreoParametric TOOLKITasitisnolonger
supported inCreoParametric userinterface.
Ifyourapplications usestructuraltemperature loadsonpointreferences, youmust
specifyotherreferences, suchas,curvesorsurfaces,andrebuildyour
applications. Theexistingstructuraltemperature loadsonpointreferences inCreo
Parametric TOOLKITapplications andmodelsaresuppressed.
SupportforCreoUnite
CreoUniteenablesyoutoopennon-Creopartsandassemblies inCreo
applications withoutcreatingseparateCreomodels.
Youcanopenthepartandassemblymodelsofthefollowingnon-CreofilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSupportforCreoUnite
CreoUniteenablesyoutoopennon-Creopartsandassemblies inCreo
applications withoutcreatingseparateCreomodels.
Youcanopenthepartandassemblymodelsofthefollowingnon-Creofile
formatsinCreoapplications:
•CATIAV5(.CATPart, .CATProduct)
•CATIAV5CGR
•CATIAV4(.Model)
•SolidWorks(.sldasm, .sldprt)
•NX(.prt)
•CreoElements/Direct (.sdpc, .sdac, .sdcc,and.sdrc)
TechnicalSummaryofChanges 2047FromCreoParametric 4.0F000onward,thefollowingCreoElements/Direct
filescanbeopenedinCreoParametric andotherCreoapplications suchas
CreoSimulateandCreoDirectwithoutcreatingseparateCreomodels:
○Partcontentfile(.sdpc)
○Assembly contentfile(.sdac)
TosupportCreoElements/Direct inCreoUnite,twonewvalues PRO_CC_
ASSEMBLY andPRO_CC_PART havebeenaddedtotheenumerated datatype
ProMdlfileType.
Thenon-Creopartsandassemblies areopenedascomponents ofCreoassemblies.
Thesepartsandassemblies canbeassembled inCreoapplications tocreatemulti-
CADassemblies ofmixedcontent.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMdlfileType.
Thenon-Creopartsandassemblies areopenedascomponents ofCreoassemblies.
Thesepartsandassemblies canbeassembled inCreoapplications tocreatemulti-
CADassemblies ofmixedcontent.
MostoftheCreoParametric TOOLKITfunctionssupportmulti-CAD assemblies.
Thefunctionswhichdonotsupportassemblies ofmixedcontentreturntheerror
typePRO_TK_UNSUPPORTED, whenanon-Creopartorassemblyispassedas
theinputmodel.
Whenusingthefunction ProFeatureWithoptionsCreate() while
workingwithamulti-CAD model,thefollowingscenariosarepossibledepending
onthevalueoftheconfiguration option confirm_on_edit_foreign_
models.Thedefaultvalueoftheconfiguration option confirm_on_edit_
foreign_models isyes.
•Iftheconfiguration option confirm_on_edit_foreign_models isset
tono,thenon-Creomodelismodifiedwithoutanynotification.
•Iftheconfiguration option confirm_on_edit_foreign_models isset
toyes,ortheoptionisnotdefinedintheconfiguration file,theninbatchmode
theapplication returnstheerrorPRO_TK_GENERAL_ERROR.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Iftheconfiguration option confirm_on_edit_foreign_models isset
toyes,ortheoptionisnotdefinedintheconfiguration file,theninbatchmode
theapplication returnstheerrorPRO_TK_GENERAL_ERROR.
•Insomesituationsyoumayneedtoprovideinputintheinteractive modewith
Creo.RefertotheCreoParametric DataExchange onlinehelp,formore
information.
SupportforMulti-ByteCharacters inModelNamesandFile
Paths
FromCreoParametric 4.0F000onward,theCreoParametric TOOLKITfunctions
supportsomemulti-byte characters infilenamesandfilepathsofthemodels.The
localfilepathscancontainamaximum of260characters.
InreleasespriortoCreoParametric 4.0F000,theCreoParametric TOOLKIT
applications couldhavebeenwrittenbasedonsingle-byte charactersupportfor
modelnames.Formulti-byte characters, theseapplications mayincorrectly
convert wchar_t basednamestringintocharbuffersofinsufficientlength.
Therefore, suchapplications mayhavetoberewrittenorrebuilttoworkwith
multi-byte characters.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconvert wchar_t basednamestringintocharbuffersofinsufficientlength.
Therefore, suchapplications mayhavetoberewrittenorrebuilttoworkwith
multi-byte characters.
2048 Creo®Parametric TOOLKIT User’sGuideThefollowingmulti-byte characters aresupported:
•Allcharacters fromUnicodecodepoint0800onward.
•Thefollowingcharacters fromUnicodecodepoints0000to0070Fare
supported. Alltheothercharacters betweenUnicodecodepoints0000to
0070Farenotsupported.
○AtoZ
○atoz
○0to9
○_Underscore
○–Hyphen
NewLibraries
FromCreoParametric 4.0F000onward,thefollowinglibrariesarenolonger
supported andwillnotbeshipped.Equivalent newlibrariesareavailable.When
youmigrateanapplication toCreoParametric 4.0,relinkittothenewlibraries,
andrebuildtheapplication. Thenewlibrariesavoidlinkingoftheapplication to
Unicodelibraries.
OldLibraryName NewLibraryName
protk_dll.lib protk_dll_NU.lib
protoolkit.lib protoolkit_NU.lib
protk_dllmd.lib protk_dllmd_NU.lib
protkmd.lib protkmd_NU.lib
Thefollowingnewimportlibrariesanddllshavebeenadded:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprotk_dll.lib protk_dll_NU.lib
protoolkit.lib protoolkit_NU.lib
protk_dllmd.lib protk_dllmd_NU.lib
protkmd.lib protkmd_NU.lib
Thefollowingnewimportlibrariesanddllshavebeenadded:
•ucore.lib
•udata.lib
•ucore46.dll
•udata46.dll
UpdatestoEnumerated DataTypeProFitComputeSetup
FromCreoParametric 2.0M030onward,thefollowingvalueshavebeenaddedto
theenumerated datatypeProFitComputeSetup:
•PRO_FIT_PART_DETAILED—Computes interference betweenthepairsof
partsinanassembly,irrespective ofwhetherthevolumecanbecalculated
betweenthepairs.
•PRO_FIT_SUB_ASSEMBLY_DETAILED—Computes interference between
thepairsofsubassemblies inanassembly,irrespective ofwhetherthevolume
canbecalculated betweenthepairs.
TechnicalSummaryofChanges 2049UpdatestoEnumerated DataTypeProDtmaxisConstrT ype
FromCreoParametric 2.0onward,thefollowingvaluehasbeenaddedtothe
enumerated datatypeProDtmaxisConstrType:
•PRO_DTMAXIS_CONSTR_TYPE_PARALLEL—Positions thedatumaxis
paralleltotheselectedreference.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 2.0onward,thefollowingvaluehasbeenaddedtothe
enumerated datatypeProDtmaxisConstrType:
•PRO_DTMAXIS_CONSTR_TYPE_PARALLEL—Positions thedatumaxis
paralleltotheselectedreference.
UpdatestoErrorCodesforProFaminstanceAdd() and
ProFaminstanceCreate()
FromCreoParametric 2.0M010onward,thefunction
ProFaminstanceCreate() returnstheerrortypePRO_TK_E_NOT_FOUND
insteadofPRO_TK_NO_ERROR ifyoutrytocreatenewinstancehavingthesame
nameasthegenericmodel.
Thefunction ProFaminstanceAdd() returnstheerrortypePRO_TK_ABORT
ifyouaddaninstancehavingthesamenameasthegenericmodeltothefamily
table.FromCreoParametric 2.0M010,thiserrortypeisdocumented intheheader
fileProFaminstance.h.
UpdatestoErrorTypes
Following isthelistoftheerrortypesaddedtofunctions:
•ProFilesList()—The errortypePRO_TK_INVALID_DIR hasbeen
added.Itindicatesthatthedirectoryspecifiedfortheinputargument
directory_path isnotavaliddirectory.
•ProIntf3DFileWrite()—The errortypePRO_TK_NO_CHANGE hasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxadded.Itindicatesthatthedirectoryspecifiedfortheinputargument
directory_path isnotavaliddirectory.
•ProIntf3DFileWrite()—The errortypePRO_TK_NO_CHANGE has
beenadded.Itspecifiesthatthemodelwasnotexportedbecausetheup-to-
dateimageforthespecifiedCreoParametric sourcemodelalreadyexistsin
theheterogeneous designincontext(HDIC)format.
•ProIntfimportModelCreate()—The errortypePRO_TK_CANT_
OPENhasbeenadded.Itspecifiesthattheimportedfilecouldnotbeopened.
•ProIntfimportModelWithOptionsCreate() and
ProIntfimportModelWithProfileCreate()—The errortypePRO_
TK_INVALID_TYPE hasbeenadded.Itspecifiesthatthecombination ofthe
inputargumentsisinvalid.
•ProXsecGeometryArrayFree()—The errortypePRO_TK_BAD_
INPUTShasbeenadded.Itspecifiesthatthevaluefortheinputarray p_
geom_arr isNULL.
•ProXsecGeometryFree()—The errortypePRO_TK_BAD_INPUTS has
beenadded.Itspecifiesthatthevaluefortheinputarray xsec_geom is
NULL.
2050 Creo®Parametric TOOLKIT User’sGuide•ProCombstateAnnotationsAdd()—The errortypePRO_TK_NO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeenadded.Itspecifiesthatthevaluefortheinputarray xsec_geom is
NULL.
2050 Creo®Parametric TOOLKIT User’sGuide•ProCombstateAnnotationsAdd()—The errortypePRO_TK_NO_
CHANGEhasbeenadded.Itspecifiesthatthestatusofsomeannotations inthe
specifiedcombined stateitemhasnotchanged.
•ProFeatureInit()—The errortypePRO_TK_NOT_EXIST hasbeen
added.Itspecifiesthatthefeaturewiththespecifiedidentifierdoesnotexist.
•ProLayerItemInit()—The errortypePRO_TK_NOT_EXIST hasbeen
added.Itspecifiesthattheitemwiththespecifiedidentifierandtypedoesnot
existinthelayer.
•ProModelitemInit()—The errortypePRO_TK_NOT_EXIST hasbeen
added.Itspecifiesthattheitemwiththespecifiedidentifierandtypedoesnot
existinthemodel.
•ProSimprepSelect()—The errortypePRO_TK_USER_ABORT has
beenadded.Itspecifiesthattheuserhasquitthesimplified representation
selectionprocess.
•ProDimensionSymbolSet()—The errortypePRO_TK_NO_CHANGE
hasbeenadded.ItspecifiesthatthefunctionwillreturntheerrorPRO_TK_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectionprocess.
•ProDimensionSymbolSet()—The errortypePRO_TK_NO_CHANGE
hasbeenadded.ItspecifiesthatthefunctionwillreturntheerrorPRO_TK_
NO_CHANGE ifthespecifiedsymbolalreadyexistsforanotherdimension in
themodel.
•ProMechmaterialorientdataRotationGet()—The errortype
PRO_TK_INVALID_TYPE hasbeenadded.Itspecifiesthatthematerial
orientation datatypeisnotPRO_MECH_MATLORI_MODEL.
•ProMechmaterialorientdataRotationSet()—The errortype
PRO_TK_CANT_WRITE hasbeenadded.Itspecifiesthatthesubtypecannot
bechanged.
•ProDrawingViewSimplifiedGet()—The errortypePRO_TK_
INVALID_TYPE hasbeenadded.Itspecifiesthatthetopmodelfortheview
isnotasolid.
•ProEdgeVertexdataGet()—The errortypePRO_TK_INVALID_TYPE
hasbeenadded.Itspecifiesthattheselectededgeisnotvisibleincurrent
geometry.
•ProFamtableInit()—The errortypePRO_TK_UNSUPPORTED has
beenadded.Itspecifiesthatthefamilytablecannotbecreatedinthespecified
model.
•ProGtoldataValueSet() andProGtoldataPerUnitSet()—Thexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometry.
•ProFamtableInit()—The errortypePRO_TK_UNSUPPORTED has
beenadded.Itspecifiesthatthefamilytablecannotbecreatedinthespecified
model.
•ProGtoldataValueSet() andProGtoldataPerUnitSet()—The
errortypePRO_TK_NOT_VALID hasbeenadded.Itindicatesthatthe
specifiedtolerancevaluesarenotvalidforcreatingthegeometric tolerance.
•ProSurfaceAreaEval()—The errortypePRO_TK_OUT_OF_RANGE
hasbeenadded.Itspecifiesthatthecomputed surfaceareaistoosmall,almost
closetozero.
•ProMfgCreate()—The errortypePRO_TK_UNSUPPORTED hasbeen
added.Itspecifiesthatthemanufacturing objectwithsubtype PRO_
MFGTYPE_MACH_PART wasnotcreated.
TechnicalSummaryofChanges 2051•ProAnimframeObjRemove()—The errortypePRO_TK_E_NOT_FOUND
hasbeenadded.Itspecifiesthattheanimation objectisnotpresentinthe
specifiedanimation frame.
•ProSurfaceParamEval()—The errortypePRO_TK_E_NOT_FOUND
hasbeenadded.Itindicatesthatthespecifiedpointcannotbefoundprojected
onthespecifiedsurface.
•ProServerWorkspaceDelete()—The errortypePRO_TK_E_IN_USExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhasbeenadded.Itindicatesthatthespecifiedpointcannotbefoundprojected
onthespecifiedsurface.
•ProServerWorkspaceDelete()—The errortypePRO_TK_E_IN_USE
hasbeenadded.Itindicatesthattheworkspace isactive.
•ProMdlnameRetrieve() andProMdlFiletypeLoad()—The error
typePRO_TK_BAD_CONTEXT indicatesthatthefunctionisattempting to
retrieveamulti-CAD modelfromalocationotherthanactiveWindchill
server,whenanactiveconnection toaWindchillserverexists.Themulti-CAD
assemblymustberetrievedonlyfromtheactiveWindchillserver.
•ProDrawingPosToLocgrid()— Theerrortypes PRO_TK_NOT_EXIST
andPRO_TK_OUT_OF_RANGE havebeenadded.TheerrortypePRO_TK_
NOT_EXIST specifiesthatthelocationgridhasnotbeendefinedforthe
drawingsheet.TheerrortypePRO_TK_OUT_OF_RANGE specifiesthatthe
positionofthepoint,thatisthescreencoordinates pos,isoutsidethelocation
grid.
•ProElementReferencesGet()—The errortypePRO_TK_EMPTY has
beenadded.Itindicatesthatnoreferencevaluehasbeensetforthespecified
element.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgrid.
•ProElementReferencesGet()—The errortypePRO_TK_EMPTY has
beenadded.Itindicatesthatnoreferencevaluehasbeensetforthespecified
element.
•ProQuiltVolumeEval()—The errortypePRO_TK_INCOMPLETE has
beenadded.Itindicatesthatthemaximum numberofiterationsallowedto
evaluatethevolumehasbeenreached.
•ProNotePlacementSet()—The errortypePRO_TK_BAD_CONTEXT
hasbeenadded.Itindicatesthatthenotecannotbeplacedatthespecified
locationbecausethenotehasanannotation plane,whichisflattoscreenand
isnotcompatible withthespecifiedplacement point.
•ProNoteAttachFreeGet()—The errortypePRO_TK_E_NOT_FOUND
hasbeenadded.Itindicatesthatthespecifiednoteisattachedtoageometry,
thatis,thenoteisnotfreelylocated.
VisibilityofCrossSection
FromCreoParametric 4.0F000onward,whenacrosssectioniscreated,itisnot
displayedbydefaultinthemodel.Youmustcallthefunction
ProXsecMakeVisible() todisplaythecrosssection.
WhileportingCreoParametric TOOLKITapplications, whichhaveusedthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplayedbydefaultinthemodel.Youmustcallthefunction
ProXsecMakeVisible() todisplaythecrosssection.
WhileportingCreoParametric TOOLKITapplications, whichhaveusedthe
function ProXsecPlanarWithoptionsCreate() andhavebeencreatedin
releasespriortoCreoParametric 4.0F000,depending onwhetheryouwantthe
2052 Creo®Parametric TOOLKIT User’sGuidecrosssectiontobedisplayed, callthefunction ProXsecMakeVisible() in
yourapplications. ProXsecMakeVisible() displaysthecrosssectioninthe
model.
WindchillOperations inCreoParametric Runningin
Asynchronous Mode
ForWindchilloperations, suchas,registering aWindchillserver,managing
workspaces, andsoonyoucanrunCreoParametric innon-interactive mode,that
is,batchmodeapplication orasynchronous application. WhenCreoParametric
applications arerunninginasynchronous non-graphical mode,theyrequirelogin
credentials beforeexecution. Ifyouwanttooverridetherequirement ofspecifying
logincredentials forCreoParametric applications, settheenvironment variablexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcredentials beforeexecution. Ifyouwanttooverridetherequirement ofspecifying
logincredentials forCreoParametric applications, settheenvironment variable
PROWT_AUTH_MODE toPROWT_AUTH_UNATTENDED.
wmain()Function
CreoParametric TOOLKITapplication mustcontainitsownwmain() function
iftheapplication needstoreceivecommand-line argumentsaswchar_t, for
exampleiftheinputcontainsnon-usascii characters.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0F000.
Annotations
NewFunction Description
ProAnnotationByV iewShow()
ProAnnotationByFeatureShow()
ProAnnotationByComponentShow()Displaystheannotation inthespecified
view,forthespecifiedtypeoffeature
andcomponent.
ProAnnotationfeatElementCopy() Copiesandaddstheannotation element
tothespecifiedannotation feature.
ProCombstateAnnotationErase() Removesanannotation fromthe
displayforthespecifiedcombined
state.
ProDrawingAnnotationErase() Removesanannotation fromthe
displayforthespecifieddrawing.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProCombstateAnnotationErase() Removesanannotation fromthe
displayforthespecifiedcombined
state.
ProDrawingAnnotationErase() Removesanannotation fromthe
displayforthespecifieddrawing.
TechnicalSummaryofChanges 2053NewFunction Description
ProAnnotationLegacyConvert() Convertsfollowingannotations tothe
latestCreoParametric version:
•Annotations createdinreleases
priortoCreoParametric 4.0F000
•Annotations createdusingthe
deprecated functions
ProGtolCreate() or
ProSetdatumtagCreate()
ProMdlDatumT argetCreate() Createsanewdatumtargetannotation.
Assembly
NewFunction NewFunction
ProAsmcompMdlMdlnameGet() Retrievesthemodelnameandtypefor
thespecifiedcomponent.
ProAsmcompMdlnameCreateCopy() Createsanewcomponent inthe
assemblybycopyingacomponent from
anexistingmodel.
ProAsmSkeletonMdlnameCreate() Createsanewskeletonmodelandadds
ittothespecifiedassembly.
ProAsmcompMdldataGet() Retrievesthename,filetype,andtype
ofthemodelunderthespecified
assemblycomponent.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAsmSkeletonMdlnameCreate() Createsanewskeletonmodelandadds
ittothespecifiedassembly.
ProAsmcompMdldataGet() Retrievesthename,filetype,andtype
ofthemodelunderthespecified
assemblycomponent.
ProMdlVariantfeatAsmcomppathGet() Retrievesaspecialpointerfroman
inheritance featureorflexible
component, wherethepointer
represents thecomponent path.
ProAsmcompAllConstrRemove() Removesalltypesofconstraints
includinginterfaceconstraints forthe
specifiedassemblycomponent.
2054 Creo®Parametric TOOLKIT User’sGuideBOMBalloon
NewFunction Description
ProDwgtableCellRegionGet()
ProBomballoonCreate()
ProBomballoonAllCreate()
ProBomballoonByComponentCreate()
ProBomballoonByRecordCreate()CreatestheBOMballoons.
ProBomballoonClean() Cleansthedisplayandlocationofthe
BOMballoons.
Cabling
NewFunction Description
ProCablingNeutralwirelistImport() ImportsthePTCneutralwirelistfile
(.nwf)formatfileinthecurrent
session.
ProAssemblyHarnessesT opCollect() Returnsanarrayofhandlestothe
harnessespresentinthespecifiedtopxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(.nwf)formatfileinthecurrent
session.
ProAssemblyHarnessesT opCollect() Returnsanarrayofhandlestothe
harnessespresentinthespecifiedtop
levelassembly.
ProCableLocationsOnSegEndGet() Getsthestartandendlocationofeach
segmentforthespecifiedcable.
ProCableT apeFeatSpoolGet() Getsthespoolforthespecifiedtape
feature.
ProCablingIsHarness() Identifiesifthespecifiedmodelisa
harnesspart.
ProConnectorW ithAllParamsDesignate
()Designates acomponent inthe
assemblyasacablingconnector using
allthelogicalparameters.
ProCablesFromLogicalAllCreate() Createscablesandconductors from
logicalreferences. Ifthespoolfeature
isnotdefinedforacable,thenthis
functionalsocreatesspoolsforthesuch
cables.
TechnicalSummaryofChanges 2055CavityLayout
NewFunction Description
ProCavitylayoutLeaderMdlnameSet() Setstheleadermodelforthecavity
layout.
ProCavitylayoutModelMdlnamesGet() Getsthenamesofinstancesinapattern
whichwillbereplacedwithanother
pattern.
ProCavitylayoutModelMdlnamesSet() Setsthespecifiedinstancesinapatternxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlayout.
ProCavitylayoutModelMdlnamesGet() Getsthenamesofinstancesinapattern
whichwillbereplacedwithanother
pattern.
ProCavitylayoutModelMdlnamesSet() Setsthespecifiedinstancesinapattern
tobereplacedwithanotherpattern.
CombinedState
NewFunction Description
ProCombstateAnnotationsStateGet() Checksifthevisibilityofannotations is
controlled bycombined stateorlayers.
ProCombstateSupplGeomStateGet() Checksifthevisibilityof
supplementary geometryiscontrolled
bycombined stateorlayers.
ProCombstateIsPublished() Checksifthespecifiedcombined state
hasbeenpublishedtoCreoView.
ProCombstateIsDefault() Checksifthespecifiedcombined state
issetasthedefaultcombined state.
Configuration Option
NewFunction Description
ProConfigoptionGet() Retrievesthecurrentvalueforthe
specifiedconfiguration fileoption.
CopiedReferences
NewFunction Description
ProFeatureCopiedRefStateDetailsGet() Retrievesthestatusofcopied
references foraspecifiedfeatureusing
theenumerated datatype
ProCopiedRefStateDetails.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCopiedReferences
NewFunction Description
ProFeatureCopiedRefStateDetailsGet() Retrievesthestatusofcopied
references foraspecifiedfeatureusing
theenumerated datatype
ProCopiedRefStateDetails.
2056 Creo®Parametric TOOLKIT User’sGuideCreatingTools
NewFunction Description
ProToolFileRead() Createsanewtoolorredefinesan
existingtool.
ProToolFileWrite() Writesallinformation aboutthetool
intoafile.
CreoSimulate
NewFunction Description
ProMechcurveAncestorsGet() Retrievestheancestorcurves,thatis,
theactualCreoParametric geometry
curvesthatwereusedtoconstructthe
CreoSimulatecurve.
ProMechcontactinterfacedataFriction-
Set()Setsthetypeofthefrictionatthe
contactinterface,betweenthepairsof
nodes.
ProMechcontactinterfacedataFriction-
Get()Obtainsthetypeoffrictionpresentat
thecontactinterface.
CrossSection
NewFunction Description
ProXsecPlanarW ithoptionsCreate() Createsacrosssectionfeaturethrough
adatumplane.
ProXsecFlipGet() Retrievesthedirectioninwhichthe
crosssectionwasclipped.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCrossSection
NewFunction Description
ProXsecPlanarW ithoptionsCreate() Createsacrosssectionfeaturethrough
adatumplane.
ProXsecFlipGet() Retrievesthedirectioninwhichthe
crosssectionwasclipped.
ProXsecExcludeCompGet() Retrievesthestatusandpathofthe
assemblycomponents includedand
excludedforthespecifiedcrosssection.
ProAsmpathProarrayFree() Freesthememoryallocatedto
assemblycomponent path.
ProXsecCompXhatchStyleGet()
ProXsecCompXhatchStyleSet()Retrievesandsetsthehatchpatternfor
thespecifiedcrosssectioncomponent.
ProXsecOff setCreate() Createsanoffsetcrosssectionfroma
polyline.
ProXsecMakeV isible() Displaysthespecifiedcrosssectionin
themodel.
ProXsecIsV isible() Checksifthespecifiedcrosssectionis
displayedinthemodel.
TechnicalSummaryofChanges 2057DataExchange
NewFunction Description
ProOutputFileMdlnameW rite() Createsafileofthespecifiedtypefrom
datainCreoParametric.
Pro2dImportMdlnameCreate() Importstwo-dimensional geometry
filesandcreatesanewtwo-dimensional
model.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProOutputFileMdlnameW rite() Createsafileofthespecifiedtypefrom
datainCreoParametric.
Pro2dImportMdlnameCreate() Importstwo-dimensional geometry
filesandcreatesanewtwo-dimensional
model.
ProIntfSliceFileW ithOptionsMdlna-
meExport()Exportsthemodeltothespecified
tesellatedformat.
ProATBMdlnameV erify() ChecksifthespecifiedATBmodelis
out-of-date withthesourceCAD
model.
ProSolidShrinkwrapMdlnameCreate() Exportsthespecifiedsolidmodelasa
shrinkwrap model.
ProProductviewFormattedMdlnameEx-
port()Exportsadrawingtothespecifieduser-
definedCreoViewformat.
ProIntfimportModelW ithOptionsMdl-
nameCreate()Importsobjectsofotherformatsusinga
profileandcreatesanewmodelorset
ofmodelswiththespecifiednameand
representation.
DataExchange:ImportValidationScore
NewFunction Description
ProIntfimportV alidationscoreCalculate
()Calculates thevalidation scoreforthe
specifiedmodel.
ProIntfimportV alidationscoreGet() Retrievesthevalidation scoreforthe
specifiedmodel.
ProIntfimportV alidationpreferences-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx()Calculates thevalidation scoreforthe
specifiedmodel.
ProIntfimportV alidationscoreGet() Retrievesthevalidation scoreforthe
specifiedmodel.
ProIntfimportV alidationpreferences-
Load()Loadsthepreferences file
config.val fordatavalidation.
DataSharingFeatures
NewFunction Description
ProFeatureDSFDependencystateGet()
ProFeatureDSFDependencystateSet()Retrievesandsetsthedependency
statusforthedatasharingfeature.
2058 Creo®Parametric TOOLKIT User’sGuideDimensions
NewFunction Description
ProDimensionSimpleBreakCreate() Createsasimplebreakonanexisting
dimension witnessline.
ProDimensionJogCreate() Createsajogonanexistingdimension
witnessline.
ProDimensionIsSignDriven() Checksifadimensions usesnegative
signinitsvaluetoflipthedirection.
ProDimensionParentGet() Retrievestheparentdimension forthe
specifieddependent dimension.
ProDimensionW itnesslineErase() Erasesthespecifiedwitnesslinefroma
dimension.
ProDimensionW itnesslineShow() Showstheerasedwitnesslineofthe
specifieddimension.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifieddependent dimension.
ProDimensionW itnesslineErase() Erasesthespecifiedwitnesslinefroma
dimension.
ProDimensionW itnesslineShow() Showstheerasedwitnesslineofthe
specifieddimension.
ProDimensionElbowSet() Setsthelengthoftheelbowforthe
specifieddimension.
ProDimensionChamferT extGet()
ProDimensionChamferT extSet()Getsandsetsthedimension schemefor
thespecified45-degree chamfer
dimension.
ProDimensionChamferLeaderGet()
ProDimensionChamferLeaderSet()Getsandsetsthedisplaystyleofthe
leaderforthespecified45-degree
chamferdimension.
ProDimensionConfigGet()
ProDimensionConfigSet()Getsandsetsthedisplaystyleofthe
specified45-degree chamferdimension.
ProDimensionCanRegenerate() Checksifadrivendimension canbe
regenerated.
ProDimensionDisplayFormatGet()
ProDimensionDisplayFormatSet()Getsandsetstheformatinwhichthe
specifieddimension isdisplayed.
ProDimensionOriginSideGet()
ProDimensionOriginSideSet()Getsandsetsawitnesslineasoriginof
measurement forthespecified
dimension.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifieddimension isdisplayed.
ProDimensionOriginSideGet()
ProDimensionOriginSideSet()Getsandsetsawitnesslineasoriginof
measurement forthespecified
dimension.
ProDimensionArrowtypeSet() Setsthearrowtypeforthespecified
arrowinadimension.
ProDimensionDualOptionsGet()
ProDimensionDualOptionsSet()Getsandsetsthedisplayoptionsfora
dualdimension.
TechnicalSummaryofChanges 2059NewFunction Description
ProDimensionAdditionalRefsAdd()
ProDimensionAdditionalRefsGet()
ProDimensionAdditionalRefDelete()Adds,retrieves,anddeletessemantic
references inthespecifieddimension.
ProDrawingDimensionCreate() Createsadimension inthespecified
drawing.
DimensionText
NewFunction Description
ProDimensionT extWstringsGet()
ProDimensionT extWstringsSet()Getsandsetsthetextforthespecified
dimension.
DimensionTextStyle
NewFunction Description
ProDrawingDimensionT extstyleGet() Returnsthetextstyleassignedtothe
specifieddimension orreference
dimension.
DisplayingtheColorSelectionDialogBox
NewFunction DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNewFunction Description
ProDrawingDimensionT extstyleGet() Returnsthetextstyleassignedtothe
specifieddimension orreference
dimension.
DisplayingtheColorSelectionDialogBox
NewFunction Description
ProUIColorSelectionShow() Displaysthedialogboxusedtoselect
valuesforthered,green,blue(RGB).
Drawing
NewFunction Description
ProDrawingFormatSizeGet()
ProDrawingFormatSizeSet()Getsandsetsthesizeofthedrawing
formatinthespecifieddrawing.
ProDrawingDimensionsCleanup() Cleansthedisplayandlocationofthe
dimensions inthespecifieddrawing.
ProDrawingErasedviewSheetGet() Getsthenumberofthesheetwhich
containedtheviewthatwaserased.
ProDrawingT oleranceStandardGet()
ProDrawingT oleranceStandardSet()Getsandsetsthetolerancestandardfor
thespecifieddrawing.
2060 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProDwgtableByOriginRetrieve() Retrievesandplacesadrawingtablein
thedrawingatthespecifiedpoint.The
originofthetableispositioned atthe
specifiedpoint.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDwgtableByOriginRetrieve() Retrievesandplacesadrawingtablein
thedrawingatthespecifiedpoint.The
originofthetableispositioned atthe
specifiedpoint.
ProDtlsyminstdataIsInvisible() Checksifthespecifiedsymbolinstance
isinvisible.
ECADArea
NewFunction Description
ProElementEcadAreaProColorGet()
ProElementEcadAreaProColorSet()Getsandsetsthecolorofthespecified
ECADareaintheelement PRO_E_
ECAD_AREA_COLOR.
ExternalReferenceDependency
NewFunction Description
ProExtRefInfoExport() Printsadependency report.
ProExtRefIsDependency() Indicatesifthespecifiedreferenceisan
externaldependency .
ProExtRefDependencyIsBreakable() Indicatesifsomeofthedependencies
canbebroken.
ProExtRefBreakDependency() Breakstheexternalreferences fromthe
specifiedarray.
FileHandling
NewFunction NewFunction
ProFileMdlnameOpen(),
ProFileMdlfiletypeOpen()Opensthedialogboxtobrowse
directories andopenfiles.
ProFileMdlnameSave(),
ProFileMdlfiletypeSave()Opensthedialogboxtosavefiles.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNewFunction NewFunction
ProFileMdlnameOpen(),
ProFileMdlfiletypeOpen()Opensthedialogboxtobrowse
directories andopenfiles.
ProFileMdlnameSave(),
ProFileMdlfiletypeSave()Opensthedialogboxtosavefiles.
ProFileMdlnameParse() Retrievesthedirectorypath,filename,
extension, andversionfromthe
specifiedsinglewidecharacterstring.
TechnicalSummaryofChanges 2061Features
NewFunction Description
ProFeatureIsInFooter() Checksifthespecifiedfeatureis
currentlylocatedinthemodeltree
footer.
ProFeatureT oFooterMove() Movesthespecifiedfeatureintothe
regeneration footer.
ProFeatureFromFooterMove() Movesthespecifiedfeatureoutofthe
regeneration footer.
ProMdlFeatBackupOwnerNamesGet() Getsthenamesofthemodels,alongthe
modelpath,fromthetopmodeltothe
ownermodelforthespecifiedfeature.
ProMdlFeatBackupRefMdlNamesGet() Getsthenamesofthemodels,alongthe
modelpath,fromthetopmodeltothe
externalreferencemodelforthe
specifiedfeature.
GeometricTolerances
NewFunction Description
ProGtolLeftT extGet()
ProGtolLeftT extSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelpath,fromthetopmodeltothe
externalreferencemodelforthe
specifiedfeature.
GeometricTolerances
NewFunction Description
ProGtolLeftT extGet()
ProGtolLeftT extSet()
ProGtolBottomT extGet()
ProGtolBottomT extSet()Retrievesandassignsadditional textto
theleftandbottomofthespecified
geometric tolerancecontrolframe.
ProMdlGtolCreate() Createsanewgeometric tolerance.
ProGtolNameGet() Getsthenameofthegeometric
tolerance.
ProGtolTypeGet()
ProGtolTypeSet()Getsandsetsthetypeofgeometric
tolerance.
ProGtolTopModelGet() Retrievesthemodelthatownsthe
specifiedgeometric tolerance.
ProGtolReferencesGet() Retrievesthegeometric entities
referenced bythespecifiedgeometric
tolerance.
ProGtolAttachGet()
ProGtolAttachSet()Retrievesandsetstheattachment
optionsforthespecifiedgeometric
tolerance.
ProGtolAttachT ypeGet() Retrievesthetypeofattachment fora
geometric tolerance.
2062 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProGtolDatumReferencesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtolerance.
ProGtolAttachT ypeGet() Retrievesthetypeofattachment fora
geometric tolerance.
2062 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProGtolDatumReferencesGet()
ProGtolDatumReferencesSet()Retrievesandsetstheprimary,
secondary,andtertiarydatum
references forageometric tolerance.
ProGtolCompositeGet()
ProGtolCompositeSet()Retrievesandsetsthevalueanddatum
references forthespecifiedcomposite
geometric tolerance.
ProGtolValueStringGet()
ProGtolValueStringSet()Retrievesandsetsthevalueforthe
specifiedgeometric tolerance.
ProGtolSymbolStringGet() Retrievesthestringvalueinthe
specifiedfontforthegeometric
tolerancesymbol.
ProGtolCompositeShareRefGet() Checksifthedatumreferences are
sharedbetweenalltherowsdefinedin
thecomposite geometric tolerance.
ProGtolCompositeShareRefSet() Specifiesifdatumreferences ina
composite geometric tolerancemustbe
sharedbetweenallthedefinedrows.
ProGtolAllAroundGet() ChecksiftheAllAroundsymbolhas
beensetforthespecifiedgeometric
tolerance.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomposite geometric tolerancemustbe
sharedbetweenallthedefinedrows.
ProGtolAllAroundGet() ChecksiftheAllAroundsymbolhas
beensetforthespecifiedgeometric
tolerance.
ProGtolAllAroundSet() SetstheAllAroundsymbolforthe
specifiedgeometric tolerance.
ProGtolAllOverGet() ChecksiftheAllOversymbolhasbeen
setforthespecifiedgeometric
tolerance.
ProGtolAllOverSet() SetstheAllOversymbolforthe
specifiedgeometric tolerance.
ProGtolAddlT extBoxedGet() Checksifaboxhasbeencreated
aroundthespecifiedadditional textina
geometric tolerance.
ProGtolAddlT extBoxedSet() Createsaboxaroundthespecified
additional textinageometric tolerance.
ProGtolReferencesAdd() Setsthedatumreferences forthe
specifiedgeometric tolerance.
ProGtolReferenceDelete() Deletesthespecifieddatumreferences
inthegeometric tolerance.
ProGtolAttachOf fsetItemGet()
ProGtolAttachOf fsetItemSet()Retrievesandsetstheoffsetreference
forthespecifiedgeometric tolerance
structure.
TechnicalSummaryofChanges 2063NewFunction DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGtolAttachOf fsetItemGet()
ProGtolAttachOf fsetItemSet()Retrievesandsetstheoffsetreference
forthespecifiedgeometric tolerance
structure.
TechnicalSummaryofChanges 2063NewFunction Description
ProGtolAttachAlloc() AllocatesaProGtolAttach
structure.
ProGtolAttachFree() FreestheProGtolAttach structure.
ProGtolAttachFreeGet()
ProGtolAttachFreeSet()Retrievesandsetstheannotation plane
andlocationoftextforafreetypeof
geometric tolerance.
ProGtolAttachLeadersGet()
ProGtolAttachLeadersSet()Retrievesandsetstheattachment
optionsforleadertypeofgeometric
tolerance.
ProGtolAttachOnDatumGet()
ProGtolAttachOnDatumSet()Retrievesandsetsthedatumsymbolfor
ageometric tolerance.
ProGtolAttachOnAnnotationGet()
ProGtolAttachOnAnnotationSet()Retrievesandsetstheannotation
associated withthegeometric tolerance.
ProGtolAttachMakeDimGet()
ProGtolAttachMakeDimSet()Retrievesandsetstheoptionsfora
geometric tolerancecreatedwithMake
Dimtypeofreference.
ProGtolBoundaryDisplayGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGtolAttachMakeDimGet()
ProGtolAttachMakeDimSet()Retrievesandsetstheoptionsfora
geometric tolerancecreatedwithMake
Dimtypeofreference.
ProGtolBoundaryDisplayGet()
ProGtolBoundaryDisplaySet()Checksandsetstheboundarymodifier
forthespecifiedgeometric tolerance.
ProGtolUnilateralGet()
ProGtolUnilateralSet()Checksandsetstheprofileboundaryas
unilateralforthespecifiedgeometric
tolerance.
ProGtolElbowlengthSet() Setstheelbowforthespecified
geometric tolerance.
ProGtolIndicatorsGet()
ProGtolIndicatorsSet()Retrievesandsetsindicators forthe
specifiedgeometric tolerance.
ProGtolValidate() Checksifthespecifiedgeometric
toleranceissyntactically correct.
Layers
NewFunction Description
ProLayerRuleExecute() Executesthelayerrulesonthe
specifiedmodel.
ProLayerRuleCopy() Copiesthelayerrulesfromareference
modeltothecurrentmodel.
ProLayerRuleMatch() Compares thelayerrulesbetweenthe
currentandreferencemodels.
2064 Creo®Parametric TOOLKIT User’sGuideNewFunction Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodeltothecurrentmodel.
ProLayerRuleMatch() Compares thelayerrulesbetweenthe
currentandreferencemodels.
2064 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProLayerDisplaystatusNoUpdateSet() Setsthedisplaystatusofalayer,
withoutupdatingthemodeltree.
ProLayerDisplaystatusUpdate() Updatesthemodeltreeforchangesin
thedisplaystatusesofallthelayersin
thespecifiedmodel.
LayerState
NewFunction Description
ProLayerstateActivestateUpdate() Updatesthelayerstatewhichisactive
inthemodel.
LearningConnector
NewFunction Description
ProLearningconnectorNotify() NotifiestheLearningConnector thatan
eventhasbeentriggeredfromaCreo
Parametric TOOLKITapplication.
Manufacturing
NewFunction Description
ProMfgMdlCreate() Createsamanufacturing objecthandle.
ProToolModelMdlnameGet() Getsthenameofthemodelassociated
withthespecifiedtool.
MeasuringGeometry
NewFunction Description
ProSelectionW ithOptionsDistanceEval
()Evaluatesthedistancebetweentwo
selecteditems.
Messages
NewFunction Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwiththespecifiedtool.
MeasuringGeometry
NewFunction Description
ProSelectionW ithOptionsDistanceEval
()Evaluatesthedistancebetweentwo
selecteditems.
Messages
NewFunction Description
ProMessageWstringbuf ferAlloc() Writesamessagewithanylengthtoan
internalbufferinsteadoftotheCreo
Parametric messagearea.
TechnicalSummaryofChanges 2065Model
NewFunction Description
ProMdlDependenciesCleanup() Cleansthedependencies foranobject
intheCreoParametric workspace.
ProMdlnameInit() Initializes theProMdlhandle.
ProMdlnameRename() Renamesthespecifiedmodel.
ProMdlnameCopy() Savesacopyofthemodelwiththe
specifiednewname. ProMdlfileMdlnameCopy()
ProMdlnameBackup() Savesacopyoftheobjectinmemory
toadiskinthespecifieddirectory.
ProMdlFiletypeLoad() Loadsthespecifiedobjectinthecurrent
session.
ProMdlDeclaredDataList() Retrievesthefirst-levelobjects
declaredforthespecifiedobject.
ProMdlDependenciesDataList() Retrievesthefirst-leveldependencies
foranobjectintheCreoParametric
workspace.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMdlDeclaredDataList() Retrievesthefirst-levelobjects
declaredforthespecifiedobject.
ProMdlDependenciesDataList() Retrievesthefirst-leveldependencies
foranobjectintheCreoParametric
workspace.
ProMdlnameRetrieve() Retrievesthespecifiedmodelin
memory.
ProMdlDisplaynameGet() Retrievesthenameofthemodel,which
isdisplayedintheCreoParametric user
interface.
ProPathMdlnameCreate() Createsasinglewidestringthat
identifiesthefile,fromtheinputssuch
as,path,filename,extension, and
version.
ProMdlFiletypeGet() Retrievesthefiletypeofthespecified
model.
ProFileSubtypeGet() Retrievesthefiletype,modeltypeand
subtype,whenthepathtoafileis
specifiedasinput.
ProMdlMdlnameGet() Retrievesthenameofthespecified
model.
ProMdlOriginGet() Retrievesthepathfromwherethe
specifiedmodelhasbeenopened.
ProMdlExtensionGet() Retrievesthefileextensionforthe
specifiedmodel.
2066 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProMdlDirectoryPathGet() Retrievesthefilepathwherethe
specifiedmodelwouldbesaved.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedmodel.
2066 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProMdlDirectoryPathGet() Retrievesthefilepathwherethe
specifiedmodelwouldbesaved.
ProMdlLocationIsStandard() Checksifthespecifiedmodelwas
openedfromastandardfilelocation
suchas,localdiskoramappeddriveon
aremotecomputer.
Notebook
NewFunction Description
ProLayoutRegenerate() Regenerates thespecifiednotebook(.
lay)file.
OrdinateDimension
NewFunction Description
ProDimensionAutoOrdinateCreate() Createsanordinatedimension
automatically fortheselectedsurfaces.
Parameters
NewFunction Description
ProParameterLockstatusGet()
ProParameterLockstatusSet()Getsandsetstheaccessstateofthe
specifiedparameter inthemodelusing
theenumerated datatype
ProLockstatus.
ProParameterV alueWithUnitsGet()
ProParameterV alueWithUnitsSet()Getsandsetsthevalueofaparameter
alongwithunits.
TechnicalSummaryofChanges 2067NewFunction Description
ProParameterCreateW ithUnitsPreAc-
tion()
ProParameterModifyW ithUnitsPreAc-
tion()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxalongwithunits.
TechnicalSummaryofChanges 2067NewFunction Description
ProParameterCreateW ithUnitsPreAc-
tion()
ProParameterModifyW ithUnitsPreAc-
tion()
ProParameterModifyW ithUnitsPostAc-
tion()
ProParameterDeleteW ithUnitsPostAc-
tion()Notification functionsthatarecalled
whenaparameter iscreated,modified,
anddeleted.
ProParameterUnitsAssign() Assignsthespecifiedunittoa
parameter.Itcanalsoconverta
parameter withunittoaunitless
parameter.
Piping
NewFunction Description
ProPipelineSpecDrivenCreate() CreatesaSpecification-Driven pipeline
feature.
ProPipelineCreateFromXML() Createsapipelinefeaturebasedonthe
schematic information definedinthe
XMLfileforthespecifiedpipeline
label.
ProPipelineCreate() CreatesaNonSpecification-Driven
pipelinefeature.
ProPipelineParametersCollect() Retrievesalltheparameters ofthe
specifiedpipeline.
ProPipelineParametersSet() Setstheparameters inthespecified
pipeline.
ProPipelineParameterAdd()
ProPipelineParameterDelete()Addsanddeletestheparameter inthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedpipeline.
ProPipelineParametersSet() Setstheparameters inthespecified
pipeline.
ProPipelineParameterAdd()
ProPipelineParameterDelete()Addsanddeletestheparameter inthe
specifiedpipeline.
WindchillOperators
NewFunction Description
ProFileCopyFromWSDocument() Copiesaprimaryorsecondary filefrom
theworkspace toalocationondisk.
ProFileselectionDocNameGet() Getsthenameoftheprimarydocument
forthelastselectedsecondary file.
2068 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProDocumentFileContentsRead() Readsthecontentsofthespecifiedfile,
whichcanbelocatedonthelocaldisk
orWindchill.
ProServerIsOnline() Checksifthespecifiedserverisonline
oroffline.
References
NewFunction Description
ProReferenceOwnerMdlnameGet() Getsthenameofthereferenceowner
forthereferenced geometryitem.
ProReferenceOriginalownerMdlname-
Get()Getsthenameoftheoriginalownerfor
thereferenced geometryitem.
Relations
NewFunction Description
ProRelationEvalW ithUnits() EvaluatesalineofarelationsetandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProReferenceOriginalownerMdlname-
Get()Getsthenameoftheoriginalownerfor
thereferenced geometryitem.
Relations
NewFunction Description
ProRelationEvalW ithUnits() Evaluatesalineofarelationsetand
outputstheresultingvaluewithitsunit.
ProRelsetUnitsSensitiveSet() Setstheconditionthatunitsmustbe
considered whilesolvingthespecified
relation.
ProRelsetIsUnitsSensitive() Checksifunitsmustbeconsidered
whilesolvingtherelation.
SettingtheDashboard Title
NewFunction Description
ProUIDashboardshowoptionsT itleSet()Setsthetitleofthedashboard.
SetDatum-DatumFeatureSymbol
NewFunction Description
ProMdlSetdatumtagCreate() Createsanewdatumfeaturesymbolin
thespecifiedsolidordrawing.
ProMdlSetdatumtagDelete() Deletesadatumfeaturesymbol.
ProSetdatumtagLabelGet()
ProSetdatumtagLabelSet()Getsandsetsthelabelforthespecified
datumfeaturesymbol.
ProSetdatumtagAdditionalT extGet() Getsandsetsadditional textforthe
TechnicalSummaryofChanges 2069NewFunction DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSetdatumtagLabelSet()Getsandsetsthelabelforthespecified
datumfeaturesymbol.
ProSetdatumtagAdditionalT extGet() Getsandsetsadditional textforthe
TechnicalSummaryofChanges 2069NewFunction Description
ProSetdatumtagAdditionalT extSet()specifieddatumfeaturesymbol.
ProSetdatumtagElbowGet()
ProSetdatumtagElbowSet()Getsandsetsthedisplayofaleaderin
thedatumfeaturesymboltohavean
elbow.
ProSetdatumtagASMEDisplayGet()
ProSetdatumtagASMEDisplaySet()Getsandsetsthedisplayofthe
specifieddatumfeaturesymbol
according totheASMEstandard.
ProSetdatumtagReferencesAdd()
ProSetdatumtagReferencesGet()
ProSetdatumtagReferenceDelete()Adds,retrieves,anddeletessemantic
references inthespecifieddatum
featuresymbol.
ProSetdatumtagT extLocationGet() Getsthelocationofthetextforthe
specifieddatumfeaturesymbol.
Sheetmetal
NewFunction Description
ProSmtBendsrfInfoGet() Collectsalltheinformation relatedto
thespecifiedbendsurface.
Shrinkwrap Features
NewFunction Description
ProFeatureIsShrinkwrapRefCopyGeomxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSheetmetal
NewFunction Description
ProSmtBendsrfInfoGet() Collectsalltheinformation relatedto
thespecifiedbendsurface.
Shrinkwrap Features
NewFunction Description
ProFeatureIsShrinkwrapRefCopyGeom
()Checksifthespecifiedfeatureisa
referencecopygeometryfeature,which
iscreatedbytheshrinkwrap feature.
ProFeatureShrinkwrapGetRefCopy-
Geoms()Getsanarrayofreferencecopy
geometryfeatures,whicharecreatedby
theshrinkwrap feature.
ProFeatureIsShrinkwrap() Checksifthespecifiedfeatureisa
shrinkwrap feature.
ProFeatureRefCopyGeomShrinkwrap-
Get()Getstheshrinkwrap featureforthe
specifiedreferencecopygeometry
feature.
ProSolidShrinkwrapMdlnameCreate() Exportsthespecifiedsolidmodelasa
shrinkwrap model.
2070 Creo®Parametric TOOLKIT User’sGuideSimplifiedRepresentations
NewFunction Description
ProMdlRepresentationFiletypeLoad() Retrievesthesimplified representation
ofamodel.
ProAssemblySimprepMdlnameRetrieve
()Retrievesthesimplified representation
fromanassembly.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNewFunction Description
ProMdlRepresentationFiletypeLoad() Retrievesthesimplified representation
ofamodel.
ProAssemblySimprepMdlnameRetrieve
()Retrievesthesimplified representation
fromanassembly.
ProSimprepMdlnameRetrieve() Retrievesgeometry,graphics,symbolic
simplified, boundarybox,default
envelope,andlightgraphics
representations insession.
SketchedFeatures
NewFunction Description
ProFeatureSketchedW ithOptionsCreate
()Createsafeaturefromtheelementtree
andalsocopiesthesketchedsectionsto
thenewfeature.
Solids
NewFunction Description
ProSolidToleranceStandardGet()
ProSolidToleranceStandardSet()Getsandsetsthetolerancestandardfor
thespecifiedsolid.
ProSolidMdlnameInit() Initializes theProSolid handleofthe
specifiedtypewiththespecifiedname.
ProSolidMdlnameCreate() Createsanemptypartorassemblywith
thespecifiedname.
ProSolidDtlsyminstsCollect() Collectssymbolinstancesusedinthe
specifiedsolid.
ProSolidDtlsymdefsCollect() Collectssymboldefinitions usedinthe
specifiedsolid.
Surfacesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedname.
ProSolidDtlsyminstsCollect() Collectssymbolinstancesusedinthe
specifiedsolid.
ProSolidDtlsymdefsCollect() Collectssymboldefinitions usedinthe
specifiedsolid.
Surfaces
NewFunction Description
ProMdlVisibleAppearancepropsGet()
ProMdlVisibleAppearancepropsSet()Getsandsetsthesurfaceproperties for
thespecifiedpart,assemblycomponent,
subassembly ,quiltorsurface.
ProMdlVisibleTexturepropsGet()
ProMdlVisibleTexturepropsSet()Getsandsetsthetextureproperties of
thesurfaceforthespecifiedpart,
TechnicalSummaryofChanges 2071NewFunction Description
assemblycomponent, subassembly ,
quiltorsurface.
ProMdlVisibleTextureplacementprops
Get()
ProMdlVisibleTextureplacementprops
Set()Getsandsetstheproperties relatedto
theplacingofsurfacetextureforthe
specifiedpart,assemblycomponent,
subassembly ,quiltorsurface.
ProSurfacePeriodicityGet() Getsinformation abouttheperiodicity
ofasurface.
SymbolDefinition
NewFunction Description
ProDtlsyminstDimattachGet() Retrievesthedimension towhichthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSurfacePeriodicityGet() Getsinformation abouttheperiodicity
ofasurface.
SymbolDefinition
NewFunction Description
ProDtlsyminstDimattachGet() Retrievesthedimension towhichthe
specifiedsymbolisattached.
TextProperties
NewFunction Description
ProTextStyleColorGetW ithDef()
ProTextStyleColorSetW ithDef()Retrievesandsetsthecolorforthe
specifiedtextobject.Thesefunctions
alsoretrieveandsetthedefaultcolor
fortextstyleobjects.
ProTextStyleFontGet()
ProTextStyleFontSet()Retrievesandsetthefontforthe
specifiedtext.
ProTextStyleValidate() Checkswhethertheproperties oftext
styleappliedtothespecifiedobject
typearevalid.
ProTextStyleVertJustificationGet()
ProTextStyleVertJustificationSet()Retrievesandsetsthevertical
justification forthespecifiedtextstyle
object.
ProDtlnotetextStyleGet()
ProDtlnotetextStyleSet()Retrievesandsetsthetextstyleforthe
specifiedtext.
ProDtlnotedataT extStyleGet()
ProDtlnotedataT extStyleSet()Retrievesandsetsthetextstyleforthe
specifiednote.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtlnotetextStyleSet()Retrievesandsetsthetextstyleforthe
specifiedtext.
ProDtlnotedataT extStyleGet()
ProDtlnotedataT extStyleSet()Retrievesandsetsthetextstyleforthe
specifiednote.
2072 Creo®Parametric TOOLKIT User’sGuideUserDefinedFeatures(UDF)
NewFunction Description
ProUdfmdlMdlnamesAlloc() Setsastructure,whichreturnsthenew
nameandtheoriginalname,forthe
newcomponents createdbytheUDF
placement.
UserInterface:Dialog
NewFunction Description
ProUITimerCreate() Createsatimerthatwillexecutethe
actionafterspecifiedtimeintervalin
CreoParametric.
ProUIDialogT imerStart() Startsthetimertoexecutetheaction
afterthespecifiedtimeinterval.
ProUIDialogT imerStop() Stopsthetimer.
ProUITimerDestroy() Removesthespecifiedtimer.
UserInterface:Graphics
NewFunction Description
ProDispObjectCreate() Createsadisplayobjectwhichcontains
triangleinformation.
ProDispObjectAttach()
ProDispObjectDetach()Attachesanddetachesadisplayobject
toaCreoParametric scene.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDispObjectCreate() Createsadisplayobjectwhichcontains
triangleinformation.
ProDispObjectAttach()
ProDispObjectDetach()Attachesanddetachesadisplayobject
toaCreoParametric scene.
ProDispObjectDelete() Deletesthespecifieddisplayobject.
ProDispObjectSetT ransform() Transforms thedisplayobjecttothe
specifiedlocation.
ProDispObjectSetSurfaceAppearance-
Props()Setsthedisplayproperties ofthe
displayobjectattachedtoascene.
UserInterface:Tree
NewFunction Description
ProUITreeUpdateActionSet() Setstheupdateactionforthetree.
ProUITreeStateGet()
ProUITreeStateSet()Getsandsetsthecheckedand
unchecked stateofaniteminthetree.
TechnicalSummaryofChanges 2073NewFunction Description
ProUITreeMixedStateGet()
ProUITreeMixedStateSet()Getsandsetstheindeterminate stateof
aniteminthetree.
ProUITreeLastentereditemGet() Getsthenameoftheitem,whichwas
lastpointedtobythepointer.
UserInterface(UI):Components
NewFunction Description
ProUICheckbuttonMinimumsizeGet()
ProUIDrawingareaMinimumsizeGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlastpointedtobythepointer.
UserInterface(UI):Components
NewFunction Description
ProUICheckbuttonMinimumsizeGet()
ProUIDrawingareaMinimumsizeGet()
ProUIInputpanelMinimumsizeGet()
ProUILabelMinimumsizeGet()
ProUILayoutMinimumsizeGet()
ProUIListMinimumsizeGet()
ProUIOptionmenuMinimumsizeGet()
ProUIProgressbarMinimumsizeGet()
ProUIPushbuttonMinimumsizeGet()
ProUIRadiogroupMinimumsizeGet()
ProUISliderMinimumsizeGet()
ProUISpinboxMinimumsizeGet()
ProUITabMinimumsizeGet()
ProUITableMinimumsizeGet()
ProUITextareaMinimumsizeGet()
ProUIThumbwheelMinimumsizeGet()
ProUITreeMinimumsizeGet()Returnstheminimumsizeforthe
heightandwidthofaUserInterface
(UI)Component.
ProNavigatorpanePHolderHelptextSet() Setsthehelptextforthenavigatorpane
component.
ProNavigatorpanePHolderDelete()
ProNavigatorpanePHolderShow()
ProNavigatorpanePHolderHide()Deletes,shows,andhidesthespecified
paneinthenavigation area.
2074 Creo®Parametric TOOLKIT User’sGuideVersionNumberoftheCreoParametric
NewFunction DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProNavigatorpanePHolderHide()Deletes,shows,andhidesthespecified
paneinthenavigation area.
2074 Creo®Parametric TOOLKIT User’sGuideVersionNumberoftheCreoParametric
NewFunction Description
ProEngineerReleaseNumericversionGet
()ReturnstheversionnumberoftheCreo
Parametric executable towhichthe
CreoParametric TOOLKITapplication
isconnected.
Views
NewFunction Description
ProViewNameLineGet() Getsthenameoftheview.
ProViewIdFromNameLineGet() GetstheIDoftheview.
Welds
NewFunction Description
ProMdlIsSolidW eld() Checksifthespecifiedsolidwas
createdfromsolidweld.
ProWeldGeomT ypeGet() Getsthetypeofgeometry
representation forthespecifiedweld.
Windows
NewFunction Description
ProObjectwindowMdlnameCreate() Opensanewwindowcontaining a
specifiedsolid.
ProAccessorywindowW ithTreeMdlna-
meCreate()Opensanaccessorywindowcontaining
thespecifiedobject.
ProBarewindowMdlnameCreate() Opensawindowcontaining the
specifiedobject.Thewindowdoesnot
haveanymenusortoolbar.
ProAccessorywindowAboveactivewin-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthespecifiedobject.
ProBarewindowMdlnameCreate() Opensawindowcontaining the
specifiedobject.Thewindowdoesnot
haveanymenusortoolbar.
ProAccessorywindowAboveactivewin-
dowSet()Displaystheaccessorywindowalways
abovetheactivewindow.
ZoneFeature
NewFunction Description
ProFeatureZonesectionGet() Returnsanarrayofzonereference
planes.
ProFeatureZonesectionW ithflipCreate() Createsazonefeaturehandlewithan
optiontoflipthedirectionofzone
TechnicalSummaryofChanges 2075NewFunction Description
planes.
ProFeatureZoneXsecgeomGet() Returnsanarrayofcrosssection
geometry.
ProFeatureZoneXsecGeomArrayFree()
ProZoneReferenceArrayFree()
ProZoneReferenceFree()Freesthememoryallocatedforthe
arrays.
Superseded Functions
Thissectiondescribesthesuperseded functionsforCreoParametric TOOLKIT
forCreoParametric 4.0F000.
Annotations
Superseded Function NewFunction
ProAnnotationErase() ProCombstateAnnotationErase()
ProAnnotationfeatDatumtar getCreate() ProMdlDatumT argetCreate()
Assembly
Superseded Function NewFunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations
Superseded Function NewFunction
ProAnnotationErase() ProCombstateAnnotationErase()
ProAnnotationfeatDatumtar getCreate() ProMdlDatumT argetCreate()
Assembly
Superseded Function NewFunction
ProAsmcompMdlNameGet() ProAsmcompMdlMdlnameGet()
ProAsmcompCreateCopy() ProAsmcompMdlnameCreateCopy()
ProAsmSkeletonCreate() ProAsmSkeletonMdlnameCreate()
CavityLayout
Superseded Function NewFunction
ProCavitylayoutLeaderSet() ProCavitylayoutLeaderMdlnameSet()
ProCavitylayoutModelnamesSet() ProCavitylayoutModelMdlnamesSet()
ProCavitylayoutModelnamesGet() ProCavitylayoutModelMdlnamesGet()
Configuration Option
Superseded Function NewFunction
ProConfigoptGet() ProConfigoptionGet()
2076 Creo®Parametric TOOLKIT User’sGuideCopiedReferences
Superseded Function NewFunction
ProFeatureCopiedRefStateGet() ProFeatureCopiedRefStateDetailsGet()
Enumerated datatype
ProCopiedRefStateEnumerated datatype
ProCopiedRefStateDetails
CrossSection
Superseded Function NewFunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProFeatureCopiedRefStateGet() ProFeatureCopiedRefStateDetailsGet()
Enumerated datatype
ProCopiedRefStateEnumerated datatype
ProCopiedRefStateDetails
CrossSection
Superseded Function NewFunction
ProXsecPlanarCreate() ProXsecPlanarW ithoptionsCreate()
DataExchange
Superseded Function NewFunction
ProOutputFileW rite() ProOutputFileMdlnameW rite()
Pro2dImportCreate() Pro2dImportMdlnameCreate()
ProIntfSliceFileW ithOptionsExport() ProIntfSliceFileW ithOptionsMdlna-
meExport()
ProATBVerify() ProATBMdlnameV erify()
ProSolidShrinkwrapCreate() ProSolidShrinkwrapMdlnameCreate()
ProProductviewFormattedExport() ProProductviewFormattedMdlnameEx-
port()
ProIntfimportModelCreate() ProIntfimportModelW ithOptionsCreate
()
ProIntfimportModelW ithOptionsCreate
()ProIntfimportModelW ithOptionsMdl-
nameCreate()
DataSharingFeatures
Superseded Function NewFunction
ProFeatureCopyGeomDependSet()
ProFeatureCopyGeomInDependSet()ProFeatureDSFDependencystateSet()
DetailNoteData
Superseded Function NewFunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDataSharingFeatures
Superseded Function NewFunction
ProFeatureCopyGeomDependSet()
ProFeatureCopyGeomInDependSet()ProFeatureDSFDependencystateSet()
DetailNoteData
Superseded Function NewFunction
ProDtlnotedataMirrorSet() ProTextStyleMirrorSet()
ProDtlnotedataIsMirrored() ProTextStyleMirrorGet()
ProDtlnotedataColorGet() ProTextStyleColorGetW ithDef()
TechnicalSummaryofChanges 2077Superseded Function NewFunction
ProDtlnotedataColorSet() ProTextStyleColorSetW ithDef()
ProDtlnotedataAngleGet() ProTextStyleAngleGet()
ProDtlnotedataAngleSet() ProTextStyleAngleSet()
ProDtlnotetextHeightGet() ProTextStyleHeightGet()
ProDtlnotetextHeightSet() ProTextStyleHeightSet()
ProDtlnotetextW idthGet() ProTextStyleW idthGet()
ProDtlnotetextW idthSet() ProTextStyleW idthSet()
ProDtlnotetextSlantGet() ProTextStyleSlantAngleGet()
ProDtlnotetextSlantSet() ProTextStyleSlantAngleSet()
ProDtlnotetextThicknessGet() ProTextStyleThicknessGet()
ProDtlnotetextThicknessSet() ProTextStyleThicknessSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtlnotetextSlantSet() ProTextStyleSlantAngleSet()
ProDtlnotetextThicknessGet() ProTextStyleThicknessGet()
ProDtlnotetextThicknessSet() ProTextStyleThicknessSet()
ProDtlnotetextFontGet() ProTextStyleFontGet()
ProDtlnotetextFontSet() ProTextStyleFontSet()
ProDtlnotedataJustifGet() ProTextStyleJustificationGet()
ProTextStyleVertJustificationGet()
ProDtlnotedataJustifSet() ProTextStyleJustificationSet()
ProTextStyleVertJustificationSet()
Dimensions
Superseded Function NewFunction
ProDimensionElbowlengthSet() ProDimensionElbowSet()
ProDimensionChamferstyleGet()
ProDimensionChamferstyleSet()ProDimensionChamferT extGet()
ProDimensionChamferT extSet()
ProDimensionChamferLdrstyleGet()
ProDimensionChamferLdrstyleSet()ProDimensionChamferLeaderGet()
ProDimensionChamferLeaderSet()
ProDimensionConfigurationGet()
ProDimensionConfigurationSet()ProDimensionConfigGet()
ProDimensionConfigSet()
ProDrawingDimensionT extstyleGet() ProAnnotationT extstyleGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDimensionConfigurationGet()
ProDimensionConfigurationSet()ProDimensionConfigGet()
ProDimensionConfigSet()
ProDrawingDimensionT extstyleGet() ProAnnotationT extstyleGet()
ProDimensionCanRegen() ProDimensionCanRegenerate()
ProDrawingDimCreate() ProDrawingDimensionCreate()
2078 Creo®Parametric TOOLKIT User’sGuideFamilyTableInstances
Superseded Function NewFunction
ProFaminstanceCreate() ProFaminstanceRetrieve()
FileHandling
Superseded Function NewFunction
ProFileOpen() ProFileMdlnameOpen(),
ProFileMdlfiletypeOpen()
ProFileSave() ProFileMdlnameSave(),
ProFileMdlfiletypeSave()
ProFilenameParse() ProFileMdlnameParse()
ProPathCreate() ProPathMdlnameCreate()
GeometricTolerances
Superseded Function NewFunction
ProGtolDataGet() NA
ProGtolEditCancel
ProGtolEditCommit()
ProGtolEditInit()NA
ProGtoldataT ypeGet() ProGtolTypeGet()
ProGtoldataT ypeSet() ProGtolTypeSet()
ProGtoldataOwnerGet() ProGtolTopModelGet()
ProGtoldataReferenceGet() ProGtolReferencesGet()
ProGtoldataPlacementGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGtoldataT ypeGet() ProGtolTypeGet()
ProGtoldataT ypeSet() ProGtolTypeSet()
ProGtoldataOwnerGet() ProGtolTopModelGet()
ProGtoldataReferenceGet() ProGtolReferencesGet()
ProGtoldataPlacementGet()
ProGtoldataPlaneGet()ProGtolAttachGet()
ProGtoldataModelGet() NA
ProGtoldataModelSet() NA
ProGtoldatumrefFree() NA
ProGtoldataGtoldatumrefGet()
ProGtoldatumrefGet()
ProGtoldatumrefT ranslationGet()ProGtolDatumReferencesGet()
ProGtoldatumrefAlloc()
ProGtoldatumrefT ranslationSet()
ProGtoldataGtoldatumrefSet()ProGtolDatumReferencesSet()
TechnicalSummaryofChanges 2079Superseded Function NewFunction
ProGtoldataCompositeGet() ProGtolCompositeGet()
ProGtoldataCompositeSet() ProGtolCompositeSet()
ProGtoldataV alueGet()
ProGtoldataUnitareaStyleGet()
ProGtoldataDispositionV alGet()ProGtolValueStringGet()
ProGtoldataV alueSet()
ProGtoldataUnitareaStyleSet()
ProGtoldataDispositionV alSet()ProGtolValueStringSet()
ProGtoldataPerUnitGet()
ProGtoldataPerUnitSet()ProGtolCompositeGet()
ProGtolCompositeSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGtoldataV alueSet()
ProGtoldataUnitareaStyleSet()
ProGtoldataDispositionV alSet()ProGtolValueStringSet()
ProGtoldataPerUnitGet()
ProGtoldataPerUnitSet()ProGtolCompositeGet()
ProGtolCompositeSet()
ProGtoldataT angentPlaneGet()
ProGtoldataDiameterGet()
ProGtoldataStatT olGet()
ProGtoldataFreeStateGet()
ProGtoldataMatCondGet()ProGtolValueStringGet()
ProGtolSymbolStringGet()
ProGtoldataT angentPlaneSet()
ProGtoldataDiameterSet()
ProGtoldataStatT olSet()
ProGtoldataFreeStateSet()
ProGtoldataMatCondSet()ProGtolSymbolStringGet()
ProGtolValueStringSet()
ProGtoldataASMEY1441Get()
ProGtoldataASMEY1441Set()NA
ProGtoldataProjZoneGet()
ProGtoldataProjZoneSet()NA
ProGtoldataAlloverGet() ProGtolAllOverGet()
ProGtoldataAlloverSet() ProGtolAllOverSet()
ProGtoldataAllAroundGet() ProGtolAllAroundGet()
ProGtoldataAllAroundSet() ProGtolAllAroundSet()
ProGtoldatumrefAlloc() ProGtolDatumReferencesSet()
ProGtoldataAlloc() NA
ProGtolCreate() ProMdlGtolCreate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGtoldataAllAroundSet() ProGtolAllAroundSet()
ProGtoldatumrefAlloc() ProGtolDatumReferencesSet()
ProGtoldataAlloc() NA
ProGtolCreate() ProMdlGtolCreate()
ProGtoldataReferenceSet() ProGtolReferencesAdd()
ProGtolReferenceDelete()
2080 Creo®Parametric TOOLKIT User’sGuideSuperseded Function NewFunction
ProGtoldataPlacementSet()
ProGtoldataPlaneSet()ProGtolAttachSet()
ProGtolValueSet() ProGtolValueStringSet()
ProGtoldataNumdigitsGet()
ProGtoldataNumdigitsSet()NA
ProGtoldataFree() NA
ProGtoldataNumdigitsGet()
ProGtoldataNumdigitsSet()NA
Manufacturing
Superseded Function NewFunction
ProMfgCreate() ProMfgMdlCreate()
ProToolModelGet() ProToolModelMdlnameGet()
Model
Superseded Function NewFunction
ProMdlInit() ProMdlnameInit()
ProMdlRename() ProMdlnameRename()
ProMdlCopy() ProMdlnameCopy()
ProMdlBackup() ProMdlnameBackup()
ProMdlRetrieve() ProMdlnameRetrieve()
ProMdlLoad() ProMdlFiletypeLoad()
ProMdlfileCopy() ProMdlfileMdlnameCopy()
ProMdlNameGet() ProMdlMdlnameGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMdlBackup() ProMdlnameBackup()
ProMdlRetrieve() ProMdlnameRetrieve()
ProMdlLoad() ProMdlFiletypeLoad()
ProMdlfileCopy() ProMdlfileMdlnameCopy()
ProMdlNameGet() ProMdlMdlnameGet()
ProMdlDataGet() ProMdlMdlnameGet(),
ProMdlOriginGet(),
ProMdlExtensionGet(),
ProMdlDirectoryPathGet()
ProMdlDeclaredList() ProMdlDeclaredDataList()
ProMdlDependenciesList() ProMdlDependenciesDataList()
ProMdlRepresentationLoad() ProMdlRepresentationFiletypeLoad()
TechnicalSummaryofChanges 2081Parameters
Superseded Function NewFunction
ProParameterV alueGet() ProParameterV alueWithUnitsGet()
ProParameterV alueSet() ProParameterV alueWithUnitsSet()
ProParameterCreatePreAction() ProParameterCreateW ithUnitsPreAc-
tion()
ProParameterModifyPreAction() ProParameterModifyW ithUnitsPreAc-
tion()
ProParameterModifyPostAction() ProParameterModifyW ithUnitsPostAc-
tion()
ProParameterDeletePostAction() ProParameterDeleteW ithUnitsPostAc-
tion()
CreoSimulate
ContactInterface
Superseded Function NewFunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtion()
ProParameterDeletePostAction() ProParameterDeleteW ithUnitsPostAc-
tion()
CreoSimulate
ContactInterface
Superseded Function NewFunction
ProMechcontactinterfacedataInfinite-
FrictionGet()ProMechcontactinterfacedataFriction-
Get()
ProMechcontactinterfacedataInfinite-
FrictionSet()ProMechcontactinterfacedataFriction-
Set()
References
Superseded Function NewFunction
ProReferenceOwnernameGet() ProReferenceOwnerMdlnameGet()
ProReferenceOriginalownernameGet() ProReferenceOriginalownerMdlname-
Get()
Relations
Superseded Function NewFunction
ProRelationEval() ProRelationEvalW ithUnits()
SetDatum-DatumFeatureSymbol
Superseded Function NewFunction
ProSetdatumtagCreate() ProMdlSetdatumtagCreate()
2082 Creo®Parametric TOOLKIT User’sGuideSimplifiedRepresentation
Superseded Function NewFunction
ProGraphicsSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProGeomSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProSymbSimprepRetrieve() ProSimprepMdlnameRetrieve()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSuperseded Function NewFunction
ProGraphicsSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProGeomSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProSymbSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProBoundaryBoxSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProDefaultEnvelopeSimprepRetrieve() ProSimprepMdlnameRetrieve()
ProLightweightGraphicsSimprepRe-
trieve()ProSimprepMdlnameRetrieve()
ProAssemblySimprepRetrieve() ProAssemblySimprepMdlnameRetrieve
()
ProPartSimprepRetrieve() ProSimprepMdlnameRetrieve()
SketchedFeatures
Superseded Function NewFunction
ProFeatureSketchedCreate() ProFeatureSketchedW ithOptionsCreate
()
Solids
Superseded Function NewFunction
ProSolidInit() ProSolidMdlnameInit()
ProSolidCreate() ProSolidMdlnameCreate()
TextStyle
Superseded Function NewFunction
ProTextStyleColorGet() ProTextStyleColorGetW ithDef()
ProTextStyleColorSet() ProTextStyleColorSetW ithDef()
UserDefinedFeature(UDF)
Superseded Function NewFunction
ProUdfmdlNamesAlloc() ProUdfmdlMdlnamesAlloc()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProTextStyleColorSet() ProTextStyleColorSetW ithDef()
UserDefinedFeature(UDF)
Superseded Function NewFunction
ProUdfmdlNamesAlloc() ProUdfmdlMdlnamesAlloc()
TechnicalSummaryofChanges 2083Views
Superseded Function NewFunction
ProViewNameGet() ProViewNameLineGet()
ProViewIdFromNameGet() ProViewIdFromNameLineGet()
Windows
Superseded Function NewFunction
ProObjectwindowCreate() ProObjectwindowMdlnameCreate()
ProAccessorywindowW ithTreeCreate() ProAccessorywindowW ithTreeMdlna-
meCreate()
ProBarewindowCreate() ProBarewindowMdlnameCreate()
MaterialTypeandMaterialSurfaceFinishTypesforFatigue
Analysis
FromCreoParametric 3.0onward,thematerialtypes PRO_MATERIAL_
FATIGUE_MAT_TYPE_UNALLOYED_STEELS andPRO_MATERIAL_
FATIGUE_MAT_TYPE_LOW_ALLOY_STEELS areobsolete.Usethematerial
typePRO_MATERIAL_FATIGUE_MAT_TYPE_FERROUS instead.The
followingsurfacefinishtypesforfatigueanalysisarealsoobsolete:
•PRO_MATERIAL_FATIGUE_FINISH_FORGED
•PRO_MATERIAL_FATIGUE_FINISH_WATER_CORRODEDxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtypePRO_MATERIAL_FATIGUE_MAT_TYPE_FERROUS instead.The
followingsurfacefinishtypesforfatigueanalysisarealsoobsolete:
•PRO_MATERIAL_FATIGUE_FINISH_FORGED
•PRO_MATERIAL_FATIGUE_FINISH_WATER_CORRODED
•PRO_MATERIAL_FATIGUE_FINISH_SEA_WATER_CORRODED
•PRO_MATERIAL_FATIGUE_FINISH_NITIRIDED
•PRO_MATERIAL_FATIGUE_FINISH_SHOT_PEENED
SupportforLegacyandNativeEncoding
FromCreoParametric 3.0onward,thefollowinglegacyandnativeencoding
functionshavebeendeprecated. Thesefunctionswillbeobsoletedinafuture
releaseofCreoParametric:
•ProNativestringToString()
•ProNativestringToWstring()
•ProStringToNativestring()
•ProStringToNativewstring()
•ProNativewstringToString()
•ProNativewstringToWstring()
•ProWstringToNativewstring()
2084 Creo®Parametric TOOLKIT User’sGuide•ProWstringToNativestring()
•ProLegacystringToString()
•ProStringToLegacystring()
•ProLegacystringToWstring()
•ProWstringToLegacystring()
•ProToolkitUnicodeencodingDisable()
•ProToolkitUnicodeencodingIsEnabled()
SupportforLegacyPro/TOOLKITFunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProStringToLegacystring()
•ProLegacystringToWstring()
•ProWstringToLegacystring()
•ProToolkitUnicodeencodingDisable()
•ProToolkitUnicodeencodingIsEnabled()
SupportforLegacyPro/TOOLKITFunctions
FromCreoParametric 4.0F000onward,thefollowingheaderfilesalongwith
theirfunctionshavebeenobsoleted:
•ProLayerR19.h
•ProAsmcompR20.h
•ProParameterRWildfire.h
•ProViewRWildfire2.h
Inyourapplications, youmustreplaceAPIsfromtheseheaderfileswith
recommended equivalent CreoParametric TOOLKITfunctions. Afterreplacing
theAPIs,youmustrebuildyourapplications.
Thefollowingtableliststheobsoletedandequivalent functions:
ObsoletedFunction NewFunction
Assembly
ProAsmcompR20.h
ProAsmcompPackageMoveR20() ProAsmcompPackageMove()
Layers
ProLayerR19.h
ProLayerCreateR19() ProLayerCreate()
ProLayerDeleteR19() ProLayerDelete()
ProLayerItemsGetR19() ProLayerItemsGet()
ProMdlLayerNamesGetR19() Contextual menuavailable
ProLayerDisplaystatusGetR19() ProLayerDisplaystatusGet()
ProLayerItemAddR19() ProLayerItemAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProLayerItemsGetR19() ProLayerItemsGet()
ProMdlLayerNamesGetR19() Contextual menuavailable
ProLayerDisplaystatusGetR19() ProLayerDisplaystatusGet()
ProLayerItemAddR19() ProLayerItemAdd()
ProLayerItemRemoveR19() ProLayerItemRemove()
ProLayerDisplaystatusSetR19() ProLayerDisplaystatusSet()
Parameters
ProParameterRWildfire.h
ProParameterSelectR Wildfire() ProParameterSelect()
Views
TechnicalSummaryofChanges 2085ObsoletedFunction NewFunction
ProViewRWildfire2.h
ProViewNamesGetR Wildfire2() ProViewNamesGet()
SupportforWindchillProductPoint
FromCreoParametric 3.0F000onward,theheaderfileProWpp.h alongwithits
functionshasbeenobsoletedasWindchillProductPoint isnolongersupported.
SupportforNotification EventsandCallbackFunctions
FromCreoParametric 3.0onward,thefollowingeventsandcallbackfunctions
havebeendeprecated. Youmustusetheneweventsandcallbackfunctions
instead.
Superseded Event
typeNewEventtype Superseded Callback
typedefNewCallbacktypedef
Pre-fileManagement Eventsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhavebeendeprecated. Youmustusetheneweventsandcallbackfunctions
instead.
Superseded Event
typeNewEventtype Superseded Callback
typedefNewCallbacktypedef
Pre-fileManagement Events
PRO_MDL_SAVE_PRE PRO_MODEL_SAVE_
PREProMdlSavePreAc
tionProModelSavePreAc
tion
PRO_MDL_COPY_PRE PRO_MODEL_COPY_
PREProMdlCopyPreAc
tionProModelCopyPreAc
tion
PRO_MDL_RENAME_
PREPRO_MODEL_RENAME_
PREProMdlRenamePreAc
tionProModelRenamePre
Action
PRO_MDL_RETRIEVE_
PREPRO_MODEL_
RETRIEVE_PREProMdlRetrievePre
ActionProModelRetrieveP
reAction
Post-fileManagement Events
PRO_MDL_SAVE_POST PRO_MODEL_SAVE_
POSTProMdlSavePostAc
tionProModelSavePos
tAction
PRO_MDL_COPY_POST PRO_MODEL_COPY_
POSTProMdlCopyPostAc
tionProModelCopyPos
tAction
PRO_MDL_RENAME_
POSTPRO_MODEL_RENAME_
POSTProMdlRenamePos
tActionProModelRenamePos
tAction
PRO_MDL_ERASE_
POSTPRO_MODEL_ERASE_
POSTProMdlErasePostAc
tionProModelErasePos
tAction
PRO_MDL_RETRIEVE_
POSTPRO_MODEL_
RETRIEVE_POSTProMdlRetrievePos
tActionProModelRetrieve
PostActionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtAction
PRO_MDL_ERASE_
POSTPRO_MODEL_ERASE_
POSTProMdlErasePostAc
tionProModelErasePos
tAction
PRO_MDL_RETRIEVE_
POSTPRO_MODEL_
RETRIEVE_POSTProMdlRetrievePos
tActionProModelRetrieve
PostAction
PostAllFileManagement Events
PRO_MDL_SAVE_
POST_ALLPRO_MODEL_SAVE_
POST_ALLProMdlSavePostAl
lActionProModelSavePos
tAllAction
PRO_MDL_COPY_
POST_ALLPRO_MODEL_COPY_
POST_ALLProMdlCopyPostAl
lActionProModelCopyPos
tAllAction
PRO_MDL_ERASE_
POST_ALLPRO_MODEL_ERASE_
POST_ALLProMdlErasePostAl
lActionProModelErasePos
tAllAction
PRO_MDL_RETRIEVE_
POST_ALLPRO_MODEL_
RETRIEVE_POST_ALLProMdlRetrievePos
tAllActionProModelRetrieve
PostAllAction
FileManagement FailedEvents
PRO_MDL_DBMS_
FAILUREPRO_MODEL_DBMS_
FAILUREProMdlDbmsFailure
ActionProModelDbmsFailu
reAction
2086 Creo®Parametric TOOLKIT User’sGuideSupportforPro/INTRALINK 3.4Functions
FromCreoParametric 1.0,M050onward,thefollowingPro/INTRALINK 3.4
functionshavebeendeprecated. Thecorresponding functionscanbeusedonly
aftermigratingtoPro/INTRALINK 10.0.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 1.0,M050onward,thefollowingPro/INTRALINK 3.4
functionshavebeendeprecated. Thecorresponding functionscanbeusedonly
aftermigratingtoPro/INTRALINK 10.0.
Superseded Function NewFunction
ProCurrentW orkspaceGet() ProServerW orkspaceGet()
ProServerW orkspacesCollect()
ProWorkspaceRegister() ProServerRegister()
ProObjModelsCheckOut() ProServerObjectsCheckout()
ProServerMultiobjectsCheckout()
ProEngineerConnectWS() ProEngineerConnect()
ProObjRenamedInWSSessionSync() Noequivalent function
ProWorkspaceStatusUpdate() Noequivalent function
SupportforPro2dCadamImportCreate()
Theobsoletefunction Pro2dCadamImportCreate() hasbeenremovedfrom
theheaderfileProUtil.h.
SupportforProMirrorGeometry .h
FromCreoParametric 2.0M070onward,theheaderfile
ProMirrorGeometry.h isnolongersupported. Usetheheaderfile
ProFlexMirror.h insteadtomirrorgeometry.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0F000canaffectthefunctionalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMirrorGeometry.h isnolongersupported. Usetheheaderfile
ProFlexMirror.h insteadtomirrorgeometry.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0F000canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
AddingSketchConstraints asLayerItem
FromCreoParametric 3.0onward,anewvalue PRO_LAYER_SKETCH_
CONSTRAINT hasbeenaddedtotheenumerated datatypeProLayerType in
theheaderfileProLayer.h. Youcannowspecifytheconstraints onasketchas
alayeriteminlayouts.
TechnicalSummaryofChanges 2087AdditionalConstraints, Midplane,Bisector1andBisector2
AddedforDatumPlaneCreation
FromCreoParametric 4.0F000onward,thefollowingnewconstraints havebeen
addedtotheenumerated datatypeProDtmplnConstrType:
•PRO_DTMPLN_MIDPLN—Places thenewdatumplanehalfwaybetweentwo
parallelreferences, orplacesittobisecttheangleformedbytwononparallel
references.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaddedtotheenumerated datatypeProDtmplnConstrType:
•PRO_DTMPLN_MIDPLN—Places thenewdatumplanehalfwaybetweentwo
parallelreferences, orplacesittobisecttheangleformedbytwononparallel
references.
•PRO_DTMPLN_BISECTOR1—Places thenewdatumplanetobisecttheα
angleformedbythetworeferences.
•PRO_DTMPLN_BISECTOR2—Places thenewdatumplanetobisectthe
(180°-α)angleformedbythetworeferences.
AdditionalDisplayFormatforDimensionTolerance
FromCreoParametric 4.0F000onward,anadditional displayformat PRO_DIM_
TOL_BASIC hasbeenaddedtotheenumerated datatype
ProDimToleranceType fordimension tolerance.Thisoptionenablesyouto
displaythedimensions asbasicdimensions. Tolerancesarenotdisplayedinbasic
dimensions.
AddingTableColumnandRowValuesasaFraction
FromCreoParametric 2.02.0M210onward,anewvalue PRODWGTABLESIZE_
CHARS_TRUE hasbeenaddedtotheenumerated datatype
ProDwgtableSizetype. Thisoptionenablesyoutospecifyafractionalvalue
forthewidthofacolumnandheightofarow.Thesizeissetincharacters.
ArcLengthAddedasDimensionTypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDwgtableSizetype. Thisoptionenablesyoutospecifyafractionalvalue
forthewidthofacolumnandheightofarow.Thesizeissetincharacters.
ArcLengthAddedasDimensionType
FromCreoParametric 4.0F000onward,anewtypeofdimension
PRODIMTYPE_ARC_LENGTH hasbeenaddedtotheenumerated datatype
ProDimensiontype. Thevalueindicatesarclengthtypeofdimension.
ChangeintheDurationforProUIDialogT imerStart()
FromCreoParametric 2.0M180onward,inthefunction
ProUIDialogTimerStart() theminimumtimeintervalfortheinput
argument duration hasbeenchangedfrom500milliseconds to100
milliseconds.
2088 Creo®Parametric TOOLKIT User’sGuideCappingandAttachinganExtrudeandRevolveThin
Feature
FromCreoParametric 4.0F000onward,anewelement PRO_E_FEAT_THIN has
beenaddedtotheextrudeandrevolveelementtrees,whicharedefinedinthe
headerfilesProExtrude.h andProRevolve.h respectively .Theelement
enablesyoutospecifyhowathinextrudedorthinrevolvedfeaturemustbe
cappedandattachedtothesolidgeometryofamodel.
ChamferLeaderStylexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxheaderfilesProExtrude.h andProRevolve.h respectively .Theelement
enablesyoutospecifyhowathinextrudedorthinrevolvedfeaturemustbe
cappedandattachedtothesolidgeometryofamodel.
ChamferLeaderStyle
FromCreoParametric 4.0F000onward,anewdisplaystylePRO_DIM_CHMFR_
LEADER_STYLE_LINEAR hasbeenaddedtotheenumerated datatype
ProDimChamferLeaderStyle. Youcansetlinearstyleofdisplayforleaders
ofchamferdimensions.
CreatingDimensions withIntersection TypeofReference
FromCreoParametric 3.0onward,youcancreatedimensions thathave
intersection typeofreference. Thefunctions ProDimensionCreate(),
ProDimensionAttachmentsGet(),
ProDimensionAttachmentsSet(), andProDrawingDimCreate()
supportdimensions withintersection typeofreference.
Configuration FlagtoIncludeAnnotations DuringExportof
CreoParametric Models
FromCreoParametric 3.0onward,anewconfiguration flagPRO_EXPORT_
INCLUDE_ANNOTATIONS hasbeenadded.Theflagincludesannotations during
theexportofCreoParametric modeltothespecifiedformat.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 3.0onward,anewconfiguration flagPRO_EXPORT_
INCLUDE_ANNOTATIONS hasbeenadded.Theflagincludesannotations during
theexportofCreoParametric modeltothespecifiedformat.
Configuration OptionforDisplayingAccessoryWindowon
Top
FromCreoParametric 2.0M100onward,anewconfiguration option
accessory_window_above allowsyoutocontrolthedisplayofaccessory
windowontopoftheactivewindow.
DisplayStyleforViews
FromCreoParametric 3.0M010onward,anewdisplaytypePRO_DISPSTYLE_
SHADED_WITH_EDGES hasbeenaddedtotheenumerated datatype
ProDisplayStyle. Thisoptionallowsyoutodisplaythemodelasashaded
solidalongwithitsedges.
TechnicalSummaryofChanges 2089DraftAngleandTaperAngleDuringExtrude
FromCreoParametric 3.0onward,youcanspecifythedraftangleindraftfeature
andthetaperangleinextrudefeatureintherangeof-89.9to89.9degrees.
ElementstoSetthePropertiesofaDatumCoordinate
SystemFeature
FromCreoParametric 4.0F000onward,thefollowingelementshavebeenaddedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandthetaperangleinextrudefeatureintherangeof-89.9to89.9degrees.
ElementstoSetthePropertiesofaDatumCoordinate
SystemFeature
FromCreoParametric 4.0F000onward,thefollowingelementshavebeenadded
intheelementtreeforDatumCoordinate Systemfeaturedefinedintheheaderfile
ProDtmCsys.h:
•PRO_E_CSYS_NAME_DISPLAY_OPT—Specifies ifthenameofthedatum
coordinate systemmustbedisplayedinthegraphicswindow.
•PRO_E_CSYS_DISPLAY_ZOOM_DEP_OPT—Specifies ifthesizeofthe
coordinate systemisdependent onthezoomofthemodel.
•PRO_E_CSYS_AXIS_LENGTH—Specifies thedefaultlengthforthe
coordinate systemaxes.
ExtrudinguptotheOffsetorTranslationofaReference
Element
FromCreoParametric 4.0F000onward,theextrudeoption PRO_EXT_DEPTH_
TO_REF,whichextrudesuptoaselectedpoint,curve,plane,orsurface,enables
youtospecifyanoffsetortranslation valuefromthereferenceelement.The
featurewillbeextrudeduptotheoffsetortranslation valuespecifiedforthe
selectedreferencepoint,curve,plane,orsurface.Theoffsetandtranslation valuesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeaturewillbeextrudeduptotheoffsetortranslation valuespecifiedforthe
selectedreferencepoint,curve,plane,orsurface.Theoffsetandtranslation values
canbespecifiedforSide1andSide2.Thefollowingnewelementshavebeen
addedtotheextrudeelementtree,whichisdefinedintheheaderfile
ProExtrude.h:
•PRO_E_EXT_DEPTH_TO_REF_TRF
•PRO_E_EXT_DEPTH_TO_REF_TRF_VAL
•PRO_E_EXT_DEPTH_FROM_REF_TRF
•PRO_E_EXT_DEPTH_FROM_REF_TRF_VAL
DataExchange
ThissectionexplainsthechangesinDataExchange.
ExportOptionwriteWhichFiles AddedtotheJTConfiguration File
FromCreo4.0F000onward,anewexportoption writeWhichFiles hasbeen
addedtotheJTconfiguration filejt.config. Theoptionenablesyoutospecify
iftheproductstructure,parts,ortheentireassemblywithpartsmustbeexported
toJTformat.
2090 Creo®Parametric TOOLKIT User’sGuideIncludeAnnotations intheExportofCreoParametricModelsasU3D
GraphicsinaPDFFile
FromCreoParametric 3.0onward,anewexportoption PRO_PDFOPT_INCL_
ANNOThasbeenaddedtotheenumerated datatypeProPDFOptionType. YouxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGraphicsinaPDFFile
FromCreoParametric 3.0onward,anewexportoption PRO_PDFOPT_INCL_
ANNOThasbeenaddedtotheenumerated datatypeProPDFOptionType. You
canspecifyifannotations mustbeincludedwhenaCreoParametric modelis
exportedasU3DgraphicsinaPDFfile.
ImportingSolidEdgePartandSheetMetalPartasFeatures
FromCreoParametric 3.0M020onward,youcanimportSoildEdgepartand
sheetmetalpartasfeatures.Toimport,usethefollowingvaluesaddedto
enumerated datatypeProIntfType:
•PRO_INTF_SE_PART
•PRO_INTF_SE_SHEETMETAL_PART
SupportColorOverrideDuringtheImportofSolidEdgeModels
FromCreoParametric 3.0M030onward,SolidEdgemodelsareimportedtoCreo
Parametric withtheircoloroverrides. Components withcoloroverridesatany
levelinanassemblystructurearesupported.
SupportImportofCreoElements/Direct DraftingFiles
FromCreoParametric 3.0onward,youcanimportandappendtheCreoElements/
Directdraftingfilesoftype.mi, .biand.bdlusingCreoParametric
TOOLKITfunctions Pro2dImportMdlnameCreate() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 3.0onward,youcanimportandappendtheCreoElements/
Directdraftingfilesoftype.mi, .biand.bdlusingCreoParametric
TOOLKITfunctions Pro2dImportMdlnameCreate() and
Pro2dImportAppend(). Youcanimportbasicdrawingentitiesandtheir
attributes, tolerances, sheets,layers,andsoonfromtheCreoElements/Direct
draftingfilestoCreoParametric drawingfile.
AnewdrawingfiletypePRO_CCD_DRAWING_FILE hasbeenaddedinthe
enumerated typeProImportExportFile forCreoElements/Direct drafting
files.
SupportExportofCreoParametricPartsandAssembliestoSolidWorks
FromCreoParametric 3.0onward,youcanexportCreoParametric partand
assemblymodelstoSolidWorksusingtheenumerated values:
•PRO_INTF_EXPORT_SW_PART
•PRO_INTF_EXPORT_SW_ASSEM
TechnicalSummaryofChanges 2091SupportExportofCreoParametricPartsandAssembliestoAdditive
Manufacturing FileFormat
FromCreoParametric 4.0F000onward,youcanexportCreoParametric partand
assemblymodelstoadditivemanufacturing file(AMF)formatusingthefunctionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxManufacturing FileFormat
FromCreoParametric 4.0F000onward,youcanexportCreoParametric partand
assemblymodelstoadditivemanufacturing file(AMF)formatusingthefunction
ProIntfSliceFileWithOptionsMdlnameExport(). Thenewfiletype
PRO_AMF_FILE addedtotheenumerated datatypeProImportExportFile
supportsexporttotheAMFformat.
SupportImportandExportofCrossSectionfromJTtoCreoParametric
FromCreoParametric 3.0onward,youcanimportandexporttheplanarandzonal
cross-sections ofpartandassemblymodelsbetweenJTandCreoParametric files.
SupportImportofClippingFeaturesfromCreoElements/Direct toCreo
Parametric
FromCreoParametric 3.0onward,youcanimporttheclippingfeaturesownedby
CreoElements/Direct partandassemblymodelsascross-sections inCreo
Parametric.
SupportImportofSolidEdgePart,SheetMetalPart,andAssemblyModels
toCreoParametric
FromCreoParametric 3.0M010onward,youcanimportSolidEdgepartand
assemblymodelstoCreoParametric usingtheenumerated values:
•PRO_INTF_IMPORT_SEDGE_PART
•PRO_INTF_IMPORT_SEDGE_ASSEMBLYxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoCreoParametric
FromCreoParametric 3.0M010onward,youcanimportSolidEdgepartand
assemblymodelstoCreoParametric usingtheenumerated values:
•PRO_INTF_IMPORT_SEDGE_PART
•PRO_INTF_IMPORT_SEDGE_ASSEMBLY
FromCreoParametric 3.0M020onward,youcanalsoimportaSolidEdgesheet
metalparttoCreoParametric. Toimport,usethevalue PRO_INTF_IMPORT_
SEDGE_SHEETMETAL_PART addedtotheenumerated datatype
ProIntfImportType.
SupportProductManufacturing Information(PMI)inCreoElements/Direct
andJTFiles
FromCreoParametric 3.0onward,youcanimport3Dnotesandbasicdimensions
assemanticrepresentation fromCreoElements/Direct andJTmodelstoCreo
Parametric models.
Youcanalsoexporttheseannotations assemanticrepresentation fromCreo
Parametric toJTmodels.
2092 Creo®Parametric TOOLKIT User’sGuideDocumentation UpdatedforElementPRO_E_TOOL_MTN_
TURN_CORNER_ARR
Theelementtreedocumentation fortheelement PRO_E_TOOL_MTN_TURN_
CORNER_ARR intheheaderfilesProMfgElemToolMtnProfTurn.h,
ProMfgElemToolMtnGrooveTurn.h, andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTURN_CORNER_ARR
Theelementtreedocumentation fortheelement PRO_E_TOOL_MTN_TURN_
CORNER_ARR intheheaderfilesProMfgElemToolMtnProfTurn.h,
ProMfgElemToolMtnGrooveTurn.h, and
ProMfgElemToolMtnAreaTurn.h hasbeenupdatedinCreoParametric 2.0
M110.Theelementisnowcorrectlydocumented asthechildofPRO_E_TOOL_
MTN_TURN_PROF.
Documentation UpdatedforPRO_LAYER_XSEC
ThelayeritemtypePRO_LAYER_XSEC definedinthedatatype
ProLayerType isnotsupported inCreoParametric TOOLKIT.The
documentation forPRO_LAYER_XSEC hasbeenupdatedintheheaderfile
ProFeature.h toreflectthis.
Documentation UpdatedforProAsmcompConstraintsSet()
Thedocumentation forthefunction ProAsmcompConstraintsSet() inthe
headerfileProAsmcomp.h hasbeenupdatedinCreoParametric 2.0M100to
correctlyreflectitsbehavior.
Documentation Updatedfor
ProCablingNeutralwirelistImport()
Thedocumentation forthefunction
ProCablingNeutralwirelistImport() intheheaderfile
ProCabling.h hasbeenupdatedinCreoParametric 2.0M130tocorrectlyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProCablingNeutralwirelistImport()
Thedocumentation forthefunction
ProCablingNeutralwirelistImport() intheheaderfile
ProCabling.h hasbeenupdatedinCreoParametric 2.0M130tocorrectly
reflectitsbehavior.Thefirstinputargumenthasbeenupdatedtodocument the
ProAssembly object.
Documentation Updatedfor
ProDimensionAnnotationelemCreate()
Thedocumentation forthefunction
ProDimensionAnnotationelemCreate() intheheaderfile
ProDimension.h hasbeenupdatedinCreoParametric 3.0M050toinclude
theerrortypePRO_TK_NOT_VALID. Theerrorindicatesthatthedriving
dimension annotation element(DDAE)wasnotcreatedbecausetheorientation
definedfortheannotation wasnotinfrozenstate.
TechnicalSummaryofChanges 2093Documentation UpdatedforProElementCollectionGet() and
ProElementCollectionSet()
Thedocumentation forthefunctions ProElementCollectionGet() and
ProElementCollectionSet() intheheaderfileProElement.h has
beenupdatedinCreoParametric 4.0F000.Thedocumentation forthefunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThedocumentation forthefunctions ProElementCollectionGet() and
ProElementCollectionSet() intheheaderfileProElement.h has
beenupdatedinCreoParametric 4.0F000.Thedocumentation forthefunctions
hasbeenupdatedtoreflectthecorrectelementtypePRO_E_STD_CURVE_
COLLECTION_APPL.
Documentation UpdatedforProMdlGtolV isit()
Thedocumentation forthefunction ProMdlGtolVisit() intheheaderfile
ProMdl.h hasbeenupdatedinCreoParametric 3.0M040toincludealltheerror
typesreturnedbythefunction.Theerrortypes PRO_TK_BAD_INPUTS, PRO_
TK_GENERAL_ERROR, andPRO_TK_E_NOT_FOUND havebeendocumented.
TheerrortypePRO_TK_BAD_INPUTS specifiesthatoneormoreinputsarenot
valid. PRO_TK_GENERAL_ERROR specifiesthatthefunctionvisithasbeen
stoppedbyavaluereturnedbythevisitaction. PRO_TK_E_NOT_FOUND
indicatesthattherearenovalidgeometric tolerances definedinthespecified
model.
Documentation UpdatedforProModelIsTIM() and
ProModelListTIMFeatures()
Thedocumentation forthefunctions ProModelIsTIM() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxindicatesthattherearenovalidgeometric tolerances definedinthespecified
model.
Documentation UpdatedforProModelIsTIM() and
ProModelListTIMFeatures()
Thedocumentation forthefunctions ProModelIsTIM() and
ProModelListTIMFeatures() intheheaderfileProATB.h hasbeen
updatedinCreoParametric 3.0tocorrectlyreflecttheirbehavior.
Documentation UpdatedforProServerObjectIsModified()
andProServerObjectStatusGet()
Thedocumentation fortheoutputarguments modifiedLocally and
modified forthefunctions ProServerObjectIsModified() and
ProServerObjectStatusGet() respectively wasincorrectintheheader
fileProWTUtils.h. Thedocumentation hasbeenupdatedinCreoParametric
2.0M070.Theargumentsreturn PRO_B_TRUE whentheobjectismodifiedand
savedinthelocalworkspace cache.
ECADAreaFeature
FromCreoParametric 3.0onward,theelement PRO_E_ECAD_AREA_COLOR
hasbeenaddedtotheECADareaelementtreewhichisdefinedintheheaderfile
ProEcadArea.h. ItspecifiesthecoloroftheECADarea.Thenewfunctions
ProElementEcadAreaProColorGet() andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhasbeenaddedtotheECADareaelementtreewhichisdefinedintheheaderfile
ProEcadArea.h. ItspecifiesthecoloroftheECADarea.Thenewfunctions
ProElementEcadAreaProColorGet() and
ProElementEcadAreaProColorSet() areusedtogetandsetthecolorfor
thiselement.
2094 Creo®Parametric TOOLKIT User’sGuideFromCreoParametric 3.0M040onward,anewtypeofECADareaPRO_ECAD_
AREA_TYPE_USER_DEFINED hasbeenaddedtotheenumerated datatype
ProEcadAreaType. Itspecifiesauser-defined area.Theelement PRO_E_
ECAD_AREA_USER_DEF_TYPE hasbeenaddedtotheECADareaelementtree
whichisdefinedintheheaderfileProEcadArea.h. Itspecifiesthenameofa
user-definedarea.
EditChamferFeature
Youcanmodifyanedgechamferfeatureusingtheelementtreeintheheaderfile
ProModifyChamfer.h.
Enhancement toFlangeorUnattached Wallfeature
FromCreoParametric 2.0onward,thefunctionality forflangefeature,or
unattached wallfeaturehasbeenenhancedandthedefaultvalueforthestepPRO_
E_SMT_WALL_SHARPS_TO_BENDS hasbeenchangedtoPRO_B_TRUE. ToxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 2.0onward,thefunctionality forflangefeature,or
unattached wallfeaturehasbeenenhancedandthedefaultvalueforthestepPRO_
E_SMT_WALL_SHARPS_TO_BENDS hasbeenchangedtoPRO_B_TRUE. To
retainearlierbehaviorofthefeature,setthedefaultvalueofthissteptoPRO_B_
FALSE.
Forwardcompatibility forlegacyToolkitapplications thatdonotexplicitlydefine
thestepPRO_E_SMT_WALL_SHARPS_TO_BENDS willbebroken.Towork
aroundthisissuesettheconfiguration option smt_add_bends_on_sharp_
edgestonointheCreoParametric sessionbeforerunningtheapplication.
Enhancement toHoleFeature
FromCreoParametric 4.0F000onward,thefollowingelementshavebeenadded
totheHoleelementtree,whichisdefinedintheheaderfileProHole.h:
•PRO_E_HLE_TOP_CLEARANCE—Specifies ifthematerialatthetopofthe
holemustberemovedtocreateaclearance
•PRO_E_HLE_FT_DIR_REF—Specifies thereferences thatwillbeusedto
orientthedirectionofhole.
•PRO_E_HLE_FT_DIR_OPT—Specifies thedirectioninwhichtheholeisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxholemustberemovedtocreateaclearance
•PRO_E_HLE_FT_DIR_REF—Specifies thereferences thatwillbeusedto
orientthedirectionofhole.
•PRO_E_HLE_FT_DIR_OPT—Specifies thedirectioninwhichtheholeis
oriented,perpendicular orparallel,totheorientation references.
ExportingQuiltsinaModel
FromCreoParametric 2.0M040onward,anewconfiguration flagPRO_FACET_
INCLUDE_QUILTS hasbeenaddedintheheaderfileProUtil.h. Youcanuse
thefunction ProOutputInclusionWithOptionsSet() tosetthe
configuration flagtoincludequiltsintheexportoffacetsofaCreoParametric
modeltothespecifiedformat.
TechnicalSummaryofChanges 2095FifthArgumentofthefunctionProSelect()
FromCreoParametric 1.0M040onward,thefifthargument(sel_env)ofthe
function ProSelect() allowstheusertopassasetofattributesusingthe
function ProSelectionEnvAlloc().
FindingaHarness
Thedescription forthefunction ProAssemblyHarnessesCollect() has
beenupdated.Itnowreadsas:
Thefunction ProAssemblyHarnessesCollect() returnsanarrayofxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunction ProSelectionEnvAlloc().
FindingaHarness
Thedescription forthefunction ProAssemblyHarnessesCollect() has
beenupdated.Itnowreadsas:
Thefunction ProAssemblyHarnessesCollect() returnsanarrayof
handlestoanyharnessthatispartofaspecifiedassemblyanditssub-assemblies.
FlexibleModeling
ThissectionexplainsthechangesintheareaofFlexibleModeling.
AttachingUsingInformationStoredinIntentObjects
FromCreoParametric 4.0F000onward,thefollowingelementshavebeenadded
totheAttachfeatureelementtreedefinedintheheaderfile
ProFlexAttach.h:
•PRO_E_OPT_ATTACH_PIO—Specifies ifquiltshouldbeattachedtomodel
geometryusingtheattachment information storedintheintentobjects.
•PRO_E_OPT_ATTACH_RNDCH—Specifies iftheroundorchamfergeometry
ofthequiltshouldbeattachedusingtheattachment information storedinthe
intentobjects.
Automatically SplittingExtendingSurfaces
FromCreoParametric 4.0F000onward,anewelement PRO_E_RM_SURF_
AUTO_SPLIT_SRF hasbeenaddedtotheRemovefeature,whichisdefinedinxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintentobjects.
Automatically SplittingExtendingSurfaces
FromCreoParametric 4.0F000onward,anewelement PRO_E_RM_SURF_
AUTO_SPLIT_SRF hasbeenaddedtotheRemovefeature,whichisdefinedin
theheaderfileProRemoveSurf.h. Itspecifiesiftheextending surfaceofthe
selectedshapesurfacemustbeautomatically splitwhengeometryisremoved.
FlexMoveFeature
FromCreoParametric 1.0M010onward,theelementdatatypesofthefollowing
elementshavebeenupdatedfromPRO_VALUE_TYPE_SELECTION toPRO_
ELEM_TYPE_MULTI_VALUE:
•PRO_E_FLEXMOVE_DIM_REFS
•PRO_E_FLEXMOVE_DTM_REF
2096 Creo®Parametric TOOLKIT User’sGuideMovingComponent ReferencesinFlexMoveFeature
FromCreoParametric TOOLKIT4.0F000onward,anewelement PRO_E_
FLEXMOVE_MOVED_COMPS hasbeenaddedtotheMovefeature,whichis
definedintheheaderfileProFlexMove.h. Itcollectscomponent references,
thatis,partsandsubassemblies inanassembly,whicharemovedbytheassembly
levelmovefeature.
MoveUsingTransformation Matrix
FromCreoParametric TOOLKIT4.0F000onward,anewtypeofmove PRO_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatis,partsandsubassemblies inanassembly,whicharemovedbytheassembly
levelmovefeature.
MoveUsingTransformation Matrix
FromCreoParametric TOOLKIT4.0F000onward,anewtypeofmove PRO_
D3_MOVE_TYPE_FREETRF hasbeendefinedintheheaderfileProD3Elem.h.
Itusestransformation matrixtomovegeometry.Thefinalmovepositionissaved
asatransformation matrix.
MaintainingTopologyinAttachmentGeometryandRemoveSurface
Features
FromCreoParametric TOOLKIT3.0onward,youtospecifyifregeneration ofthe
modelmustfail,whenthesamesolutiontypecannotbereconstructed. The
followingelementsallowyoutomaintaintopologyin:
•Attachment Geometry feature—PRO_E_FLEX_MAINTAIN_TOPO inthe
headerfileProFlxmdlOpts.h.
•Removesurfacefeature—PRO_E_RM_SURF_MAINTAIN_TOPO inthe
headerfileProRemoveSurf.h.
Propagating TangencyinFlexibleModelingFeaturesMove,Offset,and
ModifyAnalyticSurface
FromCreoParametric 3.0onward,youcanpropagate tangencyinflexible
modelingfeaturesMove,Offset,andModifyAnalyticSurfacefeature.ToxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxModifyAnalyticSurface
FromCreoParametric 3.0onward,youcanpropagate tangencyinflexible
modelingfeaturesMove,Offset,andModifyAnalyticSurfacefeature.To
propagate tangency,theelement PRO_E_FLEX_PROPAGATE_TANGENCY
definedintheheaderfileProFlxmdlOpts.h mustbesettoPRO_
FLEXMODEL_OPT_YES.
Theelement PRO_E_FLXSLV_PROP_CONSTRS isusedtosettheconditions
thatcontrolsthechangesingeometryduringtangencypropagation. Theelementis
definedintheheaderfileProFlexTanPropOpts.h.
SavingAttachmentInformationinthePRO_E_FLEX_CR_RND_GEOM
Element
FromCreoParametric 4.0F000onward,whentheelement PRO_E_FLEX_
ATTACH_GEOM issettoPRO_FLEXMODEL_OPT_No, theelement PRO_E_
FLEX_CR_RND_GEOM canbesettothefollowingvalues:
•PRO_FLEXMODEL_OPT_YES—Stores theattachment information ofthe
roundsinintentobjects.
TechnicalSummaryofChanges 2097•PRO_FLEXMODEL_OPT_NO—Does notstoretheattachment information of
therounds.
Substituting One-SidedEdges
FromCreoParametric TOOLKIT4.0F000onward,twonewelementshavebeenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChanges 2097•PRO_FLEXMODEL_OPT_NO—Does notstoretheattachment information of
therounds.
Substituting One-SidedEdges
FromCreoParametric TOOLKIT4.0F000onward,twonewelementshavebeen
addedtotheSubstitute feature,whichisdefinedintheheaderfile
ProFlexSubstitute.h. Usetheseelementstoreplacetheselectedone-sided
edgesofasurfaceorquiltwithsubstituting surfaces.
UpdatestotheAttachmentGeometryFeature
ThefollowingelementshavebeenaddedintheheaderfileProFlxmdlOpts.h:
•PRO_E_FLEX_TRF_SEL_ATT_GEOM—Specifies ifthechamfersand
roundsthatattachthemovedgeometrytothemodelmustalsobetransformed.
•PRO_E_FLEX_DFLT_CONDITIONS—Specifies iftheverticesofthe
draggedgeometrymustbefixedwhenthedraggedsurfacesaretransformed.
Theverticesareselectedbythesystem.
•PRO_E_FLEX_PULL_OPTION—Specifies thattheboundingchainedges
selectedintheelement PRO_E_FLEX_BOUND_EDGES_CMP mustbeused
forthereattachment ofmovedgeometry.Thiselementisrelevantonlyin
Movefeature.
GeometricTolerancesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxselectedintheelement PRO_E_FLEX_BOUND_EDGES_CMP mustbeused
forthereattachment ofmovedgeometry.Thiselementisrelevantonlyin
Movefeature.
GeometricTolerances
ThefollowingupdateshavebeenaddedintheheaderfileProGtol.h:
•Twonewmaterialconditions PROGTOLMATCOND_LMC_R and
PROGTOLMATCOND_MMC_R havebeenaddedtotheenumerated datatype
ProGtolMaterialCond intheheaderfileProGtol.h. Youcannow
specifytheleastmaterialconditionandthemaximum materialconditionwith
reciprocity .
•Youcanspecifythehorizontal justification forthetextstyleobjectusingthe
enumerated datatypeProTextHrzJustification definedintheheader
fileProGtol.h.
•Twonewtexttypes PRO_GTOLTEXT_ON_BOTTOM andPRO_GTOLTEXT_
ON_LEFT havebeenaddedtotheenumerated datatype
ProGtolTextType. Thevalues PRO_GTOLTEXT_ON_BOTTOM and
PRO_GTOLTEXT_ON_LEFTallow youtoaccessthebottomandleftinstances
respectively oftheadditional textappliedonthegeometric tolerance.
2098 Creo®Parametric TOOLKIT User’sGuideItemTypesPRO_PSEG_ST ARTandPRO_PSEG_END—Startxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrespectively oftheadditional textappliedonthegeometric tolerance.
2098 Creo®Parametric TOOLKIT User’sGuideItemTypesPRO_PSEG_ST ARTandPRO_PSEG_END—Start
andEndofPipeSegments
FromCreoParametric 2.0M160onward,twonewitemtypes,startofpipe
segment PRO_PSEG_START andendofpipesegment PRO_PSEG_END, have
beenaddedtotheenumerated datatypeProType. Inthefunction
ProSelect(), fortheinputargument option,specifythevalueaspipeseg_
endtoselectthestartandendofapipesegment.
YoucancreatepipeconnectsfromaXMLfileusingtheitemtypes PRO_PSEG_
STARTandPRO_PSEG_END.
LicenseInformation forProDimensionIsAccessibleInModel
()
FromCreoParametric 2.0M180onward,thefunction
ProDimensionIsAccessibleInModel() isnolongerunderlicense
option222,thatis,theTOOLKIT-for-3D_Drawings license.Itisavailablewith
theCreoParametric TOOLKITlicense.
MaterialMergeOption—Intersect
FromCreoParametric 4.0F000onward,anewmergeoptionformaterial PRO_
GEN_MERGE_INT_MATERIAL hasbeenaddedtotheenumerated datatypexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheCreoParametric TOOLKITlicense.
MaterialMergeOption—Intersect
FromCreoParametric 4.0F000onward,anewmergeoptionformaterial PRO_
GEN_MERGE_INT_MATERIAL hasbeenaddedtotheenumerated datatype
ProGenMergeMaterialOpt. Itretainstheintersecting materialbetweenthe
modifiedandmodifying models.
MaximumNumberofCharacters inaLineintheMessage
File
FromCreoParametric TOOLKIT4.0F000onward,themaximum lengthofany
lineinthemessagefileis4096widecharacters.
Mechanism MotorFeature
Youcanaccessandcreatetheservoandforcemotorfeaturesinmodelsusingthe
elementtreedefinedintheheaderfileProMotorFeat.h.
ModelNamesinSymbolicRepresentation
Allthemodelsopenedinsymbolicrepresentation bydefaultnowhavevisible
namessameasthemasterrepresentation.
NC
ThissectionexplainsthechangesintheareaofCreoNC.
TechnicalSummaryofChanges 2099CreatingHolesetbyGeometry
AnewholesettypePRO_HOLESET_DRILL_GEOM hasbeenaddedtothe
enumerated datatypeProHolesetType intheheaderfile
ProMfgOptions.h. Youcannowselecttheholegeometrytocreateaholeset.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnewholesettypePRO_HOLESET_DRILL_GEOM hasbeenaddedtothe
enumerated datatypeProHolesetType intheheaderfile
ProMfgOptions.h. Youcannowselecttheholegeometrytocreateaholeset.
DefiningtheAxisandAxisTypeforCutlineMillingSequence
Thecompound element PRO_E_MFG_AXIS_DEF_COMP hasbeenaddedinthe
elementtreeforCutlineMillingSequenceintheheaderfile
ProMfgFeatCutlineMilling.h. Theelementallowsyoutodefinetheaxis
parameters fortheCutlineMillingfeature.Youcanspecifythetypeofaxisusing
theenumerated datatypeProAxisDefType definedintheheaderfile
ProMfgOptions.h.
DefiningtheNumberofSpindles
Theelement PRO_E_MFG_WCELL_NUM_SPINDLES hasbeenaddedinthe
elementtreesfortheworkcelllatheandmillturnfeatureintheheaderfiles
ProMfgFeatWcellLathe.h andProMfgFeatWcellMillTurn.h. The
element PRO_E_MFG_WCELL_NUM_SPINDLES allowsyoutosetthenumberof
spindlestobeusedforfeaturecreationusingtheenumerated datatype
WcellNumSpindles definedintheheaderfileProMfgOptions.h.
DefiningtheSpindleTypeforCreoNCSequencesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspindlestobeusedforfeaturecreationusingtheenumerated datatype
WcellNumSpindles definedintheheaderfileProMfgOptions.h.
DefiningtheSpindleTypeforCreoNCSequences
Theelement PRO_E_MFG_SUB_SPINDLE_OPT allowsyoutospecifythetype
ofspindleforaCreoNCsequence.Thespindletypesaredefinedusingthe
enumerated datatypeSubSpindleOpt intheheaderfileProMfgOptions.h.
Thespindleelement PRO_E_MFG_SUB_SPINDLE_OPT hasbeenaddedinthe
followingheaderfiles:
•ProMfgFeat2xCurvTraj.h
•ProMfgFeatCornerFinishing.h
•ProMfgFeatCutlineMilling.h
•ProMfgFeatEngraving.h
•ProMfgFeatFacing.h
•ProMfgFeatFinishing.h
•ProMfgFeatHolemaking.h
•ProMfgFeatManualCycle.h
•ProMfgFeatProfMilling.h
•ProMfgFeatReroughing.h
•ProMfgFeatRoughing.h
•ProMfgFeatRoundChamferMilling.h
2100 Creo®Parametric TOOLKIT User’sGuide•ProMfgFeatThreadMilling.h
•ProMfgFeatTrajectory.h
•ProMfgFeatTurning.h
•ProMfgFeatTurnThread.h
DefiningtheStockAllowance
FromCreoParametric 3.0onward,theelements PRO_E_TURN_STK_ALLW_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMfgFeatTrajectory.h
•ProMfgFeatTurning.h
•ProMfgFeatTurnThread.h
DefiningtheStockAllowance
FromCreoParametric 3.0onward,theelements PRO_E_TURN_STK_ALLW_
PROF_ARR andPRO_E_TURN_STK_ALLW_ROUGH_ARR havebeenaddedin
theheaderfilesProMfgElemToolMtnAreaTurn.h,
ProMfgElemToolMtnGrooveTurn.h and
ProMfgElemToolMtnProfTurn.h. Theseelementsdefinetheprofileand
roughstockallowances respectively ,fortheCreoNCfeatures.
Holemaking HolesetFeature
Theelements PRO_E_HOLESET_SEL_UNSEL_GEOMETRY andPRO_E_
HOLESET_SEL_INDIV_GEOMETRY havebeenaddedintheelementtreeforthe
Holemaking HolesetfeatureintheheaderfileProMfgElemHoleset.h.
Theelement PRO_E_HOLESET_SEL_UNSEL_GEOMETRY allowsyouto
specifyaselectionofholesthatmustbeexcludedfrommachining operation. The
element PRO_E_HOLESET_SEL_INDIV_GEOMETRY allowsyoutospecify
individual holesinadrillgrouptodefineaholesetintheholemaking sequence.
Manufacturing MillorTurnWorkcell
ThefollowingelementshavebeenaddedintheelementtreeforManufacturingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxindividual holesinadrillgrouptodefineaholesetintheholemaking sequence.
Manufacturing MillorTurnWorkcell
ThefollowingelementshavebeenaddedintheelementtreeforManufacturing
MillorTurnWorkcellintheheaderfileProMfgFeatWcellMillTurn.h:
•PRO_E_MFG_WCELL_ENABLE_TURN_OPT—This elementspecifiesthe
enablingordisablingoftheturningmachine.Thiselementallowsyouto
enableanddisabletheturningoperationonthecreatedworkcell.
•PRO_E_WCELL_HEAD_TURN_OPT—This elementhasbeenaddedinthe
compound elements PRO_E_MFG_MILLTURN_HEAD_1 andPRO_E_MFG_
MILLTURN_HEAD_2. Itallowsyoutoenableordisabletheturningoptionfor
themachineturret.
•PRO_E_MFG_MILLTURN_HEAD_3 andPRO_E_MFG_MILLTURN_HEAD_
4—compound elementsallowyoutosettheparameters suchasmilling,
turning,flashtoolandrotationfortheturretheads3and4respectively .
•PRO_E_MFG_WCELL_HEAD_3 andPRO_E_MFG_WCELL_HEAD_4—
Thesecompound elementsallowyoutosetthetoolspecification fortheturret
heads3and4respectively .xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_E_MFG_WCELL_HEAD_3 andPRO_E_MFG_WCELL_HEAD_4—
Thesecompound elementsallowyoutosetthetoolspecification fortheturret
heads3and4respectively .
TechnicalSummaryofChanges 2101MultipleReferenceSelectionforCreoNCSteps
Theelement PRO_E_MFG_PROCESS_REF allowsmultipleselections of
references. TheelementisdefinedforthefollowingCreoNCsteps:
CreoNCStep HeaderFile
Roughing ProMfgFeatRoughing.h
Reroughing ProMfgFeatReroughing.h
Finishing ProMfgFeatFinishing.h
Corner Finishing ProMfgFeatCornerFinish
ing.h
2–Axis Curve Trajectory
MillingProMfgFeat2xCurvTraj.h
3–Axis Trajectory Milling ProMfgFeatTrajectory.h
Profile Milling ProMfgFeatProfMilling.h
Manual Cycle ProMfgFeatManualCycle.h
Thread Milling ProMfgFeatThreadMilling.h
Area, Groove, andProfile
TurningProMfgFeatTurning.h
Thread Turning ProMfgFeatTurnThread.h
Holemaking ProMfgFeatHolemaking.h
Face Milling ProMfgFeatFacing.h
CreoNCOperationDefinitionFeature
ThefollowingelementshavebeenaddedintheelementtreeforCreoNCxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThread Turning ProMfgFeatTurnThread.h
Holemaking ProMfgFeatHolemaking.h
Face Milling ProMfgFeatFacing.h
CreoNCOperationDefinitionFeature
ThefollowingelementshavebeenaddedintheelementtreeforCreoNC
Operation Definition sequenceintheheaderfileProMfgFeatOperation.h:
•PRO_E_MFG_FROM3_PNT andPRO_E_MFG_HOME3_PNT—The elements
allowyoutospecifydatumpointsthatindicatethestartpointandtheend
pointforthemachining processbyturrethead3tool.
•PRO_E_MFG_FROM4_PNT andPRO_E_MFG_HOME4_PNT—The elements
allowyoutospecifydatumpointsthatindicatethestartpointandtheend
pointforthemachining processbyturrethead4tool.
•PRO_E_OPER_SUBSP_CSYS—The element PRO_E_OPER_SUBSP_CSYS
hasbeenaddedintheelementtreeforCreoNCoperationsequenceinthe
headerfileProMfgFeatOperation.h. Thiselementallowsyoutospecify
acoordinate systemwhichwillbeusedasthesub-spindle coordinate system.
2102 Creo®Parametric TOOLKIT User’sGuideRetractFeature
Theelement PRO_E_RETR_SURF_TYPE intheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxacoordinate systemwhichwillbeusedasthesub-spindle coordinate system.
2102 Creo®Parametric TOOLKIT User’sGuideRetractFeature
Theelement PRO_E_RETR_SURF_TYPE intheheaderfile
ProMfgElemRetract.h nowsupportsanewvalue PRO_RETR_SURF_
UNDEFINED. Thisvaluespecifiesthattheretractsurfaceisnotdefined.Referto
theheaderfileProMfgOptions.h formoreinformation ontheenumerated
datatypeProRetrSurfType.
SettingtheSizeofUserInterface(UI)Components
Thefollowingfunctionswillfail,ifyouspecifyavaluesmallerthantheminimum
sizefortheinputargumentswidthorheight:
•ProUIDrawingareaSizeSet()
•ProUIInputpanelSizeSet()
•ProUILabelSizeSet()
•ProUILayoutSizeSet()
•ProUIListSizeSet()
•ProUIOptionmenuSizeSet()
•ProUIProgressbarSizeSet()
•ProUIPushbuttonSizeSet()
•ProUIRadiogroupSizeSet()
•ProUISliderSizeSet()
•ProUISpinboxSizeSet()
•ProUITabSizeSet()
•ProUITableSizeSet()
•ProUITextareaSizeSet()
•ProUIThumbwheelSizeSet()
•ProUITreeSizeSet()
SkirtFillFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProUIRadiogroupSizeSet()
•ProUISliderSizeSet()
•ProUISpinboxSizeSet()
•ProUITabSizeSet()
•ProUITableSizeSet()
•ProUITextareaSizeSet()
•ProUIThumbwheelSizeSet()
•ProUITreeSizeSet()
SkirtFillFeature
YoucanaccesstheSkirtFillfeatureinmodelsusingtheelementtreeindefined
theheaderfileProMoldSkirtFill.h.
SkirtSurfaceExtensionFeature
YoucanaccesstheSkirtSurfaceExtension featureinmodelsusingtheelement
treeindefinedtheheaderfileProMoldSkirtExt.h.
TechnicalSummaryofChanges 2103SpecifyingtheTypeofFeed
FromCreoParametric 3.0M040onward,thenewelement PRO_E_TOOL_MTN_
FEED_TYPE enablesyoutospecifythetypeoffeedforthetoolmotion.The
elementhasbeenaddedtothetoolmotionelementtreesinthefollowingheader
files:
•ProMfgElemToolMtnAlongAxisAppr.h
•ProMfgElemToolMtnAlongAxisExit.h
•ProMfgElemToolMtnConnect.h
•ProMfgElemToolMtnFollowCrv.h
•ProMfgElemToolMtnGoDelta.h
•ProMfgElemToolMtnGoHome.h
•ProMfgElemToolMtnGoRetr.h
•ProMfgElemToolMtnGotoAxis.h
•ProMfgElemToolMtnGotoPnt.h
•ProMfgElemToolMtnGotoSrf.hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProMfgElemToolMtnFollowCrv.h
•ProMfgElemToolMtnGoDelta.h
•ProMfgElemToolMtnGoHome.h
•ProMfgElemToolMtnGoRetr.h
•ProMfgElemToolMtnGotoAxis.h
•ProMfgElemToolMtnGotoPnt.h
•ProMfgElemToolMtnGotoSrf.h
•ProMfgElemToolMtnHelAppr.h
•ProMfgElemToolMtnHelExit.h
•ProMfgElemToolMtnLeadIn.h
•ProMfgElemToolMtnLeadOut.h
•ProMfgElemToolMtnNormAppr.h
•ProMfgElemToolMtnNormExit.h
•ProMfgElemToolMtnPlunge.h
•ProMfgElemToolMtnRampAppr.h
•ProMfgElemToolMtnRampExit.h
•ProMfgElemToolMtnTanAppr.h
•ProMfgElemToolMtnTanExit.h
SpecifyingtheTypeofHoleDiameters
FromCreoParametric 3.0M030onward,thefollowingnewelementsenableyou
tospecifythetypeofholediameterformachining, usingthenewenumerated data
typeProHolesetDiamType:
•PRO_E_MFG_HSET_DIAM_TYPE_OPT—Added intheThreadMilling
HolesetandHolemaking Holesetelementtreesintheheaderfiles
ProMfgElemThreadHoleset.h andProMfgElemHoleset.h
respectively .
•PRO_E_DRILL_GRP_DIAM_TYPE_OPT—Added intheDrillGroupfeature
elementtreeintheheaderfileProMfgFeatDrillGroup.h.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMfgElemThreadHoleset.h andProMfgElemHoleset.h
respectively .
•PRO_E_DRILL_GRP_DIAM_TYPE_OPT—Added intheDrillGroupfeature
elementtreeintheheaderfileProMfgFeatDrillGroup.h.
2104 Creo®Parametric TOOLKIT User’sGuideSubroutinePatterningOptions
FromCreoParametric 4.0F000onward,thefollowingelementshavebeenadded
tothepatternelementtreeinProPattern.h:
•PRO_E_PAT_MFG_SUB_OUTPUT—Specifies ifsubroutine patternmustbe
created.
•PRO_E_PAT_MFG_SUB_OUT_MODE—Specifies theoutputmodeforthe
subroutine.
•PRO_E_PAT_MFG_SUB_OUT_MULTAX—Specifies iftheMultaxmodemust
beselected.
•PRO_E_PAT_MFG_SUB_OUT_COPYCL—Specifies ifthesubroutine pattern
definitions inCLoutputmustbetemporarily suppressed.
ToolMotionforCurveandSurfaceTrajectorySequence
Theelements PRO_E_MFG_AXIS_DEF_COMP andPRO_E_MFG_TRAJ_
CORNER_COND havebeenaddedintheelementtreesfortoolmotioninthe
headerfilesProMfgElemToolMtnCrvTraj.h and
ProMfgElemToolMtnSrfTraj.h. Thecompound element PRO_E_MFG_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCORNER_COND havebeenaddedintheelementtreesfortoolmotioninthe
headerfilesProMfgElemToolMtnCrvTraj.h and
ProMfgElemToolMtnSrfTraj.h. Thecompound element PRO_E_MFG_
AXIS_DEF_COMP allowsyoutospecifytheparameters thatdefinetheaxisfor
thefeature.Thecompound element PRO_E_MFG_TRAJ_CORNER_COND allows
youtospecifythecornerconditions forthefeature.Youcanspecifythetypeof
cornerusingtheenumerated datatypeProTmTrajCornerType definedinthe
headerfileProMfgOptions.h.
ToolMotionforCurveTrajectorySequence
Thefollowingelementshavebeenaddedintheelementtreefortoolmotionfor
theCurveTrajectorysequenceintheheaderfile
ProMfgElemToolMtnCrvTraj.h:
•PRO_E_MFG_AXIS_DEF_NORM_SRF—The elementallowsyoutoselect
multiplereferences forthemillingsequence.
•PRO_E_MFG_AXDEF_NORM_SURF_DIR—The elementspecifiesthe
directionofthenormalsurface.
•PRO_E_MFG_AXIS_DEF_LOC_ALIGN_Z—This elementallowsyouto
alignthetoolaxiswiththeZ-axisofthestepcoordinate system.
ToolMotionforProfileMillCutxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdirectionofthenormalsurface.
•PRO_E_MFG_AXIS_DEF_LOC_ALIGN_Z—This elementallowsyouto
alignthetoolaxiswiththeZ-axisofthestepcoordinate system.
ToolMotionforProfileMillCut
Thevaluesofthefollowingelementsdefinedintheheaderfile
ProMfgElemToolMtnProfileMillCut.h havebeenupdated:
•PRO_E_MFG_START_HEIGHT—While creatingthetoolmotionprofilemill
cutfeature,specifytheelement PRO_E_MFG_START_HEIGHT onlyifthe
element PRO_E_TOOL_MTN_PROFILE_TYPE issettoPRO_E_MILL_
CUT_FROM_TO.
TechnicalSummaryofChanges 2105•PRO_E_MFG_HEIGHT—While creatingthetoolmotionprofilemillcut
feature,specifytheelement PRO_E_MFG_HEIGHT onlyiftheelement PRO_
E_TOOL_MTN_PROFILE_TYPE issettoPRO_E_MILL_CUT_FROM_TO,
orPRO_E_MILL_CUT_UPTO, orPRO_E_MILL_CUT_ONE_SLICE.
ToolMotionforVolumeMillCut
YoucancreateandredefinetheVolumeMillCutfeatureinthemodelsusingthe
elementtreedefinedintheheaderfileProMfgElemToolMtnVolMillCut.h.
ToolReference-TurretHeads3and4
ThefollowingelementshavebeenaddedintheelementtreeforToolReference inxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxelementtreedefinedintheheaderfileProMfgElemToolMtnVolMillCut.h.
ToolReference-TurretHeads3and4
ThefollowingelementshavebeenaddedintheelementtreeforToolReference in
theheaderfileProMfgElemToolRef.h:
•Theturretheadvalues PRO_MACH_HEAD1 andPRO_MACH_HEAD2 forthe
element PRO_E_MFG_TOOL_REF_HEAD_NUM arenolongersupported. Use
thenewvalues PRO_MFG_TOOL_HEAD_1 andPRO_MFG_TOOL_HEAD_2
instead.
•Theelement PRO_E_MFG_TOOL_REF_HEAD_NUM intheheaderfile
ProMfgElemToolRef.h nowsupportstwonewvalues PRO_MFG_TOOL_
HEAD_3andPRO_MFG_TOOL_HEAD_4. Thesevaluesspecifythatthe
machinetoolisplacedinhead3orhead4.Youcanspecifythesevaluesfor
Mill/Turnworkcells.
•Theturretheadvalue PRO_MACH_HEAD1 andPRO_MACH_HEAD2 forthe
element PRO_E_MFG_TOOL_REF_HEAD_NUM definedintheheaderfile
ProMfgElemToolRef.h arenolongersupported. Usethevalues PRO_
MFG_TOOL_HEAD_3 andPRO_MFG_TOOL_HEAD_4 instead.
TypeofSearchQueryforHoles
FromCreoParametric 3.0M040onward,thefollowingnewelementsenableyouxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMfgElemToolRef.h arenolongersupported. Usethevalues PRO_
MFG_TOOL_HEAD_3 andPRO_MFG_TOOL_HEAD_4 instead.
TypeofSearchQueryforHoles
FromCreoParametric 3.0M040onward,thefollowingnewelementsenableyou
tospecifythetypeofsearchquerythatmustbeusedwhilecollecting holesfor
machining. Tospecifythetypeofquery,theelementsusethenewenumerated
datatypeProHsetParamRuleOpt.
•PRO_E_MFG_HSET_PARAM_RULE_OPT—Added intheThreadMilling
HolesetandHolemaking Holesetelementtreesintheheaderfiles
ProMfgElemThreadHoleset.h andProMfgElemHoleset.h
respectively .
•PRO_E_DRILL_GRP_PARAM_RULE_OPT—Added intheDrillGroup
featureelementtreeintheheaderfileProMfgFeatDrillGroup.h.
2106 Creo®Parametric TOOLKIT User’sGuideUpdatestotheheaderfileProMfgFeat2xCurvT raj.h
Theelements PRO_E_MFG_LOOP_SURF_REF andPRO_E_FF_TRAJ_FLIP_
OPThavebeenaddedintheheaderfileProMfgFeat2xCurvTraj.h. The
element PRO_E_MFG_LOOP_SURF_REF allowsyoutoselectthesurfacesfor
whichtheloopsofedgesmustbecollectedformachining. Theelement PRO_E_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxOPThavebeenaddedintheheaderfileProMfgFeat2xCurvTraj.h. The
element PRO_E_MFG_LOOP_SURF_REF allowsyoutoselectthesurfacesfor
whichtheloopsofedgesmustbecollectedformachining. Theelement PRO_E_
FF_TRAJ_FLIP_OPT flipsthemachining directionofthetool.
VolumeMillingFeature
YoucancreateandredefinetheVolumeMillingfeatureinthemodelsusingthe
elementtreedefinedintheheaderfileProMfgFeatVolMilling.h.
Notifications CalledBeforeSavingandAfterRenaming
Models
FromCreoParametric 4.0F000onward,thefollowingnotification eventsand
callbackfunctionshavebeenadded:
Eventtype Callbacktypedef Description
PRO_MODEL_SAVE_
PRE_ALLProModelSavePreAl
lActionCallbackfunctionis
calledbeforesavingevery
model.
PRO_MODEL_RENAME_
POST_ALLProModelRenamePos
tAllActionCallbackfunctionis
calledafterrenaming
everymodel.
NewUnitTypeforRotationalDisplacement
FromCreoParametric 3.0M070onward,anewunittypePRO_UNITTYPE_
ROTATIONAL_LENGTH_SPECTDENS hasbeenaddedtotheenumerated dataxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcalledafterrenaming
everymodel.
NewUnitTypeforRotationalDisplacement
FromCreoParametric 3.0M070onward,anewunittypePRO_UNITTYPE_
ROTATIONAL_LENGTH_SPECTDENS hasbeenaddedtotheenumerated data
typeProUnitType formeasuring rotationaldisplacement inRad^2/Q.
PipeConnectFeature
Youcanaccessandcreatethepipeconnectfeatureusingtheelementtreeinthe
headerfileProPipConnect.h.
NoSupportforErrorTypePRO_TK_NO_LICENSE
Thedocumentation forthefunctions ProATBVerify(),
ProATBMdlnameVerify(), andProATBUpdate() incorrectly mentioned
thatthesefunctionssupported theerrortypePRO_TK_NO_LICENSE. Tocorrect
this,inCreoParametric 3.0M010,theerrortypePRO_TK_NO_LICENSE has
beenremovedfromthedocumentation ofthesefunctions.
TechnicalSummaryofChanges 2107CreoSimulateEnvironment
ThissectionexplainsthechangesintheCreoSimulateenvironment.
EnteringtheCreoSimulateEnvironment withFailedFeatures
FromCreoParametric 3.0onward,youcanopenamodelcreatedinCreo
Parametric withfeaturesthatfailedtoregenerate inCreoSimulateenvironment.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEnteringtheCreoSimulateEnvironment withFailedFeatures
FromCreoParametric 3.0onward,youcanopenamodelcreatedinCreo
Parametric withfeaturesthatfailedtoregenerate inCreoSimulateenvironment.
Youcanalsocreatesimulation objectsongeometryfromfailedfeaturesona
modelinCreoSimulateenvironment.
SupportforTotalLoadatPoint(TLAP)inFEMMode
FromCreoParametric 3.0onward,theTotalLoadatPoint(TLAP)loadsare
supported inFEMmodeintheCreoSimulateenvironment. RefertotheCreo
SimulateHelpformoreinformation onTLAPloads.
NormalandParallelOrientations forDimensions
FromCreoParametric 3.0onward,dimensions canbeplacednormalorparallelto
thespecifiedreference, usingtheenumerated values:
•PRO_DIM_ORNT_NORMAL
•PRO_DIM_ORNT_PARALLEL
PatternFeature
Theelements PRO_E_PAT_GEOM_REFS andPRO_E_FLEX_OPTS_CMPND
havebeenaddedintheelementtreeforthePatternfeatureinProPattern.h.
Theelement PRO_E_PAT_GEOM_REFS allowsyoutoreadthereferences
selectedforthepatternleader.Theelement PRO_E_FLEX_OPTS_CMPND allowsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhavebeenaddedintheelementtreeforthePatternfeatureinProPattern.h.
Theelement PRO_E_PAT_GEOM_REFS allowsyoutoreadthereferences
selectedforthepatternleader.Theelement PRO_E_FLEX_OPTS_CMPND allows
youtoreadtheattachment optionsselectedforapattern.
Read-OnlyFeatures
FromCreoParametric 3.0onward,thefeaturesthataremaderead-onlyusingthe
function ProFeatureReadonlySet() appearunderaseparatecontainer
nodeReadOnlyFeaturesatthetopofthemodeltree.Thecontainernodeis
dismissed whentheread-onlystatusisremovedfromalltheread-onlyfeatures
usingthefunction ProFeatureReadonlyUnset().
SectionTypeforAngularDimension
FromCreoParametric 4.0F000onward,anewdimension typePRO_TK_DIM_
ANG_POLAR hasbeenaddedtotheenumerated datatypeProSecdimType.
Thedimension measurestheanglebetweenthex-axisandavector,whichis
definedbytwopoints.
2108 Creo®Parametric TOOLKIT User’sGuideSheetmetal
ThissectionexplainsthechangesintheareaofSheetmetal.
AttachmenttypesforWallFeature
Twonewattachment types PRO_SMT_WALL_HEIGHT_OFFSET_FROM_ORIGxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2108 Creo®Parametric TOOLKIT User’sGuideSheetmetal
ThissectionexplainsthechangesintheareaofSheetmetal.
AttachmenttypesforWallFeature
Twonewattachment types PRO_SMT_WALL_HEIGHT_OFFSET_FROM_ORIG
andPRO_SMT_WALL_HEIGHT_OFFSET_FROM_BEND havebeenaddedtothe
enumerated datatypeProSmdHeightType definedintheheaderfile
ProSmtFlangeWall.h. Theattachment typePRO_SMT_WALL_HEIGHT_
OFFSET_FROM_ORIG specifiesthatthewallfeatureattachestotheselected
attachment edgeatthespecifiedoffsetdistance.Theattachment typePRO_SMT_
WALL_HEIGHT_OFFSET_FROM_BEND specifiesthatthewallfeatureappends
totheselectedattachment edgeatthespecifiedoffsetdistance.
BendReliefElementsforEdgeBendFeature
FromCreoParametric 4.0F000onward,theelement PRO_E_SMT_BEND_
RELIEFhasbeenaddedtotheelementtreeoftheEdgeBendfeaturedefinedin
theheaderfileProSmtEdgeBend.h. Theelementdefinesbendreliefoptions
fortheedge.
ClosingCornerReliefsinFlangeWallandEdgeRipFeatures
FromCreoParametric 4.0F000onward,theelement PRO_E_SMT_EDGE_RIP_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheheaderfileProSmtEdgeBend.h. Theelementdefinesbendreliefoptions
fortheedge.
ClosingCornerReliefsinFlangeWallandEdgeRipFeatures
FromCreoParametric 4.0F000onward,theelement PRO_E_SMT_EDGE_RIP_
CLOSE_CORNER hasbeenaddedtothefollowingfeatures:
•FlangeWallfeaturedefinedintheheaderfileProSmtFlangeWall.h
•EdgeRipfeaturedefinedintheheaderfileProSmtEdgeRip.h
Theelementspecifiesifthegapbetweenthebendsurfacesofacornerrelieforan
edgeripmustbeclosed.
EditBendReliefFeature
Youcaneditandmodifybendreliefsinsheetmetalmodelsusingtheelementtree
definedintheheaderfileProSmtEditBendRelief.h.
EditCornerReliefFeature
Youcaneditandmodifycornerreliefsinsheetmetalmodelsusingtheelement
treedefinedintheheaderfileProSmtEditCornerRelief.h.
EditCornerSeamFeature
Youcaneditandremovecornerseamsinsheetmetalmodelsusingtheelement
treedefinedintheheaderfileProSmtEditCornerSeam.h.
TechnicalSummaryofChanges 2109FlatteningofFormWalls
Theelement PRO_E_SMT_FLATTEN_FORM_WALLS hasbeenaddedinthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtreedefinedintheheaderfileProSmtEditCornerSeam.h.
TechnicalSummaryofChanges 2109FlatteningofFormWalls
Theelement PRO_E_SMT_FLATTEN_FORM_WALLS hasbeenaddedinthe
elementtreefortheUnbendfeatureintheheaderfileProRegularUnbend.h.
Theelementallowsyoutospecifyanoptiontoflattenthewallsoftheunbend
formgeometryinthemodel.
GeneralMergeFeatureandDependency TypeNotRelated
FromCreoParametric 4.0F000onward,theelementsGeneralMergeFeature
PRO_E_GMRG_FEAT_TYPE anddependency typePRO_E_DSF_DEPENDENCY
arenotrelated.Youcanindependently setthetwovalues.However,theexisting
applications fromreleasespriortoCreoParametric 4.0F000,wherethevaluesof
GeneralMergefeatureweredependant ontheelement PRO_E_DSF_
DEPENDENCY, willcontinuetowork.
Whentheelement PRO_E_GMRG_FEAT_TYPE issettoPRO_GEN_MERGE_
TYPE_MERGE, theelement PRO_E_DSF_DEPENDENCY canbesettoPRO_
DSF_UPDATE_AUTOMATICALLY only.
JoinFeature
Theelement PRO_E_SMT_WALL_JOIN_EXTEND hasbeenaddedintheelementxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTYPE_MERGE, theelement PRO_E_DSF_DEPENDENCY canbesettoPRO_
DSF_UPDATE_AUTOMATICALLY only.
JoinFeature
Theelement PRO_E_SMT_WALL_JOIN_EXTEND hasbeenaddedintheelement
treefortheJoinfeaturedefinedintheheaderfileProSmtJoinWalls.h. The
element PRO_E_SMT_WALL_JOIN_EXTEND allowsyoutospecifythetypeof
extensiontobeusedforcreatingthefeatureusingtheenumerated datatype
ProSmtJoinWallsExtType.
ProjectCutsinUnbendandFlattenFormFeatures
FromCreoParametric 4.0F000onward,theelement PRO_E_SMT_FLATTEN_
PROJ_CUTS hasbeenaddedintheelementtreesforUnbendfeatureintheheader
fileProRegularUnbend.h andFlattenFormfeatureintheheaderfile
ProSmtFlattenForm.h. Theelementspecifiesifcutsmustbeprojectedto
theflattenedform.
PunchandDieFormFeatures
Theelements PRO_E_STD_SURF_COLLECTION_APPL andPRO_E_FORM_
DIE_POCKET_GEOM_CMP havebeenaddedintheelementtreeforthePunch
andDieFormFeaturesintheheaderfileProSmtForm.h. Theelement PRO_E_
STD_SURF_COLLECTION_APPL enablesyoutocollectthesurfacestobexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDIE_POCKET_GEOM_CMP havebeenaddedintheelementtreeforthePunch
andDieFormFeaturesintheheaderfileProSmtForm.h. Theelement PRO_E_
STD_SURF_COLLECTION_APPL enablesyoutocollectthesurfacestobe
excludedfromthePunchorDiemodelduringthefeaturecreation.Whilecreating
thefeature,specifytheelement PRO_E_FORM_DIE_POCKET_GEOM_CMP only
iftheenumerated datatypeProGenMergeSmtType issettothevalue PRO_
GEN_MERGE_SMT_TYPE_FORM_DIE.
2110 Creo®Parametric TOOLKIT User’sGuideTwonewtypesofsheetmetalfeatures PRO_GEN_MERGE_SMT_TYPE_FORM_
PUNCHandPRO_GEN_MERGE_SMT_TYPE_FORM_DIE havebeenaddedtothe
enumerated datatypeProGenMergeSmtTypes. Thesheetmetaltypes PRO_
GEN_MERGE_SMT_TYPE_FORM_PUNCH andPRO_GEN_MERGE_SMT_
TYPE_FORM_DIE enableyoutocreatethePunchandDieFormfeatures
respectively .
PunchAxisPoint
Theelement PRO_E_SMT_PUNCH_AXIS_PNT hasbeenaddedintheelement
treefortheExtrudefeaturedefinedintheheaderfileProExtrude.h. The
elementallowsyoutospecifyifthepunchaxispointmustbecreatedforsheet
metalcutsandpunches.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtreefortheExtrudefeaturedefinedintheheaderfileProExtrude.h. The
elementallowsyoutospecifyifthepunchaxispointmustbecreatedforsheet
metalcutsandpunches.
Recognizing SheetMetalDesignObjects
FromCreoParametric 4.0F000onward,theSheetmetal Designitemsarecreated
asdesignobjects.Youcantagsurfacesassheetmetaldesignobjectsornotsheet
metaldesignobjectsinamodelusingtheelementtreedefinedintheheaderfile
ProSmtRecognition.h.
TwistWallFeature
Youcanaccessandcreatethetwistwallfeatureinmodelsusingtheelementtree
definedintheheaderfileProSmtTwist.h.
UsingOriginalLengthAsDevelopment Length
FromCreoParametric 4.0F000onward,anewvaluefordeveloped length PRO_
DVL_SRC_USE_ORIGINAL hasbeenaddedtotheenumerated datatype
ProDvlLenSrcType. Itenablesyoutousetheoriginallengthofthebend
featureasthedevelopment length.
SupportforB-Splines
FromCreoParametric 4.0F000onward,b-splinehasbeenaddedasanewtypeof
entity PRO_2D_B_SPLINE intheenumerated datatypePro2dEntType. Axxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatureasthedevelopment length.
SupportforB-Splines
FromCreoParametric 4.0F000onward,b-splinehasbeenaddedasanewtypeof
entity PRO_2D_B_SPLINE intheenumerated datatypePro2dEntType. A
newstructure Pro2dBSplinedefwhich definesb-splineshasalsobeenadded
intheheaderfilePro2dEntdef.h.
ThesectionAPIs ProSectionEntityAdd() and
ProSectionEntityGet() nowsupportb-splines.
StoringExternalDatainChapters
FromCreoParametric 3.0onward,anewtypeofdataPRO_CHAPTER_TYPE has
beenadded.Youcansaveexternaldataofanysizeusingthechapterdatatype.
TechnicalSummaryofChanges 2111ToleranceValueforBendAngleDimensionintheFlatWall
Feature
Youmustspecifythetolerancevalueas0.5andnot0.01forthebendangle
dimension ofthesheetmetalflatwallfeature.
UpdatesinEnumerated DataTypeProColor
FromCreoParametric M080onward,twonewvalues PRO_COLOR_SS_UPD_
CONTROL_GROUP andPRO_COLOR_SS_CONTAINS_MATHCAD_
WORKSHEET havebeenaddedtotheenumerated datatypeProColor inthe
headerfileProToolkit.h.
Thesearchqueryusesthecolor:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCONTROL_GROUP andPRO_COLOR_SS_CONTAINS_MATHCAD_
WORKSHEET havebeenaddedtotheenumerated datatypeProColor inthe
headerfileProToolkit.h.
Thesearchqueryusesthecolor:
•PRO_COLOR_SS_UPD_CONTROL_GROUP—T ohighlightthesearchresult.
ThesearchresultdependsonthesearchqueryusedintheTOOLKIT
application
•PRO_COLOR_SS_CONTAINS_MATHCAD_WORKSHEET—T ohighlightthe
modelsthatcontainPTCMathcadworksheet.
UpdatestotheFunctionProCablingNeutralwirelistImport()
Theprototypeofthefunction ProCablingNeutralwirelistImport()
hasbeenupdatedtoacceptthefirstargumentasProAssembly insteadof
ProHarness.
UpdatestotheFunctionProIntfDataDatumGet()
FromCreoParametric 1.0M020onward,usethefunction
ProDatumdataMemoryFree() insteadofProDatumdataFree() to
releasethememoryafterusingthefunction ProIntfDataDatumGet().
TechnicalSummaryofChangesforCreo
4.0M010
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M010
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx4.0M010
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M010
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M010andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
2112 Creo®Parametric TOOLKIT User’sGuideBoxProjectionforTextureMapping
FromCreoParametric 4.0M010onward,boxprojection ispossibleintexture
mappingusingthefollowingvalues:
•PRO_SRFTESS_BOX_PROJECTION addedinenumerated datatype
ProSurfaceTessellationProjection
•PRO_TEXTURE_PROJECTION_BOX addedinenumerated datatype
ProTextureProjectionType
CompilingandLinkingonWindows
FromCreoParametric 4.0M010onward,CreoParametric TOOLKITsupports
VisualStudio2015.ThecompilerflagsandlibrariesareavailableforVisual
Studio2015.CreoParametric TOOLKITnolongersupportsVisualStudio2012.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 4.0M010onward,CreoParametric TOOLKITsupports
VisualStudio2015.ThecompilerflagsandlibrariesareavailableforVisual
Studio2015.CreoParametric TOOLKITnolongersupportsVisualStudio2012.
AllCreoParametric TOOLKITapplications on32-bitand64-bitWindows
platformsbuiltusingtheMicrosoft VisualStudio2015compilermustsetthe
configuration propertyPlatformToolsetasVisualStudio2015(v140).
Tousethemakefilebasedsolution,youmustaddtheflag-D_USING_V110_
SDK71_tothecompilelineofeachobject.Thesechangeshavebeenincorporated
inthesamplemakefiles.
UpdatestoErrorTypes
Following isthelistoftheerrortypesaddedtofunctions:
•ProGtolAttachSet()—The errortypes PRO_TK_GENERAL_ERROR
andPRO_TK_NOT_VALID havebeenadded.TheerrortypePRO_TK_
GENERAL_ERROR indicatesthatthefunctionhasfailedbecausethespecified
legacygeometric tolerancecouldnotbeconverted tothenewCreoParametric
4.0geometric tolerance.TheerrortypePRO_TK_NOT_VALID indicatesthat
theoptionsspecifiedforattachment inProGtolAttach arenotvalidforthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlegacygeometric tolerancecouldnotbeconverted tothenewCreoParametric
4.0geometric tolerance.TheerrortypePRO_TK_NOT_VALID indicatesthat
theoptionsspecifiedforattachment inProGtolAttach arenotvalidforthe
specifiedgeometric tolerance.
•ProDrawingViewDetailReferenceGet()—The errortypePRO_TK_
E_NOT_FOUND hasbeenadded.Itindicatesthatthefunctioncouldnotfind
thereferencepointontheparentviewforthespecifieddetailedview.
•ProDrawingViewAuxiliaryInfoGet()—The documentation forthe
errortypePRO_TK_GENERAL_ERROR hasbeenupdatedtoreflectitscorrect
behavior.Itindicatesthatthefunctioncannotretrieveinformation relatedto
theauxiliaryview.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M010.
TechnicalSummaryofChanges 2113CrossSection
NewFunction Description
ProXsecCompNewXhatchStyleGet()
ProXsecCompNewXhatchStyleSet()Retrievesandsetsthestyleofoldand
newhatchpatterninthespecifiedcross
sectioncomponent.
ProXsecCompNewXhatchStyleSetBy-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProXsecCompNewXhatchStyleGet()
ProXsecCompNewXhatchStyleSet()Retrievesandsetsthestyleofoldand
newhatchpatterninthespecifiedcross
sectioncomponent.
ProXsecCompNewXhatchStyleSetBy-
Name()Replacestheexistingnonlinearhatch
patternwiththespecifiedhatchpattern.
Drawing
NewFunction Description
ProDrawingV iew2DSectionT otalSet() Setsthevisibilityofmodeledgesto
Totalina2Dcrosssectionviewofa
drawing.
ProDrawingV iew2DSectionAreaSet() Setsthevisibilityofmodeledgesto
Areaina2Dcrosssectionviewofa
drawing.
VolumeInterference
NewFunction Description
ProVolumeInterferenceCompute() Calculates thevolumeinterference
betweentheselectedclosedquiltand
anassembly.
ProVolumeInterferenceDisplay() Displaysthecurvesandsurfacesthat
interferewiththeselectedquiltinthe
specifiedcolororhidesthem.
ProVolumeInterferenceInfoArrayFree() Freesthememoryallocatedtothe
interference dataobtainedfromthe
function
ProVolumeInterferenceCom
pute().
TechnicalSummaryofChangesforCreo
4.0M020xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProVolumeInterferenceInfoArrayFree() Freesthememoryallocatedtothe
interference dataobtainedfromthe
function
ProVolumeInterferenceCom
pute().
TechnicalSummaryofChangesforCreo
4.0M020
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M020
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
2114 Creo®Parametric TOOLKIT User’sGuideCriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M020andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
ExportingtoOtherFileFormatsUsingtheExportProfile
Option
Itisrecommended tousethefunction
ProIntf3DFileWriteWithDefaultProfile() toexportCreo
Parametric modelstootherfileformats.Theexportoptionsmustbesetusingthe
exportprofileoptioninCreoParametric.
Thefollowingfunctionswillbedeprecated inafuturereleaseofCreoParametric:
•ProIntf3DFileWrite()
•ProOutputInclusionAlloc()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexportprofileoptioninCreoParametric.
Thefollowingfunctionswillbedeprecated inafuturereleaseofCreoParametric:
•ProIntf3DFileWrite()
•ProOutputInclusionAlloc()
•ProOutputInclusionFree()
•ProOutputInclusionFlagsSet()
•ProOutputLayerOptionsAlloc()
•ProOutputLayerOptionsAutoidSet()
•ProOutputLayerOptionsSetupfileSet()
•ProOutputLayerOptionsFree()
•ProOutputInclusionWithOptionsSet()
UpdatestoErrorTypes
Following isthelistoftheerrortypesaddedtofunctions:
•ProDrawingViewNameSet()—The errortypePRO_TK_E_FOUND has
beenadded.Itindicatesthatthedrawingviewcannotbesavedwiththe
specifiednamebecauseanotherdrawingviewwiththesamenamealready
existsinthedrawing.Ifyouwanttospecifyduplicatenamesfordrawing
views,settheconfiguration option allow_duplicate_view_names to
yes.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M020.
TechnicalSummaryofChanges 2115Annotations
NewFunction Description
ProDrawingSetDatumT agIsShown() ReturnsthedisplaystatusofthesetxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric 4.0M020.
TechnicalSummaryofChanges 2115Annotations
NewFunction Description
ProDrawingSetDatumT agIsShown() Returnsthedisplaystatusoftheset
datumtaginthespecifiedviewofa
drawing.
ProDrawingSetdatumtagV isit() Enablesyoutovisitthesetdatumtag
annotations inthespecifieddrawing.
2DCrossSection
NewFunction Description
ProDrawingV iew2DSectionFlip() Flipsthedirectionof2Dcrosssection
inadrawingview.
ProDrawingV iew2DSectionFlipGet() Retrievesthedirectioninwhichthe2D
crosssectionhasbeenclipped.
DataExchange
NewFunction Description
Pro2dImportAllSheets() Importstwo-dimensional geometry
fileswithallthedrawingsheetsfor
formatsthatsupportmultiplesheets,
andcreatesanewtwo-dimensional
model.
ProIntf3DFileW riteWithDefaultProfile
()ExportsaCreoParametric modeltothe
specifiedoutputformatusingthe
defaultexportprofile.
Dimensions
NewFunction Description
ProSelectionDimW itnessLineGet() Retrievesinformation aboutthe
dimension whichhasanannotation
attachedtoitswitnessline.
Geometryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefaultexportprofile.
Dimensions
NewFunction Description
ProSelectionDimW itnessLineGet() Retrievesinformation aboutthe
dimension whichhasanannotation
attachedtoitswitnessline.
Geometry
NewFunction Description
ProEdgeContourGet() Returnsapointertothecontour,which
isassociated withthespecifiededge.
2116 Creo®Parametric TOOLKIT User’sGuideViews
NewFunction Description
ProViewNameSet() Setsthenameoftheviewinthe
specifiedsolid.
ProViewDelete() Deletestheviewfromthespecified
solid.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M020canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
TechnicalSummaryofChangesforCreo
4.0M030
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M030
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
CriticalTechnicalChangesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M030andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
ChangeinBehaviorofLegacyDatumFeatureSymbol
Theassociativity betweenthedrawingand3Dmodelwasbrokenforlegacy
datumfeaturesymbolcreatedinreleasesbetweenCreoParametric 4.0F000and
CreoParametric 4.0M020.FromCreoParametric 4.0M030onward,this
behaviorhasbeenfixedandassociativity ismaintained. Thefunction
ProAnnotationIsAssociative() returnstheassociativity forlegacy
DFS.
PRO_REGEN_ALLOW_CONFIRM FlagDeprecated
FromCreoParametric 4.0M030onward,theregeneration flagPRO_REGEN_
ALLOW_CONFIRM hasbeendeprecated. CreoParametric displaysawarning
messagewhichgivesdetailsoffailedfeatures.ThepreviousbehaviorwhereanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxFromCreoParametric 4.0M030onward,theregeneration flagPRO_REGEN_
ALLOW_CONFIRM hasbeendeprecated. CreoParametric displaysawarning
messagewhichgivesdetailsoffailedfeatures.Thepreviousbehaviorwherean
interactive dialogboxprovidedanoptiontoretainfailedfeaturesandchildrenof
failedfeatures,ifregeneration fails,isnolongersupported.
TechnicalSummaryofChanges 2117ExportingModelsthatareDisplayedinCreoParametric
FromCreoParametric 4.0M030onward,anewconfiguration flagPRO_FACET_
VISIBLE_MODELS hasbeenaddedintheheaderfileProUtil.h. Youcanuse
thefunction ProOutputInclusionWithOptionsSet() tosetthe
configuration flagtoexportonlythemodelsthataredisplayedinCreoParametric.
Modelsthatarehiddenarenotexported.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M030.
Annotation Features
NewFunction Description
ProSetdatumtagAdditionalT extLoca-
tionGet()Retrievesthelocationofadditional text
forthespecifieddatumfeaturesymbol.
Parameters
NewFunction DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotation Features
NewFunction Description
ProSetdatumtagAdditionalT extLoca-
tionGet()Retrievesthelocationofadditional text
forthespecifieddatumfeaturesymbol.
Parameters
NewFunction Description
ProParameterDrivertypeGet() Getsthetypeofoperationthatis
drivingamodelparameter.
ProParameterDrivingsymbolGet() Getsthetypeofparameter thatis
drivingamodelparameter.
Surfaces
NewFunction Description
ProMdlVisibleSideAppearanceprops-
Get()
ProMdlVisibleSideAppearancepropsSet
()Getsandsetsthesurfaceproperties for
thespecifiedpart,assemblycomponent,
subassembly ,specifiedsideofaquiltor
surface.
ProMdlVisibleSideT exturepropsGet()
ProMdlVisibleSideT exturepropsSet()Getsandsetsthetextureproperties of
thesurfaceforthespecifiedpart,
assemblycomponent, subassembly ,
specifiedsideofaquiltorsurface.
ProMdlVisibleSideT extureplacement-
propsGet()
ProMdlVisibleSideT extureplacement-
propsSet()Getsandsetstheproperties relatedto
theplacingofsurfacetextureforthe
specifiedpart,assemblycomponent,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMdlVisibleSideT extureplacement-
propsGet()
ProMdlVisibleSideT extureplacement-
propsSet()Getsandsetstheproperties relatedto
theplacingofsurfacetextureforthe
specifiedpart,assemblycomponent,
subassembly ,specifiedsideofaquiltor
surface.
ProSurfaceSideAppearancepropsGet() Getsandsetsthesurfaceproperties of
2118 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProSurfaceSideAppearancepropsSet()thesurfaceforthespecifiedsideofa
surface.
ProSurfaceSideT exturepropsGet()
ProSurfaceSideT exturepropsSet()Getsandsetsthetextureproperties of
thesurfaceforthespecifiedsideofa
surface.
ProSurfaceSideT extureplacementprops-
Get()
ProSurfaceSideT extureplacementprops-
Set()Getsandsetstheproperties relatedto
theplacingofsurfacetextureforthe
specifiedsideofasurface.
TechnicalSummaryofChangesforCreo
4.0M040
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M040
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx4.0M040
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M040
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M040.
Annotations
NewFunction Description
ProSelectionDimW itnessLineSet() Setstheinformation ofthedimension
whichhasanannotation attachedtoits
witnessline.
Drawings
NewFunction Description
ProDtlnoteT ableCellGet() Returnsthespecifictable,andtherow
andcolumnwithinthetable,forthe
specifiedtablenote.
SymbolInstances
NewFunction Description
ProDtlsyminstEntitiesV isibleGet() Returnsthevisibleitemsinthesymbol
instancedata.
TechnicalSummaryofChanges 2119Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M040canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, CreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingchangesinCreoParametric 4.0M040canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
ThreadfeedavailableforGoToPointandGoDeltaTool
motions
FromCreoParametric 4.0M040onward,anewfeedtypePRO_TM_FEED_
THREADhasbeenaddedtotheenumerated datatypeProToolMtnFeedType.
PRO_TM_FEED_THREAD specifiesathreadfeedtype.Threadfeedspecifiesthe
feedratefortappingstep.ThisnewfeedtypeisavailablefortheGoToPointand
GoDeltatoolmotiondialogswithinthetappingstep.
TechnicalSummaryofChangesforCreo
4.0M050
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M050
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M050andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M050andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
ChangeinBehaviorofProDrawingSolidReplace()
FromCreoParametric 3.0M160onward,thefunction
ProDrawingSolidReplace() allowsyoutoreplaceasolidmodelina
drawingwithanothersolidmodelthatalreadyexistsinthespecifieddrawing.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M050.
2120 Creo®Parametric TOOLKIT User’sGuideFeatures
NewFunction Description
ProFeatureIsComponentLike() Identifiescomponents andother
featuresthatbehavelikecomponents.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M050canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, CreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefollowingchangesinCreoParametric 4.0M050canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
AccessingRelationsofNotebooks
FromCreoParametric 4.0M050onward,thevalue PRO_RELOBJ_LAYOUT has
beenaddedtotheenumerated datatypeProRelObjType intheheaderfile
ProRelSet.h. Youcannowaccesstherelationsinanotebookfromthe.lay
files.
TechnicalSummaryofChangesforCreo
4.0M060
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M060
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M060andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
UpdatestoErrorTypeAddedtoFunctions
Following isthelistoftheerrortypesaddedtofunctions:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
UpdatestoErrorTypeAddedtoFunctions
Following isthelistoftheerrortypesaddedtofunctions:
•ProPatternCreate()—The errortypePRO_TK_ABORT isadded.It
specifiesthatthecreationofpatternfeaturehasfailed.Thiserrorisalso
returnedwhenthenamespecifiedforthenewpatternisalreadyused.
TechnicalSummaryofChanges 2121•ProSetdatumtagReferenceGet()—The errortypePRO_TK_NOT_
VALIDisadded.Thefunction ProSetdatumtagReferenceGet()
supportsonlylegacydatumfeaturesymbolscreatedinCreoParametric 3.0
andearlier.Theerrorindicatesthatthespecifiedsetdatumtagannotation is
notalegacydatumfeature.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M060.
Drawings
NewFunction Description
ProDrawingFromT emplateCreate() Createsadrawingfromatemplate
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M060canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthesexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMiscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M060canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
ProjectDatumPointOnaPlanarsurface,DatumPlane,
DatumAxis,LinearCurveorLinearEdge
Youcanusethevalue PRO_DTMPNT_CONSTR_TYPE_PROJECT toprojecta
datumpointonaplanarsurface,datumplane,datumaxis,linearcurve,orlinear
edge.Thevalueisavailableintheenumerated datatype
ProDtmpntConstrType.
TechnicalSummaryofChangesforCreo
4.0M070
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M070
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M070andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThissectiondescribesthechangesinCreoParametric 4.0M070andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
2122 Creo®Parametric TOOLKIT User’sGuideUpdatestoErrorCodeforProMaterialCurrentGet()
InCreoParametric 4.0M070andlater,thefunction
ProMaterialCurrentGet() returnstheerrortypePRO_TK_E_NOT_
FOUND.Thisindicatesthatmaterialisnotsetonthepart.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric forCreoParametric 4.0
M070.
Cabling
NewFunction Description
ProCableCosmeticFeatureT ypeGet() Retrievesthetypeofcosmeticfeature.
ProCableCosmeticDistanceGet() Retrievesthedistanceofthecosmetic
featurefromthestartorendofa
segment.
Drawings
NewFunction Description
ProDtlattachSet() SetstheProDtlattach information
foranexistingattachment.
TechnicalSummaryofChangesforCreo
4.0M080
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M080xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDtlattachSet() SetstheProDtlattach information
foranexistingattachment.
TechnicalSummaryofChangesforCreo
4.0M080
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M080
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M080andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
#definesforJustification ofTextStyleObject
#defines PRO_REAL_VERTJUST_* specifythevaluesforjustification forthe
textstyleobject.
TechnicalSummaryofChanges 2123IntheCreoParametric 4.0releases,thefunctions
ProTextStyleVertJustificationGet() and
ProTextStyleVertJustificationSet() usedincorrectsetofdefault
valuesfortheenumerated dataProVerticalJustification.T ogetcorrect
results,usethenew#defines PRO_REAL_VERTJUST_* inthefunctions. ThexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProTextStyleVertJustificationSet() usedincorrectsetofdefault
valuesfortheenumerated dataProVerticalJustification.T ogetcorrect
results,usethenew#defines PRO_REAL_VERTJUST_* inthefunctions. The
defaultvalueswillbecorrectedinafuturereleaseofCreoParametric.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M080.
Assembly
NewFunction Description
ProAsmcompConstraintsW ithDtmOr-
ientGet()Retrievesthespecifiedconstraints for
thegivenassemblycomponent, where
theorientation valueofconstraints is
returnedusingtheenumerated datatype
ProDatumside.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M080canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
AddedStrokedASME/ISOFontsforSymbolFont
InCreoParametric 4.0M080andlater,twovaluesareaddedtotheenumeratedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElements/Pro TOOLKIT,orPro/TOOLKITapplications.
AddedStrokedASME/ISOFontsforSymbolFont
InCreoParametric 4.0M080andlater,twovaluesareaddedtotheenumerated
datatypeProSymbolFont definedintheheaderfileProGtol.h. Thenew
values PRO_FONT_STROKED_ASME andPRO_FONT_STROKED_ISO specify
thatthesymbolsusestrokedASMEandstrokedISOfontsthatarenativetoCreo.
SupportforAutomaticRepresentation
Thevalidvalues PRO_SIMPREP_AUTO andPRO_SIMPREP_AUTO_REP are
addedtotheenumerated datetypes ProSimprepActionType and
ProSimprepType respectively .Usethesevaluestouseautomatic
representation.
2124 Creo®Parametric TOOLKIT User’sGuideTechnicalSummaryofChangesforCreo
4.0M090
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M090
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M090andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandsuperseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M090andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
UpdatestoErrorTypes
Following isthelistoftheerrortypesaddedtofunctions:
•ProDtlsymdefDelete()—The errortypePRO_TK_GENERAL_ERROR
isadded.Itindicatesthatthedeletionofasymboldefinitionfromaparthas
failed.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M090.
Annotations
NewFunction Description
ProAnnotationNeedsConversion() Returnstrueiftheannotation iscreated
inreleasesearlierthanCreo
Parametric4.0 F000oriscreatedusing
thedeprecated functions
ProGtolCreate() or
ProSetdatumtagCreate() and
needsconversion.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M090canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthesexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxneedsconversion.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M090canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
TechnicalSummaryofChanges 2125SupportforUDFPlacementUserInterface
InCreoParametric 4.0M090andlater,theuserinterfaceforUDFplacement can
bedisplayedusingthefunction ProUdfCreate(). Usethevalue
PROUDFOPT_EDIT_MENU specifiedundertheenumerated datatype
ProUdfCreateOption, todisplaytheuserinterfaceforUDFplacement.
TechnicalSummaryofChangesforCreo
4.0M100
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M100
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M100.
Annotations
NewFunction Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandsuperseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M100.
Annotations
NewFunction Description
ProAnnotationplaneActiveGet() Returnstheactiveannotation planein
thespecifiedmodel.
ProNoteAttachScreenSet() Setsthelocationofthenotetextatthe
screenlocation.
CombinedStates
NewFunction Description
ProCombstateAnnotationsAndSuppl-
GeomStateSet()Allowsyoutochangethedisplayof
annotations andsupplementary
geometrybythespecifiedcombined
stateorlayers.
Drawings
NewFunction Description
ProDrawingDraftT oDraftent() Convertsaselectionoftypedraftto
draftentityinthespecifieddrawing.
2126 Creo®Parametric TOOLKIT User’sGuideGeometricTolerances
NewFunction Description
ProGtolDtlnotesCollect() Returnsthedetailnotesthatrepresenta
geometric toleranceinthespecified
drawing.
SymbolInstance
NewFunction Description
ProDtlsyminstIsDatumT arget() Checksifthespecifiedsymbolinstance
isadatumtarget.Thisfunctionreturnsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometric toleranceinthespecified
drawing.
SymbolInstance
NewFunction Description
ProDtlsyminstIsDatumT arget() Checksifthespecifiedsymbolinstance
isadatumtarget.Thisfunctionreturns
PRO_B_TRUE ifthespecifiedsymbol
instanceisadatumtargetandreturns
PRO_B_FALSE ifitisnot.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M100canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
NosupportforPRO_REGEN_UNDO_IF_F AILandPRO_
REGEN_ALLOW_CONFIRM in
ProInsertmodeWithoptionsCancel()
Thefunction ProInsertmodeWithoptionsCancel() doesnotsupportthe
regeneration controlbitflagsPRO_REGEN_UNDO_IF_FAIL andPRO_REGEN_
ALLOW_CONFIRM. Thefunctionreturns PRO_TK_BAD_CONTEXT, ifthevalue
oftheinputargument flagsispassedasPRO_REGEN_UNDO_IF_FAIL orPRO_
REGEN_ALLOW_CONFIRM.
NosupportfordrawingviewsinProViewRetrieve ()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxALLOW_CONFIRM. Thefunctionreturns PRO_TK_BAD_CONTEXT, ifthevalue
oftheinputargument flagsispassedasPRO_REGEN_UNDO_IF_FAIL orPRO_
REGEN_ALLOW_CONFIRM.
NosupportfordrawingviewsinProViewRetrieve ()
Thefunction ProViewRetrieve() cannotbeusedtoretrieveviewina
drawingmode.YoucanusetheProDrawingView* functionstoget
information aboutdrawingviews.
TechnicalSummaryofChanges 2127TechnicalSummaryofChangesforCreo
4.0M110
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M110and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M110.
Cabling
NewFunction Description
ProCablelocationMaxDiameterGet() Retrievesthemaximum diameterofthe
locationforthespecifiedharness.
ProCablelocationHeightDimensionGet
()Retrievestheheightdimension forthe
specifiedcablelocation.
GeometricTolerance
NewFunction Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocationforthespecifiedharness.
ProCablelocationHeightDimensionGet
()Retrievestheheightdimension forthe
specifiedcablelocation.
GeometricTolerance
NewFunction Description
ProGtolleaderZExtensionlineGet() RetrievestheZ-Extension lineofthe
gtolleader.
Models
NewFunction Description
ProMdlLockGet()
ProMdlLockSet()Getsandsetsthelock/unlock stateof
themodel.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M110canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
Updatestotheenumerated datatypeProDtlattachT ype
InCreoParametric 4.0M110andlater,thefollowingvalueisaddedtothe
enumerated datatypeProDtlattachType:
2128 Creo®Parametric TOOLKIT User’sGuide•PRO_DTLATTACHTYPE_SUPPRESSED—Indicates thattheattachment isto
anitemthatismissingfromthedrawingorpart.
TechnicalSummaryofChangesforCreo
4.0M110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2128 Creo®Parametric TOOLKIT User’sGuide•PRO_DTLATTACHTYPE_SUPPRESSED—Indicates thattheattachment isto
anitemthatismissingfromthedrawingorpart.
TechnicalSummaryofChangesforCreo
4.0M110
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M110and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M110.
Cabling
NewFunction Description
ProCablelocationMaxDiameterGet() Retrievesthemaximum diameterofthe
locationforthespecifiedharness.
ProCablelocationHeightDimensionGet
()Retrievestheheightdimension forthe
specifiedcablelocation.
GeometricTolerance
NewFunction Description
ProGtolleaderZExtensionlineGet() RetrievestheZ-Extension lineofthe
gtolleader.
Models
NewFunction Description
ProMdlLockGet()
ProMdlLockSet()Getsandsetsthelock/unlock stateof
themodel.
Miscellaneous TechnicalChangesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgtolleader.
Models
NewFunction Description
ProMdlLockGet()
ProMdlLockSet()Getsandsetsthelock/unlock stateof
themodel.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 4.0M110canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
TechnicalSummaryofChanges 2129Updatestotheenumerated datatypeProDtlattachT ype
InCreoParametric 4.0M110andlater,thefollowingvalueisaddedtothe
enumerated datatypeProDtlattachType:
•PRO_DTLATTACHTYPE_SUPPRESSED—Indicates thattheattachment isto
anitemthatismissingfromthedrawingorpart.
TechnicalSummaryofChangesforCreo
4.0M120
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M120
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M120.
Assemblyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandsuperseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M120.
Assembly
NewFunction Description
ProAsmcompConstraintsW ithComp-
pathGet()Retrievesthespecifiedconstraints for
thegivenassemblycomponent and
component path.
GeometricTolerance
NewFunction Description
ProGtolAttachSuppressedLeadersGet() Getsthenumberofleadersthatare
suppressed duetomissingreferences.
TechnicalSummaryofChangesforCreo
4.0M130
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M130
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
2130 Creo®Parametric TOOLKIT User’sGuideCriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 4.0M130andCreo
Parametric TOOLKITthatmightrequirealterationofexistingCreoParametric
TOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
UpdatestoErrorTypes
Thefollowingisthelistoftheerrortypesaddedtofunctions:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKIT, CreoElements/Pro TOOLKIT, andPro/TOOLKITapplications.
UpdatestoErrorTypes
Thefollowingisthelistoftheerrortypesaddedtofunctions:
•ProDrawingSetDatumTagIsShown()—The errortypePRO_TK_BAD_
CONTEXT isadded.Thisindicatesthatthedatumfeaturesymbolcannotbe
showninthespecifieddrawingview.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M130.
Annotations
NewFunction Description
ProMdlAnnotplanesFromGalleryCol-
lect()Collectsthenamesofalltheannotation
planesinthegallery.
ProMdlAnnotationplanesCollect() Collectsthenamesofallthenamed
annotation planesinthespecified
model.
ProAnnotationplaneNamesGet() Returnsthenamesofthespecified
annotation plane.
ProAnnotationplaneByNameInit() Findsandreturnstheannotation plane
withthespecifiedname.
ProAnnotationplaneNameAssign() Assignsanametothespecified
annotation plane.
ProAnnotationplaneAddT oGallery() Addsanannotation planewiththe
specifiednametothegallery.
ProAnnotationplaneRemoveFromGal-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProAnnotationplaneNameAssign() Assignsanametothespecified
annotation plane.
ProAnnotationplaneAddT oGallery() Addsanannotation planewiththe
specifiednametothegallery.
ProAnnotationplaneRemoveFromGal-
lery()Removestheannotation planewiththe
specifiednamefromthegallery.
Features
NewFunction Description
ProFeatureReferenceEditRefsGet() Returnsanarrayoftheoriginal
references ofafeaturethatareusedto
performtheeditreferenceoperation.
TechnicalSummaryofChanges 2131GeometricTolerance
NewFunction Description
ProGtolEnvelopeGet() Returnstheenvelopeofthegtol.
Dimensions
NewFunction Description
ProDimensionEnvelopeGet() Returnstheenvelopeofalineinthe
specifieddimension.
Drawings
NewFunction Description
ProDtlsyminstEnvelopeGet() Returnstheenvelopeofthesymbol.
TechnicalSummaryofChangesforCreo
4.0M140
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M140
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
NewFunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx4.0M140
Thecriticalandmiscellaneous technicalchangesinCreoParametric 4.0M140
andCreoParametric TOOLKITareexplainedinthissection.Italsoliststhenew
andsuperseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 4.0M140.
Annotations
NewFunction Description
ProSetdatumtagPlacementGet() Returnstheitemtype,id,andowneron
whichthesetdatumtagisplaced.
DataExchange
NewFunction Description
ProIntfExportProfileLoad() Loadsthespecifiedprofileforexport.
2132 Creo®Parametric TOOLKIT User’sGuideGraphics
NewFunction Description
ProWindowPixelOutlineGet() ReturnstheoutlineoftheCreo
Parametric windowinpixels.
ProWindowCoordinatePixelGet() Convertsthewindowscoordinates
receivedthroughtheinputargument
pointintopixelcoordinates.
TechnicalSummaryofChangesforCreo
5.0.0.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 5.0.0.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx5.0.0.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 5.0.0.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 5.0.0.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
UpdatestoErrorTypes
Following isthelistoftheerrortypesaddedtofunctions:
•ProDtlnoteNoteGet()—The errortypePRO_TK_NO_ACCESS has
beenadded.TheerrortypePRO_TK_NO_ACCESS indicatesthatthedetail
noteisnotaccessible.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 5.0.0.0.
DataSharingFeature
NewFunction Description
ProDatasharingfeatCopiedAnnotFind() Retrievestheannotation itemownedby
thedatasharingfeature,whichisa
copyofthespecifiedannotation item.
TechnicalSummaryofChanges 2133Features
NewFunction DescriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDatasharingfeatCopiedAnnotFind() Retrievestheannotation itemownedby
thedatasharingfeature,whichisa
copyofthespecifiedannotation item.
TechnicalSummaryofChanges 2133Features
NewFunction Description
ProFeatureIsComponentLike() Identifiescomponents andother
featuresthatbehavelikecomponents.
Models
NewFunction Description
ProLayeritemLayerStatusGet() Returnsthestatusofanitemforthe
specifiedlayer.
Superseded Functions
Thissectiondescribesthesuperseded functionsforCreoParametric TOOLKIT
forCreoParametric 5.0.0.0.
Parameters
Superseded Function NewFunction
ProParameterDriverGet() ProParameterDrivertypeGet()
ProParameterDrivingparamGet() ProParameterDrivingsymbolGet()
Surfaces
Superseded Function NewFunction
ProMdlVisibleAppearancepropsGet() ProMdlVisibleSideAppearanceprops-
Get()
ProMdlVisibleAppearancepropsSet() ProMdlVisibleSideAppearancepropsSet
()
ProMdlVisibleTexturepropsGet() ProMdlVisibleSideT exturepropsGet()
ProMdlVisibleTexturepropsSet() ProMdlVisibleSideT exturepropsSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx()
ProMdlVisibleTexturepropsGet() ProMdlVisibleSideT exturepropsGet()
ProMdlVisibleTexturepropsSet() ProMdlVisibleSideT exturepropsSet()
ProMdlVisibleTextureplacementprops-
Get()ProMdlVisibleSideT extureplacement-
propsGet()
ProMdlVisibleTextureplacementprops-
Set()ProMdlVisibleSideT extureplacement-
propsSet()
ProSurfaceAppearancepropsGet() ProSurfaceSideAppearancepropsGet()
ProSurfaceAppearancepropsSet() ProSurfaceSideAppearancepropsSet()
ProSurfaceT exturepropsGet() ProSurfaceSideT exturepropsGet()
ProSurfaceT exturepropsSet() ProSurfaceSideT exturepropsSet()
2134 Creo®Parametric TOOLKIT User’sGuideSuperseded Function NewFunction
ProSurfaceT extureplacementpropsGet() ProSurfaceSideT extureplacementprops-
Get()
ProSurfaceT extureplacementpropsSet() ProSurfaceSideT extureplacementprops-
Set()
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 5.0.0.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthesexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSet()
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 5.0.0.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
ChangeinBehaviorofProDrawingSolidReplace()
FromCreoParametric 3.0M160onward,thefunction
ProDrawingSolidReplace() allowsyoutoreplaceasolidmodelina
drawingwithanothersolidmodelthatalreadyexistsinthespecifieddrawing.
CreatingroundsandchamfersintheEditCornerSeam
Feature
FromCreoParametric 5.0.0.0onward,theelement PRO_E_CRNR_SEAM_CR_
RND_CHMF hasbeenaddedintheelementtreefortheEditCornerSeamfeature
intheheaderfileProSmtEditCornerSeam.h. Theelementallowsyouto
specifyiftheroundsandchamfersmustberecreatedafterthecornerseamshave
beenedited.
SupportATBforAutodeskInventorPartsandAssembly
FromCreoParametric 5.0.0.0onward,Associative TopologyBus(ATB)
commands aresupported forAutodeskInventorpart*.iptandassembly *.iam
files.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbeenedited.
SupportATBforAutodeskInventorPartsandAssembly
FromCreoParametric 5.0.0.0onward,Associative TopologyBus(ATB)
commands aresupported forAutodeskInventorpart*.iptandassembly *.iam
files.
SupportforAutodeskInventorPartandAssemblyinCreo
Unite
FromCreoParametric 5.0.0.0onward,youcanuseCreoUnitetoopenAutodesk
Inventorpart*.iptandassembly *.iammodelsinCreoapplications without
creatingseparateCreomodels.
ThefollowingvalueshavebeenaddedforAutodeskInventorpartandassembly
modelsintheenumerated datatypeProMdlfileType:
•PRO_INVENTOR_PART
TechnicalSummaryofChanges 2135•PRO_INVENTOR_ASSEM
SupportforCosmeticFeatures
FromCreoParametric 5.0.0.0onward,anewvalue PRO_MECH_COSMETIC has
beenaddedtotheenumerated datatypeProMechGeomrefType. Thevalue
specifiesacosmeticentitythatisusedasacontainerforlatticebeamsorwalls.
Youcanusethevalue PRO_MECH_COSMETIC infunctionstogetandset
cosmeticentities.
TechnicalSummaryofChangesforCreo
5.0.1.0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiesacosmeticentitythatisusedasacontainerforlatticebeamsorwalls.
Youcanusethevalue PRO_MECH_COSMETIC infunctionstogetandset
cosmeticentities.
TechnicalSummaryofChangesforCreo
5.0.1.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 5.0.1.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 5.0.1.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
UpdatestoErrorTypeAddedtoFunctions
ProPatternCreate()—The errortypePRO_TK_ABORT isadded.It
specifiesthatthecreationofpatternfeaturehasfailed.Thiserrorisalsoreturned
whenthenamespecifiedforthenewpatternisalreadyused.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 5.0.1.0.
Drawings
NewFunction Description
ProDrawingFromT emplateCreate() CreatesadrawingfromatemplatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 5.0.1.0.
Drawings
NewFunction Description
ProDrawingFromT emplateCreate() Createsadrawingfromatemplate
2136 Creo®Parametric TOOLKIT User’sGuideMiscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 5.0.1.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
SupportforImportandExportof3DManufacturing Format
(3MF)
Youcanimportandexport3DManufacturing Format(3MF)filesusingthe
followingvalues:
Value Enumerated DataType
PRO_3MF_FILE ProImportExportFile
PRO_INTF_IMPORT_3MF ProIntfImportType
PRO_INTF_EXPORT_3MF ProIntf3DExportType
PRO_INTF_3MF ProIntfType
TechnicalSummaryofChangesforCreo
5.0.2.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 5.0.2.0and
CreoParametric TOOLKITareexplainedinthissection.ItalsoliststhenewandxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTechnicalSummaryofChangesforCreo
5.0.2.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 5.0.2.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 5.0.2.0.
Annotations
NewFunction Description
ProNoteW rapTextGet()
ProNoteW rapTextSet()Retrievesandsetsthewrappingstatus
ofthetextforaspecifiednoteina
solid.
TechnicalSummaryofChanges 2137Cabling
NewFunction Description
ProCableCosmeticFeatureT ypeGet() Retrievesthetypeofcosmeticfeature.
ProCableCosmeticDistanceGet() Retrievesthedistanceofthecosmetic
featurefromthestartorendofa
segment.
Drawings
NewFunction Description
ProDtlattachSet() SetstheProDtlattach information
foranexistingattachment.
ProDtlnoteW rapTextGet()
ProDtlnoteW rapTextSet()Retrievesandsetsthewrappingstatus
ofthetextforaspecifiednoteina
drawing.
Miscellaneous TechnicalChangesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforanexistingattachment.
ProDtlnoteW rapTextGet()
ProDtlnoteW rapTextSet()Retrievesandsetsthewrappingstatus
ofthetextforaspecifiednoteina
drawing.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 5.0.2.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
AddedStrokedASME/ISOFontsforSymbolFont
InCreoParametric 5.0.2.0andlater,twovaluesareaddedtotheenumerated data
typeProSymbolFont definedintheheaderfileProGtol.h. Thenewvalues
PRO_FONT_STROKED_ASME andPRO_FONT_STROKED_ISO specifythatthe
symbolsusestrokedASMEandstrokedISOfontsthatarenativetoCreo.
TechnicalSummaryofChangesforCreo
5.0.3.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 5.03.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChangesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThecriticalandmiscellaneous technicalchangesinCreoParametric 5.03.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 5.0.3.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
2138 Creo®Parametric TOOLKIT User’sGuideUpdatestoErrorCodeforProMaterialCurrentGet()
InCreoParametric 4.0M070andlater,thefunction
ProMaterialCurrentGet() returnstheerrortypePRO_TK_E_NOT_
FOUNDwhichindicatesthatmaterialisnotsetonthepart.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 5.0.3.0.
CrossSection
NewFunction Description
ProXsecActiveGet() Retrievesthecrosssection,whichis
activeinthecurrentview.
ProXsecActiveSet() Setsthespecifiedcrosssectionas
activeinthecurrentview.
Miscellaneous TechnicalChangesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProXsecActiveGet() Retrievesthecrosssection,whichis
activeinthecurrentview.
ProXsecActiveSet() Setsthespecifiedcrosssectionas
activeinthecurrentview.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 5.0.3.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
Notification andEventTypeCalledAfterModelisLoadedin
CreoParametric Window
Thecallbackfunction ProWindowOccupyModelPostAction() and
notification event PRO_WINDOW_OCCUPY_MODEL_POST arecalledaftera
modelisloadedintheCreoParametric window.
SupportforAutomaticRepresentation
Thevalidvalues PRO_SIMPREP_AUTO andPRO_SIMPREP_AUTO_REP are
addedtotheenumerated datetypes ProSimprepActionType and
ProSimprepType respectively .Usethesevaluestouseautomatic
representation.
TechnicalSummaryofChanges 2139TechnicalSummaryofChangesforCreo
5.0.4.0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaddedtotheenumerated datetypes ProSimprepActionType and
ProSimprepType respectively .Usethesevaluestouseautomatic
representation.
TechnicalSummaryofChanges 2139TechnicalSummaryofChangesforCreo
5.0.4.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 5.0.4.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 5.0.4.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
#definesforJustification ofTextStyleObject
#defines PRO_REAL_VERTJUST_* specifythevaluesforjustification forthe
textstyleobject.
IntheCreoParametric 4.0releases,thefunctions
ProTextStyleVertJustificationGet() and
ProTextStyleVertJustificationSet() usedincorrectsetofdefault
valuesfortheenumerated dataProVerticalJustification.T ogetcorrect
results,usethenew#defines PRO_REAL_VERTJUST_* inthefunctions. ThexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProTextStyleVertJustificationSet() usedincorrectsetofdefault
valuesfortheenumerated dataProVerticalJustification.T ogetcorrect
results,usethenew#defines PRO_REAL_VERTJUST_* inthefunctions. The
defaultvalueswillbecorrectedinafuturereleaseofCreoParametric.
UpdatestoErrorTypes
Following isthelistoftheerrortypesaddedtofunctions:
•ProGtolAttachLeadersGet()—The errortypePRO_TK_E_NOT_
FOUNDisadded.Itindicatesthattheleadersaresuppressed.
•ProDtlsymdefDelete()—The errortypePRO_TK_GENERAL_ERROR
isadded.Itindicatesthatthedeletionofasymboldefinitionfromaparthas
failed.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 5.0.4.0.
2140 Creo®Parametric TOOLKIT User’sGuideAssembly
NewFunction Description
ProAsmcompConstraintsW ithDtmOr-
ientGet()Retrievesthespecifiedconstraints for
thegivenassemblycomponent, where
theorientation valueofconstraints is
returnedusingtheenumerated datatype
ProDatumside.
Superseded FunctionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxientGet()Retrievesthespecifiedconstraints for
thegivenassemblycomponent, where
theorientation valueofconstraints is
returnedusingtheenumerated datatype
ProDatumside.
Superseded Functions
Thissectiondescribesthesuperseded functionsforCreoParametric TOOLKIT
forCreoParametric 5.0.4.0.
Assembly
Superseded Function NewFunction
ProAsmcompConstraintsGet() ProAsmcompConstraintsW ithDtmOr-
ientGet()
TechnicalSummaryofChangesforCreo
5.0.5.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 5.0.5.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 5.0.5.0.
TechnicalSummaryofChanges 2141Annotations
NewFunction Description
ProAnnotationNeedsConversion() Returnstrueiftheannotation iscreated
inreleasesearlierthanCreo
Parametric4.0 F000oriscreatedusing
thedeprecated functions
ProGtolCreate() or
ProSetdatumtagCreate() and
needsconversion.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinreleasesearlierthanCreo
Parametric4.0 F000oriscreatedusing
thedeprecated functions
ProGtolCreate() or
ProSetdatumtagCreate() and
needsconversion.
ProAnnotationplaneActiveGet() Returnstheactiveannotation planein
thespecifiedmodel.
TechnicalSummaryofChangesforCreo
6.0.0.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 6.0.0.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 6.0.0.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
DigitallySigningtheApplication
YoucandigitallysignyourCreoParametric TOOLKITapplication. Usethe-cd
optioninprotk_unlock todigitallysignyourapplication.
Thesampleapplications providedwithCreoParametric TOOLKIT,whichare
installedundertheloadpointofCreoParametric at<creo_loadpoint>\xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoptioninprotk_unlock todigitallysignyourapplication.
Thesampleapplications providedwithCreoParametric TOOLKIT,whichare
installedundertheloadpointofCreoParametric at<creo_loadpoint>\
<datecode>\Common Files\protoolkit\ protk_appls aredigitally
signed.
SupportforIPv6
Creo6.0.0.0supportsIPv6.Ifyouwanttorunapplications createdinCreo
Parametric 5.0.0.0andpreviousreleasesinCreoParametric 6.0.0.0whereIPv6is
enabled,youmustrebuildtheapplications. Theapplications continuetoworkin
CreoParametric 6.0.0.0withoutrebuilding forIPv4protocol.
Usetheenvironment variable PTC_IPV6_MODE tosetthecommunication
protocolversion.
2142 Creo®Parametric TOOLKIT User’sGuideNewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 6.0.0.0.
Annotations
NewFunction Description
ProNoteReferencesAdd() Addssemanticreferences toaspecified
noteinasolid.
ProNoteReferencesGet() ReturnsaProArray ofadditional
semanticreferences foranote.
ProNoteReferenceDelete() Deletestheadditional semanticxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnoteinasolid.
ProNoteReferencesGet() ReturnsaProArray ofadditional
semanticreferences foranote.
ProNoteReferenceDelete() Deletestheadditional semantic
references.
UserInterface:Dashboards
NewFunction Description
ProUIDashboardshowoptionsIconSet() Setsaniconforthespecified
dashboard.
ProUIDashboardshowoptionsHelpT ext-
Set()Setsthehelptextforthespecified
dashboard.
Superseded Functions
Thissectiondescribesthesuperseded functionsforCreoParametric TOOLKIT
forCreoParametric 6.0.0.0.
Assembly
Superseded Function NewFunction
ProAsmcompConstraintsGet() ProAsmcompConstraintsW ithDtmOr-
ientGet()
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 6.0.0.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
Sheetmetal
ThissectionexplainsthechangesintheareaofSheetmetal.
TechnicalSummaryofChanges 2143FlangeWallEnhancementsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElements/Pro TOOLKIT,orPro/TOOLKITapplications.
Sheetmetal
ThissectionexplainsthechangesintheareaofSheetmetal.
TechnicalSummaryofChanges 2143FlangeWallEnhancements
InCreoParametric 6.0.0.0andlater,theelement PRO_E_SMT_WALL_HEIGHT_
TYPEisdefinedbytheenumerated datatypeProBendPosition.
Theelement PRO_E_SMT_WALL_TYPE isdefinedbytheenumerated type
ProSmtWallWallType. Thisenumerated typehasanewvalidvalue PRO_
SMT_WALL_TYPE_MERGE anditspecifiesthewalltypeoftheflangewall
feature.
FlatWallEnhancements
Theelement PRO_E_WALL_CORNER_TREATMENT isaddedintheelementtree
fortheFlatWallfeaturedefinedintheheaderfileProSmtFlatWall.h. This
elementisdefinedbytheenumerated datatypeProWallCornerTreatment .
Itspecifiesifthecorneriscreatedusingseamorjustreliefdefinition, orthe
cornerisnotcreated.
UpdatestoProSmtRecognition.h file
Theelementnamesfortheelements PRO_E_SMT_CRN_SEAM_RCG andPRO_
E_SMT_CRN_SEAM_UNRCG arechangedtocorner seam cmpinthe
ProSmtRecognition.h file.
MergeWallFeaturexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUpdatestoProSmtRecognition.h file
Theelementnamesfortheelements PRO_E_SMT_CRN_SEAM_RCG andPRO_
E_SMT_CRN_SEAM_UNRCG arechangedtocorner seam cmpinthe
ProSmtRecognition.h file.
MergeWallFeature
Youcanaccessandcreatethemergewallfeatureinmodelsusingtheelementtree
definedintheheaderfileProSmtMergeWalls.h.
SupportforLatticesasaSubtypeofaGeometricEntity
Latticetypes3Dand2.5D,aresupported assubtypesofageometric entity.To
specifylatticesassubtypes,usethefollowingvalues.Thesevaluesareavailablein
theenumerated datatypeProMechGeomrefSubType:
•PRO_MECH_FEAT_3D_LATT
•PRO_MECH_FEAT_2P5D_LATT
SupportforAutomaticRepresentation
Thevalidvalues PRO_SIMPREP_AUTO andPRO_SIMPREP_AUTO_REP are
addedtotheenumerated datetypes ProSimprepActionType and
ProSimprepType respectively .Usethesevaluestouseautomatic
representation.
2144 Creo®Parametric TOOLKIT User’sGuideTechnicalSummaryofChangesforCreo
6.0.1.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 6.0.1.0andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrepresentation.
2144 Creo®Parametric TOOLKIT User’sGuideTechnicalSummaryofChangesforCreo
6.0.1.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 6.0.1.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 6.0.1.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
UpdatestoErrorTypes
Following isthelistoftheerrortypesaddedtofunctions:
•ProSurfaceTessellationGet()— TheerrortypePRO_TK_
INCOMPLETE_TESS isadded.Thisindicatesthattheresultingtessellation
mayhavemissingoroverlapping triangles.
•ProPartTessellate()—The errortypePRO_TK_INCOMPLETE_TESS
isadded.Thisindicatesthatthetessellation ofsomesurfacesmayhave
missingoroverlapping triangles.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 6.0.1.0.
Annotationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmissingoroverlapping triangles.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 6.0.1.0.
Annotations
NewFunction Description
ProAnnotationplaneActiveGet() Returnstheactiveannotation planein
thespecifiedmodel.
TechnicalSummaryofChangesforCreo
6.0.2.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 6.0.2.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
TechnicalSummaryofChanges 2145CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 6.0.2.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 6.0.2.0.
Annotations
NewFunction Description
ProNoteAttachScreenSet() Setsthelocationofthenotetextatthe
screenlocation.
CombinedStates
NewFunction Description
ProCombstateAnnotationsAndSuppl-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAnnotations
NewFunction Description
ProNoteAttachScreenSet() Setsthelocationofthenotetextatthe
screenlocation.
CombinedStates
NewFunction Description
ProCombstateAnnotationsAndSuppl-
GeomStateSet()Allowsyoutochangethedisplayof
annotations andsupplementary
geometrybythespecifiedcombined
stateorlayers.
Drawings
NewFunction Description
ProDrawingDraftT oDraftent() Convertsaselectionoftypedraftto
draftentityinthespecifieddrawing.
GeometricTolerances
NewFunction Description
ProGtolDtlnotesCollect() Returnsthedetailnotesthatrepresenta
geometric toleranceinthespecified
drawing.
2146 Creo®Parametric TOOLKIT User’sGuideSymbolInstance
NewFunction Description
ProDtlsyminstIsDatumT arget() Checksifthespecifiedsymbolinstance
isadatumtarget.Thisfunctionreturns
PRO_B_TRUE ifthespecifiedsymbol
instanceisadatumtargetandreturns
PRO_B_FALSE ifitisnot.
DataExchange
NewFunction Description
ProIntf3DLayerSetupFileSet() Setsthelayersetupfilefortheexport.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_B_TRUE ifthespecifiedsymbol
instanceisadatumtargetandreturns
PRO_B_FALSE ifitisnot.
DataExchange
NewFunction Description
ProIntf3DLayerSetupFileSet() Setsthelayersetupfilefortheexport.
ProIntf3DLayerSetupFileIsIgnored() Checksiflayersetupfileisignoredor
notduringtheexport.
ProIntf3DCsysSet() Setsthereferencecoordinate systemfor
theexport.
ProIntf3DCsysIsIgnored() Checksifthereferencecoordinate
systemisignoredornotduringthe
export.
ProIntf3DModelDataClear() Clearsthemodeldatasetbythe
functions
ProIntf3DLayerSetupFile
Set()andProIntf3DCsysSet().
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 6.0.2.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
NosupportforPRO_REGEN_UNDO_IF_F AILandPRO_
REGEN_ALLOW_CONFIRM in
ProInsertmodeWithoptionsCancel()
Thefunction ProInsertmodeWithoptionsCancel() doesnotsupportthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNosupportforPRO_REGEN_UNDO_IF_F AILandPRO_
REGEN_ALLOW_CONFIRM in
ProInsertmodeWithoptionsCancel()
Thefunction ProInsertmodeWithoptionsCancel() doesnotsupportthe
regeneration controlbitflagsPRO_REGEN_UNDO_IF_FAIL andPRO_REGEN_
ALLOW_CONFIRM. Thefunctionreturns PRO_TK_BAD_CONTEXT, ifthevalue
oftheinputargument flagsispassedasPRO_REGEN_UNDO_IF_FAIL orPRO_
REGEN_ALLOW_CONFIRM.
TechnicalSummaryofChanges 2147NosupportfordrawingviewsinProViewRetrieve ()
Thefunction ProViewRetrieve() cannotbeusedtoretrieveviewina
drawingmode.YoucanusetheProDrawingView* functionstoget
information aboutdrawingviews.
TechnicalSummaryofChangesforCreo
6.0.3.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 6.0.3.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 6.0.3.0.
Annotations
NewFunction Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsuperseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 6.0.3.0.
Annotations
NewFunction Description
ProDrawingSetdatumtagErase() Setsasetdatumtagtobeerasedfrom
thespecifiedviewofadrawing.
SymbolInstances
NewFunction Description
ProSelectionDtlsyminstEntityGet() Getstheattachment information ofa
customsymbolthatisattachedtoa
detailentityofanothersymbol.
ProSelectionDtlsyminstEntitySet() Populatestheselectionoftheentityina
specifiedsymbolinstance.
GeometricTolerances
NewFunction Description
ProGtolAttachSuppressedLeadersGet() Getsthenumberofleadersthatare
suppressed duetomissingreferences.
2148 Creo®Parametric TOOLKIT User’sGuideMiscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 6.0.3.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbehaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
Updatestotheenumerated datatypeProDtlattachT ype
Thefollowingvalueisaddedtotheenumerated datatypeProDtlattachType:
•PRO_DTLATTACHTYPE_SUPPRESSED—Indicates thattheattachment isto
anitemthatismissingfromthedrawingorpart.
TechnicalSummaryofChangesforCreo
6.0.4.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 6.0.4.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 6.0.4.0.
Assembly
NewFunction Description
ProAsmcompConstraintsW ithComp-
pathGet()Retrievesthespecifiedconstraints for
thegivenassemblycomponent and
component path.
TechnicalSummaryofChangesforCreo
6.0.5.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 6.0.5.0andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthegivenassemblycomponent and
component path.
TechnicalSummaryofChangesforCreo
6.0.5.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 6.0.5.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
TechnicalSummaryofChanges 2149CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 6.0.5.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
UpdatestoErrorTypes
Thefollowingisthelistoftheerrortypesaddedtofunctions:
•ProDrawingSetDatumTagIsShown()—The errortypePRO_TK_BAD_
CONTEXT isadded.Thisindicatesthatthedatumfeaturesymbolcannotbe
showninthespecifieddrawingview.
•ProFitInterferenceCompute()—The followingerrortypesare
added:
○PRO_TK_INCOMPLETE—Indicates thattheinterference isdetected,
howeverthesystemisunabletoproduceavalidgeometric representation
forit.
○PRO_TK_NOT_EXIST—Indicates thatoneormoreitemsspecifiedbythexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxadded:
○PRO_TK_INCOMPLETE—Indicates thattheinterference isdetected,
howeverthesystemisunabletoproduceavalidgeometric representation
forit.
○PRO_TK_NOT_EXIST—Indicates thatoneormoreitemsspecifiedbythe
selectioncouldnotbefoundordidnotcontainanygeometrytocompute
interference with.
○PRO_TK_GENERAL_ERROR—Indicates thattheinterference couldnotbe
computed.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 6.0.5.0.
Annotations
NewFunction Description
ProMdlAnnotplanesFromGalleryCol-
lect()Collectsthenamesofalltheannotation
planesinthegallery.
ProMdlAnnotationplanesCollect() Collectsthenamesofallthenamed
annotation planesinthespecified
model.
ProAnnotationplaneNamesGet() Returnsthenamesofthespecified
annotation plane.
ProAnnotationplaneByNameInit() Findsandreturnstheannotation plane
withthespecifiedname.
ProAnnotationplaneNameAssign() Assignsanametothespecified
annotation plane.
2150 Creo®Parametric TOOLKIT User’sGuideNewFunction Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwiththespecifiedname.
ProAnnotationplaneNameAssign() Assignsanametothespecified
annotation plane.
2150 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
ProAnnotationplaneAddT oGallery() Addsanannotation planewiththe
specifiednametothegallery.
ProAnnotationplaneRemoveFromGal-
lery()Removestheannotation planewiththe
specifiednamefromthegallery.
ProSetdatumtagPlacementGet() Returnstheitemtype,id,andowneron
whichthesetdatumtagisplaced.
Cabling
NewFunction Description
ProCablelocationMaxDiameterGet() Retrievesthemaximum diameterofthe
locationforthespecifiedharness.
ProCablelocationHeightDimensionGet
()Retrievestheheightdimension forthe
specifiedcablelocation.
DataExchange
NewFunction Description
ProIntfExportProfileLoad() Loadsthespecifiedprofileforexport.
Dimensions
NewFunction Description
ProDimensionEnvelopeGet() Returnstheenvelopeofalineinthe
specifieddimension.
Drawings
NewFunction Description
ProDtlsyminstEnvelopeGet() Returnstheenvelopeofthesymbol.
FeaturesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNewFunction Description
ProDimensionEnvelopeGet() Returnstheenvelopeofalineinthe
specifieddimension.
Drawings
NewFunction Description
ProDtlsyminstEnvelopeGet() Returnstheenvelopeofthesymbol.
Features
NewFunction Description
ProFeatureReferenceEditRefsGet() Returnsanarrayoftheoriginal
references ofafeaturethatareusedto
performtheeditreferenceoperation.
TechnicalSummaryofChanges 2151FeatureElements:Patterns
NewFunction Description
ProPatternInAssemblyCreate() Createsapatternintheassemblythatis
providedintheelementtree.
GeometricTolerance
NewFunction Description
ProGtolEnvelopeGet() Returnstheenvelopeofthegtol.
Graphics
NewFunction Description
ProWindowPixelOutlineGet() ReturnstheoutlineoftheCreo
Parametric windowinpixels.
ProWindowCoordinatePixelGet() Convertsthewindowscoordinates
receivedthroughtheinputargument
pointintopixelcoordinates.
Windows
NewFunction Description
ProWindowNameGet() Returnsthewindownameforthe
specifiedwindowidentifier.
TechnicalSummaryofChangesforCreo
7.0.0.0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpointintopixelcoordinates.
Windows
NewFunction Description
ProWindowNameGet() Returnsthewindownameforthe
specifiedwindowidentifier.
TechnicalSummaryofChangesforCreo
7.0.0.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 7.0.0.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 7.0.0.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
2152 Creo®Parametric TOOLKIT User’sGuideDigitallySigningtheApplication
InCreoParametric 7.0.0.0andlater,Creocheckssignatures ofCreoParametric
TOOLKITapplications atloadtime.
TodigitallysignyourCreoParametric TOOLKITapplication, usethe-cdoption
inprotk_unlock.
Thesampleapplications providedwithCreoParametric TOOLKIT,whichare
installedundertheloadpointofCreoParametric at<creo_loadpoint>\xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinprotk_unlock.
Thesampleapplications providedwithCreoParametric TOOLKIT,whichare
installedundertheloadpointofCreoParametric at<creo_loadpoint>\
<datecode>\Common Files\protoolkit\ protk_appls aredigitally
signed.
Theconfiguration options open_protk_unsigned_apps andopen_
protk_signed_apps controlwhethertoalwaysallowtheusersor
administrator todetermine whethersignedorunsignedCreoParametric
TOOLKITapplications shouldbeallowedtoalwaysrun,toneverrun,orto
prompttheuserbeforerunning.
SeetheCreoParametric TOOLKIT User’sGuideformoreinformation.
UpdatestoErrorTypes
Thefollowingisthelistoftheerrortypesaddedtofunctions:
•ProTextStyleJustificationGet() and
ProTextStyleVertJustificationGet()— TheerrortypePRO_
TK_E_NOT_FOUND isadded.Thisindicatesthatthejustification isnot
definedbytheinputtextstyle.
•ProFitInterferenceCompute()—The errortypePRO_TK_NOT_
EXISTisadded.Thisindicatesthatoneormoreitemsspecifiedbyeitherof
theinputarguments sel_1andsel_2couldnotbefoundordoesnotcontainxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProFitInterferenceCompute()—The errortypePRO_TK_NOT_
EXISTisadded.Thisindicatesthatoneormoreitemsspecifiedbyeitherof
theinputarguments sel_1andsel_2couldnotbefoundordoesnotcontain
anygeometryforinterference computation.
•ProDrawingSetDatumTagIsShown()—The errortypePRO_TK_BAD_
CONTEXT isadded.Thisindicatesthatthedatumfeaturesymbolcannotbe
showninthespecifieddrawingview.
ChangeinFunctionsthatCreateNewModels
Thefunctions ProSolidMdlnameCreate() and
ProAsmSkeletonMdlnameCreate(), createdmodelsandemptypartsusing
relativeaccuracy.InCreoParametric 7.0.0.0andlater,newmodelsandpartsare
createdusingabsoluteaccuracytemplates, bydefault.Modelsthatwerecreated
usingrelativeaccuracyinearlierreleases,arenowcreatedusingabsoluteaccuracy
inCreoParametric 7.0.0.0andlater.Thedefaultvalueofabsoluteaccuracyis
0.00039inchesor0.01mmwhichcanbeconfigured usingtheconfiguration
option default_abs_accuracy.
TechnicalSummaryofChanges 2153NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0.00039inchesor0.01mmwhichcanbeconfigured usingtheconfiguration
option default_abs_accuracy.
TechnicalSummaryofChanges 2153NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 7.0.0.0.
FeatureElements:Patterns
NewFunction Description
ProPatternInAssemblyCreate() Createsapatternintheassemblythatis
providedintheelementtree.
Annotations
NewFunction Description
ProDrawingSetdatumtagErase() Setsasetdatumtagtobeerasedfrom
thespecifiedviewofadrawing.
ProAnnotationplaneActiveGet() Returnstheactiveannotation planein
thespecifiedmodel.
ProNoteAttachScreenSet() Setsthelocationofthenotetextatthe
screenlocation.
ProSetdatumtagT extPointGet() Returnsthetextpointforthespecified
datumfeaturesymbol.
ProMdlAnnotplanesFromGalleryCol-
lect()Collectsthenamesofalltheannotation
planesinthegallery.
ProMdlAnnotationplanesCollect() Collectsthenamesofallthenamed
annotation planesinthespecified
model.
ProAnnotationplaneNamesGet() Returnsthenamesofthespecified
annotation plane.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxplanesinthegallery.
ProMdlAnnotationplanesCollect() Collectsthenamesofallthenamed
annotation planesinthespecified
model.
ProAnnotationplaneNamesGet() Returnsthenamesofthespecified
annotation plane.
ProAnnotationplaneByNameInit() Findsandreturnstheannotation plane
withthespecifiedname.
ProAnnotationplaneNameAssign() Assignsanametothespecified
annotation plane.
ProAnnotationplaneAddT oGallery() Addsanannotation planewiththe
specifiednametothegallery.
ProAnnotationplaneRemoveFromGal-
lery()Removestheannotation planewiththe
specifiednamefromthegallery.
2154 Creo®Parametric TOOLKIT User’sGuideCabling
NewFunction Description
ProCablelocationMaxDiameterGet() Retrievesthemaximum diameterofthe
locationforthespecifiedharness.
ProCablelocationHeightDimensionGet
()Retrievestheheightdimension forthe
specifiedcablelocation.
Assembly
NewFunction Description
ProAsmcompConstraintsW ithComp-
pathGet()Retrievesthespecifiedconstraints for
thegivenassemblycomponent and
component path.
Core:SolidBodiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedcablelocation.
Assembly
NewFunction Description
ProAsmcompConstraintsW ithComp-
pathGet()Retrievesthespecifiedconstraints for
thegivenassemblycomponent and
component path.
Core:SolidBodies
NewFunction Description
ProSolidBodyCreate() Createsanewbody.
ProSolidBodiesCollect() Collectsallthebodiesinthespecified
solid.
ProSolidDefaultBodyGet() Returnsthedefaultbodyinthe
specifiedsolid.
ProSolidDefaultBodySet() Setsthedefaultbodyinthespecified
solid.
ProSolidBodySurfaceV isit() Visitsthesurfacesthatareincludedin
thespecifiedbody.
ProSolidBodyDelete() Deletesthebodyinthespecifiedsolid.
ProSolidBodyStateGet() Returnsthestateofthebody.
ProSolidBodyIsConstruction() Checksifthespecifiedbodyisa
construction body.
ProSolidBodyConstructionSet() Setsthespecifiedbodyasa
construction body.
ProSolidBodyMaterialGet() Retrievestheinformation ofthe
materialassignedtothebody.
ProSolidBodyMaterialSet() Assignsamaterialtothespecified
body.
ProSolidBodyOutlineGet() Retrievestheregeneration outlineofaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmaterialassignedtothebody.
ProSolidBodyMaterialSet() Assignsamaterialtothespecified
body.
ProSolidBodyOutlineGet() Retrievestheregeneration outlineofa
solidbody,withrespecttothebase
coordinate systemorientation.
ProSolidBodyFeaturesGet() Listsallthefeaturesthatareassociated
withthespecifiedbody.
TechnicalSummaryofChanges 2155NewFunction Description
ProSolidBodyIsSheetmetal() Checksifthespecifiedbodyisan
activesheetmetal body.
ProGeomitemBodyGet() Retrievesthebodythatisassociated
withthespecifiedgeometryitem.
ProSolidBodyMassPropertyGet() Calculates themassproperties ofa
bodyinthespecifiedcoordinate
system.
ProSolidBodyDensityGet Determines thedensityofthematerial
assignedtoabody.
CrossSections
NewFunction Description
ProXSectionItemDataGet() Returnsthedatafromthecrosssection
bodyspecifiedusingthestructure
ProXSectionItem.
ProXSectionItemsCollect() Returnsanarrayof
ProXSectionItem.
ProXSectionExcludeCompGet() Returnsthestatusandanarrayofpaths
totheassemblycomponents andbodiesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProXSectionItem.
ProXSectionItemsCollect() Returnsanarrayof
ProXSectionItem.
ProXSectionExcludeCompGet() Returnsthestatusandanarrayofpaths
totheassemblycomponents andbodies
thatareincludedorexcludedforthe
specifiedcrosssection.
ProXSectionOf fsetCreate() Createsanoffsetcrosssectionfroma
polyline.Thepolylineliesonaplane
andtheplaneisdefinedbyalocal
coordinate system.
ProXSectionPlanarCreate() Createsacrosssectionfeaturethrough
adatumplaneandalsomakesthecross
sectionvisible.
ProXsectionCompXhatchStyleGet() Returnsinformation aboutthestyleof
hatchpatterninthespecifiedcross
sectioncomponent.
ProXSectionItemXhatchStyleGet() Returnsthecrosssection p_xhatch_
styleforthecrosssectionhandleof
thebody.
ProXsecNewXhatchStyleCreateFrom-
Name()Createsa
ProXsecNewXhatchStyle
structureusingthehatchpattern
specifiedbytheinputargument hatch_
name.
ProXSectionItemXhatchStyleSet() Setsthecrosssection p_xhatch_
styleforthecrosssectionhandleof
2156 Creo®Parametric TOOLKIT User’sGuideNewFunction Descriptionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecifiedbytheinputargument hatch_
name.
ProXSectionItemXhatchStyleSet() Setsthecrosssection p_xhatch_
styleforthecrosssectionhandleof
2156 Creo®Parametric TOOLKIT User’sGuideNewFunction Description
thebody,usingthe
ProXsecNewXhatchStyle
structure.
ProXsectionCompXhatchStyleSet() Setsthecrosssection p_xhatch_
styleforthespecifiedcomponent,
usingthe
ProXsecNewXhatchStyle
structure.
ProXsecMdlnameAlloc() AllocatestheProXsecMdlname
handle.
ProXsecMdlnameFree(0 Freesthememoryallocatedtothe
ProXsecMdlname handle.
ProXsecMdlnameNameGet()
ProXsecMdlnameNameSet()Getsandsetsthenameofthecross
sectionhandle.
ProXsecMdlnameSolidOwnerGet()
ProXsecMdlnameSolidOwnerSet()Getsandsetstheownerofthecross
section.
CombinedStates
NewFunction Description
ProCombstateAnnotationsAndSuppl-
GeomStateSet()Changesthedisplayofannotations and
supplementary geometrybythe
specifiedcombined stateorlayers.
DataExchange
NewFunction Description
ProIntf3DLayerSetupFileSet() Setsthelayersetupfilefortheexport.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsupplementary geometrybythe
specifiedcombined stateorlayers.
DataExchange
NewFunction Description
ProIntf3DLayerSetupFileSet() Setsthelayersetupfilefortheexport.
ProIntf3DLayerSetupFileIsIgnored() Checksiflayersetupfileisignoredor
notduringtheexport.
ProIntf3DCsysSet() Setsthereferencecoordinate systemfor
theexport.
ProIntf3DCsysIsIgnored() Checksifthereferencecoordinate
systemisignoredornotduringthe
export.
ProIntf3DModelDataClear() Clearsthemodeldatasetbythe
functions
ProIntf3DLayerSetupFile
Set()andProIntf3DCsysSet().
ProImportfeatureW ithProfileCreate() Createsanewimportfeatureinthe
CreoParametric solidmodel.
TechnicalSummaryofChanges 2157Drawings
NewFunction Description
ProDrawingDraftT oDraftent() Convertsaselectionoftypedraftto
draftentityinthespecifieddrawing.
Geometry
NewFunction Description
ProQuiltdataT ypeGet() ReturnsthetypeofquiltdataasPRO_
BODYorPRO_QUILT.
ProQuiltdataT ypeSet() Setsthetypeofquiltdata.
ProVolumeInterferenceBodiesGet() ReturnsanarrayofsolidbodiesthatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProQuiltdataT ypeGet() ReturnsthetypeofquiltdataasPRO_
BODYorPRO_QUILT.
ProQuiltdataT ypeSet() Setsthetypeofquiltdata.
ProVolumeInterferenceBodiesGet() Returnsanarrayofsolidbodiesthat
participate intheinterference ofthe
givencomponent withtheselected
quilt.
ProVolumeInterferenceDisplayForBody
()Displaysorhidesthecurvesand
surfacesofthespecifiedsolidbodythat
interferewiththequiltthatisselected.
GeometricTolerances
NewFunction Description
ProGtolDtlnotesCollect() Returnsthedetailnotesthatrepresenta
geometric toleranceinthespecified
drawing.
ProGtolleaderZExtensionlineGet() RetrievestheZ-Extension lineofthe
gtolleader.
ProGtolAttachSuppressedLeadersGet() Getsthenumberofleadersthatare
suppressed duetomissingreferences.
Interface
NewFunction Description
ProPartToProInterfaceData() Returnstheinterfacedatabyconverting
theProPart structureto
ProIntfData structure.
ProShrinkwrapoptionsIgnoreconstrbo-
diesSet()Determines whetherconstruction
bodieswillbeincludedinthe
Shrinkwrap model.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtheProPart structureto
ProIntfData structure.
ProShrinkwrapoptionsIgnoreconstrbo-
diesSet()Determines whetherconstruction
bodieswillbeincludedinthe
Shrinkwrap model.
2158 Creo®Parametric TOOLKIT User’sGuideMenu
NewFunction Description
ProCmdAlwaysAllowV alueUpdate() Allowsthevalueofthecommand tobe
updatedalways,evenwhenthe
command isnotaccessible.
Models
NewFunction Description
ProMdlLockGet()
ProMdlLockSet()Getsandsetsthelock/unlock stateof
themodel.
Production Applications: Cabling
NewFunction Description
ProCableAndConductorsCreate() Createanewcable,wire,orcablewith
conductors inaspecifiedharness.
SymbolInstance
NewFunction Description
ProDtlsyminstIsDatumT arget() Checksifthespecifiedsymbolinstance
isadatumtarget.Thisfunctionreturns
PRO_B_TRUE ifthespecifiedsymbol
instanceisadatumtargetandreturns
PRO_B_FALSE ifitisnot.
User-Defined Features(UDFs)
NewFunction Description
ProUdfFileIsPreCreo7() Identifiesifthe.gphfileiscreatedor
modifiedinareleaseearlierthanCreo
Parametric 7.0.0.0.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_B_FALSE ifitisnot.
User-Defined Features(UDFs)
NewFunction Description
ProUdfFileIsPreCreo7() Identifiesifthe.gphfileiscreatedor
modifiedinareleaseearlierthanCreo
Parametric 7.0.0.0.
Windows
NewFunction Description
ProWindowNameGet() Returnsthewindownameforthe
specifiedwindowidentifier.
TechnicalSummaryofChanges 2159Superseded Functions
Thissectiondescribesthesuperseded functionsforCreoParametric TOOLKIT
forCreoParametric 7.0.0.0.
Annotations
Superseded Function NewFunction
ProSetdatumtagT extLocationGet() ProSetdatumtagT extPointGet()
Assembly
Superseded Function NewFunction
ProAsmcompConstraintsW ithDtmOr-
ientGet()ProAsmcompConstraintsW ithComp-
pathGet()
CrossSections
Superseded Function NewFunction
ProXsecOff setCreate() ProXSectionOf fsetCreate()
ProXsecPlanarW ithoptionsCreate() ProXSectionPlanarCreate()
ProXsecExcludeCompGet() ProXSectionExcludeCompGet()
ProXsecCompNewXhatchStyleSetBy-
Name()ProXsecNewXhatchStyleCreateFrom-
Name()
ProXsectionCompXhatchStyleSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProXsecExcludeCompGet() ProXSectionExcludeCompGet()
ProXsecCompNewXhatchStyleSetBy-
Name()ProXsecNewXhatchStyleCreateFrom-
Name()
ProXsectionCompXhatchStyleSet()
ProXSectionItemXhatchStyleSet()
ProXsecCompNewXhatchStyleSet ()
ProXsecCompXhatchStyleSet ()ProXsectionCompXhatchStyleSet()
ProXSectionItemXhatchStyleSet()
ProXsecCompNewXhatchStyleGet()
ProXsecCompXhatchStyleGet()ProXSectionItemXhatchStyleGet()
ProXsectionCompXhatchStyleGet()
ProXsecGeometryCollect() ProXSectionItemsCollect()
ProXSectionItemDataGet()
DataExchange
Superseded Function NewFunction
ProImportfeatW ithProfileCreate() ProImportfeatureW ithProfileCreate()
2160 Creo®Parametric TOOLKIT User’sGuideGeometry
Superseded Function NewFunction
ProSolidSurfaceV isit() ProSolidBodySurfaceV isit()
Interface
Superseded Function NewFunction
ProPartToProIntfData () ProPartToProInterfaceData()
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 7.0.0.0canaffectthefunctionalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxInterface
Superseded Function NewFunction
ProPartToProIntfData () ProPartToProInterfaceData()
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 7.0.0.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
MultibodySupport
Abodyisacontainerobjectforsolidgeometry.InearlierversionsofCreo
Parametric, allsolidgeometryinapartisconsidered asoneblockofasingle
material,evenwhenthegeometryhasdisjointvolumes.StartinginCreo
Parametric 7.0.0.0,youcancreatepartsthatcontainoneormoregeometric
bodies.Youcanassignadifferentmaterialtoeachbody,soasinglepartcan
containmorethanonematerial.
Bodiescontainonlysolidgeometry.Nonsolidentities,likedatums,curves,and
quilts,arenotcontainedinanybody.Eachbodyhasitsowngeometry.
Tosupportthemultibody environment, CreoParametric 7.0.0.0isupdatedinthe
followingaspects:
•NewAPIsareadded.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxquilts,arenotcontainedinanybody.Eachbodyhasitsowngeometry.
Tosupportthemultibody environment, CreoParametric 7.0.0.0isupdatedinthe
followingaspects:
•NewAPIsareadded.
•SomeexistingAPIsaredeprecated andaresuperseded bynewAPIs.
•Implementation ofexistingAPIsisupdated.NovisiblechangesinCreo
Parametric TOOLKITAPIs.
•Newelementtreesareaddedtosupportnewmultibody features.
•Someexistingelementtreesareupdated.
•Someenumerated datatypesandtheirvaluesareupdated.
•Existingstructuresareupdated.
InCreoParametric 7.0.0.0andlater,youcanperformgeometric operations such
ascopying,removing, merging,splitting,andintersecting bodiesinamodel.The
followingelementtreesareaddedtosupporttheseoperations.
TechnicalSummaryofChanges 2161•ProBodyOpts.h
•ProBodyCopy.h
•ProSplitbody.h
•ProRemoveBody.h
•ProBooleanBodies.h
Someexistingfeaturesareaffectedduetotheintroduction ofthemultibody
featuresasaresultofwhichthefollowingheaderfilesareupdated:
•ProShell.h
•ProRib.h
•ProSmtDrvSurf.h
•ProExtrude.h
•ProRevolve.hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSomeexistingfeaturesareaffectedduetotheintroduction ofthemultibody
featuresasaresultofwhichthefollowingheaderfilesareupdated:
•ProShell.h
•ProRib.h
•ProSmtDrvSurf.h
•ProExtrude.h
•ProRevolve.h
•ProSweep.h
•ProHole.h
•ProRound.h
•ProChamfer.h
•ProModifyRound.h
•ProModifyChamfer.h
•ProSmtShell.h
NosupportfordrawingviewsinProViewRetrieve ()
Thefunction ProViewRetrieve() cannotbeusedtoretrieveviewina
drawingmode.YoucanusetheProDrawingView* functionstoget
information aboutdrawingviews.
NosupportforPRO_REGEN_UNDO_IF_F AILandPRO_
REGEN_ALLOW_CONFIRM in
ProInsertmodeWithoptionsCancel()
Thefunction ProInsertmodeWithoptionsCancel() doesnotsupportthe
regeneration controlbitflagsPRO_REGEN_UNDO_IF_FAIL andPRO_REGEN_
ALLOW_CONFIRM. Thefunctionreturns PRO_TK_BAD_CONTEXT ifthevalue
oftheinputargument flagsispassedasPRO_REGEN_UNDO_IF_FAIL orPRO_
REGEN_ALLOW_CONFIRM.
Sheetmetal
ThissectionexplainsthechangesintheareaofSheetmetal.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxoftheinputargument flagsispassedasPRO_REGEN_UNDO_IF_FAIL orPRO_
REGEN_ALLOW_CONFIRM.
Sheetmetal
ThissectionexplainsthechangesintheareaofSheetmetal.
2162 Creo®Parametric TOOLKIT User’sGuidePunch/Dieform,Quiltform,andSketchformFeatures
InCreoParametric 7.0.0.0andlater,theelement PRO_E_SMT_TRIM_FORM_
SIDESisaddedtotheelementtreesofthePunch/Die form,Quiltform,and
SketchformfeaturesdefinedintheheaderfilesProSmtForm.h,
ProSmtPunchQuilt.h, andProSmtSketchForm.h respectively .The
elementspecifiesifCreoParametric appliestrimmingofsheetmetal sidesurfaces
duringformfeaturegeneration.
KeepEdgesofBendsinMergeWallFeature
InCreoParametric 7.0.0.0andlater,theelement PRO_E_SMT_MERGE_KEEP_
BEND_EDGES isaddedtotheelementtreesoftheMergeWallfeaturedefinedin
theheaderfilesProSmtMergeWalls.h. Theelementcontrolstheabilityto
keepedgesbetweenthebendsurfaceswhilemergingsurfacesinthemergedwalls.
UpdatestoEnumerated DataTypeProRefState
InCreoParametric 7.0.0.0andlater,thefollowingvalueisaddedtothexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxkeepedgesbetweenthebendsurfaceswhilemergingsurfacesinthemergedwalls.
UpdatestoEnumerated DataTypeProRefState
InCreoParametric 7.0.0.0andlater,thefollowingvalueisaddedtothe
theenumerated datatypeProRefState:
•PRO_REF_WARNING—Indicates thatthereferenced entityhasawarning.
Updatestotheenumerated datatypeProShrinkwrapResGeomOpt
InCreoParametric 7.0.0.0andlater,thefollowingvalueisaddedtothe
enumerated datatypeProShrinkwrapResGeomOpt
:
•PRO_SW_RES_GEOM_ASM_QUILT—Indicates thattheresultingShrinkwrap
featureisaquiltthatcontainsamergedgeometryofareferenced assembly.
Updatestotheenumerated datatypeProDtlattachT ype
Thefollowingvalueisaddedtotheenumerated datatypeProDtlattachType:
•PRO_DTLATTACHTYPE_SUPPRESSED—Indicates thattheattachment isto
anitem,whichismissingfromthedrawingorpart.
Updatestotheenumerated datatypeProMechGeomrefT ype
Thefollowingvalueisaddedtotheenumerated datatype
ProMechGeomrefType:
•PRO_MECH_BODY—Indicates thatthegeometric referenceisabody.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUpdatestotheenumerated datatypeProMechGeomrefT ype
Thefollowingvalueisaddedtotheenumerated datatype
ProMechGeomrefType:
•PRO_MECH_BODY—Indicates thatthegeometric referenceisabody.
Updatestotheenumerated datatypeProMechConstrT ype
Thefollowingvalueisaddedtotheenumerated datatype
ProMechConstrType:
TechnicalSummaryofChanges 2163•PRO_MECH_CONSTR_INIT_TEMP—Specifies theinitialtemperature
boundaryconditionforoneormoregeometric entitiesforthermalmode.
Updatestotheenumerated datatypeProGtolSymbol
Thefollowingvalueisaddedtotheenumerated datatypeProGtolSymbol:
•PRO_INDICATOR_SYMBOL_RUNOUT—Indicates thatthedirectionofthe
widthofthetolerancezoneisequaltorun-out,thatisperpendicular tothe
surfaceofthetolerancefeature.
Updatestotheenumerated datatypesProLayerTypeand
ProDefLayerT ype
Thevalues PRO_LAYER_BODY andPRO_DEFLAYER_BODY areaddedtothe
enumerated datatypes ProLayerType andProDefLayerType respectively .
Thisindicatesthatgeometric bodiescanbeselectedasavaliditemtypefor
defaultlayeroperations.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxenumerated datatypes ProLayerType andProDefLayerType respectively .
Thisindicatesthatgeometric bodiescanbeselectedasavaliditemtypefor
defaultlayeroperations.
Updatestotheenumerated datatypeProPDFOptionT ype
InCreoParametric 7.0.0.0andlater,anewexportoption PRO_PDFOPT_
PENTAB_FOR_TEXT isaddedtotheenumerated datatype
ProPDFOptionType. Theoption PRO_PDFOPT_PENTAB_FOR_TEXT
indicatesifthestandardCreoParametric pentableisusedtocontrolthethickness
ofthestrokedtextoftheexportedgeometry.Thedefaultvalueofthisoptionis
true.
Updatestotheenumerated datatypeProRelObjType
InCreoParametric 7.0.0.0andlater,anewoption PRO_RELOBJ_BODY isadded
totheenumerated datatypeProRelObjType intheheaderfile
ProRelSet.h. Thisindicatesthatgeometric bodiescanownarelationset
associated toamodelormodelitem.
Updatestotheenumerated datatypeProMtrlType
InCreoParametric 7.0.0.0andlater,anewoption PRO_MATERIAL_TYPE_
FLUIDisaddedtotheenumerated datatypeProMtrlType intheheaderfilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUpdatestotheenumerated datatypeProMtrlType
InCreoParametric 7.0.0.0andlater,anewoption PRO_MATERIAL_TYPE_
FLUIDisaddedtotheenumerated datatypeProMtrlType intheheaderfile
ProMaterial.h. Thisindicatesthatgeometric bodiescannowhavematerial
typeasfluid.
Updatestotheenumerated datatypeProFamtabT ype
InCreoParametric 7.0.0.0andlater,thefollowingnewoptionsareaddedtothe
enumerated datatypeProFamtabType intheheaderfileProFamtable.h:
•PRO_FAM_BODY_PARAM—Indicates thatyoucanexplicitlydriveparameters
ofabody.
2164 Creo®Parametric TOOLKIT User’sGuide•PRO_FAM_BODY_MP_PARAM—Indicates thatyoucanexplicitlydrivemass
propertyparameters ofabody.
•PRO_FAM_BODY_MP_SOURCE—Indicates thatyoucanexplicitlydrivemass
propertyparameters ofabody.
ChangeinbehaviorofthefunctionProImportfeatCreate()
InCreoParametric 7.0.0.0andlater,thefollowingoptionsareaddedinthe
structure ProImportfeatAttr :
•add_bodies
•body_use_opt
•body_arr
IfyourCreoParametric TOOLKITapplication isbuiltusingCreoParametric 6.0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstructure ProImportfeatAttr :
•add_bodies
•body_use_opt
•body_arr
IfyourCreoParametric TOOLKITapplication isbuiltusingCreoParametric 6.0
andyouhavethefunction ProImportfeatCreate() inyourapplication,
then,thesameapplication worksasitisinCreoParametric 7.0.0.0.
Formoreinformation, refertothesectionCreatingFeaturesfromtheInterface
Dataonpage719intheCreoParametric TOOLKIT 7.0User’sGuide.
TechnicalSummaryofChangesforCreo
7.0.1.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 7.0.1.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
CriticalTechnicalChanges
ThissectiondescribesthechangesinCreoParametric 7.0.1.0andCreoParametric
TOOLKITthatmightrequirealterationofexistingCreoParametric TOOLKIT,
CreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
SupportforResolvemodeprovidedonlythroughPTC
CustomerSupport
InCreoParametric 7.0.1.0andlater,theconfiguration option regen_failure_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCreoElements/Pro TOOLKIT,andPro/TOOLKITapplications.
SupportforResolvemodeprovidedonlythroughPTC
CustomerSupport
InCreoParametric 7.0.1.0andlater,theconfiguration option regen_failure_
handling hasbeendeprecated. Ifamodelandfeatureregeneration failsandif
youwanttouseResolvemode,youneedtocontactPTCCustomerSupport.
TechnicalSummaryofChanges 2165CompilingandLinkingonWindows
InCreoParametric 7.0.1.0andlater,CreoParametric TOOLKITsupportsVisual
Studio2019.ThecompilerflagsandlibrariesareavailableforVisualStudio2019.
CreoParametric TOOLKITnolongersupportsVisualStudio2015.
AllCreoParametric TOOLKITapplications on64-bitWindowsplatformsbuilt
usingtheMicrosoft VisualStudio2019compilermustsettheconfiguration
propertyPlatformToolsetasVisualStudio2019(v142).
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 7.0.1.0.
Annotations
NewFunction Description
ProSetdatumtagPlacementGet() Returnstheitemtype,id,andowneron
whichthesetdatumtagisplaced.
GeometricTolerancexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric 7.0.1.0.
Annotations
NewFunction Description
ProSetdatumtagPlacementGet() Returnstheitemtype,id,andowneron
whichthesetdatumtagisplaced.
GeometricTolerance
NewFunction Description
ProGtolEnvelopeGet() Returnstheenvelopeofthegtol.
Dimensions
NewFunction Description
ProDimensionEnvelopeGet() Returnstheenvelopeofalineinthe
specifieddimension.
Drawings
NewFunction Description
ProDtlsyminstEnvelopeGet() Returnstheenvelopeofthesymbol.
Features
NewFunction Description
ProFeatureReferenceEditRefsGet() Returnsanarrayoftheoriginal
references ofafeaturethatareusedto
performtheeditreferenceoperation.
2166 Creo®Parametric TOOLKIT User’sGuideGraphics
NewFunction Description
ProWindowPixelOutlineGet() ReturnstheoutlineoftheCreo
Parametric windowinpixels.
ProWindowCoordinatePixelGet() Convertsthewindowscoordinates
receivedthroughtheinputargument
pointintopixelcoordinates.
Solids
NewFunction Description
ProSolidMassPropertyW ithDensityGet
()Calculates themassproperties ofapartxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxreceivedthroughtheinputargument
pointintopixelcoordinates.
Solids
NewFunction Description
ProSolidMassPropertyW ithDensityGet
()Calculates themassproperties ofapart
oranassemblyinthespecified
coordinate system.Thisfunctiondoes
notimpactthemassproperties ofa
solid.
Miscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 7.0.1.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
SupportforRegeneration ofTopLevelAssembly
InCreoParametric 7.0.1.0andlater,thefunction ProSolidRegenerate()
supportsregeneration ofthetoplevelassembly.TheflagPRO_REGEN_TOP_
ASM_ONLY isaddedtotheheaderfileProSolid.h whichforcesonlytoplevel
assemblytoregenerate. Thisflagforcestheregeneration ofallthefeaturesand
components thataredefinedinthespecifiedtoplevelassembly,evenwhenthey
areup-to-date.
Note
ThisflagcannotbeusedwithPRO_REGEN_FORCE_REGEN.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcomponents thataredefinedinthespecifiedtoplevelassembly,evenwhenthey
areup-to-date.
Note
ThisflagcannotbeusedwithPRO_REGEN_FORCE_REGEN.
TechnicalSummaryofChanges 2167ElementtoenableBodySelectionsforCopyGeometry,
PublishGeometry,andShrinkwrap FeatureOperations
InCreoParametric 7.0.1.0andlater,theelement PRO_E_CG_BODY_COLL is
addedtotheelementtreeProDataShareFeat.h. Thisnewelementindicates
thatbodiescanbeselectedduringcopygeometry,publishgeometry,and
shrinkwrap featureoperations.
TechnicalSummaryofChangesforCreo
7.0.2.0
Thecriticalandmiscellaneous technicalchangesinCreoParametric 7.0.2.0and
CreoParametric TOOLKITareexplainedinthissection.Italsoliststhenewand
superseded functionsforthisrelease.
NewFunctions
ThissectiondescribesnewfunctionsforCreoParametric TOOLKITforCreo
Parametric 7.0.2.0.
DataExchange
NewFunction Description
ProIntfExportProfileLoad() Loadsthespecifiedprofileforexport.
Graphics
Function Description
ProTextFontRetrieve() LoadsafontwiththespecifiednamexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDataExchange
NewFunction Description
ProIntfExportProfileLoad() Loadsthespecifiedprofileforexport.
Graphics
Function Description
ProTextFontRetrieve() Loadsafontwiththespecifiedname
thatcanbeusedtodisplaythetext.
Relations
NewFunction Description
ProRelationEvalW ithUnitsRefResolve
()Evaluatestheexpression thatis
specifiedontherightsideofarelation
lineandreturnsthevalueintheformof
ProParamvalue structure.
2168 Creo®Parametric TOOLKIT User’sGuideMiscellaneous TechnicalChanges
ThefollowingchangesinCreoParametric 7.0.2.0canaffectthefunctional
behaviorofCreoParametric TOOLKIT.PTCdoesnotanticipatethatthese
changescausecriticalissueswithexistingCreoParametric TOOLKIT, Creo
Elements/Pro TOOLKIT,orPro/TOOLKITapplications.
Updatestotheenumerated datatypeProMechHeatT ype
Thefollowingvalueisaddedtotheenumerated datatypeProMechHeatType:
•PRO_MECH_HEAT_TOTAL_GEN—Indicates thattheheatloadisappliedto
top-levelandsub-levelassemblies orcomponents.
TechnicalSummaryofChanges 2169A
UnicodeEncodingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•PRO_MECH_HEAT_TOTAL_GEN—Indicates thattheheatloadisappliedto
top-levelandsub-levelassemblies orcomponents.
TechnicalSummaryofChanges 2169A
UnicodeEncoding
Introduction toUnicodeEncoding...........................................................................2171
UnicodeEncodingandCreoParametricTOOLKIT...................................................2172
NecessityofUnicodeCompliance. ..........................................................................2173
ExternalInterfaceHandling....................................................................................2173
SpecialExternalInterface:printf()andscanf()Functions..........................................2174
SpecialExternalInterface:Windows-runtime Functions...........................................2175
SpecialExternalInterface:HardcodedStrings.........................................................2175
ThisappendixdescribeshowthenewUnicodesupportusedinternallybyPro/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSpecialExternalInterface:HardcodedStrings.........................................................2175
ThisappendixdescribeshowthenewUnicodesupportusedinternallybyPro/
ENGINEER fromWildfire4.0onwardaffectsCreoParametric TOOLKITandits
applications.
2170 Creo®Parametric TOOLKIT User’sGuideIntroduction toUnicodeEncoding
UNICODE isanacronymfor"Universal CharacterEncodedSystem".Itisa
uniquecharacterencodingschemeallowingcharacters fromEuropean, Greek,
Arabic,Hebrew,Chinese,Japanese,Korean,Thai,Urdu,Hindi,andotherworld
languages tobeencodedinasinglecharacterset.Thisenablesapplications to
simultaneously supporttextinmultiplelanguages intheirdatafiles.Unicode
encodingcoversmostoftheletters,punctuation marks,andtechnicalsymbols
commonly usedintheEnglishlanguagethatarenotcoveredbythelegacy
encoding.
Unicodedefinestwomappingmethods:
•UCS(Universal Character Set)encoding
•UTF(Unicode Transformation Format) encoding
Formoreinformation onUnicodeEncoding, visithttp://unicode.or g.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxencoding.
Unicodedefinestwomappingmethods:
•UCS(Universal Character Set)encoding
•UTF(Unicode Transformation Format) encoding
Formoreinformation onUnicodeEncoding, visithttp://unicode.or g.
Pro/ENGINEER Wildfire4.0onward,allstringdatainPro/ENGINEER
(previously storedinthelegacyencodingformat)isnowstoredintheUnicode
encoding.Pro/ENGINEER Wildfire4.0usestheUCS-2encodingonWindows
platformsandUCS-4encodinginUNIXenvironments forwidestring data.It
readsandwritescharacterdatausingthemulitbyte UTF-8encodingonall
platforms. UTF-8isan8-bit,variable-length characterencodingformatthatuses
onetofourbytespercharacter.
Someimportantterminology aboutstringencodingrelatedtoCreoParametric
TOOLKITthatisusedthroughout thisappendixisdescribedasfollows:
•“Unicodeencoding” referstothestringandwidestring encodings usedbyPro/
ENGINEER Wildfire4.0andlater.
•“Legacyencoding” referstotheencodingusedbyPro/ENGINEER Wildfire
3.0andearlier.Depending onthelanguage,thisencodingistypicallysome
versionofanEUCencoding.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxENGINEER Wildfire4.0andlater.
•“Legacyencoding” referstotheencodingusedbyPro/ENGINEER Wildfire
3.0andearlier.Depending onthelanguage,thisencodingistypicallysome
versionofanEUCencoding.
•“Nativeencoding” referstotheencodingusedbytheoperatingsysteminthe
languageinwhichthesystemisrunning.Thisencodingisthesameaslegacy
encodinginmostcases.
•“Multibyte string”referstoacharacterarrayrepresenting astringintheC
language.Becauseofthelimitedsizeofthecharacter(asinglebyte),
combinations ofmultiplebytesareusedtorepresentcharacters outsidethe
ASCIIrange.
•“7-bitASCII”referstothecharacterrange0x0through0x127.Thisrangeis
sharedbetweenUnicodeandnon-Unicode encodings usedbyCreo
Parametric. Thus,anydataofthistypeisunchanged aftertranscoding.
•“8-bitASCII”referstothecharacterrange0x128through0x255.Inmany
Europeannativeencodings, thisrangeisusedtorepresentEuropeanaccented
UnicodeEncoding 2171vowelsandotherletters.InUnicode,thisrangeisnotdirectlyused.Therefore,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEuropeannativeencodings, thisrangeisusedtorepresentEuropeanaccented
UnicodeEncoding 2171vowelsandotherletters.InUnicode,thisrangeisnotdirectlyused.Therefore,
8-bitASCIInativestringsarenotequivalent inUnicode.
•“ByteOrderMark”(BOM)referstoastringofthreebytes U+FEFF
(represented inClanguagestringsby“\357\273\277”), andisplacedonthe
topofatextfiletoindicatethatthetextisUnicodeencoded.Unicodehas
designated thecharacter U+FEFFastheBOMandreserved U+FFFEasan
illegalcharacterforUTF-8encoding.MostofthetextfilesgeneratedbyCreo
Parametric arewrittenwiththeBOMandUnicodeencoding.CreoParametric
canacceptaUnicodeencodedtextfilewithaBOM,oralegacyencodedtext
filewithoutaBOMastheinput.
•“Transcoding” referstotheactofchangingastringorwidestring encoding
fromoneencodingtoanother,forexample,fromplatformnativetoUnicode
orvice-versa. Forsometranscoding operations, thereisapossibility ofdata
loss,sincecharacters fromoneencodingmaynotbesupported inthetarget
encoding.
UnicodeEncodingandCreoParametric
TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxorvice-versa. Forsometranscoding operations, thereisapossibility ofdata
loss,sincecharacters fromoneencodingmaynotbesupported inthetarget
encoding.
UnicodeEncodingandCreoParametric
TOOLKIT
Pro/TOOKITapplications runningwithPro/ENGINEER Wildfire4.0andlater
must,bydefault,receiveandsendstringsandwidestrings toPro/ENGINEER in
Unicodeencoding.Thisisachangetotheencodingpreviously receivedby
applications inWildfire3.0andearlier.Becausetheworkstation operatingsystem
willnotberunninginUnicodeandotherlanguages, functionsandlibraries
accessedbytheCreoParametric TOOLKITapplication maynotbeUnicode
aware,theCreoParametric TOOLKITapplication mustdealwiththechangeof
encoding.
Makechangestotheapplication toexpectandacceptUnicodestringsand
widestrings whendealingwithCreoParametric data.Attheexternalinterfaces
fromtheapplication totheoperatingsystemorthird-party APIs,perform
necessarytranscoding operations toensurethatthoseothersystemsreceivean
expectedencoding.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfromtheapplication totheoperatingsystemorthird-party APIs,perform
necessarytranscoding operations toensurethatthoseothersystemsreceivean
expectedencoding.
PTCrecommends thatallapplications beevaluatedforUnicodecompliance
regardless oftheirpurposeorintendeddata.However,applications thatwould
particularly beaffectedbyUnicodeencodingareasfollows:
•AnyCreoParametric TOOLKITapplication expectedtoworkwithCreo
Parametric inanylanguageotherthanEnglish.
•AnyCreoParametric TOOLKITapplication expectingCreoParametric datain
anylanguageotherthanEnglish(wherestringsfromthatdataaretransferred
toandfromCreoParametric oranyothersource).
2172 Creo®Parametric TOOLKIT User’sGuideNecessityofUnicodeCompliance
Itisstronglyrecommended thatyoumakeyourexistingCreoParametric
TOOLKITapplications Unicode-compliant forthefollowingreasons:
•Applications thatarenotUnicode-compliant willbeunabletoreliablyhandle
CreoParametric datasavedintheUnicodeformatwithstrings(notes,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKITapplications Unicode-compliant forthefollowingreasons:
•Applications thatarenotUnicode-compliant willbeunabletoreliablyhandle
CreoParametric datasavedintheUnicodeformatwithstrings(notes,
annotations, table,andsoon)inmultiplelanguages otherthanEnglish.For
example,aCreoParametric drawingcannowcontainbothGermanand
Japanesenotes.TheCreoParametric TOOLKITapplication willnotbeableto
readormodifythosenotescorrectlywithoutbeingUnicodecompliant. This
couldresultindatalossorcorruption.
•Applications thatdonotconsidertheUnicodenatureofCreoParametric data
maytrytopassthatdatadirectlytothesystemorthird-party APIsthatdonot
recognizeitcorrectly.Thiscouldcausedatacorruption orcrashes.
•Applications thatdonottranscodenon-Unicode dataintoUnicodebefore
usingthedataasstringsinsideCreoParametric modelswillgeneratecorrupt
andincorrectmodels.
ExternalInterfaceHandling
CreoParametric TOOLKITapplications runninginUnicodewillneedtocreatexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusingthedataasstringsinsideCreoParametric modelswillgeneratecorrupt
andincorrectmodels.
ExternalInterfaceHandling
CreoParametric TOOLKITapplications runninginUnicodewillneedtocreate
utilitiesaroundtheinterfacesbetweennon-Unicode awarethird-party APIsand
interfaces. WhilePTCcannotdirectlyprovidesuchinterfaces, thissection
discussestheconsiderations forcreatingsuchutilitiesbyshowinghowone
externalAPIsuchastheCruntimelibrarycanbeusedfromaUnicode
environment.
AnyCruntimelibraryaccepting char*orwchar_t* asinputmaybeadversely
affectedbyreceivingUnicodedata.Typically,itshouldbepossibletocreatea
simplewrapperforeachCruntimeinterfaceusedintheapplication, wherethe
inputstringtotheinterfaceisexpectedtobeinUnicode.Thestringshouldbe
transcoded beforecallingthesystemAPI.Examples ofsuchCruntimefunctions
arelistedbelow(thisisnotanexhaustive list):
•fopen()
•access(),_access()
•chdir(),readdir(),opendir()
•chmod(),_chmod()
•findfirst(), _findnext()
•getcwd()
•getenv()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarelistedbelow(thisisnotanexhaustive list):
•fopen()
•access(),_access()
•chdir(),readdir(),opendir()
•chmod(),_chmod()
•findfirst(), _findnext()
•getcwd()
•getenv()
UnicodeEncoding 2173•open(),opendir()
○fgetc()
○fgets()
○fputc()
○fputs()
○fread(),fwrite()
○puts()
•remove(),stat(),system(),tmpfile(),unlink()
SpecialExternalInterface:printf()andscanf()
Functions
Theprintf() andscanf() familyofCruntimefunctionsareaspecialcase
ofanexternalinterface.Theformatstringmustbetranscoded whenthese
interfacesarecalled.Thelistofvariableargumentspassedtothefunctionsmay
alsocontainstringandwidestring datathatneedstobetranscoded andmodifiedin
format.Becauseofthecomplexity ofwrappingtheseCruntimefunctions, PTC
hasprovidedastandardCreoParametric TOOLKITfunctionequivalent foreach.
Thesefunctionssupportalltheformatspecifiersandmodifierssupported bytheC
languagespecification.
Functions Introduced:
•ProTKPrintf()
•ProTKFprintf()
•ProTKSprintf()
•ProTKSnprintf()
•ProTKVprintf()
•ProTKVfprintf()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlanguagespecification.
Functions Introduced:
•ProTKPrintf()
•ProTKFprintf()
•ProTKSprintf()
•ProTKSnprintf()
•ProTKVprintf()
•ProTKVfprintf()
•ProTKVsprintf()
•ProTKVsnprintf()
•ProTKScanf()
•ProTKFscanf()
•ProTKSscanf()
•ProTKSnscanf()
•ProTKVscanf()
•ProTKVfscanf()
•ProTKVsscanf()
2174 Creo®Parametric TOOLKIT User’sGuideThefunction ProTKPrintf() providestheUnicodeequivalent totheC
runtimefunction printf(). Thenumberofcharacters returnedbythisfunction
issenttostdout.Theoutputdataistranscoded tothenativeencodingformat,
whichmayresultinout-of-locale characters intheresults.
Thefunction ProTKFprintf() providestheUnicodeequivalent totheC
runtimefunction fprintf(). Thenumberofcharacters returnedbythis
functionarecopiedintothefile.ThisfilewillreceivethedataintheUnicode-
encodedformat.
Thefunctions ProTKSprintf() andProTKSnprintf() providethe
Unicodeequivalent totheCruntimefunctions sprintf() andsnprintf()
respectively .Thenumberofcharacters returnedbythesefunctionsarecopiedintoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThefunctions ProTKSprintf() andProTKSnprintf() providethe
Unicodeequivalent totheCruntimefunctions sprintf() andsnprintf()
respectively .Thenumberofcharacters returnedbythesefunctionsarecopiedinto
theoutputbuffer.
Thefunction ProTKScanf() providestheUnicodeequivalent totheCruntime
function scanf(). Thisfunctionparsesthecontentsoftheinputfromstdin.The
outputdatainthestringorcharacterformatisinUnicodeencoding.
Thefunction ProTKFscanf() providestheUnicodeequivalent totheC
runtimefunction fscanf(). Thisfunctionparsesthecontentsoftheinputfrom
afile.
Thefunctions ProTKSscanf() andProTKSnscanf() providetheUnicode
equivalent totheCruntimefunctions sscanf() andsnscanf() respectively .
TheUnicodeequivalent oftheCruntimefunctions v*printf() and
v*scanf(), whichtakeavariableargumentslistinsteadofvariablenumberof
arguments,havealsobeenprovidedintheformofProTKV*printf() and
ProTKV*scanf() functions.
SpecialExternalInterface:Windows-runtime
Functionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarguments,havealsobeenprovidedintheformofProTKV*printf() and
ProTKV*scanf() functions.
SpecialExternalInterface:Windows-runtime
Functions
Win32functionsthattakechar*inputsarenotUnicodecompliant, andthus
cannotbeusedwithdatadirectlyobtainedfromPro/ENGINEER Wildfire4.0and
later.ThesimplestapproachtousingWindowsruntimefunctionsistousethe
functionsacceptingwchar_t*inputssincethesefunctionsareUnicodecompliant
(Windowsnativeencodingforwhar_t*isUnicode). Forexample,usethefunction
GetMessageW() insteadofGetMessage() orGetMessageA().
SpecialExternalInterface:Hardcoded Strings
Anotherexampleofanexternalinterfaceisahardcoded string.Youshouldreview
allusesofhardcoded stringsinyourapplication andensurethattheyfitthe
followingcategories:
•Theyuseonly7-bitASCIIcharacters orwidecharacters.
UnicodeEncoding 2175•TheyuseUnicodeescapesequences.
8-bitASCIIornon-Unicode escapesequences inhardcoded stringsdonotwork
correctlyunlessyoutranscodethestringintoUnicodebeforesendingittoCreo
Parametric.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8-bitASCIIornon-Unicode escapesequences inhardcoded stringsdonotwork
correctlyunlessyoutranscodethestringintoUnicodebeforesendingittoCreo
Parametric.
Example3:WriteaUnicode-encoded widestringfromCreo
Parametric toafilecontainingBOM
ThesamplecodeinthefileUgUnicodeTranscoding.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_main
writesaunicode-encoded widestring fromCreoParametric toafilecontaining
BOM.
Example4:WriteUnicode-encoded widestringtoCreo
Parametric afterreadingtheunicodestringfromafile
containingtheBOM
ThesamplecodeinthefileUgUnicodeTranscoding.c locatedat<creo_
toolkit_loadpoint>/protk_appls/pt_userguide/ptu_main
writesaunicode-encoded widestring toCreoParametric afterreadingtheunicode
stringfromafilecontaining theBOM.
2176 Creo®Parametric TOOLKIT User’sGuideB
UpdatingOlderApplications
Overview..............................................................................................................2178xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2176 Creo®Parametric TOOLKIT User’sGuideB
UpdatingOlderApplications
Overview..............................................................................................................2178
ToolsAvailableforUpdatingApplications ................................................................2178
Thisappendixdescribesthetoolsthatareavailableforupdatingapplications from
olderversionstothecurrentreleaseofCreoParametric TOOLKIT.
2177Overview
CreoParametric TOOLKITusersareresponsible forupdatingtheirapplications
fromolderversionstousethenewCreoParametric TOOLKITfunctions. When
youupdatetheapplications, usethefunctionsthathavebeenupdatedinthe
currentrelease.
PTCprovidestoolsthatfacilitateupdatingofyourCreoParametric TOOLKIT
applications fromolderversions.However,incertainscenarios, thetoolsmaynot
giveexpectedresults.
ToolsAvailableforUpdatingApplications
PTCprovidesthemark_deprecated.pl tooltoupdateyourapplications
fromolderversionstothecurrentrelease.Thisperlscriptislocatedat<creo_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgiveexpectedresults.
ToolsAvailableforUpdatingApplications
PTCprovidesthemark_deprecated.pl tooltoupdateyourapplications
fromolderversionstothecurrentrelease.Thisperlscriptislocatedat<creo_
loadpoint>\<datecode>\Common Files\protoolkit\scripts.
Thescriptparsesdirectories andlooksforfileswithextensions suchas,.c,
.cxx,and.cpp,whicharethedefaultextensions includedinthescript.
Thescriptsearchesfordeprecated symbols,suchas,functions, structures,
enumerated datatypesandsoon,inthesefiles.Whenitfindssuchsymbols,the
scriptinsertscomments withrecommendations ofpossiblereplacements. By
default,thescriptusesthemappingtableprotkmap.txt providedat<creo_
loadpoint>\<datecode>\Common Files\protoolkit\scripts.
ThemappingtableisbasedonDEPRECA TEDandSUCCESSORS tagsspecified
intheCreoParametric TOOLKITheaderfiles.Somedeprecated functionsmay
nothavedirectreplacement functions. Insuchcases,thescriptaddsthecomment
ASAPPROPRIA TE.
Thescriptoptionsarelistedwhenyourunmark_deprecated.pl withnoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnothavedirectreplacement functions. Insuchcases,thescriptaddsthecomment
ASAPPROPRIA TE.
Thescriptoptionsarelistedwhenyourunmark_deprecated.pl withno
arguments,orwithoptions–h,-?or–help.
Note
Theoptionsmayvaryinfuturereleases.
Whenyourunthescript,itsavesacopyoftheoriginalfiles.However,PTC
recommends thatyoubackupallthefiles,beforerunningthescript.
Thescriptgeneratestwotypesofoutput.Theoutputsdependonthe-moption.
Forexample,considerafilewiththename model.c. Itcontainsthefollowing
code:
void findMdlParam(ProMdl mdl) {
ProMdlnameShortdata *modelList =NULL;
/*should wecall ProMdlInit here?? */
error =ProMdlDependenciesList (mdl, &modelList, &noOFModels);
error =ProMdlCopy (mdl); //what todo?
2178 Creo®Parametric TOOLKIT User’sGuide/*who knows? That's aquestion
btkString errorStr ="\"ProMdlCopy (mdl)\" -error";
PrintModelDependencies(modelList);
/*
*This islong multiline comment, where some Pro/TK
*calls like ProCollectionAlloc orProCollectioninstrAlloc
*can befound.
*/
return;
}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPrintModelDependencies(modelList);
/*
*This islong multiline comment, where some Pro/TK
*calls like ProCollectionAlloc orProCollectioninstrAlloc
*can befound.
*/
return;
}
Ifyouspecifythe-moption,theoriginalfileisretained,andtheoutputfilewith
thename <filename>_markup.c iscreated.Thecomments recommending
newsymbolsareinsertedonseparatelinesintheoutputfile.Forthefile
model.c, thefollowingoutputisgeneratedinthefilemodel_markup.c:
void findMdlParam(ProMdl mdl) {
ProMdlnameShortdata *modelList =NULL;
/*should wecall ProMdlInit here?? */
/*Deprecated_API_Used: Replace ProMdlInit with ProMdlnameInit */
error =ProMdlDependenciesList (mdl, &modelList, &noOfModels);
/*Deprecated_API_Used: Replace ProMdlDependenciesList
with ProMdlDependenciesMdlnameList */
error =ProMdlCopy (mdl); //what todo? /*who knows? That's aquestion
/*Deprecated_API_Used: Replace ProMdlCopy with ProMdlnameCopy */
btkString errorStr ="\"ProMdlCopy (mdl)\" -error";
PrintModelDependencies(modelList);
/*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/*Deprecated_API_Used: Replace ProMdlCopy with ProMdlnameCopy */
btkString errorStr ="\"ProMdlCopy (mdl)\" -error";
PrintModelDependencies(modelList);
/*
*This islong multiline comment, where Ican also note some Pro/TK
*calls like ProCollectionAlloc orProCollectioninstrAlloc
**Deprecated_API_Used: Replace ProCollectionAlloc with
ProCrvcollectionAlloc, ProSrfcollectionAlloc **
**Deprecated_API_Used: Replace ProCollectioninstrAlloc with AS
APPROPRIATE **
*can befound.
*/
return;
}
Ifyoudonotspecifythe-moption,acopyoftheoriginalfileissavedas
<filename>.c.orig. Thecomments withrecommendations areinsertedin
theoriginalfile.Forexample,theoriginalfileissavedasmodel.c.orig. The
followingoutputisgeneratedinthefilemodel.c:
void findMdlParam(ProMdl mdl) {
ProMdlnameShortdata *modelList =NULL;
/*should wecall **PROTK_DEPRECATED ProMdlInit ->
ProMdlnameInit **ProMdlInit here?? */
UpdatingOlderApplications 2179error =/*PROTK_DEPRECATED ProMdlDependenciesList ->
ProMdlDependenciesMdlnameList */xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMdlnameInit **ProMdlInit here?? */
UpdatingOlderApplications 2179error =/*PROTK_DEPRECATED ProMdlDependenciesList ->
ProMdlDependenciesMdlnameList */
ProMdlDependenciesList (mdl, &modelList, &noOfModels);
error =/*PROTK_DEPRECATED ProMdlCopy ->
ProMdlnameCopy */ProMdlCopy
(mdl);
//what todo? /*who knows? That's aquestion
btkString errorStr ="\"ProMdlCopy (mdl)\" -error";
PrintModelDependencies(modelList);
/*
*This islong multiline comment, where some Pro/TK
*calls like **PROTK_DEPRECATED ProCollectionAlloc ->
ProCrvcollectionAlloc,
ProSrfcollectionAlloc **ProCollectionAlloc or**PROTK_DEPRECATED->
ASAPPROPRIATE **ProCollectioninstrAlloc
*can befound.
*/
return;
}
2180 Creo®Parametric TOOLKIT User’sGuideC
MigratingtoCreoObjectTOOLKIT
C++
Overview..............................................................................................................2182
MigratingApplications UsingTools..........................................................................2182xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMigratingApplications UsingTools..........................................................................2182
ThisappendixdescribeshowtomigratetoCreoObjectTOOLKITC++.
2181Overview
PTCintroduced CreoObjectTOOLKITC++asapartofitsmodernization plan
andtoimproveproductivity .
ToenableuserstosmoothlymigratetheirexistingCreoParametric TOOLKIT
applications, theCreoParametric TOOLKITAPIWizardprovideslinksto
equivalent CreoObjectTOOLKITC++methods.
Additionally ,fromCreo3.0onward,PTCprovidesatooltofacilitatemigrationof
CreoParametric TOOLKITapplications toCreoObjectTOOLKITC++.
Certainfunctional areasarenotyetavailableinCreoObjectTOOLKITC++.In
suchcases,youcancontinueusingtheCreoParametric TOOLKITfunctionsin
CreoObjectTOOLKITC++applications, asboththetoolkitsarecompatible.
RefertotheCreoObject TOOLKIT C++ User’sGuideformoreinformation.
MigratingApplications UsingTools
PTCprovidesthemark_otkmethod.pl tooltohelpyoumigrateapplications
fromCreoParametric TOOLKITtoCreoObjectTOOLKITC++.ThisperlscriptxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMigratingApplications UsingTools
PTCprovidesthemark_otkmethod.pl tooltohelpyoumigrateapplications
fromCreoParametric TOOLKITtoCreoObjectTOOLKITC++.Thisperlscript
islocatedat<creo_loadpoint>\<datecode>\Common Files\
protoolkit\scripts. Thescriptparsesdirectories andlooksforfileswith
extensions suchas,.c,.cxx,and.cpp,whicharethedefaultextensions includedin
thescript.
ThescriptsearchesforCreoParametric TOOLKITfunctionsinthesefiles.When
itfindsCreoParametric TOOLKITfunctions, thescriptinsertscomments with
recommendations ofpossiblereplacingCreoObjectTOOLKITC++methods.By
default,thescriptusesthemappingtableprotk2otkmap.txt providedat
<creo_loadpoint>\<datecode>\Common Files\protoolkit\
scripts.
Thescriptoptionsarelistedwhenyourunmark_otkmethod.pl withno
arguments,orwithoptions–h,-?or–help.
Note
Theoptionsmayvaryinfuturereleases.
Whenyourunthescript,itsavesacopyoftheoriginalfiles.However,PTC
recommends thatyoubackupallthefiles,beforerunningthescript.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxarguments,orwithoptions–h,-?or–help.
Note
Theoptionsmayvaryinfuturereleases.
Whenyourunthescript,itsavesacopyoftheoriginalfiles.However,PTC
recommends thatyoubackupallthefiles,beforerunningthescript.
Thescriptgeneratestwotypesofoutputsdepending onthe-moption.The
mark_otkmethod.pl generatesoutputsimilartothemark_
deprecated.pl script.
Forexample,considerafileXsection.c. Itcontainsthefollowingcode:
ProMessageDisplay(msgfil, "USER Pick the start plane");
2182 Creo®Parametric TOOLKIT User’sGuidestatus =ProSelect("face", 1,NULL, NULL, NULL, NULL, &sel, &n_sel);
if(status !=PRO_TK_NO_ERROR ||n_sel <1)
return(0);
ProSelectionModelitemGet(sel[0], &surface_modelitem);
ProSurfaceInit(part, surface_modelitem.id, &surface);
ProSurfaceTypeGet(surface, &stype);
if(stype !=PRO_SRF_PLANE)
return(0);
Ifyouspecifythe-moption,theoriginalfileisretained,andtheoutputfilewith
thename <filename>_markup.c iscreated.Therecommended CreoObject
TOOLKITC++methodsareinsertedascomments onseparatelinesintheoutputxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIfyouspecifythe-moption,theoriginalfileisretained,andtheoutputfilewith
thename <filename>_markup.c iscreated.Therecommended CreoObject
TOOLKITC++methodsareinsertedascomments onseparatelinesintheoutput
file.Inthisexample,forthefileXsection.c, thefollowingoutputisgenerated
inthefileXsection_markup.c:
ProMessageDisplay(msgfil, "USER Pick the start plane");
/*Replace ProMessageDisplay with pfcSession::UIDisplayMessage /
pfcSession::UIDisplayLocalizedMessage */
status =ProSelect("face", 1,NULL, NULL, NULL, NULL, &sel, &n_sel);
/*Replace ProSelect with pfcBaseSession::Select */
if(status !=PRO_TK_NO_ERROR ||n_sel <1)
return(0);
ProSelectionModelitemGet(sel[0], &surface_modelitem);
/*Replace ProSelectionModelitemGet with pfcSelection::GetSelModel /
pfcSelection::GetSelItem */
ProSurfaceInit(part, surface_modelitem.id, &surface);
ProSurfaceTypeGet(surface, &stype);
if(stype !=PRO_SRF_PLANE)
return(0);
Ifyoudonotspecifythe-moption,acopyoftheoriginalfileissavedasxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSurfaceInit(part, surface_modelitem.id, &surface);
ProSurfaceTypeGet(surface, &stype);
if(stype !=PRO_SRF_PLANE)
return(0);
Ifyoudonotspecifythe-moption,acopyoftheoriginalfileissavedas
<filename>.c.orig. Thecomments withrecommendations areinsertedin
theoriginalfile.Inthisexample,theoriginalfileXsection.c issavedas
Xsection.c.orig. Thefollowingoutputisgeneratedinthefile
Xsection.c:
/*Replace ProMessageDisplay ->pfcSession::UIDisplayMessage /
pfcSession::UIDisplayLocalizedMessage */
ProMessageDisplay(msgfil, "USER Pick the start plane");
status =/* Replace ProSelect ->pfcBaseSession::Select */
ProSelect("face", 1,NULL, NULL, NULL, NULL, &sel, &n_sel);
Migrating toCreoObjectTOOLKIT C++ 2183if(status !=PRO_TK_NO_ERROR ||n_sel <1)
return(0);
/*Replace ProSelectionModelitemGet ->pfcSelection::GetSelModel /
pfcSelection::GetSelItem */
ProSelectionModelitemGet(sel[0], &surface_modelitem);
ProSurfaceInit(part, surface_modelitem.id, &surface);
ProSurfaceTypeGet(surface, &stype);xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpfcSelection::GetSelItem */
ProSelectionModelitemGet(sel[0], &surface_modelitem);
ProSurfaceInit(part, surface_modelitem.id, &surface);
ProSurfaceTypeGet(surface, &stype);
if(stype !=PRO_SRF_PLANE)
return(0);
2184 Creo®Parametric TOOLKIT User’sGuideD
MigratingtotheMultibody
Environment
Overview..............................................................................................................2186
ImpactonExistingAPIs.........................................................................................2188
User-Defined Features..........................................................................................2189
UpdateinAPIImplementation toSupportMultibody.................................................2190
UpdateinExistingElementTrees...........................................................................2190
NewElementTreesforSupportingMultibodyFeatures............................................2191xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNewElementTreesforSupportingMultibodyFeatures............................................2191
UpdatetoValuesofEnumerated DataTypes...........................................................2191
ImpactonExistingStructures.................................................................................2191
ThisappendixdescribeshowtomigratetotheCreoParametric multibody
environment.
2185Overview
PTCintroduces multibody partdesigntoimprovedesignproductivity ,flexibility,
andusability.
TheexistingCreoParametric TOOLKITapplication continuestoworkseamlessly
forlegacymodelsandmodelshavingasinglebody.However,youmustupgrade
toCreoParametric 7.0.0.0tousethemultibody environment.
Tosupportthemultibody environment, CreoParametric 7.0.0.0isupdatedinthe
followingaspects:
•NewAPIsareadded
•SomeexistingAPIsaredeprecated andaresuperseded bynewAPIs
•Implementation ofexistingAPIsisupdated.NovisiblechangesinCreo
Parametric ToolkitAPIs
•Newelementtreesareaddedtosupportnewmultibody featuresxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•SomeexistingAPIsaredeprecated andaresuperseded bynewAPIs
•Implementation ofexistingAPIsisupdated.NovisiblechangesinCreo
Parametric ToolkitAPIs
•Newelementtreesareaddedtosupportnewmultibody features
•Someexistingelementtreesareupdated.
•Someenumerated datatypesandtheirvaluesareupdated
•Existingstructuresareupdated
ToenableyoutosmoothlymigrateyourexistingCreoParametric TOOLKIT
applications, theCreoParametric TOOLKITAPIWizardprovidesthefollowing
APIstosupportmultibody:
FeatureName APIname
BodyOperations •ProSolidBodyCreate()
•ProSolidBodyDelete()
•ProSolidDefaultBodySet()
•ProSolidBodyConstruc-
tionSet()
QueryingBody •ProSolidBodiesCollect()
•ProSolidBodySurfaceVi-
sit()
•ProSolidDefaultBodyGet()
•ProSolidBodyStateGet()
•ProSolidBodyIsConstruc-
tion()
•ProSolidBodyOutlineGet()
•ProSolidBodyFeatures-
Get()
•ProGeomitemBodyGet()
Interference •
2186 Creo®Parametric TOOLKIT User’sGuideFeatureName APIname
ProVolumeInterferenceBo
diesGet()
•ProVolumeInterference-
DisplayForBody()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•ProSolidBodyFeatures-
Get()
•ProGeomitemBodyGet()
Interference •
2186 Creo®Parametric TOOLKIT User’sGuideFeatureName APIname
ProVolumeInterferenceBo
diesGet()
•ProVolumeInterference-
DisplayForBody()
MaterialProperties •ProSolidBodyMaterial-
Set()
•ProSolidBodyMaterial-
Get()
•ProSolidBodyMaterial-
Get()
•ProSolidBodyDensityGet()
•ProSolidBodyMassProper-
tyGet()
Sheetmetal •ProSolidBodyIsSheetme-
tal()
Cross-Section •ProXSectionExcludeComp-
Get()
•ProXSectionItemDataGet()
•ProXSectionItemFree()
•ProXSectionItemXhatch-
StyleGet()
•ProXSectionItemXhatch-
StyleSet()
•ProXSectionItemsArr-
Free()
•ProXSectionItemsCol-
lect()
•ProXSectionOffset-
Create()
•ProXSectionPlanar-
Create()
•ProXsecMdlnameAlloc()
•ProXsecMdlnameFree()
•ProXsecNewXhatchStyle-
CreateFromName()
•ProXsectionCompXhatch-
StyleGet()
•ProXsectionCompXhatch-
StyleSet()
Migrating totheMultibody Environment 2187FeatureName APIname
•ProXsecMdlnameNameGet()
•ProXsecMdlnameNameSet()
•ProXsecMdlnameSolidOw-
nerGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxStyleGet()
•ProXsectionCompXhatch-
StyleSet()
Migrating totheMultibody Environment 2187FeatureName APIname
•ProXsecMdlnameNameGet()
•ProXsecMdlnameNameSet()
•ProXsecMdlnameSolidOw-
nerGet()
•ProXsecMdlnameSolidOw-
nerGet()
•ProXsecMdlnameSolidOw-
nerSet()
Shrinkwrap options •ProShrinkwrapoption-
sIgnoreconstrbodiesSet()
UDF •ProUdfFileIsPreCreo7()
ImpactonExistingAPIs
YoumustevaluatetheneedforusingthenewAPIsbasedonthelogicofyour
application. ThefollowingtableliststhenamesoftheexistingAPIsand
respective superseding APIs.
Deprecated API NewAPI
ProSolidSurfaceVisit() ProSolidBodiesCollect()
ProSolidyBodySurfaceVi
sit()
ProPartToProIntfData() ProPartToProInterfaceDa
ta()
ProQuiltdataTypeGet()
ProQuiltdataTypeSet()
ProXsecGeometryCollect() ProXSectionItemsCollect()
ProXSectionItemDataGet()
ProXsecPlanarWithoption
sCreate()ProXSectionPlanarCreate()
ProXsecExcludeCompGet() ProXSectionExcludeComp
Get()
ProXsecCompXhatchStyle
Get()ProXsectionCompXhatchStyle
Get()
ProXSectionItemXhatchStylexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProXsecPlanarWithoption
sCreate()ProXSectionPlanarCreate()
ProXsecExcludeCompGet() ProXSectionExcludeComp
Get()
ProXsecCompXhatchStyle
Get()ProXsectionCompXhatchStyle
Get()
ProXSectionItemXhatchStyle
Get()
ProXsecCompNewXhatchStyle
Get()ProXsectionCompXhatchStyle
Get()
2188 Creo®Parametric TOOLKIT User’sGuideDeprecated API NewAPI
ProXSectionItemXhatchStyle
Get()
ProXsecCompXhatchStyle
Set()ProXsectionCompXhatchStyle
Set()
ProXSectionItemXhatchStyle
Set()
ProXsecCompNewXhatchStyle
Set()ProXsectionCompXhatchStyle
Set()
ProXSectionItemXhatchStyle
Set()
ProXsecCompNewXhatchStyle
SetByName()ProXsecNewXhatchStyleCrea
teFromName()
/ProXsectionCompXhatchSty
leSet()
ProXSectionItemXhatchStyle
Set()
ProXsecOffsetCreate() ProXSectionOffsetCreate()
ProPartDensitySet() ProMaterialCurrentSet()
ProMaterialPropertySet()
Thefollowingpointsareimportanttoremember:
•Checkinstancesofdeprecated APIuse.
•Modifycodetousesuperseding APIs
•Testtheupdatedapplication onlegacymodelsandonmultibody models.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMaterialPropertySet()
Thefollowingpointsareimportanttoremember:
•Checkinstancesofdeprecated APIuse.
•Modifycodetousesuperseding APIs
•Testtheupdatedapplication onlegacymodelsandonmultibody models.
•Someofthedeprecated APIsworkonmultibody modelsifthespecial
configuration option allow_gmb_tkapi issettoyes.
User-Defined Features
Withtheintroduction ofbodiesinCreoParametric 7.0.0.0,thefollowingoccurs:
•Whencreatingapart,youcanaddbodyreferences tosomefeatures,suchasto
protrusion andcutfeatures.
•Whencreatinganassembly,youcannotaddbodyreferences.
•UDFscreatedinanearlierreleaseofCreoParametricdo nothavebody
references.
•UDFscreatedinanassemblyinCreoParametric 7.0.0.0donothavebody
references.
Migrating totheMultibody Environment 2189Formoreinformation abouthowUDFplacement ishandledinCreoParametric
7.0.0.0,refertothesectionMultibody supportinUDFandCopyfeatureonpage
160intheCore:Featuresonpage130chapter.
UpdateinAPIImplementation toSupportMultibodyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx7.0.0.0,refertothesectionMultibody supportinUDFandCopyfeatureonpage
160intheCore:Featuresonpage130chapter.
UpdateinAPIImplementation toSupportMultibody
Implementation ofsomeAPIsischanged.Toprogrammatically selectbodies,pass
thestring 3d_body totheAPIProSelect toselectbodies.
UpdateinExistingElementTrees
Someexistingfeaturesareaffectedduetotheintroduction ofthemultibody
featuressuchascreatingoraddingabody.Thefollowingheaderfilesareupdated:
•ProShell.h
•ProRib.h
•ProSmtDrvSurf.h
•ProExtrude.h
•ProRevolve.h
•ProSweep.h
•ProHole.h
•ProRound.h
•ProChamfer.h
•ProModifyRound.h
•ProModifyChamfer.h
•ProSmtShell.h
Thefollowingpointsareimportanttoremember:
•CheckiftheaffectedfeaturesarecreatedintheCreoParametric TOOLKIT
application.
•Ifyouareworkinginthesinglebodyorlegacyenvironment, thennoactionis
required.
•Ifyouareworkinginthemultibody environment, updatetheapplication code
andusetheupdatedelementtreesforthespecificfeatures.
•IfyouareusinganupdatedversionoftheCreoParametric TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrequired.
•Ifyouareworkinginthemultibody environment, updatetheapplication code
andusetheupdatedelementtreesforthespecificfeatures.
•IfyouareusinganupdatedversionoftheCreoParametric TOOLKIT
application, performsubsequent testingformultibody models.
2190 Creo®Parametric TOOLKIT User’sGuideNewElementTreesforSupporting Multibody
Features
Tosupportmultibody features,thefollowingheaderfilesareadded:
•ProSplitBody.h
•ProBooleanBodies.h
•ProRemoveBody.h
•ProBodyCopy.h
•ProBodyOpts.h
Youcancreatemultibody featuresusingthesenewfeatureelementtreesbasedon
thelogicofyourCreoParametric TOOLKITapplication.
UpdatetoValuesofEnumerated DataTypes
Withtheintroduction ofthemultibody environment, thefollowingenumerated
valuesareimpacted:
•PRO_SURFCOLL_ALL_SOLID_SRFS isdeprecated
Note
Asaresult,thefunctions ProSrfcollectionRegenerate(),
ProElementCollectionSet() ,and
ProSelbufferCollectionAdd() returntheerrorPRO_TK_
MULTIBODY_UNSUPPORTED formultibody basedmodels.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNote
Asaresult,thefunctions ProSrfcollectionRegenerate(),
ProElementCollectionSet() ,and
ProSelbufferCollectionAdd() returntheerrorPRO_TK_
MULTIBODY_UNSUPPORTED formultibody basedmodels.
•Thenewenumvalues PRO_SURFCOLL_BODY_SRFS andPRO_
SURFCOLL_ALL_BODY_SRFS areadded.
•NewenumvaluePRO_LAYER_BODY isadded.
Iftheenumvalue PRO_SURFCOLL_ALL_SOLID_SRFS existsinyourCreo
Parametric TOOLKITapplication code,thenyouneedtoupdatethecodeandtest
thelegacyandmultibody models.
ImpactonExistingStructures
ProQuiltData isupdatedwithanewstructuremembertosupportmultibody
environment. Asaresult,thefunction ProPartToIntfData() isimpacted.
Migrating totheMultibody Environment 2191E
CreoParametric TOOLKIT
RegistryFile
RegistryFileFields................................................................................................2193
SampleRegistryFiles............................................................................................2194xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSampleRegistryFiles............................................................................................2194
ThisappendixdescribeshowtousetheRegistryfiletohaveaforeignprogram
communicate withCreoParametric.
2192 Creo®Parametric TOOLKIT User’sGuideRegistryFileFields
Thefollowingtableliststhefieldsintheregistryfilecreotk.dat or
protk.dat.
Field Description
name AssignsauniquenametotheCreoParametric TOOLKIT application.
Thenameisusedtoidentifytheapplication ifthereismorethanone.
Thenamecanbetheproductnameanddoesnothavetobethesameas
theexecutable name.
ThisfieldhasalimitofPRO_NAME_SIZE-1 widecharacters
(wchar_t).
startup SpecifiesthemethodCreoParametric shouldusetocommunicate with
theCreoParametric TOOLKITapplication.
Thisfieldcantakeoneofthreevalues; spawn, dllorjava.
•spawn— Ifthevalueisspawn,CreoParametric startstheforeign
programusinginterprocess communications.
•dll–Ifthevalueisdll,CreoParametric loadstheforeign
programasaDLL.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•spawn— Ifthevalueisspawn,CreoParametric startstheforeign
programusinginterprocess communications.
•dll–Ifthevalueisdll,CreoParametric loadstheforeign
programasaDLL.
•java–Ifthevalueisjava,CreoParametric startstheapplication
asaJ-Linkclass.ConsulttheJ-Link User’sGuideformoredetails.
Thedefaultvalueisspawn.
fail_tol SpecifiestheactionofCreoParametric ifthecalltouser_
initialize() intheforeignprogramreturnsnon-zero,orifthe
foreignprogramsubsequently fails.IfthisisTRUE,CreoParametric
continuesasnormal.IfthisfieldismissingorissettoFALSE,Creo
Parametric shutsdownCreoParametric andotherforeignprograms.
exec_file Specifiesthefullpathandnameofthefileproducedbycompiling and
linkingtheCreoParametric TOOLKIT application. InDLLmode,thisis
adynamically linkablelibrary;inspawnmode,itisacomplete
executable.
ThisfieldhasalimitofPRO_PATH_SIZE-1 widecharacters
(wchar_t).
text_dir Specifiesthefullpathnametotextdirectorythatcontainsthelanguage-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxexecutable.
ThisfieldhasalimitofPRO_PATH_SIZE-1 widecharacters
(wchar_t).
text_dir Specifiesthefullpathnametotextdirectorythatcontainsthelanguage-
specificdirectories. Thelanguage-specific directories containthe
messagefiles,menufiles,resourcefilesandUIbitmapsinthelanguage
supported bytheCreoParametric TOOLKITapplication. Pleasereferto
theUserInterface:Menus,Commands, andPopupmenus onpage297
andUserInterface:Messagesonpage280chaptersformore
information.
Thetext_dir doesnotneedtoincludethetrailing /text;itisadded
automatically byCreoParametric.
Thesearchpriorityformessagesandmenufilesisasfollows:
1.Currentworkingdirectory
2.text_dir\text
3.<creo_loadpoint>\<datecode>\Common Files\
$<machine type>\text, where <machine_type> isthe
CreoParametric TOOLKITRegistryFile 2193Field Description
machine-specific subdirectory ,suchas,i486_nt orx86e_
win64.Settheenvironment variable PRO_MACHINE_TYPE to
definethetypeofmachineonwhichCreoParametric isinstalled.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmachine-specific subdirectory ,suchas,i486_nt orx86e_
win64.Settheenvironment variable PRO_MACHINE_TYPE to
definethetypeofmachineonwhichCreoParametric isinstalled.
Thetext_dir shouldbedifferentfromtheCreoParametric texttree.
ThisfieldhasalimitofPRO_PATH_SIZE-1 widecharacters
(wchar_t).
rbn_path Specifiesthenameoftheribbonfilealongwithitspath,whichmustbe
loadedwhenyouopenCreoParametric. Thelocationoftheribbonfile
isrelativetothelocationofthetextdirectory.Thefieldtext_dir
specifiesthepathforthetextdirectory.Forexample,ifyouwantto
specifyaribbonfileapp1_rbn.rbn placedattext_dir/app1/
app1_rbn.rbn, specify rbn_path asapp1/app1_rbn.rbn.
Ifthefieldisnotspecified,bydefault,theribbonfilewithitslocation,
text_dir/toolkitribbonui.rbn isused.
delay_start IfyousetthistoTRUE,CreoParametric doesnotinvoketheCreo
Parametric TOOLKITapplication asitstartsup,butenablesyouto
choosewhentostarttheapplication. Ifthisfieldismissingorissetto
FALSE,theCreoParametric TOOLKIT application startsautomatically .xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKITapplication asitstartsup,butenablesyouto
choosewhentostarttheapplication. Ifthisfieldismissingorissetto
FALSE,theCreoParametric TOOLKIT application startsautomatically .
description Actsasahelplineforyourauxiliaryapplication. Ifyouleavethecursor
onanapplication intheStart/Stop GUI,CreoParametric displaysthe
description text(upto80characters). Youcanusenon-ASCII
characters, asinmenufiles.
Tomakethedescription appearinmultiplelanguages, youmustuse
separate protk.dat filesin<hierarchy>/<platform>/
<text>/<language>.
allow_stop IfyousetthistoTRUE,youcanstoptheapplication duringthesession.
IfthisfieldismissingorissettoFALSE,youcannotstopthe
application, regardless ofhowitwasstarted.
end Indicatestheendofthedescription oftheCreoParametric TOOLKIT
application. Itispossibletoaddfurtherstatements thatdefineother
foreignapplications. Alloftheseapplications areinitialized byCreo
Parametric.
SampleRegistryFiles
Thissectionlistsseveralexamplesthatillustratethevariouswaystohaveaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxforeignapplications. Alloftheseapplications areinitialized byCreo
Parametric.
SampleRegistryFiles
Thissectionlistsseveralexamplesthatillustratethevariouswaystohavea
foreignprogramcommunicate withCreoParametric.
Example1
Inthisexample,CreoParametric spawnstheforeignprogram,whichrunsonthe
samemachine.Thecommunication isviapipes(thedefaultmodewhenthe
foreignprogramrunsonthesamemachineasCreoParametric).
File:protk.dat
[Startoffileonnextline]
name Product1
exec_file /home/protk/$<machine_type>/obj/frnpgm1
2194 Creo®Parametric TOOLKIT User’sGuidetext_dir /home/protk
end
[Endoffileonpreviousline]
Example2
Thisexampleillustrateshowtorunmultipleforeignprograms, asspecifiedinthe
protk.dat file.
File:protk.dat
[Startoffileonnextline]
name Product1
startup dll
exec_file /home/protk/$<machine_type>/obj/frnpgm1.dll
text_dir /home/protk
end
name Product2
startup spawn
exec_file /home/protk2/$<machine_type>/obj/frnpgm2
text_dir /home/protk2
end
[Endoffileonpreviousline]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtext_dir /home/protk
end
name Product2
startup spawn
exec_file /home/protk2/$<machine_type>/obj/frnpgm2
text_dir /home/protk2
end
[Endoffileonpreviousline]
CreoParametric TOOLKITRegistryFile 2195F
CreoParametric TOOLKITLibrary
Types
Overview..............................................................................................................2197
LinkingtheApplications .........................................................................................2197
StandardLibraries.................................................................................................2198
AlternateLibraries.................................................................................................2198
ThisappendixdescribesthevariouslibrariesavailableinaCreoParametric
TOOLKITinstallation.
2196 Creo®Parametric TOOLKIT User’sGuideOverview
ThelibrariesavailableinaCreoParametric TOOLKITinstallation havebeen
classifiedunder:
•StandardLibrariesonpage2198
•AlternateLibrariesonpage2198xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2196 Creo®Parametric TOOLKIT User’sGuideOverview
ThelibrariesavailableinaCreoParametric TOOLKITinstallation havebeen
classifiedunder:
•StandardLibrariesonpage2198
•AlternateLibrariesonpage2198
FromCreoParametric 4.0F000onward,thelibrarieslistedinthefollowingtable
arenolongersupported andwillnotbeavailablewiththesoftware.TheNew
LibraryNamecolumnprovidesalistoftheequivalent librariesthatarenow
available.Apartfromthecompatibility issuesexplainedinthechapterVersion
Compatibility: CreoParametric andCreoParametric TOOLKITonpage41,
applications basedonCreoParametric 3.0andpreviousreleaseswillcontinueto
runsuccessfully withCreoParametric 4.0.
OldLibraryName NewLibraryName
protk_dll.lib protk_dll_NU.lib
protoolkit.lib protoolkit_NU.lib
protk_dllmd.lib protk_dllmd_NU.lib
protkmd.lib protkmd_NU.lib
LinkingtheApplications
Beforeyourunanexistingapplication inCreoParametric 4.0,linkittothenew
librariesandtheimportlibraries: ucore.lib andudata.lib. Thenewxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprotkmd.lib protkmd_NU.lib
LinkingtheApplications
Beforeyourunanexistingapplication inCreoParametric 4.0,linkittothenew
librariesandtheimportlibraries: ucore.lib andudata.lib. Thenew
librariesdonotlinktheapplication totheUnicodelibrariesbutuseucore.lib
andudata.lib atruntimetoresolvetheUnicodedependencies, whichalso
reducesthesizeoftheapplication. Sincetheselibrariesareimportlibraries,the
application mustresolveUnicodedependencies atruntimebyloadingtheactual
libraries ucore46.dll andudata46.dll. Thesedllsarelocatedat<creo_
load_point>/Common Files/<platform>/obj and<creo_load_
point>/Common Files/<platform>/lib.
Forsynchronous applications, thereferences toucore46.dll and
udata46.dll areresolvedbyCreoParametric whentheapplication isstarted.
Forasynchronous applications, thesereferences mustberesolvedbythe
application. Forlinkingasynchronous applications, addthepathwherethedlls
ucore46.dll andudata46.dll arelocated,thatis<creo_load_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxForasynchronous applications, thesereferences mustberesolvedbythe
application. Forlinkingasynchronous applications, addthepathwherethedlls
ucore46.dll andudata46.dll arelocated,thatis<creo_load_
point>/Common Files/<platform>/lib totheenvironment variable
PATH.
AllthesamplemakefilesavailablewithCreoParametric TOOLKITusethenew
libraries.Forinstance,thesampleexample make_examples createdforCreo
Parametric TOOLKITapplications createdforCreoParametric TOOLKIT
CreoParametric TOOLKITLibraryTypes 2197applications containsinformation onhowtouseprotk_dll_NU.lib. The
samplefileislocatedat<creo_toolkit_loadpoint>/<platform>/
obj.
StandardLibraries
MostCreoParametric TOOLKITuserswillbeabletousethestandardCreo
Parametric TOOLKITlibraries.Theselibrariesareavailableonallplatformsand
areusedbythemajorityofCreoParametric TOOLKITsampleapplications.
LibraryName Purpose
protoolkit_NU.lib ucore.lib
udata.libSpawnmodelibrary
pt_asynchronous.lib Asynchronous modelibraryxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxareusedbythemajorityofCreoParametric TOOLKITsampleapplications.
LibraryName Purpose
protoolkit_NU.lib ucore.lib
udata.libSpawnmodelibrary
pt_asynchronous.lib Asynchronous modelibrary
protk_dll_NU.lib ucore.lib udata.lib DLLmodelibrary
AlternateLibraries
CreoParametric TOOLKIToffersalternatelibrariesthatmaybeusefulfor
applications compiledwith/MDflagandbuiltwithmsvcrt.lib. These
librariesaresimilartothestandardCreoParametric TOOLKITlibrariesin
content,butdifferinusing msvcrt.lib insteadoflibcmt.lib.
Library Name Purpose
protkmd_NU.lib Spawnmodelibrary
ptasyncmd.lib Asynchronous modelibrary
protk_dllmd_NU.lib DLLmodelibrary
Themakefiles make_install_md andmake_async_md buildwiththese
libraries.
Note
Although /MDprovidescompatibility withmulti-threaded components, Creo
Parametric TOOLKITcallsmustbemadewithinasinglethread.Creo
Parametric doesnotrespondtocallsmadefrommultiplethreads.Extrathreads
maybecreatedbyapplications onlytodotaskswhichdonotdirectlycallCreo
Parametric TOOLKITfunctions.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric doesnotrespondtocallsmadefrommultiplethreads.Extrathreads
maybecreatedbyapplications onlytodotaskswhichdonotdirectlycallCreo
Parametric TOOLKITfunctions.
2198 Creo®Parametric TOOLKIT User’sGuideG
CreoParametric TOOLKITSample
Applications
InstallingSampleApplications ................................................................................2200
DetailsonSampleApplications ..............................................................................2201
pt_inst_test...........................................................................................................2202
pt_inst_cxx...........................................................................................................2202
pt_inst_test_md. ....................................................................................................2202
pt_autoaxis...........................................................................................................2203xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpt_autoaxis...........................................................................................................2203
pt_userguide .........................................................................................................2203
pt_examples .........................................................................................................2203
pt_geardesign .......................................................................................................2203
pt_async...............................................................................................................2204
pt_async_md ........................................................................................................2204
pt_simple_async ...................................................................................................2205
pt_basic................................................................................................................2205xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpt_basic................................................................................................................2205
pt_af_examples. ....................................................................................................2205
pt_udf_examples ...................................................................................................2205
pt_mech_examples ...............................................................................................2205
Thisappendixdescribesthesampleapplications providedwithCreoParametric
TOOLKIT.
2199InstallingSampleApplications
WhenyouinstallCreoParametric TOOLKITfromtheCreoParametric CD,Creo
Parametric TOOLKITisinstalledundertheloadpointofCreoParametric, thatis,
<creo_loadpoint>\<datecode>\Common Files\protoolkit\
protk_appls. InCreoParametric 6.0.0.0andlater,thesesampleapplications
aredigitallysigned.RefertotheFundamentals onpage22chapterformore
information onInstallation ofCreoParametric TOOLKIT.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprotk_appls. InCreoParametric 6.0.0.0andlater,thesesampleapplications
aredigitallysigned.RefertotheFundamentals onpage22chapterformore
information onInstallation ofCreoParametric TOOLKIT.
TheCreoParametric TOOLKITdirectorycontainsalltheheaders,libraries,
exampleapplications, anddocumentation specifictoCreoParametric TOOLKIT.
Thefollowingdiagramillustratestheapplications installedundertheprotk_
applsdirectoryafterinstallation.
2200 Creo®Parametric TOOLKIT User’sGuideDetailsonSampleApplications
Thesampleapplications providedwithCreoParametric TOOLKITareavailable
indirectories underthefollowingpath<creo_loadpoint>\<datecode>\
Common Files\protoolkit\protk_appls.
CreoParametric TOOLKITSampleApplications 2201pt_inst_test
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_install_testmake_install
Theapplication pt_inst_test isusedtochecktheCreoParametric
TOOLKITInstallation. ItverifiestheProMenubar andcustomuserinterface
dialogboxfunctions.
pt_inst_cxx
Location MakefilexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTheapplication pt_inst_test isusedtochecktheCreoParametric
TOOLKITInstallation. ItverifiestheProMenubar andcustomuserinterface
dialogboxfunctions.
pt_inst_cxx
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_install_cxxmake_install_cxx
Theapplication pt_inst_cxx isusedtochecktheC++versionoftheCreo
Parametric TOOLKITinstallation. ItverifiestheProMenubar andcustomuser
interfacedialogboxfunctionsthatusetheC++compilerandclasses.
pt_inst_test_md
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_install_testmake_install_md
Theapplication pt_inst_test_md providestheversionofthemakefilefor
WindowsplatformsthatusesMDlibraries.
MDlibrariesareintendedforbuildingaDLLforWindows.SomeMicrosoft
librariesmustbelinkedwiththeselibraries.Formoreinformation onMD
libraries,refertoAlternateLibrariesonpage2198.
2202 Creo®Parametric TOOLKIT User’sGuidept_autoaxis
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_autoaxismake_autoaxisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlibraries,refertoAlternateLibrariesonpage2198.
2202 Creo®Parametric TOOLKIT User’sGuidept_autoaxis
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_autoaxismake_autoaxis
Thesampleapplication pt_autoaxis automatically createsaxesonrevolved
surfacesiftheydon'talreadyexist.Itisintendedformanufacturing engineerswho
receiveamodelwithholeswhichwerenotmadewithstandardCreoParametric
holefeatures.Itcoversfunctionsforfeaturecreationandgeometryanalysis.
pt_userguide
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_userguidemake_userguide
Thesampleapplication pt_userguide consolidates examplesthataccessthe
UserInterface.
pt_examples
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_examplesmake_examples
Thesampleapplication pt_examples consistsofCreoParametric TOOLKIT
application examples. ItprovidesauserinterfacetoaccessmanyareasofCreo
Parametric TOOLKIT. Thisapplication coversCreoParametric TOOLKIT
functionsandmodules,including ProMenubar andProMenu basedUIxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplication examples. ItprovidesauserinterfacetoaccessmanyareasofCreo
Parametric TOOLKIT. Thisapplication coversCreoParametric TOOLKIT
functionsandmodules,including ProMenubar andProMenu basedUI
functions. Thedirectory pt_examples includessub-directories containing
usefulutilityfunctions.
pt_geardesign
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_geardesignmake_geardesign
Thesampleapplication pt_geardesign providestheuserinterfacetocreate
gearmodels.Thisapplication coversfeaturecreationusingelementtreesandthe
customuserinterfacedialogboxfunctions.
CreoParametric TOOLKITSampleApplications 2203pt_async
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_asyncmake_async
Thesampleapplication pt_async providesanexampleforthefull
asynchronous mode.
pt_async_md
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_asyncmake_async_md
Thesampleapplication pt_async_md providesanexampleforthe
asynchronous modecompilation ofaDLLusingMDlibrariesonWindows.ThexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxLocation Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_asyncmake_async_md
Thesampleapplication pt_async_md providesanexampleforthe
asynchronous modecompilation ofaDLLusingMDlibrariesonWindows.The
application requirestwobinaries,namely,pt_async_md.dll, andthewrapper
executable pt_async_md_wrapper.exe whichwillloadtheDLLand
invokeit.Theapplication isidenticaltopt_asyncin allotherrespects.Formore
information onMDlibraries,refertoAlternateLibrariesonpage2198.
2204 Creo®Parametric TOOLKIT User’sGuidept_simple_async
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_simple_asyncmake_simple_async
Thesampleexample pt_simple_async providesanexampleforthesimple
asynchronous mode.
pt_basic
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_basicmake_basic
Thesampleapplication pt_basic providestheCreoParametric TOOLKIT
application template.Itverifiestheuserinterface,notifications, andthe
application setup.
pt_af_examples
Location Makefile
<creo_toolkit_loadpoint>/protk_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxapplication template.Itverifiestheuserinterface,notifications, andthe
application setup.
pt_af_examples
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_af_examplesmake_af_examples
Thesampleapplication pt_af_examples providesproduction examplesusing
annotation featuresandannotations.
pt_udf_examples
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_udf_examplesmake_udf_examples
Thesampleapplication pt_udf_examples demonstrates production examples
usingUDFplacement capabilities. Theseincludeaflexibleuserinterfacefor
placingUDFlibrariesinteractively ,byreadingtheproperties oftheUDFlibrary
file.
pt_mech_examples
Location Makefile
<creo_toolkit_loadpoint>/protk_
appls/pt_mech_examplesmake_mech_examples
Thesampleapplication pt_mech_examples providesproduction examples
usingtheabilitytoassign,createandmodifyCreoSimulateitemproperties.
CreoParametric TOOLKITSampleApplications 2205H
AdvancedLicensingOptionsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusingtheabilitytoassign,createandmodifyCreoSimulateitemproperties.
CreoParametric TOOLKITSampleApplications 2205H
AdvancedLicensingOptions
AdvanceLicensingOptionsforCreoParametricTOOLKIT.......................................2207
Thischapterdescribesthelicensingrequirements foradvancedoptionsinCreo
Parametric TOOLKIT.
2206 Creo®Parametric TOOLKIT User’sGuideAdvanceLicensingOptionsforCreo
Parametric TOOLKIT
Tousesomeofthefunctionality inPro/TOOLKITyoumusthaveadvanced
development licenseoptions.
ForeachTOOLKITfunctionthatrequiresanadvancedlicense,theCreo
Parametric TOOLKITheaderfileentryincludesanotespecifying the
development licenserequirement. ThisnoteisalsovisibleintheAPIWizard
description pageforthefunction.Advanced licensesarerequiredinthefollowing
situations:
•Torunalockedapplication, CreoParametric requiresthebasicCreo
Parametric TOOLKITdevelopment optionandanyadvancedtoolkitoptions
requiredbyspecificfunctionscalledbytheapplication. Iftheapplicationxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Torunalockedapplication, CreoParametric requiresthebasicCreo
Parametric TOOLKITdevelopment optionandanyadvancedtoolkitoptions
requiredbyspecificfunctionscalledbytheapplication. Iftheapplication
containscallstosuchfunctions, CreoParametric checksoutthecorresponding
advancedlicenseoptionondemand.
•Tounlockanapplication, theunlockutilityrequiresthebasicCreoParametric
TOOLKITdevelopment optionandanyadvancedtoolkitoptionsrequiredby
specificfunctionscalledbytheapplication. Theutilitywillnotholdanyofthe
advancedoptions,asitdoesthebasicCreoParametric TOOLKIT
development option,afterunlockiscompleted.
•CreoParametric doesnotrequireanyoftheCreoParametric TOOLKIT
licensestorunaproperlyunlockedapplication.
Applications areassignedrequirements foradvancedoptionsbasedonwhetherthe
application iscodedtouseanyfunctionsrequiringtheadvancedoption.Itdoes
notmatterifanapplication doesnotusethefunctionrequiringlicensingduringa
particularinvocation oftheapplication. Thelicensingrequirements areresolvedxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnotmatterifanapplication doesnotusethefunctionrequiringlicensingduringa
particularinvocation oftheapplication. Thelicensingrequirements areresolved
themomenttheapplication isstartedbyorconnectstoCreoParametric, notatthe
firsttimeanadvancedfunctionisinvoked.
Formoreinformation onhowtounlockanapplication, refertothesection
Unlocking aCreoParametric TOOLKITApplication onpage44.
Advanced Licensing Options 2207I
Pro/DEVELOP toCreoParametric
TOOLKITFunctionMapping
TheRelationship BetweenCreoParametricTOOLKITandPro/DEVELOP. ................2209
CreoParametricTOOLKITOHandles:....................................................................2209
ConvertingfromPro/DEVELOP ..............................................................................2209
UsingPro/DEVELOP Applications withCreoParametricTOOLKIT...........................2209
TechniquesofConversionandMixing.....................................................................2210xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsingPro/DEVELOP Applications withCreoParametricTOOLKIT...........................2209
TechniquesofConversionandMixing.....................................................................2210
EquivalentPro/DEVELOP Functions.......................................................................2221
Thisappendixdescribeshowtoupdatelegacyapplications usingPro/DEVELOP
functionswithcurrentCreoParametric TOOLKITfunctions.
FromCreoParametric 2.0onward,thePro/Develop functionsareobsolete.The
Pro/Develop headerfilesandrelatedsupportfileswillnotbeshippedwithCreo
Parametric infuture.PTCrecommends thatyouupdateapplications thatusePro/
Developfunctionstouseequivalent CreoParametric TOOLKITfunctionsorCreo
ObjectTOOLKITC++methods.
2208 Creo®Parametric TOOLKIT User’sGuideTheRelationship BetweenCreo
Parametric TOOLKITandPro/DEVELOP
CreoParametric TOOLKITreplacesandcontainsPro/DEVELOP, the
customization toolkituntilRelease17ofPro/ENGINEER. CreoParametric
TOOLKITusesanObject-Oriented style.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKITandPro/DEVELOP
CreoParametric TOOLKITreplacesandcontainsPro/DEVELOP, the
customization toolkituntilRelease17ofPro/ENGINEER. CreoParametric
TOOLKITusesanObject-Oriented style.
CreoParametric TOOLKITOHandles:
CreoParametric TOOLKITOHandles areequivalent tothetypeProhandle
usedinPro/DEVELOP. YoucanconvertthehandlesbetweenCreoParametric
TOOLKITandPro/DEVELOP simplybycastingtotheappropriate type.Creo
Parametric TOOLKITprovidesdifferentOHandles fordifferentobjecttypes
wherePro/DEVELOP providedonlyasinglegenerichandle;thisprovidesfor
bettertype-checking duringcompilation. SeeConverting fromPro/DEVELOP on
page2209formoredetails.
Converting fromPro/DEVELOP
YoucanconvertfunctionsfromPro/DEVELOP toCreoParametric TOOLKIT,
andalsomixthetwostylesoffunctions.
UsingPro/DEVELOP Applications withCreo
Parametric TOOLKIT
CreoParametric TOOLKITreplacesPro/DEVELOP andprovidesmostofthe
functionality thatexistedinPro/DEVELOP. ExistingPro/DEVELOP applicationsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxUsingPro/DEVELOP Applications withCreo
Parametric TOOLKIT
CreoParametric TOOLKITreplacesPro/DEVELOP andprovidesmostofthe
functionality thatexistedinPro/DEVELOP. ExistingPro/DEVELOP applications
willnotbecomeobsoletehowever,forthefollowingreasons:
•CreoParametric TOOLKITinheritsfromPro/DEVELOP themechanisms by
whichtheapplication Ccodeisintegrated intoCreoParametric. These
mechanisms willcontinuetobeusedbyCreoParametric TOOLKITforthe
indefinitefuture.
•ThecompletelibraryofPro/DEVELOP functionsisinstalledautomatically
alongwiththelibraryofCreoParametric TOOLKITfunctions, andwillbe
installedinthiswayfromRelease2000ionwards.
Therefore, Pro/DEVELOP applications builtusingRelease17willcontinueto
workwithPro/ENGINEER Release18andlater,withouthavingtoberecompiled
andrelinked.UsingCreoParametric TOOLKIT,youcanrecompile andrelink
Pro/DEVELOP applications developed usingRelease17withouthavingtochange
thesourcecode.Theseapplications willcontinuetofunctionasbefore.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandrelinked.UsingCreoParametric TOOLKIT,youcanrecompile andrelink
Pro/DEVELOP applications developed usingRelease17withouthavingtochange
thesourcecode.Theseapplications willcontinuetofunctionasbefore.
However,youshouldplantoconvertyourapplications toCreoParametric
TOOLKITassoonaspossible,evenifyoudonotneedtouseanyofthenew
functionality providedbyCreoParametric TOOLKIT.Theconversion isdesirable
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2209becauseCreoParametric TOOLKITprovidesmoreconsistent andcomplete
functionality ,eveninareasalreadywell-covered byPro/DEVELOP. Inaddition,
PTCwillgivelowerprioritytorequestsforenhancements andmaintenance to
Pro/DEVELOP functionsthantorequestsforequivalent CreoParametric
TOOLKITfunctions, wheretheyexist.
Thankstothetechnology theyshare,youcanusefunctionsfrombothCreo
Parametric TOOLKITandPro/DEVELOP withinasingleapplication. Thismeans
that:
•YoucanconvertaPro/DEVELOP application touseCreoParametric
TOOLKITfunctionsgradually.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParametric TOOLKITandPro/DEVELOP withinasingleapplication. Thismeans
that:
•YoucanconvertaPro/DEVELOP application touseCreoParametric
TOOLKITfunctionsgradually.
•Pro/DEVELOP applications canusethenewfunctionality providedbyCreo
Parametric TOOLKITwithouttheimmediate needforacompleteconversion.
AfinalreasonforwantingtomixPro/DEVELOP andCreoParametric TOOLKIT
functionsisthatnotallofthePro/DEVELOP functionshavebeenreplacedby
equivalent CreoParametric TOOLKITfunctions.
TechniquesofConversion andMixing
Besidesadifferenceintheconventions theyuse,Pro/DEVELOP andCreo
Parametric TOOLKITreferenceitemsintheCreoParametric databaseindifferent
ways.Thefollowingsectionsdescribethetechnicalpointstoconsiderwhenyou
convertfromPro/DEVELOP toCreoParametric TOOLKIT,orwhenyoumix
bothtypesoffunctionsinasingleapplication.
Terminology
Ingeneral,theterminology usedbyCreoParametric TOOLKITisclosetothatof
Pro/DEVELOP. Thefollowingtableliststhemostimportanttermsthatdifferin
meaningbetweenthetwotoolkits.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTerminology
Ingeneral,theterminology usedbyCreoParametric TOOLKITisclosetothatof
Pro/DEVELOP. Thefollowingtableliststhemostimportanttermsthatdifferin
meaningbetweenthetwotoolkits.
CreoParametric TOOLKIT Pro/DEVELOP
Object N/A
Model Object
Solid(partorassembly) Model
Surface Faceorsurface
Component ofanassembly Member
Component path Memberidentifiertable(memb_id_tab)
Externaldata Genericapplication data
2210 Creo®Parametric TOOLKIT User’sGuideGeneralFunctionality
TofindthefunctionsinCreoParametric TOOLKITthatcoveraparticularareaof
functionality ,scantheappendixinthisuser’sguide,orusetheTopicaloptionin
theCreoParametric TOOLKITbrowser.Bewareofanydifferenceinterminology
fromPro/DEVELOP identifiedintheprevioussection.
IfyouwanttofindtheCreoParametric TOOLKITequivalent ofaparticularPro/
DEVELOP function,refertothetableEquivalent Pro/DEVELOP Functions on
page2221.ThetablemapseachPro/DEVELOP functiontotheclosestequivalent
CreoParametric TOOLKITfunction(orfunctions).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDEVELOP function,refertothetableEquivalent Pro/DEVELOP Functions on
page2221.ThetablemapseachPro/DEVELOP functiontotheclosestequivalent
CreoParametric TOOLKITfunction(orfunctions).
Insomefunctional areas,especially wherePro/DEVELOP providedgood
coverage,youcanusetheequivalent CreoParametric TOOLKITfunctionsinan
identicalway,althoughthefunctionnames,returnvalues,andsometimes the
orderoftheargumentshavebeenchangedtoconformtoCreoParametric
TOOLKITconventions.
Forexample,thefollowingPro/DEVELOP functionsarealmostexactly
equivalent totheCreoParametric TOOLKITfunctionslisted.
Pro/DEVELOP Function CreoParametric TOOLKITFunction
promenu_create() ProMenuFileRegister()
promenu_expand() ProMenuAuxfileRegister()
promenu_on_button() ProMenubuttonActionSet()
Otherfunctionsrequiremorecare,however.Forexample,oneoftheconventions
ofCreoParametric TOOLKITisthattheinputargumentscomebeforetheoutput
arguments.
Insomeareasoffunctionality ,traditional Pro/DEVELOP techniques havebeenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofCreoParametric TOOLKITisthattheinputargumentscomebeforetheoutput
arguments.
Insomeareasoffunctionality ,traditional Pro/DEVELOP techniques havebeen
replacedinCreoParametric TOOLKITbytechniques thataremoregeneral,
flexible,andconsistent withthetechniques usedwithinCreoParametric. Agood
exampleisthevisitfunctions, whichreplacetwodifferentPro/DEVELOP
techniques. Forexample:
Pro/DEVELOP Function CreoParametric TOOLKITEquivalent
prodb_get_feature_ids() ProSolidFeatVisit()
prodb_first_part_face(), prodb_next_
part_face()ProSolidBodySurfaceVisit()
ItispossibletousetheCreoParametric TOOLKITvisitfunctionstocreatea
utilitythatfollowsoneofthePro/DEVELOP styles.Anexampleisshowninthe
sectionExpandable Arraysonpage59.
SomeareasofCreoParametric TOOLKITfunctionality revealamoregeneral,
andmoreconsistent, viewofthecontentsoftheCreoParametric databasethan
thatfamiliartousersofPro/DEVELOP, andthereforerequireaslightlydeeper
understanding. Forexample,CreoParametric TOOLKITdoesnotcontainexactxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthatfamiliartousersofPro/DEVELOP, andthereforerequireaslightlydeeper
understanding. Forexample,CreoParametric TOOLKITdoesnotcontainexact
equivalents ofthefollowingPro/DEVELOP functionsfortraversing the
components ofanassembly:
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2211•prodb_first_member()
•prodb_next_member()
Assembly components (called“members” inPro/DEVELOP) arerepresented as
featuresintheCreoParametric database,sothesetwofunctionscanbereplaced
byacalltoProSolidFeatVisit(), using ProFeatureTypeGet() to
identifythefeaturesoftypePRO_FEAT_COMPONENT. Thefeatureidentifierfor
anassemblycomponent isidenticaltothememberidentifierusedinPro/
DEVELOP.
Inthesameway,thefollowingPro/DEVELOP functionsthatfinddatumplanes
anddatumcurvesarealsoreplacedbymoregenericfunctionsinCreoParametric
TOOLKIT:
•prodb_first_datum()
•prodb_next_datum()
•prodb_get_datum_curves()
Here,too,thefirststepistotraversethefeaturesusing
ProSolidFeatVisit(). Youcanthentraverseallthegeometrical itemsinaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKIT:
•prodb_first_datum()
•prodb_next_datum()
•prodb_get_datum_curves()
Here,too,thefirststepistotraversethefeaturesusing
ProSolidFeatVisit(). Youcanthentraverseallthegeometrical itemsina
featureusing ProFeatureGeomitemVisit(). Datumplanesaregeometry
itemsoftypePRO_SURFACE, infeaturesoftypePRO_FEAT_DATUM; datum
curvesaregeometryitemsoftypePRO_CURVE, whichcanoccurinfeaturesof
manytypes.
ThismanualalwaysexplainsthestructureoftheCreoParametric database
wherevernecessary,withoutassuminganypriorknowledge ofthePro/DEVELOP
viewpoint. Asshowninthepreviousexamples, ifyouareconverting aPro/
DEVELOP application thattraversesCreoParametric geometry,youshouldpay
particularattentiontotheCore:3DGeometry onpage168appendix.
YoucanuseCreoParametric TOOLKITfunctionstocreateutilitiesforthe
specificcasesyouneed.Manysuchutilitiesareprovidedinthesamplecode
locatedundertheCreoParametric TOOLKITloadpoint.
Finally,CreoParametric TOOLKITcoverswholenewareasoffunctionality thatxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxspecificcasesyouneed.Manysuchutilitiesareprovidedinthesamplecode
locatedundertheCreoParametric TOOLKITloadpoint.
Finally,CreoParametric TOOLKITcoverswholenewareasoffunctionality that
werenotsupported atallbyPro/DEVELOP, suchasthedirectprogrammatic
creationoffeatures,includingsimplekindsofsketchedfeatures,datumplanes,
andmanufacturing features.SomePro/DEVELOP applications, especially those
thatcreatefeaturesusinguser-definedfeatures(UDFs),andwhichcustomize
Manufacturing, maythereforebenefitfromacompleteredesigntotakefull
advantage ofCreoParametric TOOLKIT.
RegistryFiles
TheCreoParametric TOOLKITregistryfilehasthesameformatasthePro/
DEVELOP registryfile.ThesearchpathusedbyCreoParametric TOOLKITto
findtheregistryfileislikethatusedbyPro/DEVELOP. However,thefilename
prodev.dat isnowreplacedbycreotk.dat orprotk.dat, andthe
2212 Creo®Parametric TOOLKIT User’sGuideconfiguration fileoption prodevdat isnoweither creotkdat, or
protkdat, ortoolkit_registry_file. ToconvertfromPro/DEVELOPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2212 Creo®Parametric TOOLKIT User’sGuideconfiguration fileoption prodevdat isnoweither creotkdat, or
protkdat, ortoolkit_registry_file. ToconvertfromPro/DEVELOP
toCreoParametric TOOLKIT,simplysubstitutethesenames.
Foranextendedperiod,thesearchpathforthePro/DEVELOP registryfilewill
continuetobeusedbyCreoParametric, inadditiontothesearchpathforCreo
Parametric TOOLKIT. Therefore, youdonotneedtorenamethePro/DEVELOP
registryfileorconfiguration fileoptionimmediately .
MenuandMessageFiles
AlthoughthePro/DEVELOP functionsforaccessingmenusandmessageshave
beenreplacedbycloseequivalents inCreoParametric TOOLKIT,themenuand
messagefilesthemselves retainexactlythesameformandfunction.No
conversion isnecessary.
UnlockingYourApplication
TheCreoParametric TOOLKITscriptforunlocking afinishedapplication is
named protk_unlock, butisotherwiseidenticaltoprodev_unlock.
Application ProgramStructure
AllthePro/DEVELOP runmodesareavailableinidenticalforminCreoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnamed protk_unlock, butisotherwiseidenticaltoprodev_unlock.
Application ProgramStructure
AllthePro/DEVELOP runmodesareavailableinidenticalforminCreo
Parametric TOOLKIT, andthestructureofaCreoParametric TOOLKIT
application isthesameasthatofaPro/DEVELOP application. Someofthecore
functionshavebeengivennewCreoParametric TOOLKIT-style namesforthe
sakeofconsistency ,butareotherwisethesame.Thefunctions user_
initialize() anduser_terminate() remainidenticalinnameand
purpose.
HandlesandDataTypes
AlthoughCreoParametric TOOLKITismorerigorousthanPro/DEVELOP inthe
wayitreferences objectsintheCreoParametric database,therearesomeclose
correspondences thatsimplifythetaskofmixingPro/DEVELOP andCreo
Parametric TOOLKITfunctions.
Asageneralrule,databaseitemsreferredtoinPro/DEVELOP bythetype
Prohandle, andreferredtoasOHandles (opaquehandles)inCreoParametric
TOOLKIT, arepointerstothesameCreoParametric datastructures. Youcan
directlyconvertthembycasting.Thefollowingtableliststhemostimportant
examples.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTOOLKIT, arepointerstothesameCreoParametric datastructures. Youcan
directlyconvertthembycasting.Thefollowingtableliststhemostimportant
examples.
Pro/DEVELOP ProhandlefortheitemtypeCanbecastdirectlytotheCreoParametric
TOOLKITobject
Object ProMdl
Assembly ProAssembly
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2213Pro/DEVELOP ProhandlefortheitemtypeCanbecastdirectlytotheCreoParametric
TOOLKITobject
Part ProPart
Model(partorassembly) ProSolid
Surface ProSurface
Contour ProContour
Edge ProEdge
Curve ProCurve
Datumquilt ProQuilt
Point ProPoint
Axis ProAxis
Coordinate system ProCsys
FordatabaseitemsthatcanbeidentifiedinPro/DEVELOP byaninteger
identifier,thatidentifieristhesameonegeneratedbyCreoParametric TOOLKIT
functionssuchasProSurfaceIdGet() andProEdgeIdGet(), andisthe
sameonerequiredasinputtofunctionssuchasProSurfaceInit(). Itisalso
thevalueoftheidfieldwhenoneoftheseobjectsisrepresented asa
ProGeomitem.
Converting aPro/DEVELOP integeridentifiertoaCreoParametric TOOLKITxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthevalueoftheidfieldwhenoneoftheseobjectsisrepresented asa
ProGeomitem.
Converting aPro/DEVELOP integeridentifiertoaCreoParametric TOOLKIT
OHandlecanbedoneintwoways:
•ConverttoaProhandle withinPro/DEVELOP using pro_element_
info(),thencasttheresultingpointer.
•Usetheidentifierdirectlyastheinputtotheappropriate Pro*Init()
function.
Thefollowingdiagramsshowthepossibleconversion pathsbetweenPro/
DEVELOP andCreoParametric TOOLKITfordatabaseitems.
ThefirstdiagramappliestoobjectsoftypeSurface,Edge,Axis,Csys,Curve,
Point,andQuilt.Ineachcase,replacetheasterisk(*)withtheappropriate name.
2214 Creo®Parametric TOOLKIT User’sGuidePro/DEVELOP DatabaseItemConversion Path
TheexceptiontothepreviousdiagramisthatthePro/DEVELOP function pro_
element_info() isnotsupported forcoordinate systemdatums.
AcontourdoesnothaveanintegeridentifierineitherPro/DEVELOP orCreo
Parametric TOOLKIT, butyoucanconvertthePro/DEVELOP Prohandle to
ProContour andbackbycasting.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAcontourdoesnothaveanintegeridentifierineitherPro/DEVELOP orCreo
Parametric TOOLKIT, butyoucanconvertthePro/DEVELOP Prohandle to
ProContour andbackbycasting.
AviewdoesnothaveanintegeridentifierinCreoParametric TOOLKIT,butyou
canconvertthePro/DEVELOP Prohandle toProView bycasting.
Avertexisrepresented inPro/DEVELOP asanedge(oracurve)andavaluefor
theparameter tofeither0or1.CreoParametric TOOLKITusesthistechniquein
theProSelection object,butforfunctioninputsandinProGeomitem it
usesthespecifictypes PRO_EDGE_START andPRO_EDGE_END (andPRO_
CRV_START andPRO_CRV_END fordatumcurveends).Because PRO_EDGE_
STARTandPRO_CRV_START alwaysrefertotheendwheret=0,conversion is
easy.
Afeatureisrepresented inCreoParametric TOOLKITbyProFeature, which
isaDHandle,andthereforenotequivalent toaPro/DEVELOP Prohandle. The
integeridentifierstillmapsdirectly,however.
Thefollowingdiagramappliestoconverting features.
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2215FeatureConversionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxintegeridentifierstillmapsdirectly,however.
Thefollowingdiagramappliestoconverting features.
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2215FeatureConversion
ThefollowingobjectsareDHandles, whichareidenticalinformto
ProModelitem andwereidentifiedonlybyanintegeridentifierinPro/
DEVELOP. TheyalsoinheritfromProModelitem, whichmeansthat,forexample,
ProSelectionModelitemGet() canbeusedtounpackthemfroma
ProSelection objectaftercalling ProSelect(). Ineachcase,theidfieldin
theobjecthandlecorresponds totheintegeridusedtoidentifytheseobjectsin
Pro/DEVELOP.
•ProDimension
•ProGtol
•ProDtlnote
•ProDtlentity
•ProDtlsyminst
•ProDtlsymdef
•ProDtlgroup
•ProDgmitem
•ProNote
2216 Creo®Parametric TOOLKIT User’sGuideNote
Theobjects ProDtlnote andProNote refertodetail(drawing) notes,and
notesrespectively .Theysharethesamevalueofthetypefield-PRO_NOTE -
buttheyaredistinguished bythetypeoftheirowningmodel.
ThefollowingdiagramappliestoCreoParametric TOOLKITobjects ProSolid,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnotesrespectively .Theysharethesamevalueofthetypefield-PRO_NOTE -
buttheyaredistinguished bythetypeoftheirowningmodel.
ThefollowingdiagramappliestoCreoParametric TOOLKITobjects ProSolid,
ProPart, andProAssembly whenyoumaptoPro/DEVELOP partsand
assemblies. ForobjectsoftypeProMdlthatarenotpartsorassemblies, the
integeridentifiers arenotapplicable, buttherestofthediagramiscorrect.
Pro/DEVELOP PartandAssemblyMapping
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2217ManyexplicitdatatypesfromPro/DEVELOP havebeencarriedacrossintoCreo
Parametric TOOLKITdirectly,and,althoughtheygenerallyhavebeengivennew
names,theyaredirectlycompatible. Infact,theremaining Pro/DEVELOP include
filesnowreferencethenewdefinitions intheCreoParametric TOOLKITinclude
files.
Enumerated typeshavealsobeengivennewnamesfortheirvalues,andinsome
caseswherePro/DEVELOP used#defined valuesofaninteger,Creo
Parametric TOOLKITprovidesanenum.However,theintegermappingofthexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfiles.
Enumerated typeshavealsobeengivennewnamesfortheirvalues,andinsome
caseswherePro/DEVELOP used#defined valuesofaninteger,Creo
Parametric TOOLKITprovidesanenum.However,theintegermappingofthe
valuesisretainedineverycase.SomeexamplesofPro/DEVELOP datatypesnow
definedinCreoParametric TOOLKITareshowninthefollowingtable.
Pro/DEVELOP CreoParametric TOOLKIT
Ptc_surf ProSurfacedata
Ptc_curve ProCurvedata
Pro_linestyle ProLinestyle
pro_mode ProMode
Pro_text_attributes ProTextAttribute
int ProMousebutton
int ProDrawMode
int ProColortype
Forsomeitemsthathaverepresentations inbothCreoParametric TOOLKITand
Pro/DEVELOP, thedatastructuresarenotthesame,andnodirectconversion is
possible.However,youcanalwaysconvertbyreducingsuchstructurestotheir
component dataitems.Forexample,toconvertthePro/DEVELOP representation
ofaparameter,Pro_parameter_info, totheCreoParametric TOOLKIT
ProParameter object,youcanusefunctionssuchas
ProParameterInit() andProParameterValueWithUnitsSet(),xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofaparameter,Pro_parameter_info, totheCreoParametric TOOLKIT
ProParameter object,youcanusefunctionssuchas
ProParameterInit() andProParameterValueWithUnitsSet(),
usingthefieldsinthePro/DEVELOP structureasinputs.(Inthiscase,itwould
probablybebettertomakeacompleteconversion totheCreoParametric
TOOLKITfunctions, andthusavoidmixingthesetypesinanapplication.)
AmorecomplexexampleofthisisthePro/DEVELOP Select3d structure,
whoseCreoParametric TOOLKITcounterpart isProSelection. The
followingtableexplainsthemappingbyshowingthefieldsofSelect3d
alongsidetheCreoParametric TOOLKITfunctionsthatextracttheequivalent
information fromProSelection.
Select3dField CreoParametric TOOLKITReadAccess
sel_type ProSelectionModelitemGet(), thenread
modelitem.type. Seethenotethatfollowsthistable.
selected_id ProSelectionModelitemGet(), thenread
modelitem.id.
selected_ptr ProSelectionModelitemGet(), thenPro*Init(),
depending onthetype.
select_pnt ProSelectionPoint3dGet().
sel_param ProSelectionUvParamGet().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmodelitem.id.
selected_ptr ProSelectionModelitemGet(), thenPro*Init(),
depending onthetype.
select_pnt ProSelectionPoint3dGet().
sel_param ProSelectionUvParamGet().
sel_depth ProSelectionDepthGet().
2218 Creo®Parametric TOOLKIT User’sGuideSelect3dField CreoParametric TOOLKITReadAccess
part_ptr ProSelectionAsmcomppathGet(), and
ProAsmcomppathMdlGet().
assembly_ptr ProSelectionAsmcomppathGet(), thenread
comppath.owner.
memb_num ProSelectionAsmcomppathGet(), thenread
comppath.table_num.
memb_id_tab ProSelectionAsmcomppathGet(), thenread
comppath.comp_id_tab.
view_ptr ProSelectionViewGet().
Note
ThevaluesoftheSelect3d fieldsel_type donotmapdirectlytovalues
ofProType, usedinProModelitem. Donotconvertthesetypesbydirect
assignment. Seethenexttableforthemapping.
ThistablealsomakesclearwhatdatafromPro/DEVELOP youneedtobuilda
ProSelection objectinCreoParametric TOOLKIT,usingthefunctions
ProSelectionAlloc(), ProSelectionSet(),
ProSelectionUvParamSet(), andProSelectionVerify().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSelection objectinCreoParametric TOOLKIT,usingthefunctions
ProSelectionAlloc(), ProSelectionSet(),
ProSelectionUvParamSet(), andProSelectionVerify().
TherewasananomalyinselectingdatumpointsinPro/DEVELOP thathasbeen
correctedinCreoParametric TOOLKIT.Theselected_id istheidentifierof
thefeature,andthedatumpointidentifierisgivenbythefieldsel_elem_id.
However,thisdoesnotcarryoverintoCreoParametric TOOLKIT—the
ProModelitem identifieristheidentifierofthedatumpoint.(Togetthe
feature,usethefunction ProGeomitemFeatureGet().)
Thefollowingtableshowshowthevaluesofthesel_type fieldinSelect3d
(andthecorresponding pro_select() optionstrings)maptovaluesof
ProType usedinCreoParametric TOOLKITforProModelitem and
ProGeomitem objectsusedinCreoParametric TOOLKITasobjecthandlesthat
inheritfromProModelitem, suchasProGeomitem, ProDimension,
ProGtol, ProDtlnote, andsoforth.
pro_select() option Select3dsel_type ProType
point SEL_3D_PNT PRO_POINT
axis SEL_3D_AXIS PRO_AXIS
datum SEL_3D_SRF PRO_SURFACExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGtol, ProDtlnote, andsoforth.
pro_select() option Select3dsel_type ProType
point SEL_3D_PNT PRO_POINT
axis SEL_3D_AXIS PRO_AXIS
datum SEL_3D_SRF PRO_SURFACE
csys SEL_3D_CSYS PRO_CSYS
feature SEL_3D_FEAT PRO_FEATURE
edge SEL_3D_EDG PRO_EDGE
edge_end SEL_3D_VERT PRO_EDGE_START orPRO_
EDGE_END
curve SEL_3D_CURVE PRO_CURVE
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2219pro_select() option Select3dsel_type ProType
curve_end SEL_CURVE_END PRO_CRV_START orPRO_CRV_
END
sldedge SEL_3D_EDGE PRO_EDGE
qltedge SEL_3D_EDGE PRO_EDGE
surface SEL_3D_SRF PRO_SURFACE
sldface SEL_3D_SRF PRO_SURFACE
qltface SEL_3D_SRF PRO_SURFACE
dtmqlt SEL_3D_SRF_LIST PRO_QUILT
part SEL_3D_PART PRO_PART
prt_or_asm SEL_3D_PART PRO_PART orPRO_ASSEMBLY
dimension DTL_DIM PRO_DIMENSION
ref_dim DTL_REFDIM PRO_REF_DIMENSION
gtol DTL_GTOL PRO_GTOL
dtl_symbol DTL_SYMBOL PRO_SYMBOL_INSTANCE
dwg_table SEL_DWG_TABLE PRO_DRAW_TABL
any_note DTL_USER_NOTE PRO_NOTE
note_3d SEL_3D_NOTE PRO_NOTExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxref_dim DTL_REFDIM PRO_REF_DIMENSION
gtol DTL_GTOL PRO_GTOL
dtl_symbol DTL_SYMBOL PRO_SYMBOL_INSTANCE
dwg_table SEL_DWG_TABLE PRO_DRAW_TABL
any_note DTL_USER_NOTE PRO_NOTE
note_3d SEL_3D_NOTE PRO_NOTE
dgm_obj SEL_DGM_REF_OBJ PRO_DIAGRAM_OBJECT
dgm_non_cable_wire DTL_WIRE PRO_DIAGRAM_WIRE
draft_ent DTL_DRAFT_ENT PRO_DRAFT_ENTITY
ext_obj SEL_3D_EXT_OBJ PRO_EXTOBJ
table_cell SEL_TABLE_CELL PRO_DRAW_TABLE_CELL
Tominimizetheneedtoconvertbetween Select3d andProSelection,
followtheseguidelines:
•IfyouneedaSelect3d asaninputtoaPro/DEVELOP function,andthe
elementreferredtoistobeselectedinteractively ,useoneofthePro/
DEVELOP selectfunctionslistedbelowinsteadofProSelect() untilyou
canconvertthewholeapplication.
○pro_select()
○pro_get_selection()
○pro_set_and_get_selection()
•IfyouneedtouseaPro/DEVELOP functionwhoseoutputis,orcontains,a
Select3d, trytoprocesstheoutputusingPro/DEVELOP functionsinstead
ofconverting toaProSelection objectwherepossible.Forexample,usexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•IfyouneedtouseaPro/DEVELOP functionwhoseoutputis,orcontains,a
Select3d, trytoprocesstheoutputusingPro/DEVELOP functionsinstead
ofconverting toaProSelection objectwherepossible.Forexample,use
pro_show_select() insteadofProSelectionHighlight().
Tohelpyoumaintainsuchmixtures,theonlinebrowserretainsthedescription of
thePro/DEVELOP selectionfunctionsandSelect3d thatare,strictlyspeaking,
superseded byCreoParametric TOOLKIT.
However,PTCrecommends thatyouretainyourdocumentation forPro/
DEVELOP tousewithCreoParametric TOOLKIT.
2220 Creo®Parametric TOOLKIT User’sGuideEquivalentPro/DEVELOP Functions
Thefollowingtableliststhefunctionsthathaveequivalents inCreoParametric
TOOLKIT. IfthePro/DEVELOP functionisnotincludedinthislist,thefunction
retainsthePro/DEVELOP styleinCreoParametric TOOLKIT. Foreaseofuse,
thePro/DEVELOP functionsarepresentedbyfunctional group.
Pro/DEVELOP Function EquivalentCreoParametric TOOLKITFunction
CoreFunctions
Synchronous Mode
pro_term() ProEngineerEnd()
Asynchronous ModexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxthePro/DEVELOP functionsarepresentedbyfunctional group.
Pro/DEVELOP Function EquivalentCreoParametric TOOLKITFunction
CoreFunctions
Synchronous Mode
pro_term() ProEngineerEnd()
Asynchronous Mode
prodev_start_proengineer() ProEngineerStart()
prodev_set_interrupt_func() Notsupported inCreoParametric TOOLKIT.Itcanbesafely
removedfromapplications whichcallit.Forinformation on
howtostructureafullasynchronous modeapplication to
acceptCreoParametric events,refertothechapterCore:
Asynchronous Modeonpage273.
prodev_handle_interrupt() ProEventProcess()
prodev_set_proe_term_func() ProTermFuncSet()
user_proe_term_func() ProTerminationAction()
prodev_get_proe_status() ProEngineerStatusGet()
User-Supplied Main
prodev_main() ProToolkitMain()
Menus
AddingaMenuButton
promenu_create() ProMenuFileRegister()
promenu_expand() ProMenuAuxfileRegister()
promenu_on_button() ProMenubuttonActionSet()
promenu_load_action() ProMenubuttonGenactionSet()
NewMenus
promenu_action() ProMenuProcess()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpromenu_expand() ProMenuAuxfileRegister()
promenu_on_button() ProMenubuttonActionSet()
promenu_load_action() ProMenubuttonGenactionSet()
NewMenus
promenu_action() ProMenuProcess()
promenu_exit_up() ProMenuDelete()
promenu_make() ProMenuCreate()
promenu_no_exit() ProMenuHold()
promenu_exit_action_up() ProMenuDeleteWithStatus()
promenu_make_compound() ProCompoundmenuCreate()
Preempting CreoParametric Commands
promenu_load_pre_func() ProMenubuttonPreactionSet()
promenu_load_post_func() ProMenubuttonPostactionSet()
Manipulating Menus
promenu_set_item_location() ProMenubuttonLocationSet()
promenu_set_item_visible() PropMenubuttonVisibilitySet()
promenu_remove_item() ProMenubuttonDelete()
DataMenus
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2221promenu_set_mode() ProMenuModeSet()
promenu_set_data_mode() ProMenuDatamodeSet()
SettingMenuButtons
promenu_set_item() ProMenubuttonHighlight()
promenu_reset_item() ProMenubuttonUnhighlight()
Controlling Accessibility ofMenuButtonsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpromenu_set_data_mode() ProMenuDatamodeSet()
SettingMenuButtons
promenu_set_item() ProMenubuttonHighlight()
promenu_reset_item() ProMenubuttonUnhighlight()
Controlling Accessibility ofMenuButtons
promenu_make_item_
accessible()ProMenubuttonActivate()
promenu_make_item_
inaccessible()ProMenubuttonDeactivate()
PushingandPoppingMenus
promenu_is_up() ProMenuVisibilityGet()
promenu_push() ProMenuPush()
promenu_pop() ProMenuPop()
Run-TimeMenus
pro_select_strings() ProMenuStringsSelect()
EnteringCreoParametric Commands
proload_cmd_sequence() ProMacroLoad()
promenu_push_command() ProMenuCommandPush()
MessageWindow
WritingaMessage
promsg_print() ProMessageDisplay()
promsg_clear() ProMessageClear()
WritingaMessagetoanInternalBuffer
promsg_sprint() ProMessageToBuffer()
GettingKeyboard Input
promsg_getint() ProMessageIntegerRead()
promsg_getdouble() ProMessageDoubleRead()
promsg_getstring() ProMessageStringRead()
promsg_getpasswd() ProMessagePasswordRead()
GraphicsandObjectDisplayxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpromsg_getint() ProMessageIntegerRead()
promsg_getdouble() ProMessageDoubleRead()
promsg_getstring() ProMessageStringRead()
promsg_getpasswd() ProMessagePasswordRead()
GraphicsandObjectDisplay
Manipulating Windows
pro_clear_window() ProWindowClear()
pro_view_repaint() ProWindowRepaint()
pro_refresh_window() ProWindowRefresh()
pro_get_current_window() ProWindowCurrentGet()
pro_set_current_window() ProWindowCurrentSet()
pro_open_object_window() ProObjectwindowMdlnameCreate()
pro_close_object_window() ProWindowDelete()
ModelOrientation
pro_get_cur_window_matrix() ProWindowCurrentMatrixGet()
pro_get_view_matrix() ProViewMatrixGet()
pro_set_view_matrix() ProViewMatrixSet()
pro_reset_view() ProViewReset()
2222 Creo®Parametric TOOLKIT User’sGuidepro_rotate_view() ProViewRotate()
pro_store_view() ProViewStore()
pro_retrieve_view() ProViewRetrieve()
pro_get_view_names() ProViewNamesGet()
Displaying CreoParametric Objects
progr_display_object() ProSolidDisplay()(for partsandassemblies)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpro_retrieve_view() ProViewRetrieve()
pro_get_view_names() ProViewNamesGet()
Displaying CreoParametric Objects
progr_display_object() ProSolidDisplay()(for partsandassemblies)
ProMdlDisplay()
pro_show_select() ProSelectionHighlight()
ProSelectionDisplay()
ProSelectionUnhighlight()
GraphicsColorsandLineStyles
progr_text_color() ProTextColorSet()
progr_color() ProGraphicsColorSet()
progr_get_color_map() ProColormapGet()
progr_set_color_map() ProColormapSet()
progr_set_line_style() ProLinestyleSet()
progr_get_line_style_def() ProLinestyleDataGet()
Displaying Graphics
progr_move_3d() ProGraphicsPenPosition()
progr_draw_3d() ProGraphicsLineDraw()
progr_put_polyline() ProGraphicsPolylineDraw()
progr_put_multi_polylines() ProGraphicsMultiPolylinesDraw()
progr_put_arc() ProGraphicsArcDraw()
progr_put_circle() ProGraphicsCircleDraw()
progr_draw_polygon_2d() ProGraphicsPolygonDraw()
Displaying Text
progr_put_text() ProGraphicsTextDisplay()
pro_get_text_attributes() ProCurrentTextAttributesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprogr_draw_polygon_2d() ProGraphicsPolygonDraw()
Displaying Text
progr_put_text() ProGraphicsTextDisplay()
pro_get_text_attributes() ProCurrentTextAttributesGet()
pro_set_text_attributes() ProCurrentTextAttributesSet()
progr_get_default_font_id() ProTextfontDefaultIdGet()
progr_get_font_id() ProTextfontIdGet()
progr_get_font_name() ProTextFontNameGet()
GettingMouseInput
promenu_get_pick() ProMousePickGet()
pro_sample_xy() ProMouseTrack()
progr_set_draw_mode() ProGraphicsModeSet()
pro_getbox() ProMouseBoxInput()
DisplayLists
pro_create_2d_disp_list() ProDisplist2dCreate()
pro_display_2d_disp_list() ProDisplist2dDisplay()
pro_delete_2d_disp_list() ProDisplist2dDelete()
pro_create_3d_disp_list() ProDisplist3dCreate()
pro_display_3d_disp_list() ProDisplist3dDisplay()
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2223pro_delete_3d_disp_list() ProDisplist3dDelete()
Layers
prolayer_get_names() ProMdlLayerNamesGet()
prolayer_add_item() ProLayerItemAdd()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2223pro_delete_3d_disp_list() ProDisplist3dDelete()
Layers
prolayer_get_names() ProMdlLayerNamesGet()
prolayer_add_item() ProLayerItemAdd()
prolayer_remove_item() ProLayerItemRemove()
prolayer_display() ProLayerDisplaystatusSet()
prolayer_get_display() ProLayerDisplaystatusGet()
prolayer_create_layer() ProLayerCreate()
prolayer_delete_layer() ProLayerDelete()
prolayer_get_items() ProLayerItemsGet()
DatabaseSupport
SessionObjects
pro_get_current_object() ProMdlCurrentGet()
pro_get_current_mode() ProModeCurrentGet()
prodb_find_declared_objects() ProMdlDeclaredDataList()
prodb_find_nobject_depend() ProMdlDependenciesDataList()
prodb_get_object_info() ProMdlMdlnameGet()
ProMdlOriginGet()
ProMdlExtensionGet()
ProMdlDirectoryPathGet()
prodb_get_object_ptr() ProMdlInit()
prodb_first_name_in_list() ProSessionMdlList()
prodb_next_name_in_list() ProSessionMdlList()
prodb_was_object_modified() ProMdlModificationVerify()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprodb_get_object_ptr() ProMdlInit()
prodb_first_name_in_list() ProSessionMdlList()
prodb_next_name_in_list() ProSessionMdlList()
prodb_was_object_modified() ProMdlModificationVerify()
pro_solid_id_from_ptr() ProSolidToPostfixId()
pro_solid_ptr_from_id() ProPostfixIdToSolid()
FileManagement Operations
prodb_create_object() ProSolidMdlnameCreate()
prodb_create_obj() ProSolidMdlnameCreate()
prodb_retrieve_object() ProMdlnameRetrieve()
prodb_save_object() ProMdlSave()
prodb_rename_object() ProMdlnameRename()
prodb_copy_object() ProMdlnameCopy()
prodb_erase_object() ProMdlErase()
prodb_backup_object() ProMdlnameBackup()
Simplified Representations
prodb_get_simplfd_rep_info() ProSimprepActiveGet()
prodb_get_simplfd_rep_list() ProSolidSimprepVisit()
prodb_retrieve_simplfd_rep() ProAssemblySimprepRetrieve()
SelectingObjects
pro_select() ProSelect()
pro_get_selection() ProSelect()
2224 Creo®Parametric TOOLKIT User’sGuidepro_set_and_get_selection() ProSelect()
TracingaRayThroughaModelxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSelectingObjects
pro_select() ProSelect()
pro_get_selection() ProSelect()
2224 Creo®Parametric TOOLKIT User’sGuidepro_set_and_get_selection() ProSelect()
TracingaRayThroughaModel
pro_ray_x_model() ProSolidRayIntersectionCompute()
ElementInformation
pro_element_info() PRO_IDENTIFY:Pro*IdGet(), Pro*Init()PRO_
BELONG_TO: ProGeomitemFeatureGet()
Regenerating Models
pro_regenerate() ProSolidRegenerate()
pro_regenerate_object() ProSolidRegenerate()
PartAccuracy
prodb_get_model_accuracy() ProSolidAccuracyGet()
prodb_set_model_accuracy() ProSolidAccuracySet()
MassProperties
prodb_mass_prop() ProSolidMassPropertyGet()
Utilities
pro_str_to_wstr() ProStringToWstring()
pro_wstr_to_str() ProWstringToString()
pro_wchar_t_check() ProWcharSizeVerify()
pro_show_file() ProInfoWindowDisplay()
pro_show_info_window() ProInfoWindowDisplay()
prodb_edit_file() ProFileEdit()
SessionTools
pro_get_prodevdat_info() ProToolkitApplExecPathGet()
pro_getenvironment() ProConfigoptGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpro_show_info_window() ProInfoWindowDisplay()
prodb_edit_file() ProFileEdit()
SessionTools
pro_get_prodevdat_info() ProToolkitApplExecPathGet()
pro_getenvironment() ProConfigoptGet()
pro_change_dir() ProDirectoryChange()
pro_get_current_directory() ProDirectoryCurrentGet()
pro_is_option_ordered() ProOptionOrderedVerify()
pro_get_config() ProConfigoptGet()
pro_set_config() ProConfigoptSet()
progr_invalidate_display_
list()ProDisplistInvalidate()
Exporting andImporting Files
pro_export_file_from_pro() ProOutputFileMdlnameWrite()
pro_export_plot_file() ProPlotfileWrite()
pro_read_file_to_pro() ProInputFileRead()
pro_export_fea_mesh() ProFemmeshExport()
MaterialNames
prodb_get_material_props() ProPartMaterialdataGet()
prodb_get_material_name() ProPartMaterialNameGet()
prodb_set_material_name() ProPartMaterialSet()
StoringGenericData
proappdata_register_class() ProExtdataClassRegister()
proappdata_create_data() ProExtdataSlotCreate()
proappdata_write_data() ProExtdataSlotWrite()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxStoringGenericData
proappdata_register_class() ProExtdataClassRegister()
proappdata_create_data() ProExtdataSlotCreate()
proappdata_write_data() ProExtdataSlotWrite()
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2225proappdata_read_data() ProExtdataSlotRead()
proappdata_delete_data() ProExtdataSlotDelete()
proappdata_list_classes() ProExtdataClassNamesList()
proappdata_list_data_in_
class()ProExtdataSlotIdsList()
Geometry
TraversingtheGeometry ofaPart
prodb_first_part_face() ProSolidBodySurfaceVisit()
prodb_next_part_face() ProSolidBodySurfaceVisit()
prodb_get_solid_surfaces() ProSolidBodySurfaceVisit()
prodb_first_face_contour() ProSurfaceContourVisit()
prodb_next_face_contour() ProSolidBodySurfaceVisit()
prodb_first_cntr_edge() ProContourEdgeVisit()
prodb_next_cntr_edge() ProContourEdgeVisit()
prodb_get_datum_curves() ProSolidFeatVisit(),
ProFeatureGeomitemVisit()
prodb_get_datum_surfaces() ProSolidQuiltVisit(),
ProQuiltSurfaceVisit()
prodb_edge_data() ProEdgeNeighborsGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprodb_get_datum_curves() ProSolidFeatVisit(),
ProFeatureGeomitemVisit()
prodb_get_datum_surfaces() ProSolidQuiltVisit(),
ProQuiltSurfaceVisit()
prodb_edge_data() ProEdgeNeighborsGet()
prodb_edge_direction() ProEdgeDirGet()
prodb_contour_traversal() ProContourTraversalGet()
prodb_containing_contour() ProContainingContourFind()
prodb_vertex_data() ProEdgeVertexdataGet()
prodb_get_solid_volumes() ProSldsurfaceVolumesFind()
Evaluating Geometry
prodb_edge_tessellation() ProEdgeTessellationGet()
pro_eval_xyz_edge() ProEdgeXyzdataEval()
pro_eval_xyz_entity() ProCurveXyzdataEval()
pro_eval_uv_edge() ProEdgeUvdataEval()
pro_eval_xyz_face() ProSurfaceXyzdataEval()
pro_get_edge_param() ProEdgeParamEval()
pro_get_entity_param() ProCurveParamEval()
pro_get_face_params() ProSurfaceParamEval()
prodb_uv_in_face_domain() ProSurfaceUvpntVerify()
pro_point_on_geom() ProGeometryAtPointFind()
prodb_get_edge_uv_points() ProEdgeTesselationGet()
prodb_get_surface_
tessellation()ProSurfaceTessellationGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpro_point_on_geom() ProGeometryAtPointFind()
prodb_get_edge_uv_points() ProEdgeTesselationGet()
prodb_get_surface_
tessellation()ProSurfaceTessellationGet()
Geometry Equations
prodb_get_curve_type() ProCurveTypeGet()
pro_get_curve_type_geom() ProCurvedataGet()
prodb_get_edge_type() ProEdgeTypeGet()
prodb_get_edge_curve() ProEdgedataGet()
prodb_rls_edge_curve() ProGeomitemdataFree()
prodb_get_face_type() ProSurfaceTypeGet()
2226 Creo®Parametric TOOLKIT User’sGuideprodb_get_surface() ProSurfacedataGet()
prodb_rls_surface() ProGeomitemdataFree()
prodb_surface_to_nurbs() ProSurfaceToNURBS()
prodb_edge_to_nurbs() ProEdgeToNURBS()
prodb_entity_to_nurbs() ProCurveToNURBS()
Measurement
pro_edge_length() ProEdgeLengthEval()
pro_face_area() ProSurfaceAreaEval()
prodb_measure() ProSurfaceDiameterEval(),
ProGeomitemAngleEval(),
ProGeomitemDistanceEval()
pro_face_extremes() ProSurfaceExtremesEval()
prodb_get_envelope() ProSolidOutlineGet()
prodb_compute_outline() ProSolidOutlineCompute()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGeomitemAngleEval(),
ProGeomitemDistanceEval()
pro_face_extremes() ProSurfaceExtremesEval()
prodb_get_envelope() ProSolidOutlineGet()
prodb_compute_outline() ProSolidOutlineCompute()
Parameters andDimensions
Parameters
prodb_get_parameters() ProParameterVisit() and
ProParameterValueWithUnitsGet()
prodb_set_parameters() ProParameterValueWithUnitsSet()
prodb_add_parameters() ProParameterCreate()
prodb_delete_parameters() ProParameterDelete()
prodb_reset_parameters() ProParameterValueReset()
prodb_designate_param() ProParameterDesignationAdd()
ProParameterDesignationVerify()
Dimensions
prodim_display_dimension ProAnnotationDisplay()
prodim_get_dim_text ProDimensionTextWstringsGet()
prodb_dim_is_visible ProDimensionIsAccessibleInModel()
prodim_get_dimension ProDimensionSymbolGet()
ProDimensionValueGet()
ProDimensionToleranceGet()
ProDimensionTypeGet()
ProDimensionIsFractional()
ProDimensionDecimalsGet()
ProDimensionDenominatorGet()
ProDimensionIsReldriven()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDimensionValueGet()
ProDimensionToleranceGet()
ProDimensionTypeGet()
ProDimensionIsFractional()
ProDimensionDecimalsGet()
ProDimensionDenominatorGet()
ProDimensionIsReldriven()
ProDimensionIsRegenednegative().
Features
ListingFeatures
prodb_get_feature_ids() ProSolidFeatVisit()
prodb_get_feat_parent_child() ProFeatureParentsGet()
prodb_get_feat_type() ProFeatureTypeGet()
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2227NamesofFeaturesandOtherElements
prodb_get_element_name() ProModelitemNameGet()
prodb_set_element_name() ProModelitemNameSet()
FeatureGeometry
prodb_get_feature_surfaces() ProFeatureGeomitemVisit()
prodb_get_surface_feature() ProGeomitemFeatureGet()
Manipulating Features
prodb_suppress_feature() ProFeatureSuppress()
prodb_resume_feature() ProFeatureResume()ProSolidFeatstatusSet()
prodb_delete_feature() ProFeatureDelete()
DatumPlanes
prodb_first_datum() ProSolidFeatVisit()
prodb_next_datum() ProSolidFeatVisit()
DatumPoints
prodb_get_feature_dtm_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprodb_delete_feature() ProFeatureDelete()
DatumPlanes
prodb_first_datum() ProSolidFeatVisit()
prodb_next_datum() ProSolidFeatVisit()
DatumPoints
prodb_get_feature_dtm_
points()ProSolidFeatVisit()
prodb_eval_xyz_dtm_point() ProPointCoordGet()
Axes
prodb_get_first_axis() ProSolidAxisVisit()
prodb_get_next_axis() ProSolidAxisVisit()
Coordinate Systems
prodb_find_csys() ProSolidCsysVisit(),
prodb_unpack_csys() ProCsysdataGet()
SurfaceQuilts
prodb_get_surface_quilt() ProSurfaceQuiltGet()
SurfaceQuilts
prodb_get_surface_quilt() ProSurfaceQuiltGet()
Assemblies
FindingAssembly Members
prodb_first_member() ProSolidFeatVisit()
prodb_next_member() ProSolidFeatVisit()
prodb_member_to_object() ProAsmcompMdlGet()
prodb_obj_from_assem_rel() ProPostfixIdToSolid()
LocationofAssembly Members
prodb_member_transform() ProAsmcomppathTrfGet()
pro_vectors_to_transf() ProMatrixInit()
prodb_get_asm_transform() ProAsmcomppathTrfGet()
prodb_set_member_transform() ProAsmcomppathTrfSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprodb_member_transform() ProAsmcomppathTrfGet()
pro_vectors_to_transf() ProMatrixInit()
prodb_get_asm_transform() ProAsmcomppathTrfGet()
prodb_set_member_transform() ProAsmcomppathTrfSet()
Assembling andDeletingMembers
prodb_assemble_by_transform() ProFeatureCreate()
prodb_assemble_component() ProFeatureCreate()
prodb_explode_assembly() ProAssemblyExplode()
prodb_get_asm_constraints() ProFeatureElemtreeCreate()
prodb_is_asm_exploded() ProAssemblyIsExploded()
2228 Creo®Parametric TOOLKIT User’sGuideNotify
BasicNotifyFunctions
prodev_notify() ProNotificationSet()
pro_on_regenerate_end() ProNotificationSet()
NotifyforFileManagement Operations
user_menu_dbms_save_pre() ProMdlSavePreAction()
user_menu_dbms_save_post() ProMdlSavePostAction()
user_menu_dbms_copy_pre() ProMdlCopyPreAction()
user_menu_dbms_copy_post() ProMdlCopyPostAction()
user_menu_dbms_rename_pre() ProMdlRenamePreAction()
user_menu_dbms_rename_post() ProMdlRenamePostAction()
user_menu_dbms_erase_pre() ProMdlErasePreAction()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxuser_menu_dbms_rename_pre() ProMdlRenamePreAction()
user_menu_dbms_rename_post() ProMdlRenamePostAction()
user_menu_dbms_erase_pre() ProMdlErasePreAction()
user_menu_dbms_erase_post() ProMdlErasePostAction()
user_menu_dbms_purge_pre() ProMdlPurgePreAction()
user_menu_dbms_purge_post() ProMdlPurgePostAction()
user_menu_dbms_delete_pre() ProMdlDeletePreAction()
user_menu_dbms_delete_post() ProMdlDeletePostAction()
user_menu_dbms_create_pre() ProMdlCreatePreAction()
user_menu_dbms_create_post() ProMdlCreatePostAction()
user_menu_dbms_retrieve_pre() ProMdlRetrievePreAction()
user_menu_dbms_retrieve_
post()ProMdlRetrievePostAction()
user_dbms_save_post_all() ProMdlSavePostAllAction()
user_dbms_copy_post_all() ProMdlCopyPostAllAction()
user_dbms_erase_post_all() ProMdlErasePostAllAction()
user_dbms_delete_post_all() ProMdlDeletePostAllAction()
user_dbms_retrieve_post_all() ProMdlRetrievePostAllAction()
FailureNotify
user_dbms_failure_function() ProMdlDbmsFailureAction()
ChangeNotifyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxuser_dbms_delete_post_all() ProMdlDeletePostAllAction()
user_dbms_retrieve_post_all() ProMdlRetrievePostAllAction()
FailureNotify
user_dbms_failure_function() ProMdlDbmsFailureAction()
ChangeNotify
user_change_window_post() ProWindowChangePostAction()
user_change_directory() ProDirectoryChangePostAction()
GraphicsNotify
user_graphics_object_output_
pre()ProMdlDisplayPreAction()
user_graphics_object_output_
post()ProMdlDisplayPostAction()
Manufacturing Notify
user_mfg_oper_cl_file_post() ProMfgoperClPostAction()
user_mfg_feat_cl_file_post() ProNcseqClPostAction()
Manufacturing Operations
Manufacturing Components
promfg_get_tool_ids()
prodb_get_comp_role()ProMfgAssemGet()
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2229Manufacturing Parameters
promfg_get_tool_ids() ProMfgToolVisit()
promfg_get_tool_parameters() ProToolParamGet()
promfg_set_tool_parameters() ProToolElemParamAdd()
promfg_get_nc_type() ProNcseqTypeGet()
CablingOperations
procbl_create_cables_fromxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpromfg_get_tool_parameters() ProToolParamGet()
promfg_set_tool_parameters() ProToolElemParamAdd()
promfg_get_nc_type() ProNcseqTypeGet()
CablingOperations
procbl_create_cables_from
_logical()ProCablesFromLogicalCreate()
procbl_get_cables_from
_logical()ProCablesFromLogicalGet()
procbl_get_connectors_from
_logical()ProConnectorsFromLogicalGet()
procbl_get_assy_spools() ProAssemblySpoolsCollect()
procbl_create_spool() ProSpoolCreate()
procbl_get_spool_params() ProSpoolParametersCollect()
procbl_get_spool_param() ProSpoolParameterGet()
procbl_get_assy_connectors() ProAssemblyConnectorsGet()
procbl_designate_connector() ProConnectorDesignate()
procbl_undesignate_
connector()ProConnectorUndesignate()
procbl_get_connector_entry_
ports()ProConnectorEntryPortsGet()
procbl_set_spool_params() ProSpoolParametersSet()
procbl_delete_spool_param() ProSpoolParameterDelete()
procbl_get_spools_from_
logical()ProSpoolsFromLogicalGet()
procbl_get_spools_from_
logical()ProSpoolsFromLogicalGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprocbl_delete_spool_param() ProSpoolParameterDelete()
procbl_get_spools_from_
logical()ProSpoolsFromLogicalGet()
procbl_get_spools_from_
logical()ProSpoolsFromLogicalGet()
procbl_get_connector() ProConnectorParamGet()
procbl_delete_connector_
param()ProConnectorParamDelete()
procbl_get_connector_params() ProConnectorParamsCollect()
procbl_set_connector_params() ProConnectorParamsSet()
procbl_get_assy_harnesses() ProAssemblyHarnessesCollect()
procbl_create_harness() ProHarnessCreate()
procbl_get_harness_cables()
procbl_get_cable_id()ProHarnessCablesCollect()
procbl_get_harness_
locations()ProHarnessLocationsCollect()
procbl_get_wire_harnesses() ProCableHarnessesGet()
procbl_get_wire_length() ProCableLengthGet()
procbl_get_cable_id() ProCableByNameGet()
procbl_get_cable_name() ProCableNameGet()
procbl_get_cable_subtype() ProCableTypeGet()
procbl_create_cable() ProCableCreate()
procbl_create_bundle() ProBundleCreate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprocbl_get_cable_name() ProCableNameGet()
procbl_get_cable_subtype() ProCableTypeGet()
procbl_create_cable() ProCableCreate()
procbl_create_bundle() ProBundleCreate()
2230 Creo®Parametric TOOLKIT User’sGuideprocbl_get_bundle_cables() ProBundleCablesCollect()
procbl_get_cable_logical_
ends()ProCableLogicalEndsGet()
procbl_get_cable_geom() ProCableIsComplete()
procbl_set_cable_params() ProCableParametersSet()
procbl_delete_cable_param() ProCableParameterDelete()
procbl_get_cable_param() ProCableParameterGet()
procbl_get_cable_params() ProCableParametersCollect()
procbl_cable_clearance() ProCableClearanceCompute()
procbl_get_cable_geom() ProCableSegmentsGet()
procbl_get_cable_geom() ProCablesegmentPointsGet()
procbl_get_cable_geom() ProCablesegmentIsInBundle()
procbl_get_cable_geom() ProCablesegmentIsNew()
procbl_get_cable_locations() ProCableLocationsCollect()
procbl_get_location_cables()
procbl_get_cable_id()ProCablelocationCablesGet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprocbl_get_cable_geom() ProCablesegmentIsNew()
procbl_get_cable_locations() ProCableLocationsCollect()
procbl_get_location_cables()
procbl_get_cable_id()ProCablelocationCablesGet()
procbl_get_location_type() ProCablelocationTypeGet()
procbl_get_location_pnt() ProCablelocationPointGet()
procbl_routing_start() ProCableRoutingStart()
procbl_route_thru_location() ProCableThruLocationRoute()
procbl_routing_end() ProCableRoutingEnd()
UDFFunction
prodb_first_udf() ProSolidGroupVisit() or
ProSolidGroupsCollect()
prodb_next_udf() ProSolidGroupVisit() or
ProSolidGroupsCollect()
prodb_get_group() ProFeatureGroupGet()
plusProGroupFeatureVisit() or
ProGroupFeaturesCollect()
plusProGroupIsTabledriven()
prodb_get_udf_name() ProUdfNameGet()
prodb_first_dim_udf() ProUdfDimensionVisit() or
ProUdfDimensionsCollect()
prodb_next_dim_udf() ProUdfDimensionVisit() or
ProUdfDimensionsCollect()
prodb_get_udf_dim_name() ProUdfDimensionNameGet()
prodb_place_udf() Replaced
prodb_create_group() ProUdfCreate()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprodb_next_dim_udf() ProUdfDimensionVisit() or
ProUdfDimensionsCollect()
prodb_get_udf_dim_name() ProUdfDimensionNameGet()
prodb_place_udf() Replaced
prodb_create_group() ProUdfCreate()
prodb_get_udf_instance_name() ProUdfNameGet()
CrossSections
prodb_create_parallel_xsec() ProXsecParallelCreate()
prodb_delete_xsec() ProXsecDelete()
prodb_display_xsec() ProXsecDisplay()
prodb_first_xsec() ProSolidXsecVisit()
prodb_mass_prop_xsec() ProXsecMassPropertyCompute()
prodb_next_xsec() ProSolidXsecVisit()
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2231prodb_regen_xsec() ProXsecRegenerate()
prodb_xsec_component() ProXsecGeometryCollect()
prodb_xsec_name() ProSolidXsecVisit()
Table-Driven Patterns
proptntbl_add_inst_to_table() UsetheTablePatternfeatureelementtreedocumented inthe
headerfileProPattern.h. proptntbl_delete_table()
proptntbl_get_active_table()
proptntbl_get_all_tbl_names()
proptntbl_get_inst_dim_
value()
proptntbl_get_inst_indices()
proptntbl_get_lead_pat_dims()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxheaderfileProPattern.h. proptntbl_delete_table()
proptntbl_get_active_table()
proptntbl_get_all_tbl_names()
proptntbl_get_inst_dim_
value()
proptntbl_get_inst_indices()
proptntbl_get_lead_pat_dims()
proptntbl_remove_instance()
proptntbl_rename_table()
proptntbl_set_active_table()
proptntbl_set_dimval_driven()
proptntbl_set_inst_dim_
value()
MergeandCutout
prodb_merge_members() UsetheMergefeatureelementtreedocumented intheheader
fileProMerge.h.
Automatic Interchange
prodb_auto_interchange ProAssemblyAutointerchange()
Drawing
pro_get_drawing_text_height() ProDrawingSetupOptionGet()
pro_set_drawing_text_height() ProDrawingSetupOptionSet()
prodrw_dim_view_id() ProDrawingDimensionViewGet()
prodrw_get_view_sheet() ProDrawingViewSheetGet()
Notebook
prodb_declare_layout() ProLayoutDeclare()
prodb_undeclare_layout() ProLayoutUndeclare()
prodb_regenerate_layout() ProLayoutRegenerate()
Relations
prodb_import_relations() ProInputFileRead()
prodb_export_relations() ProOutputFileMdlnameWrite()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprodb_undeclare_layout() ProLayoutUndeclare()
prodb_regenerate_layout() ProLayoutRegenerate()
Relations
prodb_import_relations() ProInputFileRead()
prodb_export_relations() ProOutputFileMdlnameWrite()
SurfaceProperties
prodb_get_surface_props ProSurfaceAppearancepropsGet() oror
ProSurfaceTexturepropsGet() or
ProSurfaceTextureplacementpropsGet()
prodb_set_surface_props ProSurfaceAppearancepropsSet() or
ProSurfaceTexturepropsSet() or
ProSurfaceTextureplacementpropsSet()
prodb_unset_surface_props ProSurfaceAppearancepropsSet() or
ProSurfaceTexturepropsSet() or
ProSurfaceTextureplacementpropsSet()
Datastructure pro_surf_props Datastructure ProSurfaceAppearanceProps,
2232 Creo®Parametric TOOLKIT User’sGuideProSurfaceTextureProps, and
ProSurfaceTexturePlacementProps
pro_get_light_sources ProLightSourcesGet()
pro_set_light_sources ProLightSourcesSet()
Datastructure Pro_light ProLightInfo
prodb_surface_tessellation ProSurfaceTessellationGet()
Interferencexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpro_get_light_sources ProLightSourcesGet()
pro_set_light_sources ProLightSourcesSet()
Datastructure Pro_light ProLightInfo
prodb_surface_tessellation ProSurfaceTessellationGet()
Interference
pro_dist_manifolds() ProSelectionDistanceEval()
ProSelectionWithOptionsDistanceEval()
pro_compute_clearance() ProFitClearanceCompute()
pro_compute_interference() ProFitInterferenceCompute()
pro_compute_global_
interference()ProFitGlobalinterferenceCompute()
pro_compute_volume() ProFitInterferencevolumeCompute()
pro_display_interf_volume() ProFitInterferencevolumeDisplay()
pro_interference_volume_
release()ProInterferenceDataFree()
Customized PlotDriver
prointerface_create()
prointerface_load_function()ProPlotdriverInterfaceCreate()
prointerface_object_set() ProPlotdriverInterfaceobjectsSet()
prointerface_2d() ProPlotdriverExecute()
user_intf_text() ProPlotdriverTextPlot()
ProPlotdriverTextfunctionSet()
user_intf_circle() ProPlotdriverCirclePlot()
ProPlotdriverCirclefunctionSet()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxprointerface_2d() ProPlotdriverExecute()
user_intf_text() ProPlotdriverTextPlot()
ProPlotdriverTextfunctionSet()
user_intf_circle() ProPlotdriverCirclePlot()
ProPlotdriverCirclefunctionSet()
user_intf_arc() ProPlotdriverArcPlot()
ProPlotdriverArcfunctionSet()
user_intf_line() ProPlotdriverLinePlot()
ProPlotdriverLinefunctionSet()
user_intf_polyline() ProPlotdriverPolylinePlot()
ProPlotdriverPolylinefunctionSet()
user_intf_filled_poly() ProPlotdriverPolygonPlot()
ProPlotdriverPolygonfunctionSet()
ThefollowingPro/Develop FEMfunctionshavebeenreplacedwithequivalent
CreoParametric TOOLKITfunctionsinthementioned headerfiles:
Pro/DEVELOP Function EquivalentCreoParametric TOOLKIT
Function
profem_get_con_case_names() ProMechLoadset.h
ProMechConstrset.h
profem_get_constraints() ProMechLoad.h
ProMechConstraint.h
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2233Pro/DEVELOP Function EquivalentCreoParametric TOOLKIT
Function
profem_get_mesh_controls() ProMechMeshControl.hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProMechConstraint.h
Pro/DEVELOP toCreoParametric TOOLKIT FunctionMapping 2233Pro/DEVELOP Function EquivalentCreoParametric TOOLKIT
Function
profem_get_mesh_controls() ProMechMeshControl.h
profem_get_bar_elements() ProMechBeam.h
ProMechBeamOrient.h
ProMechBeamRelease.h
ProMechBeamSection.h
ProMechSpring.h
ProMechSpringProps.h
ProMechGap.h
ProMechWeld.h
profem_get_contacts() ProMechContact.h
profem_get_mass_elements() ProMechMass.h
ProMechMassProps.h
profem_get_shell_pairs() ProMechShellPair.h
pro_export_fea_mesh() ProFemMesh.h withthefunction
ProFemmeshExport()
2234 Creo®Parametric TOOLKIT User’sGuideJ
GeometryTraversal
Overview..............................................................................................................2236
ToWalkThroughtheGeometryofaBlock...............................................................2236
GeometryTerms....................................................................................................2236xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGeometryTerms....................................................................................................2236
Thisappendixillustratestherelationships betweenfaces,contours,andedges.
2235Overview
Notethefollowing:
•Asimplerectangular facehasonecontourandfouredges.
•Acontourwilltraverseaboundarysuchthatthepartfaceisalwaysonthe
right-hand side(RHS).Foranexternalcontour,thedirectionoftraversalis
clockwise. Foraninternalcontour,thedirectionoftraversalis
counterclockwise.
•IfapartisextrudedfromasketchthathasaU-shapedcrosssection,therewill
beseparatesurfacesateachlegoftheU-channel.
•Ifapartisextrudedfromasketchthathasasquare-shaped crosssection,anda
slotfeatureisthencutintotheparttomakeitlooklikeaU-channel, therewill
beonesurfaceacrossthelegsoftheU-channel. Inotherwords,theoriginal
surfaceofthepartisrepresented asonesurfacewithacutthroughit.
•Geometry traversalhappensonbody,solidsurfaceandcontour.Forquilts,
datumcurves,edges,thegeometrytraversalwillhappenthroughasolid.Toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsurfaceofthepartisrepresented asonesurfacewithacutthroughit.
•Geometry traversalhappensonbody,solidsurfaceandcontour.Forquilts,
datumcurves,edges,thegeometrytraversalwillhappenthroughasolid.To
collectallthebodiesinaspecifiedsolid,usethefunction
ProSolidBodiesCollect().
ToWalkThroughtheGeometryofaBlock
1.Walkthroughthesurfacesofabody,using
ProSolidBodySurfaceVisit().
2.Walkthroughthesurfacesofasolid,using ProSolidSurfaceVisit().
3.Walkthroughthecontoursofeachsurface,using
ProSurfaceContourVisit().
4.Walkthroughtheedgesofeachcontour,using
ProContourEdgeVisit().
GeometryTerms
Considerthefollowingdefinitions:
•surface—An idealgeometric representation, thatis,aninfiniteplane.
•face—Atrimmedsurface.Afacehasoneormorecontours.
•contour—A closedlooponaface.Acontourconsistsofmultipleedges.A
contourcanbelongtoonefaceonly.
•edge—The boundaryofatrimmedsurface.
Anedgeofasolidistheintersection oftwosurfaces.Theedgebelongsto
thosetwosurfaces,hencetotwocontours.Anedgeofadatumsurfacecanbexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcontourcanbelongtoonefaceonly.
•edge—The boundaryofatrimmedsurface.
Anedgeofasolidistheintersection oftwosurfaces.Theedgebelongsto
thosetwosurfaces,hencetotwocontours.Anedgeofadatumsurfacecanbe
2236 Creo®Parametric TOOLKIT User’sGuideeithertheintersection oftwodatumsurfaces,ortheexternalboundaryofthe
surface.Iftheedgeistheintersection oftwodatumsurfaces,itwillbelongto
thosetwosurfaces(hence,totwocontours). Iftheedgeistheexternal
boundaryofthedatumsurface,itwillbelongtothatsurfacealone(hence,toa
singlecontour).
Examples 1through5showsomesamplepartsandlisttheinformation abouttheir
surfaces,faces,contours,andedges.
Example1
Thisparthas6faces.
•FaceAhas1contourand4edges.
•EdgeE2istheintersection offacesAandB.
•EdgeE2isacomponent ofcontoursC1andC2.
Example2
FaceAhas2contoursand6edges.
Geometry Traversal 2237Example3
Thispartwasextrudedfromarectangular crosssection.Thefeatureonthetop
wasaddedlaterasanextrudedprotrusion intheshapeofasemicircle.
•FaceAhas1contourand6edges.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGeometry Traversal 2237Example3
Thispartwasextrudedfromarectangular crosssection.Thefeatureonthetop
wasaddedlaterasanextrudedprotrusion intheshapeofasemicircle.
•FaceAhas1contourand6edges.
•FaceBhas2contoursand8edges.
•FaceChas1contourand4edges.
Example4
ThispartwasextrudedfromacrosssectionidenticaltoFaceA.IntheSketcher,
thetopboundarywassketchedwithtwolinesandanarc.Thesketchwasthen
extrudedtoformthebasepart,asshown.
•FaceAhas1contourand6edges.
2238 Creo®Parametric TOOLKIT User’sGuide•FaceBhas1contourand4edges.
•FaceChas1contourand4edges.
•FaceDhas1contourand4edges.
Example5
Thispartwasextrudedfromarectangular crosssection.Theslotandholefeatures
wereaddedlater.
•FaceAhas1contourand8edges.
•FaceBhas3contoursand10edges.
Geometry Traversal 2239K
GeometryRepresentations
DomainofEvaluation.............................................................................................2241xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•FaceBhas3contoursand10edges.
Geometry Traversal 2239K
GeometryRepresentations
DomainofEvaluation.............................................................................................2241
SurfaceDataStructures.........................................................................................2241
Plane....................................................................................................................2242
Cylinder................................................................................................................2243
Cone....................................................................................................................2244
Torus....................................................................................................................2244
GeneralSurfaceofRevolution................................................................................2245xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGeneralSurfaceofRevolution................................................................................2245
RuledSurface.......................................................................................................2246
TabulatedCylinder.................................................................................................2246
CoonsPatch.........................................................................................................2247
FilletSurface.........................................................................................................2248
SplineSurface......................................................................................................2248
SecondDerivativeSplineSurface...........................................................................2249
NURBSSurface....................................................................................................2250xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxNURBSSurface....................................................................................................2250
CylindricalSplineSurface......................................................................................2251
ForeignSurface....................................................................................................2252
EdgeandCurveDataStructures............................................................................2253
Arc.......................................................................................................................2253
Line......................................................................................................................2253
NURBS................................................................................................................2254
Spline...................................................................................................................2254xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSpline...................................................................................................................2254
Ellipse..................................................................................................................2255
Thisappendixdescribesthegeometryrepresentations ofthedatastructures
definedinProGeomitem.h. Thesestructuresareoutputbythegeometry
functionsdescribedindetailintheCore:3DGeometry onpage168chapter.
2240 Creo®Parametric TOOLKIT User’sGuideDomainofEvaluation
Surfacesandedgescanbeextendedfromtheiroriginaldomainastheuser
continuestoaddfeaturestothemodel.Forexample,theusercanaddafeature
suchasadraftsurfaceorlocalpush,whichrequirestheoriginalsurfacetobe
extendedoutsideitsoriginaldomain.
Whenthisoccurs,youwillfindthattheuvparameters ofthesurfacehavebeen
extended.TheProSurfacedata datastructurereflectstheextension, and
returnstheupdatedvaluesfortheuandvextents.
Becausetheevaluatorfunctionsusetheanalyticalsurface(orcurve)definition,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxextended.TheProSurfacedata datastructurereflectstheextension, and
returnstheupdatedvaluesfortheuandvextents.
Becausetheevaluatorfunctionsusetheanalyticalsurface(orcurve)definition,
theyworkforanyparameter values.Thus,anysurface(orcurve)canbeextended
asneeded.Inaddition,ifyoupassinparameters outsidethecurrent uvdomain,
theevaluatorfunctionsstillreturnvaluesfortheparameters asrequested.
Ifyouareusingtheevaluators suppliedbyCreoParametric TOOLKIT, youdo
nothavetodoanything.Forsurfaces,theevaluatorfunctionsworkoverthis
extendedrangeofparameters. Yourevaluatorfunctionforforeigndatumsurfaces
isalsoexpectedtoallowforextrapolation.
Edgesarealwaysparameterized between 0.0and1.0.Whensurfacesare
extended,newedgesarecreatedthathaveparameters intherange 0.0to1.0.
Ifyoudevelopyourownevaluatorfunctions, youmustbeawarethatthedomain
ofasurfacecanbeextended,aswithforeigndatumsurfaces.
Surfaces
SurfaceDataStructures
Thesurfacestructurecontainsdatathatdescribestheboundaryofthesurface,andxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofasurfacecanbeextended,aswithforeigndatumsurfaces.
Surfaces
SurfaceDataStructures
Thesurfacestructurecontainsdatathatdescribestheboundaryofthesurface,and
apointertotheprimitivesurfaceonwhichitlies.Theprimitivesurfaceisathree-
dimensional geometric surfaceparameterized bytwovariables(uandv).The
surfaceboundaryconsistsofclosedloops(contours) ofedges.Eachedgeis
attachedtotwosurfaces,andeachedgecontainstheuandvvaluesoftheportion
Geometry Representations 2241oftheboundarythatitformsforbothsurfaces.Surfaceboundaries aretraversed
clockwise aroundtheoutsideofasurface,soanedgehasadirectionineach
surfacewithrespecttothedirectionoftraversal.
Otherdatafoundinthesurfacestructureincludestherectangular extentsofthe
two-dimensional domain,thethree-dimensional surface,andaflagindicating
whetherthesurfacenormalpointstowardstheinsideoroutsideofthepart.The
userdataisintendedforrun-timeuseonly,andthisinformation isnotstoredwith
thesurface.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwhetherthesurfacenormalpointstowardstheinsideoroutsideofthepart.The
userdataisintendedforrun-timeuseonly,andthisinformation isnotstoredwith
thesurface.
Thissectiondescribesthesurfacedatastructures. Thedatastructuresarelistedin
orderofcomplexity .Foreaseofuse,thealphabetical listingofthedatastructures
isasfollows:
•Coneonpage2244
•CoonsPatchonpage2247
•Cylinderonpage2243
•Cylindrical SplineSurfaceonpage2251
•FilletSurfaceonpage2248
•ForeignSurfaceonpage2252
•GeneralSurfaceofRevolution onpage2245
•NURBSSurfaceonpage2250
•Planeonpage2242
•RuledSurfaceonpage2246
•SecondDerivative SplineSurfaceonpage2249
•SplineSurfaceonpage2248
•TabulatedCylinderonpage2246
•Torusonpage2244
Plane
Plane
2242 Creo®Parametric TOOLKIT User’sGuideTheplaneentityconsistsoftwoperpendicular unitvectors(e1ande2),the
normaltotheplane(e3),andtheoriginoftheplane.
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe plane
Parameterization:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnormaltotheplane(e3),andtheoriginoftheplane.
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe plane
Parameterization:
(x, y,z)=u*e1+v*e2+origin
Cylinder
Cylinder
Thegenerating curveofacylinderisaline,paralleltotheaxis,atadistance R
fromtheaxis.Theradialdistanceofapointisconstant,andtheheightofthepoint
isv.
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe plane
radius Radius ofthe cylinder
Parameterization:
(x, y,z)=radius *[cos(u) *e1+sin(u) *e2] +
v*e3+origin
Engineering Notes:
Forthecylinder,cone,torus,andgeneralsurfaceofrevolution, alocalcoordinate
systemisusedthatconsistsofthreeorthogonal unitvectors(e1,e2,ande3)and
anorigin.Thecurveliesintheplaneofe1ande3,andisrotatedinthedirection
frome1toe2.Theusurfaceparameter determines theangleofrotation,andthe
vparameter determines thepositionofthepointonthegenerating curve.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfrome1toe2.Theusurfaceparameter determines theangleofrotation,andthe
vparameter determines thepositionofthepointonthegenerating curve.
Geometry Representations 2243Cone
Cone
Thegenerating curveofaconeisalineatananglealphatotheaxisofrevolution
thatintersectstheaxisattheorigin.Thevparameter istheheightofthepoint
alongtheaxis,andtheradialdistanceofthepointisv*tan(alpha).
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe cone
alpha Angle between the axis ofthe cone
and the generating line
Parameterization:
(x, y,z)=v*tan(alpha) *[cos(u) *e1+
sin(u) *e2] +v*e3+origin
Torus
Torus
Thegenerating curveofatorusisanarcofradius R2withitscenteratadistance
R1fromtheorigin.Thestartingpointofthegenerating arcislocatedatadistance
R1+R2fromtheorigin,inthedirectionofthefirstvectorofthelocalcoordinate
system.TheradialdistanceofapointonthetorusisR1+R2*cos(v),andthe
heightofthepointalongtheaxisofrevolution isR2*sin(v).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxR1+R2fromtheorigin,inthedirectionofthefirstvectorofthelocalcoordinate
system.TheradialdistanceofapointonthetorusisR1+R2*cos(v),andthe
heightofthepointalongtheaxisofrevolution isR2*sin(v).
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
2244 Creo®Parametric TOOLKIT User’sGuidee3[3] Normal tothe plane
origin[3] Origin ofthe torus
radius1 Distance from the center ofthe
generating arc tothe axis of
revolution
radius2 Radius ofthe generating arc
Parameterization:
(x, y,z)=(R1 +R2*cos(v)) *[cos(u) *e1+
sin(u) *e2] +R2*sin(v) *e3+
origin
GeneralSurfaceofRevolution
GeneralSurfaceofRevolution
Ageneralsurfaceofrevolution iscreatedbyrotatingacurveentity,usuallya
spline,aroundanaxis.Thecurveisevaluatedatthenormalized parameter v,and
theresultingpointisrotatedaroundtheaxisthroughanangle u.Thesurfaceof
revolution datastructureconsistsofalocalcoordinate systemandacurve
structure.
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirectionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxrevolution datastructureconsistsofalocalcoordinate systemandacurve
structure.
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe surface ofrevolution
curve Generating curve
Parameterization:
curve(v) =(c1, c2, c3) isapoint onthe curve.
(x, y,z)=[c1 *cos(u) -c2*sin(u)] *e1+
[c1 *sin(u) +c2*cos(u)] *e2+
c3*e3+origin
Geometry Representations 2245RuledSurface
RuledSurface
Aruledsurfaceisthesurfacegeneratedbyinterpolating linearlybetween
corresponding pointsoftwocurveentities.Theucoordinate isthenormalized
parameter atwhichbothcurvesareevaluated, andthevcoordinate isthelinear
parameter betweenthetwopoints.Thecurvesarenotdefinedinthelocal
coordinate systemofthepart,sotheresultingpointmustbetransformed bythe
localcoordinate systemofthesurface.
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe ruled surfacexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocalcoordinate systemofthesurface.
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe ruled surface
curve_1 First generating curve
curve_2 Second generating curve
Parameterization:
(x', y', z') isthe point inlocal coordinates.
(x', y', z') =(1-v)*C1(u) +v*C2(u)
(x, y,z)=x'*e1+y'*e2+z'*e3+origin
TabulatedCylinder
TabulatedCylinder
2246 Creo®Parametric TOOLKIT User’sGuideAtabulatedcylinderiscalculated byprojecting acurvelinearlythroughspace.
Thecurveisevaluatedattheuparameter,andthezcoordinate isoffsetbythev
parameter.Theresultingpointisexpressed inlocalcoordinates andmustbe
transformed bythelocalcoordinate systemtobeexpressed inpartcoordinates.
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe tabulated cylinder
curve Generating curve
Parameterization:
(x', y', z') isthe point inlocal coordinates.
(x', y', z') =C(u) +(0, 0,v)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxe3[3] Normal tothe plane
origin[3] Origin ofthe tabulated cylinder
curve Generating curve
Parameterization:
(x', y', z') isthe point inlocal coordinates.
(x', y', z') =C(u) +(0, 0,v)
(x, y,z)=x'*e1+y'*e2+z'*e3+origin
CoonsPatch
CoonsPatch
ACoonspatchisusedtoblendsurfacestogether.Forexample,youwouldusea
Coonspatchatacornerwherethreefillets(eachofadifferentradius)meet.
DataFormat:
le_curve u=0boundary
ri_curve u=1boundary
dn_curve v=0boundary
up_curve v=1boundary
point_matrix[2][2] Corner points
uvder_matrix[2][2] Corner mixed derivatives
Geometry Representations 2247FilletSurface
FilletSurface
Afilletsurfaceisfoundwherearoundorafilletisplacedonacurvededge,oron
anedgewithnon-constant arcradii.Onastraightedge,acylinderwouldbeused
torepresentthefillet.
DataFormat:
pnt_spline P(v) spline running along the u=0boundary
ctr_spline C(v) spline along the centers ofthe
fillet arcs
tan_spline T(v) spline ofunit tangents tothe
axis ofthe fillet arcs
Parameterization:
R(v) =P(v) -C(v)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxctr_spline C(v) spline along the centers ofthe
fillet arcs
tan_spline T(v) spline ofunit tangents tothe
axis ofthe fillet arcs
Parameterization:
R(v) =P(v) -C(v)
(x,y,z) =C(v) +R(v) *cos(u) +T(v) XR(v) *
sin(u)
SplineSurface
SplineSurface
Theparametric splinesurfaceisanonuniform bicubicsplinesurfacethatpasses
throughagridwithtangentvectorsgivenateachpoint.Thegridiscurvilinear in
uvspace.Usethisforbicubicblendingbetweencornerpoints.
DataFormat:
u_par_arr[] Point parameters, inthe u
2248 Creo®Parametric TOOLKIT User’sGuidedirection, ofsize Nu
v_par_arr[] Point parameters, inthe v
direction, ofsize Nv
point_arr[][3] Array ofinterpolant points, of
size NuxNv
u_tan_arr[][3] Array ofutangent vectors
atinterpolant points, ofsize
NuxNv
v_tan_arr[][3] Array ofvtangent vectors at
interpolant points, ofsize
NuxNv
uvder_arr[][3] Array ofmixed derivatives at
interpolant points, ofsize
NuxNv
Engineering Notes:
•Allowsforaunique3x3polynomial aroundeverypatch.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinterpolant points, ofsize
NuxNv
uvder_arr[][3] Array ofmixed derivatives at
interpolant points, ofsize
NuxNv
Engineering Notes:
•Allowsforaunique3x3polynomial aroundeverypatch.
•Thereissecondordercontinuity acrosspatchboundaries.
•Thepointandtangentvectorsrepresenttheorderingofanarrayof[i][j],
where uvarieswithi,andvvarieswithj.Inwalkingthroughthepoint_
arr[][3], youwillfindthattheinnermost variablerepresenting v(j)
variesfirst.
SecondDerivativeSplineSurface
TheSecondDerivative SplineSurface(ProSpline2ndDersrfdata) isa
bicubicsplinesurfacewithpossibility ofalteringthedegreeofboundarysegments
toaccommodate corresponding curvature(2ndderivatives) conditions. Usethis
forbicubicblendingwithseconddegreederivatives alongboundaries.
u_par_arr[] Pointparameters, intheudirection,ofsizeNu
v_par_arr[] Pointparameters, inthevdirection,ofsizeNv
point_arr[][3] Arrayofinterpolant points,ofsizeNuxNv
u_tan_arr[][3] Arrayofutangentvectorsatinterpolant points,of
sizeNuxNvxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxv_par_arr[] Pointparameters, inthevdirection,ofsizeNv
point_arr[][3] Arrayofinterpolant points,ofsizeNuxNv
u_tan_arr[][3] Arrayofutangentvectorsatinterpolant points,of
sizeNuxNv
v_tan_arr[][3] Arrayofvtangentvectorsatinterpolant points,of
sizeNuxNv
uvder_arr[][3] Arrayofmixedderivatives atinterpolant points,of
sizeNuxNv
(*u_der2_arrs[2])[3] 2Arraysof2ndUderivatives alongVboundaries
interpolation points,sizeofNv.
(*v_der2_arrs[2])[3] 2Arraysof3rdVderivatives alongUboundaries
interpolation points,sizeofNu.
(*uuv_der[2])[3] 2Arraysofuuvmixedderivatives alongV
boundaries interpolation points,sizeofNv.
(*vvu_der[2])[3] Arraysofvvumixedderivatives alongUboundaries
interpolation points,sizeofNv.
der4[4][3] UUVV derivatives atthecorners
Geometry Representations 2249Engineering notes:
•Eachseconddegreederivatives arraycanbeNULL.Ifitisdefinedthen
corresponding 3rddegreemixedderivatives shouldbedefined.
•Eachder4canbeNULLandshouldbedefinedif2nddegreederivatives arexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx•Eachseconddegreederivatives arraycanbeNULL.Ifitisdefinedthen
corresponding 3rddegreemixedderivatives shouldbedefined.
•Eachder4canbeNULLandshouldbedefinedif2nddegreederivatives are
definedinbothdirections atthecorresponding corner.
NURBSSurface
TheNURBS(nonuniform rationalB-spline)surfaceisdefinedbybasisfunctions
(inuandv),expandable arraysofknots,weights,andcontrolpoints.
NURBSSurface
DataFormat:
deg[2] Degree ofthe basis
functions (in uand v)
u_par_arr[] Array ofknots onthe
parameter line u
v_par_arr[] Array ofknots onthe
parameter line v
wghts[] Array ofweights for
rational NURBS, otherwise
NULL
c_point_arr[][3] Array ofcontrol points
Definition:
2250 Creo®Parametric TOOLKIT User’sGuidek =degree inu
l =degree inv
N1 =(number ofknots inu)-(degree inu)-2
N2 =(number ofknots inv)-(degree inv)-2
B=basis function inu
B=basis function inv
w=weights
C=control points (x,y,z) *w
Engineering Notes:
Theweights andfarraysrepresentmatricesofsizewghts[N1+1][N2+1]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxN2 =(number ofknots inv)-(degree inv)-2
B=basis function inu
B=basis function inv
w=weights
C=control points (x,y,z) *w
Engineering Notes:
Theweights andfarraysrepresentmatricesofsizewghts[N1+1][N2+1]
andc_points_arr [N1+1] [N2+1].Elementsofthematricesarepacked
intoarraysinrow-major order.
CylindricalSplineSurface
Thecylindrical splinesurfaceisanonuniform bicubicsplinesurfacethatpasses
throughagridwithtangentvectorsgivenateachpoint.Thegridiscurvilinear in
modelingspace.
CylindricalSplineSurface
DataFormat:
e1[3] x'vector ofthe local coordinate system
e2[3] y'vector ofthe local coordinate system
e3[3] z'vector ofthe local coordinate system,
which corresponds tothe axis ofrevolution
ofthe surface
origin[3] Origin ofthe local coordinate system
splsrf Spline surface data structure
Thesplinesurfacedatastructurecontainsthefollowingfields:
u_par_arr[] Point parameters, inthe
udirection, ofsize Nu
v_par_arr[] Point parameters, inthe
vdirection, ofsize NvxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxThesplinesurfacedatastructurecontainsthefollowingfields:
u_par_arr[] Point parameters, inthe
udirection, ofsize Nu
v_par_arr[] Point parameters, inthe
vdirection, ofsize Nv
Geometry Representations 2251point_arr[][3] Array ofpoints, incylindrical
coordinates, ofsize NuxNv.
The array components are asfollows:
point_arr[i][0] -Radius
point_arr[i][1] -Theta
point_arr[i][2] -Z
u_tan_arr[][3] Array ofutangent vectors.
incylindrical coordinates,
ofsize NuxNv
v_tan_arr[][3] Array ofvtangent vectors,
incylindrical coordinates,
ofsize NuxNv
uvder_arr[][3] Array ofmixed derivatives,
incylindrical coordinates,
ofsize NuxNv
Engineering Notes:
Ifthesurfaceisrepresented incylindrical coordinates (r,theta, z),thelocal
coordinate systemvalues(x', y',z')areinterpreted asfollows:
x'=rcos (theta)
y'=rsin (theta)
z'=z
Acylindrical splinesurfacecanbeobtained,forexample,bycreatingasmooth
rotationalblend(showninthefigureonthepreviouspage).xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'=rcos (theta)
y'=rsin (theta)
z'=z
Acylindrical splinesurfacecanbeobtained,forexample,bycreatingasmooth
rotationalblend(showninthefigureonthepreviouspage).
Insomecases,youcanreplaceacylindrical splinesurfacewithasurfacesuchasa
plane,cylinder,orcone.Forexample,inthefigure,thecylindrical splinesurfaceS
1wasreplacedwithacone
(r1=r2,andr3=r4andr1≠r3).
Ifareplacement cannotbedone(suchasforthesurface S0inthefigure (ra≠rb
orrc≠rd)),leaveitasacylindrical splinesurfacerepresentation.
ForeignSurface
Theforeignsurfaceconsistsoftwoperpendicular unitvectors(e1ande2),the
normaltotheplane(e3), theoriginoftheplaneandtheforeignIDreturnedby
thefunction user_init_surf().
DataFormat:
e1[3] Unit vector, inthe udirection
e2[3] Unit vector, inthe vdirection
e3[3] Normal tothe plane
origin[3] Origin ofthe plane
foreign_id Foreign IDreturned byuser_init_surf()
Parameterization isestablished bytheForeignSurfacecallbackfunction user_
eval_surf().xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxe3[3] Normal tothe plane
origin[3] Origin ofthe plane
foreign_id Foreign IDreturned byuser_init_surf()
Parameterization isestablished bytheForeignSurfacecallbackfunction user_
eval_surf().
2252 Creo®Parametric TOOLKIT User’sGuideEdgeandCurveDataStructures
Thedatastructuresareusedtorepresentedges(line,arc,andspline)aswellasthe
curves(line,arc,spline,andNURBS)withinthesurfacedatastructures.
Thissectiondescribestheedgeandcurvedatastructures, arrangedinorderof
complexity .Foreaseofuse,thealphabetical listingoftheedgeandcurvedata
structuresisasfollows:
•Arconpage2253
•Lineonpage2253
•NURBSonpage2254
•Splineonpage2254
•Ellipseonpage2255
Arc
Thearcentityisdefinedbyaplaneinwhichthearclies.Thearciscenteredatthe
origin,andisparameterized bytheangleofrotationfromthefirstplaneunit
vectorinthedirectionofthesecondplanevector.Thestartandendangle
parameters ofthearcandtheradiusarealsogiven.Thedirectionofthearcis
counterclockwise ifthestartangleislessthantheendangle,otherwiseitis
clockwise.
DataFormat:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxparameters ofthearcandtheradiusarealsogiven.Thedirectionofthearcis
counterclockwise ifthestartangleislessthantheendangle,otherwiseitis
clockwise.
DataFormat:
vector1[3] First vector that defines the
plane ofthe arc
vector2[3] Second vector that defines the
plane ofthe arc
origin[3] Origin that defines the plane
ofthe arc
start_angle Angular parameter ofthe starting
point
end_angle Angular parameter ofthe ending
point
radius Radius ofthe arc.
Parameterization:
t'(the unnormalized parameter) is
(1-t)*start_angle +t*end_angle
(x, y,z)=radius *[cos(t') *vector1 +
sin(t') *vector2] +origin
Line
DataFormat:
end1[3] Starting point ofthe line
end2[3] Ending point ofthe line
Geometry Representations 2253Parameterization:
(x, y,z)=(1-t)*end1 +t*end2
NURBS
TheNURBS(nonuniform rationalB-spline)curveisdefinedbyexpandable arrays
ofknots,weights,andcontrolpoints.
CubicNURBSCurve
DataFormat:
degree Degree ofthe basis function
params[] Array ofknots
weights[] Array ofweights for rationalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxofknots,weights,andcontrolpoints.
CubicNURBSCurve
DataFormat:
degree Degree ofthe basis function
params[] Array ofknots
weights[] Array ofweights for rational
NURBS, otherwise NULL.
c_pnts[][3] Array ofcontrol points
Definition:
k=degreeofbasisfunction
N=(numberofknots)-(degree)-2
w=weights
C=controlpoints(x,y,z)*w
B=basisfunctions
Bythisequation,thenumberofcontrolpointsequals N+1.
Spline
Thesplinecurveentityisanonuniform cubicspline,definedbyaseriesofthree-
dimensional points,tangentvectorsateachpoint,andanarrayofunnormalized
splineparameters ateachpoint.
2254 Creo®Parametric TOOLKIT User’sGuideDataFormat:
par_arr[] Array ofspline parameters
(t) ateach point.
pnt_arr[][3] Array ofspline interpolant points
tan_arr[][3] Array oftangent vectors at
each point
Parameterization:
x,y,andzareaseriesofuniquecubicfunctions, onepersegment,fully
determined bythestartingandendingpoints,andtangentsofeachsegment.
Letp_minbetheparameter ofthefirstsplinepoint,andp_maxbetheparameterxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,y,andzareaseriesofuniquecubicfunctions, onepersegment,fully
determined bythestartingandendingpoints,andtangentsofeachsegment.
Letp_minbetheparameter ofthefirstsplinepoint,andp_maxbetheparameter
ofthelastsplinepoint.Then, t',theunnormalized parameter,ist*p_max +
(1-t) *p_min.
Locatetheithsplinesegmentsuchthat:
par_arr[i] <t'<par_arr[i+1]
(Ift<0ort>+1,usethefirstorlastsegment.)
t0=(t' -par_arr[i]) /(par_arr[i+1] -par_arr[i])
t1=(par_arr[i+1] -t') /(par_arr[i+1] -par_arr[i])
The coordinates ofthe points are then:
(x, y,z)=pnt_arr[i] *t1^2 *(1+2*t0) +
pnt_arr[i+1] *t0^2 *(1+2*t1) +
(par_arr[i+1] -par_arr[i]) *t0*t1*
(tan_arr[i] *t1-tan_arr[i+1] *t0)
Ellipse
Ellipsesin3Dgeometryissplitintotwoidenticalhalf-ellipses. Theellipseis
definedbyitsmajorandminoraxisradiusvalues.Similartoarcs,elliptic
segmentsaredefinedbyaplaneinwhichtheellipselies,centeredattheorigin,
andparameterized bytheangleofrotation.Thedirectionoftheellipseisxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinedbyitsmajorandminoraxisradiusvalues.Similartoarcs,elliptic
segmentsaredefinedbyaplaneinwhichtheellipselies,centeredattheorigin,
andparameterized bytheangleofrotation.Thedirectionoftheellipseis
counterclockwise ifthestartangleislessthantheendangle,otherwiseitis
clockwise.
DataFormat:
center -Center point ofthe ellipse
major_axis_unit_vect -Direction for the X-axis ofthe ellipse
norm_axis_unit_vect -Direction for the Y-axis
major_len -The“radius” inthe X-direction
minor_leng –The“radius” inthe Y-direction
start_ang –The ellipse start angle
end_ang –The end angle for the ellipse
They-axiscanbefoundasavectorproductofnorm_axis_unit_vect onthe
major_axis_unit_vect. Inactualexamples, themajor_len canbeless
thantheminor_len.
Parameterization:
t'(the unnormalized parameter) is
Geometry Representations 2255(1-t)*start_angle +t*end_angle
(x, y,z)=major_len *[cos(t') *vector1] +
minor_len *[sin(t') *vector2] +origin
References:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxt'(the unnormalized parameter) is
Geometry Representations 2255(1-t)*start_angle +t*end_angle
(x, y,z)=major_len *[cos(t') *vector1] +
minor_len *[sin(t') *vector2] +origin
References:
Faux,I.D.,M.J.Pratt.Computational Geometry forDesignandManufacture. Ellis
HarwoodPublishers, 1983.
Mortenson, M.E.Geometric Modeling. JohnWiley&Sons,1985.
2256 Creo®Parametric TOOLKIT User’sGuideL
Debugging CreoParametric
TOOLKITApplications
BuildingaCreoParametricTOOLKITApplicationforDebugging...............................2258
DebuggingTechniques..........................................................................................2258
DebugginganInteractiveDLL................................................................................2258
DebuggingaBatchModeDLL................................................................................2258
DebuggingCreoParametricTOOLKITDLLsonWindows........................................2260xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxDebuggingaBatchModeDLL................................................................................2258
DebuggingCreoParametricTOOLKITDLLsonWindows........................................2260
DebuggingaMultiprocess Application.....................................................................2260
DebuggingaSynchronous SpawnModeApplication................................................2260
DebugginganAsynchronous SpawnModeApplication............................................2260
ThisappendixdescribeshowtodebugCreoParametric TOOLKITapplications.
2257BuildingaCreoParametric TOOLKIT
Application forDebugging
Thefollowingtableslistcommonly usedchangesforsamplemakefilesthatallow
debugging ofaCreoParametric TOOLKITapplication. Consultyourcompiler
documentation formoreinformation ontheflagsspecifiedbelowandother
debugging options.
OnWindows
CompileLineChanges LinkLineChanges
Change CCFLAGS orCPPFLAGS toadd/Od/Z7.Changethe/debugflagto/debug:full.
Removeorcommentthelinesthatdelete $(OBJS)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdebugging options.
OnWindows
CompileLineChanges LinkLineChanges
Change CCFLAGS orCPPFLAGS toadd/Od/Z7.Changethe/debugflagto/debug:full.
Removeorcommentthelinesthatdelete $(OBJS)
afterasuccessful build.
Debugging Techniques
Depending onthetypeandimplementation foryourapplication, youcanuseone
ofthefollowingdebugging techniques:
•Ifyourapplication isaDLLthatcreatesuserinterfaceandnotification
callbackstobeusedbytheinteractive user,refertothefollowingsectionon
Debugging anInteractive DLL.
•Ifyourapplication isaDLLthatrunsinbatchmode(from user_
initialize()), refertoDebugging anInteractive DLLonpage2258.
•Ifyourapplication isaspawnorasynchronous application, refertoDebugging
aMultiprocess Application onpage2260.
Debugging anInteractiveDLL
1.StartCreoParametric withtheDLLregistered andloaded.
2.Usethedebuggertoattachtotheprocess xtop.exe.
3.Setbreakpoints inthecallbackfunctionsthatyouwishtodebug.
Debugging aBatchModeDLL
Debugging WithoutSettingBreakpoints BeforeLoading
Codexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2.Usethedebuggertoattachtotheprocess xtop.exe.
3.Setbreakpoints inthecallbackfunctionsthatyouwishtodebug.
Debugging aBatchModeDLL
Debugging WithoutSettingBreakpoints BeforeLoading
Code
Thefollowingstepsoutlinetheprocedure todebugapplications usingadebugger
suchasdbxthatdoesnotallowbreakpoints tobesetbeforethecodeisloaded.
1.SetupaCreoParametric startcommand thatusesthedebuggerasfollows:
a.Edittheparametric.psf file(ortherelated psf.fileforthegiven
command).
2258 Creo®Parametric TOOLKIT User’sGuideb.InthisfilechangetheRUNlineforxtop,toinvokethedebuggerfirst,as:
RUN="$PRO_DIRECTORY/bin/parametric1"
RUN="dbx $PRO_DIRECTORY/bin/parametric1"
2.RuntheCreoParametric startcommand. Thedebuggerstarts.
3.Setupabreakpoint thattriggerswhentheDLLisloaded.
Indbx,enterstop dlopen <DLL name>Forexample, stop dlopen
pt_inst_test.dll.
IfyouareusingagraphicaldebuggersuchasSun’sWorkshop,thesame
procedure ispossible.Workshopallowsa“CUSTOM”breakpoint using dbx
syntax,suchasdlopenpt_inst_test.dll.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxpt_inst_test.dll.
IfyouareusingagraphicaldebuggersuchasSun’sWorkshop,thesame
procedure ispossible.Workshopallowsa“CUSTOM”breakpoint using dbx
syntax,suchasdlopenpt_inst_test.dll.
4.Enter run.TheprogramrunstothepointofloadingtheDLL.
5.Whenthedlopenbreakpoint istriggered,addabreakpoint touser_
initialize(). Atthispoint,theDLLisloadedandtheuser_
initialize() functionisinmemory.
Debugging WithBreakpoints SetBeforeLoadingCode
Thefollowingstepsoutlinetheprocedure todebugapplications usingadebugger
suchasMicrosoft VisualStudiothatallowsbreakpoints tobesetbeforethecode
isloaded.
1.SetupaCreoParametric startcommand thatusesthedebuggerasfollows:
a.Edittheparametric.psf file(ortherelated psf.fileforthegiven
command).
b.Inthisfile,changetheRUNlineforxtop,toinvokethedebuggerfirstas:
RUN="%PRO_DIRECTORY%\%PRO_MACHINE_TYPE%\obj\
xtop.exe"
RUN=devenv
"%PRO_DIRECTORY%\%PRO_MACHINE_TYPE%\obj\
xtop.exe"
2.RuntheCreoParametric startcommand. Thedebuggerstarts.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxRUN="%PRO_DIRECTORY%\%PRO_MACHINE_TYPE%\obj\
xtop.exe"
RUN=devenv
"%PRO_DIRECTORY%\%PRO_MACHINE_TYPE%\obj\
xtop.exe"
2.RuntheCreoParametric startcommand. Thedebuggerstarts.
3.Loadthesourcefilecontaining thefunctionsintothedebugger,and
graphically setabreakpoint tothestartofuser_initialize().
4.RuntheprogramfromthedebuggerUserInterface.Evenifthedebugger
indicatesthatnodebuggerinformation isavailableforxtop.exe, continue
debugging.
Debugging CreoParametric TOOLKIT Applications 2259WhentheDLLisloaded,theprogramwillstopintheDLL’suser_
initialize().
Debugging CreoParametric TOOLKITDLLson
Windows
TheCreoParametric executable containsadefaultexceptionhandleronWindows.
Thishandlerwillcatchandreacttoexceptions generatedbyaCreoParametric
TOOLKITDLLbydefault.
Toallowdebugging onWindowswithoutusingtheCreoParametric exception
handler,settheenvironment variable ALLOW_MS_DEBUG totrueinthe
Control Panel.
Setting ALLOW_MS_DEBUG totrueforcesCreoParametric executable nottoxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhandler,settheenvironment variable ALLOW_MS_DEBUG totrueinthe
Control Panel.
Setting ALLOW_MS_DEBUG totrueforcesCreoParametric executable notto
executetheexceptionhandlerandthustheprocesswillstopinthedebuggeron
anyexception. Alternatively ,itispossibletosetexceptionhandlinginthe
debuggertostoponthefirstoccurrence oftheexception, evenforexceptions that
arehandled.
Debugging aMultiprocess Application
Debugging aSynchronous SpawnModeApplication
1.StartCreoParametric withtheapplication registered andstarted.
2.Usethedebuggertoattachtotheapplication process,forexample pt_inst_
test.exe.
3.Setbreakpoints inthecallbackfunctionsthatyouwishtodebug.
Debugging anAsynchronous SpawnMode
Application
1.Starttheapplication fromthedebugger.Setabreakpoint tostopthe
application beforethecalltoProEngineerStart() or
ProEngineerConnect().
2260 Creo®Parametric TOOLKIT User’sGuideGlossary
CreoParametric TOOLKITandCreoParametric Terminology
ThisglossarycontainswordsthathavemeaningsspecifictoCreoParametricxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProEngineerConnect().
2260 Creo®Parametric TOOLKIT User’sGuideGlossary
CreoParametric TOOLKITandCreoParametric Terminology
ThisglossarycontainswordsthathavemeaningsspecifictoCreoParametric
TOOLKIT.Fordefinitions ofwordsthatapplytoCreoParametric ingeneral,see
theCreoParametric help.
Term Definition
asynchronous mode ThemodeinwhichCreoParametric TOOLKITcanstartorconnecttoanew
CreoParametric sessionandinvokeoperations init.
body Theterm“solidbody”denotesacontainerobjectforsolidgeometry.
child Anitem,suchasview,part,orfeature,thatisdependent onanotheritemfor
itsexistence. SeealsoParent.
complement mode Inthismode,thecolorbecomestheexclusiveoroftheoldcolorandthecolor
beingdrawn.Youcanusethisforcreatingdynamicgraphics,suchas
rubberbands.
configuration file AspecialtextfilethatcontainsdefaultsettingsformanyCreoParametric
functions. Defaultenvironment, units,files,directories, andsoonaresetwhen
CreoParametric readsthisfilewhenitisstarted.Aconfiguration filecanxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfunctions. Defaultenvironment, units,files,directories, andsoonaresetwhen
CreoParametric readsthisfilewhenitisstarted.Aconfiguration filecan
resideinthestartupdirectorytosetthevaluesforyourworkingsessiononly,
oritcanresideintheloaddirectorytosetvaluesforallusersrunningthat
versionofCreoParametric. Alsoknownastheconfig.pro file.
contour Aclosedlooponaface.Acontourconsistsofmultipleedges.Acontourcan
belongtoonlyoneface.
coordinate system Ameansofidentifying pointsinspaceusingaparticularpointinthree-
dimensional space(theorigin)andthreemutuallyperpendicular axesthrough
theorigin(thecoordinate axes).CreoParametric TOOLKITusesfour
differentcoordinate systems:model,screen,window,anddrawing.
curve Acontinuous one-dimensional subsetofthree-dimensional space.TheCreo
Parametric TOOLKITdefinitioncoversthegeometryofnotonlydatum
curves,butalsootherfeatureswhosegeometryistreatedinthesameway:
axesandgeometryedges.
displaylist Alistofvectorsusedtorepresenttheshapeofthemodelintheview.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcurves,butalsootherfeatureswhosegeometryistreatedinthesameway:
axesandgeometryedges.
displaylist Alistofvectorsusedtorepresenttheshapeofthemodelintheview.
domain Theportionorportionsofasurfacethatcorrespond torealgeometry.
draftentity ThegraphicalitemscreatedinCreoParametric usingtheoptionsunderthe
Sketchtab.Thepossiblevaluesarearc,ellipse,line,point,polygon,spline,
andsoon.
draftgroup Agroupofdetailitemsthatcancontainnotesandsymbolinstances,aswellas
draftentities.
edge Thecurvealongwhichtwogeometrical facesintersect.
element Astructuralcomponent inaCreoParametric modelthathasitsowninternal
identifier(andsometimes aname)andcanbeselected.Examples ofelements
areface,edge(butnotcontour),datumplane,datumsurface,datumcurve,
axis,datumpoint,andfeature.
entity Ageometric elementthathasthegeometryofacurve,excluding edges.
2261Term Definition
EntitiessuchasdatumcurvesareaccessedusingtheirownCreoParametric
TOOLKIT functions, eventhoughgeometrically theybehavelikeedges.Notexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2261Term Definition
EntitiessuchasdatumcurvesareaccessedusingtheirownCreoParametric
TOOLKIT functions, eventhoughgeometrically theybehavelikeedges.Note
thatentitiesanddraftentitiesarequitedifferent:draftentitiesrefertotwo-
dimensional itemsonadrawing.
evaluate Toinvoketheevaluation, atapointonanedgeorsurface,oftheparametric
equationsofCreoParametric forthatedgeorsurface.Evaluation providesa
description ofthethree-dimensional geometry,inmodelcoordinates.
face Ageometryelementthatdescribesageometrical surfaceanditsrelationship
withothergeometryelements(edgesandfaces).
highlight Toemphasize anelementbymodifying itsappearance ontheworkstation
surface,usuallybychangingitscolor.
information window ACreoParametric windowthatdisplaysinformation suchasobjectlists,mass
properties, andBOM.
leader Thearrowthatpointsfromanoteorsymboltoeitherapointonanedgeofthe
geometryofamodelinadrawingviewortoapointinthedrawing.
loaddirectory ThedirectorywhereCreoParametric isloaded.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxproperties, andBOM.
leader Thearrowthatpointsfromanoteorsymboltoeitherapointonanedgeofthe
geometryofamodelinadrawingviewortoapointinthedrawing.
loaddirectory ThedirectorywhereCreoParametric isloaded.
macrokeys Thefunctionkeysorkeysequences forwhichyoupredefined amenuoption
orsequenceofmenuoptions.Thepredefined menuoptionsenableyoutopick
amacrofromamenuthatiscurrentlyonthescreen.
mainmenu Anautonomous menuwithitsowntitle.Theothertypeofmenuisasubmenu.
massproperties Theinformation aboutthedistribution ofmassinthepartorassembly.TheC
structureusedtodescribemassproperties isProMassProperty, andis
declaredintheheaderfileProSolid.h. Thedatastructureincludesfields
forthefollowing: volume,surfacearea,density,mass,centerofgravity
(COG),inertiamatrix,inertiatensor,COGinertiatensor,eigenvalues ofthe
COGinertia,andeigenvectors oftheCOGinertia.
matrix Atwo-dimensional arrayusedfortransformations. SeealsoTransformation.
menu AlistofoptionspresentedbyCreoParametric thatyouselectusingthemousexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCOGinertia,andeigenvectors oftheCOGinertia.
matrix Atwo-dimensional arrayusedfortransformations. SeealsoTransformation.
menu AlistofoptionspresentedbyCreoParametric thatyouselectusingthemouse
orpredefined macrokeys.SeetheUserInterface:Menus,Commands, and
Popupmenus onpage297formoreinformation onmenus.
menufile Atextfilethatenablesyoutospecifyyourowntextforthenameofamenu
button,theone-linehelptextthatappearswhenyouplacethecursoroverthat
button,andtranslations forbothofthese.
messagefile Atextfilethatenablesyoutoprovideyourowntranslation ofthetext
message.Themessagefileconsistsofgroupsoffourlines,onegroupforeach
messagethatyouwanttowriteout.
model Atop-levelobjectinaCreoParametric mode.
modelcoordinates Thecoordinate systeminCreoParametric isinternallyusedtodefinethe
geometryofamodel.Youcanvisualizethesecoordinates bycreatinga
coordinate systemdatumwiththeoptionModel▶▶Coordinate System.
modelitem Agenericobjectusedtorepresentanyitemcontainedinanytypeofmodel,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgeometryofamodel.Youcanvisualizethesecoordinates bycreatinga
coordinate systemdatumwiththeoptionModel▶▶Coordinate System.
modelitem Agenericobjectusedtorepresentanyitemcontainedinanytypeofmodel,
forthepurposeoffunctionswhoseactionsareapplicable toallthesetypesof
item.
notify EnablesyoutotrapcertainclassesoreventsintheCreoParametric session
andarrangeforafunctionintheCreoParametric TOOLKITprogramtobe
calledbeforeoraftersuchatrappedevent.
object Anitemstoredasasinglefile,suchasapart,assembly,ordrawing.
overlayview Theviewforawholedrawingsheet.
parameter Auser-drivenpropertythatcanbeaddedtoelementsinaCreoParametric
2262 Creo®Parametric TOOLKIT User’sGuideTerm Definition
modelandusedtodrivedimensional relations.Parameters consistofaname,
type,andavaluethatcanbeaninteger,double,orstring.Parameters are
accessible throughtheCreoParametric userinterface,asopposedtoattributes
thatareprivatetoCreoParametric TOOLKIT.
parent Anitemthathasotheritemsdependent uponitfortheirexistence. Forxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaccessible throughtheCreoParametric userinterface,asopposedtoattributes
thatareprivatetoCreoParametric TOOLKIT.
parent Anitemthathasotheritemsdependent uponitfortheirexistence. For
example,thebasefeaturehasallotherfeaturesdependent uponit.Ifaparent
isdeleted,alldependent (children) itemsaredeleted.
pipeline Asetofinterconnecting pipesandfitmentsconsisting ofanextensionwhich
terminates atopenends,non-openends,orjunctions(branches).
pipelinebranch Pipesgroupedintoextensions suchthattheextensionwhichcontinuesacross
thebranchhasacontinuous directionofflow.
pipelineextension Anon-branching sequenceofpipelineitems.
pipelinefeature Afeaturewhichnamesthepipelinetoshowitsgroupingbutcontainsno
geometry.
pipelinefitting Acomponent thatconnectstwopipesegments, forexample,acornerora
valve.
pipelinejunction Anassemblycomponent oradatumpointthatrepresents apartwhichjoins
threeormorepipesegments.
pipelinemember Aextensionterminator,series,orjunction.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvalve.
pipelinejunction Anassemblycomponent oradatumpointthatrepresents apartwhichjoins
threeormorepipesegments.
pipelinemember Aextensionterminator,series,orjunction.
pipelinenetwork Adatastructurewhichcontainsreferences topipelineobjectsandare
structured toshowtheirconnectivity andsequenceinrelationtotheflow.
pipelineobject Asegment,afitting,orastubin.
pipelinesegment Asectionofpipe,eitherstraightorarced.
pipelineseries Anon-branching sequenceofpipelineobjects.
pipelinestubin Adatumpointwhichjointsthreeormoreseries.
pipelineterminator Theopenornon-openendsofthepipeline.
scenegraph Atreestructurewhichconsistsofnodes.Thistermusedinreferencetothe
graphicsdata.
setmode Inthismode,anygraphicsdrawcommand setstheappropriate pixelstothe
colorbeingdrawn.
submenu Amenuthatactsasanextensiontothemenuaboveit.Asubmenuhasnotitle
andisactiveatthesametimeasthemenuaboveit.Selectingfromthemenu
aboveitdoesnotclosethesubmenu.
surface Acontinuous two-dimensional subsetofthree-dimensional space.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxandisactiveatthesametimeasthemenuaboveit.Selectingfromthemenu
aboveitdoesnotclosethesubmenu.
surface Acontinuous two-dimensional subsetofthree-dimensional space.
synchronous mode ThenormalmodeofoperationthatmakesitappearthatCreoParametric
TOOLKIT ispartoftheCreoParametric process.
tessellation Theprocessofsubdividing anedgeintomultiplesmalleredges.
transformation Achangefromonecoordinate systemtoanother.Atransformation between
twocoordinate systemsisrepresented bya4x4matrix.
trianglestrip Astripoftrianglesthatareconnected toeachother.Thetermisusedin
referencetothegraphicsdata.
userattributes Theattributesaddedbyausertoadddescription totheobjectbeyondthe
geometric definition. Forexample,stocknumber,price,andcostperunitare
alluserattributes.
vector Astraightlinesegmentthathasbothmagnitude anddirection.
versionstamp ProvidesawayofkeepingtrackofchangesinaCreoParametric modelto
whichyourCreoParametric TOOLKIT application mayneedtorespond.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvector Astraightlinesegmentthathasbothmagnitude anddirection.
versionstamp ProvidesawayofkeepingtrackofchangesinaCreoParametric modelto
whichyourCreoParametric TOOLKIT application mayneedtorespond.
view InPartmode,aviewistheorientation oftheobject.InDrawingmode,aview
Glossary 2263Term Definition
ispartofthedrawingthatrepresents themodel.
widestring Adatatypethatallowsforthefactthatsomecharactersets(suchasJapanese
KANJI)useabiggercharactersetthancanbecodedintotheusual1-bytechar
type.
window Arectangular areaoftheworkstation surfaceinwhichyouworkorinwhich
thesystemdisplaysmessages. CreoParametric usesaMainWindow,Message
Window,andsubwindows. Youcanalsospecifyasingle-window
environment.
2264 Creo®Parametric TOOLKIT User’sGuideIndex
2-D
displaylist,485
sections
addingdimensions to,982
addingentities,979
allocating, 973
3axistrajectorystep
features,1461
3-D
displaylist,485
3DShadedDataforRendering, 492
3DTransformation Set
features,1057
7-bitASCII
definition, 2171
8-bitASCIIxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaddingentities,979
allocating, 973
3axistrajectorystep
features,1461
3-D
displaylist,485
3DShadedDataforRendering, 492
3DTransformation Set
features,1057
7-bitASCII
definition, 2171
8-bitASCII
definition, 2171
A
Access
materialdata,117
menubuttons,329
parameters, 210
toexplodestates,1123
Accessing
CreoSimulateItems,1829
Accessory
window,471
Accuracy
ofsolids,105
Actionfunctions
forvisits,62
Actions
adding,299
Activateexplodestate,1123
window,473
Add
actiontoCreoParametric Ribbon,
299
animation framestoamovie,531
animation objectstoframes,529
dimensions toa2-Dsection,982
externalobjectdata,2002
familytableitems,232
itemstolayers,84
menubuttons,319
sectionentities,979
addorupdate,28
AddingaCustomized Functiontothe
RelationsDialoginCreoParametric,
206
addingbuttons,302
Allocate
2-Dsections,973
displaydata,1997
externalobjectreferences, 2003
selectiondataforexternalobjects,
2000
simplified representations, 1171
textstylestructures, 589
versionstamps,82
Analyze
manufacturing model,1413xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdisplaydata,1997
externalobjectreferences, 2003
selectiondataforexternalobjects,
2000
simplified representations, 1171
textstylestructures, 589
versionstamps,82
Analyze
manufacturing model,1413
Angles
example,189
Animation, 528
batch,530
creating,529
frame
description, 528
2265movies,531
object
description, 528
single,530
Annotation
associativity
attachment, 553
position,553
Associativity, 553
converttolatestversion,549
Orientation, 550
plane
datumplane,550
flatsurface,550
flattoscreen,550
namedview,550
textstyles,549
Annotation Elements
accessing, 538
modifying, 540
parameters,assigned, 542
visiting,537
Annotation Features
creating,534
overview, 534
redefining, 535
redefining, interactive, 543
visiting,536
Annotations
accessing, 545
detailtree,544
selection,interactive, 555
APIWizard
defined,23
documentation
online,23
PDFformat,23
Applications
compiling andlinking,37
core,47
debugging, 44
programstructure,2213registering, 38
stoppingandrestarting, 42
structureof,2213
unlocking, 44xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefined,23
documentation
online,23
PDFformat,23
Applications
compiling andlinking,37
core,47
debugging, 44
programstructure,2213registering, 38
stoppingandrestarting, 42
structureof,2213
unlocking, 44
usingwithCreoParametric
TOOLKIT, 2209
Arcs
drawing,481
edges
extracting thediameter,187
representation, 2253
Argument
Management, 2026
Arrays
element
description, 750
expandable
allocating, 59
codeexample,59
freeing,59
Assemblies
activeexplodestate,1123
automatic interchange, 1125
components, 1113
assembling, 1120
assembling byfeaturecreation,
1147
deleting,1120
locating,1119
traversing, 1115
visiting,1115
coordinate systems,222
explodestates,1123
exploded,1122
flexiblecomponents, 1120
hierarchy, 1113
interference checking,196
processstep,1755
structureof,1113
Asynchronous mode
definition, 2261
full,278-279
2266 Creo®Parametric TOOLKIT User’sGuidenon-interactive, 279
Attach
features,1093
AttachGeometry
features,1065
Attachment
pointsandleaders,1268
Attributes
text,483
userxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinition, 2261
full,278-279
2266 Creo®Parametric TOOLKIT User’sGuidenon-interactive, 279
Attach
features,1093
AttachGeometry
features,1065
Attachment
pointsandleaders,1268
Attributes
text,483
user
definition, 2261
AutoRoundFeature,902
Automatic dimensioning, 979
Automatic filling
body,160
Automatic interchange, 1125
Auxiliarytools
parameters, 1416
Axes
datums
visiting,175
geometryof,189
B
Backup
model,78
Basewindow
identifier,468
Batchanimation, 530
codeexample,532
Batchmode
example,52
Batchsessions,52
Bind
evaluation functions, 2023
Bodies
creating,1039
Body
body,126,160
copy
creating,1039remove,1039
definition, 2261
Multibody, 2185
solidbody,126,160
BodyReference
body,160
BushingLoad
features,1098
Button
placing,311
Buttons
accessibility, 329
adding,319
position,486
setting,329
C
Cabling
cablegeometry, 1800
cableidentifiers, 1796
cabletypes,1796
connectivity, 1798
harnessclearance, 1800
routinglocations,1799
routingprocedure, 1801
Callbacks
externalAnalysis,2012xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxsetting,329
C
Cabling
cablegeometry, 1800
cableidentifiers, 1796
cabletypes,1796
connectivity, 1798
harnessclearance, 1800
routinglocations,1799
routingprocedure, 1801
Callbacks
externalAnalysis,2012
externalanalysisfeature,2012
forexternalobjects,2004
Child
definition, 2261
Circles
codeexample,483
Classes
externalobjects,1994
notification, 1983
Classification ofmessages
critical,284
error,284
info,284
prompt,284
Index 2267warning,284
Clear
singleanimation, 530
window,470
Clearance
harness,1800
Close
windows,472
Collection
accessfromfeatureelementtrees,
524
accessfromselectionbuffer,513
addingtotheselectionbuffer,514
interactive, 510
introduction, 509
programmatic access,514
contentsofcurvecollection, 515
contentsofsurfacecollection, 518
creationandmodification ofcurve
collections, 516
creationandmodification of
surfacecollections, 521
programmatic accesstolegacy
collection, 525
Color
changing,480
externalobjects,2000
graphics,477
map
modifying, 479
Command
adding,307
Commandsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreationandmodification of
surfacecollections, 521
programmatic accesstolegacy
collection, 525
Color
changing,480
externalobjects,2000
graphics,477
map
modifying, 479
Command
adding,307
Commands
CreoParametric
entering,335
preempting, 326
designating, 306
Compiling, 37
Complement mode
definition, 2261
Components
manufacturingtraversing, 1414
simplified representation
gathering, 1175
Composite curves
geometry, 192
visiting,178
Compound element,750
Compound menus,325
Cone,2244
Configuration file
definition, 2261
options
gettingandsetting,258
PROTKDA Toption,38
toolkit_registry_file option,38
Confirmation
usingmenubuttons,327
Connectivity
cable,1798
Connectors
finding,1790
parameters, 1791
file,1791
Constraints
Convection, 1859
Displacement, 1861
Radiation, 1860
section,974
statusvalues,974
Symmetry, 1865
Construction
statesofbodies,126
Continuity
offoreigndatumcurves,2023
Contouring tools
parameters, 1416
Contours
definition, 2261
traversal,2236
Contributing
statesofbodies,126xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxSymmetry, 1865
Construction
statesofbodies,126
Continuity
offoreigndatumcurves,2023
Contouring tools
parameters, 1416
Contours
definition, 2261
traversal,2236
Contributing
statesofbodies,126
Conventional milling
2268 Creo®Parametric TOOLKIT User’sGuiderequiredparameters, 1426
Conversion
OHandles toDHandles, 57
paths,2213
techniques, 2210
Convert
ProExttoProModelitem, 1995
toolkitapplications, 2209
Convertannotation tolatestversion,
549
Coonspatch,2247
Coordinate SystemTransformations,
223
Coordinate systems,221
datum,223
visiting,175
definition, 2261
drawing,222
drawingview,222
inassemblies, 222
screen,221
section,223
solid,221
window,222
Copy
model,78
Copying
sections,974
Cosmeticproperties, 487
CosmeticThread
features,1102
Create
2-Dsections,972
codeexample,986
animation movies,531
animation objects,529
batchanimation
example,532
body,126
compound menus,325
conventional millingsequence,1430
crosssections,244datumplanes
codeexample,764
displaylists,485
drawingviews,1222xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxanimation objects,529
batchanimation
example,532
body,126
compound menus,325
conventional millingsequence,1430
crosssections,244datumplanes
codeexample,764
displaylists,485
drawingviews,1222
externalobjectclasses,1994
externalobjectentities,1997
externalobjectreferences, 2003
externalobjects,1994
codeexample,2006
familytableinstances,230
features,749
filepaths,259
fixtures,1423
layers,84
localgroups,144
manufacturing features,1422
manufacturing objects,1416
manufacturing operations, 1425
material,117
materialremovalvolumes,1430
menus,321
NCsequences, 1426
operations
elements,1425
patterns,969
elementtree,948
processsteps,1757
relationsets,203
sectionmodels,972
simplified representations, 1171
solidbody
elementtree,1039
solidobjects,92
submenus, 327
sweeps,1025
TaskLibraries,2027
tooltables,1423
ToolkitDLL
TaskLibraries,2027
tools,1416
elements,1416
window,472
Index 2269workcells, 1423
elements,1423
Creating
3Dshadeddataforrendering, 492
creatinggeometric tolerance,611xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtooltables,1423
ToolkitDLL
TaskLibraries,2027
tools,1416
elements,1416
window,472
Index 2269workcells, 1423
elements,1423
Creating
3Dshadeddataforrendering, 492
creatinggeometric tolerance,611
CreoModelCHECK, 264
running,264
CreoParametric
commands
entering,335
preempting, 326
connecting toaprocess,276
licensedata,259
processstatus,277
startingandstopping,276
CreoParametric TOOLKIT
actions,25
application structure,2213
converting fromPro/DEVELOP,
2209
coordinate systems,221
coreapplications, 47
documentation
online(APIWizard),23
PDFformat,23
expandable arrays,59
functions
compared toPro/DEVELOP,
2211
includefiles,47
Installation, 28
installing, 27
addorupdate,28
loadpointdirectories, 27
testof,29
models,70
objects,25
registryfile
compared toPro/DEVELOP,
2212
terminologycontrasted withPro/DEVELOP,
2210
usingabatchsession,52
utilityfunctions, 257
CreoSimulate
Accessing
AutoGEM Maximum Element
SizeMeshControlData,1930
Displacement Coordinate System
Data,1932
EdgeDistribution MeshControlxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2210
usingabatchsession,52
utilityfunctions, 257
CreoSimulate
Accessing
AutoGEM Maximum Element
SizeMeshControlData,1930
Displacement Coordinate System
Data,1932
EdgeDistribution MeshControl
Data,1930
MeshControlElementSizeData,
1932
MeshControlHardPointData,
1933
MeshControlIDOffsetData,
1933
MeshControlNumbering Data,
1934
MeshControlShellCoordinate
SystemData,1933
Suppressed MeshControlData,
1934
AutoGEM EdgeDistribution, 1927
BeamOrientations, 1884
BeamReleases,1887
BeamSection
General,1882
Sketched,1881
BeamSections,1877
Beams,1868,1871
Constraint Sets,1866
Constraints, 1856
Environment, Entering,1827
Features,1939
Functions, 1835
Gaps,1920
Geometric References, 1831
Interfaces, 1913
LoadSets,1855
Loads,1843
2270 Creo®Parametric TOOLKIT User’sGuideMass
Properties, 1895
MassItems,1892
MaterialAssignment, 1897
MaterialOrientations, 1898
MatrixFunctions, 1867
MeshControl,1922
ShellPairs,1910
ShellProperties, 1904
Shells,1902
SpringItems,1888
SpringPropertyItems,1890xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxMassItems,1892
MaterialAssignment, 1897
MaterialOrientations, 1898
MatrixFunctions, 1867
MeshControl,1922
ShellPairs,1910
ShellProperties, 1904
Shells,1902
SpringItems,1888
SpringPropertyItems,1890
VectorFunctions, 1867
Welds,1935
Y-directions, 1834
CreoSimulateFeatures,1939
CreoSimulateItems
Accessing, 1829
Selection, 1828
CreoSimulateObjects
Validation,1939
creotk.dat file,33
Crosssectioncomponents
linepatterns,251
Crosssections
creatingandmodifying, 244
deleting,244
geometryof,240
listing,240
massproperties of,250
visiting,244
Current
directory,259
drawingsheet,1212
ProMaterialCurrentGet(), 117
ProMaterialCurrentSet(), 117
window,471
Curves
datastructures, 2253
datum
parametric equations, 186
visiting,177definition, 2261
evaluating, 183
foreigndatum,2021
Customized plotdriver,730
Cutout,1125
Cylinders, 2243
splinesurfaces,2251
tabulated,2246
D
Data
externalobject,1996
material,117
types,2213
Datamenus,328
Datatypes
Pro/DEVELOP versusCreo
Parametric TOOLKIT, 2213
Database
search,1432xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxCylinders, 2243
splinesurfaces,2251
tabulated,2246
D
Data
externalobject,1996
material,117
types,2213
Datamenus,328
Datatypes
Pro/DEVELOP versusCreo
Parametric TOOLKIT, 2213
Database
search,1432
Databaseitems
conversion paths,2213
Datum
axes
visiting,175
coordinate systems
visiting,175
curves
geometry, 191
parametric equations, 186
visiting,177
planes
creating,764
geometry, 189
visiting,176
points
geometry, 191
visiting,179
surfaces
geometry, 191
visiting,176
Datumaxis
Index 2271creating,819
normalplanes,824
pointonsurface,819
tangent,820
throughedgeorsurface,823
twoplanes,823
twopoints,824
Datumcoordinate system
creating,830
featureelementtree,825
orientingbyselectingcsysaxes,832
orientingbyselectingreferences,
831
using3Planesor2edgesandaxes,
830
usingacsys,832
usingavertexoradatumpoint,831
usingcurve,edges,orplaneand
axis,831
Datumplane
creating,796
featureelementtree,793
Datumpoint
atanoffset,812
atcenterofcurveorsurface,816
atintersection of3surfaces,814xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusingavertexoradatumpoint,831
usingcurve,edges,orplaneand
axis,831
Datumplane
creating,796
featureelementtree,793
Datumpoint
atanoffset,812
atcenterofcurveorsurface,816
atintersection of3surfaces,814
atintersection ofacurveanda
surface,815
featureelementtree,804
field,806
general,808
offsetcsys,806
onavertex,812
oncurve,816
on/offsetfromaSurface,814
projectonplanarsurface,datum
plane,datumaxis,linearcurve,or
linearedge,817
sketched,804
DatumTargetAnnotation Features
creating,534
DatumTargetscreating,536
Debugging
applications, 44
Defaultvalues,286
constant,286
intextbox,286
variable,286
Delete
animation frames,529
animation objects,529
body,126
crosssections,244
displaylists,485
externalobjectclasses,1994
externalobjects,1994
features,137,1120
layers,84
materialdata,117
menus,321
models,78
pattern,143
relationsets,203
sectiondimensions, 982
sectionentities,979
simplified representations, 1171
windows,472
DeletingCableSectionsCable
Delete,1802
Density,116
parts,116xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmenus,321
models,78
pattern,143
relationsets,203
sectiondimensions, 982
sectionentities,979
simplified representations, 1171
windows,472
DeletingCableSectionsCable
Delete,1802
Density,116
parts,116
ProSolidBodyDensityGet(), 114
Deny
constraints, 974
Designintent
defined,1128
DesignManager
assemblycomponent functions,
1131
assemblystructure
designintent,1128
populating, 1129
2272 Creo®Parametric TOOLKIT User’sGuideexternalreferencedatagathering
functions, 1135
externalreferencefunctions, 1131
externalreferences, 1129
Overview, 1127
partinterdependencies, 1129
productstructure,1128
skeletonmodelfunctions, 1130
skeletonmodels,1128
Designate
parameters, 216
Designating
command, 308
commands, 306
Designating commands, 306
Detailitems,1234
attachment points,1268
leaders,1268
DetailTree,544
DHandles
description, 57
Diameter
codeexample,187
Dimension
cleanup,568
entitylocation,574
references, 567
text,572
tolerances, 568
Dimension-driven patterns,952
Dimensions, 556
addingtoa2-Dsection,982xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdescription, 57
Diameter
codeexample,187
Dimension
cleanup,568
entitylocation,574
references, 567
text,572
tolerances, 568
Dimension-driven patterns,952
Dimensions, 556
addingtoa2-Dsection,982
designating, 555
driven
accessing, 579
extracting location,573
feature,142
modifying, 561
reference
accessing, 579
section,982
visiting,556Directories
changing,259
Display
displaylists,485
files,259
graphics,481
highlighting, 503
messages, 281
objects,477
solidobjects,94
text,483
Displaydata
allocating, 1997
color,2000
forexternalobjects,1997
linestyles,2000
properties, 1999
scale,2000
Displaylists,485
definition, 2261
Displaymodes,555
Displayed entities
visiting,89
Distance
gatheringby,1177
minimum, 184
DLLmode
registryfilefor,38
Documentation
seeAPIWizard,23
Domainofevaluation, 2241
Draft
entities,1234
definition, 2261
group
definition, 2261
groups,1234
DraftFeature
creation,879,886
inquiring,880,886
Draw
graphics,481
Index 2273Drawing
coordinate system,222
detailitems,1234
edges,1266xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentities,1234
definition, 2261
group
definition, 2261
groups,1234
DraftFeature
creation,879,886
inquiring,880,886
Draw
graphics,481
Index 2273Drawing
coordinate system,222
detailitems,1234
edges,1266
displayproperties, 1266
ProDrawingEdgeDisplay, 1266
format,1212
formatsize,1215
models,1216
codeexample,1223
rubber-bandlines
example,487
sheets,1212
example,1212
symbolgroups,1264
transformations, 225
views,1216
codeexample,1223
creating,1222
Drawingsymbolgroups,1264
Drawings
accessgridlocations,1211
creating,fromtemplates, 1207
errorsdiagnosing, 1208
setup,1209
E
ECADAreaFeature
ProEcadArea.h, 1108
Edgeandcurvedatastructures, 2253
Edges
definition, 2261
evaluating, 183
gettingthedescription of,186
parametric equations, 186
traversing, 2236
Edit
files,259
EditMenuFeatures
Merge,848
Elementtreefirstfeatures,1017
ElementTree
bodycopyfeatures,1040
bodyoptions,1039
bodyremovefeatures,1044
bodysplitfeatures,1041
booleanbodyoperations, 1045
extrudedfeatures,997
revolvedfeatures,1008xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxElementtreefirstfeatures,1017
ElementTree
bodycopyfeatures,1040
bodyoptions,1039
bodyremovefeatures,1044
bodysplitfeatures,1041
booleanbodyoperations, 1045
extrudedfeatures,997
revolvedfeatures,1008
Elementtrees
description, 750
patterns,948
Elements
definition, 2261
inanelementtree,750
paths,757
roles,750
types,750
typesof,750
values,750
Enter
CreoSimulateEnvironment, 1827
Entities
addingto2-Dsections,979
definition, 2261
Epsilon
specifying, 976
Equations
geometry, 185
parametric, 186
ofsurfaces,187
Erase
familytableinstances,230
familytables,229
Errors,27
section,985
Evaluation
definition, 2261
domainof,2241
functions
forforeigndatumcurves,2021
inverse,184
2274 Creo®Parametric TOOLKIT User’sGuideoffaces,edges,andcurves,183
ofgeometry, 182
ofrelations,203
Example
creatingadatumaxis,819
creatingadatumcoordinate system,
830
creatingadatumplane,796
creatingafielddatumpoint,806
creatingasketcheddatumpoint,805
creatinganoffsetcsysdatumpoint,
808
creatinggeneraldatumpoint,811xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreatingadatumcoordinate system,
830
creatingadatumplane,796
creatingafielddatumpoint,806
creatingasketcheddatumpoint,805
creatinganoffsetcsysdatumpoint,
808
creatinggeneraldatumpoint,811
offsetcoordinate systemdatum,
2015
EXample
weldcallbacknotification, 1823
Examples
3Dshadeddataforrendering, 494
addinghelptext,319
addingitemstoalayer,89
addingsurfacestoanelement,1429
askingforconfirmation onQuit
Window,327
batchmode,52
calculating themassproperties ofa
crosssection,250
computing theoutlineofasolid,
105,117
creatinga2-axislatheworkcell,
1425
creatingabatchanimation, 532
creatingaconventional milling
sequences, 1430
creatingadatumplane,764
creatingamenuthatselectsavalue,
325
creatingaparameter tree,1421
creatingaparameter- driventool,
1420
creatingasection,986
creatingasweep,1034creatingatoolfromasolidmodel,
1420
creatinganexternalobject,2006
creatinganextrudedfeature,1007
creatinganoperation, 1426
creatingdrawingviews,1223
defininganewmenuthatcloses
itself,322xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1420
creatinganexternalobject,2006
creatinganextrudedfeature,1007
creatinganoperation, 1426
creatingdrawingviews,1223
defininganewmenuthatcloses
itself,322
defininganewmenuthattheuser
mustclose,323
designating acommand, 311
displayobjects,494
displaying asolid,94
displaying linesandcircles,483
displaying messages, 286
drawingarubber-bandline,487
extracting thediameterofanarc
edge,187
findingthehandletoamodel,72
findingthepositionofacomponent,
1119
findingthesurfacepenetrated bya
hole,174
gettingtheangleofaconical
surface,189
identifying workcellfeaturesofa
NCmodel,1415
interference checkingforassemblies
andparts,196
labelingafeaturewithastring
parameter, 216
listingtheholesinamodel,62
listingthemembersofanassembly,
1119
listingviews,1220
loadinganddisplaying asolid,94
menufile,318
modifying colors,480
renamingaselectedsurface,82
retrievingkeyboardinput,286
savingviews,477
Index 2275transforming solidcoordinates, 224-
225
usinganewmenu,324
usingdrawingsheets,1212xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmenufile,318
modifying colors,480
renamingaselectedsurface,82
retrievingkeyboardinput,286
savingviews,477
Index 2275transforming solidcoordinates, 224-
225
usinganewmenu,324
usingdrawingsheets,1212
usingexpandable arrays,59
visitingtheitemsinasimplified
representation, 1173
writingafamilytabletoafile,232
Exitactions
defining,323
Expandable arrays,59
allocating, 59
codeexample,59
freeing,59
Expanding
lightweight graphicssimplified
representati, 1170
Explodestates
access,1123
activating, 1123
visiting,1123
Explodedassemblies, 1122
Export
2DModels,653
3DModels,664
FEAmesh,1960
information files,650
Shrinkwrap Models,680
ToPDFformat,684
Exporting LODs
JTformat,677
Externalanalysis
attributes
getandset,2017
PROANAL YSIS_COMPUTE_
OFF,2017
callbacks, 2012
defined,2010
entityshapeunion,2015
entitytypeenum,2015
featureparameter structure,2015
geometryitemstructure,2015interactive creation,2010
usewithoutCreoParametric, 2018
Externalanalysisfeature
defined,2010
interactive creation,2011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxentitytypeenum,2015
featureparameter structure,2015
geometryitemstructure,2015interactive creation,2010
usewithoutCreoParametric, 2018
Externalanalysisfeature
defined,2010
interactive creation,2011
storageasfeaturedimensions or
geometryreferences, 2011
usewithoutCreoParametric, 2018
whenstoredasexternaldata,2011
Externaldata,233
retrieving, 237
slots,234
storing,235
Externalobjects
callbacks, 2004
classes,1994
color,2000
creatingentities,1997
data,1996
manipulating, 2002
displaydata,1997
allocating, 1997
properties, 1999
displaying, 1997
identifiers, 1995
information for,1993
linestyles,2000
parameters, 1995
recyclingidentifiers, 1995
references, 2003
creating,2003
types,2003
visiting,2004
scale,2000
selectiondata,2000
summary, 1993
transformation, 1998
types,1995
visiting,1996
warningmechanism, 2006
Externalreferences
defined,1129
2276 Creo®Parametric TOOLKIT User’sGuideF
Facemilling
requiredparameters, 1426
Faces
definition, 2261
evaluating, 183
traversal,2236
Familytablesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxwarningmechanism, 2006
Externalreferences
defined,1129
2276 Creo®Parametric TOOLKIT User’sGuideF
Facemilling
requiredparameters, 1426
Faces
definition, 2261
evaluating, 183
traversal,2236
Familytables
editing,229
instances
creating,230
erasing,230
generic,230
locks,230
operations, 230
retrieving, 230
items
frommodelitems,232
fromparameters, 232
operations on,232
objects,229
showing,229
utilities,229
visiting,229
writingtoafile,232
Feature
extruded
creating,1007
Featureelementtree
datumaxis,818
datumcoordinate system,825
datumplane,793
datumpoint,804
fielddatumpoint,806
generaldatumpoint,808
merge,849
offsetcsysdatumpoint,806
sketcheddatumpoint,804
FeatureElementTreefortheSheet
metalFlatWallFeatureinCreo
Parametric, 1296
Features3axistrajectorystep,1461
3Dtransformation set,1057
attach,1093
Attach
access,870
create,869
redefine,870
attachgeometry, 1065
AutoRound,902
bushingload,1098
chamfer,903
access,911
create,909
featureelementtree,903
redefine,910
converting fromPro/DEVELOP toxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAttach
access,870
create,869
redefine,870
attachgeometry, 1065
AutoRound,902
bushingload,1098
chamfer,903
access,911
create,909
featureelementtree,903
redefine,910
converting fromPro/DEVELOP to
CreoParametric TOOLKIT,2213
cornerchamfer,915
access,916
create,916
featureelementtree,915
redefine,916
cosmeticthread,1102
creating,749
assemblycomponents by,1147
codeexample,764
datums,764
steps,750
datumcoordinate system,825
datumplane,793
datumpoint,804
deleting,137,1120
dimensions, 142
draft
access,880,886
create,879,886
featureelementtree,874
introduction, 874
redefine,880,886
ECADArea,1108
featureelementtree,1108
ProEcadArea.h, 1108
Index 2277elementtable,750
elementtree,750
elementvalues,750
elements
creating,759
manipulating, 759
paths,757
values,755
fill,846
access,848
create,847
featureelementtree,846
redefine,847
finishingstep,1451
geometry, 137
visiting,171
incomplete, 764
description, 131
inquiry,131
detailedexplanation, 771
intersect,848
manipulating, 137
manufacturingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfeatureelementtree,846
redefine,847
finishingstep,1451
geometry, 137
visiting,171
incomplete, 764
description, 131
inquiry,131
detailedexplanation, 771
intersect,848
manipulating, 137
manufacturing
analyzing, 1430
creating,1422
merge
access,851
Merge,848
access,851
create,850
featureelementtree,849
ProMerge.h,849
redefine,850
mirror,841,1086
access,843
create,842
featureelementtree,841
redefine,842
modifyanalyticsurface,1078
move,843,1051
access,846
create,845featureelementtree,844
redefine,846
move-copy, 1051
objects,131
offset,857
offsetgeometry, 1076
pattern,851
patterns,142
creating,948
planarsymmetry recognition, 1091
processsteps,1756
redefining, 137
Remove,863
access,868
create,867
featureelementtree,864
ProRemoveSurf.h, 864
redefine,868
roughingstep,1440
round,888
access,900
create,898
featureelementtree,889
redefine,899
selecting,131
Shell
access,946
create,945
featureelementtree,944
introduction, 942
ProShell.h, 944
redefine,946
solidify,860
access,863,868
create,862xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcreate,898
featureelementtree,889
redefine,899
selecting,131
Shell
access,946
create,945
featureelementtree,944
introduction, 942
ProShell.h, 944
redefine,946
solidify,860
access,863,868
create,862
featureelementtree,860
redefine,862,868
status,131
substitute, 1088
suppressing, 137
sweeps,1025
thicken,857
2278 Creo®Parametric TOOLKIT User’sGuideaccess,859
create,859
featureelementtree,858
redefine,859
trim,851
access,857
create,856
featureelementtree,852
redefine,857
tweaksurfacereplacement, 871
types,131
user-defined, 145
visiting,131
workcell
identifying, 1415
wrap,851
FEM
exportinganFEAmesh,1960
overviewoffunctionality, 1960
Files
connector parameters, 1791
displaying, 259
editing,259
include,47
management
operations, 78
material,123
maximum length,317
menu,317
message,282
namingrestrictions, 282
opening,259
parsing,259
trail,259
writingafamilytableto,232
Filletsurfaces,2248
Filterfunctions
forvisits,62
Finishingstep
features,1451
Fixtures
creating,1423Flexiblemodelingxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnamingrestrictions, 282
opening,259
parsing,259
trail,259
writingafamilytableto,232
Filletsurfaces,2248
Filterfunctions
forvisits,62
Finishingstep
features,1451
Fixtures
creating,1423Flexiblemodeling
tangencypropagation, 1081
Fluid
materialproperties, 117
Flushing
displaycommand towindow,474
Fonts,484
Foreigndatumcurves,2021
continuity, 2023
evaluation functionfor
binding,2023
evaluation functionsfor,2021
Foreignprograms
running,2194
multiple,2194
Free
externalobjectdata,2002
externalobjectreferences, 2003
textstylestructure,589
versionstamp,82
Fullasynchronous mode,278
Functions
action,62
comparing toolkits,2211
errorstatuses,27
filter,62
listofequivalent, 2221
prototyping, 26
usingexpandable arrays,59
visit,62
G
Gather
bydistance,1177
bymodelname,1175
byparameters, 1176
byrule,1175
bysimplified representation, 1177
bysize,1177
byzone,1176
Generalprocesssteps,1759
Index 2279Generalsurfaceofrevolution, 2245
Genericinstances,230
geometric tolerance
creating,611
reading,607
setting,611xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbysize,1177
byzone,1176
Generalprocesssteps,1759
Index 2279Generalsurfaceofrevolution, 2245
Genericinstances,230
geometric tolerance
creating,611
reading,607
setting,611
Geometry
bodies,190
body,190
cables,1800
composite curves,192
coordinate systemdatums,189
cross-sectional, 240
datumaxes,189
datumcurves,191
datumplanes,189
datumpoints,191
datumsurfaces,191
equations, 185
evaluating, 182
feature
visiting,171
measurement of,193
NURBS,196
objects,169
visiting,170
ofsolidedges,186
ofsurfaces,187
quilts,190
representations, 2240
solid
visiting,173
terms,2236
traversal,2235
Geometry patterns
recognition, 966
Graphics
colorandlinestyles,477
colormap,479
displaying, 481
linestyles
setting,481survivingarepaint,485
Groups,145
drawingsymbol,1264
identifying symboldefinition, 1265
Identifying symbolinstance,1264
local,144
manipulating symbols,1265
readaccess,145
gtol
additional text,618
deleting,617
layout,617
parameters, 621
prefix,620
suffix,620
textstyleproperties, 619
validating, 617
Hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxlocal,144
manipulating symbols,1265
readaccess,145
gtol
additional text,618
deleting,617
layout,617
parameters, 621
prefix,620
suffix,620
textstyleproperties, 619
validating, 617
H
Handles
data,57
description, 56
object,56
Pro/DEVELOP versusCreo
Parametric TOOLKIT, 2213
workspace, 59
Hardware type
setting,65
Harnesses
clearance, 1800
connectors, 1790
Height
text,483
Highlight, 503
definition, 2261
menubuttons,329
Highlighting
functionsdescribed, 503
Holemaking
requiredparameters, 1426
toolparameters, 1416
Holes
2280 Creo®Parametric TOOLKIT User’sGuidecodeexample,62
I
Identifiers
cable,1796
externalobject,1995
postfix,116
recycling, 1995
Identifying
symbolgroups
definition, 1265
instance,1264
Identitymatrix
usedwithexternalobjects,1998
Import
2DModels,694
3DModels,695
Parameter Files,692
Includefiles,47
Incomplete features
description, 131
Information window
definition, 2261
displayfunction,259
Initialize
assemblycomponent paths,1115
familytables,229
processstepfeatures,1756xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxIncludefiles,47
Incomplete features
description, 131
Information window
definition, 2261
displayfunction,259
Initialize
assemblycomponent paths,1115
familytables,229
processstepfeatures,1756
singleanimation, 530
tool,1416
Input
defaultvalues,286
keyboard, 285
mouse,486
Inquiry
features,131
Insertmode,137
Install
CreoParametric TOOLKIT,27
SeeCreoParametric TOOLKIT
Installing, 27
InstallationSeeCreoParametric TOOLKIT
Installing, 27
Installing, sampleapplications, 2200
Instances
identifying symbolgroups,1264
Integer
freearray,264
Interactive selection,499
Interchange domain,1125
Interface
tools,730
Interference, 196
Internalbuffer
writingamessageto,285
intersect
booleanbodyoperations, 1045
Intersect
body,126
Inverseevaluation, 184
ISO/DINTolerance,use,571
J
JTformat
exportingLODs,677
K
Keyboard
input,338
defaultvalues,286
getting,285
macros
executionrules,336
L
Launch
Synchronous J-LinkApplications,
2033
ToolkitDLLFunctions, 2028
Layers,84
creating,84
Index 2281deleting,84
getting,84xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxinput,338
defaultvalues,286
getting,285
macros
executionrules,336
L
Launch
Synchronous J-LinkApplications,
2033
ToolkitDLLFunctions, 2028
Layers,84
creating,84
Index 2281deleting,84
getting,84
items,84
viewdependency, 84
visiting,84
Leaders
definitioninglossary,2261
patterns,143
LegacyEncoding
definition, 2171
Libraries
alternate,2198
MT,forWindows,2198
standard,2198
Licensedata,259
Lightsources,491
Lightweight graphicssimplified
representations
expanding, 1170
retrieving, 1170
Line
styles
ofexternalobjects,2000
Lines
codeexample,483
drawing,481
representation, 2253
styles,477
setting,481
types,481
Linking,37
Loaddirectory
definition, 2261
Loads
Bearing,1848
Centrifugal, 1849
CreoSimulate,1843
ForceandMoment,1846
Gravity,1848
Heat,1854
Pressure,1848
Temperature, 1850CreoSimulate,1850
External,1853
Global,1852
MEC/T,1852
Structural, 1851
LoadsandConstraints
CreoSimulate,1839
Localgroups,144
Locations
ofassemblycomponents, 1119
routing,1799
Locks,230
M
Macrokeys
definition, 2261
main()xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGlobal,1852
MEC/T,1852
Structural, 1851
LoadsandConstraints
CreoSimulate,1839
Localgroups,144
Locations
ofassemblycomponents, 1119
routing,1799
Locks,230
M
Macrokeys
definition, 2261
main()
user-supplied, 55
Makefiles
description of,37
Management
Argument,2026
Memory,2027
Manipulating symbolgroups,1265
Manufacturing
analyzingamodel,1413
components
roles,1414
traversing, 1414
features
analyzing, 1430
creating,1422
fixtures,1423
models
create,1412
types,1411
NCsequences, 1426
objects
creating,1416
operations
creating,1425
2282 Creo®Parametric TOOLKIT User’sGuideparameters, 1420
roles,1414
storagesolids
identifying, 1414
tools
creating,1416
types,1415
visiting,1415
workcells
creating,1423
Massproperties, 114
definition, 2261
example,250
ofcrosssections,250
Materials
data
accessing, 117
files,123
properties, 117
removalvolumes
creating,1430
Matrix
definition, 2261
panandzoom,474
window,474
Maximum length
offiles,317
Measurement, 193
Memory
Management
TaskLibraryFunctions, 2027xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfiles,123
properties, 117
removalvolumes
creating,1430
Matrix
definition, 2261
panandzoom,474
window,474
Maximum length
offiles,317
Measurement, 193
Memory
Management
TaskLibraryFunctions, 2027
maximum allocatedby
ProArrayAlloc, 59
Menu
buttons,298
pushbutton
adding,299
Menus
buttons
accessibility, 329
adding,319
locations,327setting,329
compound
creating,325
creating
exitactions,321
forselectingasinglevalue,324
preempting existingcommands,
326
datamenus,328
definition, 2261
exitactions,321
files
definition, 2261
namesandcontents,317
purpose,317
sample,318
submenus, 327
syntax,318
toolkit,2213
main
definition, 2261
manipulating, 327
accessibility ofbuttons,329
datamenus,328
settingbuttons,329
new
creating,321
defining,322
using,323
pushingandpopping,330
run-time,330
submenus, 327
definition, 2261
merge
booleanbodyoperations, 1045
Merge,1125
body,126
MergeFeature,848
ProMerge.h,849
Message
classification of,284
Messagefile
Index 2283definition, 2261
restrictions, 282
Messagesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinition, 2261
merge
booleanbodyoperations, 1045
Merge,1125
body,126
MergeFeature,848
ProMerge.h,849
Message
classification of,284
Messagefile
Index 2283definition, 2261
restrictions, 282
Messages
classification of
critical,284
error,284
info,284
prompt,284
warning,284
file,282
files
toolkit,2213
Millingtools
parameters, 1416
Mirror
features,1086
Modelcoordinates
definition, 2261
Modelitems
definition, 2261
description, 80
names,80
Modelproperties
surface,75
Models,70
definition, 2261
drawing,1233
filemanagement operations, 78
findingthehandle
example,72
identifying, 72
insession,77
names
gatheringby,1175
orientation, 474
section,972
Modes,35
complement
definition, 2261
description, 70
set
definition, 2261Modify
colors
example,480
crosssections,244
simplified representations, 1173
ModifyAnalyticSurface
features,1078
Mouse
input,486
positions
example,487
Move,Move-Copy
features,1051
Movies
animation, 531
Multi-CAD Assemblies
functionalities notsupported, 747
newfunctions, 739xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxModifyAnalyticSurface
features,1078
Mouse
input,486
positions
example,487
Move,Move-Copy
features,1051
Movies
animation, 531
Multi-CAD Assemblies
functionalities notsupported, 747
newfunctions, 739
overview, 734
restrictions oncharacters length,743
superseded functions, 741
supportforcharacters infilenames,
735
supportforfilenames,735
supported functionalities, 736
Multi-Threaded (MT)DLLLibraries,
2198
Multibody
body,126,160
ProSolidBodyStateGet(), 126
statesofbodies,126
Multibyte String
definition, 2171
Multiprocess mode
registryfilefor,38
Multivalued element,750
N
Names
simplified representations, 1172
Namingconventions, 25
2284 Creo®Parametric TOOLKIT User’sGuideNativeEncoding
definition, 2171
NCsequences
creating,1426
NoGeometry
statesofbodies,126
Notebook, 89
Notes,586
detailitems,1234
Properties, 586
textstyles,589
visiting,589
Notify
classes,1983
definition, 2261
NURBS,196
representation, 2254
surface,2250
O
Object
ProDtlitem, 1234
Objecthandle
ProDtlentity, 1234
ObjecthandlesxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProperties, 586
textstyles,589
visiting,589
Notify
classes,1983
definition, 2261
NURBS,196
representation, 2254
surface,2250
O
Object
ProDtlitem, 1234
Objecthandle
ProDtlentity, 1234
Objecthandles
ProDtlentity, 1234
ProDtlgroup, 1234
ProDtlnote, 1234
ProDtlsymdef, 1234
ProDtlsyminst, 1234
Object,ProDimension, 556
Objects
definition, 2261
displaying, 477
external,1993
handles,56
namingconventions, 25
ProSelection
defined,496
selecting,496
OffsetGeometryfeatures,1076
OHandles
converting toDHandles, 57
description, 56
ProView,1216
Opaquepointers,56
Operations
creating,1425
example,1426
Options
configuration file
gettingandsetting,258
Orientation
model,474
Outlines
codeexample,105,117
ofsolids,105
Overlayviews
definition, 2261
Owners
externalobject,1994
window,473
P
Panandzoommatrix,474
Parameters
accessing, 210
codeexample,216
connector, 1791
conventional milling
required,1426
creatingaparameter tree,1421
definition, 2261
externalobjects,1995
forauxiliarytools,1416xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxParameters
accessing, 210
codeexample,216
connector, 1791
conventional milling
required,1426
creatingaparameter tree,1421
definition, 2261
externalobjects,1995
forauxiliarytools,1416
forcontouring tools,1416
forfacemilling,1426
forholemaking tools,1416
formillingtools,1416
forturningtools,1416
fromfamilytableitems,232
Index 2285gatheringby,1176
holemaking
required,1426
manufacturing, 1420
utilityfunctions, 210
values,210
Parent
definition, 2261
Parse
filenames,259
Parts,116
density,116
interference checking,196
materialproperties, 117
postfixidentifiers, 116
traversing, 170
Paths
featureelement,757
Pattern
axispatterns,959
patterns
tablepatterns,954
Patterns,142
attachment options,962
creating,948
example,969
curvepatterns,960
dimension patterns,952
directionpatterns,956
elementtree,948
getting,969
fillpatterns,955
Filltype,143
leaders,143
manipulating, 142
NCSequencePattern,964
pointpatterns,961
recognition, 966
referencepatterns,952
referenceselection,962
table-drivenxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxgetting,969
fillpatterns,955
Filltype,143
leaders,143
manipulating, 142
NCSequencePattern,964
pointpatterns,961
recognition, 966
referencepatterns,952
referenceselection,962
table-driven
creating,954types,948
PlanarSymmetry Recognition
features,1091
Planes,2242
Play
singleanimation, 530
Plotdriver,730
Points
datum,179
Polygons, 481
Polylines, 481
PopupMenu
AddingtotheGraphicsWindow,
312
Checkingaccessstate,314
UsingTrailfilestodetermine
names,312
Popupmenus
Adding,314
PopupMenus,311
Accessing, 313
Creatingcommands fornewbuttons,
314
Registering Notifications tocreate
anddestroymenus,313
Postfixidentifiers, 116
Preempt
CreoParametric commands, 326
PRO_DRA WING_WELD_
GROUPIDS_GET
weldsymbolnotification type,1823
PRO_DRA WING_WELD_
SYMPATH_GET
weldsymbolnotification type,1823
PRO_DRA WING_WELD_
SYMTEXT_GET
weldsymbolnotification type,1823
PRO_E_CUR VE_CONTINUITY
element,2023
PRO_FEA T_ASSEM_CUT, 1113
PRO_FEA T_COMPONENT, 1113
pro_get_selection() functionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_DRA WING_WELD_
SYMTEXT_GET
weldsymbolnotification type,1823
PRO_E_CUR VE_CONTINUITY
element,2023
PRO_FEA T_ASSEM_CUT, 1113
PRO_FEA T_COMPONENT, 1113
pro_get_selection() function
2286 Creo®Parametric TOOLKIT User’sGuideguidelines, 2213
pro_select() function
guidelines, 2213
options,2213
pro_set_and_get_selection() function
guidelines, 2213
pro_show_select() function
guidelines, 2213
Pro/DEVELOP
conversion paths,2213
converting from,2209
converting toCreoParametric
TOOLKIT, 2209
enumerated types,2213
functions
compared toCreoParametric
TOOLKIT, 2211
listofequivalent functions, 2221
relationship withCreoParametric
TOOLKIT, 2209
Pro/MESH
functionality, 1960
ProAnalysisAttrIsSet() function
defined,2017
ProAnalysisAttrSet() function
defined,2017
ProAnalysisInfoGet function
defined,2015
ProAnalysisInfoSet function
defined,2015
ProAnalysisNameGet function
defined,2018
ProAnalysisT ypeRegister function
defined,2012
ProAnimframeCreate() function
usedinacodeexample,532xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefined,2015
ProAnalysisInfoSet function
defined,2015
ProAnalysisNameGet function
defined,2018
ProAnalysisT ypeRegister function
defined,2012
ProAnimframeCreate() function
usedinacodeexample,532
ProAnimframeObjAdd() function
usedinacodeexample,532
ProAnimmovieCreate() function
usedinacodeexample,532
ProAnimmovieFrameAdd() function
usedinacodeexample,532ProAnimobjectCreate() function
usedinacodeexample,532
ProAppData datatype
declaration, 62
ProArgument
ArgumentManagement, 2026
description, 2026
ProArrayAlloc
maximum allocatedmemory,59
ProArrayAlloc() function
usedwithmaterialdata,117
ProAsmcomp object
description, 1113
ProAsmcomppath structure
declaration, 1113
ProAsmcomppathT rfGet()function
assemblycomponents, 1119
ProAsmcomppathT rfSet()function,
1119
ProAsmcompT ypeGet()function
usedwithmanufacturing
components, 1414
ProAssembly object
description, 1113
ProAssemblyDynPosGet() function,
1119
ProAssemblyDynPosSet() function,
1119
ProAxisobject
declaration, 56xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusedwithmanufacturing
components, 1414
ProAssembly object
description, 1113
ProAssemblyDynPosGet() function,
1119
ProAssemblyDynPosSet() function,
1119
ProAxisobject
declaration, 56
ProAxisInit() function,175
ProBatchAnimationStart() function
usedinacodeexample,532
ProBodyCopy
description, 1039
ProBodyOpts
description, 1039
ProBooleanBodies
description, 1039
Processsteps
access,1756
creating,1757
Index 2287featureelements,1758
optionalelements,1758
typesof,1758
visiting,1756
ProColorByT ypeGet,479
ProColormapGet() function
usedinacodeexample,480
ProColormapSet() function
usedinacodeexample,480
ProCsysobject
declaration, 56
ProCurveobject
declaration, 56
description, 177
ProCurveCompV isit()function
forgeometry, 192
ProCurvedata objects
usedforexternalobjects,1997
ProDisplist2dCreate() function,485
ProDisplist2dDelete() function,485
ProDisplist2dDisplay() function,485
ProDisplist3dCreate() function,485
ProDisplist3dDelete() function,485
ProDisplist3dDisplay() function,485xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProDisplist2dDelete() function,485
ProDisplist2dDisplay() function,485
ProDisplist3dCreate() function,485
ProDisplist3dDelete() function,485
ProDisplist3dDisplay() function,485
ProDrawingSheetT rfGet()
usedinacodeexample,226
Prodtl_attach structure,1268
prodtl_create() function
detailitems,1234
Prodtl_leader structure,1268
ProDtlentity
objecthandle,1234
ProDtlgroup
objecthandle,1234
ProDtlitem
object,1234
ProDtlnote
objecthandle,1234
ProDtlsymdef
objecthandle,1234
ProDtlsyminst
objecthandle,1234ProEdgeobject
declaration, 56
ProElement object
description, 750
ProElementAlloc() function
creatingtools,1416
tocreateNCsequences, 1426
ProElemId object
description, 750
ProElempath object
description, 757
ProElempathItem structure
declaration, 757
ProElemtreeElementAdd() function
addingmanufacturing elements,
1420
ProEngineerDisplaydatecodeGet()
function
description, 47
ProEngineerEnd() function
batchsession,52
ProErritemT ypeenum
declaration, 764
ProErrorreturntype
description, 27xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1420
ProEngineerDisplaydatecodeGet()
function
description, 47
ProEngineerEnd() function
batchsession,52
ProErritemT ypeenum
declaration, 764
ProErrorreturntype
description, 27
ProErrorlist declaration, 764
ProExpldstate structure
declaration, 1122
ProExtdataClass structure
description, 234
ProExtobj object,1993
ProExtobjCallbacks structure
declaration, 2004
ProExtobjClass object
description, 1994
ProExtobjdataT ypeenum
declaration, 2002
ProExtobjDispprops object
description, 1999
ProFaminstance object
description, 229
ProFaminstanceV alueGet()function
2288 Creo®Parametric TOOLKIT User’sGuideusedinacodeexample,232
ProFamtable object
description, 229
ProFamtableCheck() function
usedinacodeexample,232
ProFamtableInit() function
usedinacodeexample,232
ProFamtableInstanceV isit()function
usedinacodeexample,232
ProFamtableItem object
description, 229
ProFamtableItemV isit()function
usedinacodeexample,232
ProFeature object
description, 131
ProFeatureCreate() function
calling,764xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusedinacodeexample,232
ProFamtableItem object
description, 229
ProFamtableItemV isit()function
usedinacodeexample,232
ProFeature object
description, 131
ProFeatureCreate() function
calling,764
usedtoassemblecomponents, 1147
ProFeatureCreateOptions enum
description, 764
ProFeatureElemtreeExtract() function
withNCsequences, 1426
ProFeatureGeomitemV isit()function
tocreateanoperation, 1425
tocreateNCsequences, 1426
usedwithaxisdatums,175
usedwithcomposite datumcurves,
178
usedwithcoordinate systemdatums,
175
usedwithdatumcurves,177
usedwithdatumplanes,176
usedwithdatumpoints,179
ProFeatureStatusGet() function
possiblestatusvalues,131
ProFeatureT ypeGet()function
usedwithassemblies, 1115
ProForeignCurveEvalFunction()
typedef
description, 2021
ProGeomitem
declaration, 57description, 80
hierarchy, 169
listoftypes,169
ProGeomitemdata structure
declaration, 185
ProGeomitemFeatureGet() function
usedwithselection,2213
ProGeomitemIsInactive() function
usedwithaxisdatums,175xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxhierarchy, 169
listoftypes,169
ProGeomitemdata structure
declaration, 185
ProGeomitemFeatureGet() function
usedwithselection,2213
ProGeomitemIsInactive() function
usedwithaxisdatums,175
usedwithcoordinate systemdatums,
175
usedwithdatumcurves,177
usedwithdatumplanes,176
usedwithdatumpoints,179
usedwithquilts,176
ProGraphicsCircleDraw() function
usedinacodeexample,483
ProGraphicsColorSet() function
usedinacodeexample,483
ProGraphicsLineDraw() function
usedinacodeexample,483
ProGraphicsModeSet() function,481
usedinacodeexample,487
ProGraphicsPenPosition() function
usedinacodeexample,483
ProGraphicsPolygonDraw() function,
481
ProGtolDelete function
description, 617
ProGtolElbowlengthGet() function
description, 617
ProGtolLineEnvelopeGet() function
description, 617
ProGtolPrefixGet() function
description, 620
ProGtolPrefixSet() function
description, 620
ProGtolRightT extEnvelopeGet()
function
description, 617
ProGtolRightT extGet()function
description, 618xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProGtolPrefixGet() function
description, 620
ProGtolPrefixSet() function
description, 620
ProGtolRightT extEnvelopeGet()
function
description, 617
ProGtolRightT extGet()function
description, 618
Index 2289ProGtolRightT extSet()function
description, 618
ProGtolSuf fixGet()function
description, 620
ProGtolSuf fixSet()function
description, 620
ProGtolTextstyleGet() function
description, 619
ProGtolTextstyleSet() function
description, 619
ProGtoltextT extstyleGet() function
description, 619
ProGtoltextT extstyleSet() function
description, 619
ProGtolTopTextGet()function
description, 618
ProGtolTopTextSet()function
description, 618
ProInputFileRead() function
forcableparameters, 1794
usedwithcabling,1791
ProItemerror structure
declaration, 764
ProLayerDisplay enum
description, 84
ProLinestyleSet() function
displaying graphics,481
ProMdlobject
declaration, 56
description, 70
ProMdlGtolvisit function
description, 606
ProMdlSave() function,78
ProMdlToModelitem() functionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProLinestyleSet() function
displaying graphics,481
ProMdlobject
declaration, 56
description, 70
ProMdlGtolvisit function
description, 606
ProMdlSave() function,78
ProMdlToModelitem() function
usedwithparameters, 210
ProMdlTypeGet()function
usedwithassemblies, 1115
ProMechinterfacecontactdataAlloc()
function
description, 1913
ProMenubuttonActionSet() function
usingthefinalarguments,324ProMenubuttonPreactionSet() function
usedinacodeexample,327
ProMenuCreate() function
tocreatesubmenus, 327
ProMenuDelete() function
usedwithProMenuProcess(), 325
ProMenuFileRegister() function
calling,319
usedinacodeexample,327
ProMenuProcess() function
returningavaluefrom,325
ProMessageDisplay() function
usedinacodeexample,327
ProMessageStringRead() function
usedinacodeexample,327
ProMfgdbNameCreate() function
definition, 1432
ProMfgdbSearchoptCreate() function
definition, 1432
ProModeobject
description, 70
ProModeCurrentGet() function
usedinacodeexample,477
ProModelitem object
declaration, 57xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdefinition, 1432
ProMfgdbSearchoptCreate() function
definition, 1432
ProModeobject
description, 70
ProModeCurrentGet() function
usedinacodeexample,477
ProModelitem object
declaration, 57
description, 80
ProModelitemInit() function
ProCurvetoaProGeomitem, 177
ProPointtoaProGeomitem, 179
ProQuilttoaProGeomitem, 176
usedinvisits,175
usedwithparameters, 210
ProModelitemNameSet() function
usedwithProGeomitem, 169
ProMouseBoxInput() function,486
ProMousePickGet() function
usedinacodeexample,483
ProMouseT rack()function
usedinacodeexample,487
ProOutputFileMdlnameW rite()
function
forcableparameters, 1794
2290 Creo®Parametric TOOLKIT User’sGuideforcabling,651,1791
usedwithcabling,1791
ProParameter object
description, 209
ProParameter structure
declaration, 209
ProParameterSelect() function
usedwithfamilytableitems,210,
232
ProParamfrom enum
declaration, 209
ProParamowner structure
declaration, 209
ProParamvalue structure
declaration, 209
ProParamvalueT ypestructure
declaration, 209xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxusedwithfamilytableitems,210,
232
ProParamfrom enum
declaration, 209
ProParamowner structure
declaration, 209
ProParamvalue structure
declaration, 209
ProParamvalueT ypestructure
declaration, 209
ProParamvalueV aluestructure
declaration, 209
ProPattern object
description, 948
ProPatternClass object
description, 948
Properties
LoadsandConstraints, 1839
material,117
ofexternalobjectdisplay,1999
ProSolidBodyMassPropertyGet(),
114
surface,487
textstyle,590
ProPointobject
declaration, 56
ProPoint3d typedef
declaration, 223
ProProcstep structure
declaration, 1755
ProQuiltSurfaceV isit()function
forgeometry, 190
ProRelsetobject
description, 203
ProRemoveBodydescription, 1039
ProRuleEval() function
description, 1175
ProSecdimDelete() function,982
ProSecdimDiamClear
functiondefinition, 982
ProSecdimDiamInquire
functiondefinition, 982
ProSecdimDiamSet
functiondefinition, 982
ProSecerrorCount() function
usedinacodeexample,985
ProSecerrorFree() function
usedinacodeexample,985xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxProSecdimDiamInquire
functiondefinition, 982
ProSecdimDiamSet
functiondefinition, 982
ProSecerrorCount() function
usedinacodeexample,985
ProSecerrorFree() function
usedinacodeexample,985
ProSecerrorMsgGet() function
usedinacodeexample,985
ProSection2DAlloc() function
usedinacodeexample,973
ProSectionEntityAdd() function
usedinacodeexample,979
ProSectionEntityDelete() function,979
ProSectionNameGet() function,973
ProSectionNameSet() function
usedinacodeexample,973
ProSelbox object
description, 2000
ProSelect() function
arguments,499
guidelines, 2213
ProSelection, 496
compared toSelect3d,2213
object,496
ProSelectionAsmcomppathGet()
function,496
ProSelectionHighlight() function
guidelines, 2213
ProSelectionModelitemGet() function,
496
usedwithfamilytableitems,232
ProSelectionPoint3dGet() function,
496
ProSelectionUnhighlight() function
Index 2291andProSelection, 498
ProSelectionV iewGet()function,496
ProServerW orkspaceSet() function
description, 632
ProSimprep object
description, 1166xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx496
ProSelectionUnhighlight() function
Index 2291andProSelection, 498
ProSelectionV iewGet()function,496
ProServerW orkspaceSet() function
description, 632
ProSimprep object
description, 1166
ProSimprepdata structure
description, 1166
ProSimprepitem object
description, 1166
ProSolidobject
declaration, 56
ProSolidAnalysisV isitfunction
defined,2018
ProSolidBodiesCollect()
body,127
collect,127
ProSolidBody, 126
object,126
structure,126
ProSolidBody object
description, 1039
ProSolidBodyConstructionSet()
object,127
ProSolidBodyCreate()
body,127
ProSolidBodyDelete()
body,127
ProSolidBodyIsConstruction()
body(),127
ProSolidBodyIsSheetmetal()
body,127
sheetmetal, 127
ProSolidBodyOutlineGet()
body,127
ProSolidBodyStateGet()
statesofbodies,127
ProSolidBodySurfaceV isit()
body,127
ProSolidDefaultBodyGet()
body,127
ProSolidDefaultBodySet()body,127
ProSolidDisplay() function
displaylists,485
ProSolidFeatureV isit()function
defined,2018
ProSolidFeatV isit()function
explanation offeaturevisits,171xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxbody,127
ProSolidDefaultBodySet()body,127
ProSolidDisplay() function
displaylists,485
ProSolidFeatureV isit()function
defined,2018
ProSolidFeatV isit()function
explanation offeaturevisits,171
usedwithaxisdatums,175
usedwithcomposite datumcurves,
178
usedwithcoordinate systemdatums,
175
usedwithdatumcurves,177
usedwithdatumpoints,179
ProSolidRayIntersectionCompute()
function
andProSelection, 496
ProSplitBody
description, 1039
ProStringT oWstring() function
usedinacodeexample,327
ProSurfaceContourV isit()function
usedwithadatumsurface,176
ProSurfaceDataGet() function
usedwithdatumplanes,189
usedwithdatumsurfaces,191
Prototyping, 26
ProUdfCreate()
body,160
ProUdfdataRequiredreferencesGet()
body,160
ProValueobject
description, 755
ProValueDatastructure
declaration, 755
ProValueDataTypeenum
declaration, 755
ProVectortypedef
declaration, 223
Providing
icon,307
ProView
2292 Creo®Parametric TOOLKIT User’sGuidedrawingviewsandmodels,1216
ProViewMatrixGet() function
fundamental, 475xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdeclaration, 755
ProVectortypedef
declaration, 223
Providing
icon,307
ProView
2292 Creo®Parametric TOOLKIT User’sGuidedrawingviewsandmodels,1216
ProViewMatrixGet() function
fundamental, 475
ProViewMatrixSet() function
usedinacodeexample,477
ProViewReset() function,474
ProViewRotate() function,474
ProViewStore() function
usedinacodeexample,477
ProWExtobjdata object
description, 1996
ProWExtobjRef object
description, 2003
ProWindowCurrentSet() function
displaying graphics,481
ProWindowRefresh() function
anddisplaylists,485
usedinacodeexample,480
ProWindowRepaint() function
toseeanexternalobject,1997
ProWstringT oString()function
ensuringportability, 66
Pushbutton
addingtomenus,299
Pushingandpoppingmenus,330
Q
Query
features,131
Quickdrawinginstructions, 658
Quilts
geometry, 190
visiting,176
R
Rays,192
Readaccess
toweldfeatures,788,1822
Readstatus,131
readinggeometric tolerance,607
Recycleobjectidentifiers, 1995
Redefine
features,137
Reference-driven patterns,952
References
externalxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxR
Rays,192
Readaccess
toweldfeatures,788,1822
Readstatus,131
readinggeometric tolerance,607
Recycleobjectidentifiers, 1995
Redefine
features,137
Reference-driven patterns,952
References
external
defined,1129
externalobject,2003
Refresh
window,470
Regenerate
2-Dsections,976
assemblycomponents, 1141
relationsets,203
solidobjects,94
Register
applications, 38
externalobjectclasses,1994
Registryfiles,33
examples, 2194
fieldsof,2193
functions, 258
toolkit,2212
Relations, 203
Remove
animation framesfromamovie,531
animation objectsfromframes,529
body,126
externalobjectdata,2002
externalobjectreferences, 2003
familytableitems,232
highlighting, 503
windows,472
Rename
models,78
surfaces
codeexample,82
Rendering
Creating3Dshadeddata,492
Repaint
windows,470
Replace
Index 2293sectionentities,979
tweaksurfacefeatures,871
Reporting errors
forsections,985
Reposition processsteps,1759
Reset
view,474
Resolution
specifying, 976
Restart
applications, 42
Retrieve
2-Dsections,986
externaldata,237xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtweaksurfacefeatures,871
Reporting errors
forsections,985
Reposition processsteps,1759
Reset
view,474
Resolution
specifying, 976
Restart
applications, 42
Retrieve
2-Dsections,986
externaldata,237
familytableinstances,230
geometryofasimplified
representation, 1169
models,78
simplified representations, 1169
views,476
Retrieving
lightweight graphicssimplified
representati, 1170
Reusableidentifiers, 1995
Roles
ofmanufacturing components, 1414
Rotate
views,474
Rotationangle
text,483
Roughing step
features,1440
Routing,1801
locations,1799
Ruledsurfaces,2246
Rules
simplified representation, 1175
Run-timemenus,330
S
Sampleapplications, installing, 2200
Save2-Dsections,986
models,78
Scale
externalobjects,2000
view,1216
Scenegraph
definition, 2261
Scopecontrol
defined,1129
Screencoordinate system,221
Scroll
messages, 281
Sections
2-D
addingentities,979
saving,986
allocating, 973
automatic dimensioning, 979
constraints, 974
copying,974
creating
2-D,972
example,986
models,972
definition, 971xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxScroll
messages, 281
Sections
2-D
addingentities,979
saving,986
allocating, 973
automatic dimensioning, 979
constraints, 974
copying,974
creating
2-D,972
example,986
models,972
definition, 971
dimensions, 982
entities,979
errors,985
example,986
mode,974
regenerating, 976
retrieving, 986
saving,986
solving,976
Select3d
compared toProSelection, 2213
mappingsel_type,2213
Selection, 496
boxes
sizeof,2000
data
forexternalobjects,2000
2294 Creo®Parametric TOOLKIT User’sGuideexplodestates,1123
familytableinstances,230
feature,131
interactive, 499
MechanicaItems, 1828
Session
simplified representations, 1167
Setmode
definition, 2261
settinggeometric tolerance,611
Sheetmetal
flatwallfeature
featureelementtree,1296
planarwallfeature
introduction, 1295
Sheets
drawing,1212
Simplified representations
addingitems,1174
creating,1171
deleting,1171
items,1174
extracting information from,1172
modifying, 1173
retrieving
geometry, 1169
rules,1175
session,1167
zones,1176
Singleanimation, 530xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxaddingitems,1174
creating,1171
deleting,1171
items,1174
extracting information from,1172
modifying, 1173
retrieving
geometry, 1169
rules,1175
session,1167
zones,1176
Singleanimation, 530
Single-valued element,750
Size
gatheringby,1177
SkeletonModelFunctions, 1130
Sketchedfeatures
create,989
createwith2Dsections,990
creatingfeatureswith3Dsections,
992
elementtree,988
overview, 988
referenceentitiesanduseedge,992reusingexistingsketches,994
Slantangle
text,483
Slots,234
Solids
accuracy,105
contentsof,92
coordinate system,221
creating,92
displaying, 94
geometry
visiting,173
massproperties, 114
orientation, 474
outline,105
ProSolidBodyDensityGet(), 114
ProSolidBodyMassPropertyGet(),
114
regenerating, 94
transforming coordinates, 224-225
units,107
accessingindividual units,110
accessingsystemsofunits,109
conversion ofmodelstoanew
unitsystem,113
creatinganewsystemofunits,
110
creationofanewunit,113
modifying systemsofunits,109
modifying units,112
retrievingsystemsofunits,108
Solvexxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxconversion ofmodelstoanew
unitsystem,113
creatinganewsystemofunits,
110
creationofanewunit,113
modifying systemsofunits,109
modifying units,112
retrievingsystemsofunits,108
Solve
sections,976
Sources
light,491
Splines
cylindrical splinesurface,2251
representation, 2254
surface,2248
Split
body,126
Start
Index 2295batchanimation, 530
Statuses
ofaCreoParametric process,277
read,131
Stop
applications, 42
Storagesolids
identifying, 1414
Store
externaldata,235
view,476
Strings
wide,65
functionsfor,263
Structure
ofapplications, 2213
Submenus, 327
definition, 2261
Substitute
features,1088
subtract
booleanbodyoperations, 1045
Subtract
body,126
Support
third-party toolmanager,1432
Suppress
feature,137
Surfaces
cylindrical spline,2251
datastructures, 2241
definition, 2261
fillet,2248
generalsurfaceofrevolution, 2245
manufacturing codeexample,1429
NURBS,2250
parametric equations, 187
properties of,487
properties ofmodels,75
renaming
codeexamples, 82
replacement features,871ruled,2246
spline,2248xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmanufacturing codeexample,1429
NURBS,2250
parametric equations, 187
properties of,487
properties ofmodels,75
renaming
codeexamples, 82
replacement features,871ruled,2246
spline,2248
traversing, 2236
types,187
Sweeps
codeexample,1034
creating,1025
elementtree,1026
Symboldefinitions, 1234
Symbolinstances,1234
Symbols
designating, 555
manipulating groups,1265
Synchronous J-LinkApplications,
2033
Synchronous mode
definition, 2261
T
Tables
drawing,1268
family
codeexample,232
Modelitems
fromfamilytableitems,232
objects,229
operations oninstances,230
operations onitems,232
utilities,229
visiting,229
Tabulatedcylinders,2246
Tangencypropagation
flexiblemodeling, 1081
TaskLibraryFunctions
MemoryManagement, 2027
Tessellation, 179
definition, 2261
surface,487
Text
attributes, 483
displaying, 483
2296 Creo®Parametric TOOLKIT User’sGuidefonts,484
messagefiles,282
messagewindow
identifier,468
note,586
styleproperties, 590
styles
ofnotes,589
validating, 484
TheFeatureElementTreeforFillxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2296 Creo®Parametric TOOLKIT User’sGuidefonts,484
messagefiles,282
messagewindow
identifier,468
note,586
styleproperties, 590
styles
ofnotes,589
validating, 484
TheFeatureElementTreeforFill
featureinCreoParametric, 846
TheFeatureElementTreeforMirror
featureinCreoParametric, 841
TheFeatureElementTreeforMove
featureinCreoParametric, 844
TheFeatureElementTreeforSolidify
featureinCreoParametric, 860
TheFeatureElementTreeforThicken
featureinCreoParametric, 858
TheFeatureElementTreeforTrim
featureinCreoParametric, 852
ToolkitDLL
Create,2027
Functions, 2028
TaskLibraries,2027
TOOLKITDLLFunctions
Launch,2028
Tools
auxiliary,1416
contouring, 1416
creating,1416
holemaking
parameters, 1416
milling
parameters for,1416
table
creating,1423
turning
parameters for,1416
types,1415
visiting,1415
Torus,2244Trailfiles,259
Transformations
coordinates ofanassemblymember,
226
coordinates ofsketchedentities,227
definition, 2261
drawingviewtoscreencoordinates,
225
externalobject,1998xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxvisiting,1415
Torus,2244Trailfiles,259
Transformations
coordinates ofanassemblymember,
226
coordinates ofsketchedentities,227
definition, 2261
drawingviewtoscreencoordinates,
225
externalobject,1998
screentodrawingcoordinates, 225
screentowindowcoordinates, 225
solidtoscreencoordinates, 224
inadrawing,225
tocoordinate systemdatum
coordinates, 226
Traversal
assembly, 1115
geometry, 2235
manufacturing components, 1414
part,170
Trianglestrip
definition, 2261
Turningtools
parameters, 1416
Typeofslot
chapter,234
stream,234
U
UDFs,145
uiCmdPriority enum
declaration, 299
UnicodeEcoding
acronym,2171
UnicodeEncoding, 2171
ByteOrderMark,2171
definition, 2171
ExternalInterfaceHandling, 2173
mappingmethods,2171
Necessity, 2173
Pro/ENGINEER Wildfire4.0,2171
Index 2297Transcoding, 2171
Unlock
messages, 46
toolkit
comparison, 2213
toolkitapplication, 44
usesameversionasProENGINEER.,
28
Userattributes
definition, 2261
UserInterface
dialogcomponents
dialogswithmenubars, 445
programming dialogcomponentsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxtoolkit
comparison, 2213
toolkitapplication, 44
usesameversionasProENGINEER.,
28
Userattributes
definition, 2261
UserInterface
dialogcomponents
dialogswithmenubars, 445
programming dialogcomponents
tableinquiryfunctions, 460
resourcefiles
syntax,439
user_initialize() function
addinganewmenubutton,319
changingthecolormap,479
description, 47
user_terminate() function
defined,47
description, 47
user-initialize()
described, 50
User-suppliedmain,55
User’sGuide
documentation
online,23
onlineformat,23
PDFformat,23
Utilities,257
familytable,229
V
Values
featureelement,750
offeatureelements,755
parameter, 210
Vectorsdefinition, 2261
Versionstamps,82
Views
definition, 2261
drawing,1216
creating,1222
listing
example,1220
modifying, 1220
orientation, 474
overlay
definition, 2261
scale,1216
storing,476
Visibility
ofassemblycomponents, 1117
ofmenubuttons,330
Visit
animation frames,529
animation movieframes,531
assemblycomponents, 1115
composite datumcurves,178
coordinate systemdatums,175xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxstoring,476
Visibility
ofassemblycomponents, 1117
ofmenubuttons,330
Visit
animation frames,529
animation movieframes,531
assemblycomponents, 1115
composite datumcurves,178
coordinate systemdatums,175
datumaxes,175
datumcurves,177
datumplanes,176
datumpoints,179
datumsurfaces,176
explodestates,1123
externalobjectreferences, 2004
externalobjects,1996
familytables,229
featuregeometry, 171
features,131
functions
description, 62
geometryobjects,170
layers,84
manufacturing tools,1415
notes,589
processstepfeatures,1756
quilts,176
2298 Creo®Parametric TOOLKIT User’sGuiderelationsets,203
simplified representations, 1172
solidgeometry, 173
windows,473
Visiting
crosssections,244
displayedentities,89
W
Warnings,2006
wchar_t,65
Weld
drawingsymbols,1823
notification callbacks, 1823
symbolnotification types,1823
PRO_DRA WING_WELD_
GROUPIDS_GET, 1823
PRO_DRA WING_WELD_
SYMPATH_GET, 1823
PRO_DRA WING_WELD_
SYMTEXT_GET, 1823
Weldfeatures
readaccessto,788,1822
WHandles
description, 59
Widestrings,65xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPRO_DRA WING_WELD_
GROUPIDS_GET, 1823
PRO_DRA WING_WELD_
SYMPATH_GET, 1823
PRO_DRA WING_WELD_
SYMTEXT_GET, 1823
Weldfeatures
readaccessto,788,1822
WHandles
description, 59
Widestrings,65
checkingyourdeclaration, 66
definition, 2261
functions, 263
manipulating, 66
Widthfactor
text,483
Windowcoordinate system,222
Windowmatrix,474
Windows
accessory, 471
activating, 473
closing,472
creating,472
current,471
definition, 2261deleting,472
flushingdisplaycommands, 474
gettingtheowner,473
identifiers, 468
information
definition, 2261
manipulating, 469
matrix,474
orientation, 474
panandzoommatrix,474
repainting, 470
visiting,473
Workcells
creating,1423
example,1425
features
codeexample,1415
Workspacehandles
description, 59
Write
amessagetotheMessageWindow,
281
familytabletoafile,232
messagetoaninternalbuffer,285
Z
Zones,1176
Index 2299xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx